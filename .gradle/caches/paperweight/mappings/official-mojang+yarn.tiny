tiny	2	0	official	mojang+yarn
c	a	com/mojang/math/Constants
	f	F	a	PI
	f	F	b	RAD_TO_DEG
	f	F	c	DEG_TO_RAD
	f	F	d	EPSILON
c	b	com/mojang/math/FieldsAreNonnullByDefault
c	c	com/mojang/math/Matrix3f
	m	(Lc;)V	<init>	<init>
		p	1		source
	m	(Ld;)V	<init>	<init>
		p	1		matrix
	m	(Lg;)V	<init>	<init>
		p	1		quaternion
	m	()V	a	transpose
	m	(F)V	a	mul
		p	1		scalar
	m	(FF)Lcom/mojang/datafixers/util/Pair;	a	qrGivensQuat
	m	(FFF)Lc;	a	createScaleMatrix
		p	0		x
		p	1		y
		p	2		z
	m	(II)I	a	bufferIndex
		p	0		x
		p	1		y
	m	(IIF)V	a	set
		p	1		x
		p	2		y
		p	3		value
	m	(Lc;)V	a	load
		p	1		source
	m	(Lc;Lg;)V	a	sortSingularValues
		p	0		matrix
		p	1		quaternion
	m	(Lg;)V	a	mul
		p	1		quaternion
	m	(Ljava/nio/FloatBuffer;)V	a	load
		p	1		buf
	m	(Ljava/nio/FloatBuffer;Z)V	a	load
		p	1		buf
		p	2		rowMajor
	m	()Lorg/apache/commons/lang3/tuple/Triple;	b	svdDecompose
	m	(FFF)Lcom/mojang/datafixers/util/Pair;	b	approxGivensQuat
		p	0		upperLeft
		p	1		diagonalAverage
		p	2		lowerRight
	m	(Lc;)V	b	mul
		p	1		other
	m	(Ljava/nio/FloatBuffer;)V	b	loadTransposed
		p	1		buf
	m	(Ljava/nio/FloatBuffer;Z)V	b	store
		p	1		buf
		p	2		rowMajor
	m	()V	c	setIdentity
	m	(Lc;)V	c	add
		p	1		matrix
	m	(Ljava/nio/FloatBuffer;)V	c	store
		p	1		buf
	m	()F	d	adjugateAndDet
	m	(Lc;)V	d	sub
		p	1		matrix
	m	(Ljava/nio/FloatBuffer;)V	d	storeTransposed
		p	1		buf
	m	()F	e	determinant
	m	(Lc;)Lg;	e	stepJacobi
		p	0		matrix
	m	()Z	f	invert
	m	()F	g	trace
	m	()Lc;	h	copy
	f	F	a	m00
	f	F	b	m01
	f	F	c	m02
	f	F	d	m10
	f	F	e	m11
	f	F	f	m12
	f	F	g	m20
	f	F	h	m21
	f	F	i	m22
	f	I	j	ORDER
	f	F	k	G
	f	F	l	CS
	f	F	m	SS
	f	F	n	SQ2
c	d	com/mojang/math/Matrix4f
	m	(Ld;)V	<init>	<init>
		p	1		matrix
	m	(Lg;)V	<init>	<init>
		p	1		quaternion
	m	()Z	a	isInteger
	m	(DFFF)Ld;	a	perspective
		p	0		fov
		p	2		aspectRatio
		p	3		cameraDepth
		p	4		viewDistance
	m	(F)V	a	multiply
		p	1		scalar
	m	(FFF)V	a	multiplyWithTranslation
		p	1		x
		p	2		y
		p	3		z
	m	(FFFF)Ld;	a	orthographic
		p	0		width
		p	1		height
		p	2		nearPlane
		p	3		farPlane
	m	(FFFFFF)Ld;	a	orthographic
		p	0		left
		p	1		right
		p	2		bottom
		p	3		top
		p	4		nearPlane
		p	5		farPlane
	m	(II)I	a	bufferIndex
		p	0		x
		p	1		y
	m	(Ld;)V	a	load
		p	1		source
	m	(Lg;)V	a	multiply
		p	1		quaternion
	m	(Ljava/nio/FloatBuffer;)V	a	load
		p	1		buf
	m	(Ljava/nio/FloatBuffer;Z)V	a	load
		p	1		buf
		p	2		rowMajor
	m	(Lk;)V	a	translate
		p	1		vector
	m	()V	b	setIdentity
	m	(F)Z	b	isInteger
		p	0		value
	m	(FFF)Ld;	b	createScaleMatrix
		p	0		x
		p	1		y
		p	2		z
	m	(Ld;)V	b	multiply
		p	1		matrix
	m	(Ljava/nio/FloatBuffer;)V	b	loadTransposed
		p	1		buf
	m	(Ljava/nio/FloatBuffer;Z)V	b	store
		p	1		buf
		p	2		rowMajor
	m	()F	c	adjugateAndDet
	m	(FFF)Ld;	c	createTranslateMatrix
		p	0		x
		p	1		y
		p	2		z
	m	(Ld;)V	c	add
		p	1		matrix
	m	(Ljava/nio/FloatBuffer;)V	c	store
		p	1		buf
	m	()F	d	determinant
	m	(Ld;)V	d	subtract
		p	1		matrix
	m	(Ljava/nio/FloatBuffer;)V	d	storeTransposed
		p	1		buf
	m	()V	e	transpose
	m	()Z	f	invert
	m	()F	g	trace
	m	()Ld;	h	copy
	f	F	a	m00
	f	F	b	m01
	f	F	c	m02
	f	F	d	m03
	f	F	e	m10
	f	F	f	m11
	f	F	g	m12
	f	F	h	m13
	f	F	i	m20
	f	F	j	m21
	f	F	k	m22
	f	F	l	m23
	f	F	m	m30
	f	F	n	m31
	f	F	o	m32
	f	F	p	m33
	f	I	q	ORDER
c	e	com/mojang/math/MethodsReturnNonnullByDefault
c	f	com/mojang/math/OctahedralGroup
	m	(Ljava/lang/String;ILjava/lang/String;Lh;ZZZ)V	<init>	<init>
		p	3		name
		p	4		axisTransformation
		p	5		flipX
		p	6		flipY
		p	7		flipZ
	m	()Lf;	a	inverse
	m	(I)[Lf;	a	lambda$static$5
	m	(Lf;)Lf;	a	compose
		p	1		transformation
	m	(Lf;Lf;)Z	a	lambda$static$3
	m	(Lgy$a;)Z	a	inverts
		p	1		axis
	m	(Lgy;)Lgy;	a	rotate
		p	1		direction
	m	(Lha;)Lha;	a	rotate
		p	1		orientation
	m	([[Lf;)V	a	lambda$static$2
	m	()Lc;	b	transformation
	m	(Lf;)Lf;	b	lambda$static$4
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lf;)Lf;	c	lambda$static$1
	m	()Lit/unimi/dsi/fastutil/booleans/BooleanList;	d	packInversions
	m	(Lf;)Lcom/mojang/datafixers/util/Pair;	d	lambda$static$0
	m	()[Lf;	e	$values
	f	Lf;	A	INVERT_Y
	f	Lf;	B	INVERT_Z
	f	Lf;	C	ROT_60_REF_NNN
	f	Lf;	D	ROT_60_REF_NNP
	f	Lf;	E	ROT_60_REF_NPN
	f	Lf;	F	ROT_60_REF_NPP
	f	Lf;	G	ROT_60_REF_PNN
	f	Lf;	H	ROT_60_REF_PNP
	f	Lf;	I	ROT_60_REF_PPN
	f	Lf;	J	ROT_60_REF_PPP
	f	Lf;	K	SWAP_XY
	f	Lf;	L	SWAP_YZ
	f	Lf;	M	SWAP_XZ
	f	Lf;	N	SWAP_NEG_XY
	f	Lf;	O	SWAP_NEG_YZ
	f	Lf;	P	SWAP_NEG_XZ
	f	Lf;	Q	ROT_90_REF_X_NEG
	f	Lf;	R	ROT_90_REF_X_POS
	f	Lf;	S	ROT_90_REF_Y_NEG
	f	Lf;	T	ROT_90_REF_Y_POS
	f	Lf;	U	ROT_90_REF_Z_NEG
	f	Lf;	V	ROT_90_REF_Z_POS
	f	Lc;	X	transformation
	f	Ljava/lang/String;	Y	name
	f	Ljava/util/Map;	Z	rotatedDirections
	f	Lf;	a	IDENTITY
	f	Z	aa	invertX
	f	Z	ab	invertY
	f	Z	ac	invertZ
	f	Lh;	ad	permutation
	f	[[Lf;	ae	cayleyTable
	f	[Lf;	af	inverseTable
	f	[Lf;	ag	$VALUES
	f	Lf;	b	ROT_180_FACE_XY
	f	Lf;	c	ROT_180_FACE_XZ
	f	Lf;	d	ROT_180_FACE_YZ
	f	Lf;	e	ROT_120_NNN
	f	Lf;	f	ROT_120_NNP
	f	Lf;	g	ROT_120_NPN
	f	Lf;	h	ROT_120_NPP
	f	Lf;	i	ROT_120_PNN
	f	Lf;	j	ROT_120_PNP
	f	Lf;	k	ROT_120_PPN
	f	Lf;	l	ROT_120_PPP
	f	Lf;	m	ROT_180_EDGE_XY_NEG
	f	Lf;	n	ROT_180_EDGE_XY_POS
	f	Lf;	o	ROT_180_EDGE_XZ_NEG
	f	Lf;	p	ROT_180_EDGE_XZ_POS
	f	Lf;	q	ROT_180_EDGE_YZ_NEG
	f	Lf;	r	ROT_180_EDGE_YZ_POS
	f	Lf;	s	ROT_90_X_NEG
	f	Lf;	t	ROT_90_X_POS
	f	Lf;	u	ROT_90_Y_NEG
	f	Lf;	v	ROT_90_Y_POS
	f	Lf;	w	ROT_90_Z_NEG
	f	Lf;	x	ROT_90_Z_POS
	f	Lf;	y	INVERSION
	f	Lf;	z	INVERT_X
c	f$1	com/mojang/math/OctahedralGroup$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	g	com/mojang/math/Quaternion
	m	(FFFF)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		w
	m	(FFFZ)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		degrees
	m	(Lg;)V	<init>	<init>
		p	1		other
	m	(Lk;FZ)V	<init>	<init>
		p	1		axis
		p	2		rotationAngle
		p	3		degrees
	m	()Lk;	a	toXYZ
	m	(F)V	a	mul
		p	1		scale
	m	(FFF)Lg;	a	fromYXZ
		p	0		x
		p	1		y
		p	2		z
	m	(FFFF)V	a	set
		p	1		x
		p	2		y
		p	3		z
		p	4		w
	m	(Lg;)V	a	mul
		p	1		other
	m	(Lg;F)V	a	slerp
	m	(Lk;)Lg;	a	fromXYZDegrees
		p	0		vector
	m	()Lk;	b	toXYZDegrees
	m	(F)F	b	cos
		p	0		value
	m	(FFF)Lg;	b	fromXYZ
		p	0		x
		p	1		y
		p	2		z
	m	(Lk;)Lg;	b	fromXYZ
		p	0		vector
	m	()Lk;	c	toYXZ
	m	(F)F	c	sin
		p	0		value
	m	()Lk;	d	toYXZDegrees
	m	()F	e	i
	m	()F	f	j
	m	()F	g	k
	m	()F	h	r
	m	()V	i	conj
	m	()V	j	normalize
	m	()Lg;	k	copy
	f	Lg;	a	ONE
	f	F	b	i
	f	F	c	j
	f	F	d	k
	f	F	e	r
c	h	com/mojang/math/SymmetricGroup3
	m	(Ljava/lang/String;IIII)V	<init>	<init>
		p	3		xMapping
		p	4		yMapping
		p	5		zMapping
	m	()Lc;	a	transformation
	m	(I)I	a	permutation
		p	1		oldAxis
	m	(Lh;)Lh;	a	compose
		p	1		transformation
	m	([ILh;)Z	a	lambda$static$0
	m	([[Lh;)V	a	lambda$static$1
	m	()[Lh;	b	$values
	f	Lh;	a	P123
	f	Lh;	b	P213
	f	Lh;	c	P132
	f	Lh;	d	P231
	f	Lh;	e	P312
	f	Lh;	f	P321
	f	[I	g	permutation
	f	Lc;	h	transformation
	f	I	i	ORDER
	f	[[Lh;	j	cayleyTable
	f	[Lh;	k	$VALUES
c	i	com/mojang/math/Transformation
	m	(Ld;)V	<init>	<init>
		p	1		matrix
	m	(Lk;Lg;Lk;Lg;)V	<init>	<init>
		p	1		translation
		p	2		rotation2
		p	3		scale
		p	4		rotation1
	m	()Li;	a	identity
	m	(Ld;)Lcom/mojang/datafixers/util/Pair;	a	toAffine
		p	0		affineTransform
	m	(Li;)Li;	a	compose
		p	1		other
	m	(Li;F)Li;	a	slerp
	m	(Lk;Lg;Lk;Lg;)Ld;	a	compose
		p	0		translation
		p	1		rotation2
		p	2		scale
		p	3		rotation1
	m	()Li;	b	inverse
	m	()Ld;	c	getMatrix
	m	()Lk;	d	getTranslation
	m	()Lg;	e	getLeftRotation
	m	()Lk;	f	getScale
	m	()Lg;	g	getRightRotation
	m	()V	h	ensureDecomposed
	m	()Li;	i	lambda$static$0
	f	Ld;	a	matrix
	f	Z	b	decomposed
	f	Lk;	c	translation
	f	Lg;	d	leftRotation
	f	Lk;	e	scale
	f	Lg;	f	rightRotation
	f	Li;	g	IDENTITY
c	j	com/mojang/math/Vector3d
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(D)V	a	scale
		p	1		amount
	m	(DDD)V	a	set
		p	1		x
		p	3		y
		p	5		z
	m	(Lj;)V	a	set
		p	1		vector3d
	m	(Lj;)V	b	add
		p	1		vector3d
	f	D	a	x
	f	D	b	y
	f	D	c	z
c	k	com/mojang/math/Vector3f
	m	(FFF)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Ldvt;)V	<init>	<init>
		p	1		other
	m	(Ll;)V	<init>	<init>
		p	1		vec
	m	()F	a	x
	m	(F)V	a	mul
		p	1		scale
	m	(FF)V	a	clamp
		p	1		min
		p	2		max
	m	(FFF)V	a	mul
		p	1		x
		p	2		y
		p	3		z
	m	(Lc;)V	a	transform
		p	1		matrix
	m	(Lg;)V	a	transform
		p	1		rotation
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V	a	map
		p	1		function
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		vec
	m	(Lk;)V	a	load
		p	1		vec
	m	(Lk;F)V	a	lerp
		p	1		vector
		p	2		delta
	m	(Lk;Lk;)V	a	clamp
		p	1		min
		p	2		max
	m	()F	b	y
	m	(F)Lg;	b	rotation
		p	1		angle
	m	(FFF)V	b	set
		p	1		x
		p	2		y
		p	3		z
	m	(Ljava/util/List;)Lk;	b	lambda$static$0
		p	0		vec
	m	(Lk;)V	b	add
		p	1		vector
	m	()F	c	z
	m	(F)Lg;	c	rotationDegrees
		p	1		angle
	m	(FFF)V	c	add
		p	1		x
		p	2		y
		p	3		z
	m	(Lk;)V	c	sub
		p	1		other
	m	()Z	d	normalize
	m	(Lk;)F	d	dot
		p	1		other
	m	()Lk;	e	copy
	m	(Lk;)V	e	cross
		p	1		vector
	m	(Lk;)Ljava/util/List;	f	lambda$static$2
		p	0		vec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lk;	b	XN
	f	Lk;	c	XP
	f	Lk;	d	YN
	f	Lk;	e	YP
	f	Lk;	f	ZN
	f	Lk;	g	ZP
	f	Lk;	h	ZERO
	f	F	i	x
	f	F	j	y
	f	F	k	z
c	l	com/mojang/math/Vector4f
	m	(FFFF)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		w
	m	(Lk;)V	<init>	<init>
		p	1		vector
	m	()F	a	x
	m	(F)V	a	mul
		p	1		value
	m	(FFFF)V	a	set
		p	1		x
		p	2		y
		p	3		z
		p	4		w
	m	(Ld;)V	a	transform
		p	1		matrix
	m	(Lg;)V	a	transform
		p	1		rotation
	m	(Lk;)V	a	mul
		p	1		vector
	m	(Ll;)F	a	dot
		p	1		other
	m	(Ll;F)V	a	lerp
		p	1		to
		p	2		delta
	m	()F	b	y
	m	(FFFF)V	b	add
		p	1		x
		p	2		y
		p	3		z
		p	4		w
	m	()F	c	z
	m	()F	d	w
	m	()Z	e	normalize
	m	()V	f	perspectiveDivide
	f	F	a	x
	f	F	b	y
	f	F	c	z
	f	F	d	w
c	m	com/mojang/math/package-info
c	n	net/minecraft/BlockUtil
	m	(Lcfg;Lgt;Lciw;Lgy;Lciw;)Ljava/util/Optional;	a	getTopConnectedBlock
		p	0		world
		p	1		pos
		p	2		intermediateBlock
		p	3		direction
		p	4		endBlock
	m	(Lgt;Lgy$a;ILgy$a;ILjava/util/function/Predicate;)Ln$a;	a	getLargestRectangleAround
		p	0		center
		p	1		primaryAxis
		p	2		primaryMaxBlocks
		p	3		secondaryAxis
		p	4		secondaryMaxBlocks
		p	5		predicate
	m	(Ljava/util/function/Predicate;Lgt$a;Lgy;I)I	a	getLimit
		p	0		predicate
		p	1		pos
		p	2		direction
		p	3		max
	m	([I)Lcom/mojang/datafixers/util/Pair;	a	getMaxRectangleLocation
		p	0		heights
c	n$a	net/minecraft/BlockUtil$FoundRectangle
	m	(Lgt;II)V	<init>	<init>
		p	1		lowerLeft
		p	2		width
		p	3		height
	f	Lgt;	a	minCorner
	f	I	b	axis1Size
	f	I	c	axis2Size
c	n$b	net/minecraft/BlockUtil$IntBounds
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	f	I	a	min
	f	I	b	max
c	o	net/minecraft/CharPredicate
	m	(C)Z	a	lambda$negate$1
		p	1		c
	m	(Lo;C)Z	a	lambda$or$2
		p	2		c
	m	(Lo;)Lo;	and	and
		p	1		predicate
	m	(Lo;C)Z	b	lambda$and$0
		p	2		c
	m	(Lo;)Lo;	or	or
		p	1		predicate
	m	(C)Z	test	test
		p	1		c
c	p	net/minecraft/ChatFormatting
	m	(Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		colorIndex
		p	6		colorValue
	m	(Ljava/lang/String;ILjava/lang/String;CZ)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
	m	(Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
		p	6		colorIndex
		p	7		colorValue
	m	()C	a	getChar
	m	(C)Lp;	a	getByCode
		p	0		code
	m	(I)Lp;	a	getById
		p	0		colorIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripFormatting
		p	0		string
	m	(Lp;)Lp;	a	lambda$static$1
		p	0		f
	m	(ZZ)Ljava/util/Collection;	a	getNames
		p	0		colors
		p	1		modifiers
	m	()I	b	getId
	m	(Ljava/lang/String;)Lp;	b	getByName
		p	0		name
	m	(Lp;)Ljava/lang/String;	b	lambda$static$0
		p	0		f
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/lang/String;)Ljava/lang/String;	c	cleanName
		p	0		name
	m	()Z	d	isFormat
	m	()Z	e	isColor
	m	()Ljava/lang/Integer;	f	getColor
	m	()Ljava/lang/String;	g	getName
	m	()[Lp;	h	$values
	f	Ljava/lang/String;	A	name
	f	C	B	code
	f	Z	C	isFormat
	f	Ljava/lang/String;	D	toString
	f	I	E	id
	f	Ljava/lang/Integer;	F	color
	f	[Lp;	G	$VALUES
	f	Lp;	a	BLACK
	f	Lp;	b	DARK_BLUE
	f	Lp;	c	DARK_GREEN
	f	Lp;	d	DARK_AQUA
	f	Lp;	e	DARK_RED
	f	Lp;	f	DARK_PURPLE
	f	Lp;	g	GOLD
	f	Lp;	h	GRAY
	f	Lp;	i	DARK_GRAY
	f	Lp;	j	BLUE
	f	Lp;	k	GREEN
	f	Lp;	l	AQUA
	f	Lp;	m	RED
	f	Lp;	n	LIGHT_PURPLE
	f	Lp;	o	YELLOW
	f	Lp;	p	WHITE
	f	Lp;	q	OBFUSCATED
	f	Lp;	r	BOLD
	f	Lp;	s	STRIKETHROUGH
	f	Lp;	t	UNDERLINE
	f	Lp;	u	ITALIC
	f	Lp;	v	RESET
	f	Lcom/mojang/serialization/Codec;	w	CODEC
	f	C	x	PREFIX_CODE
	f	Ljava/util/Map;	y	FORMATTING_BY_NAME
	f	Ljava/util/regex/Pattern;	z	STRIP_FORMATTING_PATTERN
c	q	net/minecraft/CrashReport
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	()Ljava/lang/String;	a	getTitle
	m	(Ljava/io/File;)Z	a	saveToFile
		p	1		file
	m	(Ljava/lang/String;)Lr;	a	addCategory
		p	1		name
	m	(Ljava/lang/String;I)Lr;	a	addCategory
		p	1		name
		p	2		ignoredStackTraceCallCount
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lq;	a	forThrowable
		p	0		cause
		p	1		title
	m	()Ljava/lang/Throwable;	b	getException
	m	()Ljava/lang/String;	c	getDetails
	m	()Ljava/lang/String;	d	getExceptionMessage
	m	()Ljava/lang/String;	e	getFriendlyReport
	m	()Ljava/io/File;	f	getSaveFile
	m	()Lac;	g	getSystemReport
	m	()V	h	preload
	m	()Ljava/lang/String;	i	getErrorComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	title
	f	Ljava/lang/Throwable;	c	exception
	f	Ljava/util/List;	d	details
	f	Ljava/io/File;	e	saveFile
	f	Z	f	trackingStackTrace
	f	[Ljava/lang/StackTraceElement;	g	uncategorizedStackTrace
	f	Lac;	h	systemReport
c	r	net/minecraft/CrashReportCategory
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		title
	m	()[Ljava/lang/StackTraceElement;	a	getStacktrace
	m	(I)I	a	fillInStackTrace
		p	1		ignoredCallCount
	m	(Lcgc;DDD)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Lcgc;III)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Lcgc;Lgt;)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		pos
	m	(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z	a	validateStackTrace
		p	1		prev
		p	2		next
	m	(Ljava/lang/String;Ljava/lang/Object;)Lr;	a	setDetail
		p	1		name
		p	2		detail
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	setDetailError
		p	1		name
		p	2		throwable
	m	(Ljava/lang/String;Ls;)Lr;	a	setDetail
		p	1		name
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Lr;Lcgc;Lgt;Lcur;)V	a	populateBlockDetails
		p	0		element
		p	1		world
		p	2		pos
		p	3		state
	m	(I)V	b	trimStacktrace
		p	1		callCount
	m	(Lcgc;Lgt;)Ljava/lang/String;	b	lambda$populateBlockDetails$0
	f	Ljava/lang/String;	a	title
	f	Ljava/util/List;	b	entries
	f	[Ljava/lang/StackTraceElement;	c	stackTrace
c	r$a	net/minecraft/CrashReportCategory$Entry
	m	(Ljava/lang/String;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		detail
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/lang/String;	b	getValue
	f	Ljava/lang/String;	a	key
	f	Ljava/lang/String;	b	value
c	s	net/minecraft/CrashReportDetail
c	t	net/minecraft/DefaultUncaughtExceptionHandler
	f	Lorg/slf4j/Logger;	a	logger
c	u	net/minecraft/DefaultUncaughtExceptionHandlerWithName
	f	Lorg/slf4j/Logger;	a	logger
c	v	net/minecraft/DetectedVersion
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	()Lae;	a	tryDetectVersion
	m	()Ldqn;	b	getDataVersion
	f	Lae;	a	BUILT_IN
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	id
	f	Ljava/lang/String;	d	name
	f	Z	e	stable
	f	Ldqn;	f	worldVersion
	f	I	g	protocolVersion
	f	I	h	resourcePackVersion
	f	I	i	dataPackVersion
	f	Ljava/util/Date;	j	buildTime
	f	Ljava/lang/String;	k	releaseTarget
c	w	net/minecraft/FieldsAreNonnullByDefault
c	x	net/minecraft/FileUtil
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFullResourcePath
		p	0		path
	m	(Ljava/nio/file/Path;)Z	a	isPathNormalized
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	findAvailableName
		p	0		path
		p	1		name
		p	2		extension
	m	(Ljava/lang/String;)Ljava/lang/String;	b	normalizeResourcePath
		p	0		path
	m	(Ljava/nio/file/Path;)Z	b	isPathPortable
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	createPathToResource
		p	0		path
		p	1		resourceName
		p	2		extension
	f	Ljava/util/regex/Pattern;	a	COPY_COUNTER_PATTERN
	f	I	b	MAX_FILE_NAME
	f	Ljava/util/regex/Pattern;	c	RESERVED_WINDOWS_FILENAMES
c	y	net/minecraft/MethodsReturnNonnullByDefault
c	z	net/minecraft/ReportedException
	m	(Lq;)V	<init>	<init>
		p	1		report
	m	()Lq;	a	getReport
	f	Lq;	a	report
c	aa	net/minecraft/ResourceLocationException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		throwable
c	ab	net/minecraft/SharedConstants
	m	()V	a	tryDetectVersion
	m	(C)Z	a	isAllowedChatCharacter
		p	0		chr
	m	(Lae;)V	a	setVersion
		p	0		gameVersion
	m	(Lcfh;)Z	a	debugVoidTerrain
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterText
		p	0		s
	m	()Lae;	b	getCurrentVersion
	m	()I	c	getProtocolVersion
	m	()V	d	enableDataFixerOptimizations
	f	Z	A	DEBUG_COLLISION
	f	Z	B	DEBUG_SHAPES
	f	Z	C	DEBUG_NEIGHBORSUPDATE
	f	Z	D	DEBUG_STRUCTURES
	f	Z	E	DEBUG_LIGHT
	f	Z	F	DEBUG_WORLDGENATTEMPT
	f	Z	G	DEBUG_SOLID_FACE
	f	Z	H	DEBUG_CHUNKS
	f	Z	I	DEBUG_GAME_EVENT_LISTENERS
	f	Z	J	DEBUG_DUMP_TEXTURE_ATLAS
	f	Z	K	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	f	Z	L	DEBUG_STRUCTURE_EDIT_MODE
	f	Z	M	DEBUG_SAVE_STRUCTURES_AS_SNBT
	f	Z	N	DEBUG_SYNCHRONOUS_GL_LOGS
	f	Z	O	DEBUG_VERBOSE_SERVER_EVENTS
	f	Z	P	DEBUG_NAMED_RUNNABLES
	f	Z	Q	DEBUG_GOAL_SELECTOR
	f	Z	R	DEBUG_VILLAGE_SECTIONS
	f	Z	S	DEBUG_BRAIN
	f	Z	T	DEBUG_BEES
	f	Z	U	DEBUG_RAIDS
	f	Z	V	DEBUG_BLOCK_BREAK
	f	Z	W	DEBUG_RESOURCE_LOAD_TIMES
	f	Z	X	DEBUG_MONITOR_TICK_TIMES
	f	Z	Y	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	f	Z	Z	DEBUG_DONT_SAVE_WORLD
	f	I	aA	FAKE_MS_LATENCY
	f	I	aB	FAKE_MS_JITTER
	f	Lio/netty/util/ResourceLeakDetector$Level;	aC	NETTY_LEAK_DETECTION
	f	Z	aD	COMMAND_STACK_TRACES
	f	Z	aE	DEBUG_WORLD_RECREATE
	f	Z	aF	DEBUG_SHOW_SERVER_DEBUG_VALUES
	f	Z	aG	DEBUG_STORE_CHUNK_STACKTRACES
	f	Z	aH	DEBUG_FEATURE_COUNT
	f	J	aI	MAXIMUM_TICK_TIME_NANOS
	f	Z	aJ	CHECK_DATA_FIXER_SCHEMA
	f	Z	aK	IS_RUNNING_IN_IDE
	f	Lamo;	aL	DATAFIXER_OPTIMIZATION_OPTION
	f	I	aM	WORLD_RESOLUTION
	f	I	aN	MAX_CHAT_LENGTH
	f	I	aO	MAX_COMMAND_LENGTH
	f	I	aP	MAX_CHAINED_NEIGHBOR_UPDATES
	f	[C	aQ	ILLEGAL_FILE_CHARACTERS
	f	I	aR	TICKS_PER_SECOND
	f	I	aS	TICKS_PER_MINUTE
	f	I	aT	TICKS_PER_GAME_DAY
	f	F	aU	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	f	F	aV	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	f	F	aW	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	f	I	aX	SNAPSHOT_PROTOCOL_BIT
	f	Lae;	aY	CURRENT_VERSION
	f	Z	a	SNAPSHOT
	f	Z	aa	DEBUG_LARGE_DRIPSTONE
	f	Z	ab	DEBUG_PACKET_SERIALIZATION
	f	Z	ac	DEBUG_CARVERS
	f	Z	ad	DEBUG_ORE_VEINS
	f	Z	ae	DEBUG_SCULK_CATALYST
	f	Z	af	DEBUG_BYPASS_REALMS_VERSION_CHECK
	f	Z	ag	DEBUG_IGNORE_LOCAL_MOB_CAP
	f	Z	ah	DEBUG_SMALL_SPAWN
	f	Z	ai	DEBUG_DISABLE_LIQUID_SPREADING
	f	Z	aj	DEBUG_AQUIFERS
	f	Z	ak	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	f	Z	al	debugGenerateSquareTerrainWithoutNoise
	f	Z	am	debugGenerateStripedTerrainWithoutNoise
	f	Z	an	DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	f	Z	ao	DEBUG_DISABLE_FLUID_GENERATION
	f	Z	ap	DEBUG_DISABLE_AQUIFERS
	f	Z	aq	DEBUG_DISABLE_SURFACE
	f	Z	ar	DEBUG_DISABLE_CARVERS
	f	Z	as	DEBUG_DISABLE_STRUCTURES
	f	Z	at	DEBUG_DISABLE_FEATURES
	f	Z	au	DEBUG_DISABLE_ORE_VEINS
	f	Z	av	DEBUG_DISABLE_BLENDING
	f	Z	aw	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	f	I	ax	DEFAULT_MINECRAFT_PORT
	f	Z	ay	INGAME_DEBUG_OUTPUT
	f	Z	az	DEBUG_SUBTITLES
	f	I	b	WORLD_VERSION
	f	Ljava/lang/String;	c	SERIES
	f	Ljava/lang/String;	d	VERSION_STRING
	f	Ljava/lang/String;	e	RELEASE_TARGET
	f	I	f	RELEASE_NETWORK_PROTOCOL_VERSION
	f	I	g	SNAPSHOT_NETWORK_PROTOCOL_VERSION
	f	I	h	SNBT_NAG_VERSION
	f	Z	i	THROW_ON_TASK_FAILURE
	f	I	j	RESOURCE_PACK_FORMAT
	f	I	k	DATA_PACK_FORMAT
	f	Ljava/lang/String;	l	DATA_VERSION_TAG
	f	Z	m	CNC_PART_2_ITEMS_AND_BLOCKS
	f	Z	n	USE_NEW_RENDERSYSTEM
	f	Z	o	MULTITHREADED_RENDERING
	f	Z	p	FIX_TNT_DUPE
	f	Z	q	FIX_SAND_DUPE
	f	Z	r	USE_DEBUG_FEATURES
	f	Z	s	DEBUG_OPEN_INCOMPATIBLE_WORLDS
	f	Z	t	DEBUG_ALLOW_LOW_SIM_DISTANCE
	f	Z	u	DEBUG_HOTKEYS
	f	Z	v	DEBUG_UI_NARRATION
	f	Z	w	DEBUG_RENDER
	f	Z	x	DEBUG_PATHFINDING
	f	Z	y	DEBUG_WATER
	f	Z	z	DEBUG_HEIGHTMAP
c	ab$1	net/minecraft/SharedConstants$1
	f	[I	a	$SwitchMap$net$minecraft$util$datafix$DataFixerOptimizationOption
c	ac	net/minecraft/SystemReport
	m	()Ljava/lang/String;	a	toLineSeparatedString
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	ignoreErrors
		p	1		name
		p	2		adder
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setDetail
		p	1		name
		p	2		value
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	a	setDetail
		p	1		name
		p	2		valueSupplier
	m	(Ljava/lang/StringBuilder;)V	a	appendToCrashReportString
		p	1		stringBuilder
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$appendToCrashReportString$20
		p	1		name
		p	2		value
	m	(Ljava/util/List;)V	a	putPhysicalMemory
		p	1		memories
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$toLineSeparatedString$21
		p	0		entry
	m	(Loshi/SystemInfo;)V	a	putHardware
		p	1		systemInfo
	m	(Loshi/hardware/CentralProcessor$ProcessorIdentifier;)Ljava/lang/String;	a	lambda$putProcessor$16
	m	(Loshi/hardware/CentralProcessor;)V	a	putProcessor
		p	1		centralProcessor
	m	(Loshi/hardware/GlobalMemory;)V	a	putMemory
		p	1		globalMemory
	m	(Loshi/hardware/GraphicsCard;)Ljava/lang/String;	a	lambda$putGraphics$15
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	a	lambda$putHardware$6
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	a	lambda$putPhysicalMemory$8
	m	(Loshi/hardware/VirtualMemory;)V	a	putVirtualMemory
		p	1		virtualMemory
	m	()Ljava/lang/String;	b	lambda$new$3
	m	(Ljava/util/List;)V	b	putGraphics
		p	1		graphicsCards
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	b	lambda$putProcessor$19
	m	(Loshi/hardware/GlobalMemory;)V	b	lambda$putMemory$14
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	b	lambda$putHardware$5
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	b	lambda$putPhysicalMemory$7
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	b	lambda$putVirtualMemory$12
	m	()V	c	lambda$new$2
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	c	lambda$putProcessor$18
	m	(Loshi/hardware/GlobalMemory;)V	c	lambda$putMemory$13
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	c	lambda$putHardware$4
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	c	lambda$putVirtualMemory$11
	m	()Ljava/lang/String;	d	lambda$new$1
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	d	lambda$putProcessor$17
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	d	lambda$putVirtualMemory$10
	m	()Ljava/lang/String;	e	lambda$new$0
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	e	lambda$putVirtualMemory$9
	f	J	a	BYTES_PER_MEBIBYTE
	f	J	b	ONE_GIGA
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	OPERATING_SYSTEM
	f	Ljava/lang/String;	e	JAVA_VERSION
	f	Ljava/lang/String;	f	JAVA_VM_VERSION
	f	Ljava/util/Map;	g	entries
c	ad	net/minecraft/Util
	m	()Ljava/util/stream/Collector;	a	toMap
	m	(ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z	a	runWithRetries
		p	0		retries
		p	1		taskName
		p	2		tasks
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	a	fetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Lcvu;Ljava/lang/Object;)Ljava/lang/String;	a	getPropertyName
		p	0		property
		p	1		value
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lalu;)Ljava/util/List;	a	shuffledCopy
		p	0		list
		p	1		random
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V	a	safeReplaceFile
		p	0		current
		p	1		newFile
		p	2		backup
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V	a	safeReplaceOrMoveFile
		p	0		current
		p	1		newPath
		p	2		backup
		p	3		noRestoreOnFail
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
		p	0		object
		p	1		initializer
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	mapNullable
		p	0		value
		p	1		mapper
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	mapNullable
		p	0		value
		p	1		mapper
		p	2		other
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$makeIoExecutor$4
		p	0		runnable
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	name
		p	0		runnable
		p	1		messageSupplier
	m	(Ljava/lang/String;)V	a	logAndPauseIfInIde
		p	0		message
	m	(Ljava/lang/String;II)I	a	offsetByCodepoints
		p	0		string
		p	1		cursor
		p	2		delta
	m	(Ljava/lang/String;Laaj;)Ljava/lang/String;	a	makeDescriptionId
		p	0		type
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		task
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	logAndPauseIfInIde
		p	0		message
		p	1		throwable
	m	(Ljava/lang/String;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;	a	lambda$makeExecutor$3
		p	1		forkJoinPool
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	prefix
		p	0		prefix
		p	1		consumer
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		supplier
	m	(Ljava/lang/String;Lo;)Ljava/lang/String;	a	sanitizeName
		p	0		string
		p	1		predicate
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	onThreadException
		p	0		thread
		p	1		t
	m	(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;	a	failedFuture
		p	0		throwable
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createDeleter
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createRenamer
		p	0		src
		p	1		dest
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	safeReplaceFile
		p	0		current
		p	1		newPath
		p	2		backup
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	a	safeReplaceOrMoveFile
		p	0		current
		p	1		newPath
		p	2		backup
		p	3		noRestoreOnFail
	m	(Ljava/nio/file/spi/FileSystemProvider;)Z	a	lambda$static$0
		p	0		fileSystemProvider
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lastOf
		p	0		list
	m	(Ljava/util/List;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		list
		p	1		length
	m	(Ljava/util/List;Lalu;)Ljava/lang/Object;	a	getRandom
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	a	lambda$fallibleSequence$12
		p	1		void_
	m	(Ljava/util/List;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Throwable;)V	a	lambda$sequenceFailFastAndCancel$9
		p	2		throwable
	m	(Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fallibleSequence
		p	0		futures
		p	1		exceptionHandler
	m	(Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction;	a	createIndexLookup
		p	0		values
		p	1		mapCreator
	m	(Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$fallibleSequence$11
		p	3		future
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifElse
		p	0		optional
		p	1		presentAction
		p	2		elseAction
	m	(Ljava/util/concurrent/ExecutorService;)V	a	shutdownExecutor
		p	0		service
	m	(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	memoize
		p	0		biFunction
	m	(Ljava/util/function/Consumer;)V	a	setPause
		p	0		missingBreakpointHandler
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$prefix$13
		p	2		string
	m	(Ljava/util/function/Consumer;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$fallibleSequence$10
		p	3		value
		p	4		throwable
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	memoize
		p	0		function
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object;	a	blockUntilDone
		p	0		resultFactory
		p	1		donePredicate
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
		p	0		factory
	m	(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	name
		p	0		supplier
		p	1		messageSupplier
	m	(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		stream
		p	1		length
	m	(Ljava/util/stream/IntStream;Lalu;)Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Ljava/util/stream/Stream;Lalu;)Ljava/util/List;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Lo;I)Ljava/lang/String;	a	lambda$sanitizeName$14
		p	1		charCode
	m	([ILalu;)I	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/lang/Object;Lalu;)Ljava/lang/Object;	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/util/function/BooleanSupplier;)Z	a	executeInSequence
		p	0		tasks
	m	()J	b	getMillis
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	b	doFetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lalu;)V	b	shuffle
		p	0		list
		p	1		random
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	findPreviousInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;	b	makeExecutor
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	b	lambda$wrapThreadWithTaskName$5
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object;	b	lambda$wrapThreadWithTaskName$6
	m	(Ljava/lang/Throwable;)V	b	throwAsRuntime
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	b	createFileDeletedCheck
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	copyBetweenDirs
		p	0		src
		p	1		dest
		p	2		toCopy
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	b	sequence
		p	0		futures
	m	(Ljava/util/List;Lalu;)Ljava/util/Optional;	b	getRandomSafe
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	b	lambda$sequence$8
		p	1		void_
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	blockUntilDone
		p	0		resultFactory
	m	([Ljava/lang/Object;Lalu;)Ljava/util/List;	b	shuffledCopy
		p	0		array
		p	1		random
	m	()J	c	getNanos
	m	(Ljava/lang/String;)V	c	doPause
		p	0		message
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	c	pauseInIde
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	c	createFileCreatedCheck
		p	0		path
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	c	sequenceFailFast
		p	0		futures
	m	()J	d	getEpochMillis
	m	(Ljava/lang/String;)Z	d	lambda$getVmArguments$7
		p	0		runtimeArg
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	d	describeError
		p	0		t
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	d	sequenceFailFastAndCancel
		p	0		futures
	m	()Ljava/util/concurrent/ExecutorService;	e	bootstrapExecutor
	m	(Ljava/lang/String;)V	e	lambda$static$2
		p	0		message
	m	(Ljava/util/List;)Ljava/util/function/ToIntFunction;	e	createIndexLookup
		p	0		values
	m	()Ljava/util/concurrent/ExecutorService;	f	backgroundExecutor
	m	()Ljava/util/concurrent/ExecutorService;	g	ioPool
	m	()V	h	shutdownExecutors
	m	()Lad$b;	i	getPlatform
	m	()Ljava/util/stream/Stream;	j	getVmArguments
	m	()Lit/unimi/dsi/fastutil/Hash$Strategy;	k	identityStrategy
	m	()V	l	startTimerHackThread
	m	()I	m	getMaxThreads
	m	()Ljava/util/concurrent/ExecutorService;	n	makeIoExecutor
	m	()Ljava/lang/IllegalStateException;	o	lambda$static$1
	f	Ljava/util/function/LongSupplier;	a	timeSource
	f	Lcom/google/common/base/Ticker;	b	TICKER
	f	Ljava/util/UUID;	c	NIL_UUID
	f	Ljava/nio/file/spi/FileSystemProvider;	d	ZIP_FILE_SYSTEM_PROVIDER
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	I	f	DEFAULT_MAX_THREADS
	f	Ljava/lang/String;	g	MAX_THREADS_SYSTEM_PROPERTY
	f	Ljava/util/concurrent/atomic/AtomicInteger;	h	WORKER_COUNT
	f	Ljava/util/concurrent/ExecutorService;	i	BOOTSTRAP_EXECUTOR
	f	Ljava/util/concurrent/ExecutorService;	j	BACKGROUND_EXECUTOR
	f	Ljava/util/concurrent/ExecutorService;	k	IO_POOL
	f	Ljava/util/function/Consumer;	l	thePauser
c	ad$1	net/minecraft/Util$1
c	ad$2	net/minecraft/Util$10
	f	Ljava/util/function/Function;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ad$3	net/minecraft/Util$11
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$apply$0
		p	1		pair
	f	Ljava/util/function/BiFunction;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ad$4	net/minecraft/Util$2
c	ad$5	net/minecraft/Util$5
	f	Ljava/nio/file/Path;	a	val$from
	f	Ljava/nio/file/Path;	b	val$to
c	ad$6	net/minecraft/Util$6
	f	Ljava/nio/file/Path;	a	val$target
c	ad$7	net/minecraft/Util$7
	f	Ljava/nio/file/Path;	a	val$target
c	ad$8	net/minecraft/Util$8
	f	Ljava/nio/file/Path;	a	val$target
c	ad$9	net/minecraft/Util$9
c	ad$a	net/minecraft/Util$IdentityStrategy
	m	()[Lad$a;	a	$values
	f	Lad$a;	a	INSTANCE
	f	[Lad$a;	b	$VALUES
c	ad$b	net/minecraft/Util$OS
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	telemetryName
	m	(Ljava/io/File;)V	a	openFile
		p	1		file
	m	(Ljava/lang/String;)V	a	openUri
		p	1		uri
	m	(Ljava/net/URI;)V	a	openUri
		p	1		uri
	m	(Ljava/net/URL;)V	a	openUrl
		p	1		url
	m	()[Lad$b;	b	$values
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
	m	(Ljava/net/URL;)Ljava/lang/Process;	c	lambda$openUrl$0
	f	Lad$b;	a	LINUX
	f	Lad$b;	b	SOLARIS
	f	Lad$b;	c	WINDOWS
	f	Lad$b;	d	OSX
	f	Lad$b;	e	UNKNOWN
	f	Ljava/lang/String;	f	telemetryName
	f	[Lad$b;	g	$VALUES
c	ad$b$1	net/minecraft/Util$OS$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
c	ad$b$2	net/minecraft/Util$OS$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
c	ae	net/minecraft/WorldVersion
	m	()Ldqn;	b	getDataVersion
c	af	net/minecraft/advancements/Advancement
	m	(Laaj;Laf;Lao;Lai;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		parent
		p	3		display
		p	4		rewards
		p	5		criteria
		p	6		requirements
	m	()Laf$a;	a	deconstruct
	m	(Laf;)V	a	addChild
		p	1		child
	m	(Lrm;Lrv;)Lrv;	a	lambda$new$0
		p	1		style
	m	()Laf;	b	getParent
	m	()Lao;	c	getDisplay
	m	()Lai;	d	getRewards
	m	()Ljava/lang/Iterable;	e	getChildren
	m	()Ljava/util/Map;	f	getCriteria
	m	()I	g	getMaxCriteraRequired
	m	()Laaj;	h	getId
	m	()[[Ljava/lang/String;	i	getRequirements
	m	()Lrm;	j	getChatComponent
	f	Laf;	a	parent
	f	Lao;	b	display
	f	Lai;	c	rewards
	f	Laaj;	d	id
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Ljava/util/Set;	g	children
	f	Lrm;	h	chatComponent
c	af$a	net/minecraft/advancements/Advancement$Builder
	m	(Laaj;Lao;Lai;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1		parentId
		p	2		display
		p	3		rewards
		p	4		criteria
		p	5		requirements
	m	()Laf$a;	a	advancement
	m	(Laaj;)Laf$a;	a	parent
		p	1		parentId
	m	(Laf;)Laf$a;	a	parent
		p	1		parent
	m	(Lai$a;)Laf$a;	a	rewards
		p	1		builder
	m	(Lai;)Laf$a;	a	rewards
		p	1		rewards
	m	(Lao;)Laf$a;	a	display
		p	1		display
	m	(Laq;)Laf$a;	a	requirements
		p	1		merger
	m	(Lcaa;Lrm;Lrm;Laaj;Lap;ZZZ)Laf$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Lcfz;Lrm;Lrm;Laaj;Lap;ZZZ)Laf$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Lcom/google/gson/JsonObject;Lbe;)Laf$a;	a	fromJson
		p	0		obj
		p	1		predicateDeserializer
	m	(Ljava/lang/String;Lak;)Laf$a;	a	addCriterion
		p	1		name
		p	2		criterion
	m	(Ljava/lang/String;Lan;)Laf$a;	a	addCriterion
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Laf;	a	save
		p	1		exporter
		p	2		id
	m	(Ljava/util/function/Function;)Z	a	canBuild
		p	1		parentProvider
	m	(Lqx;)V	a	serializeToNetwork
		p	1		buf
	m	(Lqx;Lao;)V	a	lambda$serializeToNetwork$1
		p	0		buf2
		p	1		display
	m	([[Ljava/lang/String;)Laf$a;	a	requirements
		p	1		requirements
	m	()Lcom/google/gson/JsonObject;	b	serializeToJson
	m	(Laaj;)Laf;	b	build
		p	1		id
	m	(Lqx;)Laf$a;	b	fromNetwork
		p	0		buf
	m	()Ljava/util/Map;	c	getCriteria
	m	(Laaj;)Laf;	c	lambda$build$0
		p	0		id
	f	Laaj;	a	parentId
	f	Laf;	b	parent
	f	Lao;	c	display
	f	Lai;	d	rewards
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Laq;	g	requirementsStrategy
c	ag	net/minecraft/advancements/AdvancementList
	m	()V	a	clear
	m	(Laaj;)Laf;	a	get
		p	1		id
	m	(Laf;)V	a	remove
		p	1		advancement
	m	(Lag$a;)V	a	setListener
		p	1		listener
	m	(Ljava/util/Map;)V	a	add
	m	(Ljava/util/Set;)V	a	remove
		p	1		advancements
	m	()Ljava/lang/Iterable;	b	getRoots
	m	()Ljava/util/Collection;	c	getAllAdvancements
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	advancements
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	tasks
	f	Lag$a;	e	listener
c	ag$a	net/minecraft/advancements/AdvancementList$Listener
	m	()V	a	onAdvancementsCleared
	m	(Laf;)V	a	onAddAdvancementRoot
		p	1		root
	m	(Laf;)V	b	onRemoveAdvancementRoot
		p	1		root
	m	(Laf;)V	c	onAddAdvancementTask
		p	1		dependent
	m	(Laf;)V	d	onRemoveAdvancementTask
		p	1		dependent
c	ah	net/minecraft/advancements/AdvancementProgress
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		criteriaProgresses
	m	()Z	a	isDone
	m	(Lah;)I	a	compareTo
	m	(Ljava/lang/String;)Z	a	grantProgress
		p	1		name
	m	(Ljava/util/Map;[[Ljava/lang/String;)V	a	update
		p	1		criteria
		p	2		requirements
	m	(Ljava/util/Set;Ljava/util/Map$Entry;)Z	a	lambda$update$0
		p	1		progress
	m	(Lqx;)V	a	serializeToNetwork
		p	1		buf
	m	(Lqx;Lal;)V	a	lambda$serializeToNetwork$1
		p	0		buf
		p	1		progresses
	m	()Z	b	hasProgress
	m	(Ljava/lang/String;)Z	b	revokeProgress
		p	1		name
	m	(Lqx;)Lah;	b	fromNetwork
		p	0		buf
	m	()F	c	getPercent
	m	(Ljava/lang/String;)Lal;	c	getCriterion
		p	1		name
	m	()Ljava/lang/String;	d	getProgressText
	m	()Ljava/lang/Iterable;	e	getRemainingCriteria
	m	()Ljava/lang/Iterable;	f	getCompletedCriteria
	m	()Ljava/util/Date;	g	getFirstProgressDate
	m	()I	h	countCompletedRequirements
	f	Ljava/util/Map;	a	criteria
	f	[[Ljava/lang/String;	b	requirements
c	ah$a	net/minecraft/advancements/AdvancementProgress$Serializer
	m	(Lah;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lah;	a	deserialize
c	ai	net/minecraft/advancements/AdvancementRewards
	m	(I[Laaj;[Laaj;Ldm$a;)V	<init>	<init>
		p	1		experience
		p	2		loot
		p	3		recipes
		p	4		function
	m	()[Laaj;	a	getRecipes
	m	(Lafp;)V	a	grant
		p	1		player
	m	(Lcom/google/gson/JsonObject;)Lai;	a	deserialize
		p	0		json
	m	(Lnet/minecraft/server/MinecraftServer;Lafp;Ldm;)V	a	lambda$grant$0
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	f	Lai;	a	EMPTY
	f	I	b	experience
	f	[Laaj;	c	loot
	f	[Laaj;	d	recipes
	f	Ldm$a;	e	function
c	ai$a	net/minecraft/advancements/AdvancementRewards$Builder
	m	()Lai;	a	build
	m	(I)Lai$a;	a	experience
		p	0		experience
	m	(Laaj;)Lai$a;	a	loot
		p	0		loot
	m	(I)Lai$a;	b	addExperience
		p	1		experience
	m	(Laaj;)Lai$a;	b	addLootTable
		p	1		loot
	m	(Laaj;)Lai$a;	c	recipe
		p	0		recipe
	m	(Laaj;)Lai$a;	d	addRecipe
		p	1		recipe
	m	(Laaj;)Lai$a;	e	function
		p	0		function
	m	(Laaj;)Lai$a;	f	runs
		p	1		function
	f	I	a	experience
	f	Ljava/util/List;	b	loot
	f	Ljava/util/List;	c	recipes
	f	Laaj;	d	function
c	aj	net/minecraft/advancements/CriteriaTriggers
	m	()Ljava/lang/Iterable;	a	all
	m	(Laaj;)Lam;	a	getCriterion
		p	0		id
	m	(Lam;)Lam;	a	register
		p	0		object
	f	Lbh;	A	EFFECTS_CHANGED
	f	Ldf;	B	USED_TOTEM
	f	Lbg;	C	NETHER_TRAVEL
	f	Lbu;	D	FISHING_ROD_HOOKED
	f	Lay;	E	CHANNELED_LIGHTNING
	f	Lcu;	F	SHOT_CROSSBOW
	f	Lcb;	G	KILLED_BY_CROSSBOW
	f	Lcr;	H	RAID_WIN
	f	Lcr;	I	BAD_OMEN
	f	Lcw;	J	HONEY_BLOCK_SLIDE
	f	Lat;	K	BEE_NEST_DESTROYED
	f	Ldc;	L	TARGET_BLOCK_HIT
	f	Lbz;	M	ITEM_USED_ON_BLOCK
	f	Lci;	N	GENERATE_LOOT
	f	Lcm;	O	THROWN_ITEM_PICKED_UP_BY_ENTITY
	f	Lcm;	P	THROWN_ITEM_PICKED_UP_BY_PLAYER
	f	Lcp;	Q	PLAYER_INTERACTED_WITH_ENTITY
	f	Lcy;	R	START_RIDING_TRIGGER
	f	Lcg;	S	LIGHTNING_STRIKE
	f	Ldg;	T	USING_ITEM
	f	Lbg;	U	FALL_FROM_HEIGHT
	f	Lbg;	V	RIDE_ENTITY_IN_LAVA_TRIGGER
	f	Lcc;	W	KILL_MOB_NEAR_SCULK_CATALYST
	f	Lbz;	X	ALLAY_DROP_ITEM_ON_BLOCK
	f	Lcr;	Y	AVOID_VIBRATION
	f	Ljava/util/Map;	Z	CRITERIA
	f	Lbw;	a	IMPOSSIBLE
	f	Lcc;	b	PLAYER_KILLED_ENTITY
	f	Lcc;	c	ENTITY_KILLED_PLAYER
	f	Lbk;	d	ENTER_BLOCK
	f	Lbx;	e	INVENTORY_CHANGED
	f	Lcs;	f	RECIPE_UNLOCKED
	f	Lco;	g	PLAYER_HURT_ENTITY
	f	Lbn;	h	ENTITY_HURT_PLAYER
	f	Lbi;	i	ENCHANTED_ITEM
	f	Lbs;	j	FILLED_BUCKET
	f	Law;	k	BREWED_POTION
	f	Laz;	l	CONSTRUCT_BEACON
	f	Lde;	m	USED_ENDER_EYE
	f	Lda;	n	SUMMONED_ENTITY
	f	Lav;	o	BRED_ANIMALS
	f	Lcr;	p	LOCATION
	f	Lcr;	q	SLEPT_IN_BED
	f	Lbb;	r	CURED_ZOMBIE_VILLAGER
	f	Ldd;	s	TRADE
	f	Lby;	t	ITEM_DURABILITY_CHANGED
	f	Lcd;	u	LEVITATION
	f	Lax;	v	CHANGED_DIMENSION
	f	Lcr;	w	TICK
	f	Ldb;	x	TAME_ANIMAL
	f	Lcn;	y	PLACED_BLOCK
	f	Lba;	z	CONSUME_ITEM
c	ak	net/minecraft/advancements/Criterion
	m	(Lan;)V	<init>	<init>
		p	1		conditions
	m	()Lan;	a	getTrigger
	m	(Lcom/google/gson/JsonObject;Lbe;)Lak;	a	criterionFromJson
		p	0		obj
		p	1		predicateDeserializer
	m	(Ljava/util/Map;Lqx;)V	a	serializeToNetwork
		p	0		criteria
		p	1		buf
	m	(Lqx;)V	a	serializeToNetwork
		p	1		buf
	m	(Lqx;Lak;)V	a	lambda$serializeToNetwork$0
		p	0		buf
		p	1		criterion
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lbe;)Ljava/util/Map;	b	criteriaFromJson
		p	0		obj
		p	1		predicateDeserializer
	m	(Lqx;)Lak;	b	criterionFromNetwork
		p	0		buf
	m	(Lqx;)Ljava/util/Map;	c	criteriaFromNetwork
		p	0		buf
	f	Lan;	a	trigger
c	al	net/minecraft/advancements/CriterionProgress
	m	()Z	a	isDone
	m	(Ljava/lang/String;)Lal;	a	fromJson
		p	0		datetime
	m	(Lqx;)V	a	serializeToNetwork
		p	1		buf
	m	()V	b	grant
	m	(Lqx;)Lal;	b	fromNetwork
		p	0		buf
	m	()V	c	revoke
	m	()Ljava/util/Date;	d	getObtained
	m	()Lcom/google/gson/JsonElement;	e	serializeToJson
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/util/Date;	b	obtained
c	am	net/minecraft/advancements/CriterionTrigger
	m	()Laaj;	a	getId
	m	(Laar;)V	a	removePlayerListeners
		p	1		tracker
	m	(Laar;Lam$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbe;)Lan;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Laar;Lam$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
c	am$a	net/minecraft/advancements/CriterionTrigger$Listener
	m	(Lan;Laf;Ljava/lang/String;)V	<init>	<init>
		p	1		conditions
		p	2		advancement
		p	3		id
	m	()Lan;	a	getTriggerInstance
	m	(Laar;)V	a	run
		p	1		tracker
	f	Lan;	a	trigger
	f	Laf;	b	advancement
	f	Ljava/lang/String;	c	criterion
c	an	net/minecraft/advancements/CriterionTriggerInstance
	m	()Laaj;	a	getCriterion
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
c	ao	net/minecraft/advancements/DisplayInfo
	m	(Lcaa;Lrm;Lrm;Laaj;Lap;ZZZ)V	<init>	<init>
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	()Lrm;	a	getTitle
	m	(FF)V	a	setLocation
		p	1		x
		p	2		y
	m	(Lcom/google/gson/JsonObject;)Lao;	a	fromJson
		p	0		obj
	m	(Lqx;)V	a	serializeToNetwork
		p	1		buf
	m	()Lrm;	b	getDescription
	m	(Lcom/google/gson/JsonObject;)Lcaa;	b	getIcon
		p	0		json
	m	(Lqx;)Lao;	b	fromNetwork
		p	0		buf
	m	()Lcaa;	c	getIcon
	m	()Laaj;	d	getBackground
	m	()Lap;	e	getFrame
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceChat
	m	()Z	j	isHidden
	m	()Lcom/google/gson/JsonElement;	k	serializeToJson
	m	()Lcom/google/gson/JsonObject;	l	serializeIcon
	f	Lrm;	a	title
	f	Lrm;	b	description
	f	Lcaa;	c	icon
	f	Laaj;	d	background
	f	Lap;	e	frame
	f	Z	f	showToast
	f	Z	g	announceChat
	f	Z	h	hidden
	f	F	i	x
	f	F	j	y
c	ap	net/minecraft/advancements/FrameType
	m	(Ljava/lang/String;ILjava/lang/String;ILp;)V	<init>	<init>
		p	3		id
		p	4		texV
		p	5		titleFormat
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lap;	a	byName
		p	0		name
	m	()I	b	getTexture
	m	()Lp;	c	getChatColor
	m	()Lrm;	d	getDisplayName
	m	()[Lap;	e	$values
	f	Lap;	a	TASK
	f	Lap;	b	CHALLENGE
	f	Lap;	c	GOAL
	f	Ljava/lang/String;	d	name
	f	I	e	texture
	f	Lp;	f	chatColor
	f	Lrm;	g	displayName
	f	[Lap;	h	$VALUES
c	aq	net/minecraft/advancements/RequirementsStrategy
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	b	lambda$static$0
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	createRequirements	createRequirements
		p	1		criteriaNames
	f	Laq;	a	AND
	f	Laq;	b	OR
c	ar	net/minecraft/advancements/TreeNodePosition
	m	(Laf;Lar;Lar;II)V	<init>	<init>
		p	1		advancement
		p	2		parent
		p	3		previousSibling
		p	4		childrenSize
		p	5		depth
	m	()V	a	firstWalk
	m	(F)V	a	thirdWalk
		p	1		deltaRow
	m	(FIF)F	a	secondWalk
		p	1		deltaRow
		p	2		depth
		p	3		minRow
	m	(Laf;)V	a	run
		p	0		root
	m	(Laf;Lar;)Lar;	a	addChild
		p	1		advancement
		p	2		lastChild
	m	(Lar;)Lar;	a	apportion
		p	1		last
	m	(Lar;F)V	a	moveSubtree
		p	1		positioner
		p	2		extraRowDistance
	m	(Lar;Lar;)Lar;	a	getAncestor
	m	()V	b	executeShifts
	m	()Lar;	c	previousOrThread
	m	()Lar;	d	nextOrThread
	m	()V	e	finalizePosition
	f	Laf;	a	advancement
	f	Lar;	b	parent
	f	Lar;	c	previousSibling
	f	I	d	childIndex
	f	Ljava/util/List;	e	children
	f	Lar;	f	ancestor
	f	Lar;	g	thread
	f	I	h	x
	f	F	i	y
	f	F	j	mod
	f	F	k	change
	f	F	l	shift
c	as	net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	m	(Laaj;Lbo$b;)V	<init>	<init>
		p	1		id
		p	2		entity
	m	()Laaj;	a	getCriterion
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lbo$b;	b	getPlayerPredicate
	f	Laaj;	a	criterion
	f	Lbo$b;	b	player
c	at	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	m	()Laaj;	a	getId
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$0
	m	(Lafp;Lcur;Lcaa;I)V	a	trigger
		p	1		player
		p	2		state
		p	3		stack
		p	4		beeCount
	m	(Lcom/google/gson/JsonObject;)Lciw;	a	deserializeBlock
		p	0		root
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lat$a;	a	createInstance
	m	(Lcur;Lcaa;ILat$a;)Z	a	lambda$trigger$1
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	at$a	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	m	(Lbo$b;Lciw;Lca;Lcj$d;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		item
		p	4		beeCount
	m	(Lciw;Lca$a;Lcj$d;)Lat$a;	a	destroyedBeeNest
		p	0		block
		p	1		itemPredicateBuilder
		p	2		beeCountRange
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lcur;Lcaa;I)Z	a	matches
		p	1		state
		p	2		stack
		p	3		count
	f	Lciw;	a	block
	f	Lca;	b	item
	f	Lcj$d;	c	numBees
c	au	net/minecraft/advancements/critereon/BlockPredicate
	m	(Lakh;Ljava/util/Set;Lcz;Lcl;)V	<init>	<init>
		p	1		tag
		p	2		blocks
		p	3		state
		p	4		nbt
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
		p	0		id
	m	(Lafo;Lgt;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/google/gson/JsonElement;)Lau;	a	fromJson
		p	0		json
	f	Lau;	a	ANY
	f	Lakh;	b	tag
	f	Ljava/util/Set;	c	blocks
	f	Lcz;	d	properties
	f	Lcl;	e	nbt
c	au$a	net/minecraft/advancements/critereon/BlockPredicate$Builder
	m	()Lau$a;	a	block
	m	(Lakh;)Lau$a;	a	of
		p	1		tag
	m	(Lcz;)Lau$a;	a	setProperties
		p	1		state
	m	(Ljava/lang/Iterable;)Lau$a;	a	of
		p	1		blocks
	m	(Lpj;)Lau$a;	a	hasNbt
		p	1		nbt
	m	([Lciw;)Lau$a;	a	of
		p	1		blocks
	m	()Lau;	b	build
	f	Ljava/util/Set;	a	blocks
	f	Lakh;	b	tag
	f	Lcz;	c	properties
	f	Lcl;	d	nbt
c	av	net/minecraft/advancements/critereon/BredAnimalsTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbmh;Lbmh;Lban;)V	a	trigger
		p	1		player
		p	2		parent
		p	3		partner
		p	4		child
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lav$a;	a	createInstance
	m	(Ldrg;Ldrg;Ldrg;Lav$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	av$a	net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	m	(Lbo$b;Lbo$b;Lbo$b;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		parent
		p	3		partner
		p	4		child
	m	(Lbo$a;)Lav$a;	a	bredAnimals
		p	0		child
	m	(Lbo;Lbo;Lbo;)Lav$a;	a	bredAnimals
		p	0		parent
		p	1		partner
		p	2		child
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldrg;Ldrg;Ldrg;)Z	a	matches
		p	1		parentContext
		p	2		partnerContext
		p	3		childContext
	m	()Lav$a;	c	bredAnimals
	f	Lbo$b;	a	parent
	f	Lbo$b;	b	partner
	f	Lbo$b;	c	child
c	aw	net/minecraft/advancements/critereon/BrewedPotionTrigger
	m	()Laaj;	a	getId
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$createInstance$0
	m	(Lafp;Lcbv;)V	a	trigger
		p	1		player
		p	2		potion
	m	(Lcbv;Law$a;)Z	a	lambda$trigger$1
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Law$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	aw$a	net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	m	(Lbo$b;Lcbv;)V	<init>	<init>
		p	1		player
		p	2		potion
	m	(Lcbv;)Z	a	matches
		p	1		potion
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Law$a;	c	brewedPotion
	f	Lcbv;	a	potion
c	ax	net/minecraft/advancements/critereon/ChangeDimensionTrigger
	m	()Laaj;	a	getId
	m	(Laai;Laai;Lax$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lafp;Laai;Laai;)V	a	trigger
		p	1		player
		p	2		from
		p	3		to
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lax$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	ax$a	net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	m	(Lbo$b;Laai;Laai;)V	<init>	<init>
		p	1		player
		p	2		from
		p	3		to
	m	(Laai;)Lax$a;	a	changedDimensionTo
		p	0		to
	m	(Laai;Laai;)Lax$a;	a	changedDimension
		p	0		from
		p	1		to
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Laai;)Lax$a;	b	changedDimensionFrom
		p	0		from
	m	(Laai;Laai;)Z	b	matches
		p	1		from
		p	2		to
	m	()Lax$a;	c	changedDimension
	f	Laai;	a	from
	f	Laai;	b	to
c	ay	net/minecraft/advancements/critereon/ChanneledLightningTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbaq;)Ldrg;	a	lambda$trigger$0
		p	1		entity
	m	(Lafp;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		victims
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lay$a;	a	createInstance
	m	(Ljava/util/List;Lay$a;)Z	a	lambda$trigger$1
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	ay$a	net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	m	(Lbo$b;[Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		victims
	m	(I)[Lbo$b;	a	lambda$channeledLightning$0
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ljava/util/Collection;)Z	a	matches
		p	1		victims
	m	([Lbo;)Lay$a;	a	channeledLightning
		p	0		victims
	f	[Lbo$b;	a	victims
c	az	net/minecraft/advancements/critereon/ConstructBeaconTrigger
	m	()Laaj;	a	getId
	m	(ILaz$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lafp;I)V	a	trigger
		p	1		player
		p	2		level
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Laz$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	az$a	net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	m	(Lbo$b;Lcj$d;)V	<init>	<init>
		p	1		player
		p	2		level
	m	(I)Z	a	matches
		p	1		level
	m	(Lcj$d;)Laz$a;	a	constructedBeacon
		p	0		level
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Laz$a;	c	constructedBeacon
	f	Lcj$d;	a	level
c	ba	net/minecraft/advancements/critereon/ConsumeItemTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcaa;Lba$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lba$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	ba$a	net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	m	(Lbo$b;Lca;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lca;)Lba$a;	a	usedItem
		p	0		predicate
	m	(Lcaa;)Z	a	matches
		p	1		stack
	m	(Lcfz;)Lba$a;	a	usedItem
		p	0		item
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lba$a;	c	usedItem
	f	Lca;	a	item
c	bb	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbrm;Lbss;)V	a	trigger
		p	1		player
		p	2		zombie
		p	3		villager
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbb$a;	a	createInstance
	m	(Ldrg;Ldrg;Lbb$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bb$a	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	m	(Lbo$b;Lbo$b;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		zombie
		p	3		villager
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldrg;Ldrg;)Z	a	matches
		p	1		zombieContext
		p	2		villagerContext
	m	()Lbb$a;	c	curedZombieVillager
	f	Lbo$b;	a	zombie
	f	Lbo$b;	b	villager
c	bc	net/minecraft/advancements/critereon/DamagePredicate
	m	(Lcj$c;Lcj$c;Lbo;Ljava/lang/Boolean;Lbd;)V	<init>	<init>
		p	1		dealt
		p	2		taken
		p	3		sourceEntity
		p	4		blocked
		p	5		type
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lafp;Lazz;FFZ)Z	a	matches
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lcom/google/gson/JsonElement;)Lbc;	a	fromJson
		p	0		json
	f	Lbc;	a	ANY
	f	Lcj$c;	b	dealtDamage
	f	Lcj$c;	c	takenDamage
	f	Lbo;	d	sourceEntity
	f	Ljava/lang/Boolean;	e	blocked
	f	Lbd;	f	type
c	bc$a	net/minecraft/advancements/critereon/DamagePredicate$Builder
	m	()Lbc$a;	a	damageInstance
	m	(Lbd$a;)Lbc$a;	a	type
		p	1		builder
	m	(Lbd;)Lbc$a;	a	type
		p	1		type
	m	(Lbo;)Lbc$a;	a	sourceEntity
		p	1		sourceEntity
	m	(Lcj$c;)Lbc$a;	a	dealtDamage
		p	1		dealt
	m	(Ljava/lang/Boolean;)Lbc$a;	a	blocked
		p	1		blocked
	m	()Lbc;	b	build
	m	(Lcj$c;)Lbc$a;	b	takenDamage
		p	1		taken
	f	Lcj$c;	a	dealtDamage
	f	Lcj$c;	b	takenDamage
	f	Lbo;	c	sourceEntity
	f	Ljava/lang/Boolean;	d	blocked
	f	Lbd;	e	type
c	bd	net/minecraft/advancements/critereon/DamageSourcePredicate
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lbo;Lbo;)V	<init>	<init>
		p	1		isProjectile
		p	2		isExplosion
		p	3		bypassesArmor
		p	4		bypassesInvulnerability
		p	5		bypassesMagic
		p	6		isFire
		p	7		isMagic
		p	8		isLightning
		p	9		directEntity
		p	10		sourceEntity
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lafo;Ldvt;Lazz;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		damageSource
	m	(Lafp;Lazz;)Z	a	matches
		p	1		player
		p	2		damageSource
	m	(Lcom/google/gson/JsonElement;)Lbd;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalBoolean
		p	0		obj
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	addOptionally
		p	1		json
		p	2		key
		p	3		value
	f	Lbd;	a	ANY
	f	Ljava/lang/Boolean;	b	isProjectile
	f	Ljava/lang/Boolean;	c	isExplosion
	f	Ljava/lang/Boolean;	d	bypassesArmor
	f	Ljava/lang/Boolean;	e	bypassesInvulnerability
	f	Ljava/lang/Boolean;	f	bypassesMagic
	f	Ljava/lang/Boolean;	g	isFire
	f	Ljava/lang/Boolean;	h	isMagic
	f	Ljava/lang/Boolean;	i	isLightning
	f	Lbo;	j	directEntity
	f	Lbo;	k	sourceEntity
c	bd$a	net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	m	()Lbd$a;	a	damageType
	m	(Lbo$a;)Lbd$a;	a	direct
		p	1		entity
	m	(Lbo;)Lbd$a;	a	direct
		p	1		entity
	m	(Ljava/lang/Boolean;)Lbd$a;	a	isProjectile
		p	1		projectile
	m	()Lbd;	b	build
	m	(Lbo$a;)Lbd$a;	b	source
		p	1		entity
	m	(Lbo;)Lbd$a;	b	source
		p	1		entity
	m	(Ljava/lang/Boolean;)Lbd$a;	b	isExplosion
		p	1		explosion
	m	(Ljava/lang/Boolean;)Lbd$a;	c	bypassesArmor
		p	1		bypassesArmor
	m	(Ljava/lang/Boolean;)Lbd$a;	d	bypassesInvulnerability
		p	1		bypassesInvulnerability
	m	(Ljava/lang/Boolean;)Lbd$a;	e	bypassesMagic
		p	1		bypassesMagic
	m	(Ljava/lang/Boolean;)Lbd$a;	f	isFire
		p	1		fire
	m	(Ljava/lang/Boolean;)Lbd$a;	g	isMagic
		p	1		magic
	m	(Ljava/lang/Boolean;)Lbd$a;	h	isLightning
		p	1		lightning
	f	Ljava/lang/Boolean;	a	isProjectile
	f	Ljava/lang/Boolean;	b	isExplosion
	f	Ljava/lang/Boolean;	c	bypassesArmor
	f	Ljava/lang/Boolean;	d	bypassesInvulnerability
	f	Ljava/lang/Boolean;	e	bypassesMagic
	f	Ljava/lang/Boolean;	f	isFire
	f	Ljava/lang/Boolean;	g	isMagic
	f	Ljava/lang/Boolean;	h	isLightning
	f	Lbo;	i	directEntity
	f	Lbo;	j	sourceEntity
c	be	net/minecraft/advancements/critereon/DeserializationContext
	m	(Laaj;Ldrl;)V	<init>	<init>
		p	1		advancementId
		p	2		conditionManager
	m	()Laaj;	a	getAdvancementId
	m	(Laaj;)Ldrj;	a	lambda$deserializeConditions$0
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ldtm;)[Ldua;	a	deserializeConditions
		p	1		array
		p	2		key
		p	3		contextType
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$deserializeConditions$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laaj;	b	id
	f	Ldrl;	c	predicateManager
	f	Lcom/google/gson/Gson;	d	predicateGson
c	bf	net/minecraft/advancements/critereon/DistancePredicate
	m	(Lcj$c;Lcj$c;Lcj$c;Lcj$c;Lcj$c;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		horizontal
		p	5		absolute
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(DDDDDD)Z	a	matches
		p	1		x0
		p	3		y0
		p	5		z0
		p	7		x1
		p	9		y1
		p	11		z1
	m	(Lcj$c;)Lbf;	a	horizontal
		p	0		horizontal
	m	(Lcom/google/gson/JsonElement;)Lbf;	a	fromJson
		p	0		json
	m	(Lcj$c;)Lbf;	b	vertical
		p	0		y
	m	(Lcj$c;)Lbf;	c	absolute
		p	0		absolute
	f	Lbf;	a	ANY
	f	Lcj$c;	b	x
	f	Lcj$c;	c	y
	f	Lcj$c;	d	z
	f	Lcj$c;	e	horizontal
	f	Lcj$c;	f	absolute
c	bg	net/minecraft/advancements/critereon/DistanceTrigger
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Laaj;	a	getId
	m	(Lafp;Ldvt;)V	a	trigger
		p	1		player
		p	2		startPos
	m	(Lafp;Ldvt;Ldvt;Lbg$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbg$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	id
c	bg$a	net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	m	(Laaj;Lbo$b;Lch;Lbf;)V	<init>	<init>
		p	1		id
		p	2		entity
		p	3		startPos
		p	4		distance
	m	(Lafo;Ldvt;Ldvt;)Z	a	matches
		p	1		world
		p	2		startPos
		p	3		endPos
	m	(Lbf;)Lbg$a;	a	travelledThroughNether
		p	0		distance
	m	(Lbo$a;Lbf;)Lbg$a;	a	rideEntityInLava
		p	0		entity
		p	1		distance
	m	(Lbo$a;Lbf;Lch;)Lbg$a;	a	fallFromHeight
		p	0		entity
		p	1		distance
		p	2		startPos
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lch;	a	startPosition
	f	Lbf;	b	distance
c	bh	net/minecraft/advancements/critereon/EffectsChangedTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbaq;)V	a	trigger
		p	1		player
		p	2		source
	m	(Lafp;Ldrg;Lbh$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbh$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bh$a	net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	m	(Lbo$b;Lck;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		effects
		p	3		source
	m	(Lafp;Ldrg;)Z	a	matches
		p	1		player
		p	2		context
	m	(Lbo;)Lbh$a;	a	gotEffectsFrom
		p	0		source
	m	(Lck;)Lbh$a;	a	hasEffects
		p	0		effects
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lck;	a	effects
	f	Lbo$b;	b	source
c	bi	net/minecraft/advancements/critereon/EnchantedItemTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		levels
	m	(Lcaa;ILbi$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbi$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bi$a	net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	m	(Lbo$b;Lca;Lcj$d;)V	<init>	<init>
		p	1		player
		p	2		item
		p	3		levels
	m	(Lcaa;I)Z	a	matches
		p	1		stack
		p	2		levels
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lbi$a;	c	enchantedItem
	f	Lca;	a	item
	f	Lcj$d;	b	levels
c	bj	net/minecraft/advancements/critereon/EnchantmentPredicate
	m	(Lcdu;Lcj$d;)V	<init>	<init>
		p	1		enchantment
		p	2		levels
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Lcom/google/gson/JsonElement;)Lbj;	a	fromJson
		p	0		el
	m	(Ljava/util/Map;)Z	a	containedIn
		p	1		enchantments
	m	(Lcom/google/gson/JsonElement;)[Lbj;	b	fromJsonArray
		p	0		el
	f	Lbj;	a	ANY
	f	[Lbj;	b	NONE
	f	Lcdu;	c	enchantment
	f	Lcj$d;	d	level
c	bk	net/minecraft/advancements/critereon/EnterBlockTrigger
	m	()Laaj;	a	getId
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Lafp;Lcur;)V	a	trigger
		p	1		player
		p	2		state
	m	(Lciw;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		name
	m	(Lcom/google/gson/JsonObject;)Lciw;	a	deserializeBlock
		p	0		obj
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbk$a;	a	createInstance
	m	(Lcur;Lbk$a;)Z	a	lambda$trigger$2
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bk$a	net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	m	(Lbo$b;Lciw;Lcz;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		state
	m	(Lciw;)Lbk$a;	a	entersBlock
		p	0		block
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lcur;)Z	a	matches
		p	1		state
	f	Lciw;	a	block
	f	Lcz;	b	state
c	bl	net/minecraft/advancements/critereon/EntityEquipmentPredicate
	m	(Lca;Lca;Lca;Lca;Lca;Lca;)V	<init>	<init>
		p	1		head
		p	2		chest
		p	3		legs
		p	4		feet
		p	5		mainhand
		p	6		offhand
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbaq;)Z	a	matches
		p	1		entity
	m	(Lcom/google/gson/JsonElement;)Lbl;	a	fromJson
		p	0		json
	f	Lbl;	a	ANY
	f	Lbl;	b	CAPTAIN
	f	Lca;	c	head
	f	Lca;	d	chest
	f	Lca;	e	legs
	f	Lca;	f	feet
	f	Lca;	g	mainhand
	f	Lca;	h	offhand
c	bl$a	net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	m	()Lbl$a;	a	equipment
	m	(Lca;)Lbl$a;	a	head
		p	1		head
	m	()Lbl;	b	build
	m	(Lca;)Lbl$a;	b	chest
		p	1		chest
	m	(Lca;)Lbl$a;	c	legs
		p	1		legs
	m	(Lca;)Lbl$a;	d	feet
		p	1		feet
	m	(Lca;)Lbl$a;	e	mainhand
		p	1		mainhand
	m	(Lca;)Lbl$a;	f	offhand
		p	1		offhand
	f	Lca;	a	head
	f	Lca;	b	chest
	f	Lca;	c	legs
	f	Lca;	d	feet
	f	Lca;	e	mainhand
	f	Lca;	f	offhand
c	bm	net/minecraft/advancements/critereon/EntityFlagsPredicate
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1		isOnFire
		p	2		isSneaking
		p	3		isSprinting
		p	4		isSwimming
		p	5		isBaby
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbaq;)Z	a	matches
		p	1		entity
	m	(Lcom/google/gson/JsonElement;)Lbm;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalBoolean
		p	0		json
		p	1		key
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	addOptionalBoolean
		p	1		json
		p	2		key
		p	3		value
	f	Lbm;	a	ANY
	f	Ljava/lang/Boolean;	b	isOnFire
	f	Ljava/lang/Boolean;	c	isCrouching
	f	Ljava/lang/Boolean;	d	isSprinting
	f	Ljava/lang/Boolean;	e	isSwimming
	f	Ljava/lang/Boolean;	f	isBaby
c	bm$a	net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	m	()Lbm$a;	a	flags
	m	(Ljava/lang/Boolean;)Lbm$a;	a	setOnFire
		p	1		onFire
	m	()Lbm;	b	build
	m	(Ljava/lang/Boolean;)Lbm$a;	b	setCrouching
		p	1		sneaking
	m	(Ljava/lang/Boolean;)Lbm$a;	c	setSprinting
		p	1		sprinting
	m	(Ljava/lang/Boolean;)Lbm$a;	d	setSwimming
		p	1		swimming
	m	(Ljava/lang/Boolean;)Lbm$a;	e	setIsBaby
		p	1		isBaby
	f	Ljava/lang/Boolean;	a	isOnFire
	f	Ljava/lang/Boolean;	b	isCrouching
	f	Ljava/lang/Boolean;	c	isSprinting
	f	Ljava/lang/Boolean;	d	isSwimming
	f	Ljava/lang/Boolean;	e	isBaby
c	bn	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lazz;FFZ)V	a	trigger
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lafp;Lazz;FFZLbn$a;)Z	a	lambda$trigger$0
		p	5		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbn$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bn$a	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	m	(Lbo$b;Lbc;)V	<init>	<init>
		p	1		player
		p	2		damage
	m	(Lafp;Lazz;FFZ)Z	a	matches
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lbc$a;)Lbn$a;	a	entityHurtPlayer
		p	0		damageBuilder
	m	(Lbc;)Lbn$a;	a	entityHurtPlayer
		p	0		predicate
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lbn$a;	c	entityHurtPlayer
	f	Lbc;	a	damage
c	bo	net/minecraft/advancements/critereon/EntityPredicate
	m	(Lbq;Lbf;Lch;Lch;Lck;Lcl;Lbm;Lbl;Lbp;Lbo;Lbo;Lbo;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		distance
		p	3		location
		p	4		steppingOn
		p	5		effects
		p	6		nbt
		p	7		flags
		p	8		equipment
		p	9		typeSpecific
		p	10		vehicle
		p	11		passenger
		p	12		targetedEntity
		p	13		team
	m	(Lbq;Lbf;Lch;Lch;Lck;Lcl;Lbm;Lbl;Lbp;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		distance
		p	3		location
		p	4		steppingOn
		p	5		effects
		p	6		nbt
		p	7		flags
		p	8		equipment
		p	9		typeSpecific
		p	10		team
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lafo;Ldvt;Lbaq;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lafp;Lbaq;)Z	a	matches
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonElement;)Lbo;	a	fromJson
		p	0		json
	m	(Lafo;Ldvt;Lbaq;)Z	b	lambda$matches$0
		p	3		entity
	m	(Lafp;Lbaq;)Ldrg;	b	createContext
		p	0		player
		p	1		target
	f	Lbo;	a	ANY
	f	Lbq;	b	entityType
	f	Lbf;	c	distanceToPlayer
	f	Lch;	d	location
	f	Lch;	e	steppingOnLocation
	f	Lck;	f	effects
	f	Lcl;	g	nbt
	f	Lbm;	h	flags
	f	Lbl;	i	equipment
	f	Lbp;	j	subPredicate
	f	Lbo;	k	vehicle
	f	Lbo;	l	passenger
	f	Lbo;	m	targetedEntity
	f	Ljava/lang/String;	n	team
c	bo$a	net/minecraft/advancements/critereon/EntityPredicate$Builder
	m	()Lbo$a;	a	entity
	m	(Lakh;)Lbo$a;	a	of
		p	1		tag
	m	(Lbau;)Lbo$a;	a	of
		p	1		type
	m	(Lbf;)Lbo$a;	a	distance
		p	1		distance
	m	(Lbl;)Lbo$a;	a	equipment
		p	1		equipment
	m	(Lbm;)Lbo$a;	a	flags
		p	1		flags
	m	(Lbo;)Lbo$a;	a	vehicle
		p	1		vehicle
	m	(Lbp;)Lbo$a;	a	subPredicate
		p	1		typeSpecific
	m	(Lbq;)Lbo$a;	a	entityType
		p	1		type
	m	(Lch;)Lbo$a;	a	located
		p	1		location
	m	(Lck;)Lbo$a;	a	effects
		p	1		effects
	m	(Lcl;)Lbo$a;	a	nbt
		p	1		nbt
	m	(Ljava/lang/String;)Lbo$a;	a	team
		p	1		team
	m	()Lbo;	b	build
	m	(Lbo;)Lbo$a;	b	passenger
		p	1		passenger
	m	(Lch;)Lbo$a;	b	steppingOn
		p	1		location
	m	(Lbo;)Lbo$a;	c	targetedEntity
		p	1		targetedEntity
	f	Lbq;	a	entityType
	f	Lbf;	b	distanceToPlayer
	f	Lch;	c	location
	f	Lch;	d	steppingOnLocation
	f	Lck;	e	effects
	f	Lcl;	f	nbt
	f	Lbm;	g	flags
	f	Lbl;	h	equipment
	f	Lbp;	i	subPredicate
	f	Lbo;	j	vehicle
	f	Lbo;	k	passenger
	f	Lbo;	l	targetedEntity
	f	Ljava/lang/String;	m	team
c	bo$b	net/minecraft/advancements/critereon/EntityPredicate$Composite
	m	([Ldua;)V	<init>	<init>
		p	1		conditions
	m	(Lbo;)Lbo$b;	a	wrap
		p	0		predicate
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbe;)Lbo$b;	a	fromJson
		p	0		root
		p	1		key
		p	2		predicateDeserializer
	m	(Lct;)Lcom/google/gson/JsonElement;	a	toJson
		p	1		predicateSerializer
	m	(Ldrg;)Z	a	matches
		p	1		context
	m	(Ljava/lang/String;Lbe;Lcom/google/gson/JsonElement;)Lbo$b;	a	fromElement
		p	0		key
		p	1		predicateDeserializer
		p	2		json
	m	([Lbo$b;Lct;)Lcom/google/gson/JsonElement;	a	toJson
		p	0		predicates
		p	1		predicateSerializer
	m	([Ldua;)Lbo$b;	a	create
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbe;)[Lbo$b;	b	fromJsonArray
		p	0		root
		p	1		key
		p	2		predicateDeserializer
	f	Lbo$b;	a	ANY
	f	[Ldua;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositePredicates
c	bp	net/minecraft/advancements/critereon/EntitySubPredicate
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbaq;Lafo;Ldvt;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lbml;)Lbp;	a	variant
		p	0		variant
	m	(Lbms;)Lbp;	a	variant
		p	0		variant
	m	(Lcom/google/gson/JsonElement;)Lbp;	a	fromJson
		p	0		json
	m	()Lcom/google/gson/JsonElement;	b	serialize
	m	()Lbp$a;	c	type
	f	Lbp;	a	ANY
c	bp$1	net/minecraft/advancements/critereon/EntitySubPredicate$1
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbaq;Lafo;Ldvt;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	()Lbp$a;	c	type
c	bp$a	net/minecraft/advancements/critereon/EntitySubPredicate$Type
c	bp$b	net/minecraft/advancements/critereon/EntitySubPredicate$Types
	m	(Lbaq;)Ljava/util/Optional;	a	lambda$static$2
		p	0		entity
	m	(Lcom/google/gson/JsonObject;)Lbp;	a	lambda$static$0
		p	0		json
	m	(Lbaq;)Ljava/util/Optional;	b	lambda$static$1
		p	0		entity
	f	Lbp$a;	a	ANY
	f	Lbp$a;	b	LIGHTNING
	f	Lbp$a;	c	FISHING_HOOK
	f	Lbp$a;	d	PLAYER
	f	Lbp$a;	e	SLIME
	f	Lbr;	f	CAT
	f	Lbr;	g	FROG
	f	Lcom/google/common/collect/BiMap;	h	TYPES
c	bq	net/minecraft/advancements/critereon/EntityTypePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Lakh;)Lbq;	a	of
		p	0		tag
	m	(Lbau;)Z	a	matches
		p	1		type
	m	(Lcom/google/gson/JsonElement;)Lbq;	a	fromJson
		p	0		json
	m	(Lbau;)Lbq;	b	of
		p	0		type
	f	Lbq;	a	ANY
	f	Lcom/google/common/base/Joiner;	b	COMMA_JOINER
c	bq$1	net/minecraft/advancements/critereon/EntityTypePredicate$1
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbau;)Z	a	matches
		p	1		type
c	bq$a	net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	m	(Lakh;)V	<init>	<init>
		p	1		tag
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbau;)Z	a	matches
		p	1		type
	f	Lakh;	b	tag
c	bq$b	net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	m	(Lbau;)V	<init>	<init>
		p	1		type
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbau;)Z	a	matches
		p	1		type
	f	Lbau;	b	type
c	br	net/minecraft/advancements/critereon/EntityVariantPredicate
	m	(Lhm;Ljava/util/function/Function;)V	<init>	<init>
		p	1		registry
		p	2		variantGetter
	m	()Lbp$a;	a	type
	m	(Lhm;Lcom/google/gson/JsonObject;)Lbp;	a	lambda$new$0
		p	2		json
	m	(Lhm;Ljava/util/function/Function;)Lbr;	a	create
		p	0		registry
		p	1		variantGetter
	m	(Ljava/lang/Object;)Lbp;	a	createPredicate
		p	1		variant
	f	Ljava/lang/String;	a	VARIANT_KEY
	f	Lhm;	b	registry
	f	Ljava/util/function/Function;	c	getter
	f	Lbp$a;	d	type
c	br$1	net/minecraft/advancements/critereon/EntityVariantPredicate$1
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbaq;Lafo;Ldvt;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$matches$0
		p	1		variant
	m	()Lbp$a;	c	type
	f	Ljava/lang/Object;	b	val$variant
	f	Lbr;	c	this$0
c	bs	net/minecraft/advancements/critereon/FilledBucketTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcaa;Lbs$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbs$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bs$a	net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	m	(Lbo$b;Lca;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lca;)Lbs$a;	a	filledBucket
		p	0		item
	m	(Lcaa;)Z	a	matches
		p	1		stack
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lca;	a	item
c	bt	net/minecraft/advancements/critereon/FishingHookPredicate
	m	(Z)V	<init>	<init>
		p	1		inOpenWater
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbaq;Lafo;Ldvt;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/google/gson/JsonObject;)Lbt;	a	fromJson
		p	0		json
	m	(Z)Lbt;	a	inOpenWater
		p	0		inOpenWater
	m	()Lbp$a;	c	type
	f	Lbt;	b	ANY
	f	Ljava/lang/String;	c	IN_OPEN_WATER_KEY
	f	Z	d	inOpenWater
c	bu	net/minecraft/advancements/critereon/FishingRodHookedTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;Lbtt;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		rod
		p	3		bobber
		p	4		fishingLoots
	m	(Lcaa;Ldrg;Ljava/util/Collection;Lbu$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbu$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bu$a	net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	m	(Lbo$b;Lca;Lbo$b;Lca;)V	<init>	<init>
		p	1		player
		p	2		rod
		p	3		hookedEntity
		p	4		caughtItem
	m	(Lca;Lbo;Lca;)Lbu$a;	a	fishedItem
		p	0		rod
		p	1		bobber
		p	2		item
	m	(Lcaa;Ldrg;Ljava/util/Collection;)Z	a	matches
		p	1		rod
		p	2		hookedEntityContext
		p	3		fishingLoots
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lca;	a	rod
	f	Lbo$b;	b	entity
	f	Lca;	c	item
c	bv	net/minecraft/advancements/critereon/FluidPredicate
	m	(Lakh;Ldox;Lcz;)V	<init>	<init>
		p	1		tag
		p	2		fluid
		p	3		state
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lafo;Lgt;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/google/gson/JsonElement;)Lbv;	a	fromJson
		p	0		json
	f	Lbv;	a	ANY
	f	Lakh;	b	tag
	f	Ldox;	c	fluid
	f	Lcz;	d	properties
c	bv$a	net/minecraft/advancements/critereon/FluidPredicate$Builder
	m	()Lbv$a;	a	fluid
	m	(Lakh;)Lbv$a;	a	of
		p	1		tag
	m	(Lcz;)Lbv$a;	a	setProperties
		p	1		state
	m	(Ldox;)Lbv$a;	a	of
		p	1		fluid
	m	()Lbv;	b	build
	f	Ldox;	a	fluid
	f	Lakh;	b	fluids
	f	Lcz;	c	properties
c	bw	net/minecraft/advancements/critereon/ImpossibleTrigger
	m	()Laaj;	a	getId
	m	(Laar;)V	a	removePlayerListeners
		p	1		tracker
	m	(Laar;Lam$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbe;)Lan;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Laar;Lam$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbe;)Lbw$a;	b	createInstance
	f	Laaj;	a	ID
c	bw$a	net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	m	()Laaj;	a	getCriterion
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
c	bx	net/minecraft/advancements/critereon/InventoryChangeTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbte;Lcaa;)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
	m	(Lafp;Lbte;Lcaa;III)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
		p	4		full
		p	5		empty
		p	6		occupied
	m	(Lbte;Lcaa;IIILbx$a;)Z	a	lambda$trigger$0
		p	5		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbx$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	bx$a	net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	m	(Lbo$b;Lcj$d;Lcj$d;Lcj$d;[Lca;)V	<init>	<init>
		p	1		player
		p	2		occupied
		p	3		full
		p	4		empty
		p	5		items
	m	(Lbte;Lcaa;III)Z	a	matches
		p	1		inventory
		p	2		stack
		p	3		full
		p	4		empty
		p	5		occupied
	m	(Lcaa;Lca;)Z	a	lambda$matches$0
		p	1		item
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	([Lca;)Lbx$a;	a	hasItems
		p	0		items
	m	([Lcfz;)Lbx$a;	a	hasItems
		p	0		items
	f	Lcj$d;	a	slotsOccupied
	f	Lcj$d;	b	slotsFull
	f	Lcj$d;	c	slotsEmpty
	f	[Lca;	d	predicates
c	by	net/minecraft/advancements/critereon/ItemDurabilityTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		durability
	m	(Lcaa;ILby$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lby$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	by$a	net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	m	(Lbo$b;Lca;Lcj$d;Lcj$d;)V	<init>	<init>
		p	1		player
		p	2		item
		p	3		durability
		p	4		delta
	m	(Lbo$b;Lca;Lcj$d;)Lby$a;	a	changedDurability
		p	0		player
		p	1		item
		p	2		durability
	m	(Lca;Lcj$d;)Lby$a;	a	changedDurability
		p	0		item
		p	1		durability
	m	(Lcaa;I)Z	a	matches
		p	1		stack
		p	2		durability
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lca;	a	item
	f	Lcj$d;	b	durability
	f	Lcj$d;	c	delta
c	bz	net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Laaj;	a	getId
	m	(Lafp;Lgt;Lcaa;)V	a	trigger
		p	1		player
		p	2		pos
		p	3		stack
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lbz$a;	a	createInstance
	m	(Lcur;Lafp;Lgt;Lcaa;Lbz$a;)Z	a	lambda$trigger$0
		p	4		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	id
c	bz$a	net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger$TriggerInstance
	m	(Laaj;Lbo$b;Lch;Lca;)V	<init>	<init>
		p	1		id
		p	2		entity
		p	3		location
		p	4		item
	m	(Lch$a;Lca$a;)Lbz$a;	a	itemUsedOnBlock
		p	0		location
		p	1		item
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lcur;Lafo;Lgt;Lcaa;)Z	a	matches
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
	m	(Lch$a;Lca$a;)Lbz$a;	b	allayDropItemOnBlock
		p	0		location
		p	1		item
	f	Lch;	a	location
	f	Lca;	b	item
c	ca	net/minecraft/advancements/critereon/ItemPredicate
	m	(Lakh;Ljava/util/Set;Lcj$d;Lcj$d;[Lbj;[Lbj;Lcbv;Lcl;)V	<init>	<init>
		p	1		tag
		p	2		items
		p	3		count
		p	4		durability
		p	5		enchantments
		p	6		storedEnchantments
		p	7		potion
		p	8		nbt
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$1
		p	0		id
	m	(Lcaa;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonElement;)Lca;	a	fromJson
		p	0		el
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	b	lambda$fromJson$0
	m	(Lcom/google/gson/JsonElement;)[Lca;	b	fromJsonArray
		p	0		el
	f	Lca;	a	ANY
	f	Lakh;	b	tag
	f	Ljava/util/Set;	c	items
	f	Lcj$d;	d	count
	f	Lcj$d;	e	durability
	f	[Lbj;	f	enchantments
	f	[Lbj;	g	storedEnchantments
	f	Lcbv;	h	potion
	f	Lcl;	i	nbt
c	ca$a	net/minecraft/advancements/critereon/ItemPredicate$Builder
	m	()Lca$a;	a	item
	m	(Lakh;)Lca$a;	a	of
		p	1		tag
	m	(Lbj;)Lca$a;	a	hasEnchantment
		p	1		enchantment
	m	(Lcbv;)Lca$a;	a	isPotion
		p	1		potion
	m	(Lcj$d;)Lca$a;	a	withCount
		p	1		count
	m	(Lpj;)Lca$a;	a	hasNbt
		p	1		nbt
	m	([Lcfz;)Lca$a;	a	of
		p	1		items
	m	()Lca;	b	build
	m	(Lbj;)Lca$a;	b	hasStoredEnchantment
		p	1		enchantment
	m	(Lcj$d;)Lca$a;	b	hasDurability
		p	1		durability
	f	Ljava/util/List;	a	enchantments
	f	Ljava/util/List;	b	storedEnchantments
	f	Ljava/util/Set;	c	items
	f	Lakh;	d	tag
	f	Lcj$d;	e	count
	f	Lcj$d;	f	durability
	f	Lcbv;	g	potion
	f	Lcl;	h	nbt
c	cb	net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		piercingKilledEntities
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcb$a;	a	createInstance
	m	(Ljava/util/List;Ljava/util/Set;Lcb$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cb$a	net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	m	(Lbo$b;[Lbo$b;Lcj$d;)V	<init>	<init>
		p	1		player
		p	2		victims
		p	3		uniqueEntityTypes
	m	(Lcj$d;)Lcb$a;	a	crossbowKilled
		p	0		uniqueEntityTypes
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ljava/util/Collection;I)Z	a	matches
		p	1		victimContexts
		p	2		uniqueEntityTypeCount
	m	([Lbo$a;)Lcb$a;	a	crossbowKilled
		p	0		victimPredicates
	f	[Lbo$b;	a	victims
	f	Lcj$d;	b	uniqueEntityTypes
c	cc	net/minecraft/advancements/critereon/KilledTrigger
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Laaj;	a	getId
	m	(Lafp;Lbaq;Lazz;)V	a	trigger
		p	1		player
		p	2		entity
		p	3		killingDamage
	m	(Lafp;Ldrg;Lazz;Lcc$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcc$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	id
c	cc$a	net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	m	(Laaj;Lbo$b;Lbo$b;Lbd;)V	<init>	<init>
		p	1		id
		p	2		player
		p	3		entity
		p	4		killingBlow
	m	(Lafp;Ldrg;Lazz;)Z	a	matches
		p	1		player
		p	2		killedEntityContext
		p	3		killingBlow
	m	(Lbo$a;)Lcc$a;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
	m	(Lbo$a;Lbd$a;)Lcc$a;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		killingBlowBuilder
	m	(Lbo$a;Lbd;)Lcc$a;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		damageSourcePredicate
	m	(Lbo;)Lcc$a;	a	playerKilledEntity
		p	0		killedEntityPredicate
	m	(Lbo;Lbd$a;)Lcc$a;	a	playerKilledEntity
		p	0		killedEntityPredicate
		p	1		damageSourcePredicateBuilder
	m	(Lbo;Lbd;)Lcc$a;	a	playerKilledEntity
		p	0		killedEntityPredicate
		p	1		damageSourcePredicate
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lbo$a;)Lcc$a;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
	m	(Lbo$a;Lbd$a;)Lcc$a;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		damageSourcePredicateBuilder
	m	(Lbo$a;Lbd;)Lcc$a;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		damageSourcePredicate
	m	(Lbo;)Lcc$a;	b	entityKilledPlayer
		p	0		killerEntityPredicate
	m	(Lbo;Lbd$a;)Lcc$a;	b	entityKilledPlayer
		p	0		killerEntityPredicate
		p	1		damageSourcePredicateBuilder
	m	(Lbo;Lbd;)Lcc$a;	b	entityKilledPlayer
		p	0		killerEntityPredicate
		p	1		damageSourcePredicate
	m	()Lcc$a;	c	playerKilledEntity
	m	()Lcc$a;	d	playerKilledEntityNearSculkCatalyst
	m	()Lcc$a;	e	entityKilledPlayer
	f	Lbo$b;	a	entityPredicate
	f	Lbd;	b	killingBlow
c	cd	net/minecraft/advancements/critereon/LevitationTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Ldvt;I)V	a	trigger
		p	1		player
		p	2		startPos
		p	3		duration
	m	(Lafp;Ldvt;ILcd$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcd$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cd$a	net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	m	(Lbo$b;Lbf;Lcj$d;)V	<init>	<init>
		p	1		player
		p	2		distance
		p	3		duration
	m	(Lafp;Ldvt;I)Z	a	matches
		p	1		player
		p	2		startPos
		p	3		duration
	m	(Lbf;)Lcd$a;	a	levitated
		p	0		distance
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbf;	a	distance
	f	Lcj$d;	b	duration
c	ce	net/minecraft/advancements/critereon/LightPredicate
	m	(Lcj$d;)V	<init>	<init>
		p	1		range
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lafo;Lgt;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/google/gson/JsonElement;)Lce;	a	fromJson
		p	0		json
	f	Lce;	a	ANY
	f	Lcj$d;	b	composite
c	ce$a	net/minecraft/advancements/critereon/LightPredicate$Builder
	m	()Lce$a;	a	light
	m	(Lcj$d;)Lce$a;	a	setComposite
		p	1		light
	m	()Lce;	b	build
	f	Lcj$d;	a	composite
c	cf	net/minecraft/advancements/critereon/LighthingBoltPredicate
	m	(Lcj$d;Lbo;)V	<init>	<init>
		p	1		blocksSetOnFire
		p	2		entityStruck
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lafo;Ldvt;Lbaq;)Z	a	lambda$matches$0
	m	(Lbaq;Lafo;Ldvt;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcj$d;)Lcf;	a	blockSetOnFire
		p	0		blocksSetOnFire
	m	(Lcom/google/gson/JsonObject;)Lcf;	a	fromJson
	m	()Lbp$a;	c	type
	f	Ljava/lang/String;	b	BLOCKS_SET_ON_FIRE_KEY
	f	Ljava/lang/String;	c	ENTITY_STRUCK_KEY
	f	Lcj$d;	d	blocksSetOnFire
	f	Lbo;	e	entityStruck
c	cg	net/minecraft/advancements/critereon/LightningStrikeTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbaq;)Ldrg;	a	lambda$trigger$0
		p	1		bystander
	m	(Lafp;Lbbe;Ljava/util/List;)V	a	trigger
		p	1		player
		p	2		lightning
		p	3		bystanders
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcg$a;	a	createInstance
	m	(Ldrg;Ljava/util/List;Lcg$a;)Z	a	lambda$trigger$1
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cg$a	net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	m	(Lbo$b;Lbo$b;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		lightning
		p	3		bystander
	m	(Lbo;Lbo;)Lcg$a;	a	lighthingStrike
		p	0		lightning
		p	1		bystander
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldrg;Ljava/util/List;)Z	a	matches
		p	1		lightning
		p	2		bystanders
	f	Lbo$b;	a	lightning
	f	Lbo$b;	b	bystander
c	ch	net/minecraft/advancements/critereon/LocationPredicate
	m	(Lcj$c;Lcj$c;Lcj$c;Laai;Laai;Laai;Ljava/lang/Boolean;Lce;Lau;Lbv;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		biome
		p	5		feature
		p	6		dimension
		p	7		smokey
		p	8		light
		p	9		block
		p	10		fluid
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laai;)Lch;	a	inBiome
		p	0		biome
	m	(Laaj;)Laai;	a	lambda$fromJson$2
	m	(Lafo;DDD)Z	a	matches
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcj$c;)Lch;	a	atYLocation
		p	0		y
	m	(Lcom/google/gson/JsonElement;)Lch;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonElement;)V	a	lambda$serializeToJson$0
	m	(Laai;)Lch;	b	inDimension
		p	0		dimension
	m	(Laaj;)Laai;	b	lambda$fromJson$1
	m	(Laai;)Lch;	c	inStructure
		p	0		feature
	f	Lch;	a	ANY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcj$c;	c	x
	f	Lcj$c;	d	y
	f	Lcj$c;	e	z
	f	Laai;	f	biome
	f	Laai;	g	structure
	f	Laai;	h	dimension
	f	Ljava/lang/Boolean;	i	smokey
	f	Lce;	j	light
	f	Lau;	k	block
	f	Lbv;	l	fluid
c	ch$a	net/minecraft/advancements/critereon/LocationPredicate$Builder
	m	()Lch$a;	a	location
	m	(Laai;)Lch$a;	a	setBiome
		p	1		biome
	m	(Lau;)Lch$a;	a	setBlock
		p	1		block
	m	(Lbv;)Lch$a;	a	setFluid
		p	1		fluid
	m	(Lce;)Lch$a;	a	setLight
		p	1		light
	m	(Lcj$c;)Lch$a;	a	setX
		p	1		x
	m	(Ljava/lang/Boolean;)Lch$a;	a	setSmokey
		p	1		smokey
	m	()Lch;	b	build
	m	(Laai;)Lch$a;	b	setStructure
		p	1		feature
	m	(Lcj$c;)Lch$a;	b	setY
		p	1		y
	m	(Laai;)Lch$a;	c	setDimension
		p	1		dimension
	m	(Lcj$c;)Lch$a;	c	setZ
		p	1		z
	f	Lcj$c;	a	x
	f	Lcj$c;	b	y
	f	Lcj$c;	c	z
	f	Laai;	d	biome
	f	Laai;	e	structure
	f	Laai;	f	dimension
	f	Ljava/lang/Boolean;	g	smokey
	f	Lce;	h	light
	f	Lau;	i	block
	f	Lbv;	j	fluid
c	ci	net/minecraft/advancements/critereon/LootTableTrigger
	m	()Laaj;	a	getId
	m	(Laaj;Lci$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lafp;Laaj;)V	a	trigger
		p	1		player
		p	2		id
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lci$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	ci$a	net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	m	(Lbo$b;Laaj;)V	<init>	<init>
		p	1		entity
		p	2		lootTable
	m	(Laaj;)Lci$a;	a	lootTableUsed
		p	0		lootTable
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Laaj;)Z	b	matches
		p	1		lootTable
	f	Laaj;	a	lootTable
c	cj	net/minecraft/advancements/critereon/MinMaxBounds
	m	(Ljava/lang/Number;Ljava/lang/Number;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/lang/Number;	a	getMin
	m	(Lcom/google/gson/JsonElement;Lcj;Ljava/util/function/BiFunction;Lcj$a;)Lcj;	a	fromJson
		p	0		json
		p	1		fallback
		p	2		asNumber
		p	3		factory
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isAllowedInputChat
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Lcj$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcj;	a	fromReader
		p	0		commandReader
		p	1		commandFactory
		p	2		converter
		p	3		exceptionTypeSupplier
		p	4		mapper
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number;	a	readNumber
		p	0		reader
		p	1		converter
		p	2		exceptionTypeSupplier
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	optionallyFormat
		p	0		object
		p	1		function
	m	()Ljava/lang/Number;	b	getMax
	m	()Z	c	isAny
	m	()Lcom/google/gson/JsonElement;	d	serializeToJson
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SWAPPED
	f	Ljava/lang/Number;	c	min
	f	Ljava/lang/Number;	d	max
c	cj$a	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
	m	(Ljava/lang/Number;Ljava/lang/Number;)Lcj;	create	create
		p	1		min
		p	2		max
c	cj$b	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Number;Ljava/lang/Number;)Lcj;	create	create
		p	1		reader
		p	2		min
		p	3		max
c	cj$c	net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	m	(Ljava/lang/Double;Ljava/lang/Double;)V	<init>	<init>
		p	1		min
		p	2		max
	m	(D)Lcj$c;	a	exactly
		p	0		value
	m	(DD)Lcj$c;	a	between
		p	0		min
		p	2		max
	m	(Lcom/google/gson/JsonElement;)Lcj$c;	a	fromJson
		p	0		element
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$c;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lcj$c;	a	create
		p	0		reader
		p	1		min
		p	2		max
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcj$c;	a	fromReader
		p	0		reader
		p	1		mapper
	m	(Ljava/lang/Double;)Ljava/lang/Double;	a	squareOpt
		p	0		value
	m	(D)Lcj$c;	b	atLeast
		p	0		value
	m	(Ljava/lang/Double;)Ljava/lang/Double;	b	lambda$fromReader$0
		p	0		value
	m	(D)Lcj$c;	c	atMost
		p	0		value
	m	(D)Z	d	matches
		p	1		value
	m	(D)Z	e	matchesSqr
		p	1		value
	f	Lcj$c;	e	ANY
	f	Ljava/lang/Double;	f	minSq
	f	Ljava/lang/Double;	g	maxSq
c	cj$d	net/minecraft/advancements/critereon/MinMaxBounds$Ints
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)V	<init>	<init>
		p	1		min
		p	2		max
	m	(I)Lcj$d;	a	exactly
		p	0		value
	m	(II)Lcj$d;	a	between
		p	0		min
		p	1		max
	m	(J)Z	a	matchesSqr
		p	1		value
	m	(Lcom/google/gson/JsonElement;)Lcj$d;	a	fromJson
		p	0		element
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$d;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lcj$d;	a	create
		p	0		reader
		p	1		min
		p	2		max
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcj$d;	a	fromReader
		p	0		reader
		p	1		converter
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	a	squareOpt
		p	0		value
	m	(I)Lcj$d;	b	atLeast
		p	0		value
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$fromReader$0
		p	0		value
	m	(I)Lcj$d;	c	atMost
		p	0		value
	m	(I)Z	d	matches
		p	1		value
	f	Lcj$d;	e	ANY
	f	Ljava/lang/Long;	f	minSq
	f	Ljava/lang/Long;	g	maxSq
c	ck	net/minecraft/advancements/critereon/MobEffectsPredicate
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		effects
	m	()Lck;	a	effects
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Lbah;)Lck;	a	and
		p	1		statusEffect
	m	(Lbah;Lck$a;)Lck;	a	and
		p	1		statusEffect
		p	2		data
	m	(Lbaq;)Z	a	matches
		p	1		entity
	m	(Lbbf;)Z	a	matches
		p	1		livingEntity
	m	(Lcom/google/gson/JsonElement;)Lck;	a	fromJson
		p	0		json
	m	(Ljava/util/Map;)Z	a	matches
		p	1		effects
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	f	Lck;	a	ANY
	f	Ljava/util/Map;	b	effects
c	ck$a	net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	m	(Lcj$d;Lcj$d;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1		amplifier
		p	2		duration
		p	3		ambient
		p	4		visible
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbaj;)Z	a	matches
		p	1		statusEffectInstance
	m	(Lcom/google/gson/JsonObject;)Lck$a;	a	fromJson
		p	0		json
	f	Lcj$d;	a	amplifier
	f	Lcj$d;	b	duration
	f	Ljava/lang/Boolean;	c	ambient
	f	Ljava/lang/Boolean;	d	visible
c	cl	net/minecraft/advancements/critereon/NbtPredicate
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbaq;)Z	a	matches
		p	1		entity
	m	(Lcaa;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonElement;)Lcl;	a	fromJson
		p	0		json
	m	(Lqc;)Z	a	matches
		p	1		element
	m	(Lbaq;)Lpj;	b	getEntityTagToCompare
		p	0		entity
	f	Lcl;	a	ANY
	f	Lpj;	b	tag
c	cm	net/minecraft/advancements/critereon/PickedUpItemTrigger
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;Lbaq;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lafp;Lcaa;Ldrg;Lcm$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcm$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	id
c	cm$a	net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance
	m	(Laaj;Lbo$b;Lca;Lbo$b;)V	<init>	<init>
		p	1		id
		p	2		player
		p	3		item
		p	4		entity
	m	(Lafp;Lcaa;Ldrg;)Z	a	matches
		p	1		player
		p	2		stack
		p	3		entityContext
	m	(Lbo$b;Lca;Lbo$b;)Lcm$a;	a	thrownItemPickedUpByEntity
		p	0		player
		p	1		item
		p	2		entity
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lbo$b;Lca;Lbo$b;)Lcm$a;	b	thrownItemPickedUpByPlayer
		p	0		player
		p	1		item
		p	2		entity
	f	Lca;	a	item
	f	Lbo$b;	b	entity
c	cn	net/minecraft/advancements/critereon/PlacedBlockTrigger
	m	()Laaj;	a	getId
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Lafp;Lgt;Lcaa;)V	a	trigger
		p	1		player
		p	2		blockPos
		p	3		stack
	m	(Lciw;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		name
	m	(Lcom/google/gson/JsonObject;)Lciw;	a	deserializeBlock
		p	0		obj
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcn$a;	a	createInstance
	m	(Lcur;Lgt;Lafp;Lcaa;Lcn$a;)Z	a	lambda$trigger$2
		p	4		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cn$a	net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	m	(Lbo$b;Lciw;Lcz;Lch;Lca;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		state
		p	4		location
		p	5		item
	m	(Lciw;)Lcn$a;	a	placedBlock
		p	0		block
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lcur;Lgt;Lafo;Lcaa;)Z	a	matches
		p	1		state
		p	2		pos
		p	3		world
		p	4		stack
	f	Lciw;	a	block
	f	Lcz;	b	state
	f	Lch;	c	location
	f	Lca;	d	item
c	co	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbaq;Lazz;FFZ)V	a	trigger
		p	1		player
		p	2		entity
		p	3		damage
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Lafp;Ldrg;Lazz;FFZLco$a;)Z	a	lambda$trigger$0
		p	6		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lco$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	co$a	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	m	(Lbo$b;Lbc;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		damage
		p	3		entity
	m	(Lafp;Ldrg;Lazz;FFZ)Z	a	matches
		p	1		player
		p	2		entityContext
		p	3		source
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Lbc$a;)Lco$a;	a	playerHurtEntity
		p	0		damagePredicateBuilder
	m	(Lbc$a;Lbo;)Lco$a;	a	playerHurtEntity
		p	0		damagePredicateBuilder
		p	1		hurtEntityPredicate
	m	(Lbc;)Lco$a;	a	playerHurtEntity
		p	0		damagePredicate
	m	(Lbc;Lbo;)Lco$a;	a	playerHurtEntity
		p	0		damagePredicate
		p	1		hurtEntityPredicate
	m	(Lbo;)Lco$a;	a	playerHurtEntity
		p	0		hurtEntityPredicate
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lco$a;	c	playerHurtEntity
	f	Lbc;	a	damage
	f	Lbo$b;	b	entity
c	cp	net/minecraft/advancements/critereon/PlayerInteractTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;Lbaq;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lcaa;Ldrg;Lcp$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcp$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cp$a	net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	m	(Lbo$b;Lca;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		item
		p	3		entity
	m	(Lbo$b;Lca$a;Lbo$b;)Lcp$a;	a	itemUsedOnEntity
		p	0		player
		p	1		itemBuilder
		p	2		entity
	m	(Lca$a;Lbo$b;)Lcp$a;	a	itemUsedOnEntity
		p	0		itemBuilder
		p	1		entity
	m	(Lcaa;Ldrg;)Z	a	matches
		p	1		stack
		p	2		context
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lca;	a	item
	f	Lbo$b;	b	entity
c	cq	net/minecraft/advancements/critereon/PlayerPredicate
	m	(Lcj$d;Lcfx;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Lbo;)V	<init>	<init>
		p	1		experienceLevel
		p	2		gameMode
		p	3		stats
		p	4		recipes
		p	5		advancements
		p	6		lookingAt
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lajl;)Laaj;	a	getStatValueId
		p	0		stat
	m	(Lajn;Laaj;)Lajl;	a	getStat
		p	0		type
		p	1		id
	m	(Lbaq;)Z	a	lambda$matches$1
	m	(Lbaq;Lafo;Ldvt;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/google/gson/JsonArray;Lajl;Lcj$d;)V	a	lambda$serializeCustomData$2
		p	1		stat
	m	(Lcom/google/gson/JsonObject;)Lcq;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Laaj;Lcq$c;)V	a	lambda$serializeCustomData$4
		p	1		id
	m	(Lcom/google/gson/JsonObject;Laaj;Ljava/lang/Boolean;)V	a	lambda$serializeCustomData$3
		p	1		id
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V	a	lambda$advancementPredicateFromJson$0
	m	(Lcom/google/gson/JsonElement;)Lcq$c;	b	advancementPredicateFromJson
		p	0		json
	m	()Lbp$a;	c	type
	f	I	b	LOOKING_AT_RANGE
	f	Lcj$d;	c	level
	f	Lcfx;	d	gameType
	f	Ljava/util/Map;	e	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	f	recipes
	f	Ljava/util/Map;	g	advancements
	f	Lbo;	h	lookingAt
c	cq$a	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V	<init>	<init>
		p	1		criteria
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lah;)Z	a	test
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criterions
c	cq$b	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	m	(Z)V	<init>	<init>
		p	1		done
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lah;)Z	a	test
	f	Z	a	state
c	cq$c	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	cq$d	net/minecraft/advancements/critereon/PlayerPredicate$Builder
	m	()Lcq$d;	a	player
	m	(Laaj;Ljava/util/Map;)Lcq$d;	a	checkAdvancementCriterions
		p	1		id
		p	2		criteria
	m	(Laaj;Z)Lcq$d;	a	addRecipe
		p	1		id
		p	2		unlocked
	m	(Lajl;Lcj$d;)Lcq$d;	a	addStat
		p	1		stat
		p	2		value
	m	(Lbo;)Lcq$d;	a	setLookingAt
		p	1		lookingAt
	m	(Lcfx;)Lcq$d;	a	setGameType
		p	1		gameMode
	m	(Lcj$d;)Lcq$d;	a	setLevel
		p	1		experienceLevel
	m	()Lcq;	b	build
	m	(Laaj;Z)Lcq$d;	b	checkAdvancementDone
		p	1		id
		p	2		done
	f	Lcj$d;	a	level
	f	Lcfx;	b	gameType
	f	Ljava/util/Map;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	f	Lbo;	f	lookingAt
c	cr	net/minecraft/advancements/critereon/PlayerTrigger
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Laaj;	a	getId
	m	(Lafp;)V	a	trigger
		p	1		player
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcr$a;	a	createInstance
	m	(Lcr$a;)Z	a	lambda$trigger$0
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	id
c	cr$a	net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance
	m	(Laaj;Lbo$b;)V	<init>	<init>
		p	1		id
		p	2		entity
	m	(Lbo;)Lcr$a;	a	located
		p	0		entity
	m	(Lch;)Lcr$a;	a	located
		p	0		location
	m	(Lciw;Lbzw;)Lcr$a;	a	walkOnBlockWithEquipment
		p	0		block
		p	1		item
	m	()Lcr$a;	c	sleptInBed
	m	()Lcr$a;	d	raidWon
	m	()Lcr$a;	e	avoidVibration
c	cs	net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	m	()Laaj;	a	getId
	m	(Laaj;)Lcs$a;	a	unlocked
		p	0		id
	m	(Lafp;Lccs;)V	a	trigger
		p	1		player
		p	2		recipe
	m	(Lccs;Lcs$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcs$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cs$a	net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	m	(Lbo$b;Laaj;)V	<init>	<init>
		p	1		player
		p	2		recipe
	m	(Lccs;)Z	a	matches
		p	1		recipe
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Laaj;	a	recipe
c	ct	net/minecraft/advancements/critereon/SerializationContext
	m	([Ldua;)Lcom/google/gson/JsonElement;	a	serializeConditions
		p	1		conditions
	f	Lct;	a	INSTANCE
	f	Lcom/google/gson/Gson;	b	predicateGson
c	cu	net/minecraft/advancements/critereon/ShotCrossbowTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcaa;Lcu$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcu$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cu$a	net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	m	(Lbo$b;Lca;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lca;)Lcu$a;	a	shotCrossbow
		p	0		itemPredicate
	m	(Lcaa;)Z	a	matches
		p	1		stack
	m	(Lcfz;)Lcu$a;	a	shotCrossbow
		p	0		item
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lca;	a	item
c	cv	net/minecraft/advancements/critereon/SimpleCriterionTrigger
	m	(Laar;)V	a	removePlayerListeners
		p	1		tracker
	m	(Laar;Lam$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lafp;Ljava/util/function/Predicate;)V	a	trigger
		p	1		player
		p	2		predicate
	m	(Lcom/google/gson/JsonObject;Lbe;)Lan;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Laar;)Ljava/util/Set;	b	lambda$addPlayerListener$0
		p	0		manager
	m	(Laar;Lam$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbe;)Las;	b	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ljava/util/Map;	a	players
c	cw	net/minecraft/advancements/critereon/SlideDownBlockTrigger
	m	()Laaj;	a	getId
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Lafp;Lcur;)V	a	trigger
		p	1		player
		p	2		state
	m	(Lciw;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		key
	m	(Lcom/google/gson/JsonObject;)Lciw;	a	deserializeBlock
		p	0		root
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcw$a;	a	createInstance
	m	(Lcur;Lcw$a;)Z	a	lambda$trigger$2
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cw$a	net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	m	(Lbo$b;Lciw;Lcz;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		state
	m	(Lciw;)Lcw$a;	a	slidesDownBlock
		p	0		block
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lcur;)Z	a	matches
		p	1		state
	f	Lciw;	a	block
	f	Lcz;	b	state
c	cx	net/minecraft/advancements/critereon/SlimePredicate
	m	(Lcj$d;)V	<init>	<init>
		p	1		size
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbaq;Lafo;Ldvt;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcj$d;)Lcx;	a	sized
		p	0		size
	m	(Lcom/google/gson/JsonObject;)Lcx;	a	fromJson
		p	0		json
	m	()Lbp$a;	c	type
	f	Lcj$d;	b	size
c	cy	net/minecraft/advancements/critereon/StartRidingTrigger
	m	()Laaj;	a	getId
	m	(Lafp;)V	a	trigger
		p	1		player
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lcy$a;	a	createInstance
	m	(Lcy$a;)Z	a	lambda$trigger$0
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	cy$a	net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	m	(Lbo$b;)V	<init>	<init>
		p	1		player
	m	(Lbo$a;)Lcy$a;	a	playerStartsRiding
		p	0		player
c	cz	net/minecraft/advancements/critereon/StatePropertiesPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcom/google/gson/JsonElement;)Lcz;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Lcz$c;)V	a	lambda$serializeToJson$1
		p	1		condition
	m	(Lcur;)Z	a	matches
		p	1		state
	m	(Lcus;Lcut;)Z	a	matches
		p	1		stateManager
		p	2		container
	m	(Lcus;Ljava/util/function/Consumer;)V	a	checkState
		p	1		factory
		p	2		reporter
	m	(Lcus;Ljava/util/function/Consumer;Lcz$c;)V	a	lambda$checkState$0
		p	2		condition
	m	(Ldoy;)Z	a	matches
		p	1		state
	m	(Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcz$c;	a	fromJson
		p	0		key
		p	1		json
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	b	getStringOrNull
		p	0		json
	f	Lcz;	a	ANY
	f	Ljava/util/List;	b	properties
c	cz$a	net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	m	()Lcz$a;	a	properties
	m	(Lcvu;I)Lcz$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Lcvu;Ljava/lang/Comparable;)Lcz$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Lcvu;Ljava/lang/String;)Lcz$a;	a	hasProperty
		p	1		property
		p	2		valueName
	m	(Lcvu;Z)Lcz$a;	a	hasProperty
		p	1		property
		p	2		value
	m	()Lcz;	b	build
	f	Ljava/util/List;	a	matchers
c	cz$b	net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		value
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcut;Lcvu;)Z	a	match
		p	1		state
		p	2		property
	f	Ljava/lang/String;	a	value
c	cz$c	net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcus;Lcut;)Z	a	match
		p	1		stateManager
		p	2		state
	m	(Lcus;Ljava/util/function/Consumer;)V	a	checkState
		p	1		factory
		p	2		reporter
	m	(Lcut;Lcvu;)Z	a	match
		p	1		state
		p	2		property
	m	()Ljava/lang/String;	b	getName
	f	Ljava/lang/String;	a	name
c	cz$d	net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		min
		p	3		max
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lcut;Lcvu;)Z	a	match
		p	1		state
		p	2		property
	f	Ljava/lang/String;	a	minValue
	f	Ljava/lang/String;	b	maxValue
c	da	net/minecraft/advancements/critereon/SummonedEntityTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbaq;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lda$a;	a	createInstance
	m	(Ldrg;Lda$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	da$a	net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	m	(Lbo$b;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		entity
	m	(Lbo$a;)Lda$a;	a	summonedEntity
		p	0		summonedEntityPredicateBuilder
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldrg;)Z	a	matches
		p	1		summonedEntityContext
	f	Lbo$b;	a	entity
c	db	net/minecraft/advancements/critereon/TameAnimalTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbmh;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldb$a;	a	createInstance
	m	(Ldrg;Ldb$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	db$a	net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	m	(Lbo$b;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		entity
	m	(Lbo;)Ldb$a;	a	tamedAnimal
		p	0		entity
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldrg;)Z	a	matches
		p	1		tamedEntityContext
	m	()Ldb$a;	c	tamedAnimal
	f	Lbo$b;	a	entity
c	dc	net/minecraft/advancements/critereon/TargetBlockTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbaq;Ldvt;I)V	a	trigger
		p	1		player
		p	2		projectile
		p	3		hitPos
		p	4		signalStrength
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldc$a;	a	createInstance
	m	(Ldrg;Ldvt;ILdc$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	dc$a	net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	m	(Lbo$b;Lcj$d;Lbo$b;)V	<init>	<init>
		p	1		player
		p	2		signalStrength
		p	3		projectile
	m	(Lcj$d;Lbo$b;)Ldc$a;	a	targetHit
		p	0		signalStrength
		p	1		projectile
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldrg;Ldvt;I)Z	a	matches
		p	1		projectileContext
		p	2		hitPos
		p	3		signalStrength
	f	Lcj$d;	a	signalStrength
	f	Lbo$b;	b	projectile
c	dd	net/minecraft/advancements/critereon/TradeTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lbsn;Lcaa;)V	a	trigger
		p	1		player
		p	2		merchant
		p	3		stack
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldd$a;	a	createInstance
	m	(Ldrg;Lcaa;Ldd$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	dd$a	net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	m	(Lbo$b;Lbo$b;Lca;)V	<init>	<init>
		p	1		player
		p	2		villager
		p	3		item
	m	(Lbo$a;)Ldd$a;	a	tradedWithVillager
		p	0		playerPredicate
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldrg;Lcaa;)Z	a	matches
		p	1		merchantContext
		p	2		stack
	m	()Ldd$a;	c	tradedWithVillager
	f	Lbo$b;	a	villager
	f	Lca;	b	item
c	de	net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	m	()Laaj;	a	getId
	m	(DLde$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lafp;Lgt;)V	a	trigger
		p	1		player
		p	2		strongholdPos
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Lde$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	de$a	net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	m	(Lbo$b;Lcj$c;)V	<init>	<init>
		p	1		player
		p	2		distance
	m	(D)Z	a	matches
		p	1		distance
	f	Lcj$c;	a	level
c	df	net/minecraft/advancements/critereon/UsedTotemTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcaa;Ldf$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldf$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	df$a	net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	m	(Lbo$b;Lca;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lca;)Ldf$a;	a	usedTotem
		p	0		itemPredicate
	m	(Lcaa;)Z	a	matches
		p	1		stack
	m	(Lcfz;)Ldf$a;	a	usedTotem
		p	0		item
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lca;	a	item
c	dg	net/minecraft/advancements/critereon/UsingItemTrigger
	m	()Laaj;	a	getId
	m	(Lafp;Lcaa;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcaa;Ldg$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Ldg$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbo$b;Lbe;)Las;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Laaj;	a	ID
c	dg$a	net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	m	(Lbo$b;Lca;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lbo$a;Lca$a;)Ldg$a;	a	lookingAt
		p	0		player
		p	1		item
	m	(Lcaa;)Z	a	matches
		p	1		stack
	m	(Lct;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lca;	a	item
c	dh	net/minecraft/advancements/critereon/WrappedMinMaxBounds
	m	(Ljava/lang/Float;Ljava/lang/Float;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/lang/Float;	a	getMin
	m	(D)Z	a	matchesSqr
		p	1		value
	m	(F)Ldh;	a	exactly
		p	0		value
	m	(FF)Ldh;	a	between
		p	0		min
		p	1		max
	m	(Lcom/google/gson/JsonElement;)Ldh;	a	fromJson
		p	0		json
	m	(Lcom/mojang/brigadier/StringReader;Z)Ldh;	a	fromReader
		p	0		reader
		p	1		allowFloats
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Ldh;	a	fromReader
		p	0		reader
		p	1		allowFloats
		p	2		transform
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$fromReader$0
		p	0		value
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	optionallyFormat
		p	0		value
		p	1		function
	m	()Ljava/lang/Float;	b	getMax
	m	(F)Ldh;	b	atLeast
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	readNumber
		p	0		reader
		p	1		allowFloats
	m	()Lcom/google/gson/JsonElement;	c	serializeToJson
	m	(F)Ldh;	c	atMost
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	isAllowedNumber
		p	0		reader
		p	1		allowFloats
	m	(F)Z	d	matches
		p	1		value
	f	Ldh;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INTS_ONLY
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
c	di	net/minecraft/advancements/critereon/package-info
c	dj	net/minecraft/advancements/package-info
c	dk	net/minecraft/commands/BrigadierExceptions
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$16
		p	0		message
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$7
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$15
		p	0		symbol
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$6
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$14
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$5
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$13
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$4
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$12
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$3
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$11
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$2
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$10
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$1
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$9
		p	0		character
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$0
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	lambda$static$8
		p	0		expected
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
c	dl	net/minecraft/commands/CommandBuildContext
	m	(Lhn;)V	<init>	<init>
		p	1		dynamicRegistryManager
	m	(Laai;)Lhd;	a	holderLookup
		p	1		registryRef
	m	(Ldl$a;)V	a	missingTagAccessPolicy
		p	1		entryListCreationPolicy
	f	Lhn;	a	registryAccess
	f	Ldl$a;	b	missingTagAccessPolicy
c	dl$1	net/minecraft/commands/CommandBuildContext$1
	m	(Ldl;Lhm;)V	<init>	<init>
		p	2		registry
	m	(Lakh;)Ljava/util/Optional;	a	get
		p	1		tag
	f	Ldl;	a	this$0
c	dl$2	net/minecraft/commands/CommandBuildContext$2
	f	[I	a	$SwitchMap$net$minecraft$commands$CommandBuildContext$MissingTagAccessPolicy
c	dl$a	net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy
	m	()[Ldl$a;	a	$values
	f	Ldl$a;	a	CREATE_NEW
	f	Ldl$a;	b	RETURN_EMPTY
	f	Ldl$a;	c	FAIL
	f	[Ldl$a;	d	$VALUES
c	dm	net/minecraft/commands/CommandFunction
	m	(Laaj;[Ldm$c;)V	<init>	<init>
		p	1		id
		p	2		elements
	m	()Laaj;	a	getId
	m	(Laaj;Lcom/mojang/brigadier/CommandDispatcher;Ldr;Ljava/util/List;)Ldm;	a	fromLines
		p	0		id
		p	1		dispatcher
		p	2		source
		p	3		lines
	m	()[Ldm$c;	b	getEntries
	f	[Ldm$c;	a	entries
	f	Laaj;	b	id
c	dm$a	net/minecraft/commands/CommandFunction$CacheableFunction
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	(Ldm;)V	<init>	<init>
		p	1		function
	m	()Laaj;	a	getId
	m	(Laaw;)Ljava/util/Optional;	a	get
		p	1		manager
	m	(Ldm;)Laaj;	a	lambda$getId$0
		p	0		f
	f	Ldm$a;	a	NONE
	f	Laaj;	b	id
	f	Z	c	resolved
	f	Ljava/util/Optional;	d	function
c	dm$b	net/minecraft/commands/CommandFunction$CommandEntry
	m	(Lcom/mojang/brigadier/ParseResults;)V	<init>	<init>
		p	1		parsed
	m	(Laaw;Ldr;)I	a	execute
		p	1		manager
		p	2		source
	m	(Laaw;Ldr;Ljava/util/Deque;IILaaw$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
	f	Lcom/mojang/brigadier/ParseResults;	a	parse
c	dm$c	net/minecraft/commands/CommandFunction$Entry
	m	(Laaw;Ldr;Ljava/util/Deque;IILaaw$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
c	dm$d	net/minecraft/commands/CommandFunction$FunctionEntry
	m	(Ldm;)V	<init>	<init>
		p	1		function
	m	(Laaw$c;I)V	a	lambda$execute$1
	m	(Laaw$c;IILjava/util/Deque;Ldr;Ldm;)V	a	lambda$execute$0
		p	5		f
	m	(Laaw;Ldr;Ljava/util/Deque;IILaaw$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
	f	Ldm$a;	a	function
c	dn	net/minecraft/commands/CommandRuntimeException
	m	(Lrm;)V	<init>	<init>
		p	1		message
	m	()Lrm;	a	getComponent
	f	Lrm;	a	message
c	dp	net/minecraft/commands/CommandSigningContext
	m	(Ljava/lang/String;)Z	a	signedArgumentPreview
		p	1		argumentName
	m	(Ljava/lang/String;)Lrr;	b	lambda$static$0
		p	0		argumentName
	m	(Ljava/lang/String;)Lrr;	getArgumentSignature	getArgumentSignature
		p	1		argumentName
	f	Ldp;	a	NONE
c	dp$a	net/minecraft/commands/CommandSigningContext$SignedArguments
	m	()Ljava/util/UUID;	a	sender
	m	(Ljava/lang/String;)Z	a	signedArgumentPreview
		p	1		argumentName
	m	()Ljava/time/Instant;	b	timeStamp
	m	()Ldv;	c	argumentSignatures
	m	()Z	d	signedPreview
	m	(Ljava/lang/String;)Lrr;	getArgumentSignature	getArgumentSignature
		p	1		argumentName
	f	Ljava/util/UUID;	b	sender
	f	Ljava/time/Instant;	c	timeStamp
	f	Ldv;	d	argumentSignatures
	f	Z	e	signedPreview
c	dq	net/minecraft/commands/CommandSource
	m	()Z	G_	shouldInformAdmins
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	()Z	d_	alwaysAccepts
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
	f	Ldq;	a	NULL
c	dq$1	net/minecraft/commands/CommandSource$1
	m	()Z	G_	shouldInformAdmins
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
c	dr	net/minecraft/commands/CommandSourceStack
	m	(Ldq;Ldvt;Ldvs;Lafo;ILjava/lang/String;Lrm;Lnet/minecraft/server/MinecraftServer;Lbaq;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
	m	(Ldq;Ldvt;Ldvs;Lafo;ILjava/lang/String;Lrm;Lnet/minecraft/server/MinecraftServer;Lbaq;ZLcom/mojang/brigadier/ResultConsumer;Lea$a;Ldp;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
		p	10		silent
		p	11		consumer
		p	12		entityAnchor
		p	13		signer
	m	()Ldr;	a	withSuppressedOutput
	m	(I)Ldr;	a	withPermission
		p	1		level
	m	(Laai;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Lafo;)Ldr;	a	withLevel
		p	1		world
	m	(Lbaq;)Ldr;	a	withEntity
		p	1		entity
	m	(Lbaq;Lea$a;)Ldr;	a	facing
		p	1		entity
		p	2		anchor
	m	(Lcom/mojang/brigadier/ResultConsumer;)Ldr;	a	withCallback
		p	1		consumer
	m	(Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Ldr;	a	withCallback
		p	1		consumer
		p	2		merger
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	onCommandComplete
		p	1		context
		p	2		success
		p	3		result
	m	(Ldp;)Ldr;	a	withSigningContext
		p	1		signer
	m	(Ldq;)Ldr;	a	withSource
		p	1		output
	m	(Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhm;)Ljava/util/concurrent/CompletableFuture;	a	lambda$suggestRegistryElements$1
		p	3		registry
	m	(Ldvs;)Ldr;	a	withRotation
		p	1		rotation
	m	(Ldvt;)Ldr;	a	withPosition
		p	1		position
	m	(Lea$a;)Ldr;	a	withAnchor
		p	1		anchor
	m	(Lrm;)V	a	sendFailure
		p	1		message
	m	(Lrm;Z)V	a	sendSuccess
		p	1		message
		p	2		broadcastToOps
	m	()Lrm;	b	getDisplayName
	m	(I)Ldr;	b	withMaximumPermission
		p	1		level
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	b	lambda$new$0
		p	0		context
		p	1		success
		p	2		result
	m	(Ldvt;)Ldr;	b	facing
		p	1		position
	m	(Lrm;)V	b	broadcastToAdmins
		p	1		message
	m	()Ljava/lang/String;	c	getTextName
	m	(I)Z	c	hasPermission
		p	1		level
	m	()Lri;	d	asChatSender
	m	()Ldvt;	e	getPosition
	m	()Lafo;	f	getLevel
	m	()Lbaq;	g	getEntity
	m	()Lbaq;	h	getEntityOrException
	m	()Lafp;	i	getPlayerOrException
	m	()Lafp;	j	getPlayer
	m	()Z	k	isPlayer
	m	()Ldvs;	l	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	m	getServer
	m	()Lea$a;	n	getAnchor
	m	()Ldp;	o	getSigningContext
	m	()Ljava/util/Collection;	p	getOnlinePlayerNames
	m	()Ljava/util/Collection;	q	getAllTeams
	m	()Ljava/util/Collection;	r	getAvailableSoundEvents
	m	()Ljava/util/stream/Stream;	s	getRecipeNames
	m	()Ljava/util/Set;	t	levels
	m	()Lhn;	u	registryAccess
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ENTITY
	f	Ldq;	c	source
	f	Ldvt;	d	worldPosition
	f	Lafo;	e	level
	f	I	f	permissionLevel
	f	Ljava/lang/String;	g	textName
	f	Lrm;	h	displayName
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Z	j	silent
	f	Lbaq;	k	entity
	f	Lcom/mojang/brigadier/ResultConsumer;	l	consumer
	f	Lea$a;	m	anchor
	f	Ldvs;	n	rotation
	f	Ldp;	o	signingContext
c	ds	net/minecraft/commands/Commands
	m	(Lds$a;Ldl;)V	<init>	<init>
		p	1		environment
		p	2		commandRegistryAccess
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Lafp;)V	a	sendCommands
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V	a	lambda$validate$7
		p	1		parent
		p	2		child
		p	3		sibling
		p	4		inputs
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	getParseException
		p	0		parse
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String;	a	lambda$validate$9
		p	0		type
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$fillUsableCommands$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$new$0
		p	0		context
		p	1		success
		p	2		result
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ldr;Ljava/util/Map;)V	a	fillUsableCommands
		p	1		tree
		p	2		result
		p	3		source
		p	4		resultNodes
	m	(Ldr;Ljava/lang/String;)I	a	performPrefixedCommand
		p	1		source
		p	2		command
	m	(Lds$b;)Ljava/util/function/Predicate;	a	createValidator
		p	0		parser
	m	(Lds$b;Ljava/lang/String;)Z	a	lambda$createValidator$6
		p	1		string
	m	(Ldt;)Z	a	lambda$fillUsableCommands$4
		p	0		source
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	literal
		p	0		literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Lrv;)Lrv;	a	lambda$performCommand$2
		p	1		style
	m	(Lrt;Lrv;)Lrv;	a	lambda$performCommand$3
		p	1		style
	m	()V	b	validate
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Z	b	lambda$validate$8
		p	0		type
	m	(Ldr;Ljava/lang/String;)I	b	performCommand
		p	1		commandSource
		p	2		command
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$performCommand$1
	f	I	a	LEVEL_ALL
	f	I	b	LEVEL_MODERATORS
	f	I	c	LEVEL_GAMEMASTERS
	f	I	d	LEVEL_ADMINS
	f	I	e	LEVEL_OWNERS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lcom/mojang/brigadier/CommandDispatcher;	g	dispatcher
c	ds$a	net/minecraft/commands/Commands$CommandSelection
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		integrated
		p	4		dedicated
	m	()[Lds$a;	a	$values
	f	Lds$a;	a	ALL
	f	Lds$a;	b	DEDICATED
	f	Lds$a;	c	INTEGRATED
	f	Z	d	includeIntegrated
	f	Z	e	includeDedicated
	f	[Lds$a;	f	$VALUES
c	ds$b	net/minecraft/commands/Commands$ParseFunction
	m	(Lcom/mojang/brigadier/StringReader;)V	parse	parse
		p	1		reader
c	dt	net/minecraft/commands/SharedSuggestionProvider
	m	(Laai;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Laaj;)Laaj;	a	lambda$suggestResource$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laaj;)V	a	lambda$suggestResource$3
		p	1		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Laaj;)V	a	lambda$suggestResource$1
		p	2		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	a	lambda$suggestResource$4
		p	3		object
	m	(Lhm;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestRegistryElements
		p	1		registry
		p	2		suggestedIdType
		p	3		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		prefix
		p	3		identifier
		p	4		action
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		identifier
		p	3		action
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	matchesSubStr
		p	0		remaining
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggest
		p	0		candidates
		p	1		builder
	m	(Laaj;)Laaj;	b	lambda$suggestResource$0
		p	0		id
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
		p	2		suggestionText
		p	3		tooltip
	m	(Ljava/lang/String;Ljava/lang/String;)Z	b	lambda$suggest$5
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggest2DCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(I)Z	c	hasPermission
		p	1		level
	m	()Ljava/util/Collection;	p	getOnlinePlayerNames
	m	()Ljava/util/Collection;	q	getAllTeams
	m	()Ljava/util/Collection;	r	getAvailableSoundEvents
	m	()Ljava/util/stream/Stream;	s	getRecipeNames
	m	()Ljava/util/Set;	t	levels
	m	()Lhn;	u	registryAccess
	m	()Ljava/util/Collection;	v	getSelectedEntities
	m	()Ljava/util/Collection;	w	getRelevantCoordinates
	m	()Ljava/util/Collection;	x	getAbsoluteCoordinates
c	dt$a	net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	m	()Z	a	shouldSuggestTags
	m	()Z	b	shouldSuggestElements
	m	()[Ldt$a;	c	$values
	f	Ldt$a;	a	TAGS
	f	Ldt$a;	b	ELEMENTS
	f	Ldt$a;	c	ALL
	f	[Ldt$a;	d	$VALUES
c	dt$b	net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	f	Ldt$b;	a	DEFAULT_LOCAL
	f	Ldt$b;	b	DEFAULT_GLOBAL
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
c	du	net/minecraft/commands/arguments/AngleArgument
	m	()Ldu;	a	angle
	m	(Lcom/mojang/brigadier/StringReader;)Ldu$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F	a	getAngle
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_ANGLE
	f	Ljava/util/Collection;	c	EXAMPLES
c	du$a	net/minecraft/commands/arguments/AngleArgument$SingleAngle
	m	(FZ)V	<init>	<init>
		p	1		angle
		p	2		relative
	m	(Ldr;)F	a	getAngle
		p	1		source
	f	F	a	angle
	f	Z	b	isRelative
c	dv	net/minecraft/commands/arguments/ArgumentSignatures
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Ldv;	a	empty
	m	(Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/Map;	a	collectLastChildPlainSignableComponents
		p	0		builder
	m	(Leu;Lcom/mojang/brigadier/context/ParsedArgument;)Lrm;	a	getPlainComponentUnchecked
		p	0		type
		p	1		argument
	m	(Ljava/lang/String;)Lakq$b;	a	get
		p	1		argumentName
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Ljava/lang/String;)V	a	lambda$write$1
		p	0		buf
		p	1		argumentName
	m	()J	b	salt
	m	(Lqx;)Ljava/lang/String;	b	lambda$new$0
		p	0		buf2
	m	()Ljava/util/Map;	c	signatures
	f	J	a	salt
	f	Ljava/util/Map;	b	signatures
	f	I	c	MAX_ARGUMENT_COUNT
	f	I	d	MAX_ARGUMENT_NAME_LENGTH
c	dw	net/minecraft/commands/arguments/ColorArgument
	m	()Ldw;	a	color
	m	(Lcom/mojang/brigadier/StringReader;)Lp;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lp;	a	getColor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		color
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	dx	net/minecraft/commands/arguments/ComponentArgument
	m	()Ldx;	a	textComponent
	m	(Lcom/mojang/brigadier/StringReader;)Lrm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lrm;	a	getComponent
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		text
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_JSON
	f	Ljava/util/Collection;	b	EXAMPLES
c	dy	net/minecraft/commands/arguments/CompoundTagArgument
	m	()Ldy;	a	compoundTag
	m	(Lcom/mojang/brigadier/StringReader;)Lpj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lpj;	a	getCompoundTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	dz	net/minecraft/commands/arguments/DimensionArgument
	m	()Ldz;	a	dimension
	m	(Laai;)Ljava/lang/String;	a	lambda$static$0
		p	0		key
	m	(Lcom/mojang/brigadier/StringReader;)Laaj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lafo;	a	getDimension
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_VALUE
c	ea	net/minecraft/commands/arguments/EntityAnchorArgument
	m	()Lea;	a	anchor
	m	(Lcom/mojang/brigadier/StringReader;)Lea$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lea$a;	a	getAnchor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID
c	ea$a	net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	3		id
		p	4		offset
	m	()[Lea$a;	a	$values
	m	(Lbaq;)Ldvt;	a	apply
		p	1		entity
	m	(Ldr;)Ldvt;	a	apply
		p	1		source
	m	(Ldvt;Lbaq;)Ldvt;	a	lambda$static$1
		p	0		pos
		p	1		entity
	m	(Ljava/lang/String;)Lea$a;	a	getByName
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$2
		p	0		map
	m	(Ldvt;Lbaq;)Ldvt;	b	lambda$static$0
		p	0		pos
		p	1		entity
	f	Lea$a;	a	FEET
	f	Lea$a;	b	EYES
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	f	Ljava/util/function/BiFunction;	e	transform
	f	[Lea$a;	f	$VALUES
c	eb	net/minecraft/commands/arguments/EntityArgument
	m	(ZZ)V	<init>	<init>
		p	1		singleTarget
		p	2		playersOnly
	m	()Leb;	a	entity
	m	(Lcom/mojang/brigadier/StringReader;)Lfz;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbaq;	a	getEntity
		p	0		context
		p	1		name
	m	(Ldt;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$0
		p	2		builder
	m	()Leb;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
		p	0		context
		p	1		name
	m	()Leb;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
		p	0		context
		p	1		name
	m	()Leb;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lafp;	e	getPlayer
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_SINGLE_ENTITY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_SINGLE_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ONLY_PLAYERS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_ENTITIES_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_PLAYERS_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SELECTORS_NOT_ALLOWED
	f	Ljava/util/Collection;	g	EXAMPLES
	f	Z	h	single
	f	Z	i	playersOnly
c	eb$a	net/minecraft/commands/arguments/EntityArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Leb$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Leb$a$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Leb;)Leb$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Leb$a$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_SINGLE
	f	B	b	FLAG_PLAYERS_ONLY
c	eb$a$a	net/minecraft/commands/arguments/EntityArgument$Info$Template
	m	(Leb$a;ZZ)V	<init>	<init>
		p	2		single
		p	3		playersOnly
	m	()Lgf;	a	type
	m	(Ldl;)Leb;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Leb$a;	a	this$0
	f	Z	b	single
	f	Z	c	playersOnly
c	ec	net/minecraft/commands/arguments/EntitySummonArgument
	m	()Lec;	a	id
	m	(Laaj;)Laaj;	a	verifyCanSummon
		p	0		id
	m	(Lcom/mojang/brigadier/StringReader;)Laaj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laaj;	a	getSummonableEntity
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Laaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$verifyCanSummon$1
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_ENTITY
	f	Ljava/util/Collection;	b	EXAMPLES
c	ed	net/minecraft/commands/arguments/GameProfileArgument
	m	()Led;	a	gameProfile
	m	(Lcom/mojang/brigadier/StringReader;)Led$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$1
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getGameProfiles
		p	0		context
		p	1		name
	m	(Ljava/lang/String;Ldr;)Ljava/util/Collection;	a	lambda$parse$0
		p	1		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_UNKNOWN_PLAYER
	f	Ljava/util/Collection;	b	EXAMPLES
c	ed$a	net/minecraft/commands/arguments/GameProfileArgument$Result
	m	(Ldr;)Ljava/util/Collection;	getNames	getNames
		p	1		source
c	ed$b	net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	m	(Lfz;)V	<init>	<init>
		p	1		selector
	m	(Ldr;)Ljava/util/Collection;	getNames	getNames
		p	1		source
	f	Lfz;	a	selector
c	ee	net/minecraft/commands/arguments/ItemEnchantmentArgument
	m	()Lee;	a	enchantment
	m	(Laaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/StringReader;)Lcdu;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcdu;	a	getEnchantment
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_ENCHANTMENT
	f	Ljava/util/Collection;	b	EXAMPLES
c	ef	net/minecraft/commands/arguments/MessageArgument
	m	()Lef;	a	message
	m	(Lcom/mojang/brigadier/StringReader;)Lef$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lrm;	a	getMessage
		p	0		context
		p	1		name
	m	(Ldr;Lef$b;)Ljava/util/concurrent/CompletableFuture;	a	resolvePreview
		p	1		source
		p	2		format
	m	(Ldr;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	resolvePreview
		p	1		source
		p	2		format
	m	(Ldr;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$logResolutionFailure$0
		p	1		throwable
	m	(Ldr;Ljava/util/concurrent/CompletableFuture;)V	a	logResolutionFailure
		p	0		source
		p	1		future
	m	(Lef$b;)Lrm;	a	getPlainSignableComponent
		p	1		value
	m	(Ljava/lang/Object;)Lrm;	a	getPlainSignableComponent
		p	1		value
	m	()Ljava/lang/Class;	b	getValueType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lef$a;	b	getChatMessage
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lorg/slf4j/Logger;	b	LOGGER
c	ef$a	net/minecraft/commands/arguments/MessageArgument$ChatMessage
	m	()Ljava/lang/String;	a	plain
	m	(Lagd;)Lru;	a	getSignedMessage
		p	1		decorated
	m	(Ldr;)Ljava/util/concurrent/CompletableFuture;	a	resolve
		p	1		source
	m	(Ldr;Lagd;)Lagd;	a	lambda$resolve$1
		p	2		decorated
	m	(Ldr;Lrm;)Ljava/util/concurrent/CompletableFuture;	a	filterComponent
		p	1		source
		p	2		message
	m	(Ldr;Lru;)V	a	verify
		p	1		source
		p	2		message
	m	()Lrm;	b	formatted
	m	(Ldr;Lagd;)Ljava/util/concurrent/CompletionStage;	b	lambda$resolve$0
		p	2		filtered
	m	()Lrr;	c	signature
	m	()Z	d	signedPreview
	f	Ljava/lang/String;	a	plain
	f	Lrm;	b	formatted
	f	Lrr;	c	signature
	f	Z	d	signedPreview
c	ef$b	net/minecraft/commands/arguments/MessageArgument$Message
	m	(Ljava/lang/String;[Lef$c;)V	<init>	<init>
		p	1		contents
		p	2		selectors
	m	()Ljava/lang/String;	a	getText
	m	(Lcom/mojang/brigadier/StringReader;Z)Lef$b;	a	parseText
		p	0		reader
		p	1		canUseSelectors
	m	(Ldr;)Ljava/util/concurrent/CompletableFuture;	a	resolveDecoratedComponent
		p	1		source
	m	(Ldr;Z)Lrm;	a	toComponent
		p	1		source
		p	2		canUseSelectors
	m	()[Lef$c;	b	getParts
	m	(Ldr;)Lrm;	b	resolveComponent
		p	1		source
	f	Ljava/lang/String;	a	text
	f	[Lef$c;	b	parts
c	ef$c	net/minecraft/commands/arguments/MessageArgument$Part
	m	(IILfz;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		selector
	m	()I	a	getStart
	m	(Ldr;)Lrm;	a	toComponent
		p	1		source
	m	()I	b	getEnd
	m	()Lfz;	c	getSelector
	f	I	a	start
	f	I	b	end
	f	Lfz;	c	selector
c	eg	net/minecraft/commands/arguments/MobEffectArgument
	m	()Leg;	a	effect
	m	(Laaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/StringReader;)Lbah;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbah;	a	getEffect
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_EFFECT
	f	Ljava/util/Collection;	b	EXAMPLES
c	eh	net/minecraft/commands/arguments/NbtPathArgument
	m	()Leh;	a	nbtPath
	m	(C)Z	a	isAllowedInUnquotedName
		p	0		c
	m	(Lcom/mojang/brigadier/StringReader;)Leh$g;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Leh$h;	a	readObjectNode
		p	0		reader
		p	1		name
	m	(Lcom/mojang/brigadier/StringReader;Z)Leh$h;	a	parseNode
		p	0		reader
		p	1		root
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leh$g;	a	getPath
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		path
	m	(Lpj;)Ljava/util/function/Predicate;	a	createTagPredicate
		p	0		filter
	m	(Lpj;Lqc;)Z	a	lambda$createTagPredicate$1
		p	1		nbt
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readUnquotedName
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_NODE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOTHING_FOUND
	f	Ljava/util/Collection;	c	EXAMPLES
	f	C	d	INDEX_MATCH_START
	f	C	e	INDEX_MATCH_END
	f	C	f	KEY_MATCH_START
	f	C	g	KEY_MATCH_END
	f	C	h	QUOTED_KEY_START
c	eh$a	net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	m	()Lqc;	a	createPreferredParentTag
	m	(Lqc;)I	a	removeTag
		p	1		current
	m	(Lqc;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lqc;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lqc;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Leh$a;	a	INSTANCE
c	eh$b	net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Lqc;	a	createPreferredParentTag
	m	(Lqc;)I	a	removeTag
		p	1		current
	m	(Lqc;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lqc;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lqc;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
c	eh$c	net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	m	(I)V	<init>	<init>
		p	1		index
	m	()Lqc;	a	createPreferredParentTag
	m	(Lqc;)I	a	removeTag
		p	1		current
	m	(Lqc;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lqc;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lqc;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	I	a	index
c	eh$d	net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	m	(Lpj;)V	<init>	<init>
		p	1		filter
	m	()Lqc;	a	createPreferredParentTag
	m	(Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lqc;)V	a	lambda$getOrCreateTag$0
		p	2		nbt
	m	(Lqc;)I	a	removeTag
		p	1		current
	m	(Lqc;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lqc;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lqc;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Lpj;	a	pattern
	f	Ljava/util/function/Predicate;	b	predicate
c	eh$e	net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	m	(Ljava/lang/String;Lpj;)V	<init>	<init>
		p	1		name
		p	2		filter
	m	()Lqc;	a	createPreferredParentTag
	m	(Lqc;)I	a	removeTag
		p	1		current
	m	(Lqc;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lqc;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lqc;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
	f	Lpj;	b	pattern
	f	Ljava/util/function/Predicate;	c	predicate
c	eh$f	net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	m	(Lpj;)V	<init>	<init>
		p	1		filter
	m	()Lqc;	a	createPreferredParentTag
	m	(Lqc;)I	a	removeTag
		p	1		current
	m	(Lqc;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lqc;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lqc;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/util/function/Predicate;	a	predicate
c	eh$g	net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	m	(Ljava/lang/String;[Leh$h;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		string
		p	2		nodes
		p	3		nodeEndIndices
	m	(Leh$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNotFoundException
		p	1		node
	m	(Leh$h;Ljava/util/function/Supplier;Lqc;)Ljava/lang/Integer;	a	lambda$set$1
		p	2		nbt
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$apply$0
		p	0		a
		p	1		b
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	apply
		p	0		elements
		p	1		operation
	m	(Lqc;)Ljava/util/List;	a	get
		p	1		element
	m	(Lqc;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		element
		p	2		source
	m	(Lqc;Lqc;)I	a	set
		p	1		element
		p	2		source
	m	(Lqc;)I	b	countMatching
		p	1		element
	m	(Lqc;Ljava/util/function/Supplier;)I	b	set
		p	1		element
		p	2		source
	m	(Lqc;)I	c	remove
		p	1		element
	m	(Lqc;)Ljava/util/List;	d	getOrCreateParents
		p	1		start
	f	Ljava/lang/String;	a	original
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	nodeToOriginalPosition
	f	[Leh$h;	c	nodes
c	eh$h	net/minecraft/commands/arguments/NbtPathArgument$Node
	m	()Lqc;	a	createPreferredParentTag
	m	(Ljava/util/List;)Ljava/util/List;	a	get
		p	1		elements
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	collect
		p	1		elements
		p	2		action
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		elements
		p	2		supplier
	m	(Ljava/util/function/Supplier;Lqc;Ljava/util/List;)V	a	lambda$getOrCreate$0
		p	2		current
		p	3		results
	m	(Lqc;)I	a	removeTag
		p	1		current
	m	(Lqc;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lqc;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lqc;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
c	ei	net/minecraft/commands/arguments/NbtTagArgument
	m	()Lei;	a	nbtTag
	m	(Lcom/mojang/brigadier/StringReader;)Lqc;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqc;	a	getNbtTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	ej	net/minecraft/commands/arguments/ObjectiveArgument
	m	()Lej;	a	objective
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldwo;	a	getObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldwo;	b	getWritableObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_OBJECTIVE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_OBJECTIVE_READ_ONLY
c	ek	net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	m	()Lek;	a	criteria
	m	(Lajn;Ljava/lang/Object;)Ljava/lang/String;	a	getName
		p	1		stat
		p	2		value
	m	(Lcom/mojang/brigadier/StringReader;)Ldwu;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldwu;	a	getCriteria
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	el	net/minecraft/commands/arguments/OperationArgument
	m	()Lel;	a	operation
	m	(II)I	a	lambda$getSimpleOperation$6
		p	0		a
		p	1		b
	m	(Lcom/mojang/brigadier/StringReader;)Lel$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lel$a;	a	getOperation
		p	0		context
		p	1		name
	m	(Ldwq;Ldwq;)V	a	lambda$getOperation$0
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Lel$a;	a	getOperation
		p	0		operator
	m	(II)I	b	lambda$getSimpleOperation$5
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Lel$b;	b	getSimpleOperation
		p	0		operator
	m	(II)I	c	lambda$getSimpleOperation$4
		p	0		a
		p	1		b
	m	(II)I	d	lambda$getSimpleOperation$3
		p	0		a
		p	1		b
	m	(II)I	e	lambda$getSimpleOperation$2
		p	0		a
		p	1		b
	m	(II)I	f	lambda$getSimpleOperation$1
		p	0		a
		p	1		b
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DIVIDE_BY_ZERO
c	el$a	net/minecraft/commands/arguments/OperationArgument$Operation
	m	(Ldwq;Ldwq;)V	apply	apply
		p	1		a
		p	2		b
c	el$b	net/minecraft/commands/arguments/OperationArgument$SimpleOperation
	m	(II)I	apply	apply
		p	1		a
		p	2		b
	m	(Ldwq;Ldwq;)V	apply	apply
		p	1		a
		p	2		b
c	em	net/minecraft/commands/arguments/ParticleArgument
	m	()Lem;	a	particle
	m	(Laaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readParticle$1
	m	(Lcom/mojang/brigadier/StringReader;)Lim;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lin;)Lim;	a	readParticle
		p	0		reader
		p	1		type
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lim;	a	getParticle
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/StringReader;)Lim;	b	readParticle
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PARTICLE
	f	Ljava/util/Collection;	b	EXAMPLES
c	en	net/minecraft/commands/arguments/PreviewedArgument
	m	(Lcom/mojang/brigadier/context/CommandContextBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	resolvePreview
		p	1		builder
		p	2		argumentName
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/concurrent/CompletableFuture;	a	resolvePreviewed
		p	0		node
		p	1		builder
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Z	a	isPreviewed
		p	0		node
	m	(Ldr;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	resolvePreview
		p	1		source
		p	2		format
	m	()Ljava/lang/Class;	b	getValueType
c	eo	net/minecraft/commands/arguments/RangeArgument
	m	()Leo$b;	a	intRange
	m	()Leo$a;	b	floatRange
c	eo$a	net/minecraft/commands/arguments/RangeArgument$Floats
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcj$c;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	eo$b	net/minecraft/commands/arguments/RangeArgument$Ints
	m	(Lcom/mojang/brigadier/StringReader;)Lcj$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcj$d;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	ep	net/minecraft/commands/arguments/ResourceKeyArgument
	m	(Laai;)V	<init>	<init>
		p	1		registryRef
	m	(Laai;)Lep;	a	key
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Laai;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Laai;)Lhm;	a	getRegistry
		p	0		context
		p	1		registryRef
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbcb;	a	getAttribute
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laai;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Laai;	a	getRegistryType
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Laai;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRegistryKeyType$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		id
	m	(Laai;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getAttribute$6
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhc;	b	getConfiguredFeature
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laai;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lhc;	b	getRegistryKeyType
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Laai;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getRegistryType$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhc;	c	getStructure
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhc;	d	getStructureTemplatePool
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_FEATURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_INVALID_STRUCTURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_INVALID_TEMPLATE_POOL
	f	Laai;	f	registryKey
c	ep$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lep$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lep$a$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lep;)Lep$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Lep$a$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	ep$a$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template
	m	(Lep$a;Laai;)V	<init>	<init>
		p	2		registryRef
	m	()Lgf;	a	type
	m	(Ldl;)Lep;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lep$a;	a	this$0
	f	Laai;	b	registryKey
c	eq	net/minecraft/commands/arguments/ResourceLocationArgument
	m	()Leq;	a	id
	m	(Laaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRecipe$4
	m	(Lcom/mojang/brigadier/StringReader;)Laaj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laf;	a	getAdvancement
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lccs;	b	getRecipe
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldua;	c	getPredicate
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldsr;	d	getItemModifier
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laaj;	e	getId
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ADVANCEMENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_RECIPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_UNKNOWN_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_UNKNOWN_ITEM_MODIFIER
c	er	net/minecraft/commands/arguments/ResourceOrTagLocationArgument
	m	(Laai;)V	<init>	<init>
		p	1		registryRef
	m	(Laai;)Ler;	a	resourceOrTag
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Ler$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laai;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Ler$c;	a	getRegistryType
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Ler$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRegistryType$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Laai;	b	registryKey
c	er$a	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Ler$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Ler$a$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Ler;)Ler$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Ler$a$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	er$a$a	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Info$Template
	m	(Ler$a;Laai;)V	<init>	<init>
		p	2		registryRef
	m	()Lgf;	a	type
	m	(Ldl;)Ler;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Ler$a;	a	this$0
	f	Laai;	b	registryKey
c	er$b	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$ResourceResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laai;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhc;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Laai;	c	key
	f	Laai;	a	key
c	er$c	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laai;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	()Ljava/lang/String;	b	asPrintable
c	er$d	net/minecraft/commands/arguments/ResourceOrTagLocationArgument$TagResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laai;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhc;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lakh;	c	key
	f	Lakh;	a	key
c	es	net/minecraft/commands/arguments/ScoreHolderArgument
	m	(Z)V	<init>	<init>
		p	1		multiple
	m	()Les;	a	scoreHolder
	m	(Lcom/mojang/brigadier/StringReader;)Les$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getName
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getNames
		p	0		context
		p	1		name
		p	2		players
	m	(Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$2
		p	0		source
		p	1		players
	m	(Ljava/util/Collection;Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$3
		p	1		source
		p	2		players
	m	()Les;	b	scoreHolders
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	b	lambda$static$0
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getNames
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getNamesWithDefaultWildcard
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_SCORE_HOLDERS
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NO_RESULTS
	f	Z	d	multiple
c	es$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Les$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Les$a$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Les;)Les$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Les$a$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_MULTIPLE
c	es$a$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template
	m	(Les$a;Z)V	<init>	<init>
		p	2		multiple
	m	()Lgf;	a	type
	m	(Ldl;)Les;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Les$a;	a	this$0
	f	Z	b	multiple
c	es$b	net/minecraft/commands/arguments/ScoreHolderArgument$Result
	m	(Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		players
c	es$c	net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	m	(Lfz;)V	<init>	<init>
		p	1		selector
	m	(Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		players
	f	Lfz;	a	selector
c	et	net/minecraft/commands/arguments/ScoreboardSlotArgument
	m	()Let;	a	displaySlot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getDisplaySlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	eu	net/minecraft/commands/arguments/SignedArgument
	m	(Ljava/lang/Object;)Lrm;	a	getPlainSignableComponent
		p	1		value
c	ev	net/minecraft/commands/arguments/SlotArgument
	m	()Lev;	a	slot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getSlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
		p	0		map
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
	f	Ljava/util/Map;	c	SLOTS
c	ew	net/minecraft/commands/arguments/StringRepresentableArgument
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		codec
		p	2		valuesSupplier
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum;	a	parse
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$getExamples$3
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$listSuggestions$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/util/function/Supplier;	c	values
c	ex	net/minecraft/commands/arguments/TeamArgument
	m	()Lex;	a	team
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldwp;	a	getTeam
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TEAM_NOT_FOUND
c	ey	net/minecraft/commands/arguments/TemplateMirrorArgument
	m	()Lew;	a	templateMirror
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcnk;	a	getMirror
		p	0		context
		p	1		id
c	ez	net/minecraft/commands/arguments/TemplateRotationArgument
	m	()Lez;	a	templateRotation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcoz;	a	getRotation
		p	0		context
		p	1		id
c	fa	net/minecraft/commands/arguments/TimeArgument
	m	()Lfa;	a	time
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		time
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_UNIT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_TICK_COUNT
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	UNITS
c	fb	net/minecraft/commands/arguments/UuidArgument
	m	()Lfb;	a	uuid
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_UUID
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljava/util/regex/Pattern;	c	ALLOWED_CHARACTERS
c	fc	net/minecraft/commands/arguments/blocks/BlockInput
	m	(Lcur;Ljava/util/Set;Lpj;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		data
	m	()Lcur;	a	getState
	m	(Lafo;Lgt;)Z	a	test
		p	1		world
		p	2		pos
	m	(Lafo;Lgt;I)Z	a	place
		p	1		world
		p	2		pos
		p	3		flags
	m	(Lcuv;)Z	a	test
	m	()Ljava/util/Set;	b	getDefinedProperties
	f	Lcur;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lpj;	c	tag
c	fd	net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfd$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
		p	0		context
		p	1		name
	m	(Ldl;)Lfd;	a	blockPredicate
		p	0		commandRegistryAccess
	m	(Lff$a;)Lfd$b;	a	lambda$parse$0
		p	0		result
	m	(Lff$b;)Lfd$b;	a	lambda$parse$1
		p	0		result
	m	(Lhd;Lcom/mojang/brigadier/StringReader;)Lfd$b;	a	parse
		p	0		registryWrapper
		p	1		reader
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhd;	b	blocks
c	fd$a	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	m	(Lcur;Ljava/util/Set;Lpj;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Lcuv;)Z	a	test
	f	Lcur;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lpj;	c	nbt
c	fd$b	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	m	()Z	a	requiresNbt
c	fd$c	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	m	(Lhe;Ljava/util/Map;Lpj;)V	<init>	<init>
		p	1		tag
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Lcuv;)Z	a	test
	f	Lhe;	a	tag
	f	Lpj;	b	nbt
	f	Ljava/util/Map;	c	vagueProperties
c	fe	net/minecraft/commands/arguments/blocks/BlockStateArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfc;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfc;	a	getBlock
		p	0		context
		p	1		name
	m	(Ldl;)Lfe;	a	block
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhd;	b	blocks
c	ff	net/minecraft/commands/arguments/blocks/BlockStateParser
	m	(Lhd;Lcom/mojang/brigadier/StringReader;ZZ)V	<init>	<init>
		p	1		registryWrapper
		p	2		reader
		p	3		allowTag
		p	4		allowSnbt
	m	()V	a	parse
	m	(I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readBlock$6
	m	(ILaaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$7
	m	(Laai;)Ljava/lang/String;	a	lambda$serialize$10
		p	0		key
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestPropertyNameOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcvu;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	addSuggestions
		p	0		builder
		p	1		property
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestVaguePropertyValue
		p	1		builder
		p	2		name
	m	(Lcur;)Ljava/lang/String;	a	serialize
		p	0		state
	m	(Lcvu;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readProperties$8
		p	1		builder
	m	(Lcvu;Ljava/lang/String;I)V	a	setValue
		p	1		property
		p	2		value
		p	3		cursor
	m	(Lhd;Lcom/mojang/brigadier/StringReader;Z)Lff$a;	a	parseForBlock
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Lhd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	0		registryWrapper
		p	1		builder
		p	2		allowTag
		p	3		allowSnbt
	m	(Lhm;Lcom/mojang/brigadier/StringReader;Z)Lff$a;	a	parseForBlock
		p	0		registry
		p	1		reader
		p	2		allowSnbt
	m	(Lhm;Ljava/lang/String;Z)Lff$a;	a	parseForBlock
		p	0		registry
		p	1		string
		p	2		allowSnbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		tag
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		block
		p	1		property
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		block
		p	1		property
		p	2		value
	m	(Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readVagueProperties$9
		p	2		builder
	m	(Ljava/lang/StringBuilder;Lcvu;Ljava/lang/Comparable;)V	a	appendProperty
		p	0		builder
		p	1		property
		p	2		value
	m	()Z	b	hasBlockEntity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestVaguePropertyNameOrEnd
		p	1		builder
	m	(Lhd;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Lhm;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registry
		p	1		reader
		p	2		allowSnbt
	m	(Lhm;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registry
		p	1		string
		p	2		allowSnbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		block
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		block
		p	1		property
	m	()V	c	readBlock
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestPropertyName
		p	1		builder
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		block
		p	1		property
	m	()V	d	readTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestVaguePropertyName
		p	1		builder
	m	()V	e	readProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenNbt
		p	1		builder
	m	()V	f	readVagueProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestEquals
		p	1		builder
	m	()V	g	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	g	suggestNextPropertyOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	h	suggestOpenVaguePropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	i	suggestOpenPropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	j	suggestTag
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	k	suggestItem
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockIdOrTag
		p	1		builder
	f	Ljava/util/function/Function;	A	suggestions
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_BLOCK
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_UNKNOWN_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_DUPLICATE_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	ERROR_INVALID_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_EXPECTED_END_OF_PROPERTIES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_UNKNOWN_TAG
	f	C	i	SYNTAX_START_PROPERTIES
	f	C	j	SYNTAX_START_NBT
	f	C	k	SYNTAX_END_PROPERTIES
	f	C	l	SYNTAX_EQUALS
	f	C	m	SYNTAX_PROPERTY_SEPARATOR
	f	C	n	SYNTAX_TAG
	f	Ljava/util/function/Function;	o	SUGGEST_NOTHING
	f	Lhd;	p	blocks
	f	Lcom/mojang/brigadier/StringReader;	q	reader
	f	Z	r	forTesting
	f	Z	s	allowNbt
	f	Ljava/util/Map;	t	properties
	f	Ljava/util/Map;	u	vagueProperties
	f	Laaj;	v	id
	f	Lcus;	w	definition
	f	Lcur;	x	state
	f	Lpj;	y	nbt
	f	Lhe;	z	tag
c	ff$a	net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult
	m	()Lcur;	a	blockState
	m	()Ljava/util/Map;	b	properties
	m	()Lpj;	c	nbt
	f	Lcur;	a	blockState
	f	Ljava/util/Map;	b	properties
	f	Lpj;	c	nbt
c	ff$b	net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult
	m	()Lhe;	a	tag
	m	()Ljava/util/Map;	b	vagueProperties
	m	()Lpj;	c	nbt
	f	Lhe;	a	tag
	f	Ljava/util/Map;	b	vagueProperties
	f	Lpj;	c	nbt
c	fg	net/minecraft/commands/arguments/blocks/package-info
c	fh	net/minecraft/commands/arguments/coordinates/BlockPosArgument
	m	()Lfh;	a	blockPos
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgt;	a	getLoadedBlockPos
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgt;	b	getSpawnablePos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OUT_OF_WORLD
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OUT_OF_BOUNDS
	f	Ljava/util/Collection;	d	EXAMPLES
c	fi	net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	m	()Lfi;	a	columnPos
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laff;	a	getColumnPos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fj	net/minecraft/commands/arguments/coordinates/Coordinates
	m	()Z	a	isXRelative
	m	(Ldr;)Ldvt;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Ldr;)Ldvs;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	(Ldr;)Lgt;	c	getBlockPos
		p	1		source
c	fk	net/minecraft/commands/arguments/coordinates/LocalCoordinates
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	()Z	a	isXRelative
	m	(Lcom/mojang/brigadier/StringReader;)Lfk;	a	parse
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readDouble
		p	0		reader
		p	1		startingCursorPos
	m	(Ldr;)Ldvt;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Ldr;)Ldvs;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	f	C	a	PREFIX_LOCAL_COORDINATE
	f	D	b	left
	f	D	c	up
	f	D	d	forwards
c	fl	net/minecraft/commands/arguments/coordinates/RotationArgument
	m	()Lfl;	a	rotation
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfj;	a	getRotation
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fm	net/minecraft/commands/arguments/coordinates/SwizzleArgument
	m	()Lfm;	a	swizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID
c	fn	net/minecraft/commands/arguments/coordinates/Vec2Argument
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lfn;	a	vec2
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldvs;	a	getVec2
		p	0		context
		p	1		name
	m	(Z)Lfn;	a	vec2
		p	0		centerIntegers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Z	c	centerCorrect
c	fo	net/minecraft/commands/arguments/coordinates/Vec3Argument
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lfo;	a	vec3
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldvt;	a	getVec3
		p	0		context
		p	1		name
	m	(Z)Lfo;	a	vec3
		p	0		centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfj;	b	getCoordinates
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_MIXED_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Z	d	centerCorrect
c	fp	net/minecraft/commands/arguments/coordinates/WorldCoordinate
	m	(ZD)V	<init>	<init>
		p	1		relative
		p	2		value
	m	()Z	a	isRelative
	m	(D)D	a	get
		p	1		offset
	m	(Lcom/mojang/brigadier/StringReader;)Lfp;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfp;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_INT
	f	C	c	PREFIX_RELATIVE
	f	Z	d	relative
	f	D	e	value
c	fq	net/minecraft/commands/arguments/coordinates/WorldCoordinates
	m	(Lfp;Lfp;Lfp;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Z	a	isXRelative
	m	(DDD)Lfq;	a	absolute
		p	0		x
		p	2		y
		p	4		z
	m	(Lcom/mojang/brigadier/StringReader;)Lfq;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfq;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Ldr;)Ldvt;	a	getPosition
		p	1		source
	m	(Ldvs;)Lfq;	a	absolute
		p	0		vec
	m	()Z	b	isYRelative
	m	(Ldr;)Ldvs;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	()Lfq;	d	current
	f	Lfp;	a	x
	f	Lfp;	b	y
	f	Lfp;	c	z
c	fr	net/minecraft/commands/arguments/coordinates/package-info
c	fs	net/minecraft/commands/arguments/item/FunctionArgument
	m	()Lfs;	a	functions
	m	(Laaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getFunction$2
	m	(Lcom/mojang/brigadier/StringReader;)Lfs$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Laaj;)Ldm;	a	getFunction
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Laaj;)Ljava/util/Collection;	b	getFunctionTag
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_FUNCTION
c	fs$1	net/minecraft/commands/arguments/item/FunctionArgument$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	f	Laaj;	a	val$id
	f	Lfs;	b	this$0
c	fs$2	net/minecraft/commands/arguments/item/FunctionArgument$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	f	Laaj;	a	val$id
	f	Lfs;	b	this$0
c	fs$a	net/minecraft/commands/arguments/item/FunctionArgument$Result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
c	ft	net/minecraft/commands/arguments/item/ItemArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfu;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfu;	a	getItem
		p	0		context
		p	1		name
	m	(Ldl;)Lft;	a	item
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhd;	b	items
c	fu	net/minecraft/commands/arguments/item/ItemInput
	m	(Lhc;Lpj;)V	<init>	<init>
		p	1		item
		p	2		nbt
	m	()Lbzw;	a	getItem
	m	(IZ)Lcaa;	a	createItemStack
		p	1		amount
		p	2		checkOverstack
	m	(Lcaa;)Z	a	test
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		item
		p	1		maxCount
	m	()Ljava/lang/String;	b	serialize
	m	()Ljava/lang/String;	c	getItemName
	m	()Ljava/lang/Object;	d	lambda$getItemName$1
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_STACK_TOO_BIG
	f	Lhc;	b	item
	f	Lpj;	c	tag
c	fv	net/minecraft/commands/arguments/item/ItemParser
	m	(Lhd;Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1		registryWrapper
		p	2		reader
		p	3		allowTag
	m	()V	a	readItem
	m	(ILaaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$6
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestOpenNbt
		p	1		builder
	m	(Lfv;Lhc;)Lfv$a;	a	lambda$parseForTesting$3
		p	1		item
	m	(Lfv;Lhe;)Lfv$b;	a	lambda$parseForTesting$4
		p	1		tag
	m	(Lhd;Lcom/mojang/brigadier/StringReader;)Lfv$a;	a	parseForItem
		p	0		registryWrapper
		p	1		reader
	m	(Lhd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	0		registryWrapper
		p	1		builder
		p	2		allowTag
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		tag
	m	()V	b	readTag
	m	(ILaaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$readItem$5
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestTag
		p	1		builder
	m	(Lhd;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	m	()V	c	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestItem
		p	1		builder
	m	()V	d	parse
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestItemIdOrTag
		p	1		builder
	m	()Ljava/lang/IllegalStateException;	e	lambda$parseForItem$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_TAG
	f	C	d	SYNTAX_START_NBT
	f	C	e	SYNTAX_TAG
	f	Ljava/util/function/Function;	f	SUGGEST_NOTHING
	f	Lhd;	g	items
	f	Lcom/mojang/brigadier/StringReader;	h	reader
	f	Z	i	allowTags
	f	Lcom/mojang/datafixers/util/Either;	j	result
	f	Lpj;	k	nbt
	f	Ljava/util/function/Function;	l	suggestions
c	fv$a	net/minecraft/commands/arguments/item/ItemParser$ItemResult
	m	()Lhc;	a	item
	m	()Lpj;	b	nbt
	f	Lhc;	a	item
	f	Lpj;	b	nbt
c	fv$b	net/minecraft/commands/arguments/item/ItemParser$TagResult
	m	()Lhe;	a	tag
	m	()Lpj;	b	nbt
	f	Lhe;	a	tag
	f	Lpj;	b	nbt
c	fw	net/minecraft/commands/arguments/item/ItemPredicateArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfw$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getItemPredicate
		p	0		context
		p	1		name
	m	(Ldl;)Lfw;	a	itemPredicate
		p	0		commandRegistryAccess
	m	(Lfv$a;)Lfw$a;	a	lambda$parse$1
		p	0		item
	m	(Lfv$a;Lhc;)Z	a	lambda$parse$0
		p	1		item2
	m	(Lfv$b;)Lfw$a;	a	lambda$parse$2
		p	0		tag
	m	(Ljava/util/function/Predicate;Lcaa;)Z	a	lambda$createResult$4
		p	1		stack
	m	(Ljava/util/function/Predicate;Lpj;)Lfw$a;	a	createResult
		p	0		predicate
		p	1		nbt
	m	(Ljava/util/function/Predicate;Lpj;Lcaa;)Z	a	lambda$createResult$3
		p	2		stack
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhd;	b	items
c	fw$a	net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
c	fx	net/minecraft/commands/arguments/item/package-info
c	fy	net/minecraft/commands/arguments/package-info
c	fz	net/minecraft/commands/arguments/selector/EntitySelector
	m	(IZZLjava/util/function/Predicate;Lcj$c;Ljava/util/function/Function;Ldvo;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Lbau;Z)V	<init>	<init>
		p	1		count
		p	2		includesNonPlayers
		p	3		localWorldOnly
		p	4		basePredicate
		p	5		distance
		p	6		positionOffset
		p	7		box
		p	8		sorter
		p	9		senderOnly
		p	10		playerName
		p	11		uuid
		p	12		type
		p	13		usesAt
	m	()I	a	getMaxResults
	m	(Ldr;)Lbaq;	a	findSingleEntity
		p	1		source
	m	(Ldvo;Lbaq;)Z	a	lambda$getPredicate$0
		p	1		entity
	m	(Ldvt;)Ljava/util/function/Predicate;	a	getPredicate
		p	1		pos
	m	(Ldvt;Lbaq;)Z	a	lambda$getPredicate$1
		p	2		entity
	m	(Ldvt;Ljava/util/List;)Ljava/util/List;	a	sortAndLimit
		p	1		pos
		p	2		entities
	m	(Ljava/util/List;)Lrm;	a	joinNames
		p	0		entities
	m	(Ljava/util/List;Lafo;Ldvt;Ljava/util/function/Predicate;)V	a	addEntities
		p	1		result
		p	2		world
		p	3		pos
		p	4		predicate
	m	()Z	b	includesEntities
	m	(Ldr;)Ljava/util/List;	b	findEntities
		p	1		source
	m	()Z	c	isSelfSelector
	m	(Ldr;)Lafp;	c	findSinglePlayer
		p	1		source
	m	()Z	d	isWorldLimited
	m	(Ldr;)Ljava/util/List;	d	findPlayers
		p	1		source
	m	()Z	e	usesSelector
	m	(Ldr;)V	e	checkPermissions
		p	1		source
	f	I	a	INFINITE
	f	Lcym;	b	ANY_TYPE
	f	I	c	maxResults
	f	Z	d	includesEntities
	f	Z	e	worldLimited
	f	Ljava/util/function/Predicate;	f	predicate
	f	Lcj$c;	g	range
	f	Ljava/util/function/Function;	h	position
	f	Ldvo;	i	aabb
	f	Ljava/util/function/BiConsumer;	j	order
	f	Z	k	currentEntity
	f	Ljava/lang/String;	l	playerName
	f	Ljava/util/UUID;	m	entityUUID
	f	Lcym;	n	type
	f	Z	o	usesSelector
c	fz$1	net/minecraft/commands/arguments/selector/EntitySelector$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Lbaq;)Lbaq;	a	tryCast
		p	1		obj
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
c	ga	net/minecraft/commands/arguments/selector/EntitySelectorParser
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1		reader
		p	2		atAllowed
	m	()Z	A	hasGamemodeNotEquals
	m	()Z	B	hasTeamEquals
	m	()Z	C	hasTeamNotEquals
	m	()V	D	setTypeLimitedInversely
	m	()Z	E	isTypeLimited
	m	()Z	F	isTypeLimitedInversely
	m	()Z	G	hasScores
	m	()Z	H	hasAdvancements
	m	()V	I	finalizePredicates
	m	()Lfz;	a	getSelector
	m	(D)V	a	setX
		p	1		x
	m	(DDD)Ldvo;	a	createAabb
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	a	setMaxResults
		p	1		limit
	m	(Lbaq;)Z	a	lambda$finalizePredicates$12
		p	1		entity
	m	(Lbau;)V	a	limitToType
		p	1		entityType
	m	(Lcj$c;)V	a	setDistance
		p	1		distance
	m	(Lcj$d;)V	a	setLevel
		p	1		levelRange
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	fillSelectorSuggestions
		p	0		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	1		builder
		p	2		consumer
	m	(Ldh;)V	a	setRotX
		p	1		pitchRange
	m	(Ldh;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	createRotationPredicate
		p	1		angleRange
		p	2		entityToAngle
	m	(Ldvt;)Ldvt;	a	lambda$getSelector$11
		p	1		pos
	m	(Ldvt;Lbaq;Lbaq;)I	a	lambda$static$5
		p	1		entity1
		p	2		entity2
	m	(Ldvt;Ljava/util/List;)V	a	lambda$static$7
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		option
	m	(Ljava/util/function/BiConsumer;)V	a	setOrder
		p	1		sorter
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestions
		p	1		suggestionProvider
	m	(Ljava/util/function/Predicate;)V	a	addPredicate
		p	1		predicate
	m	(Ljava/util/function/ToDoubleFunction;DDLbaq;)Z	a	lambda$createRotationPredicate$13
		p	5		entity
	m	(Z)V	a	setIncludesEntities
		p	1		includesNonPlayers
	m	()V	b	parseSelector
	m	(D)V	b	setY
		p	1		y
	m	(Lbaq;)Z	b	lambda$new$9
		p	0		entity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestNameOrSelector
		p	1		builder
		p	2		consumer
	m	(Ldh;)V	b	setRotY
		p	1		yawRange
	m	(Ldvt;)Ldvt;	b	lambda$getSelector$10
		p	0		pos
	m	(Ldvt;Lbaq;Lbaq;)I	b	lambda$static$3
		p	1		entity1
		p	2		entity2
	m	(Ldvt;Ljava/util/List;)V	b	lambda$static$6
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		selectorType
	m	(Z)V	b	setHasNameEquals
		p	1		selectsName
	m	()V	c	parseNameOrUUID
	m	(D)V	c	setZ
		p	1		z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestName
		p	1		builder
		p	2		consumer
	m	(Ldvt;Ljava/util/List;)V	c	lambda$static$4
		p	0		pos
		p	1		entities
	m	(Z)V	c	setHasNameNotEquals
		p	1		excludesName
	m	()V	d	parseOptions
	m	(D)V	d	setDeltaX
		p	1		dx
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelector
		p	1		builder
		p	2		consumer
	m	(Ldvt;Ljava/util/List;)V	d	lambda$static$2
		p	0		pos
		p	1		entities
	m	(Z)V	d	setLimited
		p	1		hasLimit
	m	()Z	e	shouldInvertValue
	m	(D)V	e	setDeltaY
		p	1		dy
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenOptions
		p	1		builder
		p	2		consumer
	m	(Z)V	e	setSorted
		p	1		hasSorter
	m	()Z	f	isTag
	m	(D)V	f	setDeltaZ
		p	1		dz
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionsKeyOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	f	setHasGamemodeEquals
		p	1		selectsGameMode
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOptionsKey
		p	1		builder
		p	2		consumer
	m	(Z)V	g	setHasGamemodeNotEquals
		p	1		excludesGameMode
	m	()V	h	setWorldLimited
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestOptionsNextOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	h	setHasTeamEquals
		p	1		selectsTeam
	m	()Lcj$c;	i	getDistance
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	i	suggestEquals
		p	1		builder
		p	2		consumer
	m	(Z)V	i	setHasTeamNotEquals
		p	1		excludesTeam
	m	()Lcj$d;	j	getLevel
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	j	lambda$static$8
		p	0		builder
		p	1		consumer
	m	(Z)V	j	setHasScores
		p	1		selectsScores
	m	()Ldh;	k	getRotX
	m	(Z)V	k	setHasAdvancements
		p	1		selectsAdvancements
	m	()Ldh;	l	getRotY
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	()Ljava/lang/Double;	p	getDeltaX
	m	()Ljava/lang/Double;	q	getDeltaY
	m	()Ljava/lang/Double;	r	getDeltaZ
	m	()Ljava/util/function/BiConsumer;	s	getOrder
	m	()Lfz;	t	parse
	m	()Z	u	isCurrentEntity
	m	()Z	v	hasNameEquals
	m	()Z	w	hasNameNotEquals
	m	()Z	x	isLimited
	m	()Z	y	isSorted
	m	()Z	z	hasGamemodeEquals
	f	Z	A	includesEntities
	f	Z	B	worldLimited
	f	Lcj$c;	C	distance
	f	Lcj$d;	D	level
	f	Ljava/lang/Double;	E	x
	f	Ljava/lang/Double;	F	y
	f	Ljava/lang/Double;	G	z
	f	Ljava/lang/Double;	H	deltaX
	f	Ljava/lang/Double;	I	deltaY
	f	Ljava/lang/Double;	J	deltaZ
	f	Ldh;	K	rotX
	f	Ldh;	L	rotY
	f	Ljava/util/function/Predicate;	M	predicate
	f	Ljava/util/function/BiConsumer;	N	order
	f	Z	O	currentEntity
	f	Ljava/lang/String;	P	playerName
	f	I	Q	startPosition
	f	Ljava/util/UUID;	R	entityUUID
	f	Ljava/util/function/BiFunction;	S	suggestions
	f	Z	T	hasNameEquals
	f	Z	U	hasNameNotEquals
	f	Z	V	isLimited
	f	Z	W	isSorted
	f	Z	X	hasGamemodeEquals
	f	Z	Y	hasGamemodeNotEquals
	f	Z	Z	hasTeamEquals
	f	C	a	SYNTAX_SELECTOR_START
	f	Z	aa	hasTeamNotEquals
	f	Lbau;	ab	type
	f	Z	ac	typeInverse
	f	Z	ad	hasScores
	f	Z	ae	hasAdvancements
	f	Z	af	usesSelectors
	f	C	b	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	f	C	c	SYNTAX_NOT
	f	C	d	SYNTAX_TAG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID_NAME_OR_UUID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SELECTORS_NOT_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_MISSING_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_END_OF_OPTIONS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_EXPECTED_OPTION_VALUE
	f	Ljava/util/function/BiConsumer;	k	ORDER_ARBITRARY
	f	Ljava/util/function/BiConsumer;	l	ORDER_NEAREST
	f	Ljava/util/function/BiConsumer;	m	ORDER_FURTHEST
	f	Ljava/util/function/BiConsumer;	n	ORDER_RANDOM
	f	Ljava/util/function/BiFunction;	o	SUGGEST_NOTHING
	f	C	p	SYNTAX_OPTIONS_START
	f	C	q	SYNTAX_OPTIONS_END
	f	C	r	SYNTAX_OPTIONS_SEPARATOR
	f	C	s	SELECTOR_NEAREST_PLAYER
	f	C	t	SELECTOR_ALL_PLAYERS
	f	C	u	SELECTOR_RANDOM_PLAYERS
	f	C	v	SELECTOR_CURRENT_ENTITY
	f	C	w	SELECTOR_ALL_ENTITIES
	f	Lcom/mojang/brigadier/StringReader;	x	reader
	f	Z	y	allowSelectors
	f	I	z	maxResults
c	gb	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	m	(Lga;)Z	A	lambda$bootStrap$21
		p	0		reader
	m	(Lga;)V	B	lambda$bootStrap$20
		p	0		reader
	m	(Lga;)Z	C	lambda$bootStrap$19
		p	0		reader
	m	(Lga;)V	D	lambda$bootStrap$18
		p	0		reader
	m	(Lga;)Z	E	lambda$bootStrap$17
		p	0		reader
	m	(Lga;)V	F	lambda$bootStrap$16
		p	0		reader
	m	(Lga;)Z	G	lambda$bootStrap$15
		p	0		reader
	m	(Lga;)V	H	lambda$bootStrap$14
		p	0		reader
	m	(Lga;)Z	I	lambda$bootStrap$13
		p	0		reader
	m	(Lga;)V	J	lambda$bootStrap$12
		p	0		reader
	m	(Lga;)Z	K	lambda$bootStrap$11
		p	0		reader
	m	(Lga;)V	L	lambda$bootStrap$10
		p	0		reader
	m	(Lga;)Z	M	lambda$bootStrap$9
		p	0		reader
	m	(Lga;)V	N	lambda$bootStrap$8
		p	0		reader
	m	(Lga;)Z	O	lambda$bootStrap$7
		p	0		reader
	m	(Lga;)V	P	lambda$bootStrap$6
		p	0		reader
	m	()V	a	bootStrap
	m	(Laaj;ZLbaq;)Z	a	lambda$bootStrap$61
		p	2		entity
	m	(Lakh;ZLbaq;)Z	a	lambda$bootStrap$41
	m	(Lbau;ZLbaq;)Z	a	lambda$bootStrap$43
		p	2		entity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$30
		p	0		builder
		p	1		consumer
	m	(Lga;)Z	a	lambda$bootStrap$63
		p	0		reader
	m	(Lga;ILaaj;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$bootStrap$42
	m	(Lga;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestNames
		p	0		reader
		p	1		suggestionBuilder
	m	(Lga;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$40
		p	1		builder
		p	2		consumer
	m	(Lga;Ljava/lang/String;I)Lgb$a;	a	get
		p	0		reader
		p	1		option
		p	2		restoreCursor
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		entity
	m	(Ljava/lang/String;Lgb$a;Ljava/util/function/Predicate;Lrm;)V	a	register
		p	0		id
		p	1		handler
		p	2		condition
		p	3		description
	m	(Ljava/lang/String;ZLbaq;)Z	a	lambda$bootStrap$46
		p	2		entity
	m	(Ljava/util/Map;Lah;)Z	a	lambda$bootStrap$56
		p	1		advancementProgress
	m	(Ljava/util/Map;Lbaq;)Z	a	lambda$bootStrap$58
		p	1		entity
	m	(Lpj;ZLbaq;)Z	a	lambda$bootStrap$49
		p	2		entity
	m	(ZLah;)Z	a	lambda$bootStrap$57
		p	1		advancementProgress
	m	(ZLal;)Z	a	lambda$bootStrap$55
		p	1		criterionProgress
	m	(ZLcfx;Lbaq;)Z	a	lambda$bootStrap$34
		p	2		entity
	m	(Lga;)V	b	lambda$bootStrap$62
		p	0		reader
	m	(Lga;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	lambda$bootStrap$33
		p	1		builder
		p	2		consumer
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		gameMode
	m	(Ljava/lang/String;ZLbaq;)Z	b	lambda$bootStrap$37
		p	2		entity
	m	(Ljava/util/Map;Lbaq;)Z	b	lambda$bootStrap$52
		p	1		entity
	m	(Lga;)Z	c	lambda$bootStrap$60
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		sortType
	m	(Ljava/lang/String;ZLbaq;)Z	c	lambda$bootStrap$5
		p	2		reader
	m	(Lga;)V	d	lambda$bootStrap$59
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
		p	0		option
	m	(Lga;)Z	e	lambda$bootStrap$54
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
		p	0		option
	m	(Lga;)V	f	lambda$bootStrap$53
		p	0		reader
	m	(Lga;)Z	g	lambda$bootStrap$51
		p	0		reader
	m	(Lga;)V	h	lambda$bootStrap$50
		p	0		reader
	m	(Lga;)Z	i	lambda$bootStrap$48
		p	0		reader
	m	(Lga;)V	j	lambda$bootStrap$47
		p	0		reader
	m	(Lga;)Z	k	lambda$bootStrap$45
		p	0		reader
	m	(Lga;)V	l	lambda$bootStrap$44
		p	0		reader
	m	(Lga;)Z	m	lambda$bootStrap$39
		p	0		reader
	m	(Lga;)V	n	lambda$bootStrap$38
		p	0		reader
	m	(Lga;)Z	o	lambda$bootStrap$36
		p	0		reader
	m	(Lga;)V	p	lambda$bootStrap$35
		p	0		reader
	m	(Lga;)Z	q	lambda$bootStrap$32
		p	0		reader
	m	(Lga;)V	r	lambda$bootStrap$31
		p	0		reader
	m	(Lga;)Z	s	lambda$bootStrap$29
		p	0		reader
	m	(Lga;)V	t	lambda$bootStrap$28
		p	0		reader
	m	(Lga;)Z	u	lambda$bootStrap$27
		p	0		reader
	m	(Lga;)V	v	lambda$bootStrap$26
		p	0		reader
	m	(Lga;)Z	w	lambda$bootStrap$25
		p	0		reader
	m	(Lga;)V	x	lambda$bootStrap$24
		p	0		reader
	m	(Lga;)Z	y	lambda$bootStrap$23
		p	0		reader
	m	(Lga;)V	z	lambda$bootStrap$22
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_OPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INAPPLICABLE_OPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_RANGE_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_LEVEL_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_LIMIT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_SORT_UNKNOWN
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_GAME_MODE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_ENTITY_TYPE_INVALID
	f	Ljava/util/Map;	i	OPTIONS
c	gb$a	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
	m	(Lga;)V	handle	handle
		p	1		reader
c	gb$b	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	m	(Lgb$a;Ljava/util/function/Predicate;Lrm;)V	<init>	<init>
		p	1		handler
		p	2		condition
		p	3		description
	f	Lgb$a;	a	modifier
	f	Ljava/util/function/Predicate;	b	predicate
	f	Lrm;	c	description
c	gc	net/minecraft/commands/arguments/selector/options/package-info
c	gd	net/minecraft/commands/arguments/selector/package-info
c	ge	net/minecraft/commands/package-info
c	gf	net/minecraft/commands/synchronization/ArgumentTypeInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gf$a	net/minecraft/commands/synchronization/ArgumentTypeInfo$Template
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
c	gg	net/minecraft/commands/synchronization/ArgumentTypeInfos
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf;	a	byClass
		p	0		argumentType
	m	(Lhm;)Lgf;	a	bootstrap
		p	0		registry
	m	(Lhm;Ljava/lang/String;Ljava/lang/Class;Lgf;)Lgf;	a	register
		p	0		registry
		p	1		id
		p	2		clazz
		p	3		serializer
	m	(Ljava/lang/Class;)Z	a	isClassRecognized
		p	0		clazz
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	b	unpack
		p	0		argumentType
	m	(Ljava/lang/Class;)Ljava/lang/Class;	b	fixClassType
		p	0		clazz
	f	Ljava/util/Map;	a	BY_CLASS
c	gh	net/minecraft/commands/synchronization/ArgumentUtils
	m	(B)Z	a	numberHasMin
		p	0		flags
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	serializeArgumentToJson
		p	0		json
		p	1		argumentType
	m	(Lcom/google/gson/JsonObject;Lgf$a;)V	a	serializeCap
		p	0		json
		p	1		properties
	m	(Lcom/google/gson/JsonObject;Lgf;Lgf$a;)V	a	serializeCap
		p	0		json
		p	1		serializer
		p	2		properties
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	serializeNodeToJson
		p	0		dispatcher
		p	1		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set;	a	findUsedArgumentTypes
		p	0		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V	a	findUsedArgumentTypes
		p	0		node
		p	1		usedArgumentTypes
		p	2		visitedNodes
	m	(Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V	a	lambda$findUsedArgumentTypes$0
		p	2		child
	m	(ZZ)I	a	createNumberFlags
		p	0		hasMin
		p	1		hasMax
	m	(B)Z	b	numberHasMax
		p	0		flags
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	B	b	NUMBER_FLAG_MIN
	f	B	c	NUMBER_FLAG_MAX
c	gi	net/minecraft/commands/synchronization/SingletonArgumentInfo
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		typeSupplier
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Ljava/util/function/Function;)Lgi;	a	contextAware
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;)Lgi;	a	contextFree
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	lambda$contextFree$0
		p	1		commandRegistryAccess
	m	(Lqx;)Lgi$a;	a	deserializeFromNetwork
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	b	unpack
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
	f	Lgi$a;	a	template
c	gi$a	net/minecraft/commands/synchronization/SingletonArgumentInfo$Template
	m	(Lgi;Ljava/util/function/Function;)V	<init>	<init>
		p	2		typeSupplier
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgi;	a	this$0
	f	Ljava/util/function/Function;	b	constructor
c	gj	net/minecraft/commands/synchronization/SuggestionProviders
	m	(Laaj;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	getProvider
		p	0		id
	m	(Laaj;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
		p	0		id
		p	1		provider
	m	(Lbau;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		entityType
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$4
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Laaj;	a	getName
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$2
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	safelySwap
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$0
		p	0		context
		p	1		builder
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	ALL_RECIPES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SUMMONABLE_ENTITIES
	f	Ljava/util/Map;	e	PROVIDERS_BY_NAME
	f	Laaj;	f	DEFAULT_NAME
c	gj$a	net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	m	(Laaj;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V	<init>	<init>
		p	1		id
		p	2		provider
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	delegate
	f	Laaj;	b	name
c	gk	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lgk$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgk$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgk$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Lgk$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gk$a	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template
	m	(Lgk;DD)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgk;	a	this$0
	f	D	b	min
	f	D	c	max
c	gl	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lgl$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgl$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgl$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Lgl$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gl$a	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template
	m	(Lgl;FF)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgl;	a	this$0
	f	F	b	min
	f	F	c	max
c	gm	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lgm$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgm$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgm$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Lgm$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gm$a	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template
	m	(Lgm;II)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgm;	a	this$0
	f	I	b	min
	f	I	c	max
c	gn	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;)Lgn$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgn$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgn$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Lgn$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gn$a	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template
	m	(Lgn;JJ)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgn;	a	this$0
	f	J	b	min
	f	J	c	max
c	go	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;)Lgo$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgo$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgo$a;Lqx;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lqx;)Lgo$a;	a	deserializeFromNetwork
	m	(Lqx;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	go$1	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	f	[I	a	$SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
c	go$a	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template
	m	(Lgo;Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;)V	<init>	<init>
		p	2		type
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgo;	a	this$0
	f	Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;	b	type
c	gp	net/minecraft/commands/synchronization/brigadier/package-info
c	gq	net/minecraft/commands/synchronization/package-info
c	gr	net/minecraft/core/AxisCycle
	m	()Lgr;	a	inverse
	m	(DDDLgy$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgy$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgy$a;)Lgy$a;	a	cycle
		p	1		axis
	m	(Lgy$a;Lgy$a;)Lgr;	a	between
		p	0		from
		p	1		to
	m	()[Lgr;	b	$values
	f	Lgr;	a	NONE
	f	Lgr;	b	FORWARD
	f	Lgr;	c	BACKWARD
	f	[Lgy$a;	d	AXIS_VALUES
	f	[Lgr;	e	VALUES
	f	[Lgr;	f	$VALUES
c	gr$1	net/minecraft/core/AxisCycle$1
	m	()Lgr;	a	inverse
	m	(DDDLgy$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgy$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgy$a;)Lgy$a;	a	cycle
		p	1		axis
c	gr$2	net/minecraft/core/AxisCycle$2
	m	()Lgr;	a	inverse
	m	(DDDLgy$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgy$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgy$a;)Lgy$a;	a	cycle
		p	1		axis
c	gr$3	net/minecraft/core/AxisCycle$3
	m	()Lgr;	a	inverse
	m	(DDDLgy$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgy$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgy$a;)Lgy$a;	a	cycle
		p	1		axis
c	gs	net/minecraft/core/BlockMath
	m	(Li;)Li;	a	blockCenterToCorner
	m	(Li;Lgy;Ljava/util/function/Supplier;)Li;	a	getUVLockTransform
	m	(Ljava/util/EnumMap;)V	a	lambda$static$1
	m	(Li;)Li;	b	blockCornerToCenter
	m	(Ljava/util/EnumMap;)V	b	lambda$static$0
	f	Ljava/util/Map;	a	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	f	Ljava/util/Map;	b	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	f	Lorg/slf4j/Logger;	c	LOGGER
c	gt	net/minecraft/core/BlockPos
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Ldvt;)V	<init>	<init>
		p	1		pos
	m	(Lhj;)V	<init>	<init>
		p	1		pos
	m	(Lhs;)V	<init>	<init>
		p	1		pos
	m	()J	a	asLong
	m	(DDD)Lgt;	a	offset
	m	(I)Lgt;	a	multiply
	m	(III)J	a	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(IIIIIII)Ljava/util/Iterator;	a	lambda$withinManhattan$4
	m	(IILalu;IIIII)Ljava/util/Iterator;	a	lambda$randomBetweenClosed$3
	m	(J)I	a	getX
		p	0		packedPos
	m	(JIII)J	a	offset
		p	0		value
		p	2		x
		p	3		y
		p	4		z
	m	(JLgy;)J	a	offset
		p	0		value
		p	2		direction
	m	(Lalu;IIIIIII)Ljava/lang/Iterable;	a	randomBetweenClosed
		p	0		random
		p	1		count
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lalu;ILgt;I)Ljava/lang/Iterable;	a	randomInCube
		p	0		random
		p	1		count
		p	2		around
		p	3		range
	m	(Lcoz;)Lgt;	a	rotate
		p	1		rotation
	m	(Ldjw;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Ldvo;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Lgt;)Ljava/util/stream/IntStream;	a	lambda$static$2
		p	0		pos
	m	(Lgt;III)Ljava/lang/Iterable;	a	withinManhattan
		p	0		center
		p	1		rangeX
		p	2		rangeY
		p	3		rangeZ
	m	(Lgt;IILjava/util/function/Predicate;)Ljava/util/Optional;	a	findClosestMatch
		p	0		pos
		p	1		horizontalRange
		p	2		verticalRange
		p	3		condition
	m	(Lgt;ILgy;Lgy;)Ljava/lang/Iterable;	a	spiralAround
		p	0		center
		p	1		radius
		p	2		firstDirection
		p	3		secondDirection
	m	(Lgt;Lgt;)Ljava/lang/Iterable;	a	betweenClosed
		p	0		start
		p	1		end
	m	(Lgy$a;I)Lgt;	a	relative
	m	(Lgy;)Lgt;	a	relative
	m	(Lgy;I)Lgt;	a	relative
	m	(Lgy;Lgy;Lgt;I)Ljava/util/Iterator;	a	lambda$spiralAround$6
	m	(Lhs;)Lgt;	a	offset
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	([I)Lgt;	a	lambda$static$0
		p	0		values
	m	()Lgt;	b	above
	m	(DDD)Lhs;	b	offset
		p	1		x
		p	3		y
		p	5		z
	m	(I)Lgt;	b	above
		p	1		distance
	m	(III)Lgt;	b	offset
	m	(IIIIII)Ljava/lang/Iterable;	b	betweenClosed
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(J)I	b	getY
		p	0		packedPos
	m	(Lgt;III)Ljava/util/stream/Stream;	b	withinManhattanStream
		p	0		center
		p	1		maxX
		p	2		maxY
		p	3		maxZ
	m	(Lgt;Lgt;)Ljava/util/stream/Stream;	b	betweenClosedStream
		p	0		start
		p	1		end
	m	(Lgy$a;I)Lhs;	b	relative
		p	1		axis
		p	2		distance
	m	(Lgy;)Lhs;	b	relative
		p	1		direction
	m	(Lgy;I)Lhs;	b	relative
		p	1		direction
		p	2		distance
	m	(Lhs;)Lgt;	b	subtract
	m	()Lgt;	c	below
	m	(I)Lgt;	c	below
	m	(III)Lhs;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(IIIIII)Ljava/util/Iterator;	c	lambda$betweenClosed$5
	m	(J)I	c	getZ
		p	0		packedPos
	m	(Lhs;)Lgt;	c	cross
		p	1		pos
	m	()Lgt;	d	north
	m	(I)Lgt;	d	north
		p	1		distance
	m	(J)Lgt;	d	of
		p	0		packedPos
	m	(Lhs;)Lhs;	d	cross
		p	1		vec
	m	()Lgt;	e	south
	m	(I)Lgt;	e	south
		p	1		distance
	m	(J)J	e	getFlatIndex
		p	0		y
	m	(Lhs;)Lhs;	e	subtract
		p	1		vec
	m	()Lgt;	f	west
	m	(I)Lgt;	f	west
		p	1		distance
	m	(Lhs;)Lhs;	f	offset
		p	1		vec
	m	()Lgt;	g	east
	m	(I)Lgt;	g	east
		p	1		distance
	m	()Lgt;	h	immutable
	m	(I)Lgt;	h	atY
		p	1		y
	m	()Lgt$a;	i	mutable
	m	(I)Lhs;	i	east
		p	1		distance
	m	()Lhs;	j	east
	m	(I)Lhs;	j	west
		p	1		distance
	m	()Lhs;	k	west
	m	(I)Lhs;	k	south
		p	1		distance
	m	()Lhs;	l	south
	m	(I)Lhs;	l	north
		p	1		distance
	m	()Lhs;	m	north
	m	(I)Lhs;	m	below
		p	1		distance
	m	()Lhs;	n	below
	m	(I)Lhs;	n	above
		p	1		distance
	m	()Lhs;	o	above
	m	(I)Lhs;	o	multiply
		p	1		scale
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgt;	b	ZERO
	f	I	c	PACKED_Y_LENGTH
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	PACKED_X_LENGTH
	f	I	h	PACKED_Z_LENGTH
	f	J	i	PACKED_X_MASK
	f	J	j	PACKED_Y_MASK
	f	J	k	PACKED_Z_MASK
	f	I	l	Y_OFFSET
	f	I	m	Z_OFFSET
	f	I	n	X_OFFSET
c	gt$1	net/minecraft/core/BlockPos$1
	m	()Lgt;	a	computeNext
	f	Lgt$a;	a	nextPos
	f	I	b	counter
	f	I	c	val$limit
	f	I	d	val$minX
	f	Lalu;	e	val$random
	f	I	f	val$width
	f	I	g	val$minY
	f	I	h	val$height
	f	I	i	val$minZ
	f	I	j	val$depth
c	gt$2	net/minecraft/core/BlockPos$2
	m	()Lgt;	a	computeNext
	f	I	a	val$originZ
	f	I	b	val$maxDepth
	f	I	c	val$reachX
	f	I	d	val$reachY
	f	I	e	val$reachZ
	f	I	f	val$originX
	f	I	g	val$originY
	f	Lgt$a;	h	cursor
	f	I	i	currentDepth
	f	I	j	maxX
	f	I	k	maxY
	f	I	l	x
	f	I	m	y
	f	Z	n	zMirror
c	gt$3	net/minecraft/core/BlockPos$3
	m	()Lgt;	a	computeNext
	f	I	a	val$end
	f	I	b	val$width
	f	I	c	val$height
	f	I	d	val$minX
	f	I	e	val$minY
	f	I	f	val$minZ
	f	Lgt$a;	g	cursor
	f	I	h	index
c	gt$4	net/minecraft/core/BlockPos$4
	m	()Lgt$a;	a	computeNext
	f	Lgy;	a	val$firstDirection
	f	Lgy;	b	val$secondDirection
	f	Lgt;	c	val$center
	f	I	d	val$radius
	f	[Lgy;	e	directions
	f	Lgt$a;	f	cursor
	f	I	g	legs
	f	I	h	leg
	f	I	i	legSize
	f	I	j	legIndex
	f	I	k	lastX
	f	I	l	lastY
	f	I	m	lastZ
c	gt$5	net/minecraft/core/BlockPos$5
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	gt$a	net/minecraft/core/BlockPos$MutableBlockPos
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(DDD)Lgt;	a	offset
	m	(I)Lgt;	a	multiply
	m	(Lcoz;)Lgt;	a	rotate
		p	1		rotation
	m	(Lgr;III)Lgt$a;	a	set
		p	1		axis
		p	2		x
		p	3		y
		p	4		z
	m	(Lgy$a;I)Lgt;	a	relative
	m	(Lgy$a;II)Lgt$a;	a	clamp
		p	1		axis
		p	2		min
		p	3		max
	m	(Lgy;I)Lgt;	a	relative
	m	(Lhs;III)Lgt$a;	a	setWithOffset
		p	1		pos
		p	2		x
		p	3		y
		p	4		z
	m	(Lhs;Lgy;)Lgt$a;	a	setWithOffset
		p	1		pos
		p	2		direction
	m	(Lhs;Lhs;)Lgt$a;	a	setWithOffset
		p	1		vec1
		p	2		vec2
	m	(DDD)Lhs;	b	offset
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lgt;	b	offset
	m	(Lgy$a;I)Lhs;	b	relative
		p	1		axis
		p	2		distance
	m	(Lgy;)Lhs;	b	relative
		p	1		direction
	m	(Lgy;I)Lhs;	b	relative
		p	1		direction
		p	2		distance
	m	(DDD)Lgt$a;	c	set
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lhs;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(Lgy;)Lgt$a;	c	move
		p	1		direction
	m	(Lgy;I)Lgt$a;	c	move
		p	1		direction
		p	2		distance
	m	(III)Lgt$a;	d	set
		p	1		x
		p	2		y
		p	3		z
	m	(Lhs;)Lhs;	d	cross
		p	1		vec
	m	(III)Lgt$a;	e	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(Lhs;)Lhs;	e	subtract
		p	1		vec
	m	(J)Lgt$a;	f	set
		p	1		pos
	m	(Lhs;)Lhs;	f	offset
		p	1		vec
	m	(Lhs;)Lgt$a;	g	set
		p	1		pos
	m	()Lgt;	h	immutable
	m	(Lhs;)Lgt$a;	h	move
		p	1		vec
	m	(I)Lhs;	i	east
		p	1		distance
	m	()Lhs;	j	east
	m	(I)Lhs;	j	west
		p	1		distance
	m	()Lhs;	k	west
	m	(I)Lhs;	k	south
		p	1		distance
	m	()Lhs;	l	south
	m	(I)Lhs;	l	north
		p	1		distance
	m	()Lhs;	m	north
	m	(I)Lhs;	m	below
		p	1		distance
	m	()Lhs;	n	below
	m	(I)Lhs;	n	above
		p	1		distance
	m	()Lhs;	o	above
	m	(I)Lhs;	o	multiply
		p	1		scale
	m	(I)Lgt$a;	p	setX
	m	(I)Lgt$a;	q	setY
	m	(I)Lgt$a;	r	setZ
	m	(I)Lhs;	s	setZ
		p	1		z
	m	(I)Lhs;	t	setY
		p	1		y
	m	(I)Lhs;	u	setX
		p	1		x
c	gu	net/minecraft/core/BlockSource
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	m	()Lgt;	d	getPos
	m	()Lcur;	e	getBlockState
	m	()Lcsl;	f	getEntity
	m	()Lafo;	g	getLevel
c	gv	net/minecraft/core/BlockSourceImpl
	m	(Lafo;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	m	()Lgt;	d	getPos
	m	()Lcur;	e	getBlockState
	m	()Lcsl;	f	getEntity
	m	()Lafo;	g	getLevel
	f	Lafo;	a	level
	f	Lgt;	b	pos
c	gw	net/minecraft/core/Cursor3D
	m	(IIIIII)V	<init>	<init>
		p	1		startX
		p	2		startY
		p	3		startZ
		p	4		endX
		p	5		endY
		p	6		endZ
	m	()Z	a	advance
	m	()I	b	nextX
	m	()I	c	nextY
	m	()I	d	nextZ
	m	()I	e	getNextType
	f	I	a	TYPE_INSIDE
	f	I	b	TYPE_FACE
	f	I	c	TYPE_EDGE
	f	I	d	TYPE_CORNER
	f	I	e	originX
	f	I	f	originY
	f	I	g	originZ
	f	I	h	width
	f	I	i	height
	f	I	j	depth
	f	I	k	end
	f	I	l	index
	f	I	m	x
	f	I	n	y
	f	I	o	z
c	gx	net/minecraft/core/DefaultedRegistry
	m	(Ljava/lang/String;Laai;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;)V	<init>	<init>
		p	1		defaultId
		p	2		key
		p	3		lifecycle
		p	4		valueToEntryFunction
	m	()Laaj;	a	getDefaultKey
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(ILaai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhc;	a	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	(Laaj;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lalu;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Laaj;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Ljava/lang/Object;)Laaj;	b	getKey
		p	1		value
	m	()Ljava/util/Optional;	t	lambda$getRandom$0
	f	Laaj;	bR	defaultKey
	f	Lhc;	bS	defaultValue
c	gy	net/minecraft/core/Direction
	m	(Ljava/lang/String;IIIILjava/lang/String;Lgy$b;Lgy$a;Lhs;)V	<init>	<init>
		p	3		id
		p	4		idOpposite
		p	5		idHorizontal
		p	6		name
		p	7		direction
		p	8		axis
		p	9		vector
	m	()Ljava/util/stream/Stream;	a	stream
	m	(D)Lgy;	a	fromYRot
		p	0		rotation
	m	(DDD)Lgy;	a	getNearest
		p	0		x
		p	2		y
		p	4		z
	m	(F)Z	a	isFacingAngle
		p	1		yaw
	m	(FFF)Lgy;	a	getNearest
		p	0		x
		p	1		y
		p	2		z
	m	(I)Lgy;	a	from3DDataValue
		p	0		id
	m	(III)Lgy;	a	fromNormal
		p	0		x
		p	1		y
		p	2		z
	m	(Lalu;)Ljava/util/Collection;	a	allShuffled
		p	0		random
	m	(Lbaq;)[Lgy;	a	orderedByNearest
		p	0		entity
	m	(Lbaq;Lgy$a;)Lgy;	a	getFacingAxis
		p	0		entity
		p	1		axis
	m	(Ld;Lgy;)Lgy;	a	rotate
		p	0		matrix
		p	1		direction
	m	(Lgt;)Lgy;	a	fromNormal
		p	0		pos
	m	(Lgy$a;)Lgy;	a	getClockWise
		p	1		axis
	m	(Lgy$a;Lgy$b;)Lgy;	a	fromAxisAndDirection
		p	0		axis
		p	1		direction
	m	(Lgy$b;Lgy$a;)Lgy;	a	get
		p	0		direction
		p	1		axis
	m	(Lgy;)Lcom/mojang/serialization/DataResult;	a	verifyVertical
		p	0		direction
	m	(Lgy;Lgy;)Lgy;	a	lambda$static$7
		p	0		direction1
		p	1		direction2
	m	(Lgy;Lgy;Lgy;)[Lgy;	a	makeDirectionArray
		p	0		first
		p	1		second
		p	2		third
	m	(Ljava/lang/String;)Lgy;	a	byName
		p	0		name
	m	()Lg;	b	getRotation
	m	(I)Lgy;	b	from2DDataValue
		p	0		value
	m	(Lalu;)Lgy;	b	getRandom
		p	0		random
	m	(Lgy$a;)Lgy;	b	getCounterClockWise
		p	1		axis
	m	(Lgy;)Lgy;	b	lambda$static$6
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)[Lgy;	c	lambda$static$4
	m	(Lgy;)Ljava/lang/Long;	c	lambda$static$5
		p	0		direction
	m	()I	d	get3DDataValue
	m	(I)[Lgy;	d	lambda$static$1
	m	(Lgy;)I	d	lambda$static$3
		p	0		direction
	m	()I	e	get2DDataValue
	m	(Lgy;)Z	e	lambda$static$2
		p	0		direction
	m	()Lgy$b;	f	getAxisDirection
	m	(Lgy;)I	f	lambda$static$0
		p	0		direction
	m	()Lgy;	g	getOpposite
	m	()Lgy;	h	getClockWise
	m	()Lgy;	i	getCounterClockWise
	m	()I	j	getStepX
	m	()I	k	getStepY
	m	()I	l	getStepZ
	m	()Lk;	m	step
	m	()Ljava/lang/String;	n	getName
	m	()Lgy$a;	o	getAxis
	m	()F	p	toYRot
	m	()Lhs;	q	getNormal
	m	()Lgy;	r	getClockWiseX
	m	()Lgy;	s	getCounterClockWiseX
	m	()Lgy;	t	getClockWiseZ
	m	()Lgy;	u	getCounterClockWiseZ
	m	()[Lgy;	v	$values
	f	Lgy;	a	DOWN
	f	Lgy;	b	UP
	f	Lgy;	c	NORTH
	f	Lgy;	d	SOUTH
	f	Lgy;	e	WEST
	f	Lgy;	f	EAST
	f	Lamd$a;	g	CODEC
	f	Lcom/mojang/serialization/Codec;	h	VERTICAL_CODEC
	f	I	i	data3d
	f	I	j	oppositeIndex
	f	I	k	data2d
	f	Ljava/lang/String;	l	name
	f	Lgy$a;	m	axis
	f	Lgy$b;	n	axisDirection
	f	Lhs;	o	normal
	f	[Lgy;	p	VALUES
	f	[Lgy;	q	BY_3D_DATA
	f	[Lgy;	r	BY_2D_DATA
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	s	BY_NORMAL
	f	[Lgy;	t	$VALUES
c	gy$1	net/minecraft/core/Direction$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	gy$a	net/minecraft/core/Direction$Axis
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
	m	(Lalu;)Lgy$a;	a	getRandom
		p	0		random
	m	(Lgy;)Z	a	test
	m	(Ljava/lang/String;)Lgy$a;	a	byName
		p	0		name
	m	()Z	b	isVertical
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isHorizontal
	m	()Lgy$c;	e	getPlane
	m	()[Lgy$a;	f	$values
	f	Lgy$a;	a	X
	f	Lgy$a;	b	Y
	f	Lgy$a;	c	Z
	f	[Lgy$a;	d	VALUES
	f	Lamd$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Lgy$a;	g	$VALUES
c	gy$a$1	net/minecraft/core/Direction$Axis$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	gy$a$2	net/minecraft/core/Direction$Axis$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	gy$a$3	net/minecraft/core/Direction$Axis$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	gy$b	net/minecraft/core/Direction$AxisDirection
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		offset
		p	4		description
	m	()I	a	getStep
	m	()Ljava/lang/String;	b	getName
	m	()Lgy$b;	c	opposite
	m	()[Lgy$b;	d	$values
	f	Lgy$b;	a	POSITIVE
	f	Lgy$b;	b	NEGATIVE
	f	I	c	step
	f	Ljava/lang/String;	d	name
	f	[Lgy$b;	e	$VALUES
c	gy$c	net/minecraft/core/Direction$Plane
	m	(Ljava/lang/String;I[Lgy;[Lgy$a;)V	<init>	<init>
		p	3		facingArray
		p	4		axisArray
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Lalu;)Lgy;	a	getRandomDirection
		p	1		random
	m	(Lgy;)Z	a	test
	m	()[Lgy$c;	b	$values
	m	(Lalu;)Lgy$a;	b	getRandomAxis
		p	1		random
	m	(Lalu;)Ljava/util/List;	c	shuffledCopy
		p	1		random
	f	Lgy$c;	a	HORIZONTAL
	f	Lgy$c;	b	VERTICAL
	f	[Lgy;	c	faces
	f	[Lgy$a;	d	axis
	f	[Lgy$c;	e	$VALUES
c	gz	net/minecraft/core/Direction8
	m	(Ljava/lang/String;I[Lgy;)V	<init>	<init>
		p	3		directions
	m	()Ljava/util/Set;	a	getDirections
	m	()I	b	getStepX
	m	()I	c	getStepZ
	m	()[Lgz;	d	$values
	f	Lgz;	a	NORTH
	f	Lgz;	b	NORTH_EAST
	f	Lgz;	c	EAST
	f	Lgz;	d	SOUTH_EAST
	f	Lgz;	e	SOUTH
	f	Lgz;	f	SOUTH_WEST
	f	Lgz;	g	WEST
	f	Lgz;	h	NORTH_WEST
	f	Ljava/util/Set;	i	directions
	f	Lhs;	j	step
	f	[Lgz;	k	$VALUES
c	ha	net/minecraft/core/FrontAndTop
	m	(Ljava/lang/String;ILjava/lang/String;Lgy;Lgy;)V	<init>	<init>
		p	3		name
		p	4		facing
		p	5		rotation
	m	()Lgy;	a	front
	m	(Lgy;Lgy;)Lha;	a	fromFrontAndTop
		p	0		facing
		p	1		rotation
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	()Lgy;	b	top
	m	(Lgy;Lgy;)I	b	lookupKey
		p	0		facing
		p	1		rotation
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lha;	d	$values
	f	Lha;	a	DOWN_EAST
	f	Lha;	b	DOWN_NORTH
	f	Lha;	c	DOWN_SOUTH
	f	Lha;	d	DOWN_WEST
	f	Lha;	e	UP_EAST
	f	Lha;	f	UP_NORTH
	f	Lha;	g	UP_SOUTH
	f	Lha;	h	UP_WEST
	f	Lha;	i	WEST_UP
	f	Lha;	j	EAST_UP
	f	Lha;	k	NORTH_UP
	f	Lha;	l	SOUTH_UP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	m	LOOKUP_TOP_FRONT
	f	Ljava/lang/String;	n	name
	f	Lgy;	o	top
	f	Lgy;	p	front
	f	[Lha;	q	$VALUES
c	hb	net/minecraft/core/GlobalPos
	m	(Laai;Lgt;)V	<init>	<init>
		p	1		dimension
		p	2		pos
	m	()Laai;	a	dimension
	m	(Laai;Lgt;)Lhb;	a	of
		p	0		dimension
		p	1		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lgt;	b	pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laai;	b	dimension
	f	Lgt;	c	pos
c	hc	net/minecraft/core/Holder
	m	()Ljava/lang/Object;	a	value
	m	(Laai;)Z	a	is
		p	1		key
	m	(Laaj;)Z	a	is
		p	1		id
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lhc;)Lhc;	a	hackyErase
		p	0		entry
	m	(Lhm;)Z	a	isValidInRegistry
		p	1		registry
	m	(Ljava/lang/Object;)Lhc;	a	direct
		p	0		value
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhc$b;	f	kind
c	hc$a	net/minecraft/core/Holder$Direct
	m	()Ljava/lang/Object;	a	value
	m	(Laai;)Z	a	is
		p	1		key
	m	(Laaj;)Z	a	is
		p	1		id
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lhm;)Z	a	isValidInRegistry
		p	1		registry
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhc$b;	f	kind
	f	Ljava/lang/Object;	a	value
c	hc$b	net/minecraft/core/Holder$Kind
	m	()[Lhc$b;	a	$values
	f	Lhc$b;	a	REFERENCE
	f	Lhc$b;	b	DIRECT
	f	[Lhc$b;	c	$VALUES
c	hc$c	net/minecraft/core/Holder$Reference
	m	(Lhc$c$a;Lhm;Laai;Ljava/lang/Object;)V	<init>	<init>
		p	1		referenceType
		p	2		registry
		p	3		registryKey
		p	4		value
	m	()Ljava/lang/Object;	a	value
	m	(Laai;)Z	a	is
		p	1		key
	m	(Laai;Ljava/lang/Object;)V	a	bind
		p	1		key
		p	2		value
	m	(Laaj;)Z	a	is
		p	1		id
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lhm;)Z	a	isValidInRegistry
		p	1		registry
	m	(Lhm;Laai;)Lhc$c;	a	createStandAlone
		p	0		registry
		p	1		registryKey
	m	(Lhm;Ljava/lang/Object;)Lhc$c;	a	createIntrusive
		p	0		registry
		p	1		value
	m	(Ljava/util/Collection;)V	a	bindTags
		p	1		tags
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhc$b;	f	kind
	m	()Laai;	g	key
	f	Lhm;	a	registry
	f	Ljava/util/Set;	b	tags
	f	Lhc$c$a;	c	type
	f	Laai;	d	key
	f	Ljava/lang/Object;	e	value
c	hc$c$a	net/minecraft/core/Holder$Reference$Type
	m	()[Lhc$c$a;	a	$values
	f	Lhc$c$a;	a	STAND_ALONE
	f	Lhc$c$a;	b	INTRUSIVE
	f	[Lhc$c$a;	c	$VALUES
c	hd	net/minecraft/core/HolderLookup
	m	()Ljava/util/stream/Stream;	a	listElements
	m	(Laai;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lakh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lhm;)Lhd;	a	forRegistry
		p	0		registry
	m	()Ljava/util/stream/Stream;	b	listTags
c	hd$a	net/minecraft/core/HolderLookup$RegistryLookup
	m	(Lhm;)V	<init>	<init>
		p	1		registry
	m	()Ljava/util/stream/Stream;	a	listElements
	m	(Laai;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lakh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listTags
	f	Lhm;	b	registry
c	he	net/minecraft/core/HolderSet
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lhc;	a	get
		p	1		index
	m	(Lalu;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Lhc;)Z	a	contains
		p	1		entry
	m	(Lhm;)Z	a	isValidInRegistry
		p	1		registry
	m	(Ljava/util/List;)Lhe$a;	a	direct
		p	0		entries
	m	(Ljava/util/function/Function;Ljava/util/List;)Lhe$a;	a	direct
		p	0		mapper
		p	1		values
	m	(Ljava/util/function/Function;[Ljava/lang/Object;)Lhe$a;	a	direct
		p	0		mapper
		p	1		values
	m	([Lhc;)Lhe$a;	a	direct
		p	0		entries
	m	()I	b	size
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
c	he$a	net/minecraft/core/HolderSet$Direct
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Lhc;)Z	a	contains
		p	1		entry
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/List;	d	contents
	f	Ljava/util/List;	a	contents
	f	Ljava/util/Set;	b	contentsSet
c	he$b	net/minecraft/core/HolderSet$ListBacked
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lhc;	a	get
		p	1		index
	m	(Lalu;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Lhm;)Z	a	isValidInRegistry
		p	1		registry
	m	()I	b	size
	m	()Ljava/util/List;	d	contents
c	he$c	net/minecraft/core/HolderSet$Named
	m	(Lhm;Lakh;)V	<init>	<init>
		p	1		registry
		p	2		tag
	m	(Lhc;)Z	a	contains
		p	1		entry
	m	(Lhm;)Z	a	isValidInRegistry
		p	1		registry
	m	(Ljava/util/List;)V	b	bind
		p	1		entries
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/List;	d	contents
	m	()Lakh;	e	key
	f	Lhm;	a	registry
	f	Lakh;	b	key
	f	Ljava/util/List;	c	contents
c	hf	net/minecraft/core/IdMap
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	()I	b	size
	m	(I)Ljava/lang/Object;	b	byIdOrThrow
		p	1		index
	f	I	a	DEFAULT
c	hg	net/minecraft/core/IdMapper
	m	(I)V	<init>	<init>
		p	1		initialSize
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	()I	b	size
	m	(Ljava/lang/Object;)V	b	add
		p	1		value
	m	(I)Z	c	contains
		p	1		index
	f	I	b	nextId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	tToId
	f	Ljava/util/List;	d	idToT
c	hh	net/minecraft/core/MappedRegistry
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;)V	<init>	<init>
		p	1		key
		p	2		lifecycle
		p	3		valueToEntryFunction
	m	()Ljava/util/List;	a	holdersInOrder
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(ILaai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhc;	a	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	(ILaai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Lhc;	a	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
		p	5		checkDuplicateKeys
	m	(Laai;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Laai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhc;	a	register
		p	1		key
		p	2		entry
		p	3		lifecycle
	m	(Laaj;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lakh;)Z	a	isKnownTagName
		p	1		tag
	m	(Lalu;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Lhc$c;)Ljava/lang/Object;	a	getValueFromNullable
		p	0		entry
	m	(Lhe$c;)V	a	lambda$resetTags$12
		p	0		entryList
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V	a	lambda$new$0
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/util/Map$Entry;)Laaj;	a	lambda$freeze$5
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Ljava/util/Map;Lakh;Ljava/util/List;)V	a	lambda$bindTags$11
		p	2		tag
		p	3		entries
	m	(Ljava/util/Map;Lhc$c;)V	a	lambda$bindTags$8
		p	1		entry
	m	(Ljava/util/OptionalInt;Laai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhc;	a	registerOrOverride
		p	1		rawId
		p	2		key
		p	3		newEntry
		p	4		lifecycle
	m	()I	b	size
	m	(Laai;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Lakh;)Lhe$c;	b	getOrCreateTag
		p	1		tag
	m	(Lhc$c;)V	b	lambda$resetTags$13
		p	0		entry
	m	(Ljava/lang/Object;)Laaj;	b	getKey
		p	1		value
	m	(Ljava/util/Map$Entry;)Z	b	lambda$freeze$4
		p	0		entry
	m	(Ljava/util/Map;Lakh;Ljava/util/List;)V	b	lambda$bindTags$9
		p	2		tag
		p	3		entries
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Laai;)Lhc;	c	getOrCreateHolderOrThrow
		p	1		key
	m	(Laaj;)Z	c	containsKey
		p	1		id
	m	(Lakh;)Ljava/util/Optional;	c	getTag
		p	1		tag
	m	(Lhc$c;)Z	c	lambda$freeze$6
		p	0		entry
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
		p	1		entry
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	c	lambda$getTags$3
		p	0		entry
	m	()Ljava/util/Set;	d	keySet
	m	(Laai;)Lcom/mojang/serialization/DataResult;	d	getOrCreateHolder
		p	1		key
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	d	lifecycle
		p	1		entry
	m	()Ljava/util/Set;	e	registryKeySet
	m	(Laai;)Z	e	containsKey
		p	1		key
	m	(Lakh;)Lhe$c;	e	createTag
		p	1		tag
	m	(Ljava/lang/Object;)Lhc$c;	e	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	f	entrySet
	m	(Lakh;)Ljava/lang/String;	f	lambda$bindTags$10
		p	0		tag
	m	(Ljava/lang/Object;)Lhc$c;	f	lambda$createIntrusiveHolder$7
		p	1		valuex
	m	()Ljava/util/stream/Stream;	g	holders
	m	()Ljava/util/stream/Stream;	h	getTags
	m	()Ljava/util/stream/Stream;	i	getTagNames
	m	(Laai;)V	i	validateWrite
		p	1		key
	m	()Z	j	isEmpty
	m	(Laai;)Lhc$c;	j	lambda$getOrCreateHolderOrThrow$2
		p	1		entry
	m	()Lhm;	k	freeze
	m	(Laai;)Lhc$c;	k	lambda$registerMapping$1
		p	1		key
	m	()V	l	resetTags
	f	Lorg/slf4j/Logger;	bR	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	bS	byId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	bT	toId
	f	Ljava/util/Map;	bU	byLocation
	f	Ljava/util/Map;	bV	byKey
	f	Ljava/util/Map;	bW	byValue
	f	Ljava/util/Map;	bX	lifecycles
	f	Lcom/mojang/serialization/Lifecycle;	bY	elementsLifecycle
	f	Ljava/util/Map;	bZ	tags
	f	Z	ca	frozen
	f	Ljava/util/function/Function;	cb	customHolderProvider
	f	Ljava/util/Map;	cc	intrusiveHolderCache
	f	Ljava/util/List;	cd	holdersInOrder
	f	I	ce	nextId
c	hi	net/minecraft/core/NonNullList
	m	(Ljava/util/List;Ljava/lang/Object;)V	<init>	<init>
		p	1		delegate
		p	2		initialElement
	m	()Lhi;	a	create
	m	(I)Lhi;	a	createWithCapacity
		p	0		size
	m	(ILjava/lang/Object;)Lhi;	a	withSize
		p	0		size
		p	1		defaultValue
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Lhi;	a	of
		p	0		defaultValue
		p	1		values
	f	Ljava/util/List;	a	list
	f	Ljava/lang/Object;	b	defaultValue
c	hj	net/minecraft/core/Position
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
c	hk	net/minecraft/core/PositionImpl
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	f	D	a	x
	f	D	b	y
	f	D	c	z
c	hl	net/minecraft/core/QuartPos
	m	(I)I	a	fromBlock
		p	0		blockCoord
	m	(I)I	b	quartLocal
	m	(I)I	c	toBlock
		p	0		biomeCoord
	m	(I)I	d	fromSection
		p	0		chunkCoord
	m	(I)I	e	toSection
		p	0		biomeCoord
	f	I	a	BITS
	f	I	b	SIZE
	f	I	c	MASK
	f	I	d	SECTION_TO_QUARTS_BITS
c	hm	net/minecraft/core/Registry
	m	(Laai;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		key
		p	2		lifecycle
	m	(Lhm;)Ldrz;	A	lambda$static$27
		p	0		registry
	m	(Lhm;)Lbuq;	B	lambda$static$26
		p	0		registry
	m	(Lhm;)Lbus;	C	lambda$static$25
		p	0		registry
	m	(Lhm;)Lblc;	D	lambda$static$24
		p	0		registry
	m	(Lhm;)Lbjx;	E	lambda$static$23
		p	0		registry
	m	(Lhm;)Lbsv;	F	lambda$static$22
		p	0		registry
	m	(Lhm;)Lbsx;	G	lambda$static$21
		p	0		registry
	m	(Lhm;)Lajn;	H	lambda$static$20
		p	0		registry
	m	(Lhm;)Lczc;	I	lambda$static$19
		p	0		registry
	m	(Lhm;)Lbcb;	J	lambda$static$18
		p	0		registry
	m	(Lhm;)Lccu;	K	lambda$static$17
		p	0		registry
	m	(Lhm;)Lccv;	L	lambda$static$16
		p	0		registry
	m	(Lhm;)Lbwt;	M	lambda$static$15
		p	0		registry
	m	(Lhm;)Ldnk;	N	lambda$static$14
		p	0		registry
	m	(Lhm;)Ldnr;	O	lambda$static$13
		p	0		registry
	m	(Lhm;)Lcwq;	P	lambda$static$12
		p	0		registry
	m	(Lhm;)Laaj;	Q	lambda$static$11
		p	0		registry
	m	(Lhm;)Lcsn;	R	lambda$static$10
		p	0		registry
	m	(Lhm;)Lin;	S	lambda$static$9
		p	0		registry
	m	(Lhm;)Lcbv;	T	lambda$static$8
		p	0		registry
	m	(Lhm;)Lbzw;	U	lambda$static$7
		p	0		registry
	m	(Lhm;)Lbau;	V	lambda$static$6
		p	0		registry
	m	(Lhm;)Lcdu;	W	lambda$static$5
		p	0		registry
	m	(Lhm;)Lciw;	X	lambda$static$4
		p	0		registry
	m	(Lhm;)Lbah;	Y	lambda$static$3
		p	0		registry
	m	(Lhm;)Ldox;	Z	lambda$static$2
		p	0		registry
	m	(Laai;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Lhm$a;)Lhm;	a	registerSimple
		p	0		key
		p	1		lifecycle
		p	2		defaultEntryGetter
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;Lhm$a;)Lhm;	a	registerSimple
		p	0		key
		p	1		lifecycle
		p	2		valueToEntryFunction
		p	3		defaultEntryGetter
	m	(Laai;Lhm$a;)Lhm;	a	registerSimple
		p	0		key
		p	1		defaultEntryGetter
	m	(Laai;Lht;Lhm$a;Lcom/mojang/serialization/Lifecycle;)Lht;	a	internalRegister
		p	0		key
		p	1		registry
		p	2		defaultEntryGetter
		p	3		lifecycle
	m	(Laai;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lhm$a;)Lgx;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		lifecycle
		p	3		defaultEntryGetter
	m	(Laai;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Function;Lhm$a;)Lgx;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		lifecycle
		p	3		valueToEntryFunction
		p	4		defaultEntryGetter
	m	(Laai;Ljava/lang/String;Lhm$a;)Lgx;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		defaultEntryGetter
	m	(Laai;Ljava/lang/String;Ljava/util/function/Function;Lhm$a;)Lgx;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		valueToEntryFunction
		p	3		defaultEntryGetter
	m	(Laaj;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Laaj;Ljava/util/function/Supplier;)V	a	lambda$static$53
		p	0		id
		p	1		defaultEntry
	m	(Lakh;)Z	a	isKnownTagName
		p	1		tag
	m	(Lalu;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Lcom/mojang/serialization/DynamicOps;Laaj;)Ljava/lang/Object;	a	lambda$keys$69
		p	1		id
	m	(Lhc;)Lcom/mojang/serialization/Lifecycle;	a	lambda$holderByNameCodec$68
		p	1		entry
	m	(Lhm$a;Lht;)Ljava/lang/Object;	a	lambda$internalRegister$55
	m	(Lhm;)V	a	checkRegistry
		p	0		registries
	m	(Lhm;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	registerMapping
		p	0		registry
		p	1		rawId
		p	2		id
		p	3		entry
	m	(Lhm;Laai;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		key
		p	2		entry
	m	(Lhm;Laaj;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	(Lhm;Lhm;)V	a	lambda$checkRegistry$54
		p	1		registry
	m	(Lhm;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/String;)Laai;	a	createRegistryKey
		p	0		registryId
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Lhm;)Lajd;	aa	lambda$static$1
		p	0		registry
	m	(Lhm;)Lcyy;	ab	lambda$static$0
		p	0		registry
	m	(Laai;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Laaj;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Lakh;)Lhe$c;	b	getOrCreateTag
		p	1		tag
	m	(Lhc;)Lcom/mojang/serialization/Lifecycle;	b	lambda$holderByNameCodec$67
		p	1		entry
	m	(Lhm;)Lbms;	b	lambda$static$52
		p	0		registry
	m	(Ljava/lang/Object;)Laaj;	b	getKey
		p	1		value
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Laai;)Lhc;	c	getOrCreateHolderOrThrow
		p	1		key
	m	(Laaj;)Z	c	containsKey
		p	1		id
	m	(Lakh;)Ljava/util/Optional;	c	getTag
		p	1		tag
	m	(Lhc;)Lcom/mojang/serialization/DataResult;	c	lambda$holderByNameCodec$66
		p	1		entry
	m	(Lhm;)Lbml;	c	lambda$static$51
		p	0		registry
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
		p	1		entry
	m	()Ljava/util/Set;	d	keySet
	m	(Laai;)Lcom/mojang/serialization/DataResult;	d	getOrCreateHolder
		p	1		key
	m	(Laaj;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$64
		p	1		id
	m	(Lakh;)Ljava/lang/Iterable;	d	getTagOrEmpty
		p	1		tag
	m	(Lhc;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$65
	m	(Lhm;)Ldlm;	d	lambda$static$50
		p	0		registry
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	d	lifecycle
		p	1		entry
	m	()Ljava/util/Set;	e	registryKeySet
	m	(Laai;)Z	e	containsKey
		p	1		key
	m	(Laaj;)Lcom/mojang/serialization/DataResult;	e	lambda$holderByNameCodec$63
	m	(Lhm;)Ldnv;	e	lambda$static$49
		p	0		registry
	m	(Ljava/lang/Object;)Lhc$c;	e	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	f	entrySet
	m	(Laai;)Ljava/util/Optional;	f	getOptional
		p	1		key
	m	(Laaj;)Lcom/mojang/serialization/DataResult;	f	lambda$byNameCodec$58
		p	1		id
	m	(Lhm;)Ldgc;	f	lambda$static$48
		p	0		registry
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	f	lambda$byNameCodec$62
		p	1		value
	m	()Ljava/util/stream/Stream;	g	holders
	m	(Laai;)Ljava/lang/Object;	g	getOrThrow
		p	1		key
	m	(Laaj;)Lcom/mojang/serialization/DataResult;	g	lambda$byNameCodec$57
	m	(Lhm;)Ldhr;	g	lambda$static$47
		p	0		registry
	m	(Ljava/lang/Object;)I	g	lambda$byNameCodec$61
		p	1		value
	m	()Ljava/util/stream/Stream;	h	getTags
	m	(Laai;)Lhc;	h	getHolderOrThrow
		p	1		key
	m	(Lhm;)Ldgy;	h	lambda$static$46
		p	0		registry
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	h	lambda$byNameCodec$60
		p	1		value
	m	()Ljava/util/stream/Stream;	i	getTagNames
	m	(Laai;)Ljava/lang/IllegalStateException;	i	lambda$getHolderOrThrow$70
	m	(Lhm;)Ldic;	i	lambda$static$45
		p	0		registry
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	i	lambda$byNameCodec$59
	m	(Laai;)Ljava/lang/String;	j	lambda$new$56
	m	(Lhm;)Ldgm;	j	lambda$static$44
		p	0		registry
	m	()Lhm;	k	freeze
	m	(Lhm;)Ldha;	k	lambda$static$43
		p	0		registry
	m	()V	l	resetTags
	m	(Lhm;)Ldjn;	l	lambda$static$42
		p	0		registry
	m	()V	m	freezeBuiltins
	m	(Lhm;)Ldkn;	m	lambda$static$41
		p	0		registry
	m	()Laai;	n	key
	m	(Lhm;)Ldkv;	n	lambda$static$40
		p	0		registry
	m	()Lcom/mojang/serialization/Lifecycle;	o	lifecycle
	m	(Lhm;)Ldlc;	o	lambda$static$39
		p	0		registry
	m	()Lcom/mojang/serialization/Codec;	p	byNameCodec
	m	(Lhm;)Ldcw;	p	lambda$static$38
		p	0		registry
	m	()Lcom/mojang/serialization/Codec;	q	holderByNameCodec
	m	(Lhm;)Ldbx;	q	lambda$static$37
		p	0		registry
	m	()Ljava/util/stream/Stream;	r	stream
	m	(Lhm;)Ldba;	r	lambda$static$36
		p	0		registry
	m	()Lhf;	s	asHolderIdMap
	m	(Lhm;)Ldin;	s	lambda$static$35
		p	0		registry
	m	(Lhm;)Lays;	t	lambda$static$34
		p	0		registry
	m	(Lhm;)Layq;	u	lambda$static$33
		p	0		registry
	m	(Lhm;)Ldvc;	v	lambda$static$32
		p	0		registry
	m	(Lhm;)Ldun;	w	lambda$static$31
		p	0		registry
	m	(Lhm;)Lduu;	x	lambda$static$30
		p	0		registry
	m	(Lhm;)Ldub;	y	lambda$static$29
		p	0		registry
	m	(Lhm;)Ldss;	z	lambda$static$28
		p	0		registry
	f	Laai;	A	VILLAGER_TYPE_REGISTRY
	f	Laai;	B	VILLAGER_PROFESSION_REGISTRY
	f	Laai;	C	POINT_OF_INTEREST_TYPE_REGISTRY
	f	Laai;	D	MEMORY_MODULE_TYPE_REGISTRY
	f	Laai;	E	SENSOR_TYPE_REGISTRY
	f	Laai;	F	SCHEDULE_REGISTRY
	f	Laai;	G	ACTIVITY_REGISTRY
	f	Laai;	H	LOOT_ENTRY_REGISTRY
	f	Laai;	I	LOOT_FUNCTION_REGISTRY
	f	Laai;	J	LOOT_ITEM_REGISTRY
	f	Laai;	K	LOOT_NUMBER_PROVIDER_REGISTRY
	f	Laai;	L	LOOT_NBT_PROVIDER_REGISTRY
	f	Laai;	M	LOOT_SCORE_PROVIDER_REGISTRY
	f	Laai;	N	COMMAND_ARGUMENT_TYPE_REGISTRY
	f	Laai;	O	DIMENSION_TYPE_REGISTRY
	f	Laai;	P	DIMENSION_REGISTRY
	f	Laai;	Q	LEVEL_STEM_REGISTRY
	f	Lgx;	R	GAME_EVENT
	f	Lhm;	S	SOUND_EVENT
	f	Lgx;	T	FLUID
	f	Lhm;	U	MOB_EFFECT
	f	Lgx;	V	BLOCK
	f	Lhm;	W	ENCHANTMENT
	f	Lgx;	X	ENTITY_TYPE
	f	Lgx;	Y	ITEM
	f	Lgx;	Z	POTION
	f	Lhm;	aA	LOOT_SCORE_PROVIDER_TYPE
	f	Laai;	aB	FLOAT_PROVIDER_TYPE_REGISTRY
	f	Lhm;	aC	FLOAT_PROVIDER_TYPES
	f	Laai;	aD	INT_PROVIDER_TYPE_REGISTRY
	f	Lhm;	aE	INT_PROVIDER_TYPES
	f	Laai;	aF	HEIGHT_PROVIDER_TYPE_REGISTRY
	f	Lhm;	aG	HEIGHT_PROVIDER_TYPES
	f	Laai;	aH	BLOCK_PREDICATE_TYPE_REGISTRY
	f	Lhm;	aI	BLOCK_PREDICATE_TYPES
	f	Laai;	aJ	NOISE_GENERATOR_SETTINGS_REGISTRY
	f	Laai;	aK	CONFIGURED_CARVER_REGISTRY
	f	Laai;	aL	CONFIGURED_FEATURE_REGISTRY
	f	Laai;	aM	PLACED_FEATURE_REGISTRY
	f	Laai;	aN	STRUCTURE_REGISTRY
	f	Laai;	aO	STRUCTURE_SET_REGISTRY
	f	Laai;	aP	PROCESSOR_LIST_REGISTRY
	f	Laai;	aQ	TEMPLATE_POOL_REGISTRY
	f	Laai;	aR	BIOME_REGISTRY
	f	Laai;	aS	NOISE_REGISTRY
	f	Laai;	aT	DENSITY_FUNCTION_REGISTRY
	f	Laai;	aU	WORLD_PRESET_REGISTRY
	f	Laai;	aV	FLAT_LEVEL_GENERATOR_PRESET_REGISTRY
	f	Laai;	aW	CARVER_REGISTRY
	f	Lhm;	aX	CARVER
	f	Laai;	aY	FEATURE_REGISTRY
	f	Lhm;	aZ	FEATURE
	f	Lhm;	aa	PARTICLE_TYPE
	f	Lhm;	ab	BLOCK_ENTITY_TYPE
	f	Lgx;	ac	PAINTING_VARIANT
	f	Lhm;	ad	CUSTOM_STAT
	f	Lgx;	ae	CHUNK_STATUS
	f	Lhm;	af	RULE_TEST
	f	Lhm;	ag	POS_RULE_TEST
	f	Lhm;	ah	MENU
	f	Lhm;	ai	RECIPE_TYPE
	f	Lhm;	aj	RECIPE_SERIALIZER
	f	Lhm;	ak	ATTRIBUTE
	f	Lhm;	al	POSITION_SOURCE_TYPE
	f	Lhm;	am	COMMAND_ARGUMENT_TYPE
	f	Lhm;	an	STAT_TYPE
	f	Lgx;	ao	VILLAGER_TYPE
	f	Lgx;	ap	VILLAGER_PROFESSION
	f	Lhm;	aq	POINT_OF_INTEREST_TYPE
	f	Lgx;	ar	MEMORY_MODULE_TYPE
	f	Lgx;	as	SENSOR_TYPE
	f	Lhm;	at	SCHEDULE
	f	Lhm;	au	ACTIVITY
	f	Lhm;	av	LOOT_POOL_ENTRY_TYPE
	f	Lhm;	aw	LOOT_FUNCTION_TYPE
	f	Lhm;	ax	LOOT_CONDITION_TYPE
	f	Lhm;	ay	LOOT_NUMBER_PROVIDER_TYPE
	f	Lhm;	az	LOOT_NBT_PROVIDER_TYPE
	f	Lhm;	bA	FEATURE_SIZE_TYPES
	f	Lhm;	bB	BIOME_SOURCE
	f	Lhm;	bC	CHUNK_GENERATOR
	f	Lhm;	bD	CONDITION
	f	Lhm;	bE	RULE
	f	Lhm;	bF	DENSITY_FUNCTION_TYPES
	f	Lhm;	bG	STRUCTURE_PROCESSOR
	f	Lhm;	bH	STRUCTURE_POOL_ELEMENT
	f	Laai;	bI	CHAT_TYPE_REGISTRY
	f	Laai;	bJ	CAT_VARIANT_REGISTRY
	f	Lhm;	bK	CAT_VARIANT
	f	Laai;	bL	FROG_VARIANT_REGISTRY
	f	Laaj;	b	ROOT_REGISTRY_NAME
	f	Lhm;	bM	FROG_VARIANT
	f	Laai;	bN	BANNER_PATTERN_REGISTRY
	f	Lhm;	bO	BANNER_PATTERN
	f	Laai;	bP	INSTRUMENT_REGISTRY
	f	Lhm;	bQ	INSTRUMENT
	f	Lorg/slf4j/Logger;	bR	LOGGER
	f	Ljava/util/Map;	bS	LOADERS
	f	Laai;	bT	key
	f	Lcom/mojang/serialization/Lifecycle;	bU	lifecycle
	f	Laai;	ba	STRUCTURE_PLACEMENT_TYPE_REGISTRY
	f	Lhm;	bb	STRUCTURE_PLACEMENT_TYPE
	f	Laai;	bc	STRUCTURE_PIECE_REGISTRY
	f	Lhm;	bd	STRUCTURE_PIECE
	f	Laai;	be	STRUCTURE_TYPE_REGISTRY
	f	Lhm;	bf	STRUCTURE_TYPES
	f	Laai;	bg	PLACEMENT_MODIFIER_REGISTRY
	f	Lhm;	bh	PLACEMENT_MODIFIERS
	f	Laai;	bi	BLOCK_STATE_PROVIDER_TYPE_REGISTRY
	f	Laai;	bj	FOLIAGE_PLACER_TYPE_REGISTRY
	f	Laai;	bk	TRUNK_PLACER_TYPE_REGISTRY
	f	Laai;	bl	TREE_DECORATOR_TYPE_REGISTRY
	f	Laai;	bm	ROOT_PLACER_TYPE_REGISTRY
	f	Laai;	bn	FEATURE_SIZE_TYPE_REGISTRY
	f	Laai;	bo	BIOME_SOURCE_REGISTRY
	f	Laai;	bp	CHUNK_GENERATOR_REGISTRY
	f	Laai;	bq	CONDITION_REGISTRY
	f	Laai;	br	RULE_REGISTRY
	f	Laai;	bs	DENSITY_FUNCTION_TYPE_REGISTRY
	f	Laai;	bt	STRUCTURE_PROCESSOR_REGISTRY
	f	Laai;	bu	STRUCTURE_POOL_ELEMENT_REGISTRY
	f	Lhm;	bv	BLOCKSTATE_PROVIDER_TYPES
	f	Lhm;	bw	FOLIAGE_PLACER_TYPES
	f	Lhm;	bx	TRUNK_PLACER_TYPES
	f	Lhm;	by	ROOT_PLACER_TYPES
	f	Lhm;	bz	TREE_DECORATOR_TYPES
	f	Lht;	c	WRITABLE_REGISTRY
	f	Lhm;	d	REGISTRY
	f	Laai;	e	SOUND_EVENT_REGISTRY
	f	Laai;	f	FLUID_REGISTRY
	f	Laai;	g	MOB_EFFECT_REGISTRY
	f	Laai;	h	BLOCK_REGISTRY
	f	Laai;	i	ENCHANTMENT_REGISTRY
	f	Laai;	j	ENTITY_TYPE_REGISTRY
	f	Laai;	k	ITEM_REGISTRY
	f	Laai;	l	POTION_REGISTRY
	f	Laai;	m	PARTICLE_TYPE_REGISTRY
	f	Laai;	n	BLOCK_ENTITY_TYPE_REGISTRY
	f	Laai;	o	PAINTING_VARIANT_REGISTRY
	f	Laai;	p	CUSTOM_STAT_REGISTRY
	f	Laai;	q	CHUNK_STATUS_REGISTRY
	f	Laai;	r	RULE_TEST_REGISTRY
	f	Laai;	s	POS_RULE_TEST_REGISTRY
	f	Laai;	t	MENU_REGISTRY
	f	Laai;	u	RECIPE_TYPE_REGISTRY
	f	Laai;	v	RECIPE_SERIALIZER_REGISTRY
	f	Laai;	w	ATTRIBUTE_REGISTRY
	f	Laai;	x	GAME_EVENT_REGISTRY
	f	Laai;	y	POSITION_SOURCE_TYPE_REGISTRY
	f	Laai;	z	STAT_TYPE_REGISTRY
c	hm$1	net/minecraft/core/Registry$1
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Lhc$c;)Lhc;	a	lambda$iterator$0
		p	0		entry
	m	(Lhc;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	()I	b	size
	m	(I)Lhc;	c	byId
	f	Lhm;	b	this$0
c	hm$a	net/minecraft/core/Registry$RegistryBootstrap
	m	(Lhm;)Ljava/lang/Object;	run	run
		p	1		registry
c	hn	net/minecraft/core/RegistryAccess
	m	()Ljava/lang/Iterable;	a	knownRegistries
	m	(Laah$b;Lhn$c;)V	a	addBuiltinElements
		p	0		entryLoader
		p	1		info
	m	(Laai;)Ljava/util/Optional;	a	ownedRegistry
		p	1		key
	m	(Laai;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$makeNetworkCodec$4
		p	1		codec
	m	(Laai;Lcom/mojang/serialization/Dynamic;)Lhm;	a	retrieveRegistry
		p	0		registryRef
		p	1		dynamic
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laai;Lcom/mojang/serialization/Codec;)V	a	put
		p	0		infosBuilder
		p	1		registryRef
		p	2		entryCodec
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laai;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	a	put
		p	0		infosBuilder
		p	1		registryRef
		p	2		entryCodec
		p	3		networkEntryCodec
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$readRegistry$13
		p	0		partialResult
	m	(Lcom/mojang/serialization/Dynamic;)Lhn;	a	readFromDisk
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Laai;)Lhm;	a	lambda$readFromDisk$14
		p	1		registryRef
	m	(Lcom/mojang/serialization/DynamicOps;Laaf$a;Lhn$c;)V	a	readRegistry
		p	0		ops
		p	1		loaderAccess
		p	2		info
	m	(Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec;	a	captureMap
		p	0		originalCodec
	m	(Lhm;)Lhn$a;	a	fromRegistryOfRegistries
		p	0		registries
	m	(Lhn$c;)Lcom/mojang/serialization/Codec;	a	lambda$getNetworkCodec$10
		p	0		info
	m	(Lhn$d;)Lcom/mojang/serialization/Lifecycle;	a	lambda$allElementsLifecycle$16
		p	0		entry
	m	(Lhn$e;Lcom/mojang/serialization/DynamicOps;Laaf;)V	a	load
		p	0		dynamicRegistryManager
		p	1		ops
		p	2		registryLoader
	m	(Lhn;)Ljava/util/Map;	a	lambda$captureMap$8
		p	0		dynamicRegistryManager
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	m	(Laai;)Lhm;	b	ownedRegistryOrThrow
		p	1		key
	m	(Lhm;)Lcom/mojang/serialization/DataResult;	b	lambda$makeNetworkCodec$3
		p	0		registry
	m	(Lhn$d;)Z	b	lambda$ownedNetworkableRegistries$9
		p	0		entry
	m	()Ljava/util/stream/Stream;	c	registries
	m	(Laai;)Ljava/util/Optional;	c	registry
		p	1		key
	m	(Lhn$d;)Lhm;	c	lambda$captureMap$7
		p	0		entry
	m	()Ljava/util/stream/Stream;	d	networkSafeRegistries
	m	(Laai;)Lhm;	d	registryOrThrow
		p	1		key
	m	(Lhn$d;)Laai;	d	lambda$captureMap$6
		p	0		entry
	m	()Lhn$e;	e	builtinCopy
	m	(Laai;)Lht;	e	createRegistry
		p	0		registryRef
	m	()Lhn$a;	f	freeze
	m	(Laai;)Lcom/mojang/serialization/DataResult;	f	getNetworkCodec
		p	0		registryKey
	m	()Lcom/mojang/serialization/Lifecycle;	g	allElementsLifecycle
	m	()Ljava/util/stream/Stream;	h	globalRegistries
	m	(Laai;)Ljava/lang/IllegalStateException;	h	lambda$retrieveRegistry$15
	m	()Lcom/mojang/serialization/Codec;	i	makeNetworkCodec
	m	(Laai;)Lcom/mojang/serialization/DataResult;	i	lambda$getNetworkCodec$11
	m	()Ljava/util/stream/Stream;	j	ownedNetworkableRegistries
	m	(Laai;)Lcom/mojang/serialization/DataResult;	j	lambda$makeNetworkCodec$5
		p	0		registryRef
	m	()Ljava/util/Map;	k	createFreshRegistries
	m	(Laai;)Ljava/lang/IllegalStateException;	k	lambda$registryOrThrow$1
	m	()Lhn$e;	l	blankWriteable
	m	(Laai;)Ljava/lang/IllegalStateException;	l	lambda$ownedRegistryOrThrow$0
	m	()Lhn$a;	m	lambda$static$12
	m	()Lcom/google/common/collect/ImmutableMap;	n	lambda$static$2
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	REGISTRIES
	f	Lcom/mojang/serialization/Codec;	c	NETWORK_CODEC
	f	Ljava/util/function/Supplier;	d	BUILTIN
c	hn$1	net/minecraft/core/RegistryAccess$1
	m	(Laai;)Ljava/util/Optional;	a	ownedRegistry
		p	1		key
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	f	Lhm;	e	val$registries
c	hn$a	net/minecraft/core/RegistryAccess$Frozen
	m	()Lhn$a;	f	freeze
c	hn$b	net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		registries
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		stream
	m	(Laai;)Ljava/util/Optional;	a	ownedRegistry
		p	1		key
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	m	(Lhm;)Lhm;	b	lambda$ownedRegistry$0
		p	0		registry
	f	Ljava/util/Map;	e	registries
c	hn$c	net/minecraft/core/RegistryAccess$RegistryData
	m	(Laai;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		registry
		p	2		entryCodec
		p	3		networkEntryCodec
	m	()Z	a	sendToClient
	m	()Laai;	b	key
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lcom/mojang/serialization/Codec;	d	networkCodec
	f	Laai;	a	key
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Lcom/mojang/serialization/Codec;	c	networkCodec
c	hn$d	net/minecraft/core/RegistryAccess$RegistryEntry
	m	()Laai;	a	key
	m	(Laai;Lhm;)Lhn$d;	a	fromUntyped
		p	0		key
		p	1		value
	m	(Lhc$c;)Lhn$d;	a	fromHolder
		p	0		entry
	m	(Ljava/util/Map$Entry;)Lhn$d;	a	fromMapEntry
		p	0		entry
	m	()Lhm;	b	value
	m	()Lhn$d;	c	freeze
	f	Laai;	a	key
	f	Lhm;	b	value
c	hn$e	net/minecraft/core/RegistryAccess$Writable
	m	(Laai;)Ljava/util/Optional;	f	ownedWritableRegistry
		p	1		key
	m	(Laai;)Lht;	g	ownedWritableRegistryOrThrow
		p	1		key
	m	(Laai;)Ljava/lang/IllegalStateException;	h	lambda$ownedWritableRegistryOrThrow$0
c	hn$f	net/minecraft/core/RegistryAccess$WritableRegistryAccess
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		mutableRegistries
	m	(Laai;)Ljava/util/Optional;	a	ownedRegistry
		p	1		key
	m	(Lht;)Lht;	a	lambda$ownedWritableRegistry$1
		p	0		registry
	m	()Ljava/util/stream/Stream;	b	ownedRegistries
	m	(Lht;)Lhm;	b	lambda$ownedRegistry$0
		p	0		registry
	m	(Laai;)Ljava/util/Optional;	f	ownedWritableRegistry
		p	1		key
	f	Ljava/util/Map;	e	registries
c	ho	net/minecraft/core/RegistryCodecs
	m	(Laai;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
	m	(Laai;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
	m	(Laai;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Decoder;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/serialization/Decoder;	a	dataPackAwareDecoder
		p	0		registryRef
		p	1		codec
		p	2		entryMapDecoder
		p	3		lifecycle
	m	(Laai;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
		p	2		alwaysSerializeAsList
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	networkCodec
		p	0		registryRef
		p	1		lifecycle
		p	2		elementCodec
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Ljava/util/List;)Lhm;	a	lambda$networkCodec$1
		p	2		entries
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lht;	a	lambda$dataPackAwareDecoder$5
		p	2		map
	m	(Laai;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	withNameAndId
		p	0		registryRef
		p	1		elementCodec
	m	(Laai;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$withNameAndId$0
		p	2		instance
	m	(Laai;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		alwaysSerializeAsList
	m	(Lhm;)Ljava/util/Map;	a	lambda$dataPackAwareCodec$3
		p	0		registry
	m	(Lht;Lcom/mojang/serialization/Lifecycle;Laai;Ljava/lang/Object;)V	a	lambda$dataPackAwareDecoder$4
		p	2		key
		p	3		value
	m	(Laai;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	directCodec
		p	0		registryRef
		p	1		elementCodec
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	dataPackAwareCodec
		p	0		registryRef
		p	1		lifecycle
		p	2		elementCodec
	m	(Lhm;)Ljava/util/List;	b	lambda$networkCodec$2
		p	0		registry
c	ho$1	net/minecraft/core/RegistryCodecs$1
	m	()Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
	m	(Laaf;Laai;Lcom/mojang/serialization/Codec;Laag;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$overrideFromResources$5
		p	4		pair
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lhm;)Lcom/mojang/datafixers/util/Pair;	a	lambda$overrideFromResources$4
		p	1		registry
	m	(Lcom/mojang/serialization/DataResult;Laag;Laaf$a;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$0
		p	3		loaderAccess
	m	(Lcom/mojang/serialization/DataResult;Laag;Laaf;)Lcom/mojang/serialization/DataResult;	a	overrideFromResources
		p	1		result
		p	2		ops
		p	3		loader
	m	(Lht;)Lhm;	a	lambda$decode$2
		p	0		registry
	f	Lcom/mojang/serialization/Decoder;	a	val$registryDirectCodec
	f	Laai;	b	val$registryKey
	f	Lcom/mojang/serialization/Codec;	c	val$elementCodec
c	ho$a	net/minecraft/core/RegistryCodecs$RegistryEntry
	m	(Laai;ILjava/lang/Object;)V	<init>	<init>
		p	1		key
		p	2		rawId
		p	3		value
	m	()Laai;	a	key
	m	()I	b	id
	m	()Ljava/lang/Object;	c	value
	f	Laai;	a	key
	f	I	b	id
	f	Ljava/lang/Object;	c	value
c	hp	net/minecraft/core/Rotations
	m	(FFF)V	<init>	<init>
		p	1		pitch
		p	2		yaw
		p	3		roll
	m	(Lpp;)V	<init>	<init>
		p	1		serialized
	m	()Lpp;	a	save
	m	()F	b	getX
	m	()F	c	getY
	m	()F	d	getZ
	m	()F	e	getWrappedX
	m	()F	f	getWrappedY
	m	()F	g	getWrappedZ
	f	F	a	x
	f	F	b	y
	f	F	c	z
c	hq	net/minecraft/core/SectionPos
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()I	a	x
	m	(D)I	a	posToSectionCoord
		p	0		coord
	m	(I)I	a	blockToSectionCoord
		p	0		coord
	m	(II)I	a	sectionToBlockCoord
		p	0		chunkCoord
		p	1		offset
	m	(III)Lhq;	a	of
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		minX
		p	1		minY
		p	2		minZ
		p	3		maxX
		p	4		maxY
		p	5		maxZ
	m	(IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		x
		p	1		y
		p	2		z
		p	3		consumer
	m	(J)Lhq;	a	of
		p	0		packed
	m	(JIII)J	a	offset
		p	0		packed
		p	2		x
		p	3		y
		p	4		z
	m	(JLgy;)J	a	offset
		p	0		packed
		p	2		direction
	m	(JLit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	2		consumer
	m	(Lcfh;I)Lhq;	a	of
		p	0		chunkPos
		p	1		y
	m	(Lcfh;III)Ljava/util/stream/Stream;	a	aroundChunk
		p	0		center
		p	1		radius
		p	2		minY
		p	3		maxY
	m	(Lcwm;)Lhq;	a	bottomOf
		p	0		chunk
	m	(Lcyf;)Lhq;	a	of
		p	0		entity
	m	(Lgt;)Lhq;	a	of
		p	0		pos
	m	(Lgt;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	1		consumer
	m	(Lhj;)Lhq;	a	of
		p	0		pos
	m	(Lhq;I)Ljava/util/stream/Stream;	a	cube
		p	0		center
		p	1		radius
	m	(S)I	a	sectionRelativeX
		p	0		packedLocalPos
	m	()I	b	y
	m	(D)I	b	blockToSectionCoord
		p	0		coord
	m	(I)I	b	sectionRelative
		p	0		coord
	m	(III)J	b	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(J)I	b	x
		p	0		packed
	m	(Lgt;)S	b	sectionRelativePos
		p	0		pos
	m	(S)I	b	sectionRelativeY
		p	0		packedLocalPos
	m	()I	c	z
	m	(I)I	c	sectionToBlockCoord
		p	0		sectionCoord
	m	(III)Lhs;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(J)I	c	y
		p	0		packed
	m	(Lgt;)J	c	asLong
		p	0		pos
	m	(S)I	c	sectionRelativeZ
		p	0		packedLocalPos
	m	()I	d	minBlockX
	m	(III)Lhq;	d	offset
	m	(J)I	d	z
		p	0		packed
	m	(S)I	d	relativeToBlockX
		p	1		packedLocalPos
	m	()I	e	minBlockY
	m	(J)J	e	blockToSection
		p	0		blockPos
	m	(S)I	e	relativeToBlockY
		p	1		packedLocalPos
	m	()I	f	minBlockZ
	m	(J)J	f	getZeroNode
		p	0		pos
	m	(S)I	f	relativeToBlockZ
		p	1		packedLocalPos
	m	()I	g	maxBlockX
	m	(S)Lgt;	g	relativeToBlockPos
		p	1		packedLocalPos
	m	()I	h	maxBlockY
	m	()I	i	maxBlockZ
	m	()Lgt;	p	origin
	m	()Lgt;	q	center
	m	()Lcfh;	r	chunk
	m	()J	s	asLong
	m	()Ljava/util/stream/Stream;	t	blocksInside
	f	I	a	SECTION_BITS
	f	I	b	SECTION_SIZE
	f	I	c	SECTION_MASK
	f	I	d	SECTION_HALF_SIZE
	f	I	e	SECTION_MAX_INDEX
	f	I	h	PACKED_X_LENGTH
	f	I	i	PACKED_Y_LENGTH
	f	I	j	PACKED_Z_LENGTH
	f	J	k	PACKED_X_MASK
	f	J	l	PACKED_Y_MASK
	f	J	m	PACKED_Z_MASK
	f	I	n	Y_OFFSET
	f	I	o	Z_OFFSET
	f	I	p	X_OFFSET
	f	I	q	RELATIVE_X_SHIFT
	f	I	r	RELATIVE_Y_SHIFT
	f	I	s	RELATIVE_Z_SHIFT
c	hq$1	net/minecraft/core/SectionPos$1
	f	Lgw;	a	cursor
	f	I	b	val$minX
	f	I	c	val$minY
	f	I	d	val$minZ
	f	I	e	val$maxX
	f	I	f	val$maxY
	f	I	g	val$maxZ
c	hr	net/minecraft/core/UUIDUtil
	m	(JJ)[I	a	leastMostToIntArray
		p	0		uuidMost
		p	2		uuidLeast
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID;	a	getOrCreatePlayerUUID
		p	0		profile
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID;	a	readUUID
		p	0		dynamic
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	createOfflinePlayerUUID
		p	0		nickname
	m	(Ljava/util/UUID;)[I	a	uuidToIntArray
		p	0		uuid
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
		p	0		uuidStream
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
		p	0		array
	m	(Ljava/util/UUID;)Ljava/util/stream/IntStream;	b	lambda$static$1
		p	0		uuid
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	UUID_BYTES
	f	Ljava/lang/String;	c	UUID_PREFIX_OFFLINE_PLAYER
c	hs	net/minecraft/core/Vec3i
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(I)Ljava/util/function/Function;	a	checkOffsetAxes
		p	0		maxAbsValue
	m	(ILhs;)Lcom/mojang/serialization/DataResult;	a	lambda$checkOffsetAxes$3
		p	1		vec
	m	(Lgy$a;)I	a	get
		p	1		axis
	m	(Lhj;D)Z	a	closerToCenterThan
		p	1		pos
		p	2		distance
	m	(Lhs;)Ljava/util/stream/IntStream;	a	lambda$static$2
	m	(Lhs;D)Z	a	closerThan
		p	1		vec
		p	2		distance
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Lhs;	a	lambda$static$0
	m	(DDD)Lhs;	b	offset
		p	1		x
		p	3		y
		p	5		z
	m	(Lgy$a;I)Lhs;	b	relative
		p	1		axis
		p	2		distance
	m	(Lgy;)Lhs;	b	relative
		p	1		direction
	m	(Lgy;I)Lhs;	b	relative
		p	1		direction
		p	2		distance
	m	(Lhj;)D	b	distToCenterSqr
		p	1		pos
	m	(III)Lhs;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(DDD)D	d	distToCenterSqr
		p	1		x
		p	3		y
		p	5		z
	m	(Lhs;)Lhs;	d	cross
		p	1		vec
	m	(DDD)D	e	distToLowCornerSqr
		p	1		x
		p	3		y
		p	5		z
	m	(Lhs;)Lhs;	e	subtract
		p	1		vec
	m	(Lhs;)Lhs;	f	offset
		p	1		vec
	m	(I)Lhs;	i	east
		p	1		distance
	m	(Lhs;)I	i	compareTo
	m	()Lhs;	j	east
	m	(I)Lhs;	j	west
		p	1		distance
	m	(Lhs;)D	j	distSqr
		p	1		vec
	m	()Lhs;	k	west
	m	(I)Lhs;	k	south
		p	1		distance
	m	(Lhs;)I	k	distManhattan
		p	1		vec
	m	()Lhs;	l	south
	m	(I)Lhs;	l	north
		p	1		distance
	m	()Lhs;	m	north
	m	(I)Lhs;	m	below
		p	1		distance
	m	()Lhs;	n	below
	m	(I)Lhs;	n	above
		p	1		distance
	m	()Lhs;	o	above
	m	(I)Lhs;	o	multiply
		p	1		scale
	m	(I)Lhs;	s	setZ
		p	1		z
	m	(I)Lhs;	t	setY
		p	1		y
	m	()I	u	getX
	m	(I)Lhs;	u	setX
		p	1		x
	m	()I	v	getY
	m	(I)Lcom/mojang/serialization/Codec;	v	offsetCodec
		p	0		maxAbsValue
	m	()I	w	getZ
	m	()Ljava/lang/String;	x	toShortString
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lhs;	g	ZERO
c	ht	net/minecraft/core/WritableRegistry
	m	(Laai;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		key
		p	2		lifecycle
	m	(ILaai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhc;	a	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	(Laai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhc;	a	register
		p	1		key
		p	2		entry
		p	3		lifecycle
	m	(Ljava/util/OptionalInt;Laai;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhc;	a	registerOrOverride
		p	1		rawId
		p	2		key
		p	3		newEntry
		p	4		lifecycle
	m	()Z	j	isEmpty
c	hu	net/minecraft/core/cauldron/CauldronInteraction
	m	()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;	a	newInteractionMap
	m	(Lcga;Lgt;Lbtf;Lazl;Lcaa;Lcur;Lajd;)Lazm;	a	emptyBucket
		p	0		world
		p	1		pos
		p	2		player
		p	3		hand
		p	4		stack
		p	5		state
		p	6		soundEvent
	m	(Lcur;)Z	a	lambda$bootStrap$9
		p	0		state
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	a	lambda$static$16
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;Lcaa;Ljava/util/function/Predicate;Lajd;)Lazm;	a	fillBucket
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
		p	6		output
		p	7		predicate
		p	8		soundEvent
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$newInteractionMap$1
		p	0		map
	m	(Ljava/util/Map;)V	a	addDefaultInteractions
		p	0		behavior
	m	()V	b	bootStrap
	m	(Lcur;)Z	b	lambda$bootStrap$7
		p	0		state
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	b	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;)Z	c	lambda$bootStrap$3
		p	0		state
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	c	lambda$static$14
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	d	lambda$static$13
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	e	lambda$static$12
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	f	lambda$static$11
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	g	lambda$bootStrap$10
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	h	lambda$bootStrap$8
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	i	lambda$bootStrap$6
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	interact	interact
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	j	lambda$bootStrap$5
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	k	lambda$bootStrap$4
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	l	lambda$bootStrap$2
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Lcaa;)Lazm;	m	lambda$newInteractionMap$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	f	Ljava/util/Map;	a	EMPTY
	f	Ljava/util/Map;	b	WATER
	f	Ljava/util/Map;	c	LAVA
	f	Ljava/util/Map;	d	POWDER_SNOW
	f	Lhu;	e	FILL_WATER
	f	Lhu;	f	FILL_LAVA
	f	Lhu;	g	FILL_POWDER_SNOW
	f	Lhu;	h	SHULKER_BOX
	f	Lhu;	i	BANNER
	f	Lhu;	j	DYED_ITEM
c	hv	net/minecraft/core/cauldron/package-info
c	hw	net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	m	()F	a	getUncertainty
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	m	()F	b	getPower
c	hx	net/minecraft/core/dispenser/BoatDispenseItemBehavior
	m	(Lbuy$b;)V	<init>	<init>
		p	1		type
	m	(Lbuy$b;Z)V	<init>	<init>
		p	1		boatType
		p	2		chest
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	f	Lhy;	c	defaultDispenseItemBehavior
	f	Lbuy$b;	d	type
	f	Z	e	isChestBoat
c	hy	net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	m	(Lcga;Lcaa;ILgy;Lhj;)V	a	spawnItem
		p	0		world
		p	1		stack
		p	2		speed
		p	3		side
		p	4		pos
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lgu;Lgy;)V	a	playAnimation
		p	1		pointer
		p	2		side
	m	(Lgu;Lcaa;)Lcaa;	dispense	dispense
		p	1		pointer
		p	2		stack
c	hz	net/minecraft/core/dispenser/DispenseItemBehavior
	m	(Lgu;Lbaq;Lgy;)V	a	setEntityPokingOutOfBlock
		p	0		pointer
		p	1		entity
		p	2		direction
	m	(Lgu;Lcaa;)Lcaa;	a	lambda$static$0
		p	0		pointer
		p	1		stack
	m	()V	c	bootStrap
	m	(Lgu;Lcaa;)Lcaa;	dispense	dispense
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhz;	b	NOOP
c	hz$1	net/minecraft/core/dispenser/DispenseItemBehavior$1
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	hz$2	net/minecraft/core/dispenser/DispenseItemBehavior$10
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$3	net/minecraft/core/dispenser/DispenseItemBehavior$11
	m	(Lbbf;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$4	net/minecraft/core/dispenser/DispenseItemBehavior$12
	m	(Lbod;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$5	net/minecraft/core/dispenser/DispenseItemBehavior$13
	m	(Lboc;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$6	net/minecraft/core/dispenser/DispenseItemBehavior$14
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$7	net/minecraft/core/dispenser/DispenseItemBehavior$15
	m	(Lcaa;Lbua;)V	a	lambda$execute$0
		p	1		entity
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$8	net/minecraft/core/dispenser/DispenseItemBehavior$16
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	f	Lhy;	c	defaultDispenseItemBehavior
c	hz$9	net/minecraft/core/dispenser/DispenseItemBehavior$17
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	f	Lhy;	c	defaultDispenseItemBehavior
c	hz$10	net/minecraft/core/dispenser/DispenseItemBehavior$18
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$11	net/minecraft/core/dispenser/DispenseItemBehavior$19
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$12	net/minecraft/core/dispenser/DispenseItemBehavior$2
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	hz$13	net/minecraft/core/dispenser/DispenseItemBehavior$20
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$14	net/minecraft/core/dispenser/DispenseItemBehavior$21
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$15	net/minecraft/core/dispenser/DispenseItemBehavior$22
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$16	net/minecraft/core/dispenser/DispenseItemBehavior$23
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$17	net/minecraft/core/dispenser/DispenseItemBehavior$24
	m	(Lcuq$a;)Z	a	lambda$execute$0
		p	0		state
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lgu;Lcaa;Lcaa;)Lcaa;	a	takeLiquid
		p	1		pointer
		p	2		emptyBottleStack
		p	3		filledBottleStack
	f	Lhy;	c	defaultDispenseItemBehavior
c	hz$18	net/minecraft/core/dispenser/DispenseItemBehavior$25
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$19	net/minecraft/core/dispenser/DispenseItemBehavior$26
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	hz$20	net/minecraft/core/dispenser/DispenseItemBehavior$27
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	f	Lhy;	c	defaultDispenseItemBehavior
c	hz$21	net/minecraft/core/dispenser/DispenseItemBehavior$3
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	hz$22	net/minecraft/core/dispenser/DispenseItemBehavior$4
	m	(Lcaa;Lbuf;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	hz$23	net/minecraft/core/dispenser/DispenseItemBehavior$5
	m	(Lcaa;Lbub;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	hz$24	net/minecraft/core/dispenser/DispenseItemBehavior$6
	m	()F	a	getUncertainty
	m	(Lcaa;Lbuh;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
c	hz$25	net/minecraft/core/dispenser/DispenseItemBehavior$7
	m	(Lgu;Lcaa;)Lcaa;	dispense	dispense
		p	1		pointer
		p	2		stack
c	hz$25$1	net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	m	()F	a	getUncertainty
	m	(Lcaa;Lbui;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
	f	Lhz$25;	c	this$0
c	hz$26	net/minecraft/core/dispenser/DispenseItemBehavior$8
	m	(Lgu;Lcaa;)Lcaa;	dispense	dispense
		p	1		pointer
		p	2		stack
c	hz$26$1	net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	m	()F	a	getUncertainty
	m	(Lcaa;Lbui;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcga;Lhj;Lcaa;)Lbtx;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
	f	Lhz$26;	c	this$0
c	hz$27	net/minecraft/core/dispenser/DispenseItemBehavior$9
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	ia	net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	m	()Z	a	isSuccess
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Z)V	a	setSuccess
		p	1		success
	f	Z	c	success
c	ib	net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	m	(Lafo;Lgt;)Z	a	tryShearBeehive
		p	0		world
		p	1		pos
	m	(Lcuq$a;)Z	a	lambda$tryShearBeehive$0
		p	0		state
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lafo;Lgt;)Z	b	tryShearLivingEntity
		p	0		world
		p	1		pos
c	ic	net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	c	LOGGER
c	id	net/minecraft/core/dispenser/package-info
c	ie	net/minecraft/core/package-info
c	ig	net/minecraft/core/particles/BlockParticleOption
	m	(Lin;Lcur;)V	<init>	<init>
		p	1		type
		p	2		blockState
	m	()Ljava/lang/String;	a	writeToString
	m	(Lig;)Lcur;	a	lambda$codec$1
		p	0		effect
	m	(Lin;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		type
	m	(Lin;Lcur;)Lig;	a	lambda$codec$0
		p	1		state
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
	m	()Lcur;	c	getState
	f	Lim$a;	a	DESERIALIZER
	f	Lin;	b	type
	f	Lcur;	c	state
c	ig$1	net/minecraft/core/particles/BlockParticleOption$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lig;	a	fromCommand
	m	(Lin;Lqx;)Lig;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	ih	net/minecraft/core/particles/DustColorTransitionOptions
	m	(Lk;Lk;F)V	<init>	<init>
		p	1		fromColor
		p	2		toColor
		p	3		scale
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lih;)Ljava/lang/Float;	a	lambda$static$2
		p	0		effect
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
	m	(Lih;)Lk;	b	lambda$static$1
		p	0		effect
	m	()Lk;	c	getFromColor
	m	(Lih;)Lk;	c	lambda$static$0
		p	0		effect
	m	()Lk;	d	getToColor
	f	Lk;	a	SCULK_PARTICLE_COLOR
	f	Lih;	b	SCULK_TO_REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lim$a;	d	DESERIALIZER
	f	Lk;	i	toColor
c	ih$1	net/minecraft/core/particles/DustColorTransitionOptions$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lih;	a	fromCommand
	m	(Lin;Lqx;)Lih;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	ii	net/minecraft/core/particles/DustParticleOptions
	m	(Lk;F)V	<init>	<init>
		p	1		color
		p	2		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lii;)Ljava/lang/Float;	a	lambda$static$1
		p	0		effect
	m	()Lin;	b	getType
	m	(Lii;)Lk;	b	lambda$static$0
		p	0		effect
	f	Lk;	a	REDSTONE_PARTICLE_COLOR
	f	Lii;	b	REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lim$a;	d	DESERIALIZER
c	ii$1	net/minecraft/core/particles/DustParticleOptions$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lii;	a	fromCommand
	m	(Lin;Lqx;)Lii;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	ij	net/minecraft/core/particles/DustParticleOptionsBase
	m	(Lk;F)V	<init>	<init>
		p	1		color
		p	2		scale
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/brigadier/StringReader;)Lk;	a	readVector3f
		p	0		reader
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	(Lqx;)Lk;	b	readVector3f
		p	0		buf
	m	()Lk;	e	getColor
	m	()F	f	getScale
	f	F	e	MIN_SCALE
	f	F	f	MAX_SCALE
	f	Lk;	g	color
	f	F	h	scale
c	ik	net/minecraft/core/particles/ItemParticleOption
	m	(Lin;Lcaa;)V	<init>	<init>
		p	1		type
		p	2		stack
	m	()Ljava/lang/String;	a	writeToString
	m	(Lik;)Lcaa;	a	lambda$codec$1
		p	0		effect
	m	(Lin;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		type
	m	(Lin;Lcaa;)Lik;	a	lambda$codec$0
		p	1		stack
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
	m	()Lcaa;	c	getItem
	f	Lim$a;	a	DESERIALIZER
	f	Lin;	b	type
	f	Lcaa;	c	itemStack
c	ik$1	net/minecraft/core/particles/ItemParticleOption$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lik;	a	fromCommand
	m	(Lin;Lqx;)Lik;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	il	net/minecraft/core/particles/ParticleGroup
	m	(I)V	<init>	<init>
		p	1		maxCount
	m	()I	a	getLimit
	f	Lil;	a	SPORE_BLOSSOM
	f	I	b	limit
c	im	net/minecraft/core/particles/ParticleOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
c	im$a	net/minecraft/core/particles/ParticleOptions$Deserializer
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	in	net/minecraft/core/particles/ParticleType
	m	(ZLim$a;)V	<init>	<init>
		p	1		alwaysShow
		p	2		parametersFactory
	m	()Z	c	getOverrideLimiter
	m	()Lim$a;	d	getDeserializer
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Z	a	overrideLimiter
	f	Lim$a;	b	deserializer
c	io	net/minecraft/core/particles/ParticleTypes
	m	(Lin;)Lcom/mojang/serialization/Codec;	a	lambda$static$4
		p	0		type
	m	(Ljava/lang/String;Z)Lir;	a	register
		p	0		name
		p	1		alwaysShow
	m	(Ljava/lang/String;ZLim$a;Ljava/util/function/Function;)Lin;	a	register
		p	0		name
		p	1		alwaysShow
		p	2		factory
		p	3		codecGetter
	m	(Lin;)Lcom/mojang/serialization/Codec;	b	lambda$static$3
	m	(Lin;)Lcom/mojang/serialization/Codec;	c	lambda$static$2
	m	(Lin;)Lcom/mojang/serialization/Codec;	d	lambda$static$1
	m	(Lin;)Lcom/mojang/serialization/Codec;	e	lambda$static$0
	f	Lir;	A	FIREWORK
	f	Lir;	B	FISHING
	f	Lir;	C	FLAME
	f	Lir;	D	SCULK_SOUL
	f	Lin;	E	SCULK_CHARGE
	f	Lir;	F	SCULK_CHARGE_POP
	f	Lir;	G	SOUL_FIRE_FLAME
	f	Lir;	H	SOUL
	f	Lir;	I	FLASH
	f	Lir;	J	HAPPY_VILLAGER
	f	Lir;	K	COMPOSTER
	f	Lir;	L	HEART
	f	Lir;	M	INSTANT_EFFECT
	f	Lin;	N	ITEM
	f	Lin;	O	VIBRATION
	f	Lir;	P	ITEM_SLIME
	f	Lir;	Q	ITEM_SNOWBALL
	f	Lir;	R	LARGE_SMOKE
	f	Lir;	S	LAVA
	f	Lir;	T	MYCELIUM
	f	Lir;	U	NOTE
	f	Lir;	V	POOF
	f	Lir;	W	PORTAL
	f	Lir;	X	RAIN
	f	Lir;	Y	SMOKE
	f	Lir;	Z	SNEEZE
	f	Lir;	aA	REVERSE_PORTAL
	f	Lir;	aB	WHITE_ASH
	f	Lir;	aC	SMALL_FLAME
	f	Lir;	aD	SNOWFLAKE
	f	Lir;	aE	DRIPPING_DRIPSTONE_LAVA
	f	Lir;	aF	FALLING_DRIPSTONE_LAVA
	f	Lir;	aG	DRIPPING_DRIPSTONE_WATER
	f	Lir;	aH	FALLING_DRIPSTONE_WATER
	f	Lir;	aI	GLOW_SQUID_INK
	f	Lir;	aJ	GLOW
	f	Lir;	aK	WAX_ON
	f	Lir;	aL	WAX_OFF
	f	Lir;	a	AMBIENT_ENTITY_EFFECT
	f	Lir;	aM	ELECTRIC_SPARK
	f	Lir;	aN	SCRAPE
	f	Lin;	aO	SHRIEK
	f	Lcom/mojang/serialization/Codec;	aP	CODEC
	f	Lir;	aa	SPIT
	f	Lir;	ab	SQUID_INK
	f	Lir;	ac	SWEEP_ATTACK
	f	Lir;	ad	TOTEM_OF_UNDYING
	f	Lir;	ae	UNDERWATER
	f	Lir;	af	SPLASH
	f	Lir;	ag	WITCH
	f	Lir;	ah	BUBBLE_POP
	f	Lir;	ai	CURRENT_DOWN
	f	Lir;	aj	BUBBLE_COLUMN_UP
	f	Lir;	ak	NAUTILUS
	f	Lir;	al	DOLPHIN
	f	Lir;	am	CAMPFIRE_COSY_SMOKE
	f	Lir;	an	CAMPFIRE_SIGNAL_SMOKE
	f	Lir;	ao	DRIPPING_HONEY
	f	Lir;	ap	FALLING_HONEY
	f	Lir;	aq	LANDING_HONEY
	f	Lir;	ar	FALLING_NECTAR
	f	Lir;	as	FALLING_SPORE_BLOSSOM
	f	Lir;	at	ASH
	f	Lir;	au	CRIMSON_SPORE
	f	Lir;	av	WARPED_SPORE
	f	Lir;	aw	SPORE_BLOSSOM_AIR
	f	Lir;	ax	DRIPPING_OBSIDIAN_TEAR
	f	Lir;	ay	FALLING_OBSIDIAN_TEAR
	f	Lir;	az	LANDING_OBSIDIAN_TEAR
	f	Lir;	b	ANGRY_VILLAGER
	f	Lin;	c	BLOCK
	f	Lin;	d	BLOCK_MARKER
	f	Lir;	e	BUBBLE
	f	Lir;	f	CLOUD
	f	Lir;	g	CRIT
	f	Lir;	h	DAMAGE_INDICATOR
	f	Lir;	i	DRAGON_BREATH
	f	Lir;	j	DRIPPING_LAVA
	f	Lir;	k	FALLING_LAVA
	f	Lir;	l	LANDING_LAVA
	f	Lir;	m	DRIPPING_WATER
	f	Lir;	n	FALLING_WATER
	f	Lin;	o	DUST
	f	Lin;	p	DUST_COLOR_TRANSITION
	f	Lir;	q	EFFECT
	f	Lir;	r	ELDER_GUARDIAN
	f	Lir;	s	ENCHANTED_HIT
	f	Lir;	t	ENCHANT
	f	Lir;	u	END_ROD
	f	Lir;	v	ENTITY_EFFECT
	f	Lir;	w	EXPLOSION_EMITTER
	f	Lir;	x	EXPLOSION
	f	Lir;	y	SONIC_BOOM
	f	Lin;	z	FALLING_DUST
c	io$1	net/minecraft/core/particles/ParticleTypes$1
	m	(ZLim$a;Ljava/util/function/Function;)V	<init>	<init>
		p	1		alwaysShow
		p	2		parametersFactory
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Ljava/util/function/Function;	a	val$codec
c	ip	net/minecraft/core/particles/SculkChargeParticleOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lip;)Ljava/lang/Float;	a	lambda$static$0
		p	0		particleEffect
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
	m	()F	c	roll
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lim$a;	b	DESERIALIZER
	f	F	c	roll
c	ip$1	net/minecraft/core/particles/SculkChargeParticleOptions$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lip;	a	fromCommand
	m	(Lin;Lqx;)Lip;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	iq	net/minecraft/core/particles/ShriekParticleOption
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Liq;)Ljava/lang/Integer;	a	lambda$static$0
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
	m	()I	c	getDelay
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lim$a;	b	DESERIALIZER
	f	I	c	delay
c	iq$1	net/minecraft/core/particles/ShriekParticleOption$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Liq;	a	fromCommand
	m	(Lin;Lqx;)Liq;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	ir	net/minecraft/core/particles/SimpleParticleType
	m	(Z)V	<init>	<init>
		p	1		alwaysShow
	m	()Ljava/lang/String;	a	writeToString
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
	m	()Lcom/mojang/serialization/Codec;	e	codec
	m	()Lir;	f	getType
	f	Lim$a;	a	DESERIALIZER
	f	Lcom/mojang/serialization/Codec;	b	codec
c	ir$1	net/minecraft/core/particles/SimpleParticleType$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lir;	a	fromCommand
	m	(Lin;Lqx;)Lir;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	is	net/minecraft/core/particles/VibrationParticleOption
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lis;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Lqx;)V	a	writeToNetwork
		p	1		buf
	m	()Lin;	b	getType
	m	(Lis;)Lczb;	b	lambda$static$0
		p	0		effect
	m	()Lczb;	c	getDestination
	m	()I	d	getArrivalInTicks
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lim$a;	b	DESERIALIZER
	f	Lczb;	c	destination
	f	I	d	arrivalInTicks
c	is$1	net/minecraft/core/particles/VibrationParticleOption$1
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lis;	a	fromCommand
	m	(Lin;Lqx;)Lis;	a	fromNetwork
	m	(Lin;Lcom/mojang/brigadier/StringReader;)Lim;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lin;Lqx;)Lim;	b	fromNetwork
		p	1		type
		p	2		buf
c	it	net/minecraft/core/particles/package-info
c	iu	net/minecraft/data/BlockFamilies
	m	()Ljava/util/stream/Stream;	a	getAllFamilies
	m	(Lciw;)Liv$a;	a	familyBuilder
		p	0		baseBlock
	f	Liv;	A	WEATHERED_COPPER
	f	Liv;	B	WEATHERED_CUT_COPPER
	f	Liv;	C	WAXED_WEATHERED_COPPER
	f	Liv;	D	WAXED_WEATHERED_CUT_COPPER
	f	Liv;	E	OXIDIZED_COPPER
	f	Liv;	F	OXIDIZED_CUT_COPPER
	f	Liv;	G	WAXED_OXIDIZED_COPPER
	f	Liv;	H	WAXED_OXIDIZED_CUT_COPPER
	f	Liv;	I	COBBLESTONE
	f	Liv;	J	MOSSY_COBBLESTONE
	f	Liv;	K	DIORITE
	f	Liv;	L	POLISHED_DIORITE
	f	Liv;	M	GRANITE
	f	Liv;	N	POLISHED_GRANITE
	f	Liv;	O	NETHER_BRICKS
	f	Liv;	P	RED_NETHER_BRICKS
	f	Liv;	Q	PRISMARINE
	f	Liv;	R	PURPUR
	f	Liv;	S	PRISMARINE_BRICKS
	f	Liv;	T	DARK_PRISMARINE
	f	Liv;	U	QUARTZ
	f	Liv;	V	SMOOTH_QUARTZ
	f	Liv;	W	SANDSTONE
	f	Liv;	X	CUT_SANDSTONE
	f	Liv;	Y	SMOOTH_SANDSTONE
	f	Liv;	Z	RED_SANDSTONE
	f	Liv;	a	ACACIA_PLANKS
	f	Liv;	aa	CUT_RED_SANDSTONE
	f	Liv;	ab	SMOOTH_RED_SANDSTONE
	f	Liv;	ac	STONE
	f	Liv;	ad	STONE_BRICK
	f	Liv;	ae	DEEPSLATE
	f	Liv;	af	COBBLED_DEEPSLATE
	f	Liv;	ag	POLISHED_DEEPSLATE
	f	Liv;	ah	DEEPSLATE_BRICKS
	f	Liv;	ai	DEEPSLATE_TILES
	f	Ljava/util/Map;	aj	MAP
	f	Ljava/lang/String;	ak	RECIPE_GROUP_PREFIX_WOODEN
	f	Ljava/lang/String;	al	RECIPE_UNLOCKED_BY_HAS_PLANKS
	f	Liv;	b	BIRCH_PLANKS
	f	Liv;	c	CRIMSON_PLANKS
	f	Liv;	d	JUNGLE_PLANKS
	f	Liv;	e	OAK_PLANKS
	f	Liv;	f	DARK_OAK_PLANKS
	f	Liv;	g	SPRUCE_PLANKS
	f	Liv;	h	WARPED_PLANKS
	f	Liv;	i	MANGROVE_PLANKS
	f	Liv;	j	MUD_BRICKS
	f	Liv;	k	ANDESITE
	f	Liv;	l	POLISHED_ANDESITE
	f	Liv;	m	BLACKSTONE
	f	Liv;	n	POLISHED_BLACKSTONE
	f	Liv;	o	POLISHED_BLACKSTONE_BRICKS
	f	Liv;	p	BRICKS
	f	Liv;	q	END_STONE_BRICKS
	f	Liv;	r	MOSSY_STONE_BRICKS
	f	Liv;	s	COPPER_BLOCK
	f	Liv;	t	CUT_COPPER
	f	Liv;	u	WAXED_COPPER_BLOCK
	f	Liv;	v	WAXED_CUT_COPPER
	f	Liv;	w	EXPOSED_COPPER
	f	Liv;	x	EXPOSED_CUT_COPPER
	f	Liv;	y	WAXED_EXPOSED_COPPER
	f	Liv;	z	WAXED_EXPOSED_CUT_COPPER
c	iv	net/minecraft/data/BlockFamily
	m	(Lciw;)V	<init>	<init>
		p	1		baseBlock
	m	()Lciw;	a	getBaseBlock
	m	(Liv$b;)Lciw;	a	get
		p	1		variant
	m	()Ljava/util/Map;	b	getVariants
	m	()Z	c	shouldGenerateModel
	m	()Z	d	shouldGenerateRecipe
	m	()Ljava/util/Optional;	e	getRecipeGroupPrefix
	m	()Ljava/util/Optional;	f	getRecipeUnlockedBy
	f	Lciw;	a	baseBlock
	f	Ljava/util/Map;	b	variants
	f	Z	c	generateModel
	f	Z	d	generateRecipe
	f	Ljava/lang/String;	e	recipeGroupPrefix
	f	Ljava/lang/String;	f	recipeUnlockedBy
c	iv$a	net/minecraft/data/BlockFamily$Builder
	m	(Lciw;)V	<init>	<init>
		p	1		baseBlock
	m	()Liv;	a	getFamily
	m	(Lciw;)Liv$a;	a	button
		p	1		block
	m	(Lciw;Lciw;)Liv$a;	a	sign
		p	1		block
		p	2		wallBlock
	m	(Ljava/lang/String;)Liv$a;	a	recipeGroupPrefix
		p	1		group
	m	()Liv$a;	b	dontGenerateModel
	m	(Lciw;)Liv$a;	b	chiseled
		p	1		block
	m	(Ljava/lang/String;)Liv$a;	b	recipeUnlockedBy
		p	1		unlockCriterionName
	m	()Liv$a;	c	dontGenerateRecipe
	m	(Lciw;)Liv$a;	c	cracked
		p	1		block
	m	(Lciw;)Liv$a;	d	cut
		p	1		block
	m	(Lciw;)Liv$a;	e	door
		p	1		block
	m	(Lciw;)Liv$a;	f	fence
		p	1		block
	m	(Lciw;)Liv$a;	g	fenceGate
		p	1		block
	m	(Lciw;)Liv$a;	h	slab
		p	1		block
	m	(Lciw;)Liv$a;	i	stairs
		p	1		block
	m	(Lciw;)Liv$a;	j	pressurePlate
		p	1		block
	m	(Lciw;)Liv$a;	k	polished
		p	1		block
	m	(Lciw;)Liv$a;	l	trapdoor
		p	1		block
	m	(Lciw;)Liv$a;	m	wall
		p	1		block
	f	Liv;	a	family
c	iv$b	net/minecraft/data/BlockFamily$Variant
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Liv$b;	b	$values
	f	Liv$b;	a	BUTTON
	f	Liv$b;	b	CHISELED
	f	Liv$b;	c	CRACKED
	f	Liv$b;	d	CUT
	f	Liv$b;	e	DOOR
	f	Liv$b;	f	FENCE
	f	Liv$b;	g	FENCE_GATE
	f	Liv$b;	h	SIGN
	f	Liv$b;	i	SLAB
	f	Liv$b;	j	STAIRS
	f	Liv$b;	k	PRESSURE_PLATE
	f	Liv$b;	l	POLISHED
	f	Liv$b;	m	TRAPDOOR
	f	Liv$b;	n	WALL
	f	Liv$b;	o	WALL_SIGN
	f	Ljava/lang/String;	p	name
	f	[Liv$b;	q	$VALUES
c	iw	net/minecraft/data/BuiltinRegistries
	m	()V	a	bootstrap
	m	(Laai;Lcom/mojang/serialization/Lifecycle;Liw$a;)Lhm;	a	registerSimple
		p	0		registryRef
		p	1		lifecycle
		p	2		initializer
	m	(Laai;Lht;Liw$a;Lcom/mojang/serialization/Lifecycle;)Lht;	a	internalRegister
		p	0		registryRef
		p	1		registry
		p	2		initializer
		p	3		lifecycle
	m	(Laai;Liw$a;)Lhm;	a	registerSimple
		p	0		registryRef
		p	1		initializer
	m	(Laaj;Ljava/util/function/Supplier;)V	a	lambda$static$3
		p	0		id
		p	1		supplier
	m	(Lhm;)Lhc;	a	lambda$static$1
		p	0		registry
	m	(Lhm;Laai;Ljava/lang/Object;)Lhc;	a	register
		p	0		registry
		p	1		key
		p	2		object
	m	(Lhm;Laaj;Ljava/lang/Object;)Lhc;	a	register
		p	0		registry
		p	1		id
		p	2		object
	m	(Lhm;Ljava/lang/String;Ljava/lang/Object;)Lhc;	a	registerExact
		p	0		registry
		p	1		id
		p	2		value
	m	(Liw$a;Lht;)Lhc;	a	lambda$internalRegister$2
	m	(Lhm;)Lhc;	b	lambda$static$0
		p	0		registry
	m	(Lhm;Ljava/lang/String;Ljava/lang/Object;)Lhc;	b	register
		p	0		registry
		p	1		id
		p	2		object
	f	Lhm;	a	REGISTRY
	f	Lhm;	b	DIMENSION_TYPE
	f	Lhm;	c	CONFIGURED_CARVER
	f	Lhm;	d	CONFIGURED_FEATURE
	f	Lhm;	e	PLACED_FEATURE
	f	Lhm;	f	STRUCTURES
	f	Lhm;	g	STRUCTURE_SETS
	f	Lhm;	h	PROCESSOR_LIST
	f	Lhm;	i	TEMPLATE_POOL
	f	Lhm;	j	BIOME
	f	Lhm;	k	NOISE
	f	Lhm;	l	DENSITY_FUNCTION
	f	Lhm;	m	NOISE_GENERATOR_SETTINGS
	f	Lhm;	n	WORLD_PRESET
	f	Lhm;	o	FLAT_LEVEL_GENERATOR_PRESET
	f	Lhm;	p	CHAT_TYPE
	f	Lhn;	q	ACCESS
	f	Lorg/slf4j/Logger;	r	LOGGER
	f	Ljava/util/Map;	s	LOADERS
	f	Lht;	t	WRITABLE_REGISTRY
c	iw$a	net/minecraft/data/BuiltinRegistries$RegistryBootstrap
	m	(Lhm;)Lhc;	run	run
		p	1		registry
c	ix	net/minecraft/data/CachedOutput
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	a	lambda$static$0
		p	0		path
		p	1		data
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Lix;	a	NO_CACHE
c	iy	net/minecraft/data/DataGenerator
	m	(Ljava/nio/file/Path;Ljava/util/Collection;Lae;Z)V	<init>	<init>
		p	1		output
		p	2		inputs
		p	3		gameVersion
		p	4		ignoreCache
	m	()Ljava/util/Collection;	a	getInputFolders
	m	(Liy$b;)Ljava/nio/file/Path;	a	getOutputFolder
		p	1		outputType
	m	(Liy$b;Ljava/lang/String;)Liy$a;	a	createPathProvider
		p	1		outputType
		p	2		directoryName
	m	(ZLiz;)V	a	addProvider
		p	1		shouldRun
		p	2		provider
	m	()Ljava/nio/file/Path;	b	getOutputFolder
	m	()V	c	run
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Collection;	b	inputFolders
	f	Ljava/nio/file/Path;	c	outputFolder
	f	Ljava/util/List;	d	allProviders
	f	Ljava/util/List;	e	providersToRun
	f	Lae;	f	version
	f	Z	g	alwaysGenerate
c	iy$a	net/minecraft/data/DataGenerator$PathProvider
	m	(Liy;Liy$b;Ljava/lang/String;)V	<init>	<init>
		p	1		dataGenerator
		p	2		outputType
		p	3		directoryName
	m	(Laaj;)Ljava/nio/file/Path;	a	json
		p	1		id
	m	(Laaj;Ljava/lang/String;)Ljava/nio/file/Path;	a	file
		p	1		id
		p	2		fileExtension
	f	Ljava/nio/file/Path;	a	root
	f	Ljava/lang/String;	b	kind
c	iy$b	net/minecraft/data/DataGenerator$Target
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		path
	m	()[Liy$b;	a	$values
	f	Liy$b;	a	DATA_PACK
	f	Liy$b;	b	RESOURCE_PACK
	f	Liy$b;	c	REPORTS
	f	Ljava/lang/String;	d	directory
	f	[Liy$b;	e	$VALUES
c	iz	net/minecraft/data/DataProvider
	m	()Ljava/lang/String;	a	getName
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V	a	saveStable
		p	0		writer
		p	1		json
		p	2		path
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
		p	0		key
	f	Ljava/util/function/ToIntFunction;	a	FIXED_ORDER_FIELDS
	f	Ljava/util/Comparator;	b	KEY_COMPARATOR
c	ja	net/minecraft/data/HashCache
	m	(Ljava/nio/file/Path;Ljava/util/List;Lae;)V	<init>	<init>
		p	1		root
		p	2		dataProviders
		p	3		gameVersion
	m	()V	a	purgeStaleAndWrite
	m	(Liz;)Z	a	shouldRunInThisVersion
		p	1		dataProvider
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lja$b;	a	readCache
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/util/Set;Lja$b;)V	a	lambda$purgeStaleAndWrite$2
		p	1		cachedData
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Liz;Lja$a;)V	a	lambda$purgeStaleAndWrite$1
		p	2		dataProvider
		p	3		writer
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Set;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/nio/file/Path;)V	a	lambda$purgeStaleAndWrite$3
		p	4		path
	m	(Liz;)Lix;	b	getUpdater
		p	1		dataProvider
	m	(Liz;)Ljava/nio/file/Path;	c	getProviderCachePath
		p	1		dataProvider
	m	(Liz;)Lja$a;	d	lambda$getUpdater$0
		p	1		provider
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	HEADER_MARKER
	f	Ljava/nio/file/Path;	c	rootDir
	f	Ljava/nio/file/Path;	d	cacheDir
	f	Ljava/lang/String;	e	versionId
	f	Ljava/util/Map;	f	existingCaches
	f	Ljava/util/Map;	g	cachesToWrite
	f	Ljava/util/Set;	h	cachePaths
	f	I	i	initialCount
c	ja$a	net/minecraft/data/HashCache$CacheUpdater
	m	(Ljava/lang/String;Lja$b;)V	<init>	<init>
		p	1		versionName
		p	2		cachedData
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z	a	shouldWrite
		p	1		path
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Lja$b;	b	oldCache
	f	Lja$b;	c	newCache
	f	I	d	writes
c	ja$b	net/minecraft/data/HashCache$ProviderCache
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		version
	m	()I	a	count
	m	(Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;	a	get
		p	1		path
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V	a	put
		p	1		path
		p	2		hashCode
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lja$b;	a	load
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V	a	save
		p	1		root
		p	2		dataProviderPath
		p	3		description
	m	(Ljava/util/Map;Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$load$0
		p	2		line
	m	()Ljava/lang/String;	b	version
	m	()Ljava/util/Map;	c	data
	f	Ljava/lang/String;	a	version
	f	Ljava/util/Map;	b	data
c	jb	net/minecraft/data/advancements/AdvancementProvider
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()Ljava/lang/String;	a	getName
	m	(Lix;)V	a	run
		p	1		writer
	m	(Ljava/util/Set;Lix;Laf;)V	a	lambda$run$0
		p	3		advancement
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Liy$a;	d	pathProvider
	f	Ljava/util/List;	e	tabs
c	jc	net/minecraft/data/advancements/AdventureAdvancements
	m	(Laf$a;)Laf$a;	a	addMobsToKill
		p	1		builder
	m	(Laf$a;Ljava/util/List;)Laf$a;	a	addBiomes
		p	0		builder
		p	1		biomes
	m	(Lbau;Lbzw;)Ldg$a;	a	lookAtThroughItem
		p	0		entity
		p	1		item
	m	(Lcj$d;Lbo;)Lcg$a;	a	fireCountAndBystander
		p	0		range
		p	1		entity
	m	(Ljava/util/function/Consumer;)V	a	accept
	f	I	a	DISTANCE_FROM_BOTTOM_TO_TOP
	f	I	b	Y_COORDINATE_AT_TOP
	f	I	c	Y_COORDINATE_AT_BOTTOM
	f	I	d	BEDROCK_THICKNESS
	f	[Lbau;	e	MOBS_TO_KILL
c	jd	net/minecraft/data/advancements/HusbandryAdvancements
	m	(Laf$a;)Laf$a;	a	addLeashedFrogVariants
		p	1		builder
	m	(Laf$a;Lhc$c;)V	a	lambda$addLeashedFrogVariants$0
		p	1		variant
	m	(Laf$a;Ljava/util/Map$Entry;)V	a	lambda$addCatVariants$1
	m	(Ljava/util/function/Consumer;)V	a	accept
	m	(Laf$a;)Laf$a;	b	addFood
		p	1		builder
	m	(Laf$a;)Laf$a;	c	addBreedable
		p	1		builder
	m	(Laf$a;)Laf$a;	d	addFishBuckets
		p	1		builder
	m	(Laf$a;)Laf$a;	e	addFish
		p	1		builder
	m	(Laf$a;)Laf$a;	f	addCatVariants
		p	1		builder
	f	[Lbau;	a	BREEDABLE_ANIMALS
	f	[Lbau;	b	INDIRECTLY_BREEDABLE_ANIMALS
	f	[Lbzw;	c	FISH
	f	[Lbzw;	d	FISH_BUCKETS
	f	[Lbzw;	e	EDIBLE_ITEMS
	f	[Lbzw;	f	WAX_SCRAPING_TOOLS
c	je	net/minecraft/data/advancements/NetherAdvancements
	m	(Ljava/util/function/Consumer;)V	a	accept
	f	Ljava/util/List;	a	EXPLORABLE_BIOMES
	f	Lbo$b;	b	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
c	jf	net/minecraft/data/advancements/StoryAdvancements
	m	(Ljava/util/function/Consumer;)V	a	accept
c	jg	net/minecraft/data/advancements/TheEndAdvancements
	m	(Ljava/util/function/Consumer;)V	a	accept
c	jh	net/minecraft/data/advancements/package-info
c	ji	net/minecraft/data/info/BiomeParametersDumpReport
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()Ljava/lang/String;	a	getName
	m	(Laaj;)Ljava/nio/file/Path;	a	createPath
		p	1		id
	m	(Lhm;Lix;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$run$0
	m	(Lix;)V	a	run
		p	1		writer
	m	(Ljava/nio/file/Path;Lix;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)V	a	dumpValue
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$1
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/nio/file/Path;	d	topPath
c	jj	net/minecraft/data/info/BlockListReport
	m	(Liy;)V	<init>	<init>
		p	1		generator
	m	()Ljava/lang/String;	a	getName
	m	(Lix;)V	a	run
		p	1		writer
	f	Liy;	c	generator
c	jk	net/minecraft/data/info/CommandsReport
	m	(Liy;)V	<init>	<init>
		p	1		generator
	m	()Ljava/lang/String;	a	getName
	m	(Lix;)V	a	run
		p	1		writer
	f	Liy;	c	generator
c	jl	net/minecraft/data/info/RegistryDumpReport
	m	(Liy;)V	<init>	<init>
		p	1		generator
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonObject;Lhc$c;)V	a	lambda$run$0
		p	1		entry
	m	(Lhm;)Lcom/google/gson/JsonElement;	a	dumpRegistry
		p	0		registry
	m	(Lhm;Lcom/google/gson/JsonObject;Lhc$c;)V	a	lambda$dumpRegistry$1
		p	2		entry
	m	(Lix;)V	a	run
		p	1		writer
	f	Liy;	c	generator
c	jm	net/minecraft/data/info/WorldgenRegistryDumpReport
	m	(Liy;)V	<init>	<init>
		p	1		generator
	m	()Ljava/lang/String;	a	getName
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Lhn;Lcom/mojang/serialization/DynamicOps;Lhn$c;)V	a	dumpRegistryCap
	m	(Ljava/nio/file/Path;Lix;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)V	a	dumpValue
		p	0		path
		p	1		cache
		p	2		json
		p	3		encoder
		p	4		value
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$1
	m	(Lix;Lhn;Lcom/mojang/serialization/DynamicOps;Lhn$c;)V	b	lambda$run$0
		p	4		info
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Liy;	d	generator
c	jn	net/minecraft/data/info/package-info
c	jo	net/minecraft/data/loot/BlockLoot
	m	(Lciw;)Ldrj$a;	A	lambda$accept$81
		p	0		block
	m	(Lciw;)Ldrj$a;	B	lambda$accept$80
		p	0		block
	m	(Lciw;)Ldrj$a;	C	lambda$accept$79
		p	0		block
	m	(Lciw;)Ldrj$a;	D	lambda$accept$78
		p	0		block
	m	(Lciw;)Ldrj$a;	E	lambda$accept$77
		p	0		block
	m	(Lciw;)Ldrj$a;	F	lambda$accept$76
		p	0		block
	m	(Lciw;)Ldrj$a;	G	lambda$accept$75
		p	0		block
	m	(Lciw;)Ldrj$a;	H	lambda$accept$74
		p	0		block
	m	(Lciw;)Ldrj$a;	I	lambda$accept$73
		p	0		block
	m	(Lciw;)Ldrj$a;	J	lambda$accept$72
		p	0		block
	m	(Lciw;)Ldrj$a;	K	lambda$accept$71
		p	0		block
	m	(Lciw;)Ldrj$a;	L	lambda$accept$70
		p	0		block
	m	(Lciw;)Ldrj$a;	M	lambda$accept$69
		p	0		block
	m	(Lciw;)Ldrj$a;	N	lambda$accept$68
		p	0		block
	m	(Lciw;)Ldrj$a;	O	lambda$accept$67
		p	0		block
	m	(Lciw;)Ldrj$a;	P	lambda$accept$66
		p	0		block
	m	(Lciw;)Ldrj$a;	Q	lambda$accept$65
		p	0		block
	m	(Lciw;)Ldrj$a;	R	lambda$accept$64
		p	0		block
	m	(Lciw;)Ldrj$a;	S	lambda$accept$63
		p	0		block
	m	(Lciw;)Ldrj$a;	T	lambda$accept$62
		p	0		block
	m	(Lciw;)Ldrj$a;	U	lambda$accept$61
		p	0		block
	m	(Lciw;)Ldrj$a;	V	lambda$accept$60
		p	0		block
	m	(Lciw;)Ldrj$a;	W	lambda$accept$59
		p	0		block
	m	(Lciw;)Ldrj$a;	X	lambda$accept$58
		p	0		block
	m	(Lciw;)Ldrj$a;	Y	lambda$accept$57
		p	0		block
	m	(Lciw;)Ldrj$a;	Z	lambda$accept$56
		p	0		block
	m	()Ldrj$a;	a	noDrop
	m	(Lcfz;)Ldrj$a;	a	createSingleItemTable
		p	0		drop
	m	(Lcfz;Ldso;)Ldso;	a	applyExplosionDecay
		p	0		drop
		p	1		builder
	m	(Lcfz;Ldtt;)Ldtt;	a	applyExplosionCondition
		p	0		drop
		p	1		builder
	m	(Lcfz;Lduv;)Ldrj$a;	a	createSingleItemTable
		p	0		drop
		p	1		count
	m	(Lciw;)Ldrj$a;	a	createDoorTable
		p	0		block
	m	(Lciw;Lbzw;)Ldrj$a;	a	createOreDrop
		p	0		dropWithSilkTouch
		p	1		drop
	m	(Lciw;Lbzw;Lbzw;Ldua$a;)Ldrj$a;	a	createCropDrops
		p	0		crop
		p	1		product
		p	2		seeds
		p	3		condition
	m	(Lciw;Lcfz;)V	a	dropOther
		p	1		block
		p	2		drop
	m	(Lciw;Lcfz;Lduv;)Ldrj$a;	a	createSingleItemTableWithSilkTouch
		p	0		dropWithSilkTouch
		p	1		drop
		p	2		count
	m	(Lciw;Lciw;)V	a	otherWhenSilkTouch
		p	1		block
		p	2		drop
	m	(Lciw;Lciw;[F)Ldrj$a;	a	createLeavesDrops
		p	0		leaves
		p	1		drop
		p	2		chance
	m	(Lciw;Lcvu;Ljava/lang/Comparable;)Ldrj$a;	a	createSinglePropConditionTable
		p	0		drop
		p	1		property
		p	2		value
	m	(Lciw;Ldrj$a;)V	a	add
		p	1		block
		p	2		lootTable
	m	(Lciw;Ldry$a;)Ldrj$a;	a	createSilkTouchDispatchTable
		p	0		drop
		p	1		child
	m	(Lciw;Ldua$a;)Ldrj$a;	a	createMultifaceBlockDrops
		p	0		multifaceGrowthBlock
		p	1		conditionBuilder
	m	(Lciw;Ldua$a;Ldry$a;)Ldrj$a;	a	createSelfDropDispatchTable
		p	0		drop
		p	1		conditionBuilder
		p	2		child
	m	(Lciw;Lgy;)Ldsr$a;	a	lambda$createMultifaceBlockDrops$1
	m	(Lciw;Ljava/lang/Integer;)Ldry$a;	a	lambda$accept$83
	m	(Lciw;Ljava/util/function/Function;)V	a	add
		p	1		block
		p	2		lootTableFunction
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	m	(Lciw;)Ldrj$a;	aA	lambda$accept$28
		p	0		block
	m	(Lciw;)Ldrj$a;	aB	lambda$accept$27
		p	0		block
	m	(Lciw;)Ldrj$a;	aC	lambda$accept$26
		p	0		block
	m	(Lciw;)Ldrj$a;	aD	lambda$accept$25
		p	0		block
	m	(Lciw;)Ldrj$a;	aE	lambda$accept$24
		p	0		block
	m	(Lciw;)Ldrj$a;	aF	lambda$accept$23
		p	0		block
	m	(Lciw;)Ldrj$a;	aG	lambda$accept$22
		p	0		block
	m	(Lciw;)Ldrj$a;	aH	lambda$accept$21
		p	0		block
	m	(Lciw;)Ldrj$a;	aI	lambda$accept$20
		p	0		block
	m	(Lciw;)Ldrj$a;	aJ	lambda$accept$19
		p	0		block
	m	(Lciw;)Ldrj$a;	aK	lambda$accept$18
		p	0		block
	m	(Lciw;)Ldrj$a;	aL	lambda$accept$17
		p	0		block
	m	(Lciw;)Ldrj$a;	aM	lambda$accept$16
		p	0		block
	m	(Lciw;)Ldrj$a;	aN	lambda$accept$15
		p	0		block
	m	(Lciw;)Ldrj$a;	aO	lambda$accept$14
		p	0		block
	m	(Lciw;)Ldrj$a;	aP	lambda$accept$13
		p	0		block
	m	(Lciw;)Ldrj$a;	aQ	lambda$accept$12
		p	0		block
	m	(Lciw;)Ldrj$a;	aR	lambda$accept$11
		p	0		block
	m	(Lciw;)Ldrj$a;	aS	lambda$accept$10
		p	0		block
	m	(Lciw;)Ldrj$a;	aT	lambda$accept$9
		p	0		block
	m	(Lciw;)Ldrj$a;	aU	lambda$accept$8
		p	0		block
	m	(Lciw;)Ldrj$a;	aV	lambda$accept$7
		p	0		block
	m	(Lciw;)Ldrj$a;	aW	lambda$accept$6
		p	0		block
	m	(Lciw;)Ldrj$a;	aX	lambda$accept$5
		p	0		block
	m	(Lciw;)Ldrj$a;	aY	lambda$accept$4
		p	0		block
	m	(Lciw;)Ldrj$a;	aZ	lambda$accept$3
		p	0		block
	m	(Lciw;)Ldrj$a;	aa	lambda$accept$55
		p	0		block
	m	(Lciw;)Ldrj$a;	ab	lambda$accept$54
		p	0		block
	m	(Lciw;)Ldrj$a;	ac	lambda$accept$53
		p	0		block
	m	(Lciw;)Ldrj$a;	ad	lambda$accept$52
		p	0		block
	m	(Lciw;)Ldrj$a;	ae	lambda$accept$51
		p	0		block
	m	(Lciw;)Ldrj$a;	af	lambda$accept$50
		p	0		block
	m	(Lciw;)Ldrj$a;	ag	lambda$accept$49
		p	0		block
	m	(Lciw;)Ldrj$a;	ah	lambda$accept$48
		p	0		block
	m	(Lciw;)Ldrj$a;	ai	lambda$accept$47
		p	0		block
	m	(Lciw;)Ldrj$a;	aj	lambda$accept$46
		p	0		block
	m	(Lciw;)Ldrj$a;	ak	lambda$accept$45
		p	0		block
	m	(Lciw;)Ldrj$a;	al	lambda$accept$44
		p	0		block
	m	(Lciw;)Ldrj$a;	am	lambda$accept$43
		p	0		block
	m	(Lciw;)Ldrj$a;	an	lambda$accept$42
		p	0		block
	m	(Lciw;)Ldrj$a;	ao	lambda$accept$40
		p	0		block
	m	(Lciw;)Ldrj$a;	ap	lambda$accept$39
		p	0		block
	m	(Lciw;)Ldrj$a;	aq	lambda$accept$38
		p	0		block
	m	(Lciw;)Ldrj$a;	ar	lambda$accept$37
		p	0		block
	m	(Lciw;)Ldrj$a;	as	lambda$accept$36
		p	0		block
	m	(Lciw;)Ldrj$a;	at	lambda$accept$35
		p	0		block
	m	(Lciw;)Ldrj$a;	au	lambda$accept$34
		p	0		block
	m	(Lciw;)Ldrj$a;	av	lambda$accept$33
		p	0		block
	m	(Lciw;)Ldrj$a;	aw	lambda$accept$32
		p	0		block
	m	(Lciw;)Ldrj$a;	ax	lambda$accept$31
		p	0		block
	m	(Lciw;)Ldrj$a;	ay	lambda$accept$30
		p	0		block
	m	(Lciw;)Ldrj$a;	az	lambda$accept$29
		p	0		block
	m	(Lcfz;)Ldrj$a;	b	createSilkTouchOnlyTable
		p	0		drop
	m	(Lciw;)V	b	dropPottedContents
		p	1		block
	m	(Lciw;Lbzw;)Ldrj$a;	b	createStemDrops
		p	0		stem
		p	1		drop
	m	(Lciw;Lcfz;)Ldrj$a;	b	createSingleItemTableWithSilkTouch
		p	0		dropWithSilkTouch
		p	1		drop
	m	(Lciw;Lciw;)Ldrj$a;	b	createDoublePlantWithSeedDrops
		p	0		tallGrass
		p	1		grass
	m	(Lciw;Lciw;[F)Ldrj$a;	b	createOakLeavesDrops
		p	0		leaves
		p	1		drop
		p	2		chance
	m	(Lciw;Ldry$a;)Ldrj$a;	b	createShearsDispatchTable
		p	0		drop
		p	1		child
	m	(Lciw;Ljava/lang/Integer;)Ldry$a;	b	lambda$accept$82
	m	(Lcfz;)Ldrj$a;	c	createPotFlowerItemTable
		p	0		plant
	m	(Lciw;)V	c	dropWhenSilkTouch
		p	1		block
	m	(Lciw;Lbzw;)Ldrj$a;	c	createAttachedStemDrops
		p	0		stem
		p	1		drop
	m	(Lciw;Lcfz;)Ldrj$a;	c	createMushroomBlockDrop
		p	0		dropWithSilkTouch
		p	1		drop
	m	(Lciw;Lciw;)V	c	addNetherVinesDropTable
		p	1		block
		p	2		drop
	m	(Lciw;Ldry$a;)Ldrj$a;	c	createSilkTouchOrShearsDispatchTable
		p	0		drop
		p	1		child
	m	(Lciw;Ljava/lang/Integer;)Ldsr$a;	c	lambda$accept$41
	m	(Lcfz;)Ldrj$a;	d	createShearsOnlyDrop
		p	0		drop
	m	(Lciw;)V	d	dropSelf
		p	1		block
	m	(Lciw;Ljava/lang/Integer;)Ldsr$a;	d	lambda$createCandleDrops$2
	m	(Lciw;)Ldrj$a;	e	createSlabItemTable
		p	0		drop
	m	(Lciw;Ljava/lang/Integer;)Ldsr$a;	e	lambda$createStemDrops$0
	m	(Lciw;)Ldrj$a;	f	createNameableBlockEntityTable
		p	0		drop
	m	(Lciw;)Ldrj$a;	g	createShulkerBoxDrop
		p	0		drop
	m	(Lciw;)Ldrj$a;	h	createCopperOreDrops
		p	0		ore
	m	(Lciw;)Ldrj$a;	i	createLapisOreDrops
		p	0		ore
	m	(Lciw;)Ldrj$a;	j	createRedstoneOreDrops
		p	0		ore
	m	(Lciw;)Ldrj$a;	k	createBannerDrop
		p	0		drop
	m	(Lciw;)Ldrj$a;	l	createBeeNestDrop
		p	0		drop
	m	(Lciw;)Ldrj$a;	m	createBeeHiveDrop
		p	0		drop
	m	(Lciw;)Ldrj$a;	n	createCaveVinesDrop
		p	0		drop
	m	(Lciw;)Ldrj$a;	o	createGrassDrops
		p	0		dropWithShears
	m	(Lciw;)Ldrj$a;	p	createMangroveLeavesDrops
		p	0		leaves
	m	(Lciw;)Ldrj$a;	q	createDoublePlantShearsDrop
		p	0		seagrass
	m	(Lciw;)Ldrj$a;	r	createCandleDrops
		p	0		candle
	m	(Lciw;)Ldrj$a;	s	createCandleCakeDrops
		p	0		candle
	m	(Lciw;)Ldrj$a;	t	lambda$dropPottedContents$90
		p	0		flowerPot
	m	(Lciw;)Ldrj$a;	u	lambda$accept$89
		p	0		block
	m	(Lciw;)Ldrj$a;	v	lambda$accept$88
		p	0		block
	m	(Lciw;)Ldrj$a;	w	lambda$accept$87
		p	0		block
	m	(Lciw;)Ldrj$a;	x	lambda$accept$86
		p	0		block
	m	(Lciw;)Ldrj$a;	y	lambda$accept$85
		p	0		block
	m	(Lciw;)Ldrj$a;	z	lambda$accept$84
		p	0		block
	f	Ldua$a;	a	HAS_SILK_TOUCH
	f	Ldua$a;	b	HAS_NO_SILK_TOUCH
	f	Ldua$a;	c	HAS_SHEARS
	f	Ldua$a;	d	HAS_SHEARS_OR_SILK_TOUCH
	f	Ldua$a;	e	HAS_NO_SHEARS_OR_SILK_TOUCH
	f	Ljava/util/Set;	f	EXPLOSION_RESISTANT
	f	[F	g	NORMAL_LEAVES_SAPLING_CHANCES
	f	[F	h	JUNGLE_LEAVES_SAPLING_CHANGES
	f	[F	i	NORMAL_LEAVES_STICK_CHANCES
	f	Ljava/util/Map;	j	map
c	jp	net/minecraft/data/loot/ChestLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	jq	net/minecraft/data/loot/EntityLoot
	m	()Ldua$a;	a	killedByFrog
	m	(Laaj;Ldrj$a;)V	a	add
		p	1		entityId
		p	2		lootTable
	m	(Lbau;Ldrj$a;)V	a	add
		p	1		entityType
		p	2		lootTable
	m	(Lbms;)Ldua$a;	a	killedByFrogVariant
		p	1		variant
	m	(Lcfz;)Ldrj$a;	a	createSheepTable
		p	0		item
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	f	Lbo$a;	a	ENTITY_ON_FIRE
	f	Ljava/util/Set;	b	SPECIAL_LOOT_TABLE_TYPES
	f	Ljava/util/Map;	c	map
c	jr	net/minecraft/data/loot/FishingLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
	f	Ldua$a;	a	IN_JUNGLE
	f	Ldua$a;	b	IN_SPARSE_JUNGLE
	f	Ldua$a;	c	IN_BAMBOO_JUNGLE
c	js	net/minecraft/data/loot/GiftLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	jt	net/minecraft/data/loot/LootTableProvider
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()Ljava/lang/String;	a	getName
	m	(Laaj;)Ldua;	a	lambda$run$2
		p	0		id
	m	(Ldro;Laaj;Ldrj;)V	a	lambda$run$3
		p	1		id
		p	2		table
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Laaj;Ldrj;)V	a	lambda$run$5
		p	2		id
		p	3		table
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$run$4
		p	0		name
		p	1		message
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$run$1
		p	1		generator
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;Laaj;Ldrj$a;)V	a	lambda$run$0
		p	2		id
		p	3		builder
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Liy$a;	d	pathProvider
	f	Ljava/util/List;	e	subProviders
c	ju	net/minecraft/data/loot/PiglinBarterLoot
	m	(Ljava/util/function/BiConsumer;)V	a	accept
c	jv	net/minecraft/data/loot/package-info
c	jw	net/minecraft/data/models/BlockModelGenerators
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		blockStateCollector
		p	2		modelCollector
		p	3		simpleItemModelExemptionCollector
	m	()V	A	createEndPortalFrame
	m	(Lciw;)V	A	createNonTemplateHorizontalBlock
		p	1		block
	m	()V	B	createChorusPlant
	m	(Lciw;)V	B	createMultiface
		p	1		block
	m	()V	C	createComposter
	m	(Lciw;)V	C	createShulkerBox
		p	1		shulkerBox
	m	()V	D	createAmethystClusters
	m	()V	E	createPointedDripstone
	m	()V	F	createDaylightDetector
	m	()V	G	createLightningRod
	m	()V	H	createFarmland
	m	()V	I	createFire
	m	()V	J	createSoulFire
	m	()V	K	createMuddyMangroveRoots
	m	()V	L	createMangrovePropagule
	m	()V	M	createFrostedIce
	m	()V	N	createGrassBlocks
	m	()V	O	createCocoa
	m	()V	P	createDirtPath
	m	()V	Q	createHopper
	m	()V	R	createIronBars
	m	()V	S	createLever
	m	()V	T	createLilyPad
	m	()V	U	createFrogspawnBlock
	m	()V	V	createNetherPortalBlock
	m	()V	W	createNetherrack
	m	()V	X	createObserver
	m	()V	Y	createPistons
	m	()V	Z	createPistonHeads
	m	()V	a	run
	m	(I)Ljava/util/List;	a	createBambooModels
		p	1		age
	m	(ILjava/lang/String;Lkn;)Laaj;	a	createTurtleEggModel
		p	1		eggs
		p	2		prefix
		p	3		textures
	m	(Laaj;)[Lkf;	a	createRotatedVariants
		p	0		modelId
	m	(Laaj;Laaj;Laaj;Laaj;Laaj;Laaj;Ljava/lang/Boolean;Lcvv;)Lkf;	a	lambda$createActiveRail$6
		p	6		on
		p	7		shape
	m	(Laaj;Laaj;Lcvx;)Lkf;	a	lambda$createSculkSensor$29
	m	(Laaj;Laaj;Ljava/lang/Boolean;)Lkf;	a	lambda$createSculkCatalyst$44
	m	(Laaj;Lciw;)Ljw$a;	a	blockEntityModels
		p	1		modelId
		p	2		particleBlock
	m	(Laaj;Ljava/lang/Integer;)Lkf;	a	lambda$createSnowBlocks$31
		p	1		height
	m	(Laaj;Lkn;)V	a	lambda$createGrassBlocks$28
		p	1		textures
	m	(Lbzw;)V	a	createSimpleFlatItemModel
		p	1		item
	m	(Lbzw;Laaj;)V	a	delegateItemModel
		p	1		item
		p	2		parentModelId
	m	(Lcbc;)V	a	lambda$run$48
		p	1		item
	m	(Lciw;)V	a	skipAutoItemBlock
		p	1		block
	m	(Lciw;II)Laaj;	a	lambda$createCropBlock$11
	m	(Lciw;Laaj;)V	a	delegateItemModel
		p	1		block
		p	2		parentModelId
	m	(Lciw;Laaj;Laaj;)Lkc;	a	createRotatedVariant
		p	0		block
		p	1		firstModelId
		p	2		secondModelId
	m	(Lciw;Laaj;Laaj;Laaj;)Ljz;	a	createWall
		p	0		wallBlock
		p	1		postModelId
		p	2		lowSideModelId
		p	3		tallSideModelId
	m	(Lciw;Laaj;Laaj;Laaj;Laaj;)Ljz;	a	createFenceGate
		p	0		fenceGateBlock
		p	1		openModelId
		p	2		closedModelId
		p	3		openWallModelId
		p	4		closedWallModelId
	m	(Lciw;Laaj;Laaj;Laaj;Laaj;Laaj;Laaj;Laaj;Laaj;)Ljz;	a	createDoor
		p	0		doorBlock
		p	1		bottomModelId
		p	2		bottomHingeModelId
	m	(Lciw;Laaj;Lkf;)V	a	createGrassLikeBlock
		p	1		topSoil
		p	2		modelId
		p	3		snowyVariant
	m	(Lciw;Laaj;Lkn;)V	a	createPistonVariant
		p	1		piston
		p	2		extendedModelId
		p	3		textures
	m	(Lciw;Laaj;Lkn;Ljava/util/function/BiConsumer;)Ljz;	a	createMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lciw;Lbzw;)V	a	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Lciw;Lciw;)V	a	createNonTemplateModelBlock
		p	1		block
		p	2		modelReference
	m	(Lciw;Lciw;Lciw;Lciw;Lciw;Lciw;Lciw;Lciw;)V	a	createCoral
		p	1		coral
		p	2		deadCoral
		p	3		coralBlock
		p	4		deadCoralBlock
		p	5		coralFan
		p	6		deadCoralFan
		p	7		coralWallFan
		p	8		deadCoralWallFan
	m	(Lciw;Lciw;Ljava/util/function/BiFunction;)V	a	createCraftingTableLike
		p	1		block
		p	2		otherTextureSource
		p	3		texturesFactory
	m	(Lciw;Lciw;Ljw$d;)V	a	createPlant
		p	1		plantBlock
		p	2		flowerPotBlock
		p	3		tintType
	m	(Lciw;Lcvu;[I)V	a	createCropBlock
		p	1		crop
		p	2		ageProperty
		p	3		ageTextureIndices
	m	(Lciw;Ljava/lang/String;)V	a	createSimpleFlatItemModel
		p	1		block
		p	2		textureSuffix
	m	(Lciw;Ljava/lang/String;Lkl;Ljava/util/function/Function;)Laaj;	a	createSuffixedVariant
		p	1		block
		p	2		suffix
		p	3		model
		p	4		texturesFactory
	m	(Lciw;Ljava/util/function/Function;)V	a	createBeeNest
		p	1		beehive
		p	2		texturesFactory
	m	(Lciw;Ljw$d;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
	m	(Lciw;Ljw$d;Lkn;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
		p	3		texture
	m	(Lciw;Lka$c;)V	a	lambda$createMultiface$43
	m	(Lciw;Lka$c;Lcvi;)V	a	lambda$createMultiface$42
		p	2		property
	m	(Lciw;Lkn;)V	a	createPumpkinVariant
		p	1		block
		p	2		texture
	m	(Lciw;Lkn;Ljava/lang/Integer;)Lkf;	a	lambda$createStems$5
	m	(Lciw;Lkn;Lkl;)V	a	createTrivialBlock
		p	1		block
		p	2		textures
		p	3		model
	m	(Lciw;Lkp$a;)V	a	createAxisAlignedPillarBlock
		p	1		block
		p	2		modelFactory
	m	(Lciw;Lkp$a;Lkp$a;)V	a	createRotatedPillarWithHorizontalVariant
		p	1		block
		p	2		verticalModelFactory
		p	3		horizontalModelFactory
	m	(Lcvi;Laaj;Laaj;)Lkd;	a	createBooleanModelDispatch
		p	0		property
		p	1		trueModel
		p	2		falseModel
	m	(Lcvu;Ljava/lang/Comparable;Laaj;Laaj;)Lkd;	a	createEmptyOrFullDispatch
		p	0		property
		p	1		fence
		p	2		higherOrEqualModelId
		p	3		lowerModelId
	m	(Lcwa;)Lkf;	a	lambda$createStructureBlock$32
		p	1		mode
	m	(Lgy;Lcvo;)Lkf;	a	createPointedDripstoneVariant
		p	1		direction
		p	2		thickness
	m	(Lha;)Lkf;	a	lambda$createJigsaw$46
	m	(Lha;Lkf;)Lkf;	a	applyRotation
		p	1		orientation
		p	2		variant
	m	(Liv;)V	a	lambda$run$47
		p	1		family
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)Lkf;	a	lambda$createTripwireHook$34
	m	(Ljava/lang/Comparable;Lkf;Lkf;Ljava/lang/Comparable;)Lkf;	a	lambda$createEmptyOrFullDispatch$10
	m	(Ljava/lang/Integer;)Lkf;	a	lambda$createSweetBerryBush$33
		p	1		stage
	m	(Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lkf;	a	lambda$createRepeater$30
		p	0		tick
		p	1		locked
		p	2		on
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Laaj;	a	createTurtleEggModel
		p	1		eggs
		p	2		hatch
	m	(Ljava/lang/String;I)Lkf;	a	lambda$createBambooModels$8
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List;	a	wrapModels
		p	0		modelIds
		p	1		processor
	m	(Lkd$d;Lcvn;Laaj;Laaj;Laaj;Laaj;)Lkd$d;	a	configureDoorHalf
		p	0		variantMap
		p	1		targetHalf
	m	(Lkf;)Lkf;	a	lambda$createSoulFire$26
	m	(Lkn;)V	a	lambda$new$4
		p	0		textures
	m	(Lkn;Laaj;)Lkn;	a	lambda$createChorusFlower$14
		p	1		id
	m	(Lkp$a;[Lciw;)V	a	createColoredBlockWithRandomRotations
		p	1		modelFactory
		p	2		blocks
	m	([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lciw;Ljava/lang/Integer;)Lkf;	a	lambda$createCropBlock$12
	m	([Laaj;Ljava/lang/Integer;)Lkf;	a	lambda$createRespawnAnchor$45
	m	([Lciw;)V	a	createCampfires
		p	1		blocks
	m	()V	aa	createSculkSensor
	m	()V	ab	createSculkShrieker
	m	()V	ac	createScaffolding
	m	()V	ad	createCaveVines
	m	()V	ae	createRedstoneLamp
	m	()V	af	createRedstoneTorch
	m	()V	ag	createRepeater
	m	()V	ah	createSeaPickle
	m	()V	ai	createSnowBlocks
	m	()V	aj	createStonecutter
	m	()V	ak	createStructureBlock
	m	()V	al	createSweetBerryBush
	m	()V	am	createTripwire
	m	()V	an	createTripwireHook
	m	()V	ao	createTurtleEgg
	m	()V	ap	createSculkCatalyst
	m	()V	aq	createMagmaBlock
	m	()V	ar	createInfestedStone
	m	()V	as	createInfestedDeepslate
	m	()V	at	createRespawnAnchor
	m	()V	au	createJigsaw
	m	()V	av	createPetrifiedOakSlab
	m	()V	aw	createLightBlock
	m	()Lkd;	b	createHorizontalFacingDispatch
	m	(Laaj;)Lkf;	b	lambda$static$41
	m	(Laaj;Lkn;)V	b	lambda$createGrassBlocks$27
		p	1		textures
	m	(Lciw;)V	b	createSimpleFlatItemModel
		p	1		block
	m	(Lciw;Laaj;)Lkc;	b	createRotatedVariant
		p	0		block
		p	1		modelId
	m	(Lciw;Laaj;Laaj;)Ljz;	b	createButton
		p	0		buttonBlock
		p	1		regularModelId
		p	2		pressedModelId
	m	(Lciw;Laaj;Laaj;Laaj;)Ljz;	b	createStairs
		p	0		stairsBlock
		p	1		innerModelId
		p	2		regularModelId
		p	3		outerModelId
	m	(Lciw;Laaj;Lkn;Ljava/util/function/BiConsumer;)Ljz;	b	createNorthWestMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lciw;Lciw;)V	b	createCoralFans
		p	1		coralFanBlock
		p	2		coralWallFanBlock
	m	(Lciw;Lciw;Ljw$d;)V	b	createGrowingPlant
		p	1		plant
		p	2		plantStem
		p	3		tintType
	m	(Lciw;Ljw$d;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
	m	(Lciw;Ljw$d;Lkn;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
		p	3		crossTexture
	m	(Lciw;Lkp$a;)V	b	createHorizontallyRotatedBlock
		p	1		block
		p	2		modelFactory
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;	b	lambda$createTurtleEgg$35
	m	(Lkf;)Lkf;	b	lambda$createSoulFire$25
	m	(Lkn;)V	b	lambda$new$3
		p	0		textures
	m	(Lkn;Laaj;)Lkn;	b	lambda$createCommandBlock$7
		p	1		id
	m	(Lkp$a;[Lciw;)V	b	createColoredBlockWithStateRotations
		p	1		modelFactory
		p	2		blocks
	m	()Lkd;	c	createHorizontalFacingDispatchAlt
	m	(Laaj;)Lkf;	c	lambda$static$40
	m	(Laaj;Lkn;)V	c	lambda$createFurnace$13
		p	1		textures
	m	(Lciw;)V	c	createRotatedMirroredVariantBlock
		p	1		block
	m	(Lciw;Laaj;)Lkc;	c	createSimpleBlock
		p	0		block
		p	1		modelId
	m	(Lciw;Laaj;Laaj;)Ljz;	c	createFence
		p	0		fenceBlock
		p	1		postModelId
		p	2		sideModelId
	m	(Lciw;Laaj;Laaj;Laaj;)Ljz;	c	createOrientableTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Lciw;Laaj;Lkn;Ljava/util/function/BiConsumer;)Ljz;	c	createMirroredColumnGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lciw;Lciw;)V	c	createStems
		p	1		stemBlock
		p	2		attachedStemBlock
	m	(Lciw;Ljw$d;)V	c	createDoublePlant
		p	1		doubleBlock
		p	2		tintType
	m	(Lciw;Lkp$a;)V	c	createTrivialBlock
		p	1		block
		p	2		modelFactory
	m	(Lkf;)Lkf;	c	lambda$createSoulFire$24
	m	(Lkn;)V	c	lambda$new$2
	m	()Lkd;	d	createTorchHorizontalDispatch
	m	(Laaj;)Lkf;	d	lambda$static$39
	m	(Laaj;Lkn;)V	d	lambda$createBarrel$9
	m	(Lciw;)V	d	createRotatedVariantBlock
		p	1		block
	m	(Lciw;Laaj;)Ljz;	d	createAxisAlignedPillarBlock
		p	0		block
		p	1		modelId
	m	(Lciw;Laaj;Laaj;)Ljz;	d	createRotatedPillarWithHorizontalVariant
		p	0		block
		p	1		verticalModelId
		p	2		horizontalModelId
	m	(Lciw;Laaj;Laaj;Laaj;)Ljz;	d	createTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Lciw;Lciw;)Ljw$a;	d	blockEntityModels
		p	1		block
		p	2		particleBlock
	m	(Lciw;Lkp$a;)V	d	createFurnace
		p	1		cooker
		p	2		modelFactory
	m	(Lkf;)Lkf;	d	lambda$createSoulFire$23
	m	(Lkn;)V	d	lambda$new$1
	m	()Lkd;	e	createFacingDispatch
	m	(Laaj;)Lkf;	e	lambda$static$38
	m	(Lciw;)V	e	createTrivialCube
		p	1		block
	m	(Lciw;Laaj;)V	e	createAxisAlignedPillarBlockCustomModel
		p	1		block
		p	2		modelId
	m	(Lciw;Laaj;Laaj;)Ljz;	e	createPressurePlate
		p	0		pressurePlateBlock
		p	1		upModelId
		p	2		downModelId
	m	(Lciw;Laaj;Laaj;Laaj;)Ljz;	e	createSlab
		p	0		slabBlock
		p	1		bottomModelId
		p	2		topModelId
		p	3		fullModelId
	m	(Lciw;Lciw;)V	e	createFullAndCarpetBlocks
		p	1		wool
		p	2		carpet
	m	(Lkf;)Lkf;	e	lambda$createSoulFire$22
	m	(Lkn;)V	e	lambda$new$0
	m	()Lkd;	f	createRotatedPillar
	m	(Laaj;)Lkf;	f	lambda$static$37
	m	(Lciw;)Ljw$b;	f	family
		p	1		block
	m	(Lciw;Laaj;)V	f	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Lciw;Laaj;Laaj;)V	f	createDoubleBlock
		p	1		block
		p	2		upperHalfModelId
		p	3		lowerHalfModelId
	m	(Lciw;Lciw;)V	f	createGlassBlocks
		p	1		glass
		p	2		glassPane
	m	(Lkf;)Lkf;	f	lambda$createFire$21
	m	()V	g	createBigDripLeafBlock
	m	(Laaj;)Lkf;	g	lambda$static$36
	m	(Lciw;)V	g	createDoor
		p	1		doorBlock
	m	(Lciw;Lciw;)V	g	createWeightedPressurePlate
		p	1		pressurePlate
		p	2		textureSource
	m	(Lkf;)Lkf;	g	lambda$createFire$20
	m	()V	h	createSunflower
	m	(Laaj;)Lkf;	h	lambda$wrapModels$15
		p	0		modelId
	m	(Lciw;)V	h	createOrientableTrapdoor
		p	1		trapdoorBlock
	m	(Lciw;Lciw;)V	h	copyModel
		p	1		modelSource
		p	2		child
	m	(Lkf;)Lkf;	h	lambda$createFire$19
	m	()V	i	createTallSeagrass
	m	(Lciw;)V	i	createTrapdoor
		p	1		trapdoorBlock
	m	(Lciw;Lciw;)V	i	createNormalTorch
		p	1		torch
		p	2		wallTorch
	m	(Lkf;)Lkf;	i	lambda$createFire$18
	m	()V	j	createSmallDripleaf
	m	(Lciw;)Ljw$e;	j	woodProvider
		p	1		logBlock
	m	(Lciw;Lciw;)V	j	createBedItem
		p	1		bed
		p	2		particleSource
	m	(Lkf;)Lkf;	j	lambda$createFire$17
	m	()V	k	createBamboo
	m	(Lciw;)V	k	createNonTemplateModelBlock
		p	1		block
	m	(Lciw;Lciw;)V	k	createNetherRoots
		p	1		root
		p	2		pottedRoot
	m	(Lkf;)Lkf;	k	lambda$createFire$16
	m	()Lkd;	l	createColumnWithFacing
	m	(Lciw;)V	l	createPassiveRail
		p	1		rail
	m	(Lciw;Lciw;)V	l	createCandleAndCandleCake
		p	1		candle
		p	2		cake
	m	()V	m	createBarrel
	m	(Lciw;)V	m	createActiveRail
		p	1		rail
	m	()V	n	createBell
	m	(Lciw;)V	n	createCommandBlock
		p	1		commandBlock
	m	()V	o	createGrindstone
	m	(Lciw;)V	o	createAnvil
		p	1		anvil
	m	()V	p	createBookshelf
	m	(Lciw;)V	p	createAzalea
		p	1		block
	m	()V	q	createRedstoneWire
	m	(Lciw;)V	q	createPottedAzalea
		p	1		block
	m	()V	r	createComparator
	m	(Lciw;)V	r	createMushroomBlock
		p	1		mushroomBlock
	m	()V	s	createSmoothStoneSlab
	m	(Lciw;)V	s	createDispenserBlock
		p	1		block
	m	()V	t	createBrewingStand
	m	(Lciw;)V	t	createAmethystCluster
		p	1		block
	m	()V	u	createCakeBlock
	m	(Lciw;)V	u	createNyliumBlock
		p	1		block
	m	()V	v	createCartographyTable
	m	(Lciw;)V	v	createRotatableColumn
		p	1		block
	m	()V	w	createSmithingTable
	m	(Lciw;)Ljava/util/List;	w	createFloorFireModels
		p	1		texture
	m	()V	x	createPumpkins
	m	(Lciw;)Ljava/util/List;	x	createSideFireModels
		p	1		texture
	m	()V	y	createCauldrons
	m	(Lciw;)Ljava/util/List;	y	createTopFireModels
		p	1		texture
	m	()V	z	createChorusFlower
	m	(Lciw;)V	z	createLantern
		p	1		lantern
	f	Ljava/util/List;	a	MULTIFACE_GENERATOR
	f	Ljava/util/function/Consumer;	b	blockStateOutput
	f	Ljava/util/function/BiConsumer;	c	modelOutput
	f	Ljava/util/function/Consumer;	d	skippedAutoModelsOutput
	f	Ljava/util/List;	e	nonOrientableTrapdoor
	f	Ljava/util/Map;	f	fullBlockModelCustomGenerators
	f	Ljava/util/Map;	g	texturedModels
	f	Ljava/util/Map;	h	SHAPE_CONSUMERS
c	jw$1	net/minecraft/data/models/BlockModelGenerators$1
	f	[I	a	$SwitchMap$net$minecraft$core$FrontAndTop
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	jw$a	net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	m	(Ljw;Laaj;Lciw;)V	<init>	<init>
		p	2		modelId
		p	3		block
	m	(Lkl;[Lciw;)Ljw$a;	a	createWithCustomBlockItemModel
		p	1		model
		p	2		blocks
	m	([Lciw;)Ljw$a;	a	create
		p	1		blocks
	m	([Lciw;)Ljw$a;	b	createWithoutBlockItem
		p	1		blocks
	f	Ljw;	a	this$0
	f	Laaj;	b	baseModel
c	jw$b	net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	m	(Ljw;Lkn;)V	<init>	<init>
		p	2		textures
	m	(Lciw;)Ljw$b;	a	button
		p	1		buttonBlock
	m	(Lciw;Lkl;)Ljw$b;	a	fullBlock
		p	1		block
		p	2		model
	m	(Liv$b;Lciw;)V	a	lambda$generateFor$1
		p	1		variant
		p	2		block
	m	(Liv;)Ljw$b;	a	generateFor
		p	1		family
	m	(Lkl;Lciw;)Laaj;	a	getOrCreateModel
		p	1		model
		p	2		block
	m	([Lciw;)Ljw$b;	a	fullBlockCopies
		p	1		blocks
	m	(Lciw;)Ljw$b;	b	wall
		p	1		wallBlock
	m	(Lciw;Lkl;)Laaj;	b	lambda$getOrCreateModel$0
		p	2		newModel
	m	(Lciw;)Ljw$b;	c	fence
		p	1		fenceBlock
	m	(Lciw;)Ljw$b;	d	fenceGate
		p	1		fenceGateBlock
	m	(Lciw;)Ljw$b;	e	pressurePlate
		p	1		pressurePlateBlock
	m	(Lciw;)Ljw$b;	f	sign
		p	1		signBlock
	m	(Lciw;)Ljw$b;	g	slab
		p	1		block
	m	(Lciw;)Ljw$b;	h	stairs
		p	1		block
	m	(Lciw;)Ljw$b;	i	fullBlockVariant
		p	1		block
	m	(Lciw;)Ljw$b;	j	door
		p	1		block
	m	(Lciw;)V	k	trapdoor
		p	1		block
	f	Ljw;	a	this$0
	f	Lkn;	b	mapping
	f	Ljava/util/Map;	c	models
	f	Liv;	d	family
	f	Laaj;	e	fullBlock
c	jw$c	net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier
	m	(Lciw;Laaj;Lkn;Ljava/util/function/BiConsumer;)Ljz;	create	create
		p	1		block
		p	2		modelId
		p	3		textures
		p	4		modelCollector
c	jw$d	net/minecraft/data/models/BlockModelGenerators$TintState
	m	()Lkl;	a	getCross
	m	()Lkl;	b	getCrossPot
	m	()[Ljw$d;	c	$values
	f	Ljw$d;	a	TINTED
	f	Ljw$d;	b	NOT_TINTED
	f	[Ljw$d;	c	$VALUES
c	jw$e	net/minecraft/data/models/BlockModelGenerators$WoodProvider
	m	(Ljw;Lkn;)V	<init>	<init>
		p	2		textures
	m	(Lciw;)Ljw$e;	a	wood
		p	1		woodBlock
	m	(Lciw;)Ljw$e;	b	log
		p	1		stemBlock
	m	(Lciw;)Ljw$e;	c	logWithHorizontal
		p	1		logBlock
	f	Ljw;	a	this$0
	f	Lkn;	b	logMapping
c	jx	net/minecraft/data/models/ItemModelGenerators
	m	(Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1		writer
	m	()V	a	run
	m	(Lbzw;)V	a	generateCompassItem
		p	1		compass
	m	(Lbzw;Lbzw;Lkl;)V	a	generateFlatItem
		p	1		item
		p	2		texture
		p	3		model
	m	(Lbzw;Ljava/lang/String;Lkl;)V	a	generateFlatItem
		p	1		item
		p	2		suffix
		p	3		model
	m	(Lbzw;Lkl;)V	a	generateFlatItem
		p	1		item
		p	2		model
	m	(Lbzw;)V	b	generateClockItem
		p	1		clock
	f	Ljava/util/function/BiConsumer;	a	output
c	jy	net/minecraft/data/models/ModelProvider
	m	(Liy;)V	<init>	<init>
		p	1		generator
	m	()Ljava/lang/String;	a	getName
	m	(Lciw;)Ljava/nio/file/Path;	a	lambda$run$4
		p	1		block
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Ljava/util/Map;Ljava/util/function/Function;)V	a	saveCollection
		p	1		cache
	m	(Ljava/util/Map;Laaj;Ljava/util/function/Supplier;)V	a	lambda$run$1
	m	(Ljava/util/Map;Lciw;)Z	a	lambda$run$2
		p	1		block
	m	(Ljava/util/Map;Ljz;)V	a	lambda$run$0
	m	(Ljava/util/Set;Ljava/util/Map;Lciw;)V	a	lambda$run$3
		p	2		block
	m	(Ljava/util/function/Function;Lix;Ljava/lang/Object;Ljava/util/function/Supplier;)V	a	lambda$saveCollection$5
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Liy$a;	d	blockStatePathProvider
	f	Liy$a;	e	modelPathProvider
c	jz	net/minecraft/data/models/blockstates/BlockStateGenerator
	m	()Lciw;	a	getBlock
c	ka	net/minecraft/data/models/blockstates/Condition
	m	()Lka$c;	a	condition
	m	(Lcus;)V	a	validate
		p	1		stateManager
	m	([Lka;)Lka;	a	and
		p	0		conditions
	m	([Lka;)Lka;	b	or
		p	0		conditions
c	ka$a	net/minecraft/data/models/blockstates/Condition$CompositeCondition
	m	(Lka$b;Ljava/util/List;)V	<init>	<init>
		p	1		operator
		p	2		components
	m	(Lcus;)V	a	validate
		p	1		stateManager
	m	(Lcus;Lka;)V	a	lambda$validate$0
		p	1		component
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Lka$b;	a	operation
	f	Ljava/util/List;	b	subconditions
c	ka$b	net/minecraft/data/models/blockstates/Condition$Operation
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lka$b;	a	$values
	f	Lka$b;	a	AND
	f	Lka$b;	b	OR
	f	Ljava/lang/String;	c	id
	f	[Lka$b;	d	$VALUES
c	ka$c	net/minecraft/data/models/blockstates/Condition$TerminalCondition
	m	(Lcom/google/gson/JsonObject;Lcvu;Ljava/lang/String;)V	a	lambda$get$0
		p	1		property
		p	2		value
	m	(Lcus;)V	a	validate
		p	1		stateManager
	m	(Lcus;Lcvu;)Z	a	lambda$validate$1
		p	1		property
	m	(Lcvu;Ljava/lang/Comparable;)Lka$c;	a	term
		p	1		property
		p	2		value
	m	(Lcvu;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lka$c;	a	term
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Lcvu;Ljava/lang/String;)V	a	putValue
		p	1		property
		p	2		value
	m	(Lcvu;Ljava/util/stream/Stream;)Ljava/lang/String;	a	joinValues
		p	0		property
		p	1		valueStream
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Lcvu;Ljava/lang/Comparable;)Lka$c;	b	negatedTerm
		p	1		property
		p	2		value
	m	(Lcvu;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lka$c;	b	negatedTerm
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Lcvu;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String;	c	getTerm
		p	0		property
		p	1		value
		p	2		otherValues
	f	Ljava/util/Map;	a	terms
c	kb	net/minecraft/data/models/blockstates/MultiPartGenerator
	m	(Lciw;)V	<init>	<init>
		p	1		block
	m	()Lciw;	a	getBlock
	m	(Lciw;)Lkb;	a	multiPart
		p	0		block
	m	(Lcus;Lkb$b;)V	a	lambda$get$0
	m	(Ljava/util/List;)Lkb;	a	with
		p	1		variants
	m	(Lka;Ljava/util/List;)Lkb;	a	with
		p	1		condition
		p	2		variants
	m	(Lka;Lkf;)Lkb;	a	with
		p	1		condition
		p	2		variant
	m	(Lka;[Lkf;)Lkb;	a	with
		p	1		condition
		p	2		variants
	m	(Lkf;)Lkb;	a	with
		p	1		variant
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Lciw;	a	block
	f	Ljava/util/List;	b	parts
c	kb$a	net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	m	(Lka;Ljava/util/List;)V	<init>	<init>
		p	1		when
		p	2		variants
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Lcus;)V	a	validate
		p	1		stateManager
	f	Lka;	a	condition
c	kb$b	net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		variants
	m	()Lcom/google/gson/JsonElement;	a	get
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Lcus;)V	a	validate
		p	1		stateManager
	f	Ljava/util/List;	a	variants
c	kc	net/minecraft/data/models/blockstates/MultiVariantGenerator
	m	(Lciw;Ljava/util/List;)V	<init>	<init>
		p	1		block
		p	2		variants
	m	()Lciw;	a	getBlock
	m	(Lciw;)Lkc;	a	multiVariant
		p	0		block
	m	(Lciw;Lkf;)Lkc;	a	multiVariant
		p	0		block
		p	1		variant
	m	(Lciw;[Lkf;)Lkc;	a	multiVariant
		p	0		block
		p	1		variants
	m	(Lcom/google/common/collect/ImmutableList$Builder;Lkf;Lkf;)V	a	lambda$mergeVariants$5
	m	(Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$get$1
	m	(Lcvu;)V	a	lambda$with$0
		p	1		property
	m	(Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Lkf;)V	a	lambda$mergeVariants$6
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	mergeVariants
		p	0		left
		p	1		right
	m	(Ljava/util/Map;Lcom/google/gson/JsonObject;)V	a	lambda$get$4
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$get$3
	m	(Lkd;)Lkc;	a	with
		p	1		map
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	b	lambda$get$2
	f	Lciw;	a	block
	f	Ljava/util/List;	b	baseVariants
	f	Ljava/util/Set;	c	seenProperties
	f	Ljava/util/List;	d	declaredPropertySets
c	kd	net/minecraft/data/models/blockstates/PropertyDispatch
	m	()Ljava/util/Map;	a	getEntries
	m	(Lcvu;)Lkd$a;	a	property
		p	0		property
	m	(Lcvu;Lcvu;)Lkd$b;	a	properties
		p	0		first
		p	1		second
	m	(Lcvu;Lcvu;Lcvu;)Lkd$c;	a	properties
		p	0		first
		p	1		second
		p	2		third
	m	(Lcvu;Lcvu;Lcvu;Lcvu;)Lkd$d;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
	m	(Lcvu;Lcvu;Lcvu;Lcvu;Lcvu;)Lkd$e;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
		p	4		fifth
	m	(Lcvu;Lke;)Ljava/util/stream/Stream;	a	lambda$verifyComplete$0
	m	(Lke;)Z	a	lambda$verifyComplete$1
	m	(Lke;Ljava/util/List;)V	a	putValue
		p	1		condition
		p	2		possibleVariants
	m	()Ljava/util/List;	b	getDefinedProperties
	m	()V	c	verifyComplete
	f	Ljava/util/Map;	a	values
c	kd$a	net/minecraft/data/models/blockstates/PropertyDispatch$C1
	m	(Lcvu;)V	<init>	<init>
		p	1		property
	m	(Ljava/lang/Comparable;Ljava/util/List;)Lkd$a;	a	select
		p	1		value
		p	2		variants
	m	(Ljava/lang/Comparable;Lkf;)Lkd$a;	a	select
		p	1		value
		p	2		variant
	m	(Ljava/util/function/Function;)Lkd;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	a	lambda$generateList$1
		p	2		value
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/util/function/Function;)Lkd;	b	generateList
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	2		value
	f	Lcvu;	a	property1
c	kd$b	net/minecraft/data/models/blockstates/PropertyDispatch$C2
	m	(Lcvu;Lcvu;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkd$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkf;)Lkd$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variant
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$2
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Lkd;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Lkd;	b	generateList
		p	1		variantsFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	2		firstValue
	f	Lcvu;	a	property1
	f	Lcvu;	b	property2
c	kd$c	net/minecraft/data/models/blockstates/PropertyDispatch$C3
	m	(Lcvu;Lcvu;Lcvu;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkd$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkf;)Lkd$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$h;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkd$h;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	3		secondValue
	m	(Lkd$h;)Lkd;	a	generate
		p	1		variantFactory
	m	(Lkd$h;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$h;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkd$h;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	3		secondValue
	m	(Lkd$h;)Lkd;	b	generateList
		p	1		variantFactory
	m	(Lkd$h;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	2		firstValue
	f	Lcvu;	a	property1
	f	Lcvu;	b	property2
	f	Lcvu;	c	property3
c	kd$d	net/minecraft/data/models/blockstates/PropertyDispatch$C4
	m	(Lcvu;Lcvu;Lcvu;Lcvu;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkd$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkf;)Lkd$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$g;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$g;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkd$g;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	3		secondValue
	m	(Lkd$g;)Lkd;	a	generate
		p	1		variantFactory
	m	(Lkd$g;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$g;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$g;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkd$g;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	3		secondValue
	m	(Lkd$g;)Lkd;	b	generateList
		p	1		variantFactory
	m	(Lkd$g;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	2		firstValue
	f	Lcvu;	a	property1
	f	Lcvu;	b	property2
	f	Lcvu;	c	property3
	f	Lcvu;	d	property4
c	kd$e	net/minecraft/data/models/blockstates/PropertyDispatch$C5
	m	(Lcvu;Lcvu;Lcvu;Lcvu;Lcvu;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
		p	5		fifth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkd$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkf;)Lkd$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	a	lambda$generateList$8
		p	3		secondValue
	m	(Lkd$f;)Lkd;	a	generate
		p	1		variantFactory
	m	(Lkd$f;Ljava/lang/Comparable;)V	a	lambda$generateList$9
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkd$f;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	3		secondValue
	m	(Lkd$f;)Lkd;	b	generateList
		p	1		variantFactory
	m	(Lkd$f;Ljava/lang/Comparable;)V	b	lambda$generate$4
		p	2		firstValue
	f	Lcvu;	a	property1
	f	Lcvu;	b	property2
	f	Lcvu;	c	property3
	f	Lcvu;	d	property4
	f	Lcvu;	e	property5
c	kd$f	net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
		p	5		five
c	kd$g	net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
c	kd$h	net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
c	ke	net/minecraft/data/models/blockstates/Selector
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		values
	m	()Lke;	a	empty
	m	(Lcvu$a;)Lke;	a	extend
		p	1		value
	m	(Lke;)Lke;	a	extend
		p	1		propertiesMap
	m	([Lcvu$a;)Lke;	a	of
		p	0		values
	m	()Ljava/lang/String;	b	getKey
	m	(Lcvu$a;)Ljava/lang/String;	b	lambda$static$0
	f	Lke;	a	EMPTY
	f	Ljava/util/Comparator;	b	COMPARE_BY_NAME
	f	Ljava/util/List;	c	values
c	kf	net/minecraft/data/models/blockstates/Variant
	m	()Lkf;	a	variant
	m	(Lcom/google/gson/JsonArray;Lkf;)V	a	lambda$convertList$1
	m	(Lcom/google/gson/JsonObject;Lkh$a;)V	a	lambda$get$0
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	convertList
		p	0		variants
	m	(Lkf;Lkf;)Lkf;	a	merge
		p	0		first
		p	1		second
	m	(Lkh;Ljava/lang/Object;)Lkf;	a	with
		p	1		key
		p	2		value
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Ljava/util/Map;	a	values
c	kg	net/minecraft/data/models/blockstates/VariantProperties
	m	(Laaj;)Lcom/google/gson/JsonElement;	a	lambda$static$2
		p	0		id
	m	(Lkg$a;)Lcom/google/gson/JsonElement;	a	lambda$static$1
		p	0		rotation
	m	(Lkg$a;)Lcom/google/gson/JsonElement;	b	lambda$static$0
		p	0		rotation
	f	Lkh;	a	X_ROT
	f	Lkh;	b	Y_ROT
	f	Lkh;	c	MODEL
	f	Lkh;	d	UV_LOCK
	f	Lkh;	e	WEIGHT
c	kg$a	net/minecraft/data/models/blockstates/VariantProperties$Rotation
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		degrees
	m	()[Lkg$a;	a	$values
	f	Lkg$a;	a	R0
	f	Lkg$a;	b	R90
	f	Lkg$a;	c	R180
	f	Lkg$a;	d	R270
	f	I	e	value
	f	[Lkg$a;	f	$VALUES
c	kh	net/minecraft/data/models/blockstates/VariantProperty
	m	(Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		key
		p	2		writer
	m	(Ljava/lang/Object;)Lkh$a;	a	withValue
		p	1		value
	f	Ljava/lang/String;	a	key
	f	Ljava/util/function/Function;	b	serializer
c	kh$a	net/minecraft/data/models/blockstates/VariantProperty$Value
	m	(Lkh;Ljava/lang/Object;)V	<init>	<init>
		p	2		value
	m	()Lkh;	a	getKey
	m	(Lcom/google/gson/JsonObject;)V	a	addToVariant
		p	1		json
	f	Lkh;	a	this$0
	f	Ljava/lang/Object;	b	value
c	ki	net/minecraft/data/models/blockstates/package-info
c	kj	net/minecraft/data/models/model/DelegatedModel
	m	(Laaj;)V	<init>	<init>
		p	1		parent
	m	()Lcom/google/gson/JsonElement;	a	get
	f	Laaj;	a	parent
c	kk	net/minecraft/data/models/model/ModelLocationUtils
	m	(Lbzw;)Laaj;	a	getModelLocation
		p	0		item
	m	(Lbzw;Ljava/lang/String;)Laaj;	a	getModelLocation
		p	0		item
		p	1		suffix
	m	(Lciw;)Laaj;	a	getModelLocation
		p	0		block
	m	(Lciw;Ljava/lang/String;)Laaj;	a	getModelLocation
		p	0		block
		p	1		suffix
	m	(Ljava/lang/String;)Laaj;	a	decorateBlockModelLocation
		p	0		name
	m	(Ljava/lang/String;)Laaj;	b	decorateItemModelLocation
		p	0		name
c	kl	net/minecraft/data/models/model/ModelTemplate
	m	(Ljava/util/Optional;Ljava/util/Optional;[Lko;)V	<init>	<init>
		p	1		parent
		p	2		variant
		p	3		requiredTextureKeys
	m	(Laaj;Lkn;Ljava/util/function/BiConsumer;)Laaj;	a	create
		p	1		id
		p	2		textures
		p	3		modelCollector
	m	(Lciw;Ljava/lang/String;Lkn;Ljava/util/function/BiConsumer;)Laaj;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	m	(Lciw;Lkn;Ljava/util/function/BiConsumer;)Laaj;	a	create
		p	1		block
		p	2		textures
		p	3		modelCollector
	m	(Lcom/google/gson/JsonObject;Laaj;)V	a	lambda$create$0
		p	1		parentId
	m	(Lcom/google/gson/JsonObject;Lko;Laaj;)V	a	lambda$create$1
		p	1		textureKey
		p	2		textureId
	m	(Ljava/util/Map;)Lcom/google/gson/JsonElement;	a	lambda$create$2
	m	(Lkn;)Ljava/util/Map;	a	createMap
		p	1		textures
	m	(Lciw;Ljava/lang/String;Lkn;Ljava/util/function/BiConsumer;)Laaj;	b	createWithOverride
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	f	Ljava/util/Optional;	a	model
	f	Ljava/util/Set;	b	requiredSlots
	f	Ljava/util/Optional;	c	suffix
c	km	net/minecraft/data/models/model/ModelTemplates
	m	(I)[Lkl;	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/lang/String;[Lko;)Lkl;	a	create
		p	0		parent
		p	1		variant
		p	2		requiredTextureKeys
	m	(Ljava/lang/String;[Lko;)Lkl;	a	create
		p	0		parent
		p	1		requiredTextureKeys
	m	([Lko;)Lkl;	a	create
		p	0		requiredTextureKeys
	m	(I)Lkl;	b	lambda$static$0
		p	0		stage
	m	(Ljava/lang/String;[Lko;)Lkl;	b	createItem
		p	0		parent
		p	1		requiredTextureKeys
	f	Lkl;	A	FENCE_INVENTORY
	f	Lkl;	B	WALL_POST
	f	Lkl;	C	WALL_LOW_SIDE
	f	Lkl;	D	WALL_TALL_SIDE
	f	Lkl;	E	WALL_INVENTORY
	f	Lkl;	F	FENCE_GATE_CLOSED
	f	Lkl;	G	FENCE_GATE_OPEN
	f	Lkl;	H	FENCE_GATE_WALL_CLOSED
	f	Lkl;	I	FENCE_GATE_WALL_OPEN
	f	Lkl;	J	PRESSURE_PLATE_UP
	f	Lkl;	K	PRESSURE_PLATE_DOWN
	f	Lkl;	L	PARTICLE_ONLY
	f	Lkl;	M	SLAB_BOTTOM
	f	Lkl;	N	SLAB_TOP
	f	Lkl;	O	LEAVES
	f	Lkl;	P	STAIRS_STRAIGHT
	f	Lkl;	Q	STAIRS_INNER
	f	Lkl;	R	STAIRS_OUTER
	f	Lkl;	S	TRAPDOOR_TOP
	f	Lkl;	T	TRAPDOOR_BOTTOM
	f	Lkl;	U	TRAPDOOR_OPEN
	f	Lkl;	V	ORIENTABLE_TRAPDOOR_TOP
	f	Lkl;	W	ORIENTABLE_TRAPDOOR_BOTTOM
	f	Lkl;	X	ORIENTABLE_TRAPDOOR_OPEN
	f	Lkl;	Y	POINTED_DRIPSTONE
	f	Lkl;	Z	CROSS
	f	Lkl;	aA	FIRE_SIDE_ALT
	f	Lkl;	aB	FIRE_UP
	f	Lkl;	aC	FIRE_UP_ALT
	f	Lkl;	aD	CAMPFIRE
	f	Lkl;	aE	LANTERN
	f	Lkl;	aF	HANGING_LANTERN
	f	Lkl;	aG	TORCH
	f	Lkl;	aH	WALL_TORCH
	f	Lkl;	aI	PISTON
	f	Lkl;	aJ	PISTON_HEAD
	f	Lkl;	aK	PISTON_HEAD_SHORT
	f	Lkl;	aL	SEAGRASS
	f	Lkl;	a	CUBE
	f	Lkl;	aM	TURTLE_EGG
	f	Lkl;	aN	TWO_TURTLE_EGGS
	f	Lkl;	aO	THREE_TURTLE_EGGS
	f	Lkl;	aP	FOUR_TURTLE_EGGS
	f	Lkl;	aQ	SINGLE_FACE
	f	Lkl;	aR	CAULDRON_LEVEL1
	f	Lkl;	aS	CAULDRON_LEVEL2
	f	Lkl;	aT	CAULDRON_FULL
	f	Lkl;	aU	AZALEA
	f	Lkl;	aV	POTTED_AZALEA
	f	Lkl;	aW	FLAT_ITEM
	f	Lkl;	aX	FLAT_HANDHELD_ITEM
	f	Lkl;	aY	FLAT_HANDHELD_ROD_ITEM
	f	Lkl;	aZ	SHULKER_BOX_INVENTORY
	f	Lkl;	aa	TINTED_CROSS
	f	Lkl;	ab	FLOWER_POT_CROSS
	f	Lkl;	ac	TINTED_FLOWER_POT_CROSS
	f	Lkl;	ad	RAIL_FLAT
	f	Lkl;	ae	RAIL_CURVED
	f	Lkl;	af	RAIL_RAISED_NE
	f	Lkl;	ag	RAIL_RAISED_SW
	f	Lkl;	ah	CARPET
	f	Lkl;	ai	CORAL_FAN
	f	Lkl;	aj	CORAL_WALL_FAN
	f	Lkl;	ak	GLAZED_TERRACOTTA
	f	Lkl;	al	CHORUS_FLOWER
	f	Lkl;	am	DAYLIGHT_DETECTOR
	f	Lkl;	an	STAINED_GLASS_PANE_NOSIDE
	f	Lkl;	ao	STAINED_GLASS_PANE_NOSIDE_ALT
	f	Lkl;	ap	STAINED_GLASS_PANE_POST
	f	Lkl;	aq	STAINED_GLASS_PANE_SIDE
	f	Lkl;	ar	STAINED_GLASS_PANE_SIDE_ALT
	f	Lkl;	as	COMMAND_BLOCK
	f	Lkl;	at	ANVIL
	f	[Lkl;	au	STEMS
	f	Lkl;	av	ATTACHED_STEM
	f	Lkl;	aw	CROP
	f	Lkl;	ax	FARMLAND
	f	Lkl;	ay	FIRE_FLOOR
	f	Lkl;	az	FIRE_SIDE
	f	Lkl;	b	CUBE_DIRECTIONAL
	f	Lkl;	ba	BED_INVENTORY
	f	Lkl;	bb	BANNER_INVENTORY
	f	Lkl;	bc	SKULL_INVENTORY
	f	Lkl;	bd	CANDLE
	f	Lkl;	be	TWO_CANDLES
	f	Lkl;	bf	THREE_CANDLES
	f	Lkl;	bg	FOUR_CANDLES
	f	Lkl;	bh	CANDLE_CAKE
	f	Lkl;	bi	SCULK_SHRIEKER
	f	Lkl;	c	CUBE_ALL
	f	Lkl;	d	CUBE_MIRRORED_ALL
	f	Lkl;	e	CUBE_NORTH_WEST_MIRRORED_ALL
	f	Lkl;	f	CUBE_COLUMN
	f	Lkl;	g	CUBE_COLUMN_HORIZONTAL
	f	Lkl;	h	CUBE_COLUMN_MIRRORED
	f	Lkl;	i	CUBE_TOP
	f	Lkl;	j	CUBE_BOTTOM_TOP
	f	Lkl;	k	CUBE_ORIENTABLE
	f	Lkl;	l	CUBE_ORIENTABLE_TOP_BOTTOM
	f	Lkl;	m	CUBE_ORIENTABLE_VERTICAL
	f	Lkl;	n	BUTTON
	f	Lkl;	o	BUTTON_PRESSED
	f	Lkl;	p	BUTTON_INVENTORY
	f	Lkl;	q	DOOR_BOTTOM_LEFT
	f	Lkl;	r	DOOR_BOTTOM_LEFT_OPEN
	f	Lkl;	s	DOOR_BOTTOM_RIGHT
	f	Lkl;	t	DOOR_BOTTOM_RIGHT_OPEN
	f	Lkl;	u	DOOR_TOP_LEFT
	f	Lkl;	v	DOOR_TOP_LEFT_OPEN
	f	Lkl;	w	DOOR_TOP_RIGHT
	f	Lkl;	x	DOOR_TOP_RIGHT_OPEN
	f	Lkl;	y	FENCE_POST
	f	Lkl;	z	FENCE_SIDE
c	kn	net/minecraft/data/models/model/TextureMapping
	m	(Lciw;)Lkn;	A	campfire
		p	0		block
	m	(Lciw;)Lkn;	B	layer0
		p	0		block
	m	(Lciw;)Laaj;	C	getBlockTexture
		p	0		block
	m	()Ljava/util/stream/Stream;	a	getForced
	m	(Laaj;)Lkn;	a	defaultTexture
		p	0		id
	m	(Laaj;Laaj;)Lkn;	a	column
		p	0		side
		p	1		end
	m	(Lbzw;)Lkn;	a	particleFromItem
		p	0		item
	m	(Lbzw;Ljava/lang/String;)Laaj;	a	getItemTexture
		p	0		item
		p	1		suffix
	m	(Lciw;)Lkn;	a	cube
		p	0		block
	m	(Lciw;Lciw;)Lkn;	a	attachedStem
		p	0		stem
		p	1		upper
	m	(Lciw;Ljava/lang/String;)Laaj;	a	getBlockTexture
		p	0		block
		p	1		suffix
	m	(Lciw;Z)Lkn;	a	candleCake
		p	0		block
		p	1		lit
	m	(Lko;)Laaj;	a	get
		p	1		key
	m	(Lko;Laaj;)Lkn;	a	put
		p	1		key
		p	2		id
	m	(Lko;Lko;)Lkn;	a	copySlot
		p	1		parent
		p	2		child
	m	(Z)Lkn;	a	sculkShrieker
		p	0		canSummon
	m	(Laaj;)Lkn;	b	cube
		p	0		id
	m	(Laaj;Laaj;)Lkn;	b	door
		p	0		top
		p	1		bottom
	m	(Lbzw;)Lkn;	b	layer0
		p	0		item
	m	(Lciw;)Lkn;	b	defaultTexture
		p	0		block
	m	(Lciw;Lciw;)Lkn;	b	pane
		p	0		block
		p	1		top
	m	(Lko;Laaj;)Lkn;	b	putForced
		p	1		key
		p	2		id
	m	(Lko;Lko;)Lkn;	b	copyForced
		p	1		parent
		p	2		child
	m	(Laaj;)Lkn;	c	cross
		p	0		id
	m	(Lbzw;)Laaj;	c	getItemTexture
		p	0		item
	m	(Lciw;)Lkn;	c	cross
		p	0		block
	m	(Lciw;Lciw;)Lkn;	c	craftingTable
		p	0		block
		p	1		bottom
	m	(Lko;Laaj;)Lkn;	c	copyAndUpdate
		p	1		key
		p	2		id
	m	(Laaj;)Lkn;	d	plant
		p	0		id
	m	(Lciw;)Lkn;	d	plant
		p	0		block
	m	(Lciw;Lciw;)Lkn;	d	fletchingTable
		p	0		frontTopSideBlock
		p	1		downBlock
	m	(Lko;Laaj;)Lkn;	d	singleSlot
		p	0		key
		p	1		id
	m	(Laaj;)Lkn;	e	rail
		p	0		id
	m	(Lciw;)Lkn;	e	rail
		p	0		block
	m	(Laaj;)Lkn;	f	wool
		p	0		id
	m	(Lciw;)Lkn;	f	wool
		p	0		block
	m	(Laaj;)Lkn;	g	crop
		p	0		id
	m	(Lciw;)Lkn;	g	stem
		p	0		block
	m	(Laaj;)Lkn;	h	particle
		p	0		id
	m	(Lciw;)Lkn;	h	pattern
		p	0		block
	m	(Laaj;)Lkn;	i	torch
		p	0		id
	m	(Lciw;)Lkn;	i	fan
		p	0		block
	m	(Laaj;)Lkn;	j	cauldron
		p	0		content
	m	(Lciw;)Lkn;	j	column
		p	0		block
	m	(Laaj;)Lkn;	k	layer0
		p	0		id
	m	(Lciw;)Lkn;	k	cubeTop
		p	0		block
	m	(Lciw;)Lkn;	l	logColumn
		p	0		block
	m	(Lciw;)Lkn;	m	cubeBottomTop
		p	0		block
	m	(Lciw;)Lkn;	n	cubeBottomTopWithWall
		p	0		block
	m	(Lciw;)Lkn;	o	columnWithWall
		p	0		block
	m	(Lciw;)Lkn;	p	door
		p	0		block
	m	(Lciw;)Lkn;	q	particle
		p	0		block
	m	(Lciw;)Lkn;	r	fire0
		p	0		block
	m	(Lciw;)Lkn;	s	fire1
		p	0		block
	m	(Lciw;)Lkn;	t	lantern
		p	0		block
	m	(Lciw;)Lkn;	u	torch
		p	0		block
	m	(Lciw;)Lkn;	v	commandBlock
		p	0		block
	m	(Lciw;)Lkn;	w	orientableCube
		p	0		block
	m	(Lciw;)Lkn;	x	orientableCubeOnlyTop
		p	0		block
	m	(Lciw;)Lkn;	y	orientableCubeSameEnds
		p	0		block
	m	(Lciw;)Lkn;	z	top
		p	0		top
	f	Ljava/util/Map;	a	slots
	f	Ljava/util/Set;	b	forcedSlots
c	ko	net/minecraft/data/models/model/TextureSlot
	m	(Ljava/lang/String;Lko;)V	<init>	<init>
		p	1		name
		p	2		parent
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Lko;	a	create
		p	0		name
	m	(Ljava/lang/String;Lko;)Lko;	a	create
		p	0		name
		p	1		parent
	m	()Lko;	b	getParent
	f	Lko;	A	CROP
	f	Lko;	B	DIRT
	f	Lko;	C	FIRE
	f	Lko;	D	LANTERN
	f	Lko;	E	PLATFORM
	f	Lko;	F	UNSTICKY
	f	Lko;	G	TORCH
	f	Lko;	H	LAYER0
	f	Lko;	I	LIT_LOG
	f	Lko;	J	CANDLE
	f	Lko;	K	INSIDE
	f	Lko;	L	CONTENT
	f	Lko;	M	INNER_TOP
	f	Ljava/lang/String;	N	id
	f	Lko;	O	parent
	f	Lko;	a	ALL
	f	Lko;	b	TEXTURE
	f	Lko;	c	PARTICLE
	f	Lko;	d	END
	f	Lko;	e	BOTTOM
	f	Lko;	f	TOP
	f	Lko;	g	FRONT
	f	Lko;	h	BACK
	f	Lko;	i	SIDE
	f	Lko;	j	NORTH
	f	Lko;	k	SOUTH
	f	Lko;	l	EAST
	f	Lko;	m	WEST
	f	Lko;	n	UP
	f	Lko;	o	DOWN
	f	Lko;	p	CROSS
	f	Lko;	q	PLANT
	f	Lko;	r	WALL
	f	Lko;	s	RAIL
	f	Lko;	t	WOOL
	f	Lko;	u	PATTERN
	f	Lko;	v	PANE
	f	Lko;	w	EDGE
	f	Lko;	x	FAN
	f	Lko;	y	STEM
	f	Lko;	z	UPPER_STEM
c	kp	net/minecraft/data/models/model/TexturedModel
	m	(Lkn;Lkl;)V	<init>	<init>
		p	1		textures
		p	2		model
	m	()Lkl;	a	getTemplate
	m	(Laaj;)Lkp;	a	createAllSame
		p	0		id
	m	(Lciw;Ljava/lang/String;Ljava/util/function/BiConsumer;)Laaj;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Lciw;Ljava/util/function/BiConsumer;)Laaj;	a	create
		p	1		block
		p	2		writer
	m	(Ljava/util/function/Consumer;)Lkp;	a	updateTextures
		p	1		texturesConsumer
	m	(Ljava/util/function/Function;Lkl;)Lkp$a;	a	createDefault
		p	0		texturesGetter
		p	1		model
	m	(Ljava/util/function/Function;Lkl;Lciw;)Lkp;	a	lambda$createDefault$0
	m	()Lkn;	b	getMapping
	f	Lkp$a;	a	CUBE
	f	Lkp$a;	b	CUBE_MIRRORED
	f	Lkp$a;	c	COLUMN
	f	Lkp$a;	d	COLUMN_HORIZONTAL
	f	Lkp$a;	e	CUBE_TOP_BOTTOM
	f	Lkp$a;	f	CUBE_TOP
	f	Lkp$a;	g	ORIENTABLE_ONLY_TOP
	f	Lkp$a;	h	ORIENTABLE
	f	Lkp$a;	i	CARPET
	f	Lkp$a;	j	GLAZED_TERRACOTTA
	f	Lkp$a;	k	CORAL_FAN
	f	Lkp$a;	l	PARTICLE_ONLY
	f	Lkp$a;	m	ANVIL
	f	Lkp$a;	n	LEAVES
	f	Lkp$a;	o	LANTERN
	f	Lkp$a;	p	HANGING_LANTERN
	f	Lkp$a;	q	SEAGRASS
	f	Lkp$a;	r	COLUMN_ALT
	f	Lkp$a;	s	COLUMN_HORIZONTAL_ALT
	f	Lkp$a;	t	TOP_BOTTOM_WITH_WALL
	f	Lkp$a;	u	COLUMN_WITH_WALL
	f	Lkn;	v	mapping
	f	Lkl;	w	template
c	kp$a	net/minecraft/data/models/model/TexturedModel$Provider
	m	(Ljava/util/function/Consumer;Lciw;)Lkp;	a	lambda$updateTexture$0
	m	(Lciw;Ljava/util/function/BiConsumer;)Laaj;	create	create
		p	1		block
		p	2		writer
	m	(Lciw;Ljava/lang/String;Ljava/util/function/BiConsumer;)Laaj;	createWithSuffix	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Lciw;)Lkp;	get	get
		p	1		block
	m	(Ljava/util/function/Consumer;)Lkp$a;	updateTexture	updateTexture
		p	1		consumer
c	kq	net/minecraft/data/models/model/package-info
c	kr	net/minecraft/data/models/package-info
c	ks	net/minecraft/data/package-info
c	kt	net/minecraft/data/recipes/FinishedRecipe
	m	()Lcom/google/gson/JsonObject;	a	serializeRecipe
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laaj;	b	getId
	m	()Lccu;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Laaj;	e	getAdvancementId
c	ku	net/minecraft/data/recipes/RecipeBuilder
	m	()Lbzw;	a	getResult
	m	(Lcfz;)Laaj;	a	getDefaultRecipeId
		p	0		item
	m	(Ljava/lang/String;)Lku;	a	group
		p	1		group
	m	(Ljava/lang/String;Lan;)Lku;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;)V	a	save
		p	1		exporter
	m	(Ljava/util/function/Consumer;Laaj;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipePath
	f	Laaj;	a	ROOT_RECIPE_ADVANCEMENT
c	kv	net/minecraft/data/recipes/RecipeProvider
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()Ljava/lang/String;	a	getName
	m	(Lakh;)Lbx$a;	a	has
		p	0		tag
	m	(Lcfz;)Lbx$a;	a	has
		p	0		item
	m	(Lcfz;Lccp;)Lku;	a	wallBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Ljava/lang/String;	a	getConversionRecipeName
		p	0		to
		p	1		from
	m	(Lciw;)Lbk$a;	a	insideOf
		p	0		block
	m	(Lcj$d;Lcfz;)Lbx$a;	a	has
		p	0		count
		p	1		item
	m	(Liv;Liv$b;)Lciw;	a	getBaseBlock
		p	0		family
		p	1		variant
	m	(Liv;Ljava/util/function/Consumer;Liv$b;Lciw;)V	a	lambda$generateRecipes$5
		p	2		variant
		p	3		block
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	a	saveRecipe
		p	0		cache
		p	1		json
		p	2		path
	m	(Ljava/util/Set;Lix;Lkt;)V	a	lambda$run$0
		p	3		provider
	m	(Ljava/util/function/Consumer;)V	a	buildCraftingRecipes
		p	0		exporter
	m	(Ljava/util/function/Consumer;Lbzw;Lbzw;)V	a	netheriteSmithing
		p	0		exporter
		p	1		input
		p	2		output
	m	(Ljava/util/function/Consumer;Lcdb;Ljava/util/List;Lcfz;FILjava/lang/String;Ljava/lang/String;)V	a	oreCooking
		p	0		exporter
		p	1		serializer
		p	2		inputs
		p	3		output
		p	4		experience
		p	5		cookingTime
		p	6		group
		p	7		baseIdString
	m	(Ljava/util/function/Consumer;Lcfz;Lakh;)V	a	planksFromLog
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	a	candle
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;I)V	a	stonecutterResultFromBase
		p	0		exporter
		p	1		output
		p	2		input
		p	3		count
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;Ljava/lang/String;)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;Ljava/lang/String;I)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
		p	4		outputCount
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipesWithCustomPacking
		p	0		exporter
		p	1		input
		p	2		compacted
		p	3		compactingRecipeName
		p	4		compactingRecipeGroup
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipes
		p	0		exporter
		p	1		input
		p	2		compacted
		p	3		compactingRecipeName
		p	4		compactingRecipeGroup
		p	5		reverseRecipeName
		p	6		reverseRecipeGroup
	m	(Ljava/util/function/Consumer;Lciw;Lciw;)V	a	lambda$waxRecipes$2
		p	1		input
		p	2		output
	m	(Ljava/util/function/Consumer;Liv;)V	a	generateRecipes
		p	0		exporter
		p	1		family
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lcdb;I)V	a	cookRecipes
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		cookingTime
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lcdb;ILcfz;Lcfz;F)V	a	simpleCookingRecipe
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		cookingTime
		p	4		input
		p	5		output
		p	6		experience
	m	(Ljava/util/function/Consumer;Ljava/util/List;Lcfz;FILjava/lang/String;)V	a	oreSmelting
		p	0		exporter
		p	1		inputs
		p	2		output
		p	3		experience
		p	4		cookingTime
		p	5		group
	m	(Lku;Liv$b;Ljava/lang/String;)V	a	lambda$generateRecipes$3
		p	2		group
	m	([Lca;)Lbx$a;	a	inventoryTrigger
		p	0		predicates
	m	(Lcfz;)Ljava/lang/String;	b	getHasName
		p	0		item
	m	(Lcfz;Lccp;)Lku;	b	polishedBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	b	lambda$static$18
		p	0		output
		p	1		input
	m	(Lix;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V	b	saveAdvancement
		p	0		cache
		p	1		json
		p	2		path
	m	(Ljava/util/function/Consumer;)V	b	waxRecipes
		p	0		exporter
	m	(Ljava/util/function/Consumer;Lcfz;Lakh;)V	b	planksFromLogs
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	b	wall
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;Ljava/lang/String;Ljava/lang/String;)V	b	nineBlockStorageRecipesRecipesWithCustomUnpacking
		p	0		exporter
		p	1		input
		p	2		compacted
		p	3		reverseRecipeName
		p	4		reverseRecipeGroup
	m	(Ljava/util/function/Consumer;Liv;)V	b	lambda$buildCraftingRecipes$1
		p	1		family
	m	(Ljava/util/function/Consumer;Ljava/util/List;Lcfz;FILjava/lang/String;)V	b	oreBlasting
		p	0		exporter
		p	1		inputs
		p	2		output
		p	3		experience
		p	4		cookingTime
		p	5		group
	m	(Lcfz;)Ljava/lang/String;	c	getItemName
		p	0		item
	m	(Lcfz;Lccp;)Lkw;	c	cutBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	c	lambda$static$17
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	c	polished
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;)Ljava/lang/String;	d	getSimpleRecipeName
		p	0		item
	m	(Lcfz;Lccp;)Lkw;	d	chiseledBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	d	lambda$static$16
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	d	cut
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;)Ljava/lang/String;	e	getSmeltingRecipeName
		p	0		item
	m	(Lcfz;Lccp;)Lku;	e	buttonBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	e	lambda$static$15
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	e	chiseled
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;)Ljava/lang/String;	f	getBlastingRecipeName
		p	0		item
	m	(Lcfz;Lccp;)Lku;	f	doorBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	f	lambda$static$14
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	f	woodFromLogs
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;)Ljava/lang/String;	g	lambda$generateRecipes$4
	m	(Lcfz;Lccp;)Lku;	g	fenceBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	g	lambda$static$13
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	g	woodenBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;Lccp;)Lku;	h	fenceGateBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	h	lambda$static$12
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	h	chestBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;Lccp;)Lku;	i	pressurePlateBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	i	lambda$static$11
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	i	pressurePlate
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;Lccp;)Lku;	j	slabBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	j	lambda$static$10
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	j	slab
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;Lccp;)Lku;	k	stairBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	k	lambda$static$9
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	k	coloredWoolFromWhiteWoolAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;Lccp;)Lku;	l	trapdoorBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	l	lambda$static$8
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	l	carpet
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;Lccp;)Lku;	m	signBuilder
		p	0		output
		p	1		input
	m	(Lcfz;Lcfz;)Lku;	m	lambda$static$7
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	m	coloredCarpetFromWhiteCarpetAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcfz;Lcfz;)Lku;	n	lambda$static$6
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	n	bedFromPlanksAndWool
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	o	bedFromWhiteBedAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	p	banner
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	q	stainedGlassFromGlassAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	r	stainedGlassPaneFromStainedGlass
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	s	stainedGlassPaneFromGlassPaneAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	t	coloredTerracottaFromTerracottaAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	u	concretePowder
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	v	stonecutterResultFromBase
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	w	smeltingResultFromBase
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcfz;Lcfz;)V	x	nineBlockStorageRecipes
		p	0		exporter
		p	1		input
		p	2		compacted
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/collect/ImmutableList;	d	COAL_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	e	IRON_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	f	COPPER_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	g	GOLD_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	h	DIAMOND_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	i	LAPIS_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	j	REDSTONE_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	k	EMERALD_SMELTABLES
	f	Liy$a;	l	recipePathProvider
	f	Liy$a;	m	advancementPathProvider
	f	Ljava/util/Map;	n	shapeBuilders
c	kw	net/minecraft/data/recipes/ShapedRecipeBuilder
	m	(Lcfz;I)V	<init>	<init>
		p	1		output
		p	2		outputCount
	m	()Lbzw;	a	getResult
	m	(Laaj;)V	a	ensureValid
		p	1		recipeId
	m	(Lcfz;I)Lkw;	a	shaped
		p	0		output
		p	1		outputCount
	m	(Ljava/lang/Character;Lakh;)Lkw;	a	define
		p	1		c
		p	2		tag
	m	(Ljava/lang/Character;Lccp;)Lkw;	a	define
		p	1		c
		p	2		ingredient
	m	(Ljava/lang/Character;Lcfz;)Lkw;	a	define
		p	1		c
		p	2		itemProvider
	m	(Ljava/lang/String;)Lku;	a	group
		p	1		group
	m	(Ljava/lang/String;Lan;)Lku;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Laaj;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lcfz;)Lkw;	b	shaped
		p	0		output
	m	(Ljava/lang/String;)Lkw;	b	pattern
		p	1		patternStr
	m	(Ljava/lang/String;Lan;)Lkw;	b	unlockedBy
	m	(Ljava/lang/String;)Lkw;	c	group
	f	Lbzw;	b	result
	f	I	c	count
	f	Ljava/util/List;	d	rows
	f	Ljava/util/Map;	e	key
	f	Laf$a;	f	advancement
	f	Ljava/lang/String;	g	group
c	kw$a	net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	m	(Laaj;Lbzw;ILjava/lang/String;Ljava/util/List;Ljava/util/Map;Laf$a;Laaj;)V	<init>	<init>
		p	1		recipeId
		p	2		output
		p	3		resultCount
		p	4		group
		p	5		pattern
		p	6		inputs
		p	7		advancementBuilder
		p	8		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laaj;	b	getId
	m	()Lccu;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Laaj;	e	getAdvancementId
	f	Laaj;	a	id
	f	Lbzw;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	pattern
	f	Ljava/util/Map;	f	key
	f	Laf$a;	g	advancement
	f	Laaj;	h	advancementId
c	kx	net/minecraft/data/recipes/ShapelessRecipeBuilder
	m	(Lcfz;I)V	<init>	<init>
		p	1		output
		p	2		outputCount
	m	()Lbzw;	a	getResult
	m	(Laaj;)V	a	ensureValid
		p	1		recipeId
	m	(Lakh;)Lkx;	a	requires
		p	1		tag
	m	(Lccp;)Lkx;	a	requires
		p	1		ingredient
	m	(Lccp;I)Lkx;	a	requires
		p	1		ingredient
		p	2		size
	m	(Lcfz;I)Lkx;	a	shapeless
		p	0		output
		p	1		outputCount
	m	(Ljava/lang/String;)Lku;	a	group
		p	1		group
	m	(Ljava/lang/String;Lan;)Lku;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Laaj;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lcfz;)Lkx;	b	shapeless
		p	0		output
	m	(Lcfz;I)Lkx;	b	requires
		p	1		itemProvider
		p	2		size
	m	(Ljava/lang/String;)Lkx;	b	group
	m	(Ljava/lang/String;Lan;)Lkx;	b	unlockedBy
	m	(Lcfz;)Lkx;	c	requires
		p	1		itemProvider
	f	Lbzw;	b	result
	f	I	c	count
	f	Ljava/util/List;	d	ingredients
	f	Laf$a;	e	advancement
	f	Ljava/lang/String;	f	group
c	kx$a	net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	m	(Laaj;Lbzw;ILjava/lang/String;Ljava/util/List;Laf$a;Laaj;)V	<init>	<init>
		p	1		recipeId
		p	2		output
		p	3		outputCount
		p	4		group
		p	5		inputs
		p	6		advancementBuilder
		p	7		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laaj;	b	getId
	m	()Lccu;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Laaj;	e	getAdvancementId
	f	Laaj;	a	id
	f	Lbzw;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	ingredients
	f	Laf$a;	f	advancement
	f	Laaj;	g	advancementId
c	ky	net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	m	(Lcfz;Lccp;FILcdb;)V	<init>	<init>
		p	1		output
		p	2		input
		p	3		experience
		p	4		cookingTime
		p	5		serializer
	m	()Lbzw;	a	getResult
	m	(Laaj;)V	a	ensureValid
		p	1		recipeId
	m	(Lccp;Lcfz;FI)Lky;	a	campfireCooking
		p	0		result
		p	1		ingredient
		p	2		experience
		p	3		cookingTime
	m	(Lccp;Lcfz;FILcdb;)Lky;	a	cooking
		p	0		ingredient
		p	1		result
		p	2		experience
		p	3		cookingTime
		p	4		serializer
	m	(Ljava/lang/String;)Lku;	a	group
		p	1		group
	m	(Ljava/lang/String;Lan;)Lku;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Laaj;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lccp;Lcfz;FI)Lky;	b	blasting
		p	0		ingredient
		p	1		result
		p	2		experience
		p	3		cookingTime
	m	(Ljava/lang/String;)Lky;	b	group
	m	(Ljava/lang/String;Lan;)Lky;	b	unlockedBy
	m	(Lccp;Lcfz;FI)Lky;	c	smelting
		p	0		ingredient
		p	1		result
		p	2		experience
		p	3		cookingTime
	m	(Lccp;Lcfz;FI)Lky;	d	smoking
		p	0		result
		p	1		ingredient
		p	2		experience
		p	3		cookingTime
	f	Lbzw;	b	result
	f	Lccp;	c	ingredient
	f	F	d	experience
	f	I	e	cookingTime
	f	Laf$a;	f	advancement
	f	Ljava/lang/String;	g	group
	f	Lcdb;	h	serializer
c	ky$a	net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	m	(Laaj;Ljava/lang/String;Lccp;Lbzw;FILaf$a;Laaj;Lccu;)V	<init>	<init>
		p	1		recipeId
		p	2		group
		p	3		input
		p	4		result
		p	5		experience
		p	6		cookingTime
		p	7		advancementBuilder
		p	8		advancementId
		p	9		serializer
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laaj;	b	getId
	m	()Lccu;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Laaj;	e	getAdvancementId
	f	Laaj;	a	id
	f	Ljava/lang/String;	b	group
	f	Lccp;	c	ingredient
	f	Lbzw;	d	result
	f	F	e	experience
	f	I	f	cookingTime
	f	Laf$a;	g	advancement
	f	Laaj;	h	advancementId
	f	Lccu;	i	serializer
c	kz	net/minecraft/data/recipes/SingleItemRecipeBuilder
	m	(Lccu;Lccp;Lcfz;I)V	<init>	<init>
		p	1		serializer
		p	2		input
		p	3		output
		p	4		outputCount
	m	()Lbzw;	a	getResult
	m	(Laaj;)V	a	ensureValid
		p	1		recipeId
	m	(Lccp;Lcfz;)Lkz;	a	stonecutting
		p	0		input
		p	1		output
	m	(Lccp;Lcfz;I)Lkz;	a	stonecutting
		p	0		input
		p	1		output
		p	2		outputCount
	m	(Ljava/lang/String;)Lku;	a	group
		p	1		group
	m	(Ljava/lang/String;Lan;)Lku;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Laaj;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/lang/String;)Lkz;	b	group
	m	(Ljava/lang/String;Lan;)Lkz;	b	unlockedBy
	f	Lbzw;	b	result
	f	Lccp;	c	ingredient
	f	I	d	count
	f	Laf$a;	e	advancement
	f	Ljava/lang/String;	f	group
	f	Lccu;	g	type
c	kz$a	net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	m	(Laaj;Lccu;Ljava/lang/String;Lccp;Lbzw;ILaf$a;Laaj;)V	<init>	<init>
		p	1		recipeId
		p	2		serializer
		p	3		group
		p	4		input
		p	5		output
		p	6		outputCount
		p	7		advancementBuilder
		p	8		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laaj;	b	getId
	m	()Lccu;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Laaj;	e	getAdvancementId
	f	Laaj;	a	id
	f	Ljava/lang/String;	b	group
	f	Lccp;	c	ingredient
	f	Lbzw;	d	result
	f	I	e	count
	f	Laf$a;	f	advancement
	f	Laaj;	g	advancementId
	f	Lccu;	h	type
c	la	net/minecraft/data/recipes/SpecialRecipeBuilder
	m	(Lcdc;)V	<init>	<init>
		p	1		serializer
	m	(Lcdc;)Lla;	a	special
		p	0		serializer
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lcdc;	a	serializer
c	la$1	net/minecraft/data/recipes/SpecialRecipeBuilder$1
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laaj;	b	getId
	m	()Lccu;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Laaj;	e	getAdvancementId
	f	Ljava/lang/String;	a	val$id
	f	Lla;	b	this$0
c	lb	net/minecraft/data/recipes/UpgradeRecipeBuilder
	m	(Lccu;Lccp;Lccp;Lbzw;)V	<init>	<init>
		p	1		serializer
		p	2		base
		p	3		addition
		p	4		result
	m	(Laaj;)V	a	ensureValid
		p	1		recipeId
	m	(Lccp;Lccp;Lbzw;)Llb;	a	smithing
		p	0		base
		p	1		addition
		p	2		result
	m	(Ljava/lang/String;Lan;)Llb;	a	unlocks
		p	1		criterionName
		p	2		conditions
	m	(Ljava/util/function/Consumer;Laaj;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lccp;	a	base
	f	Lccp;	b	addition
	f	Lbzw;	c	result
	f	Laf$a;	d	advancement
	f	Lccu;	e	type
c	lb$a	net/minecraft/data/recipes/UpgradeRecipeBuilder$Result
	m	(Laaj;Lccu;Lccp;Lccp;Lbzw;Laf$a;Laaj;)V	<init>	<init>
		p	1		recipeId
		p	2		serializer
		p	3		base
		p	4		addition
		p	5		result
		p	6		advancementBuilder
		p	7		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laaj;	b	getId
	m	()Lccu;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Laaj;	e	getAdvancementId
	f	Laaj;	a	id
	f	Lccp;	b	base
	f	Lccp;	c	addition
	f	Lbzw;	d	result
	f	Laf$a;	e	advancement
	f	Laaj;	f	advancementId
	f	Lccu;	g	type
c	lc	net/minecraft/data/recipes/package-info
c	ld	net/minecraft/data/structures/NbtToSnbt
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()Ljava/lang/String;	a	getName
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Ljava/nio/file/Path;Ljava/lang/String;)V	a	writeSnbt
		p	0		writer
		p	1		path
		p	2		content
	m	(Lix;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertStructure
		p	0		writer
		p	1		inputPath
		p	2		filename
		p	3		outputPath
	m	(Lix;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$run$1
		p	4		path
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	1		targetPath
		p	2		rootPath
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Liy;	d	generator
c	le	net/minecraft/data/structures/SnbtToNbt
	m	(Liy;)V	<init>	<init>
		p	1		generator
	m	()Ljava/lang/String;	a	getName
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Lle$c;Ljava/nio/file/Path;)V	a	storeStructureIfChanged
		p	1		cache
		p	2		data
		p	3		root
	m	(Ljava/lang/String;Lpj;)Lpj;	a	applyFilters
		p	1		key
		p	2		compound
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lle$c;	a	readStructure
		p	1		path
		p	2		name
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	1		root
		p	2		file
	m	(Ljava/util/List;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$run$2
		p	3		path
	m	(Lle$a;)Lle;	a	addFilter
		p	1		tweaker
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lle$c;	b	lambda$run$1
	f	Ljava/nio/file/Path;	c	DUMP_SNBT_TO
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Liy;	e	generator
	f	Ljava/util/List;	f	filters
c	le$a	net/minecraft/data/structures/SnbtToNbt$Filter
	m	(Ljava/lang/String;Lpj;)Lpj;	apply	apply
		p	1		name
		p	2		nbt
c	le$b	net/minecraft/data/structures/SnbtToNbt$StructureConversionException
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		path
		p	2		cause
c	le$c	net/minecraft/data/structures/SnbtToNbt$TaskResult
	m	(Ljava/lang/String;[BLjava/lang/String;Lcom/google/common/hash/HashCode;)V	<init>	<init>
		p	1		name
		p	2		bytes
		p	3		snbtContent
	m	()Ljava/lang/String;	a	name
	m	()[B	b	payload
	m	()Ljava/lang/String;	c	snbtPayload
	m	()Lcom/google/common/hash/HashCode;	d	hash
	f	Ljava/lang/String;	a	name
	f	[B	b	payload
	f	Ljava/lang/String;	c	snbtPayload
	f	Lcom/google/common/hash/HashCode;	d	hash
c	lf	net/minecraft/data/structures/StructureUpdater
	m	(Ljava/lang/String;Lpj;)Lpj;	a	update
		p	0		name
		p	1		nbt
	m	(Lpj;)Lpj;	a	patchVersion
		p	0		nbt
	m	(Ljava/lang/String;Lpj;)Lpj;	apply	apply
		p	1		name
		p	2		nbt
	m	(Ljava/lang/String;Lpj;)Lpj;	b	updateStructure
		p	0		name
		p	1		nbt
	f	Lorg/slf4j/Logger;	a	LOGGER
c	lg	net/minecraft/data/structures/package-info
c	lh	net/minecraft/data/tags/BannerPatternTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	li	net/minecraft/data/tags/BiomeTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	(Llu$a;Laai;)V	a	lambda$addTags$1
		p	1		biome
	m	()V	b	addTags
	m	(Llu$a;Laai;)V	b	lambda$addTags$0
		p	1		biome
c	lj	net/minecraft/data/tags/BlockTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()V	b	addTags
c	lk	net/minecraft/data/tags/CatVariantTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	ll	net/minecraft/data/tags/EntityTypeTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()V	b	addTags
c	lm	net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	ln	net/minecraft/data/tags/FluidTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()V	b	addTags
c	lo	net/minecraft/data/tags/GameEventTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		root
	m	()V	b	addTags
	f	[Lcyy;	e	VIBRATIONS_EXCEPT_FLAP
c	lp	net/minecraft/data/tags/InstrumentTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	lq	net/minecraft/data/tags/ItemTagsProvider
	m	(Liy;Llj;)V	<init>	<init>
		p	1		root
		p	2		blockTagsProvider
	m	(Lakh;Lakh;)V	a	copy
		p	1		blockTag
		p	2		itemTag
	m	()V	b	addTags
	f	Ljava/util/function/Function;	e	blockTags
c	lr	net/minecraft/data/tags/PaintingVariantTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	ls	net/minecraft/data/tags/PoiTypeTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	lt	net/minecraft/data/tags/StructureTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	lu	net/minecraft/data/tags/TagsProvider
	m	(Liy;Lhm;)V	<init>	<init>
		p	1		root
		p	2		registry
	m	()Ljava/lang/String;	a	getName
	m	(Laaj;)Lake;	a	lambda$getOrCreateRawBuilder$2
		p	0		id
	m	(Lakf;)Z	a	lambda$run$0
		p	1		tag
	m	(Lakh;)Llu$a;	a	tag
		p	1		tag
	m	(Lix;)V	a	run
		p	1		writer
	m	(Lix;Laaj;Lake;)V	a	lambda$run$1
		p	2		id
		p	3		builder
	m	()V	b	addTags
	m	(Lakh;)Lake;	b	getOrCreateRawBuilder
		p	1		tag
	f	Liy$a;	c	pathProvider
	f	Lhm;	d	registry
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/util/Map;	f	builders
c	lu$a	net/minecraft/data/tags/TagsProvider$TagAppender
	m	(Lake;Lhm;)V	<init>	<init>
		p	1		builder
		p	2		registry
	m	(Laaj;)Llu$a;	a	addOptional
		p	1		id
	m	(Lakh;)Llu$a;	a	addTag
		p	1		identifiedTag
	m	(Ljava/lang/Object;)Llu$a;	a	add
		p	1		element
	m	([Laai;)Llu$a;	a	add
		p	1		keys
	m	([Ljava/lang/Object;)Llu$a;	a	add
		p	1		elements
	m	(Laaj;)Llu$a;	b	addOptionalTag
		p	1		id
	m	(Laaj;)V	c	lambda$add$0
		p	1		id
	f	Lake;	a	builder
	f	Lhm;	b	registry
c	lv	net/minecraft/data/tags/WorldPresetTagsProvider
	m	(Liy;)V	<init>	<init>
		p	1		dataGenerator
	m	()V	b	addTags
c	lw	net/minecraft/data/tags/package-info
c	lx	net/minecraft/data/worldgen/AncientCityStructurePieces
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	ly	net/minecraft/data/worldgen/AncientCityStructurePools
	m	()V	a	bootstrap
c	lz	net/minecraft/data/worldgen/BastionBridgePools
	m	()V	a	bootstrap
c	ma	net/minecraft/data/worldgen/BastionHoglinStablePools
	m	()V	a	bootstrap
c	mb	net/minecraft/data/worldgen/BastionHousingUnitsPools
	m	()V	a	bootstrap
c	mc	net/minecraft/data/worldgen/BastionPieces
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	md	net/minecraft/data/worldgen/BastionSharedPools
	m	()V	a	bootstrap
c	me	net/minecraft/data/worldgen/BastionTreasureRoomPools
	m	()V	a	bootstrap
c	mf	net/minecraft/data/worldgen/BiomeDefaultFeatures
	m	(Lcgx$a;)V	A	addLushCavesVegetationFeatures
		p	0		builder
	m	(Lcgx$a;)V	B	addLushCavesSpecialOres
		p	0		builder
	m	(Lcgx$a;)V	C	addMountainTrees
		p	0		builder
	m	(Lcgx$a;)V	D	addMountainForestTrees
		p	0		builder
	m	(Lcgx$a;)V	E	addJungleTrees
		p	0		builder
	m	(Lcgx$a;)V	F	addSparseJungleTrees
		p	0		builder
	m	(Lcgx$a;)V	G	addBadlandsTrees
		p	0		builder
	m	(Lcgx$a;)V	H	addSnowyTrees
		p	0		builder
	m	(Lcgx$a;)V	I	addJungleGrass
		p	0		builder
	m	(Lcgx$a;)V	J	addSavannaGrass
		p	0		builder
	m	(Lcgx$a;)V	K	addShatteredSavannaGrass
		p	0		builder
	m	(Lcgx$a;)V	L	addSavannaExtraGrass
		p	0		builder
	m	(Lcgx$a;)V	M	addBadlandGrass
		p	0		builder
	m	(Lcgx$a;)V	N	addForestFlowers
		p	0		builder
	m	(Lcgx$a;)V	O	addForestGrass
		p	0		builder
	m	(Lcgx$a;)V	P	addSwampVegetation
		p	0		builder
	m	(Lcgx$a;)V	Q	addMangroveSwampVegetation
		p	0		builder
	m	(Lcgx$a;)V	R	addMushroomFieldVegetation
		p	0		builder
	m	(Lcgx$a;)V	S	addPlainVegetation
		p	0		builder
	m	(Lcgx$a;)V	T	addDesertVegetation
		p	0		builder
	m	(Lcgx$a;)V	U	addGiantTaigaVegetation
		p	0		builder
	m	(Lcgx$a;)V	V	addDefaultFlowers
		p	0		builder
	m	(Lcgx$a;)V	W	addMeadowVegetation
		p	0		builder
	m	(Lcgx$a;)V	X	addWarmFlowers
		p	0		builder
	m	(Lcgx$a;)V	Y	addDefaultGrass
		p	0		builder
	m	(Lcgx$a;)V	Z	addTaigaGrass
		p	0		builder
	m	(Lcgx$a;)V	a	addDefaultCarversAndLakes
		p	0		builder
	m	(Lcgx$a;Z)V	a	addDefaultOres
		p	0		builder
		p	1		largeCopperOreBlob
	m	(Lchi$a;)V	a	farmAnimals
		p	0		builder
	m	(Lchi$a;II)V	a	warmOceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMinGroupSize
	m	(Lchi$a;III)V	a	oceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMaxGroupSize
		p	3		codWeight
	m	(Lchi$a;IIIZ)V	a	monsters
		p	0		builder
		p	1		zombieWeight
		p	2		zombieVillagerWeight
		p	3		skeletonWeight
		p	4		drowned
	m	(Lcgx$a;)V	aa	addPlainGrass
		p	0		builder
	m	(Lcgx$a;)V	ab	addDefaultMushrooms
		p	0		builder
	m	(Lcgx$a;)V	ac	addDefaultExtraVegetation
		p	0		builder
	m	(Lcgx$a;)V	ad	addBadlandExtraVegetation
		p	0		builder
	m	(Lcgx$a;)V	ae	addJungleMelons
		p	0		builder
	m	(Lcgx$a;)V	af	addSparseJungleMelons
		p	0		builder
	m	(Lcgx$a;)V	ag	addJungleVines
		p	0		builder
	m	(Lcgx$a;)V	ah	addDesertExtraVegetation
		p	0		builder
	m	(Lcgx$a;)V	ai	addSwampExtraVegetation
		p	0		builder
	m	(Lcgx$a;)V	aj	addDesertExtraDecoration
		p	0		builder
	m	(Lcgx$a;)V	ak	addFossilDecoration
		p	0		builder
	m	(Lcgx$a;)V	al	addColdOceanExtraVegetation
		p	0		builder
	m	(Lcgx$a;)V	am	addDefaultSeagrass
		p	0		builder
	m	(Lcgx$a;)V	an	addLukeWarmKelp
		p	0		builder
	m	(Lcgx$a;)V	ao	addDefaultSprings
		p	0		builder
	m	(Lcgx$a;)V	ap	addFrozenSprings
		p	0		builder
	m	(Lcgx$a;)V	aq	addIcebergs
		p	0		builder
	m	(Lcgx$a;)V	ar	addBlueIce
		p	0		builder
	m	(Lcgx$a;)V	as	addSurfaceFreezing
		p	0		builder
	m	(Lcgx$a;)V	at	addNetherDefaultOres
		p	0		builder
	m	(Lcgx$a;)V	au	addAncientDebris
		p	0		builder
	m	(Lcgx$a;)V	av	addDefaultCrystalFormations
		p	0		builder
	m	(Lcgx$a;)V	b	addDefaultMonsterRoom
		p	0		builder
	m	(Lchi$a;)V	b	caveSpawns
		p	0		builder
	m	(Lcgx$a;)V	c	addDefaultUndergroundVariety
		p	0		builder
	m	(Lchi$a;)V	c	commonSpawns
		p	0		builder
	m	(Lcgx$a;)V	d	addDripstone
		p	0		builder
	m	(Lchi$a;)V	d	plainsSpawns
		p	0		builder
	m	(Lcgx$a;)V	e	addSculk
		p	0		builder
	m	(Lchi$a;)V	e	snowySpawns
		p	0		builder
	m	(Lcgx$a;)V	f	addDefaultOres
		p	0		builder
	m	(Lchi$a;)V	f	desertSpawns
		p	0		builder
	m	(Lcgx$a;)V	g	addExtraGold
		p	0		builder
	m	(Lchi$a;)V	g	dripstoneCavesSpawns
		p	0		builder
	m	(Lcgx$a;)V	h	addExtraEmeralds
		p	0		builder
	m	(Lchi$a;)V	h	mooshroomSpawns
		p	0		builder
	m	(Lcgx$a;)V	i	addInfestedStone
		p	0		builder
	m	(Lchi$a;)V	i	baseJungleSpawns
		p	0		builder
	m	(Lcgx$a;)V	j	addDefaultSoftDisks
		p	0		builder
	m	(Lchi$a;)V	j	endSpawns
		p	0		builder
	m	(Lcgx$a;)V	k	addSwampClayDisk
		p	0		builder
	m	(Lcgx$a;)V	l	addMangroveSwampDisks
		p	0		builder
	m	(Lcgx$a;)V	m	addMossyStoneBlock
		p	0		builder
	m	(Lcgx$a;)V	n	addFerns
		p	0		builder
	m	(Lcgx$a;)V	o	addRareBerryBushes
		p	0		builder
	m	(Lcgx$a;)V	p	addCommonBerryBushes
		p	0		builder
	m	(Lcgx$a;)V	q	addLightBambooVegetation
		p	0		builder
	m	(Lcgx$a;)V	r	addBambooVegetation
		p	0		builder
	m	(Lcgx$a;)V	s	addTaigaTrees
		p	0		builder
	m	(Lcgx$a;)V	t	addGroveTrees
		p	0		builder
	m	(Lcgx$a;)V	u	addWaterTrees
		p	0		builder
	m	(Lcgx$a;)V	v	addBirchTrees
		p	0		builder
	m	(Lcgx$a;)V	w	addOtherBirchTrees
		p	0		builder
	m	(Lcgx$a;)V	x	addTallBirchTrees
		p	0		builder
	m	(Lcgx$a;)V	y	addSavannaTrees
		p	0		builder
	m	(Lcgx$a;)V	z	addShatteredSavannaTrees
		p	0		builder
c	mg	net/minecraft/data/worldgen/Carvers
	m	(Ljava/lang/String;Ldbv;)Lhc;	a	register
		p	0		id
		p	1		configuredCarver
	f	Lhc;	a	CAVE
	f	Lhc;	b	CAVE_EXTRA_UNDERGROUND
	f	Lhc;	c	CANYON
	f	Lhc;	d	NETHER_CAVE
c	mh	net/minecraft/data/worldgen/DesertVillagePools
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	mi	net/minecraft/data/worldgen/DimensionTypes
	m	(Lhm;)Lhc;	a	bootstrap
		p	0		registry
c	mj	net/minecraft/data/worldgen/NoiseData
	m	(Lhm;)Lhc;	a	bootstrap
	m	(Lhm;ILaai;Laai;Laai;Laai;)V	a	registerBiomeNoises
	m	(Lhm;Laai;ID[D)Lhc;	a	register
c	mk	net/minecraft/data/worldgen/PillagerOutpostPools
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	ml	net/minecraft/data/worldgen/PlainVillagePools
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	mm	net/minecraft/data/worldgen/Pools
	m	()V	a	forceBootstrap
	m	(Ldln;)Lhc;	a	register
		p	0		templatePool
	m	(Lhm;)Lhc;	a	bootstrap
	f	Laai;	a	EMPTY
	f	Lhc;	b	BUILTIN_EMPTY
c	mn	net/minecraft/data/worldgen/ProcessorLists
	m	(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lhc;	a	register
		p	0		id
		p	1		processorList
	f	Lhc;	A	BRIDGE
	f	Lhc;	B	ROOF
	f	Lhc;	C	HIGH_WALL
	f	Lhc;	D	HIGH_RAMPART
	f	Lhc;	E	FOSSIL_ROT
	f	Lhc;	F	FOSSIL_COAL
	f	Lhc;	G	FOSSIL_DIAMONDS
	f	Lhc;	H	ANCIENT_CITY_START_DEGRADATION
	f	Lhc;	I	ANCIENT_CITY_GENERIC_DEGRADATION
	f	Lhc;	J	ANCIENT_CITY_WALLS_DEGRADATION
	f	Ldnl;	K	ADD_GILDED_BLACKSTONE
	f	Ldnl;	L	REMOVE_GILDED_BLACKSTONE
	f	Lhc;	a	EMPTY
	f	Lhc;	b	ZOMBIE_PLAINS
	f	Lhc;	c	ZOMBIE_SAVANNA
	f	Lhc;	d	ZOMBIE_SNOWY
	f	Lhc;	e	ZOMBIE_TAIGA
	f	Lhc;	f	ZOMBIE_DESERT
	f	Lhc;	g	MOSSIFY_10_PERCENT
	f	Lhc;	h	MOSSIFY_20_PERCENT
	f	Lhc;	i	MOSSIFY_70_PERCENT
	f	Lhc;	j	STREET_PLAINS
	f	Lhc;	k	STREET_SAVANNA
	f	Lhc;	l	STREET_SNOWY_OR_TAIGA
	f	Lhc;	m	FARM_PLAINS
	f	Lhc;	n	FARM_SAVANNA
	f	Lhc;	o	FARM_SNOWY
	f	Lhc;	p	FARM_TAIGA
	f	Lhc;	q	FARM_DESERT
	f	Lhc;	r	OUTPOST_ROT
	f	Lhc;	s	BOTTOM_RAMPART
	f	Lhc;	t	TREASURE_ROOMS
	f	Lhc;	u	HOUSING
	f	Lhc;	v	SIDE_WALL_DEGRADATION
	f	Lhc;	w	STABLE_DEGRADATION
	f	Lhc;	x	BASTION_GENERIC_DEGRADATION
	f	Lhc;	y	RAMPART_DEGRADATION
	f	Lhc;	z	ENTRANCE_REPLACEMENT
c	mo	net/minecraft/data/worldgen/SavannaVillagePools
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	mp	net/minecraft/data/worldgen/SnowyVillagePools
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	mq	net/minecraft/data/worldgen/StructureSets
	m	(Laai;Ldkk;)Lhc;	a	register
		p	0		key
		p	1		structureSet
	m	(Laai;Lhc;Ldlb;)Lhc;	a	register
		p	0		key
		p	1		structure
		p	2		placement
	m	(Lhm;)Lhc;	a	bootstrap
	f	Lhc;	a	VILLAGES
	f	Lhc;	b	DESERT_PYRAMIDS
	f	Lhc;	c	IGLOOS
	f	Lhc;	d	JUNGLE_TEMPLES
	f	Lhc;	e	SWAMP_HUTS
	f	Lhc;	f	PILLAGER_OUTPOSTS
	f	Lhc;	g	ANCIENT_CITIES
	f	Lhc;	h	OCEAN_MONUMENTS
	f	Lhc;	i	WOODLAND_MANSIONS
	f	Lhc;	j	BURIED_TREASURES
	f	Lhc;	k	MINESHAFTS
	f	Lhc;	l	RUINED_PORTALS
	f	Lhc;	m	SHIPWRECKS
	f	Lhc;	n	OCEAN_RUINS
	f	Lhc;	o	NETHER_COMPLEXES
	f	Lhc;	p	NETHER_FOSSILS
	f	Lhc;	q	END_CITIES
	f	Lhc;	r	STRONGHOLDS
c	mr	net/minecraft/data/worldgen/Structures
	m	(Laai;Ldke;)Lhc;	a	register
		p	0		key
		p	1		structure
	m	(Lakh;)Lhe;	a	biomes
		p	0		key
	m	(Lakh;Lczq$b;Ldkp;)Ldke$c;	a	structure
		p	0		biomeTag
		p	1		featureStep
		p	2		terrainAdaptation
	m	(Lakh;Ldkp;)Ldke$c;	a	structure
		p	0		biomeTag
		p	1		terrainAdaptation
	m	(Lakh;Ljava/util/Map;Lczq$b;Ldkp;)Ldke$c;	a	structure
		p	0		biomeTag
		p	1		spawns
		p	2		featureStep
		p	3		terrainAdaptation
	m	(Lbbi;)Ldkl;	a	lambda$static$1
	m	(Lhm;)Lhc;	a	bootstrap
	m	(Lbbi;)Lbbi;	b	lambda$static$0
	f	Lhc;	A	RUINED_PORTAL_JUNGLE
	f	Lhc;	B	RUINED_PORTAL_SWAMP
	f	Lhc;	C	RUINED_PORTAL_MOUNTAIN
	f	Lhc;	D	RUINED_PORTAL_OCEAN
	f	Lhc;	E	RUINED_PORTAL_NETHER
	f	Lhc;	F	ANCIENT_CITY
	f	Lhc;	a	PILLAGER_OUTPOST
	f	Lhc;	b	MINESHAFT
	f	Lhc;	c	MINESHAFT_MESA
	f	Lhc;	d	WOODLAND_MANSION
	f	Lhc;	e	JUNGLE_TEMPLE
	f	Lhc;	f	DESERT_PYRAMID
	f	Lhc;	g	IGLOO
	f	Lhc;	h	SHIPWRECK
	f	Lhc;	i	SHIPWRECK_BEACHED
	f	Lhc;	j	SWAMP_HUT
	f	Lhc;	k	STRONGHOLD
	f	Lhc;	l	OCEAN_MONUMENT
	f	Lhc;	m	OCEAN_RUIN_COLD
	f	Lhc;	n	OCEAN_RUIN_WARM
	f	Lhc;	o	FORTRESS
	f	Lhc;	p	NETHER_FOSSIL
	f	Lhc;	q	END_CITY
	f	Lhc;	r	BURIED_TREASURE
	f	Lhc;	s	BASTION_REMNANT
	f	Lhc;	t	VILLAGE_PLAINS
	f	Lhc;	u	VILLAGE_DESERT
	f	Lhc;	v	VILLAGE_SAVANNA
	f	Lhc;	w	VILLAGE_SNOWY
	f	Lhc;	x	VILLAGE_TAIGA
	f	Lhc;	y	RUINED_PORTAL_STANDARD
	f	Lhc;	z	RUINED_PORTAL_DESERT
c	ms	net/minecraft/data/worldgen/SurfaceRuleData
	m	()Ldal$o;	a	overworld
	m	(D)Ldal$f;	a	surfaceNoiseAbove
		p	0		min
	m	(I)[Ldal$o;	a	lambda$overworldLike$0
	m	(Lciw;)Ldal$o;	a	makeStateRule
		p	0		block
	m	(ZZZ)Ldal$o;	a	overworldLike
		p	0		surface
		p	1		bedrockRoof
		p	2		bedrockFloor
	m	()Ldal$o;	b	nether
	m	()Ldal$o;	c	end
	m	()Ldal$o;	d	air
	f	Ldal$o;	A	SOUL_SAND
	f	Ldal$o;	B	SOUL_SOIL
	f	Ldal$o;	C	BASALT
	f	Ldal$o;	D	BLACKSTONE
	f	Ldal$o;	E	WARPED_WART_BLOCK
	f	Ldal$o;	F	WARPED_NYLIUM
	f	Ldal$o;	G	NETHER_WART_BLOCK
	f	Ldal$o;	H	CRIMSON_NYLIUM
	f	Ldal$o;	I	ENDSTONE
	f	Ldal$o;	a	AIR
	f	Ldal$o;	b	BEDROCK
	f	Ldal$o;	c	WHITE_TERRACOTTA
	f	Ldal$o;	d	ORANGE_TERRACOTTA
	f	Ldal$o;	e	TERRACOTTA
	f	Ldal$o;	f	RED_SAND
	f	Ldal$o;	g	RED_SANDSTONE
	f	Ldal$o;	h	STONE
	f	Ldal$o;	i	DEEPSLATE
	f	Ldal$o;	j	DIRT
	f	Ldal$o;	k	PODZOL
	f	Ldal$o;	l	COARSE_DIRT
	f	Ldal$o;	m	MYCELIUM
	f	Ldal$o;	n	GRASS_BLOCK
	f	Ldal$o;	o	CALCITE
	f	Ldal$o;	p	GRAVEL
	f	Ldal$o;	q	SAND
	f	Ldal$o;	r	SANDSTONE
	f	Ldal$o;	s	PACKED_ICE
	f	Ldal$o;	t	SNOW_BLOCK
	f	Ldal$o;	u	MUD
	f	Ldal$o;	v	POWDER_SNOW
	f	Ldal$o;	w	ICE
	f	Ldal$o;	x	WATER
	f	Ldal$o;	y	LAVA
	f	Ldal$o;	z	NETHERRACK
c	mt	net/minecraft/data/worldgen/TaigaVillagePools
	m	()V	a	bootstrap
	f	Lhc;	a	START
c	mu	net/minecraft/data/worldgen/TerrainProvider
	m	(F)F	a	calculateMountainRidgeZeroContinentalnessPoint
	m	(FFF)F	a	mountainContinentalness
	m	(FFFF)F	a	calculateSlope
	m	(Lami;FFFFFFLami;)Laku;	a	ridgeSpline
	m	(Lami;FLami;)Laku;	a	buildWeirdnessJaggednessSpline
	m	(Lami;FZLami;)Laku;	a	buildMountainRidgeSplineWithPoints
	m	(Lami;Lami;FFFFFFZZLami;)Laku;	a	buildErosionOffsetSpline
	m	(Lami;Lami;FFLami;)Laku;	a	buildRidgeJaggednessSpline
	m	(Lami;Lami;Lami;FFFFLami;)Laku;	a	buildErosionJaggednessSpline
	m	(Lami;Lami;Lami;FZLami;)Laku;	a	getErosionFactor
	m	(Lami;Lami;Lami;Lami;Z)Laku;	a	overworldFactor
	m	(Lami;Lami;Lami;Z)Laku;	a	overworldOffset
	m	(F)F	b	lambda$static$2
	m	(Lami;Lami;Lami;Lami;Z)Laku;	b	overworldJaggedness
	m	(F)F	c	lambda$static$1
	m	(F)F	d	lambda$static$0
	f	F	a	DEEP_OCEAN_CONTINENTALNESS
	f	F	b	OCEAN_CONTINENTALNESS
	f	F	c	PLAINS_CONTINENTALNESS
	f	F	d	BEACH_CONTINENTALNESS
	f	Lami;	e	NO_TRANSFORM
	f	Lami;	f	AMPLIFIED_OFFSET
	f	Lami;	g	AMPLIFIED_FACTOR
	f	Lami;	h	AMPLIFIED_JAGGEDNESS
c	mv	net/minecraft/data/worldgen/VillagePools
	m	()V	a	bootstrap
c	mw	net/minecraft/data/worldgen/biome/Biomes
	m	(Lhm;)Lhc;	a	bootstrap
c	mx	net/minecraft/data/worldgen/biome/EndBiomes
	m	()Lcgw;	a	endBarrens
	m	(Lcgx$a;)Lcgw;	a	baseEndBiome
		p	0		builder
	m	()Lcgw;	b	theEnd
	m	()Lcgw;	c	endMidlands
	m	()Lcgw;	d	endHighlands
	m	()Lcgw;	e	smallEndIslands
c	my	net/minecraft/data/worldgen/biome/NetherBiomes
	m	()Lcgw;	a	netherWastes
	m	()Lcgw;	b	soulSandValley
	m	()Lcgw;	c	basaltDeltas
	m	()Lcgw;	d	crimsonForest
	m	()Lcgw;	e	warpedForest
c	mz	net/minecraft/data/worldgen/biome/OverworldBiomes
	m	()Lcgw;	a	sparseJungle
	m	(F)I	a	calculateSkyColor
		p	0		temperature
	m	(FZZZLchi$a;)Lcgw;	a	baseJungle
		p	0		depth
		p	1		bamboo
		p	2		sparse
		p	3		unmodified
		p	4		spawnSettings
	m	(Lcgw$c;FFIILchi$a;Lcgx$a;Lajb;)Lcgw;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		waterColor
		p	4		waterFogColor
		p	5		spawnSettings
		p	6		generationSettings
		p	7		music
	m	(Lcgw$c;FFLchi$a;Lcgx$a;Lajb;)Lcgw;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		spawnSettings
		p	4		generationSettings
		p	5		music
	m	(Lcgx$a;)V	a	globalOverworldGeneration
		p	0		generationSettings
	m	(Lchi$a;IILcgx$a;)Lcgw;	a	baseOcean
		p	0		spawnSettings
		p	1		waterColor
		p	2		waterFogColor
	m	(Z)Lcgw;	a	oldGrowthTaiga
		p	0		spruce
	m	(ZZ)Lcgw;	a	savanna
		p	0		windswept
		p	1		plateau
	m	(ZZZ)Lcgw;	a	plains
		p	0		sunflower
		p	1		snowy
		p	2		iceSpikes
	m	()Lcgw;	b	jungle
	m	(Z)Lcgw;	b	windsweptHills
		p	0		forest
	m	(ZZ)Lcgw;	b	beach
		p	0		snowy
		p	1		stony
	m	(ZZZ)Lcgw;	b	forest
		p	0		birch
		p	1		oldGrowth
		p	2		flower
	m	()Lcgw;	c	bambooJungle
	m	(Z)Lcgw;	c	badlands
		p	0		plateau
	m	()Lcgw;	d	desert
	m	(Z)Lcgw;	d	coldOcean
		p	0		deep
	m	()Lcgw;	e	mushroomFields
	m	(Z)Lcgw;	e	ocean
		p	0		deep
	m	()Lcgw;	f	warmOcean
	m	(Z)Lcgw;	f	lukeWarmOcean
		p	0		deep
	m	()Lcgw;	g	darkForest
	m	(Z)Lcgw;	g	frozenOcean
		p	0		monument
	m	()Lcgw;	h	swamp
	m	(Z)Lcgw;	h	taiga
		p	0		cold
	m	()Lcgw;	i	mangroveSwamp
	m	(Z)Lcgw;	i	river
		p	0		frozen
	m	()Lcgw;	j	theVoid
	m	()Lcgw;	k	meadow
	m	()Lcgw;	l	frozenPeaks
	m	()Lcgw;	m	jaggedPeaks
	m	()Lcgw;	n	stonyPeaks
	m	()Lcgw;	o	snowySlopes
	m	()Lcgw;	p	grove
	m	()Lcgw;	q	lushCaves
	m	()Lcgw;	r	dripstoneCaves
	m	()Lcgw;	s	deepDark
	m	()Lcgx$a;	t	baseOceanGeneration
	f	I	a	NORMAL_WATER_COLOR
	f	I	b	NORMAL_WATER_FOG_COLOR
	f	I	c	OVERWORLD_FOG_COLOR
	f	Lajb;	d	NORMAL_MUSIC
c	na	net/minecraft/data/worldgen/biome/package-info
c	nb	net/minecraft/data/worldgen/features/AquaticFeatures
	f	Lhc;	a	SEAGRASS_SHORT
	f	Lhc;	b	SEAGRASS_SLIGHTLY_LESS_SHORT
	f	Lhc;	c	SEAGRASS_MID
	f	Lhc;	d	SEAGRASS_TALL
	f	Lhc;	e	SEA_PICKLE
	f	Lhc;	f	SEAGRASS_SIMPLE
	f	Lhc;	g	KELP
	f	Lhc;	h	WARM_OCEAN_VEGETATION
c	nc	net/minecraft/data/worldgen/features/CaveFeatures
	m	()Lhc;	a	makeSmallDripleaf
	m	(Lgy;)Lhc;	a	makeDripleaf
		p	0		direction
	f	Lcnn;	A	GLOW_LICHEN_BLOCK
	f	Ldhj;	B	CAVE_VINES_BODY_PROVIDER
	f	Ldhf;	C	CAVE_VINES_HEAD_PROVIDER
	f	Lcnn;	D	SCULK_VEIN_BLOCK
	f	Lhc;	a	MONSTER_ROOM
	f	Lhc;	b	FOSSIL_COAL
	f	Lhc;	c	FOSSIL_DIAMONDS
	f	Lhc;	d	DRIPSTONE_CLUSTER
	f	Lhc;	e	LARGE_DRIPSTONE
	f	Lhc;	f	POINTED_DRIPSTONE
	f	Lhc;	g	UNDERWATER_MAGMA
	f	Lhc;	h	GLOW_LICHEN
	f	Lhc;	i	ROOTED_AZALEA_TREE
	f	Lhc;	j	CAVE_VINE
	f	Lhc;	k	CAVE_VINE_IN_MOSS
	f	Lhc;	l	MOSS_VEGETATION
	f	Lhc;	m	MOSS_PATCH
	f	Lhc;	n	MOSS_PATCH_BONEMEAL
	f	Lhc;	o	DRIPLEAF
	f	Lhc;	p	CLAY_WITH_DRIPLEAVES
	f	Lhc;	q	CLAY_POOL_WITH_DRIPLEAVES
	f	Lhc;	r	LUSH_CAVES_CLAY
	f	Lhc;	s	MOSS_PATCH_CEILING
	f	Lhc;	t	SPORE_BLOSSOM
	f	Lhc;	u	AMETHYST_GEODE
	f	Lhc;	v	SCULK_PATCH_DEEP_DARK
	f	Lhc;	w	SCULK_PATCH_ANCIENT_CITY
	f	Lhc;	x	SCULK_VEIN
	f	Ljava/util/List;	y	FOSSIL_STRUCTURES
	f	Ljava/util/List;	z	FOSSIL_COAL_STRUCTURES
c	nd	net/minecraft/data/worldgen/features/EndFeatures
	f	Lhc;	a	END_SPIKE
	f	Lhc;	b	END_GATEWAY_RETURN
	f	Lhc;	c	END_GATEWAY_DELAYED
	f	Lhc;	d	CHORUS_PLANT
	f	Lhc;	e	END_ISLAND
c	ne	net/minecraft/data/worldgen/features/FeatureUtils
	m	(ILhc;)Ldfn;	a	simpleRandomPatchConfiguration
		p	0		tries
		p	1		feature
	m	(Ldcw;Ldfa;)Ldfn;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
	m	(Ldcw;Ldfa;Ljava/util/List;)Ldfn;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
	m	(Ldcw;Ldfa;Ljava/util/List;I)Ldfn;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
		p	3		tries
	m	(Lhm;)Lhc;	a	bootstrap
	m	(Ljava/lang/String;Ldcw;)Lhc;	a	register
		p	0		id
		p	1		feature
	m	(Ljava/lang/String;Ldcw;Ldfa;)Lhc;	a	register
		p	0		id
		p	1		feature
		p	2		config
	m	(Ljava/util/List;)Ldaz;	a	simplePatchPredicate
		p	0		validGround
c	nf	net/minecraft/data/worldgen/features/MiscOverworldFeatures
	f	Lhc;	a	ICE_SPIKE
	f	Lhc;	b	ICE_PATCH
	f	Lhc;	c	FOREST_ROCK
	f	Lhc;	d	ICEBERG_PACKED
	f	Lhc;	e	ICEBERG_BLUE
	f	Lhc;	f	BLUE_ICE
	f	Lhc;	g	LAKE_LAVA
	f	Lhc;	h	DISK_CLAY
	f	Lhc;	i	DISK_GRAVEL
	f	Lhc;	j	DISK_SAND
	f	Lhc;	k	FREEZE_TOP_LAYER
	f	Lhc;	l	DISK_GRASS
	f	Lhc;	m	BONUS_CHEST
	f	Lhc;	n	VOID_START_PLATFORM
	f	Lhc;	o	DESERT_WELL
	f	Lhc;	p	SPRING_LAVA_OVERWORLD
	f	Lhc;	q	SPRING_LAVA_FROZEN
	f	Lhc;	r	SPRING_WATER
c	ng	net/minecraft/data/worldgen/features/NetherFeatures
	f	Lhc;	a	DELTA
	f	Lhc;	b	SMALL_BASALT_COLUMNS
	f	Lhc;	c	LARGE_BASALT_COLUMNS
	f	Lhc;	d	BASALT_BLOBS
	f	Lhc;	e	BLACKSTONE_BLOBS
	f	Lhc;	f	GLOWSTONE_EXTRA
	f	Ldhj;	g	CRIMSON_VEGETATION_PROVIDER
	f	Lhc;	h	CRIMSON_FOREST_VEGETATION
	f	Lhc;	i	CRIMSON_FOREST_VEGETATION_BONEMEAL
	f	Ldhj;	j	WARPED_VEGETATION_PROVIDER
	f	Lhc;	k	WARPED_FOREST_VEGETION
	f	Lhc;	l	WARPED_FOREST_VEGETATION_BONEMEAL
	f	Lhc;	m	NETHER_SPROUTS
	f	Lhc;	n	NETHER_SPROUTS_BONEMEAL
	f	Lhc;	o	TWISTING_VINES
	f	Lhc;	p	TWISTING_VINES_BONEMEAL
	f	Lhc;	q	WEEPING_VINES
	f	Lhc;	r	PATCH_CRIMSON_ROOTS
	f	Lhc;	s	BASALT_PILLAR
	f	Lhc;	t	SPRING_LAVA_NETHER
	f	Lhc;	u	SPRING_NETHER_CLOSED
	f	Lhc;	v	SPRING_NETHER_OPEN
	f	Lhc;	w	PATCH_FIRE
	f	Lhc;	x	PATCH_SOUL_FIRE
c	nh	net/minecraft/data/worldgen/features/OreFeatures
	f	Lhc;	A	ORE_IRON_SMALL
	f	Lhc;	B	ORE_GOLD
	f	Lhc;	C	ORE_GOLD_BURIED
	f	Lhc;	D	ORE_REDSTONE
	f	Lhc;	E	ORE_DIAMOND_SMALL
	f	Lhc;	F	ORE_DIAMOND_LARGE
	f	Lhc;	G	ORE_DIAMOND_BURIED
	f	Lhc;	H	ORE_LAPIS
	f	Lhc;	I	ORE_LAPIS_BURIED
	f	Lhc;	J	ORE_INFESTED
	f	Lhc;	K	ORE_EMERALD
	f	Lhc;	L	ORE_ANCIENT_DEBRIS_LARGE
	f	Lhc;	M	ORE_ANCIENT_DEBRIS_SMALL
	f	Lhc;	N	ORE_COPPPER_SMALL
	f	Lhc;	O	ORE_COPPER_LARGE
	f	Lhc;	P	ORE_CLAY
	f	Ldnq;	a	NATURAL_STONE
	f	Ldnq;	b	STONE_ORE_REPLACEABLES
	f	Ldnq;	c	DEEPSLATE_ORE_REPLACEABLES
	f	Ldnq;	d	NETHERRACK
	f	Ldnq;	e	NETHER_ORE_REPLACEABLES
	f	Ljava/util/List;	f	ORE_IRON_TARGET_LIST
	f	Ljava/util/List;	g	ORE_GOLD_TARGET_LIST
	f	Ljava/util/List;	h	ORE_DIAMOND_TARGET_LIST
	f	Ljava/util/List;	i	ORE_LAPIS_TARGET_LIST
	f	Ljava/util/List;	j	ORE_COPPER_TARGET_LIST
	f	Ljava/util/List;	k	ORE_COAL_TARGET_LIST
	f	Lhc;	l	ORE_MAGMA
	f	Lhc;	m	ORE_SOUL_SAND
	f	Lhc;	n	ORE_NETHER_GOLD
	f	Lhc;	o	ORE_QUARTZ
	f	Lhc;	p	ORE_GRAVEL_NETHER
	f	Lhc;	q	ORE_BLACKSTONE
	f	Lhc;	r	ORE_DIRT
	f	Lhc;	s	ORE_GRAVEL
	f	Lhc;	t	ORE_GRANITE
	f	Lhc;	u	ORE_DIORITE
	f	Lhc;	v	ORE_ANDESITE
	f	Lhc;	w	ORE_TUFF
	f	Lhc;	x	ORE_COAL
	f	Lhc;	y	ORE_COAL_BURIED
	f	Lhc;	z	ORE_IRON
c	ni	net/minecraft/data/worldgen/features/PileFeatures
	f	Lhc;	a	PILE_HAY
	f	Lhc;	b	PILE_MELON
	f	Lhc;	c	PILE_SNOW
	f	Lhc;	d	PILE_ICE
	f	Lhc;	e	PILE_PUMPKIN
c	nj	net/minecraft/data/worldgen/features/TreeFeatures
	m	()Ldfw$a;	a	createOak
	m	(Lciw;Lciw;IIII)Ldfw$a;	a	createStraightBlobTree
		p	0		log
		p	1		leaves
		p	2		baseHeight
		p	3		firstRandomHeight
		p	4		secondRandomHeight
		p	5		radius
	m	()Ldfw$a;	b	createBirch
	m	()Ldfw$a;	c	createSuperBirch
	m	()Ldfw$a;	d	createJungleTree
	m	()Ldfw$a;	e	createFancyOak
	f	Lhc;	A	OAK_BEES_002
	f	Lhc;	B	OAK_BEES_005
	f	Lhc;	C	BIRCH_BEES_0002
	f	Lhc;	D	BIRCH_BEES_002
	f	Lhc;	E	BIRCH_BEES_005
	f	Lhc;	F	FANCY_OAK_BEES_0002
	f	Lhc;	G	FANCY_OAK_BEES_002
	f	Lhc;	H	FANCY_OAK_BEES_005
	f	Lhc;	I	FANCY_OAK_BEES
	f	Ldhn;	J	BEEHIVE_0002
	f	Ldhn;	K	BEEHIVE_001
	f	Ldhn;	L	BEEHIVE_002
	f	Ldhn;	M	BEEHIVE_005
	f	Ldhn;	N	BEEHIVE
	f	Lhc;	a	CRIMSON_FUNGUS
	f	Lhc;	b	CRIMSON_FUNGUS_PLANTED
	f	Lhc;	c	WARPED_FUNGUS
	f	Lhc;	d	WARPED_FUNGUS_PLANTED
	f	Lhc;	e	HUGE_BROWN_MUSHROOM
	f	Lhc;	f	HUGE_RED_MUSHROOM
	f	Lhc;	g	OAK
	f	Lhc;	h	DARK_OAK
	f	Lhc;	i	BIRCH
	f	Lhc;	j	ACACIA
	f	Lhc;	k	SPRUCE
	f	Lhc;	l	PINE
	f	Lhc;	m	JUNGLE_TREE
	f	Lhc;	n	FANCY_OAK
	f	Lhc;	o	JUNGLE_TREE_NO_VINE
	f	Lhc;	p	MEGA_JUNGLE_TREE
	f	Lhc;	q	MEGA_SPRUCE
	f	Lhc;	r	MEGA_PINE
	f	Lhc;	s	SUPER_BIRCH_BEES_0002
	f	Lhc;	t	SUPER_BIRCH_BEES
	f	Lhc;	u	SWAMP_OAK
	f	Lhc;	v	JUNGLE_BUSH
	f	Lhc;	w	AZALEA_TREE
	f	Lhc;	x	MANGROVE
	f	Lhc;	y	TALL_MANGROVE
	f	Lhc;	z	OAK_BEES_0002
c	nk	net/minecraft/data/worldgen/features/VegetationFeatures
	m	(Ldgz;I)Ldfn;	a	grassPatch
		p	0		block
		p	1		tries
	f	Lhc;	A	TREES_FLOWER_FOREST
	f	Lhc;	B	MEADOW_TREES
	f	Lhc;	C	TREES_TAIGA
	f	Lhc;	D	TREES_GROVE
	f	Lhc;	E	TREES_SAVANNA
	f	Lhc;	F	BIRCH_TALL
	f	Lhc;	G	TREES_WINDSWEPT_HILLS
	f	Lhc;	H	TREES_WATER
	f	Lhc;	I	TREES_BIRCH_AND_OAK
	f	Lhc;	J	TREES_PLAINS
	f	Lhc;	K	TREES_SPARSE_JUNGLE
	f	Lhc;	L	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lhc;	M	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lhc;	N	TREES_JUNGLE
	f	Lhc;	O	BAMBOO_VEGETATION
	f	Lhc;	P	MUSHROOM_ISLAND_VEGETATION
	f	Lhc;	Q	MANGROVE_VEGETATION
	f	Lhc;	a	BAMBOO_NO_PODZOL
	f	Lhc;	b	BAMBOO_SOME_PODZOL
	f	Lhc;	c	VINES
	f	Lhc;	d	PATCH_BROWN_MUSHROOM
	f	Lhc;	e	PATCH_RED_MUSHROOM
	f	Lhc;	f	PATCH_SUNFLOWER
	f	Lhc;	g	PATCH_PUMPKIN
	f	Lhc;	h	PATCH_BERRY_BUSH
	f	Lhc;	i	PATCH_TAIGA_GRASS
	f	Lhc;	j	PATCH_GRASS
	f	Lhc;	k	PATCH_GRASS_JUNGLE
	f	Lhc;	l	SINGLE_PIECE_OF_GRASS
	f	Lhc;	m	PATCH_DEAD_BUSH
	f	Lhc;	n	PATCH_MELON
	f	Lhc;	o	PATCH_WATERLILY
	f	Lhc;	p	PATCH_TALL_GRASS
	f	Lhc;	q	PATCH_LARGE_FERN
	f	Lhc;	r	PATCH_CACTUS
	f	Lhc;	s	PATCH_SUGAR_CANE
	f	Lhc;	t	FLOWER_DEFAULT
	f	Lhc;	u	FLOWER_FLOWER_FOREST
	f	Lhc;	v	FLOWER_SWAMP
	f	Lhc;	w	FLOWER_PLAIN
	f	Lhc;	x	FLOWER_MEADOW
	f	Lhc;	y	FOREST_FLOWERS
	f	Lhc;	z	DARK_FOREST_VEGETATION
c	nl	net/minecraft/data/worldgen/features/package-info
c	nm	net/minecraft/data/worldgen/package-info
c	nn	net/minecraft/data/worldgen/placement/AquaticPlacements
	m	(I)Ljava/util/List;	a	seagrassPlacement
		p	0		count
	f	Lhc;	a	SEAGRASS_WARM
	f	Lhc;	b	SEAGRASS_NORMAL
	f	Lhc;	c	SEAGRASS_COLD
	f	Lhc;	d	SEAGRASS_RIVER
	f	Lhc;	e	SEAGRASS_SWAMP
	f	Lhc;	f	SEAGRASS_DEEP_WARM
	f	Lhc;	g	SEAGRASS_DEEP
	f	Lhc;	h	SEAGRASS_DEEP_COLD
	f	Lhc;	i	SEAGRASS_SIMPLE
	f	Lhc;	j	SEA_PICKLE
	f	Lhc;	k	KELP_COLD
	f	Lhc;	l	KELP_WARM
	f	Lhc;	m	WARM_OCEAN_VEGETATION
c	no	net/minecraft/data/worldgen/placement/CavePlacements
	f	Lhc;	a	MONSTER_ROOM
	f	Lhc;	b	MONSTER_ROOM_DEEP
	f	Lhc;	c	FOSSIL_UPPER
	f	Lhc;	d	FOSSIL_LOWER
	f	Lhc;	e	DRIPSTONE_CLUSTER
	f	Lhc;	f	LARGE_DRIPSTONE
	f	Lhc;	g	POINTED_DRIPSTONE
	f	Lhc;	h	UNDERWATER_MAGMA
	f	Lhc;	i	GLOW_LICHEN
	f	Lhc;	j	ROOTED_AZALEA_TREE
	f	Lhc;	k	CAVE_VINES
	f	Lhc;	l	LUSH_CAVES_VEGETATION
	f	Lhc;	m	LUSH_CAVES_CLAY
	f	Lhc;	n	LUSH_CAVES_CEILING_VEGETATION
	f	Lhc;	o	SPORE_BLOSSOM
	f	Lhc;	p	CLASSIC_VINES
	f	Lhc;	q	AMETHYST_GEODE
	f	Lhc;	r	SCULK_PATCH_DEEP_DARK
	f	Lhc;	s	SCULK_PATCH_ANCIENT_CITY
	f	Lhc;	t	SCULK_VEIN
c	np	net/minecraft/data/worldgen/placement/EndPlacements
	f	Lhc;	a	END_SPIKE
	f	Lhc;	b	END_GATEWAY_RETURN
	f	Lhc;	c	CHORUS_PLANT
	f	Lhc;	d	END_ISLAND_DECORATED
c	nq	net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	f	Lhc;	a	ICE_SPIKE
	f	Lhc;	b	ICE_PATCH
	f	Lhc;	c	FOREST_ROCK
	f	Lhc;	d	ICEBERG_PACKED
	f	Lhc;	e	ICEBERG_BLUE
	f	Lhc;	f	BLUE_ICE
	f	Lhc;	g	LAKE_LAVA_UNDERGROUND
	f	Lhc;	h	LAKE_LAVA_SURFACE
	f	Lhc;	i	DISK_CLAY
	f	Lhc;	j	DISK_GRAVEL
	f	Lhc;	k	DISK_SAND
	f	Lhc;	l	DISK_GRASS
	f	Lhc;	m	FREEZE_TOP_LAYER
	f	Lhc;	n	VOID_START_PLATFORM
	f	Lhc;	o	DESERT_WELL
	f	Lhc;	p	SPRING_LAVA
	f	Lhc;	q	SPRING_LAVA_FROZEN
	f	Lhc;	r	SPRING_WATER
c	nr	net/minecraft/data/worldgen/placement/NetherPlacements
	f	Lhc;	a	DELTA
	f	Lhc;	b	SMALL_BASALT_COLUMNS
	f	Lhc;	c	LARGE_BASALT_COLUMNS
	f	Lhc;	d	BASALT_BLOBS
	f	Lhc;	e	BLACKSTONE_BLOBS
	f	Lhc;	f	GLOWSTONE_EXTRA
	f	Lhc;	g	GLOWSTONE
	f	Lhc;	h	CRIMSON_FOREST_VEGETATION
	f	Lhc;	i	WARPED_FOREST_VEGETATION
	f	Lhc;	j	NETHER_SPROUTS
	f	Lhc;	k	TWISTING_VINES
	f	Lhc;	l	WEEPING_VINES
	f	Lhc;	m	PATCH_CRIMSON_ROOTS
	f	Lhc;	n	BASALT_PILLAR
	f	Lhc;	o	SPRING_DELTA
	f	Lhc;	p	SPRING_CLOSED
	f	Lhc;	q	SPRING_CLOSED_DOUBLE
	f	Lhc;	r	SPRING_OPEN
	f	Ljava/util/List;	s	FIRE_PLACEMENT
	f	Lhc;	t	PATCH_SOUL_FIRE
	f	Lhc;	u	PATCH_FIRE
c	ns	net/minecraft/data/worldgen/placement/OrePlacements
	m	(ILdjm;)Ljava/util/List;	a	commonOrePlacement
		p	0		count
		p	1		heightModifier
	m	(Ldjm;Ldjm;)Ljava/util/List;	a	orePlacement
		p	0		countModifier
		p	1		heightModifier
	m	(ILdjm;)Ljava/util/List;	b	rareOrePlacement
		p	0		chance
		p	1		heightModifier
	f	Lhc;	A	ORE_REDSTONE_LOWER
	f	Lhc;	B	ORE_DIAMOND
	f	Lhc;	C	ORE_DIAMOND_LARGE
	f	Lhc;	D	ORE_DIAMOND_BURIED
	f	Lhc;	E	ORE_LAPIS
	f	Lhc;	F	ORE_LAPIS_BURIED
	f	Lhc;	G	ORE_INFESTED
	f	Lhc;	H	ORE_EMERALD
	f	Lhc;	I	ORE_ANCIENT_DEBRIS_LARGE
	f	Lhc;	J	ORE_ANCIENT_DEBRIS_SMALL
	f	Lhc;	K	ORE_COPPER
	f	Lhc;	L	ORE_COPPER_LARGE
	f	Lhc;	M	ORE_CLAY
	f	Lhc;	a	ORE_MAGMA
	f	Lhc;	b	ORE_SOUL_SAND
	f	Lhc;	c	ORE_GOLD_DELTAS
	f	Lhc;	d	ORE_QUARTZ_DELTAS
	f	Lhc;	e	ORE_GOLD_NETHER
	f	Lhc;	f	ORE_QUARTZ_NETHER
	f	Lhc;	g	ORE_GRAVEL_NETHER
	f	Lhc;	h	ORE_BLACKSTONE
	f	Lhc;	i	ORE_DIRT
	f	Lhc;	j	ORE_GRAVEL
	f	Lhc;	k	ORE_GRANITE_UPPER
	f	Lhc;	l	ORE_GRANITE_LOWER
	f	Lhc;	m	ORE_DIORITE_UPPER
	f	Lhc;	n	ORE_DIORITE_LOWER
	f	Lhc;	o	ORE_ANDESITE_UPPER
	f	Lhc;	p	ORE_ANDESITE_LOWER
	f	Lhc;	q	ORE_TUFF
	f	Lhc;	r	ORE_COAL_UPPER
	f	Lhc;	s	ORE_COAL_LOWER
	f	Lhc;	t	ORE_IRON_UPPER
	f	Lhc;	u	ORE_IRON_MIDDLE
	f	Lhc;	v	ORE_IRON_SMALL
	f	Lhc;	w	ORE_GOLD_EXTRA
	f	Lhc;	x	ORE_GOLD
	f	Lhc;	y	ORE_GOLD_LOWER
	f	Lhc;	z	ORE_REDSTONE
c	nt	net/minecraft/data/worldgen/placement/PlacementUtils
	m	()Ldjl;	a	isEmpty
	m	(IFI)Ldjm;	a	countExtra
		p	0		count
		p	1		extraChance
		p	2		extraCount
	m	(Lciw;)Ldiy;	a	filteredByBlockSurvival
		p	0		block
	m	(Ldcw;Ldfa;)Lhc;	a	onlyWhenEmpty
		p	0		feature
		p	1		featureConfig
	m	(Ldcw;Ldfa;Ldaz;)Lhc;	a	filtered
		p	0		feature
		p	1		featureConfig
		p	2		predicate
	m	(Ldcw;Ldfa;[Ldjm;)Lhc;	a	inlinePlaced
		p	0		feature
		p	1		featureConfig
		p	2		modifiers
	m	(Lhc;[Ldjm;)Lhc;	a	inlinePlaced
		p	0		registryEntry
		p	1		modifiers
	m	(Lhm;)Lhc;	a	bootstrap
	m	(Ljava/lang/String;Lhc;Ljava/util/List;)Lhc;	a	register
		p	0		id
		p	1		registryEntry
		p	2		modifiers
	m	(Ljava/lang/String;Lhc;[Ldjm;)Lhc;	a	register
		p	0		id
		p	1		registryEntry
		p	2		modifiers
	f	Ldjm;	a	HEIGHTMAP
	f	Ldjm;	b	HEIGHTMAP_TOP_SOLID
	f	Ldjm;	c	HEIGHTMAP_WORLD_SURFACE
	f	Ldjm;	d	HEIGHTMAP_OCEAN_FLOOR
	f	Ldjm;	e	FULL_RANGE
	f	Ldjm;	f	RANGE_10_10
	f	Ldjm;	g	RANGE_8_8
	f	Ldjm;	h	RANGE_4_4
	f	Ldjm;	i	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
c	nu	net/minecraft/data/worldgen/placement/TreePlacements
	f	Lhc;	A	FANCY_OAK_BEES_0002
	f	Lhc;	B	FANCY_OAK_BEES_002
	f	Lhc;	C	FANCY_OAK_BEES
	f	Lhc;	a	CRIMSON_FUNGI
	f	Lhc;	b	WARPED_FUNGI
	f	Lhc;	c	OAK_CHECKED
	f	Lhc;	d	DARK_OAK_CHECKED
	f	Lhc;	e	BIRCH_CHECKED
	f	Lhc;	f	ACACIA_CHECKED
	f	Lhc;	g	SPRUCE_CHECKED
	f	Lhc;	h	MANGROVE_CHECKED
	f	Ldaz;	i	SNOW_TREE_PREDICATE
	f	Ljava/util/List;	j	SNOW_TREE_FILTER_DECORATOR
	f	Lhc;	k	PINE_ON_SNOW
	f	Lhc;	l	SPRUCE_ON_SNOW
	f	Lhc;	m	PINE_CHECKED
	f	Lhc;	n	JUNGLE_TREE_CHECKED
	f	Lhc;	o	FANCY_OAK_CHECKED
	f	Lhc;	p	MEGA_JUNGLE_TREE_CHECKED
	f	Lhc;	q	MEGA_SPRUCE_CHECKED
	f	Lhc;	r	MEGA_PINE_CHECKED
	f	Lhc;	s	TALL_MANGROVE_CHECKED
	f	Lhc;	t	JUNGLE_BUSH
	f	Lhc;	u	SUPER_BIRCH_BEES_0002
	f	Lhc;	v	SUPER_BIRCH_BEES
	f	Lhc;	w	OAK_BEES_0002
	f	Lhc;	x	OAK_BEES_002
	f	Lhc;	y	BIRCH_BEES_0002_PLACED
	f	Lhc;	z	BIRCH_BEES_002
c	nv	net/minecraft/data/worldgen/placement/VegetationPlacements
	m	(I)Ljava/util/List;	a	worldSurfaceSquaredWithCount
		p	0		count
	m	(ILdjm;)Ljava/util/List;	a	getMushroomPlacement
		p	0		chance
		p	1		modifier
	m	(Ldjm;)Ljava/util/List;	a	treePlacement
		p	0		modifier
	m	(Ldjm;Lciw;)Ljava/util/List;	a	treePlacement
		p	0		modifier
		p	1		block
	m	(Ldjm;)Lcom/google/common/collect/ImmutableList$Builder;	b	treePlacementBase
		p	0		countModifier
	f	Lhc;	A	PATCH_CACTUS_DECORATED
	f	Lhc;	B	PATCH_SUGAR_CANE_SWAMP
	f	Lhc;	C	PATCH_SUGAR_CANE_DESERT
	f	Lhc;	D	PATCH_SUGAR_CANE_BADLANDS
	f	Lhc;	E	PATCH_SUGAR_CANE
	f	Lhc;	F	BROWN_MUSHROOM_NETHER
	f	Lhc;	G	RED_MUSHROOM_NETHER
	f	Lhc;	H	BROWN_MUSHROOM_NORMAL
	f	Lhc;	I	RED_MUSHROOM_NORMAL
	f	Lhc;	J	BROWN_MUSHROOM_TAIGA
	f	Lhc;	K	RED_MUSHROOM_TAIGA
	f	Lhc;	L	BROWN_MUSHROOM_OLD_GROWTH
	f	Lhc;	M	RED_MUSHROOM_OLD_GROWTH
	f	Lhc;	N	BROWN_MUSHROOM_SWAMP
	f	Lhc;	O	RED_MUSHROOM_SWAMP
	f	Lhc;	P	FLOWER_WARM
	f	Lhc;	Q	FLOWER_DEFAULT
	f	Lhc;	R	FLOWER_FLOWER_FOREST
	f	Lhc;	S	FLOWER_SWAMP
	f	Lhc;	T	FLOWER_PLAINS
	f	Lhc;	U	FLOWER_MEADOW
	f	Ldjm;	V	TREE_THRESHOLD
	f	Lhc;	W	TREES_PLAINS
	f	Lhc;	X	DARK_FOREST_VEGETATION
	f	Lhc;	Y	FLOWER_FOREST_FLOWERS
	f	Lhc;	Z	FOREST_FLOWERS
	f	Lhc;	a	BAMBOO_LIGHT
	f	Lhc;	aa	TREES_FLOWER_FOREST
	f	Lhc;	ab	TREES_MEADOW
	f	Lhc;	ac	TREES_TAIGA
	f	Lhc;	ad	TREES_GROVE
	f	Lhc;	ae	TREES_BADLANDS
	f	Lhc;	af	TREES_SNOWY
	f	Lhc;	ag	TREES_SWAMP
	f	Lhc;	ah	TREES_WINDSWEPT_SAVANNA
	f	Lhc;	ai	TREES_SAVANNA
	f	Lhc;	aj	BIRCH_TALL
	f	Lhc;	ak	TREES_BIRCH
	f	Lhc;	al	TREES_WINDSWEPT_FOREST
	f	Lhc;	am	TREES_WINDSWEPT_HILLS
	f	Lhc;	an	TREES_WATER
	f	Lhc;	ao	TREES_BIRCH_AND_OAK
	f	Lhc;	ap	TREES_SPARSE_JUNGLE
	f	Lhc;	aq	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lhc;	ar	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lhc;	as	TREES_JUNGLE
	f	Lhc;	at	BAMBOO_VEGETATION
	f	Lhc;	au	MUSHROOM_ISLAND_VEGETATION
	f	Lhc;	av	TREES_MANGROVE
	f	Lhc;	b	BAMBOO
	f	Lhc;	c	VINES
	f	Lhc;	d	PATCH_SUNFLOWER
	f	Lhc;	e	PATCH_PUMPKIN
	f	Lhc;	f	PATCH_GRASS_PLAIN
	f	Lhc;	g	PATCH_GRASS_FOREST
	f	Lhc;	h	PATCH_GRASS_BADLANDS
	f	Lhc;	i	PATCH_GRASS_SAVANNA
	f	Lhc;	j	PATCH_GRASS_NORMAL
	f	Lhc;	k	PATCH_GRASS_TAIGA_2
	f	Lhc;	l	PATCH_GRASS_TAIGA
	f	Lhc;	m	PATCH_GRASS_JUNGLE
	f	Lhc;	n	GRASS_BONEMEAL
	f	Lhc;	o	PATCH_DEAD_BUSH_2
	f	Lhc;	p	PATCH_DEAD_BUSH
	f	Lhc;	q	PATCH_DEAD_BUSH_BADLANDS
	f	Lhc;	r	PATCH_MELON
	f	Lhc;	s	PATCH_MELON_SPARSE
	f	Lhc;	t	PATCH_BERRY_COMMON
	f	Lhc;	u	PATCH_BERRY_RARE
	f	Lhc;	v	PATCH_WATERLILY
	f	Lhc;	w	PATCH_TALL_GRASS_2
	f	Lhc;	x	PATCH_TALL_GRASS
	f	Lhc;	y	PATCH_LARGE_FERN
	f	Lhc;	z	PATCH_CACTUS_DESERT
c	nw	net/minecraft/data/worldgen/placement/VillagePlacements
	f	Lhc;	a	PILE_HAY_VILLAGE
	f	Lhc;	b	PILE_MELON_VILLAGE
	f	Lhc;	c	PILE_SNOW_VILLAGE
	f	Lhc;	d	PILE_ICE_VILLAGE
	f	Lhc;	e	PILE_PUMPKIN_VILLAGE
	f	Lhc;	f	OAK_VILLAGE
	f	Lhc;	g	ACACIA_VILLAGE
	f	Lhc;	h	SPRUCE_VILLAGE
	f	Lhc;	i	PINE_VILLAGE
	f	Lhc;	j	PATCH_CACTUS_VILLAGE
	f	Lhc;	k	FLOWER_PLAIN_VILLAGE
	f	Lhc;	l	PATCH_TAIGA_GRASS_VILLAGE
	f	Lhc;	m	PATCH_BERRY_BUSH_VILLAGE
c	nx	net/minecraft/data/worldgen/placement/package-info
c	ny	net/minecraft/gametest/framework/AfterBatch
	m	()Ljava/lang/String;	a	batch
c	nz	net/minecraft/gametest/framework/BeforeBatch
	m	()Ljava/lang/String;	a	batch
c	oa	net/minecraft/gametest/framework/ExhaustedAttemptsException
	m	(IILoj;)V	<init>	<init>
		p	1		attempts
		p	2		successes
		p	3		test
c	ob	net/minecraft/gametest/framework/GameTest
	m	()I	a	timeoutTicks
	m	()Ljava/lang/String;	b	batch
	m	()I	c	rotationSteps
	m	()Z	d	required
	m	()Ljava/lang/String;	e	template
	m	()J	f	setupTicks
	m	()I	g	attempts
	m	()I	h	requiredSuccesses
c	oc	net/minecraft/gametest/framework/GameTestAssertException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	od	net/minecraft/gametest/framework/GameTestAssertPosException
	m	(Ljava/lang/String;Lgt;Lgt;J)V	<init>	<init>
		p	1		message
		p	2		pos
		p	3		relativePos
		p	4		tick
	m	()Ljava/lang/String;	a	getMessageToShowAtBlock
	m	()Lgt;	b	getRelativePos
	m	()Lgt;	c	getAbsolutePos
	f	Lgt;	a	absolutePos
	f	Lgt;	b	relativePos
	f	J	c	tick
c	oe	net/minecraft/gametest/framework/GameTestBatch
	m	(Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		id
		p	2		testFunctions
		p	3		beforeBatchConsumer
		p	4		afterBatchConsumer
	m	()Ljava/lang/String;	a	getName
	m	(Lafo;)V	a	runBeforeBatchFunction
		p	1		world
	m	()Ljava/util/Collection;	b	getTestFunctions
	m	(Lafo;)V	b	runAfterBatchFunction
		p	1		world
	f	Ljava/lang/String;	a	DEFAULT_BATCH_NAME
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Collection;	c	testFunctions
	f	Ljava/util/function/Consumer;	d	beforeBatchFunction
	f	Ljava/util/function/Consumer;	e	afterBatchFunction
c	of	net/minecraft/gametest/framework/GameTestBatchRunner
	m	(Ljava/util/Collection;Lgt;Lcoz;Lafo;Lop;I)V	<init>	<init>
		p	1		batches
		p	2		pos
		p	3		rotation
		p	4		world
		p	5		testManager
		p	6		sizeZ
	m	()Ljava/util/List;	a	getTestInfos
	m	(I)V	a	runBatch
		p	1		index
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	a	lambda$new$2
		p	0		batch
	m	(Lcoz;Lafo;Loe;)Lcom/mojang/datafixers/util/Pair;	a	lambda$new$1
		p	2		batch
	m	(Lcoz;Lafo;Lpa;)Loj;	a	lambda$new$0
		p	2		testFunction
	m	(Ljava/util/Collection;)Ljava/util/Map;	a	createStructuresForBatch
		p	1		gameTests
	m	(Ljava/util/Map;Loj;)V	a	lambda$runBatch$3
		p	2		gameTest
	m	()V	b	start
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgt;	b	firstTestNorthWestCorner
	f	Lafo;	c	level
	f	Lop;	d	testTicker
	f	I	e	testsPerRow
	f	Ljava/util/List;	f	allTestInfos
	f	Ljava/util/List;	g	batches
	f	Lgt$a;	h	nextTestNorthWestCorner
c	of$1	net/minecraft/gametest/framework/GameTestBatchRunner$1
	m	()V	a	testCompleted
	m	(Loj;)V	a	testStructureLoaded
		p	1		test
	m	(Loj;)V	b	testPassed
		p	1		test
	m	(Loj;)V	c	testFailed
		p	1		test
	f	Lou;	a	val$currentBatchTracker
	f	Loe;	b	val$currentBatch
	f	I	c	val$batchIndex
	f	Lof;	d	this$0
c	og	net/minecraft/gametest/framework/GameTestEvent
	m	(Ljava/lang/Long;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		duration
		p	2		task
	m	(JLjava/lang/Runnable;)Log;	a	create
		p	0		duration
		p	2		task
	m	(Ljava/lang/Runnable;)Log;	a	create
		p	0		task
	f	Ljava/lang/Long;	a	expectedDelay
	f	Ljava/lang/Runnable;	b	assertion
c	oh	net/minecraft/gametest/framework/GameTestGenerator
c	oi	net/minecraft/gametest/framework/GameTestHelper
	m	(Loj;)V	<init>	<init>
		p	1		test
	m	()Lafo;	a	getLevel
	m	(I)V	a	setDayTime
		p	1		timeOfDay
	m	(III)V	a	pressButton
		p	1		x
		p	2		y
		p	3		z
	m	(IIILciw;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		block
	m	(IIILcur;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(ILjava/lang/Runnable;)V	a	succeedOnTickWhen
		p	1		duration
		p	2		runnable
	m	(JLgt;)V	a	assertAtTickTimeContainerEmpty
		p	1		delay
		p	3		pos
	m	(JLgt;Lbzw;)V	a	assertAtTickTimeContainerContains
		p	1		delay
		p	3		pos
		p	4		item
	m	(JLjava/lang/Runnable;)V	a	runAtTickTime
		p	1		tick
		p	3		runnable
	m	(Lbaq;)Z	a	lambda$killAllEntities$0
		p	0		entity
	m	(Lbaq;III)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbaq;Lbaq;)Z	a	lambda$assertEntityInstancePresent$14
		p	1		e
	m	(Lbaq;Lgt;)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		pos
	m	(Lbaq;Lgt;Lgt;)Lod;	a	lambda$assertEntityInstancePresent$15
	m	(Lbaq;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V	a	assertEntityProperty
		p	1		entity
		p	2		propertyGetter
		p	3		propertyName
		p	4		expectedValue
	m	(Lbaq;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertEntityProperty
		p	1		entity
		p	2		predicate
		p	3		testName
	m	(Lbau;)V	a	assertEntityPresent
		p	1		type
	m	(Lbau;DDD)V	a	assertEntityTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbau;FFF)Lbaq;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;III)Lbaq;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;Ldvt;)Lbaq;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbau;Lgt;)Lbaq;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbau;Lgt;D)V	a	assertEntityPresent
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbbf;)Lbbf;	a	makeAboutToDrown
		p	1		entity
	m	(Lbbh;Lgt;F)Lon;	a	walkTo
		p	1		entity
		p	2		pos
		p	3		speed
	m	(Lbzw;FFF)Lbpy;	a	spawnItem
		p	1		item
		p	2		x
		p	3		y
		p	4		z
	m	(Lbzw;Lgt;D)V	a	assertItemEntityPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Lbzw;Lgt;DI)V	a	assertItemEntityCountIs
		p	1		item
		p	2		pos
		p	3		radius
		p	5		amount
	m	(Lciw;III)V	a	assertBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lciw;Lgt;)V	a	assertBlockPresent
		p	1		block
		p	2		pos
	m	(Lcur;)Z	a	lambda$pressButton$2
		p	0		state
	m	(Lcur;Lciw;Lciw;)Z	a	lambda$assertBlockPresent$5
		p	2		block1
	m	(Lcvu;Ljava/lang/Comparable;)Ljava/lang/String;	a	lambda$assertBlockProperty$11
	m	(Lcvu;Ljava/lang/Comparable;Lcur;)Z	a	lambda$assertBlockProperty$10
		p	2		state
	m	(Lczu$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ldjw;Lgt;)V	a	assertSameBlockStates
		p	1		checkedBlockBox
		p	2		correctStatePos
	m	(Ldvt;)Ldvt;	a	absoluteVec
		p	1		pos
	m	(Ldvt;Lbaq;)Z	a	lambda$assertEntityNotTouching$17
		p	1		entity
	m	(Lgt;)Lcur;	a	getBlockState
		p	1		pos
	m	(Lgt;J)V	a	pulseRedstone
		p	1		pos
		p	2		delay
	m	(Lgt;Lbau;Ljava/util/function/Function;Ljava/lang/Object;)V	a	assertEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Lgt;Lbzw;)V	a	assertContainerContains
		p	1		pos
		p	2		item
	m	(Lgt;Lciw;)V	a	setBlock
		p	1		pos
		p	2		block
	m	(Lgt;Lciw;Lciw;)Z	a	lambda$assertBlockNotPresent$6
		p	3		block1
	m	(Lgt;Lcur;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Lgt;Lcvu;Ljava/lang/Comparable;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		value
	m	(Lgt;Lcvu;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		predicate
		p	4		errorMessage
	m	(Lgt;Ldjw;Lgt;)V	a	lambda$assertSameBlockStates$18
		p	3		checkedPos
	m	(Lgt;Lgt;)V	a	assertSameBlockState
		p	1		checkedPos
		p	2		correctStatePos
	m	(Lgt;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessage
	m	(Lgt;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(Ljava/lang/Runnable;)V	a	succeedIf
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	a	lambda$onEachTick$26
		p	2		tick
	m	(Ljava/lang/String;)V	a	fail
		p	1		message
	m	(Ljava/lang/String;Lbaq;)V	a	fail
		p	1		message
		p	2		entity
	m	(Ljava/lang/String;Lgt;)V	a	fail
		p	1		message
		p	2		pos
	m	(Ljava/util/function/Consumer;)V	a	forEveryBlockInStructure
		p	1		posConsumer
	m	(Ljava/util/function/Predicate;Lcur;)Z	a	lambda$assertBlock$9
		p	1		state
	m	(Ljava/util/function/Predicate;Lcvu;Lcur;)Z	a	lambda$assertBlockProperty$12
		p	2		state
	m	()V	b	killAllEntities
	m	(III)V	b	pullLever
		p	1		x
		p	2		y
		p	3		z
	m	(JLjava/lang/Runnable;)V	b	runAfterDelay
		p	1		ticks
		p	3		runnable
	m	(Lbau;)V	b	assertEntityNotPresent
		p	1		type
	m	(Lbau;DDD)V	b	assertEntityNotTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbau;FFF)Lbbh;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;III)Lbbh;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;Ldvt;)Lbbh;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbau;Lgt;)Lbbh;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbau;Lgt;D)Ljava/util/List;	b	getEntities
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbbh;Lgt;F)V	b	lambda$walkTo$1
	m	(Lbzw;Lgt;D)V	b	assertItemEntityNotPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Lciw;III)V	b	assertBlockNotPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lciw;Lgt;)V	b	assertBlockNotPresent
		p	1		block
		p	2		pos
	m	(Ldvt;Lbaq;)Z	b	lambda$assertEntityTouching$16
		p	1		entity
	m	(Lgt;)Lcsl;	b	getBlockEntity
		p	1		pos
	m	(Lgt;Lbau;Ljava/util/function/Function;Ljava/lang/Object;)V	b	succeedWhenEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Lgt;Lbzw;)V	b	lambda$assertAtTickTimeContainerContains$19
	m	(Lgt;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	b	assertBlockState
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(Ljava/lang/Runnable;)V	b	succeedWhen
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	b	lambda$failIfEver$25
		p	2		tick
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$assertBlockProperty$13
	m	()Lbtf;	c	makeMockPlayer
	m	(Lbau;III)V	c	assertEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;Lgt;)V	c	assertEntityPresent
		p	1		type
		p	2		pos
	m	(Lciw;III)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lciw;Lgt;)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		pos
	m	(Lgt;)V	c	pressButton
		p	1		pos
	m	(Lgt;Lbau;Ljava/util/function/Function;Ljava/lang/Object;)V	c	lambda$succeedWhenEntityData$21
	m	(Ljava/lang/Runnable;)V	c	failIf
		p	1		task
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$assertBlock$8
	m	()V	d	setNight
	m	(Lbau;III)V	d	assertEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;Lgt;)V	d	assertEntityNotPresent
		p	1		type
		p	2		pos
	m	(Lciw;Lgt;)V	d	lambda$succeedWhenBlockPresent$7
	m	(Lgt;)V	d	useBlock
		p	1		pos
	m	(Ljava/lang/Runnable;)V	d	failIfEver
		p	1		task
	m	()V	e	succeed
	m	(Lbau;III)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;Lgt;)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		pos
	m	(Lgt;)V	e	pullLever
		p	1		pos
	m	(Ljava/lang/Runnable;)V	e	onEachTick
		p	1		runnable
	m	()Lon;	f	startSequence
	m	(Lbau;III)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbau;Lgt;)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		pos
	m	(Lgt;)V	f	destroyBlock
		p	1		pos
	m	()J	g	getTick
	m	(Lbau;Lgt;)V	g	lambda$succeedWhenEntityNotPresent$23
	m	(Lgt;)V	g	assertContainerEmpty
		p	1		pos
	m	()V	h	ensureSingleFinalCheck
	m	(Lbau;Lgt;)V	h	lambda$succeedWhenEntityPresent$22
	m	(Lgt;)V	h	randomTick
		p	1		pos
	m	()Ldvo;	i	getBounds
	m	(Lgt;)Lgt;	i	absolutePos
		p	1		pos
	m	()Ldvo;	j	getRelativeBounds
	m	(Lgt;)Lgt;	j	relativePos
		p	1		pos
	m	()Ljava/lang/Exception;	k	lambda$failIf$24
	m	(Lgt;)V	k	lambda$assertAtTickTimeContainerEmpty$20
	m	()Ljava/lang/String;	l	lambda$pressButton$3
	m	(Lgt;)V	l	lambda$pulseRedstone$4
	f	Loj;	a	testInfo
	f	Z	b	finalCheckAdded
c	oi$1	net/minecraft/gametest/framework/GameTestHelper$1
	m	(Loi;Lcga;Lgt;FLcom/mojang/authlib/GameProfile;Lbti;)V	<init>	<init>
		p	2		world
		p	3		pos
		p	4		yaw
		p	5		gameProfile
		p	6		publicKey
	m	()Z	B_	isSpectator
	m	()Z	f	isCreative
	f	Loi;	b	this$0
c	oj	net/minecraft/gametest/framework/GameTestInfo
	m	(Lpa;Lcoz;Lafo;)V	<init>	<init>
		p	1		testFunction
		p	2		rotation
		p	3		world
	m	()V	A	tickInternal
	m	()V	B	startTest
	m	()Lctr;	C	getStructureBlockEntity
	m	()V	D	finish
	m	()V	a	startExecution
	m	(JLjava/lang/Runnable;)V	a	setRunAtTickTime
		p	1		tick
		p	3		runnable
	m	(Lgt;)V	a	setStructureBlockPos
		p	1		pos
	m	(Lgt;I)V	a	spawnStructure
		p	1		pos
	m	(Ljava/lang/Throwable;)V	a	fail
		p	1		throwable
	m	(Lok;)V	a	addListener
		p	1		listener
	m	(Lon;)V	a	lambda$tickInternal$3
		p	1		runner
	m	()V	b	tick
	m	(Lok;)V	b	lambda$spawnStructure$4
		p	1		listener
	m	(Lon;)V	b	lambda$tickInternal$2
		p	1		runner
	m	()Ljava/lang/String;	c	getTestName
	m	(Lok;)V	c	lambda$tick$1
		p	1		listener
	m	()Lgt;	d	getStructureBlockPos
	m	(Lok;)V	d	lambda$tick$0
		p	1		listener
	m	()Lhs;	e	getStructureSize
	m	()Ldvo;	f	getStructureBounds
	m	()Lafo;	g	getLevel
	m	()Z	h	hasSucceeded
	m	()Z	i	hasFailed
	m	()Z	j	hasStarted
	m	()Z	k	isDone
	m	()J	l	getRunTime
	m	()V	m	succeed
	m	()Ljava/lang/Throwable;	n	getError
	m	()V	o	clearStructure
	m	()J	p	getTick
	m	()Lon;	q	createSequence
	m	()Z	r	isRequired
	m	()Z	s	isOptional
	m	()Ljava/lang/String;	t	getStructureName
	m	()Lcoz;	u	getRotation
	m	()Lpa;	v	getTestFunction
	m	()I	w	getTimeoutTicks
	m	()Z	x	isFlaky
	m	()I	y	maxAttempts
	m	()I	z	requiredSuccesses
	f	Lpa;	a	testFunction
	f	Lgt;	b	structureBlockPos
	f	Lafo;	c	level
	f	Ljava/util/Collection;	d	listeners
	f	I	e	timeoutTicks
	f	Ljava/util/Collection;	f	sequences
	f	Lit/unimi/dsi/fastutil/objects/Object2LongMap;	g	runAtTickTimeMap
	f	J	h	startTick
	f	J	i	tickCount
	f	Z	j	started
	f	Lcom/google/common/base/Stopwatch;	k	timer
	f	Z	l	done
	f	Lcoz;	m	rotation
	f	Ljava/lang/Throwable;	n	error
	f	Lctr;	o	structureBlockEntity
c	ok	net/minecraft/gametest/framework/GameTestListener
	m	(Loj;)V	a	testStructureLoaded
		p	1		test
	m	(Loj;)V	b	testPassed
		p	1		test
	m	(Loj;)V	c	testFailed
		p	1		test
c	ol	net/minecraft/gametest/framework/GameTestRegistry
	m	()Ljava/util/Collection;	a	getAllTestFunctions
	m	(Ljava/lang/Class;)V	a	register
		p	0		testClass
	m	(Ljava/lang/String;)Ljava/util/Collection;	a	getTestFunctionsForClassName
		p	0		testClass
	m	(Ljava/lang/String;Lpa;)Z	a	lambda$findTestFunction$1
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)V	a	register
		p	0		method
	m	(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V	a	registerBatchFunction
		p	0		method
		p	1		clazz
		p	2		batchIdFunction
		p	3		batchConsumerMap
	m	(Ljava/lang/reflect/Method;Ljava/lang/Object;)V	a	lambda$turnMethodIntoConsumer$2
		p	1		args
	m	(Lpa;)V	a	rememberFailedTest
		p	0		testFunction
	m	(Lpa;Ljava/lang/String;)Z	a	isTestFunctionPartOfClass
		p	0		testFunction
		p	1		testClass
	m	()Ljava/util/Collection;	b	getAllTestClassNames
	m	(Ljava/lang/String;)Z	b	isTestClass
		p	0		testClass
	m	(Ljava/lang/String;Lpa;)Z	b	lambda$getTestFunctionsForClassName$0
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)Ljava/util/Collection;	b	useTestGeneratorMethod
		p	0		method
	m	()Ljava/util/Collection;	c	getLastFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	c	getBeforeBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Lpa;	c	turnMethodIntoTestFunction
		p	0		method
	m	()V	d	forgetFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	d	getAfterBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;	d	turnMethodIntoConsumer
		p	0		method
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	findTestFunction
		p	0		structurePath
	m	(Ljava/lang/String;)Lpa;	f	getTestFunction
		p	0		structurePath
	f	Ljava/util/Collection;	a	TEST_FUNCTIONS
	f	Ljava/util/Set;	b	TEST_CLASS_NAMES
	f	Ljava/util/Map;	c	BEFORE_BATCH_FUNCTIONS
	f	Ljava/util/Map;	d	AFTER_BATCH_FUNCTIONS
	f	Ljava/util/Collection;	e	LAST_FAILED_TESTS
c	om	net/minecraft/gametest/framework/GameTestRunner
	m	(Lafo;)V	a	clearMarkers
		p	0		world
	m	(Lafo;Lgt;)V	a	lambda$clearAllTests$3
		p	1		pos
	m	(Lafo;Lgt;Lop;I)V	a	clearAllTests
		p	0		world
		p	1		pos
		p	2		testManager
		p	3		radius
	m	(Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/List;)Loe;	a	lambda$groupTestsIntoBatches$0
		p	4		testFunctions
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	groupTestsIntoBatches
		p	0		testFunctions
	m	(Ljava/util/Collection;Lgt;Lcoz;Lafo;Lop;I)Ljava/util/Collection;	a	runTestBatches
		p	0		batches
		p	1		pos
		p	2		rotation
		p	3		world
		p	4		testManager
		p	5		sizeZ
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$groupTestsIntoBatches$1
		p	0		entry
	m	(Loj;Lgt;Lop;)V	a	runTest
		p	0		test
		p	1		pos
		p	2		testManager
	m	(Lafo;Lgt;)Z	b	lambda$clearAllTests$2
		p	1		pos
	m	(Ljava/util/Collection;Lgt;Lcoz;Lafo;Lop;I)Ljava/util/Collection;	b	runTests
		p	0		testFunctions
		p	1		pos
		p	2		rotation
		p	3		world
		p	4		testManager
		p	5		sizeZ
	f	I	a	PADDING_AROUND_EACH_STRUCTURE
	f	I	b	SPACE_BETWEEN_COLUMNS
	f	I	c	SPACE_BETWEEN_ROWS
	f	I	d	DEFAULT_TESTS_PER_ROW
	f	I	e	MAX_TESTS_PER_BATCH
c	on	net/minecraft/gametest/framework/GameTestSequence
	m	(Loj;)V	<init>	<init>
		p	1		gameTest
	m	()V	a	thenSucceed
	m	(I)Lon;	a	thenIdle
		p	1		minDuration
	m	(ILjava/lang/Runnable;)Lon;	a	thenExecuteAfter
		p	1		minDuration
		p	2		task
	m	(J)V	a	tickAndContinue
		p	1		tick
	m	(JLjava/lang/Runnable;)Lon;	a	thenWaitUntil
		p	1		duration
		p	3		task
	m	(Ljava/lang/Runnable;)Lon;	a	thenWaitUntil
		p	1		task
	m	(Ljava/util/function/Supplier;)V	a	thenFail
		p	1		exceptionSupplier
	m	(Lon$a;)V	a	lambda$thenTrigger$5
	m	()Lon$a;	b	thenTrigger
	m	(ILjava/lang/Runnable;)Lon;	b	thenExecuteFor
		p	1		minDuration
		p	2		task
	m	(J)V	b	tickAndFailIfNotComplete
		p	1		tick
	m	(Ljava/lang/Runnable;)Lon;	b	thenExecute
		p	1		task
	m	(Ljava/util/function/Supplier;)V	b	lambda$thenFail$4
	m	()V	c	lambda$thenIdle$0
	m	(ILjava/lang/Runnable;)V	c	lambda$thenExecuteFor$3
	m	(J)V	c	tick
		p	1		tick
	m	(Ljava/lang/Runnable;)V	c	executeWithoutFail
		p	1		task
	m	(ILjava/lang/Runnable;)V	d	lambda$thenExecuteAfter$2
	m	(Ljava/lang/Runnable;)V	d	lambda$thenExecute$1
	f	Loj;	a	parent
	f	Ljava/util/List;	b	events
	f	J	c	lastTick
c	on$a	net/minecraft/gametest/framework/GameTestSequence$Condition
	m	()V	a	assertTriggeredThisTick
	m	(J)V	a	trigger
		p	1		tick
	f	Lon;	a	this$0
	f	J	b	NOT_TRIGGERED
	f	J	c	triggerTime
c	oo	net/minecraft/gametest/framework/GameTestServer
	m	(Ljava/lang/Thread;Ldqt$c;Lahg;Labc;Ljava/util/Collection;Lgt;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		batches
		p	6		pos
	m	()Z	G_	shouldInformAdmins
	m	(Labb$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$create$2
	m	(Lac;)Lac;	a	fillServerSystemReport
		p	1		details
	m	(Lahu;Lcfo;)Lcom/mojang/datafixers/util/Pair;	a	lambda$create$1
		p	0		resourceManager
		p	1		dataPackSettings
	m	(Lcfw;)V	a	lambda$static$0
		p	0		gameRules
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ljava/lang/Thread;Ldqt$c;Lahg;Ljava/util/Collection;Lgt;)Loo;	a	create
		p	0		thread
		p	1		session
		p	2		resourcePackManager
		p	3		batches
		p	4		pos
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Loj;)V	a	lambda$tickServer$4
		p	0		test
	m	(Lq;)V	a	onServerCrash
		p	1		report
	m	(Lafo;)V	b	startTests
		p	1		world
	m	(Loj;)V	b	lambda$tickServer$3
		p	0		test
	m	()Z	bg	haveTestsStarted
	m	()Z	e	initServer
	m	()V	f	onServerExit
	m	()Z	g	isHardcore
	m	()I	h	getOperatorUserPermissionLevel
	m	()I	i	getFunctionCompilationLevel
	m	()Z	j	shouldRconBroadcast
	m	()Z	k	isDedicatedServer
	m	()I	l	getRateLimitPacketsPerSecond
	m	()Z	m	isEpollEnabled
	m	()Z	n	isCommandBlockEnabled
	m	()Z	o	isPublished
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	I	o	PROGRESS_REPORT_INTERVAL
	f	Laaz;	p	NO_SERVICES
	f	Ljava/util/List;	q	testBatches
	f	Lgt;	r	spawnPos
	f	Lcfw;	s	TEST_GAME_RULES
	f	Lcge;	t	TEST_SETTINGS
	f	Lou;	u	testTracker
c	oo$1	net/minecraft/gametest/framework/GameTestServer$1
	m	(Loo;Lnet/minecraft/server/MinecraftServer;Lhn$a;Ldqw;I)V	<init>	<init>
		p	2		server
		p	3		registryManager
		p	4		saveHandler
		p	5		maxPlayers
	f	Loo;	a	this$0
c	op	net/minecraft/gametest/framework/GameTestTicker
	m	()V	a	clear
	m	(Loj;)V	a	add
		p	1		test
	m	()V	b	tick
	f	Lop;	a	SINGLETON
	f	Ljava/util/Collection;	b	testInfos
c	oq	net/minecraft/gametest/framework/GameTestTimeoutException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	or	net/minecraft/gametest/framework/GlobalTestReporter
	m	()V	a	finish
	m	(Loj;)V	a	onTestFailed
		p	0		test
	m	(Lpc;)V	a	replaceWith
		p	0		listener
	m	(Loj;)V	b	onTestSuccess
		p	0		test
	f	Lpc;	a	DELEGATE
c	os	net/minecraft/gametest/framework/JUnitLikeTestReporter
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()V	a	finish
	m	(Ljava/io/File;)V	a	save
		p	1		file
	m	(Loj;)V	a	onTestFailed
		p	1		test
	m	(Loj;Ljava/lang/String;)Lorg/w3c/dom/Element;	a	createTestCase
		p	1		test
		p	2		name
	m	(Loj;)V	b	onTestSuccess
		p	1		test
	f	Lorg/w3c/dom/Document;	a	document
	f	Lorg/w3c/dom/Element;	b	testSuite
	f	Lcom/google/common/base/Stopwatch;	c	stopwatch
	f	Ljava/io/File;	d	destination
c	ot	net/minecraft/gametest/framework/LogTestReporter
	m	(Loj;)V	a	onTestFailed
		p	1		test
	m	(Loj;)V	b	onTestSuccess
		p	1		test
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ou	net/minecraft/gametest/framework/MultipleTestTracker
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		tests
	m	()I	a	getFailedRequiredCount
	m	(Ljava/lang/StringBuffer;Loj;)V	a	lambda$getProgressBar$1
		p	1		test
	m	(Ljava/util/function/Consumer;)V	a	addFailureListener
		p	1		onFailed
	m	(Loj;)V	a	addTestToTrack
		p	1		test
	m	(Lok;)V	a	addListener
		p	1		listener
	m	(Lok;Loj;)V	a	lambda$addListener$0
		p	1		test
	m	()I	b	getFailedOptionalCount
	m	()I	c	getDoneCount
	m	()Z	d	hasFailedRequired
	m	()Z	e	hasFailedOptional
	m	()Ljava/util/Collection;	f	getFailedRequired
	m	()Ljava/util/Collection;	g	getFailedOptional
	m	()I	h	getTotalCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getProgressBar
	f	C	a	NOT_STARTED_TEST_CHAR
	f	C	b	ONGOING_TEST_CHAR
	f	C	c	SUCCESSFUL_TEST_CHAR
	f	C	d	FAILED_OPTIONAL_TEST_CHAR
	f	C	e	FAILED_REQUIRED_TEST_CHAR
	f	Ljava/util/Collection;	f	tests
	f	Ljava/util/Collection;	g	listeners
c	ou$1	net/minecraft/gametest/framework/MultipleTestTracker$1
	m	(Loj;)V	a	testStructureLoaded
		p	1		test
	m	(Loj;)V	b	testPassed
		p	1		test
	m	(Loj;)V	c	testFailed
		p	1		test
	f	Ljava/util/function/Consumer;	a	val$listener
	f	Lou;	b	this$0
c	ov	net/minecraft/gametest/framework/ReportGameListener
	m	(Loj;Lop;Lgt;)V	<init>	<init>
		p	1		test
		p	2		testManager
		p	3		pos
	m	()V	a	rerunTest
	m	(Lafo;Lgt;Ljava/lang/String;)V	a	showRedBox
		p	0		world
		p	1		pos
		p	2		message
	m	(Lafo;Lp;Ljava/lang/String;)V	a	say
		p	0		world
		p	1		formatting
		p	2		message
	m	(Lafp;)Z	a	lambda$say$1
		p	0		player
	m	(Ljava/lang/String;Lp;Lafp;)V	a	lambda$say$2
		p	2		player
	m	(Ljava/lang/String;ZLjava/lang/String;)Lcaa;	a	createBook
		p	0		text
		p	1		required
		p	2		output
	m	(Ljava/lang/StringBuffer;Ljava/lang/String;)V	a	lambda$createBook$0
		p	1		line
	m	(Loj;)V	a	testStructureLoaded
		p	1		test
	m	(Loj;Lciw;)V	a	spawnBeacon
		p	0		test
		p	1		block
	m	(Loj;Ljava/lang/String;)V	a	reportPassed
		p	0		test
		p	1		output
	m	(Loj;Ljava/lang/Throwable;)V	a	reportFailure
		p	0		test
		p	1		output
	m	(Loj;)V	b	testPassed
		p	1		test
	m	(Loj;Ljava/lang/String;)V	b	visualizePassedTest
		p	0		test
		p	1		output
	m	(Loj;Ljava/lang/Throwable;)V	b	visualizeFailedTest
		p	0		test
		p	1		output
	m	(Loj;)V	c	testFailed
		p	1		test
	m	(Loj;Ljava/lang/String;)V	c	spawnLectern
		p	0		test
		p	1		output
	f	I	a	attempts
	f	I	b	successes
	f	Loj;	c	originalTestInfo
	f	Lop;	d	testTicker
	f	Lgt;	e	structurePos
c	ow	net/minecraft/gametest/framework/StructureUtils
	m	(I)Lcoz;	a	getRotationForRotationSteps
		p	0		steps
	m	(ILafo;Lgt;)V	a	lambda$clearSpaceForStructure$2
		p	2		pos
	m	(ILgt;Lafo;)V	a	clearBlock
		p	0		altitude
		p	1		pos
		p	2		world
	m	(Lbaq;)Z	a	lambda$clearSpaceForStructure$3
		p	0		entity
	m	(Lcoz;)I	a	getRotationStepsForRotation
		p	0		rotation
	m	(Lctr;)Ldvo;	a	getStructureBounds
		p	0		structureBlockEntity
	m	(Ldjw;ILafo;)V	a	clearSpaceForStructure
		p	0		area
		p	1		altitude
		p	2		world
	m	(Lgt;ILafo;)Ljava/util/Optional;	a	findStructureBlockContainingPos
		p	0		pos
		p	1		radius
		p	2		world
	m	(Lgt;Lafo;)V	a	forceLoadChunks
		p	0		pos
		p	1		world
	m	(Lgt;Lafo;Lgt;)Z	a	lambda$findStructureBlockContainingPos$4
		p	2		structureBlockPos
	m	(Lgt;Lgt;)I	a	lambda$findNearestStructureBlock$5
		p	1		pos
	m	(Lgt;Lgt;Lafo;)Z	a	doesStructureContain
		p	0		structureBlockPos
		p	1		pos
		p	2		world
	m	(Lgt;Lgt;Lcoz;Lafo;)V	a	addCommandBlockAndButtonToStartTest
		p	0		pos
		p	1		relativePos
		p	2		rotation
		p	3		world
	m	(Lgt;Lhs;Lcoz;)Ldjw;	a	getStructureBoundingBox
		p	0		pos
		p	1		relativePos
		p	2		rotation
	m	(Ljava/lang/String;Lafo;)Ldnw;	a	getStructureTemplate
		p	0		templateId
		p	1		world
	m	(Ljava/lang/String;Lgt;Lcoz;ILafo;Z)Lctr;	a	spawnStructure
		p	0		templateName
		p	1		pos
		p	2		rotation
		p	4		world
	m	(Ljava/lang/String;Lgt;Lcoz;Lafo;Z)Lctr;	a	createStructureBlock
		p	0		name
		p	1		pos
		p	2		rotation
		p	3		world
	m	(Ljava/lang/String;Lgt;Lhs;Lcoz;Lafo;)V	a	createNewEmptyStructureBlock
		p	0		testName
		p	1		pos
		p	2		relativePos
		p	3		rotation
		p	4		world
	m	(Ljava/nio/file/Path;)Lpj;	a	tryLoadStructure
		p	0		path
	m	([Ljava/lang/String;)V	a	main
		p	0		args
	m	(Lctr;)Ldjw;	b	getStructureBoundingBox
		p	0		structureBlockEntity
	m	(Lgt;ILafo;)Lgt;	b	findNearestStructureBlock
		p	0		pos
		p	1		radius
		p	2		world
	m	(Ljava/nio/file/Path;)V	b	lambda$main$1
		p	0		path
	m	(Lgt;ILafo;)Ljava/util/Collection;	c	findStructureBlocks
		p	0		pos
		p	1		radius
		p	2		world
	m	(Ljava/nio/file/Path;)Z	c	lambda$main$0
		p	0		path
	f	Ljava/lang/String;	a	DEFAULT_TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	b	testStructuresDir
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE
c	ow$1	net/minecraft/gametest/framework/StructureUtils$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	ox	net/minecraft/gametest/framework/TeamcityTestReporter
	m	(Loj;)V	a	onTestFailed
		p	1		test
	m	(Loj;)V	b	onTestSuccess
		p	1		test
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/escape/Escaper;	b	ESCAPER
c	oy	net/minecraft/gametest/framework/TestClassNameArgument
	m	()Loy;	a	testClassName
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getTestClassName
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	oz	net/minecraft/gametest/framework/TestCommand
	m	(Lafo;Lgt;Lou;)V	a	runTest
		p	0		world
		p	1		pos
		p	2		tests
	m	(Lafo;Ljava/lang/String;Lp;)V	a	say
		p	0		world
		p	1		message
		p	2		formatting
	m	(Lafo;Lou;)V	a	showTestSummaryIfAllDone
		p	0		world
		p	1		tests
	m	(Lafo;Lou;Lgt;)V	a	lambda$runAllNearbyTests$24
		p	2		pos
	m	(Lafp;)Z	a	lambda$say$26
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$23
		p	0		context
	m	(Ldr;)I	a	runNearbyTest
		p	0		source
	m	(Ldr;I)I	a	clearAllTests
		p	0		source
		p	1		radius
	m	(Ldr;II)I	a	runAllTests
		p	0		source
		p	1		rotationSteps
		p	2		sizeZ
	m	(Ldr;Ljava/lang/String;)I	a	showPos
		p	0		source
		p	1		variableName
	m	(Ldr;Ljava/lang/String;II)I	a	runAllTestsInClass
		p	0		source
		p	1		testClass
		p	2		rotationSteps
		p	3		sizeZ
	m	(Ldr;Ljava/lang/String;III)I	a	createNewStructure
		p	0		source
		p	1		testName
		p	2		x
		p	3		y
		p	4		z
	m	(Ldr;Ljava/util/Collection;II)V	a	runTests
		p	0		source
		p	1		testFunctions
		p	2		rotationSteps
	m	(Ldr;Lpa;I)I	a	runTest
		p	0		source
		p	1		testFunction
		p	2		rotationSteps
	m	(Ldr;ZII)I	a	runLastFailedTests
		p	0		source
		p	1		requiredOnly
		p	2		rotationSteps
		p	3		sizeZ
	m	(Loj;)V	a	lambda$runTests$25
		p	0		test
	m	(Lp;Ljava/lang/String;Lafp;)V	a	lambda$say$27
		p	2		player
	m	(Lpa;Lafo;)V	a	runTestPreparation
		p	0		testFunction
		p	1		world
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$22
		p	0		context
	m	(Ldr;)I	b	runAllNearbyTests
		p	0		source
	m	(Ldr;Ljava/lang/String;)V	b	say
		p	0		source
		p	1		message
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$21
		p	0		context
	m	(Ldr;)I	c	exportNearestTestStructure
		p	0		source
	m	(Ldr;Ljava/lang/String;)I	c	exportTestStructure
		p	0		source
		p	1		testName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$20
		p	0		context
	m	(Ldr;Ljava/lang/String;)I	d	importTestStructure
		p	0		source
		p	1		testName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$0
		p	0		context
	f	I	a	DEFAULT_CLEAR_RADIUS
	f	I	b	MAX_CLEAR_RADIUS
	f	I	c	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	f	I	d	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	f	I	e	TEST_POS_Z_OFFSET_FROM_PLAYER
	f	I	f	SHOW_POS_DURATION_MS
	f	I	g	DEFAULT_X_SIZE
	f	I	h	DEFAULT_Y_SIZE
	f	I	i	DEFAULT_Z_SIZE
c	oz$a	net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	m	(Lafo;Lou;)V	<init>	<init>
		p	1		world
		p	2		tests
	m	(Loj;)V	a	testStructureLoaded
		p	1		test
	m	(Loj;)V	b	testPassed
		p	1		test
	m	(Loj;)V	c	testFailed
		p	1		test
	f	Lafo;	a	level
	f	Lou;	b	tracker
c	pa	net/minecraft/gametest/framework/TestFunction
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		tickLimit
		p	5		duration
		p	7		required
		p	8		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoz;IJZIILjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		duration
		p	8		required
		p	9		requiredSuccesses
		p	10		maxAttempts
		p	11		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoz;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		duration
		p	8		required
		p	9		starter
	m	()Ljava/lang/String;	a	getTestName
	m	(Loi;)V	a	run
		p	1		context
	m	()Ljava/lang/String;	b	getStructureName
	m	()I	c	getMaxTicks
	m	()Z	d	isRequired
	m	()Ljava/lang/String;	e	getBatchName
	m	()J	f	getSetupTicks
	m	()Lcoz;	g	getRotation
	m	()Z	h	isFlaky
	m	()I	i	getMaxAttempts
	m	()I	j	getRequiredSuccesses
	f	Ljava/lang/String;	a	batchName
	f	Ljava/lang/String;	b	testName
	f	Ljava/lang/String;	c	structureName
	f	Z	d	required
	f	I	e	maxAttempts
	f	I	f	requiredSuccesses
	f	Ljava/util/function/Consumer;	g	function
	f	I	h	maxTicks
	f	J	i	setupTicks
	f	Lcoz;	j	rotation
c	pb	net/minecraft/gametest/framework/TestFunctionArgument
	m	()Lpb;	a	testFunctionArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lpa;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lpa;	a	getTestFunction
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	pc	net/minecraft/gametest/framework/TestReporter
	m	()V	a	finish
	m	(Loj;)V	a	onTestFailed
		p	1		test
	m	(Loj;)V	b	onTestSuccess
		p	1		test
c	pd	net/minecraft/gametest/framework/package-info
c	pe	net/minecraft/locale/Language
	m	()Lpe;	a	getInstance
	m	(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V	a	loadFromJson
		p	0		inputStream
		p	1		entryConsumer
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
	m	(Ljava/util/List;)Ljava/util/List;	a	getVisualOrder
		p	1		texts
	m	(Lpe;)V	a	inject
		p	0		language
	m	(Lrp;)Lalc;	a	getVisualOrder
		p	1		text
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	m	()Lpe;	c	loadDefault
	f	Ljava/lang/String;	a	DEFAULT
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/util/regex/Pattern;	d	UNSUPPORTED_FORMAT_PATTERN
	f	Lpe;	e	instance
c	pe$1	net/minecraft/locale/Language$1
	m	(Lald;Lrv;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getVisualOrder$0
		p	1		style
		p	2		string
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
	m	(Lrp;)Lalc;	a	getVisualOrder
		p	1		text
	m	(Lrp;Lald;)Z	a	lambda$getVisualOrder$1
		p	1		visitor
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	f	Ljava/util/Map;	b	val$storage
c	pf	net/minecraft/locale/package-info
c	pg	net/minecraft/nbt/ByteArrayTag
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([B)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(I)Lph;	a	get
	m	(ILph;)Lph;	a	set
	m	(ILqc;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[B	a	toArray
		p	0		list
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	(I)Lph;	b	remove
	m	(ILph;)V	b	add
	m	(ILqc;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lqc;	c	copy
	m	(I)Lqc;	c	remove
	m	(ILqc;)V	c	add
	m	()[B	d	getAsByteArray
	m	(ILqc;)Lqc;	d	set
	m	()B	e	getElementType
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	[B	c	data
c	pg$1	net/minecraft/nbt/ByteArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILps;)Lpg;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	ph	net/minecraft/nbt/ByteTag
	m	(B)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(B)Lph;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	(Z)Lph;	a	valueOf
		p	0		value
	m	()Lqe;	b	getType
	m	()Lqc;	c	copy
	m	()Lph;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lqe;	a	TYPE
	f	Lph;	b	ZERO
	f	Lph;	c	ONE
	f	I	w	SELF_SIZE_IN_BITS
	f	B	x	data
c	ph$1	net/minecraft/nbt/ByteTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILps;)Lph;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	ph$a	net/minecraft/nbt/ByteTag$Cache
	f	[Lph;	a	cache
c	pi	net/minecraft/nbt/CollectionTag
	m	(ILqc;)Z	a	setTag
		p	1		index
		p	2		element
	m	(ILqc;)Z	b	addTag
		p	1		index
		p	2		element
	m	(I)Lqc;	c	remove
	m	(ILqc;)V	c	add
	m	(ILqc;)Lqc;	d	set
	m	()B	e	getElementType
c	pj	net/minecraft/nbt/CompoundTag
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		entries
	m	()B	a	getId
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
	m	(Ljava/io/DataInput;Lps;)B	a	readNamedTagType
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	getUUID
		p	1		key
	m	(Ljava/lang/String;B)V	a	putByte
		p	1		key
		p	2		value
	m	(Ljava/lang/String;D)V	a	putDouble
		p	1		key
		p	2		value
	m	(Ljava/lang/String;F)V	a	putFloat
		p	1		key
		p	2		value
	m	(Ljava/lang/String;I)V	a	putInt
		p	1		key
		p	2		value
	m	(Ljava/lang/String;J)V	a	putLong
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/List;)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/UUID;)V	a	putUUID
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Lqc;)Lqc;	a	put
		p	1		key
		p	2		element
	m	(Ljava/lang/String;Lqc;Ljava/io/DataOutput;)V	a	writeNamedTag
		p	0		key
		p	1		element
		p	2		output
	m	(Ljava/lang/String;Lqe;Ljava/lang/ClassCastException;)Lq;	a	createReport
		p	1		key
		p	2		reader
		p	3		exception
	m	(Ljava/lang/String;S)V	a	putShort
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Z)V	a	putBoolean
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[B)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[I)V	a	putIntArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[J)V	a	putLongArray
		p	1		key
		p	2		value
	m	(Lpj;)Lpj;	a	merge
		p	1		source
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqe;Ljava/lang/String;Ljava/io/DataInput;ILps;)Lqc;	a	readNamedTagData
		p	0		reader
		p	1		key
		p	2		input
		p	3		depth
		p	4		tracker
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	(Ljava/io/DataInput;Lps;)Ljava/lang/String;	b	readNamedTagName
		p	0		input
		p	1		tracker
	m	(Ljava/lang/String;)Z	b	hasUUID
		p	1		key
	m	(Ljava/lang/String;I)Z	b	contains
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	b	putIntArray
		p	1		key
		p	2		value
	m	(Lpj;)Lcom/mojang/serialization/Dynamic;	b	lambda$static$1
		p	0		nbt
	m	()Lqc;	c	copy
	m	(Ljava/lang/String;)Lqc;	c	get
		p	1		key
	m	(Ljava/lang/String;I)Lpp;	c	getList
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	c	putLongArray
		p	1		key
		p	2		value
	m	()Ljava/util/Set;	d	getAllKeys
	m	(Ljava/lang/String;)B	d	getTagType
		p	1		key
	m	()I	e	size
	m	(Ljava/lang/String;)Z	e	contains
		p	1		key
	m	()Z	f	isEmpty
	m	(Ljava/lang/String;)B	f	getByte
		p	1		key
	m	()Lpj;	g	copy
	m	(Ljava/lang/String;)S	g	getShort
		p	1		key
	m	()Ljava/util/Map;	h	entries
	m	(Ljava/lang/String;)I	h	getInt
		p	1		key
	m	(Ljava/lang/String;)J	i	getLong
		p	1		key
	m	(Ljava/lang/String;)F	j	getFloat
		p	1		key
	m	(Ljava/lang/String;)D	k	getDouble
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	l	getString
		p	1		key
	m	(Ljava/lang/String;)[B	m	getByteArray
		p	1		key
	m	(Ljava/lang/String;)[I	n	getIntArray
		p	1		key
	m	(Ljava/lang/String;)[J	o	getLongArray
		p	1		key
	m	(Ljava/lang/String;)Lpj;	p	getCompound
		p	1		key
	m	(Ljava/lang/String;)Z	q	getBoolean
		p	1		key
	m	(Ljava/lang/String;)V	r	remove
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	s	lambda$createReport$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lqe;	b	TYPE
	f	I	c	SELF_SIZE_IN_BITS
	f	I	w	MAP_ENTRY_SIZE_IN_BITS
	f	Ljava/util/Map;	x	tags
c	pj$1	net/minecraft/nbt/CompoundTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILps;)Lpj;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	pj$2	net/minecraft/nbt/CompoundTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	pk	net/minecraft/nbt/DoubleTag
	m	(D)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(D)Lpk;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	()Lqc;	c	copy
	m	()Lpk;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lpk;	a	ZERO
	f	Lqe;	b	TYPE
	f	I	c	SELF_SIZE_IN_BITS
	f	D	w	data
c	pk$1	net/minecraft/nbt/DoubleTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILps;)Lpk;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	pl	net/minecraft/nbt/EndTag
	m	()B	a	getId
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	()Lqc;	c	copy
	m	()Lpl;	d	copy
	f	Lqe;	a	TYPE
	f	Lpl;	b	INSTANCE
	f	I	c	SELF_SIZE_IN_BITS
c	pl$1	net/minecraft/nbt/EndTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	(Ljava/io/DataInput;ILps;)Lpl;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()Z	d	isValue
c	pm	net/minecraft/nbt/FloatTag
	m	(F)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(F)Lpm;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	()Lqc;	c	copy
	m	()Lpm;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lpm;	a	ZERO
	f	Lqe;	b	TYPE
	f	I	c	SELF_SIZE_IN_BITS
	f	F	w	data
c	pm$1	net/minecraft/nbt/FloatTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILps;)Lpm;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	pn	net/minecraft/nbt/IntArrayTag
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([I)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(I)Lpo;	a	get
	m	(ILpo;)Lpo;	a	set
	m	(ILqc;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[I	a	toArray
		p	0		list
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	(I)Lpo;	b	remove
	m	(ILpo;)V	b	add
	m	(ILqc;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lqc;	c	copy
	m	(I)Lqc;	c	remove
	m	(ILqc;)V	c	add
	m	()Lpn;	d	copy
	m	(ILqc;)Lqc;	d	set
	m	()B	e	getElementType
	m	()[I	f	getAsIntArray
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	[I	c	data
c	pn$1	net/minecraft/nbt/IntArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILps;)Lpn;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	po	net/minecraft/nbt/IntTag
	m	(I)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(I)Lpo;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	()Lqc;	c	copy
	m	()Lpo;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	I	c	data
c	po$1	net/minecraft/nbt/IntTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILps;)Lpo;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	po$a	net/minecraft/nbt/IntTag$Cache
	f	[Lpo;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	pp	net/minecraft/nbt/ListTag
	m	(Ljava/util/List;B)V	<init>	<init>
		p	1		list
		p	2		type
	m	()B	a	getId
	m	(I)Lpj;	a	getCompound
		p	1		index
	m	(ILqc;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqc;)Z	a	updateType
		p	1		element
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	(I)Lpp;	b	getList
		p	1		index
	m	(ILqc;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lqc;	c	copy
	m	(I)Lqc;	c	remove
	m	(ILqc;)V	c	add
	m	()Lpp;	d	copy
	m	(I)S	d	getShort
		p	1		index
	m	(ILqc;)Lqc;	d	set
	m	()B	e	getElementType
	m	(I)I	e	getInt
		p	1		index
	m	()V	f	updateTypeAfterRemove
	m	(I)[I	f	getIntArray
		p	1		index
	m	(I)[J	g	getLongArray
		p	1		index
	m	(I)D	h	getDouble
		p	1		index
	m	(I)F	i	getFloat
		p	1		index
	m	(I)Ljava/lang/String;	j	getString
		p	1		index
	m	(I)Lqc;	k	get
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	Ljava/util/List;	c	list
	f	B	w	type
c	pp$1	net/minecraft/nbt/ListTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILps;)Lpp;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	pp$2	net/minecraft/nbt/ListTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
c	pq	net/minecraft/nbt/LongArrayTag
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([J)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(I)Lpr;	a	get
	m	(ILpr;)Lpr;	a	set
	m	(ILqc;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[J	a	toArray
		p	0		list
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	(I)Lpr;	b	remove
	m	(ILpr;)V	b	add
	m	(ILqc;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lqc;	c	copy
	m	(I)Lqc;	c	remove
	m	(ILqc;)V	c	add
	m	()Lpq;	d	copy
	m	(ILqc;)Lqc;	d	set
	m	()B	e	getElementType
	m	()[J	f	getAsLongArray
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	[J	c	data
c	pq$1	net/minecraft/nbt/LongArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILps;)Lpq;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	pr	net/minecraft/nbt/LongTag
	m	(J)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(J)Lpr;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	()Lqc;	c	copy
	m	()Lpr;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	J	c	data
c	pr$1	net/minecraft/nbt/LongTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILps;)Lpr;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	pr$a	net/minecraft/nbt/LongTag$Cache
	f	[Lpr;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	ps	net/minecraft/nbt/NbtAccounter
	m	(J)V	<init>	<init>
		p	1		maxBytes
	m	(J)V	a	accountBits
		p	1		bits
	f	Lps;	a	UNLIMITED
	f	J	b	quota
	f	J	c	usage
c	ps$1	net/minecraft/nbt/NbtAccounter$1
	m	(J)V	<init>	<init>
		p	1		maxBytes
	m	(J)V	a	accountBits
		p	1		bits
c	pt	net/minecraft/nbt/NbtIo
	m	(Ljava/io/DataInput;)Lpj;	a	read
		p	0		input
	m	(Ljava/io/DataInput;ILps;)Lqc;	a	readUnnamedTag
		p	0		input
		p	1		depth
		p	2		tracker
	m	(Ljava/io/DataInput;Lps;)Lpj;	a	read
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataInput;Lpz;)V	a	parse
		p	0		input
		p	1		scanner
	m	(Ljava/io/File;)Lpj;	a	readCompressed
		p	0		file
	m	(Ljava/io/File;Lpz;)V	a	parseCompressed
		p	0		file
		p	1		scanner
	m	(Ljava/io/InputStream;)Lpj;	a	readCompressed
		p	0		stream
	m	(Ljava/io/InputStream;Lpz;)V	a	parseCompressed
		p	0		stream
		p	1		scanner
	m	(Lpj;Ljava/io/DataOutput;)V	a	write
		p	0		nbt
		p	1		output
	m	(Lpj;Ljava/io/File;)V	a	writeCompressed
		p	0		nbt
		p	1		file
	m	(Lpj;Ljava/io/OutputStream;)V	a	writeCompressed
		p	0		nbt
		p	1		stream
	m	(Lqc;Ljava/io/DataOutput;)V	a	writeUnnamedTag
		p	0		nbt
		p	1		output
	m	(Ljava/io/File;)Lpj;	b	read
		p	0		file
	m	(Ljava/io/InputStream;)Ljava/io/DataInputStream;	b	createDecompressorStream
		p	0		stream
	m	(Lpj;Ljava/io/File;)V	b	write
		p	0		nbt
		p	1		file
c	pt$1	net/minecraft/nbt/NbtIo$1
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	pu	net/minecraft/nbt/NbtOps
	m	()Lqc;	a	empty
	m	(B)Lqc;	a	createByte
	m	(BB)Lpi;	a	createGenericList
		p	0		knownType
		p	1		valueType
	m	(BBB)Z	a	typesMatch
		p	0		knownType
		p	1		valueType
		p	2		expectedType
	m	(D)Lqc;	a	createDouble
	m	(F)Lqc;	a	createFloat
	m	(I)Lqc;	a	createInt
	m	(J)Lqc;	a	createLong
	m	(Lcom/mojang/serialization/DynamicOps;Lqc;)Ljava/lang/Object;	a	convertTo
	m	(Ljava/lang/Number;)Lqc;	a	createNumeric
	m	(Ljava/lang/String;)Lqc;	a	createString
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	lambda$remove$14
		p	1		k
	m	(Ljava/nio/ByteBuffer;)Lqc;	a	createByteList
	m	(Ljava/util/List;Lpj;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$mergeToMap$5
		p	0		entry
	m	(Ljava/util/function/BiConsumer;Lpj;Ljava/lang/String;)V	a	lambda$getMapEntries$7
		p	3		key
	m	(Ljava/util/stream/IntStream;)Lqc;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Lqc;	a	createLongList
	m	(Ljava/util/stream/Stream;)Lqc;	a	createMap
	m	(Lpi;Lqc;)V	a	lambda$fillMany$2
		p	1		nbt
	m	(Lpi;Lqc;Ljava/util/List;)V	a	fillMany
		p	0		destination
		p	1		source
		p	2		additionalValues
	m	(Lpi;Lqc;Lqc;)V	a	fillOne
		p	0		destination
		p	1		source
		p	2		additionalValue
	m	(Lpj;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createMap$9
		p	1		entry
	m	(Lpj;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getMapValues$6
		p	2		key
	m	(Lpj;Ljava/util/function/BiConsumer;)V	a	lambda$getMapEntries$8
		p	2		entryConsumer
	m	(Lpj;Lpj;Ljava/lang/String;)V	a	lambda$remove$15
		p	2		k
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lqc;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lqc;Ljava/lang/String;)Lqc;	a	remove
	m	(Lqc;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lqc;Lqc;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lqc;Lqc;Lqc;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(S)Lqc;	a	createShort
	m	(Z)Lqc;	a	createBoolean
	m	(Ljava/util/stream/Stream;)Lqc;	b	createList
	m	(Lpi;Lqc;)V	b	lambda$fillMany$1
		p	1		nbt
	m	(Lpj;Lpj;Ljava/lang/String;)V	b	lambda$mergeToMap$4
		p	0		key
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	b	getStringValue
	m	(Lpi;Lqc;)V	c	lambda$fillOne$0
		p	1		nbt
	m	(Lpj;Lpj;Ljava/lang/String;)V	c	lambda$mergeToMap$3
		p	2		key
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	c	getMapValues
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	d	getMapEntries
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	e	getMap
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	h	getByteBuffer
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	i	getIntStream
	m	(Lqc;)Lcom/mojang/serialization/DataResult;	j	getLongStream
	m	(Lqc;)Ljava/lang/Long;	k	lambda$createList$13
		p	0		nbt
	m	(Lqc;)Ljava/lang/Integer;	l	lambda$createList$12
		p	0		nbt
	m	(Lqc;)Ljava/lang/Byte;	m	lambda$createList$11
		p	0		nbt
	m	(Lqc;)Lqc;	n	lambda$getStream$10
		p	0		nbt
	f	Lpu;	a	INSTANCE
c	pu$1	net/minecraft/nbt/NbtOps$1
	m	(Ljava/lang/String;)Lqc;	a	get
	m	(Lpj;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$entries$0
		p	2		key
	m	(Lqc;)Lqc;	a	get
	f	Lpj;	a	val$tag
	f	Lpu;	b	this$0
c	pu$a	net/minecraft/nbt/NbtOps$NbtRecordBuilder
	m	()Lpj;	a	initBuilder
	m	(Ljava/lang/String;Lqc;Lpj;)Lpj;	a	append
	m	(Lpj;Lqc;)Lcom/mojang/serialization/DataResult;	a	build
	f	Lpu;	a	this$0
c	pv	net/minecraft/nbt/NbtUtils
	m	(ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder;	a	indent
		p	0		depth
		p	1		stringBuilder
	m	(Lcom/mojang/datafixers/DataFixer;Lamn;Lpj;I)Lpj;	a	update
		p	0		fixer
		p	1		fixTypes
		p	2		compound
		p	3		oldVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lamn;Lpj;II)Lpj;	a	update
		p	0		fixer
		p	1		fixTypes
		p	2		compound
		p	3		oldVersion
		p	4		targetVersion
	m	(Lcur;)Lpj;	a	writeBlockState
		p	0		state
	m	(Lcut;Lcvu;Ljava/lang/String;Lpj;Lpj;)Lcut;	a	setValueHelper
		p	0		state
		p	1		property
		p	2		key
		p	3		properties
		p	4		root
	m	(Lcvu;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	0		property
		p	1		value
	m	(Ldoy;)Lpj;	a	writeFluidState
		p	0		state
	m	(Lgt;)Lpj;	a	writeBlockPos
		p	0		pos
	m	(Ljava/lang/String;)Lpj;	a	snbtToStructure
		p	0		string
	m	(Ljava/lang/StringBuilder;Lqc;IZ)Ljava/lang/StringBuilder;	a	prettyPrint
		p	0		stringBuilder
		p	1		nbt
		p	2		depth
		p	3		withArrayContents
	m	(Ljava/util/Map;Lpj;)Lpp;	a	lambda$unpackStructureTemplate$10
		p	1		nbt
	m	(Ljava/util/UUID;)Lpn;	a	createUUID
		p	0		uuid
	m	(Lpj;)Lcom/mojang/authlib/GameProfile;	a	readGameProfile
		p	0		nbt
	m	(Lpj;Lcom/mojang/authlib/GameProfile;)Lpj;	a	writeGameProfile
		p	0		nbt
		p	1		profile
	m	(Lpj;Ljava/lang/String;)Ljava/lang/String;	a	lambda$packBlockState$11
		p	1		key
	m	(Lpj;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$unpackBlockState$12
		p	2		property
	m	(Lpp;)D	a	lambda$static$5
		p	0		nbt
	m	(Lpp;Lpj;)V	a	lambda$packStructureTemplate$9
		p	1		nbt
	m	(Lpp;Lpp;Lpp;)V	a	lambda$packStructureTemplate$6
		p	2		nbt
	m	(Lqc;)Ljava/util/UUID;	a	loadUUID
		p	0		element
	m	(Lqc;Lqc;Z)Z	a	compareNbt
		p	0		standard
		p	1		subject
		p	2		ignoreListOrder
	m	(Lqc;Z)Ljava/lang/String;	a	prettyPrint
		p	0		nbt
		p	1		withArrayContents
	m	(Ljava/lang/String;)Lpj;	b	unpackBlockState
		p	0		string
	m	(Lpj;)Lgt;	b	readBlockPos
		p	0		nbt
	m	(Lpp;)D	b	lambda$static$4
		p	0		nbt
	m	(Lqc;)Ljava/lang/String;	b	prettyPrint
		p	0		nbt
	m	(Lpj;)Lcur;	c	readBlockState
		p	0		nbt
	m	(Lpp;)D	c	lambda$static$3
		p	0		nbt
	m	(Lqc;)Lrm;	c	toPrettyComponent
		p	0		element
	m	(Lpj;)Ljava/lang/String;	d	structureToSnbt
		p	0		compound
	m	(Lpp;)I	d	lambda$static$2
		p	0		nbt
	m	(Lpj;)Lpj;	e	packStructureTemplate
		p	0		compound
	m	(Lpp;)I	e	lambda$static$1
		p	0		nbt
	m	(Lpj;)Lpj;	f	unpackStructureTemplate
		p	0		compound
	m	(Lpp;)I	f	lambda$static$0
		p	0		nbt
	m	(Lpj;)Ljava/lang/String;	g	packBlockState
		p	0		compound
	m	(Lpj;)Lpp;	h	lambda$packStructureTemplate$8
		p	0		nbt
	m	(Lpj;)Lpp;	i	lambda$packStructureTemplate$7
		p	0		nbt
	f	Ljava/lang/String;	a	SNBT_DATA_TAG
	f	Ljava/util/Comparator;	b	YXZ_LISTTAG_INT_COMPARATOR
	f	Ljava/util/Comparator;	c	YXZ_LISTTAG_DOUBLE_COMPARATOR
	f	C	d	PROPERTIES_START
	f	C	e	PROPERTIES_END
	f	Ljava/lang/String;	f	ELEMENT_SEPARATOR
	f	C	g	KEY_VALUE_SEPARATOR
	f	Lcom/google/common/base/Splitter;	h	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	i	COLON_SPLITTER
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	I	k	INDENT
	f	I	l	NOT_FOUND
c	pw	net/minecraft/nbt/NumericTag
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
c	px	net/minecraft/nbt/ShortTag
	m	(S)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	(S)Lpx;	a	valueOf
		p	0		value
	m	()Lqe;	b	getType
	m	()Lqc;	c	copy
	m	()Lpx;	d	copy
	m	()J	e	getAsLong
	m	()I	f	getAsInt
	m	()S	g	getAsShort
	m	()B	h	getAsByte
	m	()D	i	getAsDouble
	m	()F	j	getAsFloat
	m	()Ljava/lang/Number;	k	getAsNumber
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	S	c	data
c	px$1	net/minecraft/nbt/ShortTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILps;)Lpx;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	px$a	net/minecraft/nbt/ShortTag$Cache
	f	[Lpx;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	py	net/minecraft/nbt/SnbtPrinterTagVisitor
	m	(Ljava/lang/String;ILjava/util/List;)V	<init>	<init>
		p	1		prefix
		p	2		indentationLevel
		p	3		pathParts
	m	()Ljava/lang/String;	a	pathString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscapePretty
		p	0		name
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lpg;)V	a	visitByteArray
		p	1		element
	m	(Lph;)V	a	visitByte
		p	1		element
	m	(Lpj;)V	a	visitCompound
		p	1		compound
	m	(Lpk;)V	a	visitDouble
		p	1		element
	m	(Lpl;)V	a	visitEnd
		p	1		element
	m	(Lpm;)V	a	visitFloat
		p	1		element
	m	(Lpn;)V	a	visitIntArray
		p	1		element
	m	(Lpo;)V	a	visitInt
		p	1		element
	m	(Lpp;)V	a	visitList
		p	1		element
	m	(Lpq;)V	a	visitLongArray
		p	1		element
	m	(Lpr;)V	a	visitLong
		p	1		element
	m	(Lpx;)V	a	visitShort
		p	1		element
	m	(Lqa;)V	a	visitString
		p	1		element
	m	(Lqc;)Ljava/lang/String;	a	visit
		p	1		element
	m	()V	b	popPath
	m	(Ljava/lang/String;)V	b	pushPath
		p	1		part
	m	(Lpj;)Ljava/util/List;	b	getKeys
		p	1		compound
	f	Ljava/util/Map;	a	KEY_ORDER
	f	Ljava/util/Set;	b	NO_INDENTATION
	f	Ljava/util/regex/Pattern;	c	SIMPLE_VALUE
	f	Ljava/lang/String;	d	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	e	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	f	LIST_OPEN
	f	Ljava/lang/String;	g	LIST_CLOSE
	f	Ljava/lang/String;	h	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	i	ELEMENT_SPACING
	f	Ljava/lang/String;	j	STRUCT_OPEN
	f	Ljava/lang/String;	k	STRUCT_CLOSE
	f	Ljava/lang/String;	l	NEWLINE
	f	Ljava/lang/String;	m	indentation
	f	I	n	depth
	f	Ljava/util/List;	o	path
	f	Ljava/lang/String;	p	result
c	pz	net/minecraft/nbt/StreamTagVisitor
	m	()Lpz$b;	a	visitEnd
	m	(B)Lpz$b;	a	visit
		p	1		value
	m	(D)Lpz$b;	a	visit
		p	1		value
	m	(F)Lpz$b;	a	visit
		p	1		value
	m	(I)Lpz$b;	a	visit
		p	1		value
	m	(J)Lpz$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lpz$b;	a	visit
		p	1		value
	m	(Lqe;)Lpz$a;	a	visitEntry
		p	1		type
	m	(Lqe;I)Lpz$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lqe;Ljava/lang/String;)Lpz$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lpz$b;	a	visit
		p	1		value
	m	([B)Lpz$b;	a	visit
		p	1		value
	m	([I)Lpz$b;	a	visit
		p	1		value
	m	([J)Lpz$b;	a	visit
		p	1		value
	m	()Lpz$b;	b	visitContainerEnd
	m	(Lqe;)Lpz$b;	b	visitRootEntry
		p	1		rootType
	m	(Lqe;I)Lpz$a;	b	visitElement
		p	1		type
		p	2		index
c	pz$a	net/minecraft/nbt/StreamTagVisitor$EntryResult
	m	()[Lpz$a;	a	$values
	f	Lpz$a;	a	ENTER
	f	Lpz$a;	b	SKIP
	f	Lpz$a;	c	BREAK
	f	Lpz$a;	d	HALT
	f	[Lpz$a;	e	$VALUES
c	pz$b	net/minecraft/nbt/StreamTagVisitor$ValueResult
	m	()[Lpz$b;	a	$values
	f	Lpz$b;	a	CONTINUE
	f	Lpz$b;	b	BREAK
	f	Lpz$b;	c	HALT
	f	[Lpz$b;	d	$VALUES
c	qa	net/minecraft/nbt/StringTag
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		value
	m	()B	a	getId
	m	(Ljava/io/DataInput;)V	a	skipString
		p	0		input
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Lqa;	a	valueOf
		p	0		value
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	(Ljava/lang/String;)Ljava/lang/String;	b	quoteAndEscape
		p	0		value
	m	()Lqc;	c	copy
	m	()Lqa;	d	copy
	m	()Ljava/lang/String;	e_	getAsString
	f	Ljava/lang/String;	A	data
	f	Lqe;	a	TYPE
	f	I	b	SELF_SIZE_IN_BITS
	f	Lqa;	c	EMPTY
	f	C	w	DOUBLE_QUOTE
	f	C	x	SINGLE_QUOTE
	f	C	y	ESCAPE
	f	C	z	NOT_SET
c	qa$1	net/minecraft/nbt/StringTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILps;)Lqa;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()Z	d	isValue
c	qb	net/minecraft/nbt/StringTagVisitor
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscape
		p	0		name
	m	(Lpg;)V	a	visitByteArray
		p	1		element
	m	(Lph;)V	a	visitByte
		p	1		element
	m	(Lpj;)V	a	visitCompound
		p	1		compound
	m	(Lpk;)V	a	visitDouble
		p	1		element
	m	(Lpl;)V	a	visitEnd
		p	1		element
	m	(Lpm;)V	a	visitFloat
		p	1		element
	m	(Lpn;)V	a	visitIntArray
		p	1		element
	m	(Lpo;)V	a	visitInt
		p	1		element
	m	(Lpp;)V	a	visitList
		p	1		element
	m	(Lpq;)V	a	visitLongArray
		p	1		element
	m	(Lpr;)V	a	visitLong
		p	1		element
	m	(Lpx;)V	a	visitShort
		p	1		element
	m	(Lqa;)V	a	visitString
		p	1		element
	m	(Lqc;)Ljava/lang/String;	a	visit
		p	1		element
	f	Ljava/util/regex/Pattern;	a	SIMPLE_VALUE
	f	Ljava/lang/StringBuilder;	b	builder
c	qc	net/minecraft/nbt/Tag
	m	()B	a	getId
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lpz;)Lpz$b;	a	accept
		p	1		visitor
	m	(Lqg;)V	a	accept
		p	1		visitor
	m	()Lqe;	b	getType
	m	(Lpz;)V	b	acceptAsRoot
		p	1		visitor
	m	()Lqc;	c	copy
	m	()Ljava/lang/String;	e_	getAsString
	f	I	d	OBJECT_HEADER
	f	I	e	ARRAY_HEADER
	f	I	f	OBJECT_REFERENCE
	f	I	g	STRING_SIZE
	f	B	h	TAG_END
	f	B	i	TAG_BYTE
	f	B	j	TAG_SHORT
	f	B	k	TAG_INT
	f	B	l	TAG_LONG
	f	B	m	TAG_FLOAT
	f	B	n	TAG_DOUBLE
	f	B	o	TAG_BYTE_ARRAY
	f	B	p	TAG_STRING
	f	B	q	TAG_LIST
	f	B	r	TAG_COMPOUND
	f	B	s	TAG_INT_ARRAY
	f	B	t	TAG_LONG_ARRAY
	f	B	u	TAG_ANY_NUMERIC
	f	I	v	MAX_DEPTH
c	qd	net/minecraft/nbt/TagParser
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		reader
	m	()Lpj;	a	readSingleStruct
	m	(C)V	a	expect
		p	1		c
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Lpj;	a	parseTag
		p	0		string
	m	(Lqe;Lqe;)Ljava/util/List;	a	readArray
		p	1		arrayTypeReader
		p	2		typeReader
	m	()Ljava/lang/String;	b	readKey
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Lqc;	b	type
		p	1		input
	m	()Lqc;	c	readTypedValue
	m	()Lqc;	d	readValue
	m	()Lqc;	e	readList
	m	()Lpj;	f	readStruct
	m	()Lqc;	g	readListTag
	m	()Lqc;	h	readArrayTag
	m	()Z	i	hasElementSeparator
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TRAILING_DATA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_KEY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INSERT_MIXED_LIST
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_INSERT_MIXED_ARRAY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_ARRAY
	f	C	g	ELEMENT_SEPARATOR
	f	C	h	NAME_VALUE_SEPARATOR
	f	C	i	LIST_OPEN
	f	C	j	LIST_CLOSE
	f	C	k	STRUCT_CLOSE
	f	C	l	STRUCT_OPEN
	f	Ljava/util/regex/Pattern;	m	DOUBLE_PATTERN_NOSUFFIX
	f	Ljava/util/regex/Pattern;	n	DOUBLE_PATTERN
	f	Ljava/util/regex/Pattern;	o	FLOAT_PATTERN
	f	Ljava/util/regex/Pattern;	p	BYTE_PATTERN
	f	Ljava/util/regex/Pattern;	q	LONG_PATTERN
	f	Ljava/util/regex/Pattern;	r	SHORT_PATTERN
	f	Ljava/util/regex/Pattern;	s	INT_PATTERN
	f	Lcom/mojang/brigadier/StringReader;	t	reader
c	qe	net/minecraft/nbt/TagType
	m	()Ljava/lang/String;	a	getName
	m	(I)Lqe;	a	createInvalid
		p	0		type
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	(Ljava/io/DataInput;Lpz;)V	b	parseRoot
		p	1		input
		p	2		visitor
	m	()Z	d	isValue
c	qe$1	net/minecraft/nbt/TagType$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	(Ljava/io/DataInput;ILps;)Lpl;	a	load
	m	(Ljava/io/DataInput;Lpz;)Lpz$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILps;)Lqc;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()Ljava/io/IOException;	c	createException
	f	I	a	val$id
c	qe$2	net/minecraft/nbt/TagType$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	qe$a	net/minecraft/nbt/TagType$StaticSize
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	()I	c	size
c	qe$b	net/minecraft/nbt/TagType$VariableSize
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
c	qf	net/minecraft/nbt/TagTypes
	m	(I)Lqe;	a	getType
		p	0		id
	f	[Lqe;	a	TYPES
c	qg	net/minecraft/nbt/TagVisitor
	m	(Lpg;)V	a	visitByteArray
		p	1		element
	m	(Lph;)V	a	visitByte
		p	1		element
	m	(Lpj;)V	a	visitCompound
		p	1		compound
	m	(Lpk;)V	a	visitDouble
		p	1		element
	m	(Lpl;)V	a	visitEnd
		p	1		element
	m	(Lpm;)V	a	visitFloat
		p	1		element
	m	(Lpn;)V	a	visitIntArray
		p	1		element
	m	(Lpo;)V	a	visitInt
		p	1		element
	m	(Lpp;)V	a	visitList
		p	1		element
	m	(Lpq;)V	a	visitLongArray
		p	1		element
	m	(Lpr;)V	a	visitLong
		p	1		element
	m	(Lpx;)V	a	visitShort
		p	1		element
	m	(Lqa;)V	a	visitString
		p	1		element
c	qh	net/minecraft/nbt/TextComponentTagVisitor
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		prefix
		p	2		indentationLevel
	m	(Ljava/lang/String;)Lrm;	a	handleEscapePretty
		p	0		name
	m	(Lpg;)V	a	visitByteArray
		p	1		element
	m	(Lph;)V	a	visitByte
		p	1		element
	m	(Lpj;)V	a	visitCompound
		p	1		compound
	m	(Lpk;)V	a	visitDouble
		p	1		element
	m	(Lpl;)V	a	visitEnd
		p	1		element
	m	(Lpm;)V	a	visitFloat
		p	1		element
	m	(Lpn;)V	a	visitIntArray
		p	1		element
	m	(Lpo;)V	a	visitInt
		p	1		element
	m	(Lpp;)V	a	visitList
		p	1		element
	m	(Lpq;)V	a	visitLongArray
		p	1		element
	m	(Lpr;)V	a	visitLong
		p	1		element
	m	(Lpx;)V	a	visitShort
		p	1		element
	m	(Lqa;)V	a	visitString
		p	1		element
	m	(Lqc;)Lrm;	a	visit
		p	1		element
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	INLINE_LIST_THRESHOLD
	f	Lit/unimi/dsi/fastutil/bytes/ByteCollection;	c	INLINE_ELEMENT_TYPES
	f	Lp;	d	SYNTAX_HIGHLIGHTING_KEY
	f	Lp;	e	SYNTAX_HIGHLIGHTING_STRING
	f	Lp;	f	SYNTAX_HIGHLIGHTING_NUMBER
	f	Lp;	g	SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	f	Ljava/util/regex/Pattern;	h	SIMPLE_VALUE
	f	Ljava/lang/String;	i	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	j	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	k	LIST_OPEN
	f	Ljava/lang/String;	l	LIST_CLOSE
	f	Ljava/lang/String;	m	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	n	ELEMENT_SPACING
	f	Ljava/lang/String;	o	STRUCT_OPEN
	f	Ljava/lang/String;	p	STRUCT_CLOSE
	f	Ljava/lang/String;	q	NEWLINE
	f	Ljava/lang/String;	r	indentation
	f	I	s	depth
	f	Lrm;	t	result
c	qi	net/minecraft/nbt/package-info
c	qj	net/minecraft/nbt/visitors/CollectFields
	m	([Lql;)V	<init>	<init>
		p	1		queries
	m	(Lqe;)Lpz$a;	a	visitEntry
		p	1		type
	m	(Lqe;Ljava/lang/String;)Lpz$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Lpz$b;	b	visitContainerEnd
	m	(Lqe;)Lpz$b;	b	visitRootEntry
		p	1		rootType
	m	()I	c	getMissingFieldCount
	f	I	a	fieldsToGetCount
	f	Ljava/util/Set;	b	wantedTypes
	f	Ljava/util/Deque;	c	stack
c	qk	net/minecraft/nbt/visitors/CollectToTag
	m	()Lpz$b;	a	visitEnd
	m	(B)Lpz$b;	a	visit
		p	1		value
	m	(D)Lpz$b;	a	visit
		p	1		value
	m	(F)Lpz$b;	a	visit
		p	1		value
	m	(I)Lpz$b;	a	visit
		p	1		value
	m	(J)Lpz$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lpz$b;	a	visit
		p	1		value
	m	(Lpj;Lqc;)V	a	lambda$visitRootEntry$1
		p	2		nbt
	m	(Lqc;)V	a	appendEntry
		p	1		nbt
	m	(Lqe;)Lpz$a;	a	visitEntry
		p	1		type
	m	(Lqe;I)Lpz$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lqe;Ljava/lang/String;)Lpz$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lpz$b;	a	visit
		p	1		value
	m	([B)Lpz$b;	a	visit
		p	1		value
	m	([I)Lpz$b;	a	visit
		p	1		value
	m	([J)Lpz$b;	a	visit
		p	1		value
	m	()Lpz$b;	b	visitContainerEnd
	m	(Lpj;Lqc;)V	b	lambda$enterContainerIfNeeded$0
		p	2		nbt
	m	(Lqc;)V	b	lambda$visitRootEntry$2
		p	1		nbt
	m	(Lqe;)Lpz$b;	b	visitRootEntry
		p	1		rootType
	m	(Lqe;I)Lpz$a;	b	visitElement
		p	1		type
		p	2		index
	m	(Lqe;)V	c	enterContainerIfNeeded
		p	1		type
	m	()Lqc;	d	getResult
	m	()I	e	depth
	f	Ljava/lang/String;	a	lastId
	f	Lqc;	b	rootTag
	f	Ljava/util/Deque;	c	consumerStack
c	ql	net/minecraft/nbt/visitors/FieldSelector
	m	(Ljava/lang/String;Ljava/lang/String;Lqe;Ljava/lang/String;)V	<init>	<init>
		p	1		path1
		p	2		path2
		p	3		type
		p	4		key
	m	(Ljava/lang/String;Lqe;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		type
		p	3		key
	m	(Lqe;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		key
	m	()Ljava/util/List;	a	path
	m	()Lqe;	b	type
	m	()Ljava/lang/String;	c	name
	f	Ljava/util/List;	a	path
	f	Lqe;	b	type
	f	Ljava/lang/String;	c	name
c	qm	net/minecraft/nbt/visitors/FieldTree
	m	(I)V	<init>	<init>
		p	1		depth
	m	()Lqm;	a	createRoot
	m	(Ljava/lang/String;)Lqm;	a	lambda$addEntry$0
		p	1		path
	m	(Lqe;Ljava/lang/String;)Z	a	isSelected
		p	1		type
		p	2		key
	m	(Lql;)V	a	addEntry
		p	1		query
	m	()I	b	depth
	m	()Ljava/util/Map;	c	selectedFields
	m	()Ljava/util/Map;	d	fieldsToRecurse
	f	I	a	depth
	f	Ljava/util/Map;	b	selectedFields
	f	Ljava/util/Map;	c	fieldsToRecurse
c	qn	net/minecraft/nbt/visitors/SkipAll
	m	()Lpz$b;	a	visitEnd
	m	(B)Lpz$b;	a	visit
		p	1		value
	m	(D)Lpz$b;	a	visit
		p	1		value
	m	(F)Lpz$b;	a	visit
		p	1		value
	m	(I)Lpz$b;	a	visit
		p	1		value
	m	(J)Lpz$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lpz$b;	a	visit
		p	1		value
	m	(Lqe;)Lpz$a;	a	visitEntry
		p	1		type
	m	(Lqe;I)Lpz$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lqe;Ljava/lang/String;)Lpz$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lpz$b;	a	visit
		p	1		value
	m	([B)Lpz$b;	a	visit
		p	1		value
	m	([I)Lpz$b;	a	visit
		p	1		value
	m	([J)Lpz$b;	a	visit
		p	1		value
	m	()Lpz$b;	b	visitContainerEnd
	m	(Lqe;)Lpz$b;	b	visitRootEntry
		p	1		rootType
	m	(Lqe;I)Lpz$a;	b	visitElement
		p	1		type
		p	2		index
	f	Lqn;	a	INSTANCE
c	qn$1	net/minecraft/nbt/visitors/SkipAll$1
c	qo	net/minecraft/nbt/visitors/SkipFields
	m	([Lql;)V	<init>	<init>
		p	1		excludedQueries
	m	(Lqe;Ljava/lang/String;)Lpz$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Lpz$b;	b	visitContainerEnd
	f	Ljava/util/Deque;	a	stack
c	qp	net/minecraft/nbt/visitors/package-info
c	qq	net/minecraft/network/CipherBase
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/buffer/ByteBuf;)[B	a	bufToByte
		p	1		buf
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encipher
		p	1		buf
		p	2		result
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decipher
		p	1		context
		p	2		buf
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	heapIn
	f	[B	c	heapOut
c	qr	net/minecraft/network/CipherDecoder
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
	f	Lqq;	a	cipher
c	qs	net/minecraft/network/CipherEncoder
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lqq;	a	cipher
c	qt	net/minecraft/network/CompressionDecoder
	m	(IZ)V	<init>	<init>
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(IZ)V	a	setThreshold
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	f	I	a	MAXIMUM_COMPRESSED_LENGTH
	f	I	b	MAXIMUM_UNCOMPRESSED_LENGTH
	f	Ljava/util/zip/Inflater;	c	inflater
	f	I	d	threshold
	f	Z	e	validateDecompressed
c	qu	net/minecraft/network/CompressionEncoder
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	()I	a	getThreshold
	m	(I)V	a	setThreshold
		p	1		compressionThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	[B	a	encodeBuf
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	threshold
c	qv	net/minecraft/network/Connection
	m	(Lsp;)V	<init>	<init>
		p	1		side
	m	()V	a	tick
	m	(IZ)V	a	setupCompression
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(Lio/netty/channel/ChannelHandlerContext;Lso;)V	a	channelRead0
	m	(Ljava/net/InetSocketAddress;Z)Lqv;	a	connectToServer
		p	0		address
		p	1		useEpoll
	m	(Ljava/net/SocketAddress;)Lqv;	a	connectToLocalServer
		p	0		address
	m	(Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V	a	setEncryptionKey
		p	1		decryptionCipher
		p	2		encryptionCipher
	m	(Lorg/slf4j/Marker;)V	a	lambda$static$2
		p	0		marker
	m	(Lqw;)V	a	setProtocol
		p	1		state
	m	(Lra;)V	a	setListener
		p	1		listener
	m	(Lrm;)V	a	disconnect
		p	1		disconnectReason
	m	(Lrm;Lio/netty/util/concurrent/Future;)V	a	lambda$exceptionCaught$6
	m	(Lso;)V	a	send
		p	1		packet
	m	(Lso;Lio/netty/util/concurrent/GenericFutureListener;)V	a	send
		p	1		packet
		p	2		callback
	m	(Lso;Lio/netty/util/concurrent/GenericFutureListener;Lqw;Lqw;)V	a	doSendPacket
		p	1		packet
		p	2		callback
		p	3		packetState
		p	4		currentState
	m	(Lso;Lra;)V	a	genericsFtw
		p	0		packet
		p	1		listener
	m	()V	b	tickSecond
	m	(Lorg/slf4j/Marker;)V	b	lambda$static$1
		p	0		marker
	m	(Lso;Lio/netty/util/concurrent/GenericFutureListener;)V	b	sendPacket
		p	1		packet
		p	2		callback
	m	(Lso;Lio/netty/util/concurrent/GenericFutureListener;Lqw;Lqw;)V	b	lambda$sendPacket$7
	m	()Ljava/net/SocketAddress;	c	getRemoteAddress
	m	(Lorg/slf4j/Marker;)V	c	lambda$static$0
		p	0		marker
	m	()Z	d	isMemoryConnection
	m	()Lsp;	e	getReceiving
	m	()Lsp;	f	getSending
	m	()Z	g	isEncrypted
	m	()Z	h	isConnected
	m	()Z	i	isConnecting
	m	()Lra;	j	getPacketListener
	m	()Lrm;	k	getDisconnectedReason
	m	()V	l	setReadOnly
	m	()V	m	handleDisconnection
	m	()F	n	getAverageReceivedPackets
	m	()F	o	getAverageSentPackets
	m	()Lqw;	p	getCurrentProtocol
	m	()V	q	flushQueue
	m	()Lio/netty/channel/DefaultEventLoopGroup;	r	lambda$static$5
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	s	lambda$static$4
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	t	lambda$static$3
	f	Lorg/slf4j/Marker;	a	ROOT_MARKER
	f	Lorg/slf4j/Marker;	b	PACKET_MARKER
	f	Lorg/slf4j/Marker;	c	PACKET_RECEIVED_MARKER
	f	Lorg/slf4j/Marker;	d	PACKET_SENT_MARKER
	f	Lio/netty/util/AttributeKey;	e	ATTRIBUTE_PROTOCOL
	f	Lalk;	f	NETWORK_WORKER_GROUP
	f	Lalk;	g	NETWORK_EPOLL_WORKER_GROUP
	f	Lalk;	h	LOCAL_WORKER_GROUP
	f	F	i	AVERAGE_PACKETS_SMOOTHING
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Lsp;	k	receiving
	f	Ljava/util/Queue;	l	queue
	f	Lio/netty/channel/Channel;	m	channel
	f	Ljava/net/SocketAddress;	n	address
	f	Lra;	o	packetListener
	f	Lrm;	p	disconnectedReason
	f	Z	q	encrypted
	f	Z	r	disconnectionHandled
	f	I	s	receivedPackets
	f	I	t	sentPackets
	f	F	u	averageReceivedPackets
	f	F	v	averageSentPackets
	f	I	w	tickCount
	f	Z	x	handlingFault
c	qv$1	net/minecraft/network/Connection$1
	f	Lqv;	a	val$connection
c	qv$2	net/minecraft/network/Connection$2
	f	Lqv;	a	val$connection
c	qv$a	net/minecraft/network/Connection$PacketHolder
	m	(Lso;Lio/netty/util/concurrent/GenericFutureListener;)V	<init>	<init>
		p	1		packet
		p	2		callback
	f	Lso;	a	packet
	f	Lio/netty/util/concurrent/GenericFutureListener;	b	listener
c	qw	net/minecraft/network/ConnectionProtocol
	m	(Ljava/lang/String;IILqw$b;)V	<init>	<init>
		p	3		id
		p	4		initializer
	m	()I	a	getId
	m	(I)Lqw;	a	getById
		p	0		id
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ljava/lang/Class;Ljava/lang/Integer;)V	a	lambda$getPacketsByIds$0
		p	0		clazz
		p	1		packetId
	m	(Lqw;Ljava/lang/Class;)V	a	lambda$static$1
		p	1		packetClass
	m	(Lqw;Lsp;Lqw$a;)V	a	lambda$static$2
		p	1		side
		p	2		handler
	m	(Lso;)Lqw;	a	getProtocolForPacket
		p	0		handler
	m	(Lsp;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	getPacketsByIds
		p	1		side
	m	(Lsp;ILqx;)Lso;	a	createPacket
		p	1		side
		p	2		packetId
		p	3		buf
	m	(Lsp;Lso;)Ljava/lang/Integer;	a	getPacketId
		p	1		side
		p	2		packet
	m	()Lqw$b;	b	protocol
	m	()[Lqw;	c	$values
	f	Lqw;	a	HANDSHAKING
	f	Lqw;	b	PLAY
	f	Lqw;	c	STATUS
	f	Lqw;	d	LOGIN
	f	I	e	MIN_PROTOCOL_ID
	f	I	f	MAX_PROTOCOL_ID
	f	[Lqw;	g	LOOKUP
	f	Ljava/util/Map;	h	PROTOCOL_BY_PACKET
	f	I	i	id
	f	Ljava/util/Map;	j	flows
	f	[Lqw;	k	$VALUES
c	qw$a	net/minecraft/network/ConnectionProtocol$PacketSet
	m	()Ljava/lang/Iterable;	a	getAllPackets
	m	(ILqx;)Lso;	a	createPacket
		p	1		id
		p	2		buf
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$new$0
		p	0		map
	m	(Ljava/lang/Class;)Ljava/lang/Integer;	a	getId
		p	1		packet
	m	(Ljava/lang/Class;Ljava/util/function/Function;)Lqw$a;	a	addPacket
		p	1		type
		p	2		packetFactory
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	classToId
	f	Ljava/util/List;	c	idToDeserializer
c	qw$b	net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	m	(Lsp;Lqw$a;)Lqw$b;	a	addFlow
		p	1		side
		p	2		handler
	f	Ljava/util/Map;	a	flows
c	qx	net/minecraft/network/FriendlyByteBuf
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
		p	1		parent
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	readIntIdList
	m	(I)I	a	getVarIntSize
		p	0		value
	m	(ILjava/util/function/IntFunction;I)Ljava/lang/Object;	a	lambda$limitValue$2
		p	2		value
	m	(J)I	a	getVarLongSize
		p	0		value
	m	(Laai;)Laai;	a	readResourceKey
		p	1		registryRef
	m	(Laaj;)Lqx;	a	writeResourceLocation
		p	1		id
	m	(Lcaa;)Lqx;	a	writeItem
		p	1		stack
	m	(Lcfh;)Lqx;	a	writeChunkPos
		p	1		pos
	m	(Lcom/mojang/authlib/GameProfile;)V	a	writeGameProfile
		p	1		gameProfile
	m	(Lcom/mojang/authlib/properties/Property;)V	a	writeProperty
		p	1		property
	m	(Lcom/mojang/authlib/properties/PropertyMap;Lqx;)V	a	lambda$readGameProfile$6
		p	2		buf
	m	(Lcom/mojang/datafixers/util/Either;Lqx$b;Lqx$b;)V	a	writeEither
		p	1		either
		p	2		leftWriter
		p	3		rightWriter
	m	(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readWithCodec
		p	1		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	writeWithCodec
		p	1		codec
		p	2		object
	m	(Ldvp;)V	a	writeBlockHitResult
		p	1		hitResult
	m	(Lgt;)Lqx;	a	writeBlockPos
		p	1		pos
	m	(Lhb;)V	a	writeGlobalPos
		p	1		pos
	m	(Lhf;)Ljava/lang/Object;	a	readById
		p	1		registry
	m	(Lhf;Ljava/lang/Object;)V	a	writeId
		p	1		registry
		p	2		value
	m	(Lhq;)Lqx;	a	writeSectionPos
		p	1		pos
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	a	writeIntIdList
		p	1		list
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	a	readEnum
		p	1		enumClass
	m	(Ljava/lang/Enum;)Lqx;	a	writeEnum
		p	1		instance
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$writeWithCodec$1
		p	1		partial
	m	(Ljava/lang/Object;Lqx$b;)V	a	writeNullable
		p	1		value
		p	2		writer
	m	(Ljava/lang/String;)Lqx;	a	writeUtf
		p	1		string
	m	(Ljava/lang/String;I)Lqx;	a	writeUtf
		p	1		string
		p	2		maxLength
	m	(Ljava/security/PublicKey;)Lqx;	a	writePublicKey
		p	1		publicKey
	m	(Ljava/time/Instant;)V	a	writeInstant
		p	1		instant
	m	(Ljava/util/BitSet;)V	a	writeBitSet
		p	1		bitSet
	m	(Ljava/util/Collection;Lqx$b;)V	a	writeCollection
		p	1		collection
		p	2		writer
	m	(Ljava/util/Date;)Lqx;	a	writeDate
		p	1		date
	m	(Ljava/util/Map;Lqx$b;Lqx$b;)V	a	writeMap
		p	1		map
		p	2		keyWriter
		p	3		valueWriter
	m	(Ljava/util/Optional;Lqx$b;)V	a	writeOptional
		p	1		value
		p	2		writer
	m	(Ljava/util/UUID;)Lqx;	a	writeUUID
		p	1		uuid
	m	(Ljava/util/function/Consumer;)V	a	readWithCount
		p	1		consumer
	m	(Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction;	a	limitValue
		p	0		applier
		p	1		max
	m	(Ljava/util/function/IntFunction;Lqx$a;)Ljava/util/Collection;	a	readCollection
		p	1		collectionFactory
		p	2		reader
	m	(Ljava/util/function/IntFunction;Lqx$a;Lqx$a;)Ljava/util/Map;	a	readMap
		p	1		mapFactory
		p	2		keyReader
		p	3		valueReader
	m	(Lpj;)Lqx;	a	writeNbt
		p	1		compound
	m	(Lpj;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$readWithCodec$0
		p	1		partial
	m	(Lps;)Lpj;	a	readNbt
		p	1		sizeTracker
	m	(Lqx$a;)Ljava/util/List;	a	readList
		p	1		reader
	m	(Lqx$a;Lqx$a;)Ljava/util/Map;	a	readMap
		p	1		keyReader
		p	2		valueReader
	m	(Lqx$b;Ljava/lang/Object;)V	a	lambda$writeEither$5
		p	2		object
	m	(Lqx$b;Lqx$b;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$writeMap$3
		p	3		key
		p	4		value
	m	(Lrm;)Lqx;	a	writeComponent
		p	1		text
	m	([B)Lqx;	a	writeByteArray
		p	1		array
	m	([I)Lqx;	a	writeVarIntArray
		p	1		array
	m	([J)Lqx;	a	writeLongArray
		p	1		array
	m	([JI)[J	a	readLongArray
		p	1		toArray
		p	2		maxSize
	m	()[B	b	readByteArray
	m	(I)[B	b	readByteArray
		p	1		maxSize
	m	(J)Lqx;	b	writeVarLong
		p	1		value
	m	(Laai;)V	b	writeResourceKey
		p	1		key
	m	(Lqx$a;)Ljava/util/Optional;	b	readOptional
		p	1		reader
	m	(Lqx$a;Lqx$a;)Lcom/mojang/datafixers/util/Either;	b	readEither
		p	1		leftReader
		p	2		rightReader
	m	(Lqx$b;Ljava/lang/Object;)V	b	lambda$writeEither$4
		p	2		object
	m	([J)[J	b	readLongArray
		p	1		toArray
	m	()[I	c	readVarIntArray
	m	(I)[I	c	readVarIntArray
		p	1		maxSize
	m	(Lqx$a;)Ljava/lang/Object;	c	readNullable
		p	1		reader
	m	()[J	d	readLongArray
	m	(I)Lqx;	d	writeVarInt
		p	1		value
	m	()[B	e	accessByteBufWithCorrectSize
	m	(I)Ljava/lang/String;	e	readUtf
		p	1		maxLength
	m	()Lgt;	f	readBlockPos
	m	(I)I	f	getMaxEncodedUtfLength
		p	0		decodedLength
	m	()Lcfh;	g	readChunkPos
	m	()Lhq;	h	readSectionPos
	m	()Lhb;	i	readGlobalPos
	m	()Lrm;	j	readComponent
	m	()I	k	readVarInt
	m	()J	l	readVarLong
	m	()Ljava/util/UUID;	m	readUUID
	m	()Lpj;	n	readNbt
	m	()Lpj;	o	readAnySizeNbt
	m	()Lcaa;	p	readItem
	m	()Ljava/lang/String;	q	readUtf
	m	()Laaj;	r	readResourceLocation
	m	()Ljava/util/Date;	s	readDate
	m	()Ljava/time/Instant;	t	readInstant
	m	()Ljava/security/PublicKey;	u	readPublicKey
	m	()Ldvp;	v	readBlockHitResult
	m	()Ljava/util/BitSet;	w	readBitSet
	m	()Lcom/mojang/authlib/GameProfile;	x	readGameProfile
	m	()Lcom/mojang/authlib/properties/Property;	y	readProperty
	f	S	a	MAX_STRING_LENGTH
	f	I	b	MAX_COMPONENT_STRING_LENGTH
	f	I	c	MAX_VARINT_SIZE
	f	I	d	MAX_VARLONG_SIZE
	f	I	e	DEFAULT_NBT_QUOTA
	f	Lio/netty/buffer/ByteBuf;	f	source
	f	I	g	PUBLIC_KEY_SIZE
	f	I	h	MAX_PUBLIC_KEY_HEADER_SIZE
	f	I	i	MAX_PUBLIC_KEY_LENGTH
c	qx$a	net/minecraft/network/FriendlyByteBuf$Reader
	m	(Lqx;)Ljava/util/Optional;	a	lambda$asOptional$0
		p	1		buf
c	qx$b	net/minecraft/network/FriendlyByteBuf$Writer
	m	(Lqx;Ljava/util/Optional;)V	a	lambda$asOptional$0
		p	1		buf
		p	2		value
c	qy	net/minecraft/network/PacketDecoder
	m	(Lsp;)V	<init>	<init>
		p	1		side
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lsp;	b	flow
c	qz	net/minecraft/network/PacketEncoder
	m	(Lsp;)V	<init>	<init>
		p	1		side
	m	(Lio/netty/channel/ChannelHandlerContext;Lso;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lsp;	b	flow
c	ra	net/minecraft/network/PacketListener
	m	()Lqv;	a	getConnection
	m	(Lrm;)V	a	onDisconnect
		p	1		reason
	m	()Z	b	shouldPropagateHandlingExceptions
c	rb	net/minecraft/network/RateKickingConnection
	m	(I)V	<init>	<init>
		p	1		rateLimit
	m	(Lio/netty/util/concurrent/Future;)V	a	lambda$tickSecond$0
	m	()V	b	tickSecond
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Lrm;	j	EXCEED_REASON
	f	I	k	rateLimitPacketsPerSecond
c	rc	net/minecraft/network/SkipPacketException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		cause
c	rd	net/minecraft/network/Varint21FrameDecoder
c	re	net/minecraft/network/Varint21LengthFieldPrepender
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	I	a	MAX_BYTES
c	rf	net/minecraft/network/chat/ChatDecoration
	m	()Ljava/lang/String;	a	translationKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lrf;	a	withSender
		p	0		translationKey
	m	(Lrm;Lri;)Lrm;	a	decorate
		p	1		content
		p	2		sender
	m	()Ljava/util/List;	b	parameters
	m	(Ljava/lang/String;)Lrf;	b	directMessage
		p	0		translationKey
	m	(Lrm;Lri;)[Lrm;	b	resolveParameters
		p	1		content
		p	2		sender
	m	()Lrv;	c	style
	m	(Ljava/lang/String;)Lrf;	c	teamMessage
		p	0		translationKey
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	translationKey
	f	Ljava/util/List;	c	parameters
	f	Lrv;	d	style
c	rf$a	net/minecraft/network/chat/ChatDecoration$Parameter
	m	(Ljava/lang/String;ILjava/lang/String;Lrf$a$a;)V	<init>	<init>
		p	3		name
		p	4		selector
	m	()[Lrf$a;	a	$values
	m	(Lrm;Lri;)Lrm;	a	select
		p	1		content
		p	2		sender
	m	(Lrm;Lri;)Lrm;	b	lambda$static$2
		p	0		content
		p	1		sender
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lrm;Lri;)Lrm;	c	lambda$static$1
		p	0		content
		p	1		sender
	m	(Lrm;Lri;)Lrm;	d	lambda$static$0
		p	0		content
		p	1		sender
	f	Lrf$a;	a	SENDER
	f	Lrf$a;	b	TEAM_NAME
	f	Lrf$a;	c	CONTENT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	Lrf$a$a;	f	selector
	f	[Lrf$a;	g	$VALUES
c	rf$a$a	net/minecraft/network/chat/ChatDecoration$Parameter$Selector
	m	(Lrm;Lri;)Lrm;	select	select
		p	1		content
		p	2		sender
c	rg	net/minecraft/network/chat/ChatDecorator
	m	(Lafp;Lrm;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		sender
		p	1		message
	m	(Lagd;Lrr;ZLagd;)Lagd;	a	lambda$decorateChat$2
		p	3		decorated
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Lagd;	a	lambda$decorateFiltered$1
		p	2		void_
	m	(Lafp;Lrm;)Ljava/util/concurrent/CompletableFuture;	decorate	decorate
		p	1		sender
		p	2		message
	m	(Lafp;Lagd;Lrr;Z)Ljava/util/concurrent/CompletableFuture;	decorateChat	decorateChat
		p	1		sender
		p	2		message
		p	3		signature
		p	4		previewed
	m	(Lafp;Lagd;)Ljava/util/concurrent/CompletableFuture;	decorateFiltered	decorateFiltered
		p	1		sender
		p	2		message
	f	Lrg;	a	PLAIN
c	rh	net/minecraft/network/chat/ChatPreviewThrottler
	m	()V	a	tick
	m	(Lrh$a;)V	a	schedule
		p	1		task
	m	()V	b	tickIdle
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	scheduledRequest
	f	Ljava/util/concurrent/CompletableFuture;	b	runningRequest
c	rh$a	net/minecraft/network/chat/ChatPreviewThrottler$Request
c	ri	net/minecraft/network/chat/ChatSender
	m	(Ljava/util/UUID;Lrm;)V	<init>	<init>
		p	1		uuid
		p	2		name
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/UUID;	a	uuid
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lrm;)Lri;	a	system
		p	0		name
	m	()Lrm;	b	name
	m	(Lrm;)Lri;	b	withTeamName
		p	1		teamName
	m	()Lrm;	c	teamName
	f	Ljava/util/UUID;	a	uuid
	f	Lrm;	b	name
	f	Lrm;	c	teamName
c	rj	net/minecraft/network/chat/ChatType
	m	()Ljava/util/Optional;	a	chat
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhm;)Lhc;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laai;	a	create
		p	0		id
	m	()Ljava/util/Optional;	b	overlay
	m	()Ljava/util/Optional;	c	narration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laai;	b	CHAT
	f	Laai;	c	SYSTEM
	f	Laai;	d	GAME_INFO
	f	Laai;	e	SAY_COMMAND
	f	Laai;	f	MSG_COMMAND
	f	Laai;	g	TEAM_MSG_COMMAND
	f	Laai;	h	EMOTE_COMMAND
	f	Laai;	i	TELLRAW_COMMAND
	f	Ljava/util/Optional;	j	chat
	f	Ljava/util/Optional;	k	overlay
	f	Ljava/util/Optional;	l	narration
c	rj$a	net/minecraft/network/chat/ChatType$Narration
	m	()Ljava/util/Optional;	a	decoration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lrf;Lrj$a$a;)Lrj$a;	a	decorated
		p	0		decoration
		p	1		kind
	m	(Lrj$a$a;)Lrj$a;	a	undecorated
		p	0		priority
	m	(Lrm;Lri;)Lrm;	a	decorate
		p	1		message
		p	2		sender
	m	(Lrm;Lri;Lrf;)Lrm;	a	lambda$decorate$1
		p	2		decoration
	m	()Lrj$a$a;	b	priority
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	decoration
	f	Lrj$a$a;	c	priority
c	rj$a$a	net/minecraft/network/chat/ChatType$Narration$Priority
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		interrupt
	m	()Z	a	interrupts
	m	()[Lrj$a$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lrj$a$a;	a	CHAT
	f	Lrj$a$a;	b	SYSTEM
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Z	e	interrupts
	f	[Lrj$a$a;	f	$VALUES
c	rj$b	net/minecraft/network/chat/ChatType$TextDisplay
	m	()Lrj$b;	a	undecorated
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lrf;)Lrj$b;	a	decorated
		p	0		decoration
	m	(Lrm;Lri;)Lrm;	a	decorate
		p	1		message
		p	2		sender
	m	(Lrm;Lri;Lrf;)Lrm;	a	lambda$decorate$1
		p	2		decoration
	m	()Ljava/util/Optional;	b	decoration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	decoration
c	rk	net/minecraft/network/chat/ClickEvent
	m	(Lrk$a;Ljava/lang/String;)V	<init>	<init>
		p	1		action
		p	2		value
	m	()Lrk$a;	a	getAction
	m	()Ljava/lang/String;	b	getValue
	f	Lrk$a;	a	action
	f	Ljava/lang/String;	b	value
c	rk$a	net/minecraft/network/chat/ClickEvent$Action
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		userDefinable
	m	()Z	a	isAllowedFromServer
	m	(Ljava/lang/String;)Lrk$a;	a	getByName
		p	0		name
	m	(Lrk$a;)Lrk$a;	a	lambda$static$0
		p	0		a
	m	()Ljava/lang/String;	b	getName
	m	()[Lrk$a;	c	$values
	f	Lrk$a;	a	OPEN_URL
	f	Lrk$a;	b	OPEN_FILE
	f	Lrk$a;	c	RUN_COMMAND
	f	Lrk$a;	d	SUGGEST_COMMAND
	f	Lrk$a;	e	CHANGE_PAGE
	f	Lrk$a;	f	COPY_TO_CLIPBOARD
	f	Ljava/util/Map;	g	LOOKUP
	f	Z	h	allowFromServer
	f	Ljava/lang/String;	i	name
	f	[Lrk$a;	j	$VALUES
c	rl	net/minecraft/network/chat/CommonComponents
	m	(Ljava/util/Collection;)Lrm;	a	joinLines
		p	0		texts
	m	(Lrm;Lrm;)Lrt;	a	optionNameValue
		p	0		text
		p	1		value
	m	(Lrm;Z)Lrt;	a	optionStatus
		p	0		text
		p	1		value
	m	(Z)Lrm;	a	optionStatus
		p	0		on
	m	([Lrm;)Lrm;	a	joinLines
		p	0		texts
	m	(Lrm;Lrm;)Lrt;	b	joinForNarration
		p	0		first
		p	1		second
	f	Lrm;	a	EMPTY
	f	Lrm;	b	OPTION_ON
	f	Lrm;	c	OPTION_OFF
	f	Lrm;	d	GUI_DONE
	f	Lrm;	e	GUI_CANCEL
	f	Lrm;	f	GUI_YES
	f	Lrm;	g	GUI_NO
	f	Lrm;	h	GUI_PROCEED
	f	Lrm;	i	GUI_BACK
	f	Lrm;	j	CONNECT_FAILED
	f	Lrm;	k	NEW_LINE
	f	Lrm;	l	NARRATION_SEPARATOR
c	rm	net/minecraft/network/chat/Component
	m	()Lrv;	a	getStyle
	m	(I)Ljava/lang/String;	a	getString
		p	1		length
	m	(ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	2		string
	m	(Ljava/lang/String;)Lrm;	a	nullToEmpty
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/String;)Lrt;	a	score
		p	0		name
		p	1		objective
	m	(Ljava/lang/String;Ljava/util/Optional;)Lrt;	a	selector
		p	0		pattern
		p	1		separator
	m	(Ljava/lang/String;ZLjava/util/Optional;Lsa;)Lrt;	a	nbt
		p	0		rawPath
		p	1		interpret
		p	2		separator
		p	3		dataSource
	m	(Ljava/lang/String;[Ljava/lang/Object;)Lrt;	a	translatable
		p	0		key
		p	1		args
	m	(Ljava/util/List;Lrv;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$toFlatList$1
		p	1		styleOverride
		p	2		text
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	(Lrv;)Ljava/util/List;	a	toFlatList
		p	1		style
	m	()Lrn;	b	getContents
	m	(Ljava/lang/String;)Lrt;	b	literal
		p	0		string
	m	()Ljava/util/List;	c	getSiblings
	m	(Ljava/lang/String;)Lrt;	c	translatable
		p	0		key
	m	()Lrt;	d	plainCopy
	m	(Ljava/lang/String;)Lrt;	d	keybind
		p	0		string
	m	()Lrt;	e	copy
	m	()Lalc;	f	getVisualOrderText
	m	()Lrt;	g	empty
c	rm$a	net/minecraft/network/chat/Component$Serializer
	m	()Ljava/lang/reflect/Field;	a	lambda$static$2
	m	(Lcom/google/gson/JsonElement;)Lrt;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lrt;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Lrm;)V	a	lambda$serializeSeparator$3
		p	3		separator
	m	(Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V	a	serializeSeparator
		p	1		context
		p	2		json
		p	3		separator
	m	(Lcom/google/gson/stream/JsonReader;)I	a	getPos
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;)Lrt;	a	fromJson
		p	0		reader
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	unwrapTextArgument
		p	0		text
	m	(Ljava/lang/String;)Lrt;	a	fromJson
		p	0		json
	m	(Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional;	a	parseSeparator
		p	1		type
		p	2		context
		p	3		json
	m	(Lrm;)Ljava/lang/String;	a	toJson
		p	0		text
	m	(Lrm;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lrv;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeStyle
		p	1		style
		p	2		json
		p	3		context
	m	()Ljava/lang/reflect/Field;	b	lambda$static$1
	m	(Ljava/lang/String;)Lrt;	b	fromJsonLenient
		p	0		json
	m	(Lrm;)Ljava/lang/String;	b	toStableJson
		p	0		text
	m	()Lcom/google/gson/Gson;	c	lambda$static$0
	m	(Lrm;)Lcom/google/gson/JsonElement;	c	toJsonTree
		p	0		text
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/reflect/Field;	b	JSON_READER_POS
	f	Ljava/lang/reflect/Field;	c	JSON_READER_LINESTART
c	rn	net/minecraft/network/chat/ComponentContents
	m	(Ldr;Lbaq;I)Lrt;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	f	Lrn;	a	EMPTY
c	rn$1	net/minecraft/network/chat/ComponentContents$1
c	ro	net/minecraft/network/chat/ComponentUtils
	m	(Lcom/mojang/authlib/GameProfile;)Lrm;	a	getDisplayName
		p	0		profile
	m	(Lcom/mojang/brigadier/Message;)Lrm;	a	fromMessage
		p	0		message
	m	(Ldr;Ljava/util/Optional;Lbaq;I)Ljava/util/Optional;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Ldr;Lrm;Lbaq;I)Lrt;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Ldr;Lrv;Lbaq;I)Lrv;	a	resolveStyle
		p	0		source
		p	1		style
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lrm;	a	lambda$formatList$0
		p	0		string
	m	(Ljava/util/Collection;)Lrm;	a	formatList
		p	0		strings
	m	(Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lrt;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lrm;	a	formatAndSortList
		p	0		elements
		p	1		transformer
	m	(Ljava/util/Collection;Lrm;)Lrm;	a	formatList
		p	0		texts
		p	1		separator
	m	(Ljava/util/Collection;Lrm;Ljava/util/function/Function;)Lrt;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Lrm;)Lrt;	a	wrapInSquareBrackets
		p	0		text
	m	(Lrt;Lrv;)Lrt;	a	mergeStyles
		p	0		text
		p	1		style
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lrm;	b	formatList
		p	0		elements
		p	1		transformer
	m	(Lrm;)Z	b	isTranslationResolvable
		p	0		text
	f	Ljava/lang/String;	a	DEFAULT_SEPARATOR_TEXT
	f	Lrm;	b	DEFAULT_SEPARATOR
	f	Lrm;	c	DEFAULT_NO_STYLE_SEPARATOR
c	rp	net/minecraft/network/chat/FormattedText
	m	(Ljava/lang/String;Lrv;)Lrp;	a	of
		p	0		string
		p	1		style
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	1		string
	m	(Ljava/util/List;)Lrp;	a	composite
		p	0		visitables
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	([Lrp;)Lrp;	a	composite
		p	0		visitables
	m	(Ljava/lang/String;)Lrp;	e	of
		p	0		string
	f	Ljava/util/Optional;	a	STOP_ITERATION
	f	Lrp;	b	EMPTY
c	rp$1	net/minecraft/network/chat/FormattedText$1
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
c	rp$2	net/minecraft/network/chat/FormattedText$2
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
c	rp$3	net/minecraft/network/chat/FormattedText$3
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
	f	Lrv;	d	val$style
c	rp$4	net/minecraft/network/chat/FormattedText$4
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/util/List;	c	val$parts
c	rp$a	net/minecraft/network/chat/FormattedText$ContentConsumer
	m	(Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		asString
c	rp$b	net/minecraft/network/chat/FormattedText$StyledContentConsumer
	m	(Lrv;Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		style
		p	2		asString
c	rq	net/minecraft/network/chat/HoverEvent
	m	(Lrq$a;Ljava/lang/Object;)V	<init>	<init>
		p	1		action
		p	2		contents
	m	()Lrq$a;	a	getAction
	m	(Lcom/google/gson/JsonObject;)Lrq;	a	deserialize
		p	0		json
	m	(Lrq$a;)Ljava/lang/Object;	a	getValue
		p	1		action
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lrq$a;	b	action
	f	Ljava/lang/Object;	c	value
c	rq$a	net/minecraft/network/chat/HoverEvent$Action
	m	(Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		name
		p	2		parsable
		p	3		deserializer
		p	4		serializer
		p	5		legacyDeserializer
	m	()Z	a	isAllowedFromServer
	m	(Lcom/google/gson/JsonElement;)Lrq;	a	deserialize
		p	1		contents
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonElement;	a	serializeArg
		p	1		contents
	m	(Ljava/lang/String;)Lrq$a;	a	getByName
		p	0		name
	m	(Lrm;)Lrq;	a	deserializeFromLegacy
		p	1		value
	m	(Lrq$a;)Lrq$a;	a	lambda$static$0
		p	0		action
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	cast
		p	1		o
	f	Lrq$a;	a	SHOW_TEXT
	f	Lrq$a;	b	SHOW_ITEM
	f	Lrq$a;	c	SHOW_ENTITY
	f	Ljava/util/Map;	d	LOOKUP
	f	Ljava/lang/String;	e	name
	f	Z	f	allowFromServer
	f	Ljava/util/function/Function;	g	argDeserializer
	f	Ljava/util/function/Function;	h	argSerializer
	f	Ljava/util/function/Function;	i	legacyArgDeserializer
c	rq$b	net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	m	(Lbau;Ljava/util/UUID;Lrm;)V	<init>	<init>
		p	1		entityType
		p	2		uuid
		p	3		name
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Lrq$b;	a	create
		p	0		json
	m	(Lrm;)Lrq$b;	a	create
		p	0		text
	m	()Ljava/util/List;	b	getTooltipLines
	f	Lbau;	a	type
	f	Ljava/util/UUID;	b	id
	f	Lrm;	c	name
	f	Ljava/util/List;	d	linesCache
c	rq$c	net/minecraft/network/chat/HoverEvent$ItemStackInfo
	m	(Lbzw;ILpj;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		nbt
	m	(Lcaa;)V	<init>	<init>
		p	1		stack
	m	()Lcaa;	a	getItemStack
	m	(Lcom/google/gson/JsonElement;)Lrq$c;	a	create
		p	0		json
	m	(Lrm;)Lrq$c;	a	create
		p	0		text
	m	()Lcom/google/gson/JsonElement;	b	serialize
	f	Lbzw;	a	item
	f	I	b	count
	f	Lpj;	c	tag
	f	Lcaa;	d	itemStack
c	rr	net/minecraft/network/chat/MessageSignature
	m	()Lrr;	a	unsigned
	m	(Lalv$a;Lrm;Ljava/util/UUID;Ljava/time/Instant;J)V	a	updateSignature
		p	0		updater
		p	1		message
		p	2		sender
		p	3		time
		p	4		salt
	m	(Lalw;Ljava/lang/String;)Z	a	verify
		p	1		verifier
		p	2		message
	m	(Lalw;Lrm;)Z	a	verify
		p	1		verifier
		p	2		message
	m	(Ljava/util/UUID;)Z	a	isValid
		p	1		expectedSender
	m	(Lrm;)[B	a	encodeContent
		p	0		message
	m	(Lrm;Lalv$a;)V	a	lambda$verify$0
		p	2		updater
	m	()Z	b	isValid
	m	()Ljava/util/UUID;	c	sender
	m	()Ljava/time/Instant;	d	timeStamp
	m	()Lakq$b;	e	saltSignature
	f	Ljava/util/UUID;	a	sender
	f	Ljava/time/Instant;	b	timeStamp
	f	Lakq$b;	c	saltSignature
c	rs	net/minecraft/network/chat/MessageSigner
	m	()Ljava/util/UUID;	a	sender
	m	(Lalx;Ljava/lang/String;)Lrr;	a	sign
		p	1		signer
		p	2		message
	m	(Lalx;Lrm;)Lrr;	a	sign
		p	1		signer
		p	2		message
	m	(Ljava/util/UUID;)Lrs;	a	create
		p	0		sender
	m	(Lrm;Lalv$a;)V	a	lambda$sign$0
		p	2		updater
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	f	Ljava/util/UUID;	a	sender
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
c	rt	net/minecraft/network/chat/MutableComponent
	m	(Lrn;Ljava/util/List;Lrv;)V	<init>	<init>
		p	1		content
		p	2		siblings
		p	3		style
	m	()Lrv;	a	getStyle
	m	(Ljava/util/function/UnaryOperator;)Lrt;	a	withStyle
		p	1		styleUpdater
	m	(Lp;)Lrt;	a	withStyle
		p	1		formatting
	m	(Lrm;)Lrt;	a	append
		p	1		text
	m	(Lrn;)Lrt;	a	create
		p	0		content
	m	([Lp;)Lrt;	a	withStyle
		p	1		formattings
	m	()Lrn;	b	getContents
	m	(Lrv;)Lrt;	b	setStyle
		p	1		style
	m	()Ljava/util/List;	c	getSiblings
	m	(Lrv;)Lrt;	c	withStyle
		p	1		styleOverride
	m	()Lalc;	f	getVisualOrderText
	m	(Ljava/lang/String;)Lrt;	f	append
		p	1		text
	f	Lrn;	c	contents
	f	Ljava/util/List;	d	siblings
	f	Lrv;	e	style
	f	Lalc;	f	visualOrderText
	f	Lpe;	g	decomposedWith
c	ru	net/minecraft/network/chat/PlayerChatMessage
	m	()Lrm;	a	serverContent
	m	(Lafp;)Z	a	verify
		p	1		player
	m	(Lagd;Lagd;Lrr;Z)Lagd;	a	filteredSigned
		p	0		original
		p	1		decorated
		p	2		signature
		p	3		preview
	m	(Lbti;)Z	a	verify
		p	1		key
	m	(Ldr;)Z	a	verify
		p	1		source
	m	(Ljava/lang/String;Lrr;)Lru;	a	signed
		p	0		signedContent
		p	1		signature
	m	(Lrm;)Lru;	a	unsigned
		p	0		content
	m	(Lrm;Lrm;Lrr;Z)Lru;	a	signed
		p	0		originalContent
		p	1		decoratedContent
		p	2		signature
		p	3		previewed
	m	(Lrm;Lrr;)Lru;	a	signed
		p	0		signedContent
		p	1		signature
	m	()Lrm;	b	signedContent
	m	(Lrm;)Lru;	b	withUnsignedContent
		p	1		unsignedContent
	m	()Lrr;	c	signature
	m	()Ljava/util/Optional;	d	unsignedContent
	f	Lrm;	a	signedContent
	f	Lrr;	b	signature
	f	Ljava/util/Optional;	c	unsignedContent
c	rv	net/minecraft/network/chat/Style
	m	(Lrx;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lrk;Lrq;Ljava/lang/String;Laaj;)V	<init>	<init>
		p	1		color
		p	2		bold
		p	3		italic
		p	4		underlined
		p	5		strikethrough
		p	6		obfuscated
		p	7		clickEvent
		p	8		hoverEvent
		p	9		insertion
		p	10		font
	m	()Lrx;	a	getColor
	m	(I)Lrv;	a	withColor
		p	1		rgbColor
	m	(Laaj;)Lrv;	a	withFont
		p	1		font
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ljava/lang/Boolean;)Lrv;	a	withBold
		p	1		bold
	m	(Ljava/lang/String;)Lrv;	a	withInsertion
		p	1		insertion
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lrv;	a	create
		p	0		color
		p	1		bold
		p	2		italic
		p	3		underlined
		p	4		strikethrough
		p	5		obfuscated
		p	6		insertion
		p	7		font
	m	(Lp;)Lrv;	a	withColor
		p	1		color
	m	(Lrk;)Lrv;	a	withClickEvent
		p	1		clickEvent
	m	(Lrq;)Lrv;	a	withHoverEvent
		p	1		hoverEvent
	m	(Lrv;)Lrv;	a	applyTo
		p	1		parent
	m	(Lrx;)Lrv;	a	withColor
		p	1		color
	m	([Lp;)Lrv;	a	applyFormats
		p	1		formattings
	m	()Z	b	isBold
	m	(Ljava/lang/Boolean;)Lrv;	b	withItalic
		p	1		italic
	m	(Lp;)Lrv;	b	applyFormat
		p	1		formatting
	m	(Lrv;)Ljava/util/Optional;	b	lambda$static$7
		p	0		style
	m	()Z	c	isItalic
	m	(Ljava/lang/Boolean;)Lrv;	c	withUnderlined
		p	1		underline
	m	(Lp;)Lrv;	c	applyLegacyFormat
		p	1		formatting
	m	(Lrv;)Ljava/util/Optional;	c	lambda$static$6
		p	0		style
	m	()Z	d	isStrikethrough
	m	(Ljava/lang/Boolean;)Lrv;	d	withStrikethrough
		p	1		strikethrough
	m	(Lrv;)Ljava/util/Optional;	d	lambda$static$5
		p	0		style
	m	()Z	e	isUnderlined
	m	(Ljava/lang/Boolean;)Lrv;	e	withObfuscated
		p	1		obfuscated
	m	(Lrv;)Ljava/util/Optional;	e	lambda$static$4
		p	0		style
	m	()Z	f	isObfuscated
	m	(Lrv;)Ljava/util/Optional;	f	lambda$static$3
		p	0		style
	m	()Z	g	isEmpty
	m	(Lrv;)Ljava/util/Optional;	g	lambda$static$2
		p	0		style
	m	()Lrk;	h	getClickEvent
	m	(Lrv;)Ljava/util/Optional;	h	lambda$static$1
		p	0		style
	m	()Lrq;	i	getHoverEvent
	m	(Lrv;)Ljava/util/Optional;	i	lambda$static$0
		p	0		style
	m	()Ljava/lang/String;	j	getInsertion
	m	()Laaj;	k	getFont
	f	Lrv;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	FORMATTING_CODEC
	f	Laaj;	c	DEFAULT_FONT
	f	Lrx;	d	color
	f	Ljava/lang/Boolean;	e	bold
	f	Ljava/lang/Boolean;	f	italic
	f	Ljava/lang/Boolean;	g	underlined
	f	Ljava/lang/Boolean;	h	strikethrough
	f	Ljava/lang/Boolean;	i	obfuscated
	f	Lrk;	j	clickEvent
	f	Lrq;	k	hoverEvent
	f	Ljava/lang/String;	l	insertion
	f	Laaj;	m	font
c	rv$1	net/minecraft/network/chat/Style$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
c	rv$a	net/minecraft/network/chat/Style$1Collector
	m	()V	a	prependSeparator
	m	(Ljava/lang/String;Ljava/lang/Boolean;)V	a	addFlagString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	addValueString
		p	1		key
		p	2		value
	f	Ljava/lang/StringBuilder;	a	val$result
	f	Lrv;	b	this$0
	f	Z	c	isNotFirst
c	rv$b	net/minecraft/network/chat/Style$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lrv;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Laaj;	a	getFont
		p	0		root
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalFlag
		p	0		root
		p	1		key
	m	(Lrv;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lrq;	b	getHoverEvent
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Lrk;	c	getClickEvent
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	d	getInsertion
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Lrx;	e	getTextColor
		p	0		root
c	rw	net/minecraft/network/chat/SubStringSource
	m	(Ljava/lang/String;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)V	<init>	<init>
		p	1		string
		p	2		styles
		p	3		reverser
	m	()Ljava/lang/String;	a	getPlainText
	m	(I)I	a	lambda$create$0
		p	0		codePoint
	m	(IIZ)Ljava/util/List;	a	substring
		p	1		start
		p	2		length
		p	3		reverse
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$create$1
		p	0		string
	m	(Ljava/lang/StringBuilder;Ljava/util/List;ILrv;I)Z	a	lambda$create$2
		p	2		charIndex
		p	3		style
		p	4		codePoint
	m	(Ljava/lang/StringBuilder;Ljava/util/List;Lrv;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$create$3
		p	2		style
		p	3		text
	m	(Lrp;)Lrw;	a	create
		p	0		visitable
	m	(Lrp;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lrw;	a	create
		p	0		visitable
		p	1		reverser
		p	2		shaper
	f	Ljava/lang/String;	a	plainText
	f	Ljava/util/List;	b	charStyles
	f	Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	c	reverseCharModifier
c	rx	net/minecraft/network/chat/TextColor
	m	(I)V	<init>	<init>
		p	1		rgb
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		rgb
		p	2		name
	m	()I	a	getValue
	m	(I)Lrx;	a	fromRgb
		p	0		rgb
	m	(Ljava/lang/String;)Lrx;	a	parseColor
		p	0		name
	m	(Lp;)Lrx;	a	fromLegacyFormat
		p	0		formatting
	m	(Lrx;)Ljava/lang/String;	a	lambda$static$2
		p	0		textColor
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$0
		p	0		color
	m	(Lp;)Lrx;	b	lambda$static$1
		p	0		formatting
	m	()Ljava/lang/String;	c	formatValue
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	CUSTOM_COLOR_PREFIX
	f	Ljava/util/Map;	c	LEGACY_FORMAT_TO_COLOR
	f	Ljava/util/Map;	d	NAMED_COLORS
	f	I	e	value
	f	Ljava/lang/String;	f	name
c	ry	net/minecraft/network/chat/ThrowingComponent
	m	(Lrm;)V	<init>	<init>
		p	1		messageText
	m	(Lrm;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		messageText
		p	2		cause
	m	()Lrm;	a	getComponent
	f	Lrm;	a	component
c	rz	net/minecraft/network/chat/contents/BlockDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lfj;)V	<init>	<init>
		p	1		rawPath
	m	()Ljava/lang/String;	a	posPattern
	m	(Ljava/lang/String;)Lfj;	a	compilePos
		p	0		string
	m	()Lfj;	b	compiledPos
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Ljava/lang/String;	a	posPattern
	f	Lfj;	b	compiledPos
c	sa	net/minecraft/network/chat/contents/DataSource
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
c	sb	net/minecraft/network/chat/contents/EntityDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lfz;)V	<init>	<init>
		p	1		rawPath
	m	()Ljava/lang/String;	a	selectorPattern
	m	(Ljava/lang/String;)Lfz;	a	compileSelector
		p	0		rawSelector
	m	()Lfz;	b	compiledSelector
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Ljava/lang/String;	a	selectorPattern
	f	Lfz;	b	compiledSelector
c	sc	net/minecraft/network/chat/contents/KeybindContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	getName
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Lrm;	b	getNestedComponent
	f	Ljava/lang/String;	b	name
	f	Ljava/util/function/Supplier;	c	nameResolver
c	sd	net/minecraft/network/chat/contents/KeybindResolver
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	a	lambda$static$1
		p	0		key
	m	(Ljava/util/function/Function;)V	a	setKeyResolver
		p	0		factory
	m	(Ljava/lang/String;)Lrm;	b	lambda$static$0
	f	Ljava/util/function/Function;	a	keyResolver
c	se	net/minecraft/network/chat/contents/LiteralContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		string
	m	()Ljava/lang/String;	a	text
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	f	Ljava/lang/String;	b	text
c	sf	net/minecraft/network/chat/contents/NbtContents
	m	(Ljava/lang/String;Leh$g;ZLjava/util/Optional;Lsa;)V	<init>	<init>
		p	1		rawPath
		p	2		path
		p	3		interpret
		p	4		separator
		p	5		dataSource
	m	(Ljava/lang/String;ZLjava/util/Optional;Lsa;)V	<init>	<init>
		p	1		rawPath
		p	2		interpret
		p	3		separator
		p	4		dataSource
	m	()Ljava/lang/String;	a	getNbtPath
	m	(Ldr;Lbaq;I)Lrt;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ldr;Lbaq;ILjava/lang/String;)Ljava/util/stream/Stream;	a	lambda$resolve$1
		p	3		text
	m	(Ljava/lang/String;)Leh$g;	a	compileNbtPath
		p	0		rawPath
	m	(Ljava/util/stream/Stream;)Lrt;	a	lambda$resolve$5
	m	(Ljava/util/stream/Stream;Lrt;)Lrt;	a	lambda$resolve$4
		p	1		text
	m	(Lpj;)Ljava/util/stream/Stream;	a	lambda$resolve$0
		p	1		nbt
	m	(Lrm;Lrt;Lrt;)Lrt;	a	lambda$resolve$2
		p	1		accumulator
		p	2		current
	m	(Lrt;Lrt;Lrt;)Lrt;	a	lambda$resolve$3
		p	1		accumulator
		p	2		current
	m	()Z	b	isInterpreting
	m	()Ljava/util/Optional;	c	getSeparator
	m	()Lsa;	d	getDataSource
	f	Leh$g;	b	compiledNbtPath
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Z	d	interpreting
	f	Ljava/util/Optional;	e	separator
	f	Ljava/lang/String;	f	nbtPathPattern
	f	Lsa;	g	dataSource
c	sg	net/minecraft/network/chat/contents/ScoreContents
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		name
		p	2		objective
	m	()Ljava/lang/String;	a	getName
	m	(Ldr;)Ljava/lang/String;	a	findTargetName
		p	1		source
	m	(Ldr;Lbaq;I)Lrt;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lfz;	a	parseSelector
		p	0		name
	m	(Ljava/lang/String;Ldr;)Ljava/lang/String;	a	getScore
		p	1		playerName
		p	2		source
	m	()Lfz;	b	getSelector
	m	()Ljava/lang/String;	c	getObjective
	f	Ljava/lang/String;	b	SCORER_PLACEHOLDER
	f	Ljava/lang/String;	c	name
	f	Lfz;	d	selector
	f	Ljava/lang/String;	e	objective
c	sh	net/minecraft/network/chat/contents/SelectorContents
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		pattern
		p	2		separator
	m	()Ljava/lang/String;	a	getPattern
	m	(Ldr;Lbaq;I)Lrt;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lfz;	a	parseSelector
		p	0		pattern
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Lfz;	b	getSelector
	m	()Ljava/util/Optional;	c	getSeparator
	f	Ljava/util/Optional;	b	separator
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	pattern
	f	Lfz;	e	selector
c	si	net/minecraft/network/chat/contents/StorageDataSource
	m	()Laaj;	a	id
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Laaj;	a	id
c	sj	net/minecraft/network/chat/contents/TranslatableContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	(Ljava/lang/String;[Ljava/lang/Object;)V	<init>	<init>
		p	1		key
		p	2		args
	m	()Ljava/lang/String;	a	getKey
	m	(I)Lrp;	a	getArgument
		p	1		index
	m	(Ldr;Lbaq;I)Lrt;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	decomposeTemplate
		p	1		translation
		p	2		partsConsumer
	m	(Lrp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lrp$b;Lrv;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()[Ljava/lang/Object;	b	getArgs
	m	()V	c	decompose
	f	[Ljava/lang/Object;	b	NO_ARGS
	f	Lrp;	c	TEXT_PERCENT
	f	Lrp;	d	TEXT_NULL
	f	Ljava/lang/String;	e	key
	f	[Ljava/lang/Object;	f	args
	f	Lpe;	g	decomposedWith
	f	Ljava/util/List;	h	decomposedParts
	f	Ljava/util/regex/Pattern;	i	FORMAT_PATTERN
c	sk	net/minecraft/network/chat/contents/TranslatableFormatException
	m	(Lsj;I)V	<init>	<init>
		p	1		text
		p	2		index
	m	(Lsj;Ljava/lang/String;)V	<init>	<init>
		p	1		text
		p	2		message
	m	(Lsj;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		text
		p	2		cause
c	sl	net/minecraft/network/chat/contents/package-info
c	sm	net/minecraft/network/chat/package-info
c	sn	net/minecraft/network/package-info
c	so	net/minecraft/network/protocol/Packet
	m	()Z	a	isSkippable
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
c	sp	net/minecraft/network/protocol/PacketFlow
	m	()Lsp;	a	getOpposite
	m	()[Lsp;	b	$values
	f	Lsp;	a	SERVERBOUND
	f	Lsp;	b	CLIENTBOUND
	f	[Lsp;	c	$VALUES
c	sq	net/minecraft/network/protocol/PacketUtils
	m	(Lra;Lso;)V	a	lambda$ensureRunningOnSameThread$0
	m	(Lso;Lra;Lafo;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		world
	m	(Lso;Lra;Layc;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		engine
	f	Lorg/slf4j/Logger;	a	LOGGER
c	sr	net/minecraft/network/protocol/game/ClientGamePacketListener
	m	(Lss;)V	a	handleAddEntity
		p	1		packet
	m	(Lst;)V	a	handleAddExperienceOrb
		p	1		packet
	m	(Lsu;)V	a	handleAddPlayer
		p	1		packet
	m	(Lsv;)V	a	handleAnimate
		p	1		packet
	m	(Lsw;)V	a	handleAwardStats
		p	1		packet
	m	(Lsx;)V	a	handleBlockChangedAck
		p	1		packet
	m	(Lsy;)V	a	handleBlockDestruction
		p	1		packet
	m	(Lsz;)V	a	handleBlockEntityData
		p	1		packet
	m	(Lta;)V	a	handleBlockEvent
		p	1		packet
	m	(Ltb;)V	a	handleBlockUpdate
		p	1		packet
	m	(Ltc;)V	a	handleBossUpdate
		p	1		packet
	m	(Ltd;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lte;)V	a	handleChatPreview
		p	1		packet
	m	(Ltf;)V	a	handleTitlesClear
		p	1		packet
	m	(Ltg;)V	a	handleCommandSuggestions
		p	1		packet
	m	(Lth;)V	a	handleCommands
		p	1		packet
	m	(Lti;)V	a	handleContainerClose
		p	1		packet
	m	(Ltj;)V	a	handleContainerContent
		p	1		packet
	m	(Ltk;)V	a	handleContainerSetData
		p	1		packet
	m	(Ltl;)V	a	handleContainerSetSlot
		p	1		packet
	m	(Ltm;)V	a	handleItemCooldown
		p	1		packet
	m	(Ltn;)V	a	handleCustomPayload
		p	1		packet
	m	(Lto;)V	a	handleCustomSoundEvent
		p	1		packet
	m	(Ltp;)V	a	handleDisconnect
		p	1		packet
	m	(Ltq;)V	a	handleEntityEvent
		p	1		packet
	m	(Ltr;)V	a	handleExplosion
		p	1		packet
	m	(Lts;)V	a	handleForgetLevelChunk
		p	1		packet
	m	(Ltt;)V	a	handleGameEvent
		p	1		packet
	m	(Ltu;)V	a	handleHorseScreenOpen
		p	1		packet
	m	(Ltv;)V	a	handleInitializeBorder
		p	1		packet
	m	(Ltw;)V	a	handleKeepAlive
		p	1		packet
	m	(Lty;)V	a	handleLevelChunkWithLight
		p	1		packet
	m	(Ltz;)V	a	handleLevelEvent
		p	1		packet
	m	(Lua;)V	a	handleParticleEvent
		p	1		packet
	m	(Lub;)V	a	handleLightUpdatePacket
		p	1		packet
	m	(Lud;)V	a	handleLogin
		p	1		packet
	m	(Lue;)V	a	handleMapItemData
		p	1		packet
	m	(Luf;)V	a	handleMerchantOffers
		p	1		packet
	m	(Lug;)V	a	handleMoveEntity
		p	1		packet
	m	(Luh;)V	a	handleMoveVehicle
		p	1		packet
	m	(Lui;)V	a	handleOpenBook
		p	1		packet
	m	(Luj;)V	a	handleOpenScreen
		p	1		packet
	m	(Luk;)V	a	handleOpenSignEditor
		p	1		packet
	m	(Lul;)V	a	handlePing
		p	1		packet
	m	(Lum;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lun;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Luo;)V	a	handlePlayerChat
		p	1		packet
	m	(Lup;)V	a	handlePlayerCombatEnd
		p	1		packet
	m	(Luq;)V	a	handlePlayerCombatEnter
		p	1		packet
	m	(Lur;)V	a	handlePlayerCombatKill
		p	1		packet
	m	(Lus;)V	a	handlePlayerInfo
		p	1		packet
	m	(Lut;)V	a	handleLookAt
		p	1		packet
	m	(Luu;)V	a	handleMovePlayer
		p	1		packet
	m	(Luv;)V	a	handleAddOrRemoveRecipes
		p	1		packet
	m	(Luw;)V	a	handleRemoveEntities
		p	1		packet
	m	(Lux;)V	a	handleRemoveMobEffect
		p	1		packet
	m	(Luy;)V	a	handleResourcePack
		p	1		packet
	m	(Luz;)V	a	handleRespawn
		p	1		packet
	m	(Lva;)V	a	handleRotateMob
		p	1		packet
	m	(Lvb;)V	a	handleChunkBlocksUpdate
		p	1		packet
	m	(Lvc;)V	a	handleSelectAdvancementsTab
		p	1		packet
	m	(Lvd;)V	a	handleServerData
		p	1		packet
	m	(Lve;)V	a	setActionBarText
		p	1		packet
	m	(Lvf;)V	a	handleSetBorderCenter
		p	1		packet
	m	(Lvg;)V	a	handleSetBorderLerpSize
		p	1		packet
	m	(Lvh;)V	a	handleSetBorderSize
		p	1		packet
	m	(Lvi;)V	a	handleSetBorderWarningDelay
		p	1		packet
	m	(Lvj;)V	a	handleSetBorderWarningDistance
		p	1		packet
	m	(Lvk;)V	a	handleSetCamera
		p	1		packet
	m	(Lvl;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Lvm;)V	a	handleSetChunkCacheCenter
		p	1		packet
	m	(Lvn;)V	a	handleSetChunkCacheRadius
		p	1		packet
	m	(Lvo;)V	a	handleSetSpawn
		p	1		packet
	m	(Lvp;)V	a	handleSetDisplayChatPreview
		p	1		packet
	m	(Lvq;)V	a	handleSetDisplayObjective
		p	1		packet
	m	(Lvr;)V	a	handleSetEntityData
		p	1		packet
	m	(Lvs;)V	a	handleEntityLinkPacket
		p	1		packet
	m	(Lvt;)V	a	handleSetEntityMotion
		p	1		packet
	m	(Lvu;)V	a	handleSetEquipment
		p	1		packet
	m	(Lvv;)V	a	handleSetExperience
		p	1		packet
	m	(Lvw;)V	a	handleSetHealth
		p	1		packet
	m	(Lvx;)V	a	handleAddObjective
		p	1		packet
	m	(Lvy;)V	a	handleSetEntityPassengersPacket
		p	1		packet
	m	(Lvz;)V	a	handleSetPlayerTeamPacket
		p	1		packet
	m	(Lwa;)V	a	handleSetScore
		p	1		packet
	m	(Lwb;)V	a	handleSetSimulationDistance
		p	1		packet
	m	(Lwc;)V	a	setSubtitleText
		p	1		packet
	m	(Lwd;)V	a	handleSetTime
		p	1		packet
	m	(Lwe;)V	a	setTitleText
		p	1		packet
	m	(Lwf;)V	a	setTitlesAnimation
		p	1		packet
	m	(Lwg;)V	a	handleSoundEntityEvent
		p	1		packet
	m	(Lwh;)V	a	handleSoundEvent
		p	1		packet
	m	(Lwi;)V	a	handleStopSoundEvent
		p	1		packet
	m	(Lwj;)V	a	handleSystemChat
		p	1		packet
	m	(Lwk;)V	a	handleTabListCustomisation
		p	1		packet
	m	(Lwl;)V	a	handleTagQueryPacket
		p	1		packet
	m	(Lwm;)V	a	handleTakeItemEntity
		p	1		packet
	m	(Lwn;)V	a	handleTeleportEntity
		p	1		packet
	m	(Lwo;)V	a	handleUpdateAdvancementsPacket
		p	1		packet
	m	(Lwp;)V	a	handleUpdateAttributes
		p	1		packet
	m	(Lwq;)V	a	handleUpdateMobEffect
		p	1		packet
	m	(Lwr;)V	a	handleUpdateRecipes
		p	1		packet
	m	(Lws;)V	a	handleUpdateTags
		p	1		packet
c	ss	net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	m	(ILjava/util/UUID;DDDFFLbau;ILdvt;D)V	<init>	<init>
		p	1		id
		p	2		uuid
		p	3		x
		p	5		y
		p	7		z
		p	9		pitch
		p	10		yaw
		p	11		entityTypeId
		p	12		entityData
		p	13		velocity
		p	14		headYaw
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lbaq;I)V	<init>	<init>
		p	1		entity
		p	2		entityData
	m	(Lbaq;ILgt;)V	<init>	<init>
		p	1		entity
		p	2		entityTypeId
		p	3		pos
	m	(Lbbf;)V	<init>	<init>
		p	1		entity
	m	(Lbbf;I)V	<init>	<init>
		p	1		entity
		p	2		entityTypeId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Ljava/util/UUID;	c	getUUID
	m	()Lbau;	d	getType
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()D	h	getXa
	m	()D	i	getYa
	m	()D	j	getZa
	m	()F	k	getXRot
	m	()F	l	getYRot
	m	()F	m	getYHeadRot
	m	()I	n	getData
	f	D	a	MAGICAL_QUANTIZATION
	f	D	b	LIMIT
	f	I	c	id
	f	Ljava/util/UUID;	d	uuid
	f	Lbau;	e	type
	f	D	f	x
	f	D	g	y
	f	D	h	z
	f	I	i	xa
	f	I	j	ya
	f	I	k	za
	f	B	l	xRot
	f	B	m	yRot
	f	B	n	yHeadRot
	f	I	o	data
c	st	net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	m	(Lbaw;)V	<init>	<init>
		p	1		experienceOrbEntity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()I	f	getValue
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	value
c	su	net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	m	(Lbtf;)V	<init>	<init>
		p	1		player
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getEntityId
	m	()Ljava/util/UUID;	c	getPlayerId
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()B	g	getyRot
	m	()B	h	getxRot
	f	I	a	entityId
	f	Ljava/util/UUID;	b	playerId
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	B	f	yRot
	f	B	g	xRot
c	sv	net/minecraft/network/protocol/game/ClientboundAnimatePacket
	m	(Lbaq;I)V	<init>	<init>
		p	1		entity
		p	2		animationId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()I	c	getAction
	f	I	a	SWING_MAIN_HAND
	f	I	b	HURT
	f	I	c	WAKE_UP
	f	I	d	SWING_OFF_HAND
	f	I	e	CRITICAL_HIT
	f	I	f	MAGIC_CRITICAL_HIT
	f	I	g	id
	f	I	h	action
c	sw	net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		stats
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lajl;)V	a	writeStatCap
		p	0		buf
		p	1		stat
	m	(Lqx;Lajn;)Lajl;	a	readStatCap
		p	0		buf
		p	1		statType
	m	(Lqx;Lqx;)Lajl;	a	lambda$new$0
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/Map;	b	getStats
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	sx	net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	sequence
	f	I	a	sequence
c	sy	net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	m	(ILgt;I)V	<init>	<init>
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Lgt;	c	getPos
	m	()I	d	getProgress
	f	I	a	id
	f	Lgt;	b	pos
	f	I	c	progress
c	sz	net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	m	(Lgt;Lcsn;Lpj;)V	<init>	<init>
		p	1		pos
		p	2		blockEntityType
		p	3		nbt
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcsl;)Lsz;	a	create
		p	0		blockEntity
	m	(Lcsl;Ljava/util/function/Function;)Lsz;	a	create
		p	0		blockEntity
		p	1		nbtGetter
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()Lcsn;	c	getType
	m	()Lpj;	d	getTag
	f	Lgt;	a	pos
	f	Lcsn;	b	type
	f	Lpj;	c	tag
c	ta	net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	m	(Lgt;Lciw;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()I	c	getB0
	m	()I	d	getB1
	m	()Lciw;	e	getBlock
	f	Lgt;	a	pos
	f	I	b	b0
	f	I	c	b1
	f	Lciw;	d	block
c	tb	net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	m	(Lcfg;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lcur;	b	getBlockState
	m	()Lgt;	c	getPos
	f	Lgt;	a	pos
	f	Lcur;	b	blockState
c	tc	net/minecraft/network/protocol/game/ClientboundBossEventPacket
	m	(Ljava/util/UUID;Ltc$c;)V	<init>	<init>
		p	1		uuid
		p	2		action
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lazc;)Ltc;	a	createAddPacket
		p	0		bar
	m	(Ljava/util/UUID;)Ltc;	a	createRemovePacket
		p	0		uuid
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	(Ltc$b;)V	a	dispatch
		p	1		consumer
	m	(ZZZ)I	a	encodeProperties
		p	0		darkenSky
		p	1		dragonMusic
		p	2		thickenFog
	m	(Lazc;)Ltc;	b	createUpdateProgressPacket
		p	0		bar
	m	(Lazc;)Ltc;	c	createUpdateNamePacket
		p	0		bar
	m	(Lazc;)Ltc;	d	createUpdateStylePacket
		p	0		bar
	m	(Lazc;)Ltc;	e	createUpdatePropertiesPacket
		p	0		bar
	f	I	a	FLAG_DARKEN
	f	I	b	FLAG_MUSIC
	f	I	c	FLAG_FOG
	f	Ljava/util/UUID;	d	id
	f	Ltc$c;	e	operation
	f	Ltc$c;	f	REMOVE_OPERATION
c	tc$1	net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	m	()Ltc$d;	a	getType
	m	(Ljava/util/UUID;Ltc$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lqx;)V	a	write
		p	1		buf
c	tc$a	net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	m	(Lazc;)V	<init>	<init>
		p	1		bar
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Ltc$d;	a	getType
	m	(Ljava/util/UUID;Ltc$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lqx;)V	a	write
		p	1		buf
	f	Lrm;	a	name
	f	F	b	progress
	f	Lazc$a;	c	color
	f	Lazc$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playMusic
	f	Z	g	createWorldFog
c	tc$b	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	m	(Ljava/util/UUID;)V	a	remove
		p	1		uuid
	m	(Ljava/util/UUID;F)V	a	updateProgress
		p	1		uuid
		p	2		percent
	m	(Ljava/util/UUID;Lazc$a;Lazc$b;)V	a	updateStyle
		p	1		id
		p	2		color
		p	3		style
	m	(Ljava/util/UUID;Lrm;)V	a	updateName
		p	1		uuid
		p	2		name
	m	(Ljava/util/UUID;Lrm;FLazc$a;Lazc$b;ZZZ)V	a	add
		p	1		uuid
		p	2		name
		p	3		percent
		p	4		color
		p	5		style
		p	6		darkenSky
		p	7		dragonMusic
		p	8		thickenFog
	m	(Ljava/util/UUID;ZZZ)V	a	updateProperties
		p	1		uuid
		p	2		darkenSky
		p	3		dragonMusic
		p	4		thickenFog
c	tc$c	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	m	()Ltc$d;	a	getType
	m	(Ljava/util/UUID;Ltc$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lqx;)V	a	write
		p	1		buf
c	tc$d	net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
		p	3		parser
	m	()[Ltc$d;	a	$values
	m	(Lqx;)Ltc$c;	a	lambda$static$0
		p	0		buf
	f	Ltc$d;	a	ADD
	f	Ltc$d;	b	REMOVE
	f	Ltc$d;	c	UPDATE_PROGRESS
	f	Ltc$d;	d	UPDATE_NAME
	f	Ltc$d;	e	UPDATE_STYLE
	f	Ltc$d;	f	UPDATE_PROPERTIES
	f	Ljava/util/function/Function;	g	reader
	f	[Ltc$d;	h	$VALUES
c	tc$e	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;)V	<init>	<init>
		p	1		name
	m	()Ltc$d;	a	getType
	m	(Ljava/util/UUID;Ltc$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lqx;)V	a	write
		p	1		buf
	f	Lrm;	a	name
c	tc$f	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	m	(F)V	<init>	<init>
		p	1		percent
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Ltc$d;	a	getType
	m	(Ljava/util/UUID;Ltc$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lqx;)V	a	write
		p	1		buf
	f	F	a	progress
c	tc$g	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(ZZZ)V	<init>	<init>
		p	1		darkenSky
		p	2		dragonMusic
		p	3		thickenFog
	m	()Ltc$d;	a	getType
	m	(Ljava/util/UUID;Ltc$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lqx;)V	a	write
		p	1		buf
	f	Z	a	darkenScreen
	f	Z	b	playMusic
	f	Z	c	createWorldFog
c	tc$h	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	m	(Lazc$a;Lazc$b;)V	<init>	<init>
		p	1		color
		p	2		style
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Ltc$d;	a	getType
	m	(Ljava/util/UUID;Ltc$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lqx;)V	a	write
		p	1		buf
	f	Lazc$a;	a	color
	f	Lazc$b;	b	overlay
c	td	net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	m	(Lazj;Z)V	<init>	<init>
		p	1		difficulty
		p	2		difficultyLocked
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	isLocked
	m	()Lazj;	c	getDifficulty
	f	Lazj;	a	difficulty
	f	Z	b	locked
c	te	net/minecraft/network/protocol/game/ClientboundChatPreviewPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isSkippable
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	queryId
	m	()Lrm;	c	preview
	f	I	a	queryId
	f	Lrm;	b	preview
c	tf	net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		reset
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	shouldResetTimes
	f	Z	a	resetTimes
c	tg	net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	<init>	<init>
		p	1		completionId
		p	2		suggestions
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcom/mojang/brigadier/context/StringRange;Lqx;)Lcom/mojang/brigadier/suggestion/Suggestion;	a	lambda$new$0
		p	1		buf2
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lcom/mojang/brigadier/Message;)V	a	lambda$write$1
		p	0		buf3
		p	1		tooltip
	m	(Lqx;Lcom/mojang/brigadier/suggestion/Suggestion;)V	a	lambda$write$2
		p	0		buf2
		p	1		suggestion
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	c	getSuggestions
	f	I	a	id
	f	Lcom/mojang/brigadier/suggestion/Suggestions;	b	suggestions
c	th	net/minecraft/network/protocol/game/ClientboundCommandsPacket
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)V	<init>	<init>
		p	1		rootNode
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lth$b;	a	createEntry
		p	0		node
		p	1		nodes
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	enumerateNodes
		p	0		commandTree
	m	(Ldl;)Lcom/mojang/brigadier/tree/RootCommandNode;	a	getRoot
		p	1		commandRegistryAccess
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List;	a	createEntries
		p	0		nodes
	m	(Ljava/util/List;)V	a	validateEntries
		p	0		nodeDatas
	m	(Ljava/util/List;Ljava/util/function/BiPredicate;)V	a	validateEntries
		p	0		nodeDatas
		p	1		validator
	m	(Ljava/util/function/BiPredicate;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntSet;I)Z	a	lambda$validateEntries$1
		p	0		index
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;B)Lth$e;	a	read
		p	0		buf
		p	1		flags
	m	(Lqx;Lth$b;)V	a	lambda$write$0
		p	0		buf2
		p	1		node
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	(Lqx;)Lth$b;	b	readNode
		p	0		buf
	f	B	a	MASK_TYPE
	f	B	b	FLAG_EXECUTABLE
	f	B	c	FLAG_REDIRECT
	f	B	d	FLAG_CUSTOM_SUGGESTIONS
	f	B	e	TYPE_ROOT
	f	B	f	TYPE_LITERAL
	f	B	g	TYPE_ARGUMENT
	f	I	h	rootIndex
	f	Ljava/util/List;	i	entries
c	th$a	net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;)V	<init>	<init>
		p	1		node
	m	(Ljava/lang/String;Lgf$a;Laaj;)V	<init>	<init>
		p	1		name
		p	2		properties
		p	3		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Laaj;	a	getSuggestionId
		p	0		provider
	m	(Ldl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lgf$a;)V	a	serializeCap
		p	0		buf
		p	1		properties
	m	(Lqx;Lgf;Lgf$a;)V	a	serializeCap
		p	0		buf
		p	1		serializer
		p	2		properties
	f	Ljava/lang/String;	a	id
	f	Lgf$a;	b	argumentType
	f	Laaj;	c	suggestionId
c	th$b	net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	m	(Lth$e;II[I)V	<init>	<init>
		p	1		suggestableNode
		p	2		flags
		p	3		redirectNodeIndex
		p	4		childNodeIndices
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	a	canBuild
		p	1		indices
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	b	canResolve
		p	1		indices
	f	Lth$e;	a	stub
	f	I	b	flags
	f	I	c	redirect
	f	[I	d	children
c	th$c	net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		literal
	m	(Ldl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lqx;)V	a	write
		p	1		buf
	f	Ljava/lang/String;	a	id
c	th$d	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver
	m	(Ldl;Ljava/util/List;)V	<init>	<init>
		p	1		commandRegistryAccess
		p	2		nodeDatas
	m	(I)Lcom/mojang/brigadier/tree/CommandNode;	a	resolve
		p	1		index
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$resolve$0
		p	0		context
	f	Ldl;	a	context
	f	Ljava/util/List;	b	entries
	f	Ljava/util/List;	c	nodes
c	th$e	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub
	m	(Ldl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lqx;)V	a	write
		p	1		buf
c	ti	net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	f	I	a	containerId
c	tj	net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	m	(IILhi;Lcaa;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		contents
		p	4		cursorStack
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()Ljava/util/List;	c	getItems
	m	()Lcaa;	d	getCarriedItem
	m	()I	e	getStateId
	f	I	a	containerId
	f	I	b	stateId
	f	Ljava/util/List;	c	items
	f	Lcaa;	d	carriedItem
c	tk	net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		propertyId
		p	3		value
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()I	c	getId
	m	()I	d	getValue
	f	I	a	containerId
	f	I	b	id
	f	I	c	value
c	tl	net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	m	(IIILcaa;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		stack
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()I	c	getSlot
	m	()Lcaa;	d	getItem
	m	()I	e	getStateId
	f	I	a	CARRIED_ITEM
	f	I	b	PLAYER_INVENTORY
	f	I	c	containerId
	f	I	d	stateId
	f	I	e	slot
	f	Lcaa;	f	itemStack
c	tm	net/minecraft/network/protocol/game/ClientboundCooldownPacket
	m	(Lbzw;I)V	<init>	<init>
		p	1		item
		p	2		cooldown
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lbzw;	b	getItem
	m	()I	c	getDuration
	f	Lbzw;	a	item
	f	I	b	duration
c	tn	net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	m	(Laaj;Lqx;)V	<init>	<init>
		p	1		channel
		p	2		data
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Laaj;	b	getIdentifier
	m	()Lqx;	c	getData
	f	Laaj;	a	BRAND
	f	Laaj;	b	DEBUG_PATHFINDING_PACKET
	f	Laaj;	c	DEBUG_NEIGHBORSUPDATE_PACKET
	f	Laaj;	d	DEBUG_STRUCTURES_PACKET
	f	Laaj;	e	DEBUG_WORLDGENATTEMPT_PACKET
	f	Laaj;	f	DEBUG_POI_TICKET_COUNT_PACKET
	f	Laaj;	g	DEBUG_POI_ADDED_PACKET
	f	Laaj;	h	DEBUG_POI_REMOVED_PACKET
	f	Laaj;	i	DEBUG_VILLAGE_SECTIONS
	f	Laaj;	j	DEBUG_GOAL_SELECTOR
	f	Laaj;	k	DEBUG_BRAIN
	f	Laaj;	l	DEBUG_BEE
	f	Laaj;	m	DEBUG_HIVE
	f	Laaj;	n	DEBUG_GAME_TEST_ADD_MARKER
	f	Laaj;	o	DEBUG_GAME_TEST_CLEAR
	f	Laaj;	p	DEBUG_RAIDS
	f	Laaj;	q	DEBUG_GAME_EVENT
	f	Laaj;	r	DEBUG_GAME_EVENT_LISTENER
	f	I	s	MAX_PAYLOAD_SIZE
	f	Laaj;	t	identifier
	f	Lqx;	u	data
c	to	net/minecraft/network/protocol/game/ClientboundCustomSoundPacket
	m	(Laaj;Lajf;Ldvt;FFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		pos
		p	4		volume
		p	5		pitch
		p	6		seed
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Laaj;	b	getName
	m	()Lajf;	c	getSource
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
	m	()J	i	getSeed
	f	F	a	LOCATION_ACCURACY
	f	Laaj;	b	name
	f	Lajf;	c	source
	f	I	d	x
	f	I	e	y
	f	I	f	z
	f	F	g	volume
	f	F	h	pitch
	f	J	i	seed
c	tp	net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;)V	<init>	<init>
		p	1		reason
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lrm;	b	getReason
	f	Lrm;	a	reason
c	tq	net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	m	(Lbaq;B)V	<init>	<init>
		p	1		entity
		p	2		status
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcga;)Lbaq;	a	getEntity
		p	1		world
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()B	b	getEventId
	f	I	a	entityId
	f	B	b	eventId
c	tr	net/minecraft/network/protocol/game/ClientboundExplodePacket
	m	(DDDFLjava/util/List;Ldvt;)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		radius
		p	8		affectedBlocks
		p	9		playerVelocity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(IIILqx;)Lgt;	a	lambda$new$0
		p	3		buf2
	m	(IIILqx;Lgt;)V	a	lambda$write$1
		p	3		buf2
		p	4		pos
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()F	b	getKnockbackX
	m	()F	c	getKnockbackY
	m	()F	d	getKnockbackZ
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()F	h	getPower
	m	()Ljava/util/List;	i	getToBlow
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	power
	f	Ljava/util/List;	e	toBlow
	f	F	f	knockbackX
	f	F	g	knockbackY
	f	F	h	knockbackZ
c	ts	net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getX
	m	()I	c	getZ
	f	I	a	x
	f	I	b	z
c	tt	net/minecraft/network/protocol/game/ClientboundGameEventPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Ltt$a;F)V	<init>	<init>
		p	1		reason
		p	2		value
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ltt$a;	b	getEvent
	m	()F	c	getParam
	f	Ltt$a;	a	NO_RESPAWN_BLOCK_AVAILABLE
	f	Ltt$a;	b	START_RAINING
	f	Ltt$a;	c	STOP_RAINING
	f	Ltt$a;	d	CHANGE_GAME_MODE
	f	Ltt$a;	e	WIN_GAME
	f	Ltt$a;	f	DEMO_EVENT
	f	Ltt$a;	g	ARROW_HIT_PLAYER
	f	Ltt$a;	h	RAIN_LEVEL_CHANGE
	f	Ltt$a;	i	THUNDER_LEVEL_CHANGE
	f	Ltt$a;	j	PUFFER_FISH_STING
	f	Ltt$a;	k	GUARDIAN_ELDER_EFFECT
	f	Ltt$a;	l	IMMEDIATE_RESPAWN
	f	I	m	DEMO_PARAM_INTRO
	f	I	n	DEMO_PARAM_HINT_1
	f	I	o	DEMO_PARAM_HINT_2
	f	I	p	DEMO_PARAM_HINT_3
	f	I	q	DEMO_PARAM_HINT_4
	f	Ltt$a;	r	event
	f	F	s	param
c	tt$a	net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	m	(I)V	<init>	<init>
		p	1		id
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	TYPES
	f	I	b	id
c	tu	net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		slotCount
		p	3		horseId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()I	c	getSize
	m	()I	d	getEntityId
	f	I	a	containerId
	f	I	b	size
	f	I	c	entityId
c	tv	net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	m	(Lcwh;)V	<init>	<init>
		p	1		worldBorder
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()D	b	getNewCenterX
	m	()D	c	getNewCenterZ
	m	()D	d	getNewSize
	m	()D	e	getOldSize
	m	()J	f	getLerpTime
	m	()I	g	getNewAbsoluteMaxSize
	m	()I	h	getWarningTime
	m	()I	i	getWarningBlocks
	f	D	a	newCenterX
	f	D	b	newCenterZ
	f	D	c	oldSize
	f	D	d	newSize
	f	J	e	lerpTime
	f	I	f	newAbsoluteMaxSize
	f	I	g	warningBlocks
	f	I	h	warningTime
c	tw	net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()J	b	getId
	f	J	a	id
c	tx	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	m	(Lcww;)V	<init>	<init>
		p	1		chunk
	m	(Lqx;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		z
	m	()Lqx;	a	getReadBuffer
	m	(II)Ljava/util/function/Consumer;	a	getBlockEntitiesTagsConsumer
		p	1		x
		p	2		z
	m	(IILtx$b;)V	a	lambda$getBlockEntitiesTagsConsumer$1
		p	3		visitor
	m	(Lcww;)I	a	calculateChunkSize
		p	0		chunk
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lcww;)V	a	extractChunkData
		p	0		buf
		p	1		chunk
	m	(Lqx;Ltx$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		entry
	m	(Ltx$b;II)V	a	getBlockEntitiesTags
		p	1		consumer
		p	2		x
		p	3		z
	m	()Lpj;	b	getHeightmaps
	m	()Lio/netty/buffer/ByteBuf;	c	getWriteBuffer
	f	I	a	TWO_MEGABYTES
	f	Lpj;	b	heightmaps
	f	[B	c	buffer
	f	Ljava/util/List;	d	blockEntitiesData
c	tx$a	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	m	(IILcsn;Lpj;)V	<init>	<init>
		p	1		localXz
		p	2		y
		p	3		type
		p	4		nbt
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcsl;)Ltx$a;	a	create
		p	0		blockEntity
	m	(Lqx;)V	a	write
		p	1		buf
	f	I	a	packedXZ
	f	I	b	y
	f	Lcsn;	c	type
	f	Lpj;	d	tag
c	tx$b	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
	m	(Lgt;Lcsn;Lpj;)V	accept	accept
		p	1		pos
		p	2		type
		p	3		nbt
c	ty	net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	m	(Lcww;Ldop;Ljava/util/BitSet;Ljava/util/BitSet;Z)V	<init>	<init>
		p	1		chunk
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
		p	5		nonEdge
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getX
	m	()I	c	getZ
	m	()Ltx;	d	getChunkData
	m	()Luc;	e	getLightData
	f	I	a	x
	f	I	b	z
	f	Ltx;	c	chunkData
	f	Luc;	d	lightData
c	tz	net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	m	(ILgt;IZ)V	<init>	<init>
		p	1		eventId
		p	2		pos
		p	3		data
		p	4		global
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	isGlobalEvent
	m	()I	c	getType
	m	()I	d	getData
	m	()Lgt;	e	getPos
	f	I	a	type
	f	Lgt;	b	pos
	f	I	c	data
	f	Z	d	globalEvent
c	ua	net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	m	(Lim;ZDDDFFFFI)V	<init>	<init>
		p	1		parameters
		p	2		longDistance
		p	3		x
		p	5		y
		p	7		z
		p	9		offsetX
		p	10		offsetY
		p	11		offsetZ
		p	12		speed
		p	13		count
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lin;)Lim;	a	readParticle
		p	1		buf
		p	2		type
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	isOverrideLimiter
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getXDist
	m	()F	g	getYDist
	m	()F	h	getZDist
	m	()F	i	getMaxSpeed
	m	()I	j	getCount
	m	()Lim;	k	getParticle
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	xDist
	f	F	e	yDist
	f	F	f	zDist
	f	F	g	maxSpeed
	f	I	h	count
	f	Z	i	overrideLimiter
	f	Lim;	j	particle
c	ub	net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	m	(Lcfh;Ldop;Ljava/util/BitSet;Ljava/util/BitSet;Z)V	<init>	<init>
		p	1		chunkPos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
		p	5		nonEdge
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getX
	m	()I	c	getZ
	m	()Luc;	d	getLightData
	f	I	a	x
	f	I	b	z
	f	Luc;	c	lightData
c	uc	net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	m	(Lcfh;Ldop;Ljava/util/BitSet;Ljava/util/BitSet;Z)V	<init>	<init>
		p	1		pos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
		p	5		nonEdge
	m	(Lqx;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		y
	m	()Ljava/util/BitSet;	a	getSkyYMask
	m	(Lcfh;Ldop;Lcgj;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V	a	prepareSectionData
		p	1		pos
		p	2		lightProvider
		p	3		type
		p	4		y
		p	5		initialized
		p	6		uninitialized
		p	7		nibbles
	m	(Lqx;)V	a	write
		p	1		buf
	m	()Ljava/util/BitSet;	b	getEmptySkyYMask
	m	(Lqx;)[B	b	lambda$new$1
		p	0		b
	m	()Ljava/util/List;	c	getSkyUpdates
	m	(Lqx;)[B	c	lambda$new$0
		p	0		b
	m	()Ljava/util/BitSet;	d	getBlockYMask
	m	()Ljava/util/BitSet;	e	getEmptyBlockYMask
	m	()Ljava/util/List;	f	getBlockUpdates
	m	()Z	g	getTrustEdges
	f	Ljava/util/BitSet;	a	skyYMask
	f	Ljava/util/BitSet;	b	blockYMask
	f	Ljava/util/BitSet;	c	emptySkyYMask
	f	Ljava/util/BitSet;	d	emptyBlockYMask
	f	Ljava/util/List;	e	skyUpdates
	f	Ljava/util/List;	f	blockUpdates
	f	Z	g	trustEdges
c	ud	net/minecraft/network/protocol/game/ClientboundLoginPacket
	m	(IZLcfx;Lcfx;Ljava/util/Set;Lhn$a;Laai;Laai;JIIIZZZZLjava/util/Optional;)V	<init>	<init>
		p	1		playerEntityId
		p	3		previousGameMode
		p	11		maxPlayers
		p	12		chunkLoadDistance
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	playerId
	m	(Lqx;)Laai;	b	lambda$new$0
		p	0		b
	m	()Z	c	hardcore
	m	()Lcfx;	d	gameType
	m	()Lcfx;	e	previousGameType
	m	()Ljava/util/Set;	f	levels
	m	()Lhn$a;	g	registryHolder
	m	()Laai;	h	dimensionType
	m	()Laai;	i	dimension
	m	()J	j	seed
	m	()I	k	maxPlayers
	m	()I	l	chunkRadius
	m	()I	m	simulationDistance
	m	()Z	n	reducedDebugInfo
	m	()Z	o	showDeathScreen
	m	()Z	p	isDebug
	m	()Z	q	isFlat
	m	()Ljava/util/Optional;	r	lastDeathLocation
	f	I	a	playerId
	f	Z	b	hardcore
	f	Lcfx;	c	gameType
	f	Lcfx;	d	previousGameType
	f	Ljava/util/Set;	e	levels
	f	Lhn$a;	f	registryHolder
	f	Laai;	g	dimensionType
	f	Laai;	h	dimension
	f	J	i	seed
	f	I	j	maxPlayers
	f	I	k	chunkRadius
	f	I	l	simulationDistance
	f	Z	m	reducedDebugInfo
	f	Z	n	showDeathScreen
	f	Z	o	isDebug
	f	Z	p	isFlat
	f	Ljava/util/Optional;	q	lastDeathLocation
c	ue	net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	m	(IBZLjava/util/Collection;Ldqj$b;)V	<init>	<init>
		p	1		id
		p	2		scale
		p	3		showIcons
		p	4		icons
		p	5		updateData
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Ldqj;)V	a	applyToMap
		p	1		mapState
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Ldqg;)V	a	lambda$write$2
		p	0		b
		p	1		icon
	m	(Lqx;Ljava/util/List;)V	a	lambda$write$3
		p	0		buf2
		p	1		icons
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getMapId
	m	(Lqx;)Ljava/util/List;	b	lambda$new$1
		p	0		buf2
	m	()B	c	getScale
	m	(Lqx;)Ldqg;	c	lambda$new$0
		p	0		buf3
	m	()Z	d	isLocked
	f	I	a	mapId
	f	B	b	scale
	f	Z	c	locked
	f	Ljava/util/List;	d	decorations
	f	Ldqj$b;	e	colorPatch
c	uf	net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	m	(ILcez;IIZZ)V	<init>	<init>
		p	1		syncId
		p	2		recipes
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()Lcez;	c	getOffers
	m	()I	d	getVillagerLevel
	m	()I	e	getVillagerXp
	m	()Z	f	showProgress
	m	()Z	g	canRestock
	f	I	a	containerId
	f	Lcez;	b	offers
	f	I	c	villagerLevel
	f	I	d	villagerXp
	f	Z	e	showProgress
	f	Z	f	canRestock
c	ug	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	m	(ISSSBBZZZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
		p	8		rotate
		p	9		positionChanged
	m	(Lcga;)Lbaq;	a	getEntity
		p	1		world
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()S	b	getXa
	m	()S	c	getYa
	m	()S	d	getZa
	m	()B	e	getyRot
	m	()B	f	getxRot
	m	()Z	g	hasRotation
	m	()Z	h	hasPosition
	m	()Z	i	isOnGround
	f	I	a	entityId
	f	S	b	xa
	f	S	c	ya
	f	S	d	za
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
	f	Z	h	hasRot
	f	Z	i	hasPos
c	ug$a	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	m	(ISSSZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		onGround
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lqx;)Lug$a;	b	read
		p	0		buf
c	ug$b	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	m	(ISSSBBZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lqx;)Lug$b;	b	read
		p	0		buf
c	ug$c	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	m	(IBBZ)V	<init>	<init>
		p	1		entityId
		p	2		yaw
		p	3		pitch
		p	4		onGround
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lqx;)Lug$c;	b	read
		p	0		buf
c	uh	net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	ui	net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	m	(Lazl;)V	<init>	<init>
		p	1		hand
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lazl;	b	getHand
	f	Lazl;	a	hand
c	uj	net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	m	(ILbwt;Lrm;)V	<init>	<init>
		p	1		syncId
		p	2		type
		p	3		name
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()Lbwt;	c	getType
	m	()Lrm;	d	getTitle
	f	I	a	containerId
	f	Lbwt;	b	type
	f	Lrm;	c	title
c	uk	net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	f	Lgt;	a	pos
c	ul	net/minecraft/network/protocol/game/ClientboundPingPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	f	I	a	id
c	um	net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	m	(ILccs;)V	<init>	<init>
		p	1		syncId
		p	2		recipe
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Laaj;	b	getRecipe
	m	()I	c	getContainerId
	f	I	a	containerId
	f	Laaj;	b	recipe
c	un	net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	m	(Lbtc;)V	<init>	<init>
		p	1		abilities
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	isInvulnerable
	m	()Z	c	isFlying
	m	()Z	d	canFly
	m	()Z	e	canInstabuild
	m	()F	f	getFlyingSpeed
	m	()F	g	getWalkingSpeed
	f	I	a	FLAG_INVULNERABLE
	f	I	b	FLAG_FLYING
	f	I	c	FLAG_CAN_FLY
	f	I	d	FLAG_INSTABUILD
	f	Z	e	invulnerable
	f	Z	f	isFlying
	f	Z	g	canFly
	f	Z	h	instabuild
	f	F	i	flyingSpeed
	f	F	j	walkingSpeed
c	uo	net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isSkippable
	m	(Lhm;)Lrj;	a	resolveType
		p	1		registry
	m	(Ljava/time/Instant;)Z	a	hasExpired
		p	1		currentTime
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lru;	b	getMessage
	m	()Lrm;	c	signedContent
	m	()Ljava/util/Optional;	d	unsignedContent
	m	()I	e	typeId
	m	()Lri;	f	sender
	m	()Ljava/time/Instant;	g	timeStamp
	m	()Lakq$b;	h	saltSignature
	m	()Ljava/time/Instant;	i	getExpiresAt
	f	Lrm;	a	signedContent
	f	Ljava/util/Optional;	b	unsignedContent
	f	I	c	typeId
	f	Lri;	d	sender
	f	Ljava/time/Instant;	e	timeStamp
	f	Lakq$b;	f	saltSignature
	f	Ljava/time/Duration;	g	MESSAGE_EXPIRES_AFTER
c	up	net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	m	(II)V	<init>	<init>
		p	1		attackerId
		p	2		timeSinceLastAttack
	m	(Lazy;)V	<init>	<init>
		p	1		damageTracker
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	f	I	a	killerId
	f	I	b	duration
c	uq	net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
c	ur	net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	m	(IILrm;)V	<init>	<init>
		p	1		entityId
		p	2		killerId
		p	3		message
	m	(Lazy;Lrm;)V	<init>	<init>
		p	1		damageTracker
		p	2		message
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isSkippable
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getKillerId
	m	()I	c	getPlayerId
	m	()Lrm;	d	getMessage
	f	I	a	playerId
	f	I	b	killerId
	f	Lrm;	c	message
c	us	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lus$a;Ljava/util/Collection;)V	<init>	<init>
		p	1		action
		p	2		players
	m	(Lus$a;[Lafp;)V	<init>	<init>
		p	1		action
		p	2		players
	m	(Lafp;)Lus$b;	a	createPlayerUpdate
		p	0		player
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	getEntries
	m	()Lus$a;	c	getAction
	f	Lus$a;	a	action
	f	Ljava/util/List;	b	entries
c	us$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action
	m	()[Lus$a;	a	$values
	m	(Lqx;)Lus$b;	a	read
		p	1		buf
	m	(Lqx;Lus$b;)V	a	write
		p	1		buf
		p	2		entry
	f	Lus$a;	a	ADD_PLAYER
	f	Lus$a;	b	UPDATE_GAME_MODE
	f	Lus$a;	c	UPDATE_LATENCY
	f	Lus$a;	d	UPDATE_DISPLAY_NAME
	f	Lus$a;	e	REMOVE_PLAYER
	f	[Lus$a;	f	$VALUES
c	us$a$1	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$1
	m	(Lqx;)Lus$b;	a	read
		p	1		buf
	m	(Lqx;Lbti$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		publicKeyData
	m	(Lqx;Lus$b;)V	a	write
		p	1		buf
		p	2		entry
c	us$a$2	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$2
	m	(Lqx;)Lus$b;	a	read
		p	1		buf
	m	(Lqx;Lus$b;)V	a	write
		p	1		buf
		p	2		entry
c	us$a$3	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$3
	m	(Lqx;)Lus$b;	a	read
		p	1		buf
	m	(Lqx;Lus$b;)V	a	write
		p	1		buf
		p	2		entry
c	us$a$4	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$4
	m	(Lqx;)Lus$b;	a	read
		p	1		buf
	m	(Lqx;Lus$b;)V	a	write
		p	1		buf
		p	2		entry
c	us$a$5	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action$5
	m	(Lqx;)Lus$b;	a	read
		p	1		buf
	m	(Lqx;Lus$b;)V	a	write
		p	1		buf
		p	2		entry
c	us$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate
	m	(Lcom/mojang/authlib/GameProfile;ILcfx;Lrm;Lbti$a;)V	<init>	<init>
		p	1		profile
		p	2		latency
		p	3		gameMode
		p	4		displayName
		p	5		publicKeyData
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	()I	b	getLatency
	m	()Lcfx;	c	getGameMode
	m	()Lrm;	d	getDisplayName
	m	()Lbti$a;	e	getProfilePublicKey
	f	I	a	latency
	f	Lcfx;	b	gameMode
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Lrm;	d	displayName
	f	Lbti$a;	e	profilePublicKey
c	ut	net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	m	(Lea$a;DDD)V	<init>	<init>
		p	1		selfAnchor
		p	2		targetX
		p	4		targetY
		p	6		targetZ
	m	(Lea$a;Lbaq;Lea$a;)V	<init>	<init>
		p	1		selfAnchor
		p	2		entity
		p	3		targetAnchor
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcga;)Ldvt;	a	getPosition
		p	1		world
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lea$a;	b	getFromAnchor
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	I	d	entity
	f	Lea$a;	e	fromAnchor
	f	Lea$a;	f	toAnchor
	f	Z	g	atEntity
c	uu	net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	m	(DDDFFLjava/util/Set;IZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
		p	10		teleportId
		p	11		shouldDismount
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	m	()I	g	getId
	m	()Z	h	requestDismountVehicle
	m	()Ljava/util/Set;	i	getRelativeArguments
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Ljava/util/Set;	f	relativeArguments
	f	I	g	id
	f	Z	h	dismountVehicle
c	uu$a	net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		shift
	m	()I	a	getMask
	m	(I)Ljava/util/Set;	a	unpack
		p	0		mask
	m	(Ljava/util/Set;)I	a	pack
		p	0		flags
	m	()[Luu$a;	b	$values
	m	(I)Z	b	isSet
		p	1		mask
	f	Luu$a;	a	X
	f	Luu$a;	b	Y
	f	Luu$a;	c	Z
	f	Luu$a;	d	Y_ROT
	f	Luu$a;	e	X_ROT
	f	I	f	bit
	f	[Luu$a;	g	$VALUES
c	uv	net/minecraft/network/protocol/game/ClientboundRecipePacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Luv$a;Ljava/util/Collection;Ljava/util/Collection;Laji;)V	<init>	<init>
		p	1		action
		p	2		recipeIdsToChange
		p	3		recipeIdsToInit
		p	4		options
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	getRecipes
	m	()Ljava/util/List;	c	getHighlights
	m	()Laji;	d	getBookSettings
	m	()Luv$a;	e	getState
	f	Luv$a;	a	state
	f	Ljava/util/List;	b	recipes
	f	Ljava/util/List;	c	toHighlight
	f	Laji;	d	bookSettings
c	uv$a	net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	m	()[Luv$a;	a	$values
	f	Luv$a;	a	INIT
	f	Luv$a;	b	ADD
	f	Luv$a;	c	REMOVE
	f	[Luv$a;	d	$VALUES
c	uw	net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	<init>	<init>
		p	1		entityIds
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	([I)V	<init>	<init>
		p	1		entityIds
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getEntityIds
	f	Lit/unimi/dsi/fastutil/ints/IntList;	a	entityIds
c	ux	net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	m	(ILbah;)V	<init>	<init>
		p	1		entityId
		p	2		effectType
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcga;)Lbaq;	a	getEntity
		p	1		world
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lbah;	b	getEffect
	f	I	a	entityId
	f	Lbah;	b	effect
c	uy	net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	m	(Ljava/lang/String;Ljava/lang/String;ZLrm;)V	<init>	<init>
		p	1		url
		p	2		hash
		p	3		required
		p	4		prompt
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getUrl
	m	()Ljava/lang/String;	c	getHash
	m	()Z	d	isRequired
	m	()Lrm;	e	getPrompt
	f	I	a	MAX_HASH_LENGTH
	f	Ljava/lang/String;	b	url
	f	Ljava/lang/String;	c	hash
	f	Z	d	required
	f	Lrm;	e	prompt
c	uz	net/minecraft/network/protocol/game/ClientboundRespawnPacket
	m	(Laai;Laai;JLcfx;Lcfx;ZZZLjava/util/Optional;)V	<init>	<init>
		p	1		dimensionType
		p	2		dimension
		p	3		sha256Seed
		p	5		gameMode
		p	6		previousGameMode
		p	7		debugWorld
		p	8		flatWorld
		p	9		keepPlayerAttributes
		p	10		lastDeathPos
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Laai;	b	getDimensionType
	m	()Laai;	c	getDimension
	m	()J	d	getSeed
	m	()Lcfx;	e	getPlayerGameType
	m	()Lcfx;	f	getPreviousPlayerGameType
	m	()Z	g	isDebug
	m	()Z	h	isFlat
	m	()Z	i	shouldKeepAllPlayerData
	m	()Ljava/util/Optional;	j	getLastDeathLocation
	f	Laai;	a	dimensionType
	f	Laai;	b	dimension
	f	J	c	seed
	f	Lcfx;	d	playerGameType
	f	Lcfx;	e	previousPlayerGameType
	f	Z	f	isDebug
	f	Z	g	isFlat
	f	Z	h	keepAllPlayerData
	f	Ljava/util/Optional;	i	lastDeathLocation
c	va	net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	m	(Lbaq;B)V	<init>	<init>
		p	1		entity
		p	2		headYaw
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcga;)Lbaq;	a	getEntity
		p	1		world
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()B	b	getYHeadRot
	f	I	a	entityId
	f	B	b	yHeadRot
c	vb	net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	m	(Lhq;Lit/unimi/dsi/fastutil/shorts/ShortSet;Lcwx;Z)V	<init>	<init>
		p	1		sectionPos
		p	2		positions
		p	3		section
		p	4		noLightingUpdates
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Ljava/util/function/BiConsumer;)V	a	runUpdates
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	shouldSuppressLightUpdates
	f	I	a	POS_IN_SECTION_BITS
	f	Lhq;	b	sectionPos
	f	[S	c	positions
	f	[Lcur;	d	states
	f	Z	e	suppressLightUpdates
c	vc	net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	m	(Laaj;)V	<init>	<init>
		p	1		tabId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Laaj;	b	getTab
	f	Laaj;	a	tab
c	vd	net/minecraft/network/protocol/game/ClientboundServerDataPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;Ljava/lang/String;Z)V	<init>	<init>
		p	1		description
		p	2		favicon
		p	3		previewsChat
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/Optional;	b	getMotd
	m	()Ljava/util/Optional;	c	getIconBase64
	m	()Z	d	previewsChat
	f	Ljava/util/Optional;	a	motd
	f	Ljava/util/Optional;	b	iconBase64
	f	Z	c	previewsChat
c	ve	net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;)V	<init>	<init>
		p	1		message
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lrm;	b	getText
	f	Lrm;	a	text
c	vf	net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	m	(Lcwh;)V	<init>	<init>
		p	1		worldBorder
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()D	b	getNewCenterZ
	m	()D	c	getNewCenterX
	f	D	a	newCenterX
	f	D	b	newCenterZ
c	vg	net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	m	(Lcwh;)V	<init>	<init>
		p	1		worldBorder
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()D	b	getOldSize
	m	()D	c	getNewSize
	m	()J	d	getLerpTime
	f	D	a	oldSize
	f	D	b	newSize
	f	J	c	lerpTime
c	vh	net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	m	(Lcwh;)V	<init>	<init>
		p	1		worldBorder
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()D	b	getSize
	f	D	a	size
c	vi	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	m	(Lcwh;)V	<init>	<init>
		p	1		worldBorder
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getWarningDelay
	f	I	a	warningDelay
c	vj	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	m	(Lcwh;)V	<init>	<init>
		p	1		worldBorder
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getWarningBlocks
	f	I	a	warningBlocks
c	vk	net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcga;)Lbaq;	a	getEntity
		p	1		world
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	f	I	a	cameraId
c	vl	net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getSlot
	f	I	a	slot
c	vm	net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getX
	m	()I	c	getZ
	f	I	a	x
	f	I	b	z
c	vn	net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	m	(I)V	<init>	<init>
		p	1		distance
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getRadius
	f	I	a	radius
c	vo	net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	m	(Lgt;F)V	<init>	<init>
		p	1		pos
		p	2		angle
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()F	c	getAngle
	f	Lgt;	a	pos
	f	F	b	angle
c	vp	net/minecraft/network/protocol/game/ClientboundSetDisplayChatPreviewPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	enabled
	f	Z	a	enabled
c	vq	net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	m	(ILdwo;)V	<init>	<init>
		p	1		slot
		p	2		objective
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getSlot
	m	()Ljava/lang/String;	c	getObjectiveName
	f	I	a	slot
	f	Ljava/lang/String;	b	objectiveName
c	vr	net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	m	(ILzu;Z)V	<init>	<init>
		p	1		id
		p	2		tracker
		p	3		forceUpdateAll
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	getUnpackedData
	m	()I	c	getId
	f	I	a	id
	f	Ljava/util/List;	b	packedItems
c	vs	net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	m	(Lbaq;Lbaq;)V	<init>	<init>
		p	1		attachedEntity
		p	2		holdingEntity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getSourceId
	m	()I	c	getDestId
	f	I	a	sourceId
	f	I	b	destId
c	vt	net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	m	(ILdvt;)V	<init>	<init>
		p	1		id
		p	2		velocity
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()I	c	getXa
	m	()I	d	getYa
	m	()I	e	getZa
	f	I	a	id
	f	I	b	xa
	f	I	c	ya
	f	I	d	za
c	vu	net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		id
		p	2		equipmentList
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getEntity
	m	()Ljava/util/List;	c	getSlots
	f	B	a	CONTINUE_MASK
	f	I	b	entity
	f	Ljava/util/List;	c	slots
c	vv	net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	m	(FII)V	<init>	<init>
		p	1		barProgress
		p	2		experienceLevel
		p	3		experience
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()F	b	getExperienceProgress
	m	()I	c	getTotalExperience
	m	()I	d	getExperienceLevel
	f	F	a	experienceProgress
	f	I	b	totalExperience
	f	I	c	experienceLevel
c	vw	net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	m	(FIF)V	<init>	<init>
		p	1		health
		p	2		food
		p	3		saturation
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()F	b	getHealth
	m	()I	c	getFood
	m	()F	d	getSaturation
	f	F	a	health
	f	I	b	food
	f	F	c	saturation
c	vx	net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	m	(Ldwo;I)V	<init>	<init>
		p	1		objective
		p	2		mode
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getObjectiveName
	m	()Lrm;	c	getDisplayName
	m	()I	d	getMethod
	m	()Ldwu$a;	e	getRenderType
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	Ljava/lang/String;	d	objectiveName
	f	Lrm;	e	displayName
	f	Ldwu$a;	f	renderType
	f	I	g	method
c	vy	net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()[I	b	getPassengers
	m	()I	c	getVehicle
	f	I	a	vehicle
	f	[I	b	passengers
c	vz	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	m	(Ljava/lang/String;ILjava/util/Optional;Ljava/util/Collection;)V	<init>	<init>
		p	1		teamName
		p	2		packetType
		p	3		team
		p	4		playerNames
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(I)Z	a	shouldHavePlayerList
		p	0		packetType
	m	(Ldwp;)Lvz;	a	createRemovePacket
		p	0		team
	m	(Ldwp;Ljava/lang/String;Lvz$a;)Lvz;	a	createPlayerPacket
		p	0		team
		p	1		playerName
		p	2		operation
	m	(Ldwp;Z)Lvz;	a	createAddOrModifyPacket
		p	0		team
		p	1		updatePlayers
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lvz$a;	b	getPlayerAction
	m	(I)Z	b	shouldHaveParameters
		p	0		packetType
	m	()Lvz$a;	c	getTeamAction
	m	()Ljava/lang/String;	d	getName
	m	()Ljava/util/Collection;	e	getPlayers
	m	()Ljava/util/Optional;	f	getParameters
	m	()Ljava/lang/IllegalStateException;	g	lambda$write$0
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	I	d	METHOD_JOIN
	f	I	e	METHOD_LEAVE
	f	I	f	MAX_VISIBILITY_LENGTH
	f	I	g	MAX_COLLISION_LENGTH
	f	I	h	method
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Collection;	j	players
	f	Ljava/util/Optional;	k	parameters
c	vz$a	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	m	()[Lvz$a;	a	$values
	f	Lvz$a;	a	ADD
	f	Lvz$a;	b	REMOVE
	f	[Lvz$a;	c	$VALUES
c	vz$b	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	m	(Ldwp;)V	<init>	<init>
		p	1		team
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Lrm;	a	getDisplayName
	m	(Lqx;)V	a	write
		p	1		buf
	m	()I	b	getOptions
	m	()Lp;	c	getColor
	m	()Ljava/lang/String;	d	getNametagVisibility
	m	()Ljava/lang/String;	e	getCollisionRule
	m	()Lrm;	f	getPlayerPrefix
	m	()Lrm;	g	getPlayerSuffix
	f	Lrm;	a	displayName
	f	Lrm;	b	playerPrefix
	f	Lrm;	c	playerSuffix
	f	Ljava/lang/String;	d	nametagVisibility
	f	Ljava/lang/String;	e	collisionRule
	f	Lp;	f	color
	f	I	g	options
c	wa	net/minecraft/network/protocol/game/ClientboundSetScorePacket
	m	(Laay$a;Ljava/lang/String;Ljava/lang/String;I)V	<init>	<init>
		p	1		mode
		p	2		objectiveName
		p	3		playerName
		p	4		score
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getOwner
	m	()Ljava/lang/String;	c	getObjectiveName
	m	()I	d	getScore
	m	()Laay$a;	e	getMethod
	f	Ljava/lang/String;	a	owner
	f	Ljava/lang/String;	b	objectiveName
	f	I	c	score
	f	Laay$a;	d	method
c	wb	net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	simulationDistance
	f	I	a	simulationDistance
c	wc	net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;)V	<init>	<init>
		p	1		subtitle
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lrm;	b	getText
	f	Lrm;	a	text
c	wd	net/minecraft/network/protocol/game/ClientboundSetTimePacket
	m	(JJZ)V	<init>	<init>
		p	1		time
		p	3		timeOfDay
		p	5		doDaylightCycle
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()J	b	getGameTime
	m	()J	c	getDayTime
	f	J	a	gameTime
	f	J	b	dayTime
c	we	net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;)V	<init>	<init>
		p	1		title
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lrm;	b	getText
	f	Lrm;	a	text
c	wf	net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	m	(III)V	<init>	<init>
		p	1		fadeInTicks
		p	2		stayTicks
		p	3		fadeOutTicks
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getFadeIn
	m	()I	c	getStay
	m	()I	d	getFadeOut
	f	I	a	fadeIn
	f	I	b	stay
	f	I	c	fadeOut
c	wg	net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	m	(Lajd;Lajf;Lbaq;FFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		entity
		p	4		volume
		p	5		pitch
		p	6		seed
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lajd;	b	getSound
	m	()Lajf;	c	getSource
	m	()I	d	getId
	m	()F	e	getVolume
	m	()F	f	getPitch
	m	()J	g	getSeed
	f	Lajd;	a	sound
	f	Lajf;	b	source
	f	I	c	id
	f	F	d	volume
	f	F	e	pitch
	f	J	f	seed
c	wh	net/minecraft/network/protocol/game/ClientboundSoundPacket
	m	(Lajd;Lajf;DDDFFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		x
		p	5		y
		p	7		z
		p	9		volume
		p	10		pitch
		p	11		seed
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lajd;	b	getSound
	m	()Lajf;	c	getSource
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
	m	()J	i	getSeed
	f	F	a	LOCATION_ACCURACY
	f	Lajd;	b	sound
	f	Lajf;	c	source
	f	I	d	x
	f	I	e	y
	f	I	f	z
	f	F	g	volume
	f	F	h	pitch
	f	J	i	seed
c	wi	net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	m	(Laaj;Lajf;)V	<init>	<init>
		p	1		soundId
		p	2		category
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Laaj;	b	getName
	m	()Lajf;	c	getSource
	f	I	a	HAS_SOURCE
	f	I	b	HAS_SOUND
	f	Laaj;	c	name
	f	Lajf;	d	source
c	wj	net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isSkippable
	m	(Lhm;)Lrj;	a	resolveType
		p	1		registry
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lrm;	b	content
	m	()I	c	typeId
	f	Lrm;	a	content
	f	I	b	typeId
c	wk	net/minecraft/network/protocol/game/ClientboundTabListPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;Lrm;)V	<init>	<init>
		p	1		header
		p	2		footer
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Lrm;	b	getHeader
	m	()Lrm;	c	getFooter
	f	Lrm;	a	header
	f	Lrm;	b	footer
c	wl	net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	m	(ILpj;)V	<init>	<init>
		p	1		transactionId
		p	2		nbt
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isSkippable
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	()Lpj;	c	getTag
	f	I	a	transactionId
	f	Lpj;	b	tag
c	wm	net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	m	(III)V	<init>	<init>
		p	1		entityId
		p	2		collectorId
		p	3		stackAmount
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getItemId
	m	()I	c	getPlayerId
	m	()I	d	getAmount
	f	I	a	itemId
	f	I	b	playerId
	f	I	c	amount
c	wn	net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()B	f	getyRot
	m	()B	g	getxRot
	m	()Z	h	isOnGround
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
c	wo	net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V	<init>	<init>
		p	1		clearCurrent
		p	2		toEarn
		p	3		toRemove
		p	4		toSetProgress
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Laf$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		task
	m	(Lqx;Lah;)V	a	lambda$write$1
		p	0		buf2
		p	1		progress
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/Map;	b	getAdded
	m	()Ljava/util/Set;	c	getRemoved
	m	()Ljava/util/Map;	d	getProgress
	m	()Z	e	shouldReset
	f	Z	a	reset
	f	Ljava/util/Map;	b	added
	f	Ljava/util/Set;	c	removed
	f	Ljava/util/Map;	d	progress
c	wp	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	m	(ILjava/util/Collection;)V	<init>	<init>
		p	1		entityId
		p	2		attributes
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lbce;)V	a	lambda$write$2
		p	0		buf3
		p	1		modifier
	m	(Lqx;Lwp$a;)V	a	lambda$write$3
		p	0		buf2
		p	1		attribute
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()I	b	getEntityId
	m	(Lqx;)Lwp$a;	b	lambda$new$1
		p	0		buf2
	m	()Ljava/util/List;	c	getValues
	m	(Lqx;)Lbce;	c	lambda$new$0
		p	0		modifiers
	f	I	a	entityId
	f	Ljava/util/List;	b	attributes
c	wp$a	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	m	(Lbcb;DLjava/util/Collection;)V	<init>	<init>
		p	1		attribute
		p	2		baseValue
		p	4		modifiers
	m	()Lbcb;	a	getAttribute
	m	()D	b	getBase
	m	()Ljava/util/Collection;	c	getModifiers
	f	Lbcb;	a	attribute
	f	D	b	base
	f	Ljava/util/Collection;	c	modifiers
c	wq	net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	m	(ILbaj;)V	<init>	<init>
		p	1		entityId
		p	2		effect
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lbaj$a;)V	a	lambda$write$1
		p	0		buf2
		p	1		factorCalculationData
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Z	b	isSuperLongDuration
	m	(Lqx;)Lbaj$a;	b	lambda$new$0
		p	0		buf2
	m	()I	c	getEntityId
	m	()Lbah;	d	getEffect
	m	()B	e	getEffectAmplifier
	m	()I	f	getEffectDurationTicks
	m	()Z	g	isEffectVisible
	m	()Z	h	isEffectAmbient
	m	()Z	i	effectShowsIcon
	m	()Lbaj$a;	j	getFactorData
	f	S	a	LONG_DURATION_THRESHOLD
	f	I	b	FLAG_AMBIENT
	f	I	c	FLAG_VISIBLE
	f	I	d	FLAG_SHOW_ICON
	f	I	e	entityId
	f	Lbah;	f	effect
	f	B	g	effectAmplifier
	f	I	h	effectDurationTicks
	f	B	i	flags
	f	Lbaj$a;	j	factorData
c	wr	net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		recipes
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Laaj;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lccs;)V	a	toNetwork
		p	0		buf
		p	1		recipe
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	getRecipes
	m	(Lqx;)Lccs;	b	fromNetwork
		p	0		buf
	f	Ljava/util/List;	a	recipes
c	ws	net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		groups
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Laai;)V	a	lambda$write$1
		p	0		buf
		p	1		registryKey
	m	(Lqx;Lakk$a;)V	a	lambda$write$2
		p	0		buf
		p	1		serializedGroup
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lsr;)V	a	handle
		p	1		listener
	m	()Ljava/util/Map;	b	getTags
	m	(Lqx;)Laai;	b	lambda$new$0
		p	0		buf
	f	Ljava/util/Map;	a	tags
c	wt	net/minecraft/network/protocol/game/DebugEntityNameGenerator
	m	(Lalu;[Ljava/lang/String;)Ljava/lang/String;	a	getRandomString
		p	0		random
		p	1		options
	m	(Lbaq;)Ljava/lang/String;	a	getEntityName
		p	0		entity
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	getEntityName
		p	0		uuid
	m	(Ljava/util/UUID;)Lalu;	b	getRandom
		p	0		uuid
	f	[Ljava/lang/String;	a	NAMES_FIRST_PART
	f	[Ljava/lang/String;	b	NAMES_SECOND_PART
c	wu	net/minecraft/network/protocol/game/DebugPackets
	m	(Laai;)Ljava/lang/String;	a	lambda$sendPoiAddedPacket$2
	m	(Lafo;)V	a	sendGameTestClearPacket
		p	0		world
	m	(Lafo;Lblw;)V	a	lambda$sendPoiPacketsForChunk$1
		p	0		world
		p	1		poi
	m	(Lafo;Lcfh;)V	a	sendPoiPacketsForChunk
		p	0		world
		p	1		pos
	m	(Lafo;Lgt;)V	a	sendPoiAddedPacket
		p	0		world
		p	1		pos
	m	(Lafo;Lgt;Ljava/lang/String;II)V	a	sendGameTestAddMarker
		p	0		world
		p	1		pos
		p	2		message
		p	3		color
		p	4		duration
	m	(Lafo;Ljava/lang/Object;)Ljava/lang/String;	a	getShortDescription
		p	0		world
		p	1		object
	m	(Lafo;Ljava/util/Collection;)V	a	sendRaids
		p	0		server
		p	1		raids
	m	(Lafo;Lqx;Laaj;)V	a	sendPacketToAllPlayers
		p	0		world
		p	1		buf
		p	2		channel
	m	(Lbbf;)V	a	sendEntityBrain
		p	0		living
	m	(Lbbf;J)Ljava/util/List;	a	getMemoryDescriptions
		p	0		entity
		p	1		currentTime
	m	(Lbbf;Lqx;)V	a	writeBrain
		p	0		entity
		p	1		buf
	m	(Lbmi;)V	a	sendBeeInfo
		p	0		bee
	m	(Lcga;Lbbh;Lbht;)V	a	sendGoalSelector
		p	0		world
		p	1		mob
		p	2		goalSelector
	m	(Lcga;Lbbh;Ldpo;F)V	a	sendPathFindingPacket
		p	0		world
		p	1		mob
		p	2		path
		p	3		nodeReachProximity
	m	(Lcga;Lcyy;Ldvt;)V	a	sendGameEventInfo
		p	0		world
		p	1		event
		p	2		pos
	m	(Lcga;Lcza;)V	a	sendGameEventListenerInfo
		p	0		world
		p	1		eventListener
	m	(Lcga;Lgt;)V	a	sendNeighborsUpdatePacket
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Lcsi;)V	a	sendHiveInfo
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcgs;Ldkm;)V	a	sendStructurePacket
		p	0		world
		p	1		structureStart
	m	(Lhc;)Z	a	lambda$sendPoiPacketsForChunk$0
	m	(Ljava/util/List;Ljava/lang/String;Lbju;Ljava/lang/Integer;)V	a	lambda$writeBrain$9
		p	2		type
		p	3		value
	m	(Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	lambda$writeBrain$10
		p	1		uuid
		p	2		gossips
	m	(Lqx;Lbjf;)V	a	lambda$sendGoalSelector$3
		p	0		buf
		p	1		goal
	m	(Lqx;Lbum;)V	a	lambda$sendRaids$4
		p	0		buf
		p	1		raid
	m	(Lqx;Lbuq;)V	a	lambda$writeBrain$7
		p	0		buf2
		p	1		activity
	m	(Lqx;Ldpo;)V	a	lambda$writeBrain$6
	m	(Lqx;Ljava/lang/String;)V	a	lambda$writeBrain$8
		p	0		buf2
		p	1		memory
	m	(Lafo;Lgt;)V	b	sendPoiRemovedPacket
		p	0		world
		p	1		pos
	m	(Lqx;Ldpo;)V	b	lambda$sendBeeInfo$5
	m	(Lafo;Lgt;)V	c	sendPoiTicketCountPacket
		p	0		world
		p	1		pos
	m	(Lafo;Lgt;)V	d	sendVillageSectionsPacket
		p	0		world
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
c	wv	net/minecraft/network/protocol/game/ServerGamePacketListener
	m	(Lwx;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Lwy;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Lwz;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lxa;)V	a	handleChatCommand
		p	1		packet
	m	(Lxb;)V	a	handleChat
		p	1		packet
	m	(Lxc;)V	a	handleChatPreview
		p	1		packet
	m	(Lxd;)V	a	handleClientCommand
		p	1		packet
	m	(Lxe;)V	a	handleClientInformation
		p	1		packet
	m	(Lxf;)V	a	handleCustomCommandSuggestions
		p	1		packet
	m	(Lxg;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Lxh;)V	a	handleContainerClick
		p	1		packet
	m	(Lxi;)V	a	handleContainerClose
		p	1		packet
	m	(Lxj;)V	a	handleCustomPayload
		p	1		packet
	m	(Lxk;)V	a	handleEditBook
		p	1		packet
	m	(Lxl;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Lxm;)V	a	handleInteract
		p	1		packet
	m	(Lxn;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Lxo;)V	a	handleKeepAlive
		p	1		packet
	m	(Lxp;)V	a	handleLockDifficulty
		p	1		packet
	m	(Lxq;)V	a	handleMovePlayer
		p	1		packet
	m	(Lxr;)V	a	handleMoveVehicle
		p	1		packet
	m	(Lxs;)V	a	handlePaddleBoat
		p	1		packet
	m	(Lxt;)V	a	handlePickItem
		p	1		packet
	m	(Lxu;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lxv;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lxw;)V	a	handlePlayerAction
		p	1		packet
	m	(Lxx;)V	a	handlePlayerCommand
		p	1		packet
	m	(Lxy;)V	a	handlePlayerInput
		p	1		packet
	m	(Lxz;)V	a	handlePong
		p	1		packet
	m	(Lya;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Lyb;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Lyc;)V	a	handleRenameItem
		p	1		packet
	m	(Lyd;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Lye;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Lyf;)V	a	handleSelectTrade
		p	1		packet
	m	(Lyg;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Lyh;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Lyi;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Lyj;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Lyk;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Lyl;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Lym;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Lyn;)V	a	handleSignUpdate
		p	1		packet
	m	(Lyo;)V	a	handleAnimate
		p	1		packet
	m	(Lyp;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Lyq;)V	a	handleUseItemOn
		p	1		packet
	m	(Lyr;)V	a	handleUseItem
		p	1		packet
c	ww	net/minecraft/network/protocol/game/ServerPacketListener
	m	()Z	b	shouldPropagateHandlingExceptions
c	wx	net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	m	(I)V	<init>	<init>
		p	1		teleportId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getId
	f	I	a	id
c	wy	net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	m	(ILgt;)V	<init>	<init>
		p	1		transactionId
		p	2		pos
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	()Lgt;	c	getPos
	f	I	a	transactionId
	f	Lgt;	b	pos
c	wz	net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	m	(Lazj;)V	<init>	<init>
		p	1		difficulty
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lazj;	b	getDifficulty
	f	Lazj;	a	difficulty
c	xa	net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	m	(Ljava/lang/String;Ljava/time/Instant;Ldv;Z)V	<init>	<init>
		p	1		command
		p	2		timestamp
		p	3		argumentSignatures
		p	4		signedPreview
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Ljava/util/UUID;)Ldp;	a	signingContext
		p	1		sender
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	command
	m	()Ljava/time/Instant;	c	timeStamp
	m	()Ldv;	d	argumentSignatures
	m	()Z	e	signedPreview
	f	Ljava/lang/String;	a	command
	f	Ljava/time/Instant;	b	timeStamp
	f	Ldv;	c	argumentSignatures
	f	Z	d	signedPreview
c	xb	net/minecraft/network/protocol/game/ServerboundChatPacket
	m	(Ljava/lang/String;Lrr;Z)V	<init>	<init>
		p	1		chatMessage
		p	2		signature
		p	3		previewed
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Ljava/util/UUID;)Lrr;	a	getSignature
		p	1		sender
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getMessage
	m	()Ljava/time/Instant;	c	getTimeStamp
	m	()Z	d	signedPreview
	f	Ljava/time/Duration;	a	MESSAGE_EXPIRES_AFTER
	f	Ljava/lang/String;	b	message
	f	Ljava/time/Instant;	c	timeStamp
	f	Lakq$b;	d	saltSignature
	f	Z	e	signedPreview
c	xc	net/minecraft/network/protocol/game/ServerboundChatPreviewPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	queryId
	m	()Ljava/lang/String;	c	query
	f	I	a	queryId
	f	Ljava/lang/String;	b	query
c	xd	net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lxd$a;)V	<init>	<init>
		p	1		mode
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lxd$a;	b	getAction
	f	Lxd$a;	a	action
c	xd$a	net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	m	()[Lxd$a;	a	$values
	f	Lxd$a;	a	PERFORM_RESPAWN
	f	Lxd$a;	b	REQUEST_STATS
	f	[Lxd$a;	c	$VALUES
c	xe	net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	m	(Ljava/lang/String;ILbtd;ZILbba;ZZ)V	<init>	<init>
		p	1		language
		p	2		viewDistance
		p	3		chatVisibility
		p	4		chatColors
		p	5		modelBitMask
		p	6		mainArm
		p	7		filterText
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	language
	m	()I	c	viewDistance
	m	()Lbtd;	d	chatVisibility
	m	()Z	e	chatColors
	m	()I	f	modelCustomisation
	m	()Lbba;	g	mainHand
	m	()Z	h	textFilteringEnabled
	m	()Z	i	allowsListing
	f	I	a	MAX_LANGUAGE_LENGTH
	f	Ljava/lang/String;	b	language
	f	I	c	viewDistance
	f	Lbtd;	d	chatVisibility
	f	Z	e	chatColors
	f	I	f	modelCustomisation
	f	Lbba;	g	mainHand
	f	Z	h	textFilteringEnabled
	f	Z	i	allowsListing
c	xf	net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		completionId
		p	2		partialCommand
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Ljava/lang/String;	c	getCommand
	f	I	a	id
	f	Ljava/lang/String;	b	command
c	xg	net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	m	(II)V	<init>	<init>
		p	1		syncId
		p	2		buttonId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()I	c	getButtonId
	f	I	a	containerId
	f	I	b	buttonId
c	xh	net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	m	(IIIILbvy;Lcaa;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		button
		p	5		actionType
		p	6		stack
		p	7		modifiedStacks
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	(Lqx;)Ljava/lang/Integer;	b	lambda$new$0
		p	0		buf
	m	()I	c	getSlotNum
	m	()I	d	getButtonNum
	m	()Lcaa;	e	getCarriedItem
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	getChangedSlots
	m	()Lbvy;	g	getClickType
	m	()I	h	getStateId
	f	I	a	MAX_SLOT_COUNT
	f	I	b	containerId
	f	I	c	stateId
	f	I	d	slotNum
	f	I	e	buttonNum
	f	Lbvy;	f	clickType
	f	Lcaa;	g	carriedItem
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	changedSlots
c	xi	net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	f	I	a	containerId
c	xj	net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	m	(Laaj;Lqx;)V	<init>	<init>
		p	1		channel
		p	2		data
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Laaj;	b	getIdentifier
	m	()Lqx;	c	getData
	f	Laaj;	a	BRAND
	f	I	b	MAX_PAYLOAD_SIZE
	f	Laaj;	c	identifier
	f	Lqx;	d	data
c	xk	net/minecraft/network/protocol/game/ServerboundEditBookPacket
	m	(ILjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		slot
		p	2		pages
		p	3		title
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Ljava/lang/String;)V	a	lambda$write$3
		p	0		buf2
		p	1		title
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	getPages
	m	(Lqx;)Ljava/lang/String;	b	lambda$new$1
		p	0		buf2
	m	(Lqx;Ljava/lang/String;)V	b	lambda$write$2
		p	0		buf2
		p	1		page
	m	()Ljava/util/Optional;	c	getTitle
	m	(Lqx;)Ljava/lang/String;	c	lambda$new$0
		p	0		buf2
	m	()I	d	getSlot
	f	I	a	MAX_BYTES_PER_CHAR
	f	I	b	TITLE_MAX_CHARS
	f	I	c	PAGE_MAX_CHARS
	f	I	d	MAX_PAGES_COUNT
	f	I	e	slot
	f	Ljava/util/List;	f	pages
	f	Ljava/util/Optional;	g	title
c	xl	net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	m	(II)V	<init>	<init>
		p	1		transactionId
		p	2		entityId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	()I	c	getEntityId
	f	I	a	transactionId
	f	I	b	entityId
c	xm	net/minecraft/network/protocol/game/ServerboundInteractPacket
	m	(IZLxm$a;)V	<init>	<init>
		p	1		entityId
		p	2		playerSneaking
		p	3		type
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lafo;)Lbaq;	a	getTarget
		p	1		world
	m	(Lbaq;Z)Lxm;	a	createAttackPacket
		p	0		entity
		p	1		playerSneaking
	m	(Lbaq;ZLazl;)Lxm;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
	m	(Lbaq;ZLazl;Ldvt;)Lxm;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
		p	3		pos
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	(Lxm$c;)V	a	dispatch
		p	1		handler
	m	()Z	b	isUsingSecondaryAction
	f	I	a	entityId
	f	Lxm$a;	b	action
	f	Z	c	usingSecondaryAction
	f	Lxm$a;	d	ATTACK_ACTION
c	xm$1	net/minecraft/network/protocol/game/ServerboundInteractPacket$1
	m	()Lxm$b;	a	getType
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lxm$c;)V	a	dispatch
		p	1		handler
c	xm$a	net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	m	()Lxm$b;	a	getType
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lxm$c;)V	a	dispatch
		p	1		handler
c	xm$b	net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
		p	3		handlerGetter
	m	()[Lxm$b;	a	$values
	m	(Lqx;)Lxm$a;	a	lambda$static$0
	f	Lxm$b;	a	INTERACT
	f	Lxm$b;	b	ATTACK
	f	Lxm$b;	c	INTERACT_AT
	f	Ljava/util/function/Function;	d	reader
	f	[Lxm$b;	e	$VALUES
c	xm$c	net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	m	()V	a	onAttack
	m	(Lazl;)V	a	onInteraction
		p	1		hand
	m	(Lazl;Ldvt;)V	a	onInteraction
		p	1		hand
		p	2		pos
c	xm$d	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	m	(Lazl;)V	<init>	<init>
		p	1		hand
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Lxm$b;	a	getType
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lxm$c;)V	a	dispatch
		p	1		handler
	f	Lazl;	a	hand
c	xm$e	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	m	(Lazl;Ldvt;)V	<init>	<init>
		p	1		hand
		p	2		pos
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Lxm$b;	a	getType
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lxm$c;)V	a	dispatch
		p	1		handler
	f	Lazl;	a	hand
	f	Ldvt;	b	location
c	xn	net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	m	(Lgt;IZ)V	<init>	<init>
		p	1		pos
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()I	c	levels
	m	()Z	d	keepJigsaws
	f	Lgt;	a	pos
	f	I	b	levels
	f	Z	c	keepJigsaws
c	xo	net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()J	b	getId
	f	J	a	id
c	xp	net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		difficultyLocked
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Z	b	isLocked
	f	Z	a	locked
c	xq	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	m	(DDDFFZZZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
		p	10		changePosition
		p	11		changeLook
	m	(D)D	a	getX
		p	1		currentX
	m	(F)F	a	getYRot
		p	1		currentYaw
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Z	b	isOnGround
	m	(D)D	b	getY
		p	1		currentY
	m	(F)F	b	getXRot
		p	1		currentPitch
	m	()Z	c	hasPosition
	m	(D)D	c	getZ
		p	1		currentZ
	m	()Z	d	hasRotation
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Z	f	onGround
	f	Z	g	hasPos
	f	Z	h	hasRot
c	xq$a	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	m	(DDDZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		onGround
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lqx;)Lxq$a;	b	read
		p	0		buf
c	xq$b	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	m	(DDDFFZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lqx;)Lxq$b;	b	read
		p	0		buf
c	xq$c	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	m	(FFZ)V	<init>	<init>
		p	1		yaw
		p	2		pitch
		p	3		onGround
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lqx;)Lxq$c;	b	read
		p	0		buf
c	xq$d	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	m	(Z)V	<init>	<init>
		p	1		onGround
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lqx;)Lxq$d;	b	read
		p	0		buf
c	xr	net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()D	b	getX
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	xs	net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(ZZ)V	<init>	<init>
		p	1		leftPaddling
		p	2		rightPaddling
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Z	b	getLeft
	m	()Z	c	getRight
	f	Z	a	left
	f	Z	b	right
c	xt	net/minecraft/network/protocol/game/ServerboundPickItemPacket
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getSlot
	f	I	a	slot
c	xu	net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	m	(ILccs;Z)V	<init>	<init>
		p	1		syncId
		p	2		recipe
		p	3		craftAll
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()Laaj;	c	getRecipe
	m	()Z	d	isShiftDown
	f	I	a	containerId
	f	Laaj;	b	recipe
	f	Z	c	shiftDown
c	xv	net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	m	(Lbtc;)V	<init>	<init>
		p	1		abilities
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Z	b	isFlying
	f	I	a	FLAG_FLYING
	f	Z	b	isFlying
c	xw	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lxw$a;Lgt;Lgy;)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
	m	(Lxw$a;Lgt;Lgy;I)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
		p	4		sequence
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()Lgy;	c	getDirection
	m	()Lxw$a;	d	getAction
	m	()I	e	getSequence
	f	Lgt;	a	pos
	f	Lgy;	b	direction
	f	Lxw$a;	c	action
	f	I	d	sequence
c	xw$a	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	m	()[Lxw$a;	a	$values
	f	Lxw$a;	a	START_DESTROY_BLOCK
	f	Lxw$a;	b	ABORT_DESTROY_BLOCK
	f	Lxw$a;	c	STOP_DESTROY_BLOCK
	f	Lxw$a;	d	DROP_ALL_ITEMS
	f	Lxw$a;	e	DROP_ITEM
	f	Lxw$a;	f	RELEASE_USE_ITEM
	f	Lxw$a;	g	SWAP_ITEM_WITH_OFFHAND
	f	[Lxw$a;	h	$VALUES
c	xx	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	m	(Lbaq;Lxx$a;)V	<init>	<init>
		p	1		entity
		p	2		mode
	m	(Lbaq;Lxx$a;I)V	<init>	<init>
		p	1		entity
		p	2		mode
		p	3		mountJumpHeight
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Lxx$a;	c	getAction
	m	()I	d	getData
	f	I	a	id
	f	Lxx$a;	b	action
	f	I	c	data
c	xx$a	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	m	()[Lxx$a;	a	$values
	f	Lxx$a;	a	PRESS_SHIFT_KEY
	f	Lxx$a;	b	RELEASE_SHIFT_KEY
	f	Lxx$a;	c	STOP_SLEEPING
	f	Lxx$a;	d	START_SPRINTING
	f	Lxx$a;	e	STOP_SPRINTING
	f	Lxx$a;	f	START_RIDING_JUMP
	f	Lxx$a;	g	STOP_RIDING_JUMP
	f	Lxx$a;	h	OPEN_INVENTORY
	f	Lxx$a;	i	START_FALL_FLYING
	f	[Lxx$a;	j	$VALUES
c	xy	net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	m	(FFZZ)V	<init>	<init>
		p	1		sideways
		p	2		forward
		p	3		jumping
		p	4		sneaking
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()F	b	getXxa
	m	()F	c	getZza
	m	()Z	d	isJumping
	m	()Z	e	isShiftKeyDown
	f	I	a	FLAG_JUMPING
	f	I	b	FLAG_SHIFT_KEY_DOWN
	f	F	c	xxa
	f	F	d	zza
	f	Z	e	isJumping
	f	Z	f	isShiftKeyDown
c	xz	net/minecraft/network/protocol/game/ServerboundPongPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getId
	f	I	a	id
c	ya	net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	m	(Lbwz;ZZ)V	<init>	<init>
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lbwz;	b	getBookType
	m	()Z	c	isOpen
	m	()Z	d	isFiltering
	f	Lbwz;	a	bookType
	f	Z	b	isOpen
	f	Z	c	isFiltering
c	yb	net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	m	(Lccs;)V	<init>	<init>
		p	1		recipe
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Laaj;	b	getRecipe
	f	Laaj;	a	recipe
c	yc	net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getName
	f	Ljava/lang/String;	a	name
c	yd	net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lyd$a;)V	<init>	<init>
		p	1		status
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lyd$a;	b	getAction
	f	Lyd$a;	a	action
c	yd$a	net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	m	()[Lyd$a;	a	$values
	f	Lyd$a;	a	SUCCESSFULLY_LOADED
	f	Lyd$a;	b	DECLINED
	f	Lyd$a;	c	FAILED_DOWNLOAD
	f	Lyd$a;	d	ACCEPTED
	f	[Lyd$a;	e	$VALUES
c	ye	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lye$a;Laaj;)V	<init>	<init>
		p	1		action
		p	2		tab
	m	(Laf;)Lye;	a	openedTab
		p	0		advancement
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lye;	b	closedScreen
	m	()Lye$a;	c	getAction
	m	()Laaj;	d	getTab
	f	Lye$a;	a	action
	f	Laaj;	b	tab
c	ye$a	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	m	()[Lye$a;	a	$values
	f	Lye$a;	a	OPENED_TAB
	f	Lye$a;	b	CLOSED_SCREEN
	f	[Lye$a;	c	$VALUES
c	yf	net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	m	(I)V	<init>	<init>
		p	1		tradeId
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getItem
	f	I	a	item
c	yg	net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lbah;)V	a	lambda$write$3
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Ljava/util/Optional;	b	getPrimary
	m	(Lqx;)Lbah;	b	lambda$new$1
	m	(Lqx;Lbah;)V	b	lambda$write$2
	m	()Ljava/util/Optional;	c	getSecondary
	m	(Lqx;)Lbah;	c	lambda$new$0
	f	Ljava/util/Optional;	a	primary
	f	Ljava/util/Optional;	b	secondary
c	yh	net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	m	(I)V	<init>	<init>
		p	1		selectedSlot
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getSlot
	f	I	a	slot
c	yi	net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	m	(Lgt;Ljava/lang/String;Lcss$a;ZZZ)V	<init>	<init>
		p	1		pos
		p	2		command
		p	3		type
		p	4		trackOutput
		p	5		conditional
		p	6		alwaysActive
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()Ljava/lang/String;	c	getCommand
	m	()Z	d	isTrackOutput
	m	()Z	e	isConditional
	m	()Z	f	isAutomatic
	m	()Lcss$a;	g	getMode
	f	I	a	FLAG_TRACK_OUTPUT
	f	I	b	FLAG_CONDITIONAL
	f	I	c	FLAG_AUTOMATIC
	f	Lgt;	d	pos
	f	Ljava/lang/String;	e	command
	f	Z	f	trackOutput
	f	Z	g	conditional
	f	Z	h	automatic
	f	Lcss$a;	i	mode
c	yj	net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	m	(ILjava/lang/String;Z)V	<init>	<init>
		p	1		entityId
		p	2		command
		p	3		trackOutput
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lcga;)Lcfb;	a	getCommandBlock
		p	1		world
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getCommand
	m	()Z	c	isTrackOutput
	f	I	a	entity
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
c	yk	net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	m	(ILcaa;)V	<init>	<init>
		p	1		slot
		p	2		stack
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()I	b	getSlotNum
	m	()Lcaa;	c	getItem
	f	I	a	slotNum
	f	Lcaa;	b	itemStack
c	yl	net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	m	(Lgt;Laaj;Laaj;Laaj;Ljava/lang/String;Lcte$a;)V	<init>	<init>
		p	1		pos
		p	2		name
		p	3		target
		p	4		pool
		p	5		finalState
		p	6		jointType
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()Laaj;	c	getName
	m	()Laaj;	d	getTarget
	m	()Laaj;	e	getPool
	m	()Ljava/lang/String;	f	getFinalState
	m	()Lcte$a;	g	getJoint
	f	Lgt;	a	pos
	f	Laaj;	b	name
	f	Laaj;	c	target
	f	Laaj;	d	pool
	f	Ljava/lang/String;	e	finalState
	f	Lcte$a;	f	joint
c	ym	net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	m	(Lgt;Lctr$a;Lcwa;Ljava/lang/String;Lgt;Lhs;Lcnk;Lcoz;Ljava/lang/String;ZZZFJ)V	<init>	<init>
		p	1		pos
		p	2		action
		p	3		mode
		p	4		templateName
		p	5		offset
		p	6		size
		p	7		mirror
		p	8		rotation
		p	9		metadata
		p	10		ignoreEntities
		p	11		showAir
		p	12		showBoundingBox
		p	13		integrity
		p	14		seed
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()Lctr$a;	c	getUpdateType
	m	()Lcwa;	d	getMode
	m	()Ljava/lang/String;	e	getName
	m	()Lgt;	f	getOffset
	m	()Lhs;	g	getSize
	m	()Lcnk;	h	getMirror
	m	()Lcoz;	i	getRotation
	m	()Ljava/lang/String;	j	getData
	m	()Z	k	isIgnoreEntities
	m	()Z	l	isShowAir
	m	()Z	m	isShowBoundingBox
	m	()F	n	getIntegrity
	m	()J	o	getSeed
	f	I	a	FLAG_IGNORE_ENTITIES
	f	I	b	FLAG_SHOW_AIR
	f	I	c	FLAG_SHOW_BOUNDING_BOX
	f	Lgt;	d	pos
	f	Lctr$a;	e	updateType
	f	Lcwa;	f	mode
	f	Ljava/lang/String;	g	name
	f	Lgt;	h	offset
	f	Lhs;	i	size
	f	Lcnk;	j	mirror
	f	Lcoz;	k	rotation
	f	Ljava/lang/String;	l	data
	f	Z	m	ignoreEntities
	f	Z	n	showAir
	f	Z	o	showBoundingBox
	f	F	p	integrity
	f	J	q	seed
c	yn	net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	m	(Lgt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		pos
		p	2		line1
		p	3		line2
		p	4		line3
		p	5		line4
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lgt;	b	getPos
	m	()[Ljava/lang/String;	c	getLines
	f	I	a	MAX_STRING_LENGTH
	f	Lgt;	b	pos
	f	[Ljava/lang/String;	c	lines
c	yo	net/minecraft/network/protocol/game/ServerboundSwingPacket
	m	(Lazl;)V	<init>	<init>
		p	1		hand
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lazl;	b	getHand
	f	Lazl;	a	hand
c	yp	net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1		targetUuid
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lafo;)Lbaq;	a	getEntity
		p	1		world
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	f	Ljava/util/UUID;	a	uuid
c	yq	net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	m	(Lazl;Ldvp;I)V	<init>	<init>
		p	1		hand
		p	2		blockHitResult
		p	3		sequence
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lazl;	b	getHand
	m	()Ldvp;	c	getHitResult
	m	()I	d	getSequence
	f	Ldvp;	a	blockHit
	f	Lazl;	b	hand
	f	I	c	sequence
c	yr	net/minecraft/network/protocol/game/ServerboundUseItemPacket
	m	(Lazl;I)V	<init>	<init>
		p	1		hand
		p	2		sequence
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lwv;)V	a	handle
		p	1		listener
	m	()Lazl;	b	getHand
	m	()I	c	getSequence
	f	Lazl;	a	hand
	f	I	b	sequence
c	ys	net/minecraft/network/protocol/game/VecDeltaCodec
	m	(D)J	a	encode
		p	0		value
	m	(J)D	a	decode
		p	0		value
	m	(JJJ)Ldvt;	a	decode
		p	1		x
		p	3		y
		p	5		z
	m	(Ldvt;)J	a	encodeX
		p	1		pos
	m	(Ldvt;)J	b	encodeY
		p	1		pos
	m	(Ldvt;)J	c	encodeZ
		p	1		pos
	m	(Ldvt;)Ldvt;	d	delta
		p	1		pos
	m	(Ldvt;)V	e	setBase
		p	1		pos
	f	D	a	TRUNCATION_STEPS
	f	Ldvt;	b	base
c	yt	net/minecraft/network/protocol/game/package-info
c	yu	net/minecraft/network/protocol/handshake/ClientIntentionPacket
	m	(Ljava/lang/String;ILqw;)V	<init>	<init>
		p	1		address
		p	2		port
		p	3		intendedState
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lyv;)V	a	handle
		p	1		listener
	m	()Lqw;	b	getIntention
	m	()I	c	getProtocolVersion
	m	()Ljava/lang/String;	d	getHostName
	m	()I	e	getPort
	f	I	a	MAX_HOST_LENGTH
	f	I	b	protocolVersion
	f	Ljava/lang/String;	c	hostName
	f	I	d	port
	f	Lqw;	e	intention
c	yv	net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	m	(Lyu;)V	a	handleIntention
		p	1		packet
c	yw	net/minecraft/network/protocol/handshake/package-info
c	yx	net/minecraft/network/protocol/login/ClientLoginPacketListener
	m	(Lyy;)V	a	handleCustomQuery
		p	1		packet
	m	(Lyz;)V	a	handleGameProfile
		p	1		packet
	m	(Lza;)V	a	handleHello
		p	1		packet
	m	(Lzb;)V	a	handleCompression
		p	1		packet
	m	(Lzc;)V	a	handleDisconnect
		p	1		packet
c	yy	net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	m	(ILaaj;Lqx;)V	<init>	<init>
		p	1		queryId
		p	2		channel
		p	3		payload
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lyx;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	()Laaj;	c	getIdentifier
	m	()Lqx;	d	getData
	f	I	a	MAX_PAYLOAD_SIZE
	f	I	b	transactionId
	f	Laaj;	c	identifier
	f	Lqx;	d	data
c	yz	net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lyx;)V	a	handle
		p	1		listener
	m	()Lcom/mojang/authlib/GameProfile;	b	getGameProfile
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
c	za	net/minecraft/network/protocol/login/ClientboundHelloPacket
	m	(Ljava/lang/String;[B[B)V	<init>	<init>
		p	1		serverId
		p	2		publicKey
		p	3		nonce
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lyx;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getServerId
	m	()Ljava/security/PublicKey;	c	getPublicKey
	m	()[B	d	getNonce
	f	Ljava/lang/String;	a	serverId
	f	[B	b	publicKey
	f	[B	c	nonce
c	zb	net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lyx;)V	a	handle
		p	1		listener
	m	()I	b	getCompressionThreshold
	f	I	a	compressionThreshold
c	zc	net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lrm;)V	<init>	<init>
		p	1		reason
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lyx;)V	a	handle
		p	1		listener
	m	()Lrm;	b	getReason
	f	Lrm;	a	reason
c	zd	net/minecraft/network/protocol/login/ServerLoginPacketListener
	m	(Lze;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Lzf;)V	a	handleHello
		p	1		packet
	m	(Lzg;)V	a	handleKey
		p	1		packet
c	ze	net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	m	(ILqx;)V	<init>	<init>
		p	1		queryId
		p	2		response
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lqx;)V	a	lambda$write$1
		p	0		buf2
		p	1		response
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lzd;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	(Lqx;)Lqx;	b	lambda$new$0
		p	0		buf2
	m	()Lqx;	c	getData
	f	I	a	MAX_PAYLOAD_SIZE
	f	I	b	transactionId
	f	Lqx;	c	data
c	zf	net/minecraft/network/protocol/login/ServerboundHelloPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;Lqx;Lbti$a;)V	a	lambda$write$0
		p	1		buf2
		p	2		publicKey
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lzd;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	name
	m	()Ljava/util/Optional;	c	publicKey
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	publicKey
c	zg	net/minecraft/network/protocol/login/ServerboundKeyPacket
	m	(Ljavax/crypto/SecretKey;Ljava/security/PublicKey;J[B)V	<init>	<init>
		p	1		secretKey
		p	2		publicKey
		p	3		seed
		p	5		signature
	m	(Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V	<init>	<init>
		p	1		secretKey
		p	2		publicKey
		p	3		nonce
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lbti;[BLakq$b;)Ljava/lang/Boolean;	a	lambda$isChallengeSignatureValid$2
		p	2		signature
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	getSecretKey
		p	1		privateKey
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lzd;)V	a	handle
		p	1		listener
	m	([B)Ljava/lang/Boolean;	a	lambda$isChallengeSignatureValid$0
		p	0		encrypted
	m	([BLakq$b;Lalv$a;)V	a	lambda$isChallengeSignatureValid$1
		p	2		updater
	m	([BLbti;)Z	a	isChallengeSignatureValid
		p	1		nonce
		p	2		publicKeyInfo
	m	([BLjava/security/PrivateKey;)Z	a	isNonceValid
		p	1		nonce
		p	2		privateKey
	f	[B	a	keybytes
	f	Lcom/mojang/datafixers/util/Either;	b	nonceOrSaltSignature
c	zh	net/minecraft/network/protocol/login/package-info
c	zi	net/minecraft/network/protocol/package-info
c	zj	net/minecraft/network/protocol/status/ClientStatusPacketListener
	m	(Lzk;)V	a	handlePongResponse
		p	1		packet
	m	(Lzl;)V	a	handleStatusResponse
		p	1		packet
c	zk	net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lzj;)V	a	handle
		p	1		listener
	m	()J	b	getTime
	f	J	a	time
c	zl	net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lzm;)V	<init>	<init>
		p	1		metadata
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lzj;)V	a	handle
		p	1		listener
	m	()Lzm;	b	getStatus
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lzm;	b	status
c	zm	net/minecraft/network/protocol/status/ServerStatus
	m	()Lrm;	a	getDescription
	m	(Ljava/lang/String;)V	a	setFavicon
		p	1		favicon
	m	(Lrm;)V	a	setDescription
		p	1		description
	m	(Lzm$a;)V	a	setPlayers
		p	1		players
	m	(Lzm$c;)V	a	setVersion
		p	1		version
	m	(Z)V	a	setPreviewsChat
		p	1		previewsChat
	m	()Lzm$a;	b	getPlayers
	m	()Lzm$c;	c	getVersion
	m	()Ljava/lang/String;	d	getFavicon
	m	()Z	e	previewsChat
	f	I	a	FAVICON_WIDTH
	f	I	b	FAVICON_HEIGHT
	f	Lrm;	c	description
	f	Lzm$a;	d	players
	f	Lzm$c;	e	version
	f	Ljava/lang/String;	f	favicon
	f	Z	g	previewsChat
c	zm$a	net/minecraft/network/protocol/status/ServerStatus$Players
	m	(II)V	<init>	<init>
		p	1		max
		p	2		online
	m	()I	a	getMaxPlayers
	m	([Lcom/mojang/authlib/GameProfile;)V	a	setSample
		p	1		sample
	m	()I	b	getNumPlayers
	m	()[Lcom/mojang/authlib/GameProfile;	c	getSample
	f	I	a	maxPlayers
	f	I	b	numPlayers
	f	[Lcom/mojang/authlib/GameProfile;	c	sample
c	zm$a$a	net/minecraft/network/protocol/status/ServerStatus$Players$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lzm$a;	a	deserialize
	m	(Lzm$a;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	zm$b	net/minecraft/network/protocol/status/ServerStatus$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lzm;	a	deserialize
	m	(Lzm;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	zm$c	net/minecraft/network/protocol/status/ServerStatus$Version
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		gameVersion
		p	2		protocolVersion
	m	()Ljava/lang/String;	a	getName
	m	()I	b	getProtocol
	f	Ljava/lang/String;	a	name
	f	I	b	protocol
c	zm$c$a	net/minecraft/network/protocol/status/ServerStatus$Version$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lzm$c;	a	deserialize
	m	(Lzm$c;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	zn	net/minecraft/network/protocol/status/ServerStatusPacketListener
	m	(Lzo;)V	a	handlePingRequest
		p	1		packet
	m	(Lzp;)V	a	handleStatusRequest
		p	1		packet
c	zo	net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lzn;)V	a	handle
		p	1		listener
	m	()J	b	getTime
	f	J	a	time
c	zp	net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lra;)V	a	handle
		p	1		listener
	m	(Lzn;)V	a	handle
		p	1		listener
c	zq	net/minecraft/network/protocol/status/package-info
c	zr	net/minecraft/network/syncher/EntityDataAccessor
	m	(ILzs;)V	<init>	<init>
		p	1		id
		p	2		dataType
	m	()I	a	getId
	m	()Lzs;	b	getSerializer
	f	I	a	id
	f	Lzs;	b	serializer
c	zs	net/minecraft/network/syncher/EntityDataSerializer
	m	(I)Lzr;	a	createAccessor
		p	1		id
	m	(Lhf;)Lzs;	a	simpleId
		p	0		registry
	m	(Lhf;Lqx;)Ljava/lang/Object;	a	lambda$simpleId$2
		p	1		buf
	m	(Lhf;Lqx;Ljava/lang/Object;)V	a	lambda$simpleId$1
		p	1		buf
		p	2		value
	m	(Ljava/lang/Class;)Lzs;	a	simpleEnum
		p	0		enum_
	m	(Ljava/lang/Class;Lqx;)Ljava/lang/Enum;	a	lambda$simpleEnum$0
		p	1		buf
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lqx$b;Lqx$a;)Lzs;	a	simple
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx$b;Lqx$a;)Lzs;	b	optional
c	zs$1	net/minecraft/network/syncher/EntityDataSerializer$1
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	f	Lqx$b;	a	val$writer
	f	Lqx$a;	b	val$reader
c	zs$a	net/minecraft/network/syncher/EntityDataSerializer$ForValueType
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
c	zt	net/minecraft/network/syncher/EntityDataSerializers
	m	(I)Lzs;	a	getSerializer
		p	0		id
	m	(Lqx;Ljava/lang/Byte;)V	a	lambda$static$0
	m	(Lzs;)V	a	registerSerializer
		p	0		handler
	m	(Lzs;)I	b	getSerializedId
		p	0		handler
	f	Lzs;	a	BYTE
	f	Lzs;	b	INT
	f	Lzs;	c	FLOAT
	f	Lzs;	d	STRING
	f	Lzs;	e	COMPONENT
	f	Lzs;	f	OPTIONAL_COMPONENT
	f	Lzs;	g	ITEM_STACK
	f	Lzs;	h	BLOCK_STATE
	f	Lzs;	i	BOOLEAN
	f	Lzs;	j	PARTICLE
	f	Lzs;	k	ROTATIONS
	f	Lzs;	l	BLOCK_POS
	f	Lzs;	m	OPTIONAL_BLOCK_POS
	f	Lzs;	n	DIRECTION
	f	Lzs;	o	OPTIONAL_UUID
	f	Lzs;	p	OPTIONAL_GLOBAL_POS
	f	Lzs;	q	COMPOUND_TAG
	f	Lzs;	r	VILLAGER_DATA
	f	Lzs;	s	OPTIONAL_UNSIGNED_INT
	f	Lzs;	t	POSE
	f	Lzs;	u	CAT_VARIANT
	f	Lzs;	v	FROG_VARIANT
	f	Lzs;	w	PAINTING_VARIANT
	f	Lakp;	x	SERIALIZERS
c	zt$1	net/minecraft/network/syncher/EntityDataSerializers$1
	m	(Lcaa;)Lcaa;	a	copy
		p	1		value
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Lcaa;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;)Lcaa;	b	read
c	zt$2	net/minecraft/network/syncher/EntityDataSerializers$2
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;Ljava/util/Optional;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;)Ljava/util/Optional;	b	read
c	zt$3	net/minecraft/network/syncher/EntityDataSerializers$3
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Lim;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;Lin;)Lim;	a	readParticle
		p	1		buf
		p	2		type
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;)Lim;	b	read
c	zt$4	net/minecraft/network/syncher/EntityDataSerializers$4
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Lhp;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;)Lhp;	b	read
c	zt$5	net/minecraft/network/syncher/EntityDataSerializers$5
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lpj;)Lpj;	a	copy
		p	1		value
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;Lpj;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;)Lpj;	b	read
c	zt$6	net/minecraft/network/syncher/EntityDataSerializers$6
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Lbst;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;)Lbst;	b	read
c	zt$7	net/minecraft/network/syncher/EntityDataSerializers$7
	m	(Lqx;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lqx;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;Ljava/util/OptionalInt;)V	a	write
		p	1		buf
		p	2		value
	m	(Lqx;)Ljava/util/OptionalInt;	b	read
c	zu	net/minecraft/network/syncher/SynchedEntityData
	m	(Lbaq;)V	<init>	<init>
		p	1		trackedEntity
	m	()Z	a	isDirty
	m	(Ljava/lang/Class;Lzs;)Lzr;	a	defineId
		p	0		entityClass
		p	1		dataHandler
	m	(Ljava/util/List;)V	a	assignValues
		p	1		entries
	m	(Ljava/util/List;Lqx;)V	a	pack
		p	0		entries
		p	1		buf
	m	(Lqx;)Ljava/util/List;	a	unpack
		p	0		buf
	m	(Lqx;ILzs;)Lzu$a;	a	genericHelper
		p	0		buf
	m	(Lqx;Lzu$a;)V	a	writeDataItem
		p	0		buf
		p	1		entry
	m	(Lzr;)Ljava/lang/Object;	a	get
		p	1		data
	m	(Lzr;Ljava/lang/Object;)V	a	define
		p	1		key
		p	2		initialValue
	m	(Lzu$a;Lzu$a;)V	a	assignValue
		p	1		to
		p	2		from
	m	()Ljava/util/List;	b	packDirty
	m	(Lzr;)Lzu$a;	b	getItem
	m	(Lzr;Ljava/lang/Object;)V	b	set
		p	1		key
		p	2		value
	m	()Ljava/util/List;	c	getAll
	m	(Lzr;Ljava/lang/Object;)V	c	createDataItem
	m	()Z	d	isEmpty
	m	()V	e	clearDirty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	ENTITY_ID_POOL
	f	I	c	EOF_MARKER
	f	I	d	MAX_ID_VALUE
	f	Lbaq;	e	entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	itemsById
	f	Ljava/util/concurrent/locks/ReadWriteLock;	g	lock
	f	Z	h	isEmpty
	f	Z	i	isDirty
c	zu$a	net/minecraft/network/syncher/SynchedEntityData$DataItem
	m	(Lzr;Ljava/lang/Object;)V	<init>	<init>
		p	1		data
		p	2		value
	m	()Lzr;	a	getAccessor
	m	(Ljava/lang/Object;)V	a	setValue
		p	1		value
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()Ljava/lang/Object;	b	getValue
	m	()Z	c	isDirty
	m	()Lzu$a;	d	copy
	f	Lzr;	a	accessor
	f	Ljava/lang/Object;	b	value
	f	Z	c	dirty
c	zv	net/minecraft/network/syncher/package-info
c	zw	net/minecraft/obfuscate/package-info
c	zx	net/minecraft/package-info
c	zy	net/minecraft/recipebook/PlaceRecipe
	m	(IIILccs;Ljava/util/Iterator;I)V	a	placeRecipe
		p	1		gridWidth
		p	2		gridHeight
		p	3		gridOutputSlot
		p	4		recipe
		p	5		inputs
		p	6		amount
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
		p	1		inputs
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
c	zz	net/minecraft/recipebook/ServerPlaceRecipe
	m	(Lbwy;)V	<init>	<init>
		p	1		handler
	m	()Z	a	testClearGrid
	m	(Lafp;Lccs;Z)V	a	recipeClicked
		p	1		entity
		p	2		recipe
		p	3		craftAll
	m	(Lbxg;Lcaa;)V	a	moveItemToGrid
		p	1		slot
		p	2		stack
	m	(Lccs;Z)V	a	handleRecipeClicked
		p	1		recipe
		p	2		craftAll
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
		p	1		inputs
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
	m	(Z)V	a	clearGrid
	m	(ZIZ)I	a	getStackSize
		p	1		craftAll
		p	2		limit
		p	3		recipeInCraftingSlots
	m	()I	b	getAmountOfFreeSlotsInInventory
	f	Lbtj;	a	stackedContents
	f	Lbte;	b	inventory
	f	Lbwy;	c	menu
	f	Lorg/slf4j/Logger;	d	LOGGER
c	aaa	net/minecraft/recipebook/package-info
c	aab	net/minecraft/resources/DelegatingOps
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
		p	1		delegate
	f	Lcom/mojang/serialization/DynamicOps;	a	delegate
c	aac	net/minecraft/resources/HolderSetCodec
	m	(Laai;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registry
		p	2		entryCodec
		p	3		alwaysSerializeAsList
	m	(Laai;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	create
		p	0		registryRef
		p	1		entryCodec
		p	2		alwaysSerializeAsList
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	a	lambda$homogenousList$1
		p	0		either
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decodeWithoutRegistry$5
		p	0		pair
	m	(Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogenousList
		p	0		entryCodec
		p	1		alwaysSerializeAsList
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	decodeWithoutRegistry
		p	1		ops
		p	2		input
	m	(Lhe;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lhm;Lcom/mojang/datafixers/util/Either;)Lhe;	a	lambda$decode$3
		p	1		either
	m	(Lhm;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$4
		p	1		pair
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$homogenousList$2
		p	0		entries
	m	(Lhe;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	encodeWithoutRegistry
		p	1		entryList
		p	2		ops
		p	3		prefix
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$homogenousList$0
		p	0		entries
	f	Laai;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Lcom/mojang/serialization/Codec;	c	homogenousListCodec
	f	Lcom/mojang/serialization/Codec;	d	registryAwareCodec
c	aad	net/minecraft/resources/RegistryFileCodec
	m	(Laai;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registryRef
		p	2		elementCodec
		p	3		allowInlineDefinitions
	m	(Laai;Lcom/mojang/serialization/Codec;)Laad;	a	create
		p	0		registryRef
		p	1		elementCodec
	m	(Laai;Lcom/mojang/serialization/Codec;Z)Laad;	a	create
		p	0		registryRef
		p	1		elementCodec
		p	2		allowInlineDefinitions
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$5
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lhc;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$4
		p	1		entry
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Laai;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$0
		p	2		key
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	3		value
	m	(Lhc;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$2
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lhc;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$3
		p	1		entry
	f	Laai;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	allowInline
c	aae	net/minecraft/resources/RegistryFixedCodec
	m	(Laai;)V	<init>	<init>
		p	1		registry
	m	(Laai;)Laae;	a	create
		p	0		registry
	m	(Lcom/mojang/datafixers/util/Pair;Lhc;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$2
		p	1		entry
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Laai;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$0
		p	2		registryKey
	m	(Lhc;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	1		value
	m	(Ljava/util/Optional;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
		p	2		pair
	f	Laai;	a	registryKey
c	aaf	net/minecraft/resources/RegistryLoader
	m	(Laah;)V	<init>	<init>
		p	1		entryLoader
	m	(Laai;)Laaf$b;	a	readCache
		p	1		registryRef
	m	(Laai;Lcom/mojang/serialization/Codec;Ljava/util/Map$Entry;Lcom/mojang/serialization/DynamicOps;Lht;)Lcom/mojang/serialization/DataResult;	a	lambda$overrideRegistryFromResources$1
		p	5		reg
	m	(Lhc;Laah$c;)Lhc;	a	lambda$overrideElementFromResources$2
		p	1		entry
	m	(Lhn$e;)Laaf$a;	a	bind
		p	1		dynamicRegistryManager
	m	(Lht;Laai;Lcom/mojang/serialization/Codec;Laai;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideElementFromResources
		p	1		registry
		p	2		registryRef
		p	3		codec
		p	4		entryKey
		p	5		ops
	m	(Lht;Laai;Lcom/mojang/serialization/Codec;Laai;Ljava/util/Optional;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideElementFromResources
		p	1		registry
		p	2		registryRef
		p	3		codec
		p	4		entryKey
		p	5		parseable
		p	6		ops
	m	(Lht;Laai;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideRegistryFromResources
		p	1		registry
		p	2		registryRef
		p	3		codec
		p	4		ops
	m	(Lht;Lhc;)Lht;	a	lambda$overrideRegistryFromResources$0
		p	1		entry
	m	(Laai;)Laaf$b;	b	lambda$readCache$3
		p	0		ref
	f	Laah;	a	resources
	f	Ljava/util/Map;	b	readCache
c	aaf$a	net/minecraft/resources/RegistryLoader$Bound
	m	()Lhn$e;	a	access
	m	(Laai;Lcom/mojang/serialization/Codec;Laai;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideElementFromResources
		p	1		registryRef
		p	2		codec
		p	3		entryKey
		p	4		ops
	m	(Laai;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	overrideRegistryFromResources
		p	1		registryRef
		p	2		codec
		p	3		ops
	m	()Laaf;	b	loader
	f	Lhn$e;	a	access
	f	Laaf;	b	loader
c	aaf$b	net/minecraft/resources/RegistryLoader$ReadCache
	f	Ljava/util/Map;	a	values
c	aag	net/minecraft/resources/RegistryOps
	m	(Lcom/mojang/serialization/DynamicOps;Lhn;Ljava/util/Optional;)V	<init>	<init>
		p	1		delegate
		p	2		dynamicRegistryManager
		p	3		loaderAccess
	m	()Ljava/util/Optional;	a	registryLoader
	m	(Laai;)Ljava/util/Optional;	a	registry
		p	1		key
	m	(Laai;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveRegistry$2
		p	1		ops
	m	(Lcom/mojang/serialization/DynamicOps;Lhn$e;Laah;)Laag;	a	createAndLoad
		p	0		ops
		p	1		registryManager
		p	2		entryLoader
	m	(Lcom/mojang/serialization/DynamicOps;Lhn$e;Lahu;)Laag;	a	createAndLoad
		p	0		ops
		p	1		registryManager
		p	2		resourceManager
	m	(Lcom/mojang/serialization/DynamicOps;Lhn;)Laag;	a	create
		p	0		delegate
		p	1		registryManager
	m	(Lhm;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveRegistry$0
		p	0		registry
	m	()Lcom/mojang/serialization/DynamicOps;	b	getAsJson
	m	(Laai;)Lcom/mojang/serialization/MapCodec;	b	retrieveRegistry
		p	0		registryRef
	m	(Laai;)Lcom/mojang/serialization/DataResult;	c	lambda$retrieveRegistry$1
	f	Ljava/util/Optional;	b	loader
	f	Lhn;	c	registryAccess
	f	Lcom/mojang/serialization/DynamicOps;	d	asJson
c	aah	net/minecraft/resources/RegistryResourceAccess
	m	(Laai;)Ljava/util/Map;	a	listResources
		p	1		key
	m	(Lahu;)Laah;	a	forResourceManager
		p	0		resourceManager
	m	(Laai;)Ljava/util/Optional;	b	getResource
		p	1		key
c	aah$1	net/minecraft/resources/RegistryResourceAccess$1
	m	(Laai;)Ljava/util/Map;	a	listResources
		p	1		key
	m	(Laaj;)Ljava/lang/String;	a	registryDirPath
		p	0		id
	m	(Laaj;Lahs;)Laah$a;	a	lambda$getResource$4
		p	2		resource
	m	(Lahs;Laaj;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;	a	lambda$getResource$3
		p	3		jsonOps
		p	4		decoder
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Decoder;Ljava/io/Reader;)Lcom/mojang/serialization/DataResult;	a	decodeElement
		p	1		jsonOps
		p	2		decoder
		p	3		reader
	m	(Ljava/lang/String;Laai;Ljava/util/Map;Laaj;Lahs;)V	a	lambda$listResources$2
		p	4		id
		p	5		resourceRef
	m	(Laai;)Ljava/util/Optional;	b	getResource
		p	1		key
	m	(Laaj;)Z	b	lambda$listResources$0
		p	0		id
	m	(Lahs;Laaj;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;	b	lambda$listResources$1
		p	3		jsonOps
		p	4		decoder
	m	(Laai;)Laaj;	c	elementPath
		p	0		rootKey
	f	Lahu;	a	val$manager
	f	Ljava/lang/String;	b	JSON
c	aah$a	net/minecraft/resources/RegistryResourceAccess$EntryThunk
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;	parseElement	parseElement
		p	1		jsonOps
		p	2		decoder
c	aah$b	net/minecraft/resources/RegistryResourceAccess$InMemoryStorage
	m	(Laai;)Ljava/util/Map;	a	listResources
		p	1		key
	m	(Laai;Ljava/util/Map$Entry;)Z	a	lambda$listResources$0
		p	1		entry
	m	(Lcom/mojang/serialization/DataResult;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;	a	lambda$getResource$3
		p	1		jsonOps
		p	2		decoder
	m	(Lhn;Laai;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V	a	add
		p	1		registryManager
		p	2		key
		p	3		encoder
		p	4		rawId
		p	5		entry
		p	6		lifecycle
	m	(Ljava/util/Map$Entry;)Laah$a;	a	lambda$listResources$2
		p	0		entry
	m	(Laai;)Ljava/util/Optional;	b	getResource
		p	1		key
	m	(Ljava/util/Map$Entry;)Laai;	b	lambda$listResources$1
		p	0		entry
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	entries
c	aah$b$a	net/minecraft/resources/RegistryResourceAccess$InMemoryStorage$Entry
	m	()Lcom/google/gson/JsonElement;	a	data
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;	a	parse
		p	1		jsonOps
		p	2		decoder
	m	(Ljava/lang/Object;)Laah$c;	a	lambda$parse$0
		p	1		value
	m	()I	b	id
	m	()Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	f	Lcom/google/gson/JsonElement;	a	data
	f	I	b	id
	f	Lcom/mojang/serialization/Lifecycle;	c	lifecycle
c	aah$c	net/minecraft/resources/RegistryResourceAccess$ParsedEntry
	m	()Ljava/lang/Object;	a	value
	m	(Ljava/lang/Object;)Laah$c;	a	createWithoutId
		p	0		value
	m	(Ljava/lang/Object;I)Laah$c;	a	createWithId
		p	0		value
		p	1		id
	m	()Ljava/util/OptionalInt;	b	fixedId
	f	Ljava/lang/Object;	a	value
	f	Ljava/util/OptionalInt;	b	fixedId
c	aai	net/minecraft/resources/ResourceKey
	m	(Laaj;Laaj;)V	<init>	<init>
		p	1		registry
		p	2		value
	m	()Laaj;	a	location
	m	(Laai;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Laai;Laaj;)Laai;	a	create
		p	0		registry
		p	1		value
	m	(Laaj;)Laai;	a	createRegistryKey
		p	0		registry
	m	(Laaj;Laaj;)Laai;	a	create
		p	0		registry
		p	1		value
	m	(Laaj;Laaj;Ljava/lang/String;)Laai;	a	lambda$create$1
		p	2		id
	m	()Laaj;	b	registry
	m	(Laai;)Z	b	isFor
		p	1		registry
	m	(Laai;Laaj;)Laai;	b	lambda$codec$0
		p	1		id
	m	(Laai;)Ljava/util/Optional;	c	cast
		p	1		registryRef
	f	Ljava/util/Map;	a	VALUES
	f	Laaj;	b	registryName
	f	Laaj;	c	location
c	aaj	net/minecraft/resources/ResourceLocation
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getPath
	m	(C)Z	a	isAllowedInResourceLocation
		p	0		c
	m	(Laaj;)I	a	compareTo
	m	(Lcom/mojang/brigadier/StringReader;)Laaj;	a	read
		p	0		reader
	m	(Ljava/lang/String;)Laaj;	a	tryParse
		p	0		id
	m	(Ljava/lang/String;C)Laaj;	a	of
		p	0		id
		p	1		delimiter
	m	(Ljava/lang/String;Ljava/lang/String;)Laaj;	a	tryBuild
		p	0		namespace
		p	1		path
	m	()Ljava/lang/String;	b	getNamespace
	m	(C)Z	b	validPathChar
		p	0		character
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	read
		p	0		id
	m	(Ljava/lang/String;C)[Ljava/lang/String;	b	decompose
		p	0		id
		p	1		delimiter
	m	()Ljava/lang/String;	c	toDebugFileName
	m	(C)Z	c	validNamespaceChar
		p	0		character
	m	(Ljava/lang/String;)Ljava/lang/String;	c	toLanguageKey
		p	1		prefix
	m	()Ljava/lang/String;	d	toLanguageKey
	m	(Ljava/lang/String;)Z	d	isValidResourceLocation
		p	0		id
	m	()Ljava/lang/String;	e	toShortLanguageKey
	m	(Ljava/lang/String;)Z	e	isValidPath
		p	0		path
	m	(Ljava/lang/String;)Z	f	isValidNamespace
		p	0		namespace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	C	b	NAMESPACE_SEPARATOR
	f	Ljava/lang/String;	c	DEFAULT_NAMESPACE
	f	Ljava/lang/String;	d	REALMS_NAMESPACE
	f	Ljava/lang/String;	e	namespace
	f	Ljava/lang/String;	f	path
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_INVALID
c	aaj$a	net/minecraft/resources/ResourceLocation$Serializer
	m	(Laaj;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Laaj;	a	deserialize
c	aak	net/minecraft/resources/package-info
c	aal	net/minecraft/server/Bootstrap
	m	()V	a	bootStrap
	m	(Laaj;)Ljava/lang/String;	a	lambda$getMissingTranslations$1
		p	0		stat
	m	(Lcgw;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$5
		p	0		biome
	m	(Lhc;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$4
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V	a	checkTranslations
		p	0		registry
		p	1		keyExtractor
		p	2		translationKeys
	m	(Ljava/lang/String;)V	a	realStdoutPrintln
		p	0		str
	m	(Ljava/util/Set;)V	a	checkGameruleTranslations
		p	0		translations
	m	(Ljava/util/function/Function;Lpe;Ljava/util/Set;Ljava/lang/Object;)V	a	lambda$checkTranslations$0
		p	3		object
	m	(Ljava/util/function/Supplier;)V	a	checkBootstrapCalled
		p	0		callerGetter
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	(Ljava/lang/String;)V	b	lambda$validate$3
		p	0		key
	m	(Ljava/util/function/Supplier;)Ljava/lang/RuntimeException;	b	createBootstrapException
		p	0		callerGetter
	m	()V	c	validate
	m	()V	d	validateThatAllBiomeFeaturesHaveBiomeFilter
	m	()V	e	wrapStreams
	m	()Ljava/lang/String;	f	lambda$validate$2
	f	Ljava/io/PrintStream;	a	STDOUT
	f	Z	b	isBootstrapped
	f	Lorg/slf4j/Logger;	c	LOGGER
c	aal$1	net/minecraft/server/Bootstrap$1
	m	(Lcfw$e;Lcfw$f;)V	a	visit
		p	1		key
		p	2		type
	f	Lpe;	a	val$language
	f	Ljava/util/Set;	b	val$missing
c	aam	net/minecraft/server/ChainedJsonException
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	(Ljava/lang/Exception;)Laam;	a	forException
		p	0		cause
	m	(Ljava/lang/String;)V	a	prependJsonKey
		p	1		jsonKey
	m	(Ljava/lang/String;)V	b	setFilenameAndFlush
		p	1		path
	f	Ljava/util/List;	a	entries
	f	Ljava/lang/String;	b	message
c	aam$a	net/minecraft/server/ChainedJsonException$Entry
	m	()Ljava/lang/String;	a	getFilename
	m	(Ljava/lang/String;)V	a	addJsonKey
		p	1		element
	m	()Ljava/lang/String;	b	getJsonKeys
	f	Ljava/lang/String;	a	filename
	f	Ljava/util/List;	b	jsonKeys
c	aan	net/minecraft/server/ConsoleInput
	m	(Ljava/lang/String;Ldr;)V	<init>	<init>
		p	1		command
		p	2		commandSource
	f	Ljava/lang/String;	a	msg
	f	Ldr;	b	source
c	aao	net/minecraft/server/DebugLoggedPrintStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Lorg/slf4j/Logger;	b	LOGGER
c	aap	net/minecraft/server/Eula
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		eulaFile
	m	()Z	a	hasAgreedToEULA
	m	()Z	b	readFile
	m	()V	c	saveDefaults
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	file
	f	Z	c	agreed
c	aaq	net/minecraft/server/LoggedPrintStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Ljava/lang/String;	a	name
	f	Lorg/slf4j/Logger;	b	LOGGER
c	aar	net/minecraft/server/PlayerAdvancements
	m	(Lcom/mojang/datafixers/DataFixer;Laih;Laau;Ljava/io/File;Lafp;)V	<init>	<init>
		p	1		dataFixer
		p	2		playerManager
		p	3		advancementLoader
		p	4		advancementFile
		p	5		owner
	m	()V	a	stopListening
	m	(Laau;)V	a	reload
		p	1		advancementLoader
	m	(Laf;)V	a	setSelectedTab
		p	1		advancement
	m	(Laf;Lah;)V	a	startProgress
		p	1		advancement
		p	2		progress
	m	(Laf;Ljava/lang/String;)Z	a	award
		p	1		advancement
		p	2		criterionName
	m	(Lafp;)V	a	setPlayer
		p	1		owner
	m	()V	b	save
	m	(Laau;)V	b	registerListeners
		p	1		advancementLoader
	m	(Laf;)Lah;	b	getOrStartProgress
		p	1		advancement
	m	(Laf;Ljava/lang/String;)Z	b	revoke
		p	1		advancement
		p	2		criterionName
	m	(Lafp;)V	b	flushDirty
		p	1		player
	m	()V	c	ensureAllVisible
	m	(Laau;)V	c	checkForAutomaticTriggers
		p	1		advancementLoader
	m	(Laf;)V	c	registerListeners
		p	1		advancement
	m	(Laau;)V	d	load
		p	1		advancementLoader
	m	(Laf;)V	d	unregisterListeners
		p	1		advancement
	m	(Laf;)V	e	ensureVisibility
		p	1		advancement
	m	(Laf;)Z	f	shouldBeVisible
		p	1		advancement
	m	(Laf;)Z	g	hasCompletedChildrenOrSelf
		p	1		advancement
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	VISIBILITY_DEPTH
	f	Lcom/google/gson/Gson;	c	GSON
	f	Lcom/google/gson/reflect/TypeToken;	d	TYPE_TOKEN
	f	Lcom/mojang/datafixers/DataFixer;	e	dataFixer
	f	Laih;	f	playerList
	f	Ljava/io/File;	g	file
	f	Ljava/util/Map;	h	advancements
	f	Ljava/util/Set;	i	visible
	f	Ljava/util/Set;	j	visibilityChanged
	f	Ljava/util/Set;	k	progressChanged
	f	Lafp;	l	player
	f	Laf;	m	lastSelectedTab
	f	Z	n	isFirstPacket
c	aar$1	net/minecraft/server/PlayerAdvancements$1
c	aas	net/minecraft/server/ReloadableServerResources
	m	(Lhn$a;Lds$a;I)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		commandEnvironment
		p	3		functionPermissionLevel
	m	()Laav;	a	getFunctionLibrary
	m	(Laai;Ljava/util/Map$Entry;)Lakh;	a	lambda$updateRegistryTags$3
		p	1		entry
	m	(Laas;Ljava/lang/Object;)Laas;	a	lambda$loadResources$1
		p	1		void_
	m	(Laas;Ljava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$loadResources$0
		p	1		void_
		p	2		throwable
	m	(Lahu;Lhn$a;Lds$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadResources
		p	0		manager
		p	1		dynamicRegistryManager
		p	2		commandEnvironment
		p	3		functionPermissionLevel
		p	4		prepareExecutor
		p	5		applyExecutor
	m	(Lhn;)V	a	updateRegistryTags
		p	1		dynamicRegistryManager
	m	(Lhn;Lakj$a;)V	a	updateRegistryTags
		p	0		dynamicRegistryManager
		p	1		tags
	m	(Ljava/util/Map$Entry;)Ljava/util/List;	a	lambda$updateRegistryTags$4
		p	0		entry
	m	()Ldrl;	b	getPredicateManager
	m	(Lhn;Lakj$a;)V	b	lambda$updateRegistryTags$2
		p	1		tags
	m	()Ldrk;	c	getLootTables
	m	()Ldrf;	d	getItemModifierManager
	m	()Lcct;	e	getRecipeManager
	m	()Lds;	f	getCommands
	m	()Laau;	g	getAdvancements
	m	()Ljava/util/List;	h	listeners
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	b	DATA_RELOAD_INITIAL_TASK
	f	Ldl;	c	commandBuildContext
	f	Lds;	d	commands
	f	Lcct;	e	recipes
	f	Lakj;	f	tagManager
	f	Ldrl;	g	predicateManager
	f	Ldrk;	h	lootTables
	f	Ldrf;	i	itemModifierManager
	f	Laau;	j	advancements
	f	Laav;	k	functionLibrary
c	aat	net/minecraft/server/RunningOnDifferentThreadException
	f	Laat;	a	RUNNING_ON_DIFFERENT_THREAD
c	aau	net/minecraft/server/ServerAdvancementManager
	m	(Ldrl;)V	<init>	<init>
		p	1		conditionManager
	m	()Ljava/util/Collection;	a	getAllAdvancements
	m	(Laaj;)Laf;	a	getAdvancement
		p	1		id
	m	(Ljava/lang/Object;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Laaj;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	2		id
		p	3		json
	m	(Ljava/util/Map;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lag;	c	advancements
	f	Ldrl;	d	predicateManager
c	aav	net/minecraft/server/ServerFunctionLibrary
	m	(ILcom/mojang/brigadier/CommandDispatcher;)V	<init>	<init>
		p	1		level
		p	2		commandDispatcher
	m	()Ljava/util/Map;	a	getFunctions
	m	(Laaj;)Ljava/util/Optional;	a	getFunction
		p	1		id
	m	(Laaj;Lcom/google/common/collect/ImmutableMap$Builder;Ldm;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reload$6
		p	2		function
		p	3		ex
	m	(Laho$a;Lahu;Lawc;Lawc;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lahs;)Ljava/util/List;	a	readLines
	m	(Lahu;)Ljava/util/Map;	a	lambda$reload$2
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laaj;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$reload$7
		p	1		id
		p	2		functionFuture
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$reload$8
		p	1		intermediate
	m	(Ljava/util/Map$Entry;Laaj;Ldr;)Ldm;	a	lambda$reload$3
	m	(Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map;	a	lambda$reload$4
		p	1		unused
		p	2		ex
	m	(Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage;	a	lambda$reload$5
	m	()Ljava/lang/Iterable;	b	getAvailableTags
	m	(Laaj;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Lahu;)Ljava/util/Map;	b	lambda$reload$0
	m	(Laaj;)Z	c	lambda$reload$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	FILE_EXTENSION
	f	I	c	PATH_PREFIX_LENGTH
	f	I	d	PATH_SUFFIX_LENGTH
	f	Ljava/util/Map;	e	functions
	f	Laki;	f	tagsLoader
	f	Ljava/util/Map;	g	tags
	f	I	h	functionCompilationLevel
	f	Lcom/mojang/brigadier/CommandDispatcher;	i	dispatcher
c	aaw	net/minecraft/server/ServerFunctionManager
	m	(Lnet/minecraft/server/MinecraftServer;Laav;)V	<init>	<init>
		p	1		server
		p	2		loader
	m	()I	a	getCommandLimit
	m	(Laaj;)Ljava/util/Optional;	a	get
		p	1		id
	m	(Laav;)V	a	replaceLibrary
		p	1		loader
	m	(Ldm;Ldr;)I	a	execute
		p	1		function
		p	2		source
	m	(Ldm;Ldr;Laaw$c;)I	a	execute
		p	1		function
		p	2		source
		p	3		tracer
	m	(Ljava/util/Collection;Laaj;)V	a	executeTagFunctions
		p	1		functions
		p	2		label
	m	()Lcom/mojang/brigadier/CommandDispatcher;	b	getDispatcher
	m	(Laaj;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Laav;)V	b	postReload
		p	1		loader
	m	()V	c	tick
	m	()Ldr;	d	getGameLoopSender
	m	()Ljava/lang/Iterable;	e	getFunctionNames
	m	()Ljava/lang/Iterable;	f	getTagNames
	f	Lrm;	a	NO_RECURSIVE_TRACES
	f	Laaj;	b	TICK_FUNCTION_TAG
	f	Laaj;	c	LOAD_FUNCTION_TAG
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Laaw$a;	e	context
	f	Ljava/util/List;	f	ticking
	f	Z	g	postReload
	f	Laav;	h	library
c	aaw$a	net/minecraft/server/ServerFunctionManager$ExecutionContext
	m	(Laaw;Laaw$c;)V	<init>	<init>
		p	2		tracer
	m	(Ldm;Ldr;)V	a	delayFunctionCall
		p	1		function
		p	2		source
	m	(Ljava/lang/String;)V	a	reportError
		p	1		message
	m	(Ldm;Ldr;)I	b	runTopCommand
		p	1		function
		p	2		source
	f	Laaw;	a	this$0
	f	I	b	depth
	f	Laaw$c;	c	tracer
	f	Ljava/util/Deque;	d	commandQueue
	f	Ljava/util/List;	e	nestedCalls
c	aaw$b	net/minecraft/server/ServerFunctionManager$QueuedCommand
	m	(Ldr;ILdm$c;)V	<init>	<init>
		p	1		source
		p	2		depth
		p	3		element
	m	(Laaw;Ljava/util/Deque;ILaaw$c;)V	a	execute
		p	1		manager
		p	2		entries
		p	3		maxChainLength
		p	4		tracer
	f	Ldr;	a	sender
	f	I	b	depth
	f	Ldm$c;	c	entry
c	aaw$c	net/minecraft/server/ServerFunctionManager$TraceCallbacks
	m	(ILaaj;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(ILjava/lang/String;)V	b	onError
		p	1		depth
		p	2		message
c	aax	net/minecraft/server/ServerInterface
	m	()Ljava/lang/String;	F	getServerVersion
	m	()I	G	getPlayerCount
	m	()I	H	getMaxPlayers
	m	()[Ljava/lang/String;	I	getPlayerNames
	m	()Laeq;	a	getProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	()Ljava/lang/String;	b	getServerIp
	m	()I	d	getServerPort
	m	()Ljava/lang/String;	p	getServerName
	m	()Ljava/lang/String;	r	getLevelIdName
	m	()Ljava/lang/String;	t	getPluginNames
c	aay	net/minecraft/server/ServerScoreboard
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	setDirty
	m	(ILdwo;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Ldwo;)V	a	onObjectiveAdded
		p	1		objective
	m	(Ldwp;)V	a	onTeamAdded
		p	1		team
	m	(Ldwq;)V	a	onScoreChanged
		p	1		score
	m	(Ljava/lang/Runnable;)V	a	addDirtyListener
		p	1		listener
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
		p	1		playerName
	m	(Ljava/lang/String;Ldwo;)V	a	onPlayerScoreRemoved
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Ldwp;)Z	a	addPlayerToTeam
		p	1		playerName
		p	2		team
	m	(Lpj;)Ldws;	a	createData
		p	1		nbt
	m	()Ldws;	b	createData
	m	(Ldwo;)V	b	onObjectiveChanged
		p	1		objective
	m	(Ldwp;)V	b	onTeamChanged
		p	1		team
	m	(Ljava/lang/String;Ldwp;)V	b	removePlayerFromTeam
		p	1		playerName
		p	2		team
	m	(Ldwo;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Ldwp;)V	c	onTeamRemoved
		p	1		team
	m	(Ldwo;)Ljava/util/List;	d	getStartTrackingPackets
		p	1		objective
	m	(Ldwo;)V	e	startTrackingObjective
		p	1		objective
	m	(Ldwo;)Ljava/util/List;	f	getStopTrackingPackets
		p	1		objective
	m	(Ldwo;)V	g	stopTrackingObjective
		p	1		objective
	m	(Ldwo;)I	h	getObjectiveDisplaySlotCount
		p	1		objective
	f	Lnet/minecraft/server/MinecraftServer;	g	server
	f	Ljava/util/Set;	h	trackedObjectives
	f	Ljava/util/List;	i	dirtyListeners
c	aay$a	net/minecraft/server/ServerScoreboard$Method
	m	()[Laay$a;	a	$values
	f	Laay$a;	a	CHANGE
	f	Laay$a;	b	REMOVE
	f	[Laay$a;	c	$VALUES
c	aaz	net/minecraft/server/Services
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	a	sessionService
	m	(Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Laaz;	a	create
		p	0		authenticationService
		p	1		rootDirectory
	m	()Lalw;	b	serviceSignatureValidator
	m	()Lcom/mojang/authlib/GameProfileRepository;	c	profileRepository
	m	()Laid;	d	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	a	sessionService
	f	Lalw;	b	serviceSignatureValidator
	f	Lcom/mojang/authlib/GameProfileRepository;	c	profileRepository
	f	Laid;	d	profileCache
	f	Ljava/lang/String;	e	USERID_CACHE_FILE
c	aba	net/minecraft/server/TickTask
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		creationTicks
		p	2		runnable
	m	()I	a	getTick
	f	I	a	tick
	f	Ljava/lang/Runnable;	b	runnable
c	abb	net/minecraft/server/WorldLoader
	m	(Labb$a;Labb$d;Labb$c;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	0		serverConfig
		p	1		loadContextSupplier
		p	2		saveApplierFactory
		p	3		prepareExecutor
		p	4		applyExecutor
	m	(Lahl;Laas;Ljava/lang/Throwable;)V	a	lambda$load$0
		p	1		dataPackContents
		p	2		throwable
	m	(Lhn$a;Labb$c;Lahl;Ljava/lang/Object;Laas;)Ljava/lang/Object;	a	lambda$load$1
		p	4		dataPackContents
c	abb$a	net/minecraft/server/WorldLoader$InitConfig
	m	()Labb$b;	a	packConfig
	m	()Lds$a;	b	commandSelection
	m	()I	c	functionCompilationLevel
	f	Labb$b;	a	packConfig
	f	Lds$a;	b	commandSelection
	f	I	c	functionCompilationLevel
c	abb$b	net/minecraft/server/WorldLoader$PackConfig
	m	()Lcom/mojang/datafixers/util/Pair;	a	createResourceManager
	m	()Lahg;	b	packRepository
	m	()Lcfo;	c	initialDataPacks
	m	()Z	d	safeMode
	f	Lahg;	a	packRepository
	f	Lcfo;	b	initialDataPacks
	f	Z	c	safeMode
c	abb$c	net/minecraft/server/WorldLoader$ResultFactory
	m	(Lahl;Laas;Lhn$a;Ljava/lang/Object;)Ljava/lang/Object;	create	create
		p	1		resourceManager
		p	2		dataPackContents
		p	3		dynamicRegistryManager
		p	4		loadContext
c	abb$d	net/minecraft/server/WorldLoader$WorldDataSupplier
	m	(Lahu;Lcfo;)Lcom/mojang/datafixers/util/Pair;	get	get
		p	1		resourceManager
		p	2		dataPackSettings
c	abc	net/minecraft/server/WorldStem
	m	()Lahl;	a	resourceManager
	m	(Labb$a;Labb$d;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	0		serverConfig
		p	1		savePropertiesSupplier
		p	2		prepareExecutor
		p	3		applyExecutor
	m	()Laas;	b	dataPackResources
	m	()Lhn$a;	c	registryAccess
	m	()Ldqz;	d	worldData
	f	Lahl;	a	resourceManager
	f	Laas;	b	dataPackResources
	f	Lhn$a;	c	registryAccess
	f	Ldqz;	d	worldData
c	abd	net/minecraft/server/bossevents/CustomBossEvent
	m	(Laaj;Lrm;)V	<init>	<init>
		p	1		id
		p	2		displayName
	m	()Laaj;	a	getTextId
	m	(I)V	a	setValue
		p	1		value
	m	(Lafp;)V	a	addPlayer
		p	1		player
	m	(Ljava/util/Collection;)Z	a	setPlayers
		p	1		players
	m	(Ljava/util/UUID;)V	a	addOfflinePlayer
		p	1		uuid
	m	(Lpj;Laaj;)Labd;	a	load
		p	0		nbt
		p	1		id
	m	(Lrv;)Lrv;	a	lambda$getDisplayName$0
		p	1		style
	m	()V	b	removeAllPlayers
	m	(I)V	b	setMax
		p	1		maxValue
	m	(Lafp;)V	b	removePlayer
		p	1		player
	m	()I	c	getValue
	m	(Lafp;)V	c	onPlayerConnect
		p	1		player
	m	()I	d	getMax
	m	(Lafp;)V	d	onPlayerDisconnect
		p	1		player
	m	()Lrm;	e	getDisplayName
	m	()Lpj;	f	save
	f	Laaj;	h	id
	f	Ljava/util/Set;	i	players
	f	I	j	value
	f	I	k	max
c	abe	net/minecraft/server/bossevents/CustomBossEvents
	m	()Ljava/util/Collection;	a	getIds
	m	(Laaj;)Labd;	a	get
		p	1		id
	m	(Laaj;Lrm;)Labd;	a	create
		p	1		id
		p	2		displayName
	m	(Labd;)V	a	remove
		p	1		bossBar
	m	(Lafp;)V	a	onPlayerConnect
		p	1		player
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()Ljava/util/Collection;	b	getEvents
	m	(Lafp;)V	b	onPlayerDisconnect
		p	1		player
	m	()Lpj;	c	save
	f	Ljava/util/Map;	a	events
c	abf	net/minecraft/server/bossevents/package-info
c	abg	net/minecraft/server/chase/ChaseClient
	m	(Ljava/lang/String;ILnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		minecraftServer
	m	()V	a	start
	m	(Labg$a;)V	a	lambda$handleTeleport$0
		p	1		pos
	m	(Ljava/lang/String;)V	a	handleMessage
		p	1		message
	m	(Ljava/util/Scanner;)V	a	handleTeleport
		p	1		scanner
	m	()V	b	stop
	m	(Ljava/lang/String;)V	b	executeCommand
		p	1		command
	m	(Ljava/util/Scanner;)Ljava/util/Optional;	b	parseTarget
		p	1		scanner
	m	()V	c	run
	m	(Ljava/lang/String;)V	c	lambda$executeCommand$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	RECONNECT_INTERVAL_SECONDS
	f	Ljava/lang/String;	c	serverHost
	f	I	d	serverPort
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Z	f	wantsToRun
	f	Ljava/net/Socket;	g	socket
	f	Ljava/lang/Thread;	h	thread
c	abg$a	net/minecraft/server/chase/ChaseClient$TeleportTarget
	m	(Laai;Ldvt;Ldvs;)V	<init>	<init>
		p	1		dimension
		p	2		pos
		p	3		rot
	m	()Laai;	a	level
	m	()Ldvt;	b	pos
	m	()Ldvs;	c	rot
	f	Laai;	a	level
	f	Ldvt;	b	pos
	f	Ldvs;	c	rot
c	abh	net/minecraft/server/chase/ChaseServer
	m	(Ljava/lang/String;ILaih;I)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		playerManager
		p	4		interval
	m	()V	a	start
	m	(Ljava/net/Socket;[B)V	a	lambda$runSender$0
	m	()V	b	stop
	m	()V	c	runSender
	m	()V	d	runAcceptor
	m	()Labh$a;	e	getPlayerPosition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	serverBindAddress
	f	I	c	serverPort
	f	Laih;	d	playerList
	f	I	e	broadcastIntervalMs
	f	Z	f	wantsToRun
	f	Ljava/net/ServerSocket;	g	serverSocket
	f	Ljava/util/concurrent/CopyOnWriteArrayList;	h	clientSockets
c	abh$a	net/minecraft/server/chase/ChaseServer$PlayerPosition
	m	()Ljava/lang/String;	a	dimensionName
	m	()D	b	x
	m	()D	c	y
	m	()D	d	z
	m	()F	e	yRot
	m	()F	f	xRot
	m	()Ljava/lang/String;	g	format
	f	Ljava/lang/String;	a	dimensionName
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
c	abi	net/minecraft/server/chase/package-info
c	abj	net/minecraft/server/commands/AdvancementCommands
	m	(Laf;Labj$b;)Ljava/util/List;	a	getAdvancements
		p	0		advancement
		p	1		selection
	m	(Laf;Ljava/util/List;)V	a	addChildren
		p	0		parent
		p	1		childList
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$10
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/util/Collection;Labj$a;Laf;Ljava/lang/String;)I	a	performCriterion
		p	0		source
		p	1		targets
		p	2		operation
		p	3		advancement
		p	4		criterion
	m	(Ldr;Ljava/util/Collection;Labj$a;Ljava/util/Collection;)I	a	perform
		p	0		source
		p	1		targets
		p	2		operation
		p	3		selection
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$3
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_ADVANCEMENTS
c	abj$a	net/minecraft/server/commands/AdvancementCommands$Action
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getKey
	m	(Lafp;Laf;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Lafp;Laf;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
	m	(Lafp;Ljava/lang/Iterable;)I	a	perform
		p	1		player
		p	2		advancements
	m	()[Labj$a;	b	$values
	f	Labj$a;	a	GRANT
	f	Labj$a;	b	REVOKE
	f	Ljava/lang/String;	c	key
	f	[Labj$a;	d	$VALUES
c	abj$a$1	net/minecraft/server/commands/AdvancementCommands$Action$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lafp;Laf;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Lafp;Laf;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	abj$a$2	net/minecraft/server/commands/AdvancementCommands$Action$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lafp;Laf;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Lafp;Laf;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	abj$b	net/minecraft/server/commands/AdvancementCommands$Mode
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		before
		p	4		after
	m	()[Labj$b;	a	$values
	f	Labj$b;	a	ONLY
	f	Labj$b;	b	THROUGH
	f	Labj$b;	c	FROM
	f	Labj$b;	d	UNTIL
	f	Labj$b;	e	EVERYTHING
	f	Z	f	parents
	f	Z	g	children
	f	[Labj$b;	h	$VALUES
c	abk	net/minecraft/server/commands/AttributeCommand
	m	(Lbaq;)Lbbf;	a	getLivingEntity
		p	0		entity
	m	(Lbaq;Lbcb;)Lbcc;	a	getAttributeInstance
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
		p	0		context
	m	(Ldr;)Z	a	lambda$register$4
		p	0		source
	m	(Ldr;Lbaq;Lbcb;D)I	a	getAttributeValue
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Ldr;Lbaq;Lbcb;Ljava/util/UUID;)I	a	removeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
	m	(Ldr;Lbaq;Lbcb;Ljava/util/UUID;D)I	a	getAttributeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
		p	4		multiplier
	m	(Ldr;Lbaq;Lbcb;Ljava/util/UUID;Ljava/lang/String;DLbce$a;)I	a	addModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
		p	4		name
		p	5		value
		p	7		operation
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		entityName
		p	1		attributeName
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Lbaq;Lbcb;)Lbbf;	b	getEntityWithAttribute
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
		p	0		context
	m	(Ldr;Lbaq;Lbcb;D)I	b	getAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
		p	0		context
	m	(Ldr;Lbaq;Lbcb;D)I	c	setAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		value
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$5
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_NO_SUCH_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_NO_SUCH_MODIFIER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	d	ERROR_MODIFIER_ALREADY_PRESENT
c	abl	net/minecraft/server/commands/BanIpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/lang/String;Lrm;)I	a	banIpOrName
		p	0		source
		p	1		target
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ldr;Ljava/lang/String;Lrm;)I	b	banIp
		p	0		source
		p	1		targetIp
		p	2		reason
	f	Ljava/util/regex/Pattern;	a	IP_ADDRESS_PATTERN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_IP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_BANNED
c	abm	net/minecraft/server/commands/BanListCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	showList
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	abn	net/minecraft/server/commands/BanPlayerCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lrm;)I	a	banPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_BANNED
c	abo	net/minecraft/server/commands/BossBarCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)Labd;	a	getBossBar
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$2
		p	0		context
		p	1		builder
	m	(Ldr;)I	a	listBars
		p	0		source
	m	(Ldr;Laaj;Lrm;)I	a	createBar
		p	0		source
		p	1		name
		p	2		displayName
	m	(Ldr;Labd;)I	a	getValue
		p	0		source
		p	1		bossBar
	m	(Ldr;Labd;I)I	a	setValue
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Ldr;Labd;Lazc$a;)I	a	setColor
		p	0		source
		p	1		bossBar
		p	2		color
	m	(Ldr;Labd;Lazc$b;)I	a	setStyle
		p	0		source
		p	1		bossBar
		p	2		style
	m	(Ldr;Labd;Ljava/util/Collection;)I	a	setPlayers
		p	0		source
		p	1		bossBar
		p	2		players
	m	(Ldr;Labd;Lrm;)I	a	setName
		p	0		source
		p	1		bossBar
		p	2		name
	m	(Ldr;Labd;Z)I	a	setVisible
		p	0		source
		p	1		bossBar
		p	2		visible
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$28
		p	0		context
	m	(Ldr;)Z	b	lambda$register$3
		p	0		source
	m	(Ldr;Labd;)I	b	getMax
		p	0		source
		p	1		bossBar
	m	(Ldr;Labd;I)I	b	setMax
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$27
		p	0		context
	m	(Ldr;Labd;)I	c	getVisible
		p	0		source
		p	1		bossBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$26
		p	0		context
	m	(Ldr;Labd;)I	d	getPlayers
		p	0		source
		p	1		bossBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$25
		p	0		context
	m	(Ldr;Labd;)I	e	removeBar
		p	0		source
		p	1		bossBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$24
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$23
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_BOSS_BAR
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_DOESNT_EXIST
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NO_PLAYER_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NO_NAME_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_NO_COLOR_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_NO_STYLE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_NO_VALUE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_NO_MAX_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_ALREADY_HIDDEN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_ALREADY_VISIBLE
c	abp	net/minecraft/server/commands/ChaseCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)I	a	stop
		p	0		source
	m	(Ldr;Ljava/lang/String;I)I	a	lead
		p	0		source
		p	1		ip
		p	2		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldr;)Z	b	alreadyRunning
		p	0		source
	m	(Ldr;Ljava/lang/String;I)I	b	follow
		p	0		source
		p	1		ip
		p	2		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
		p	0		context
	f	Lcom/google/common/collect/BiMap;	a	DIMENSION_NAMES
	f	Ljava/lang/String;	b	DEFAULT_CONNECT_HOST
	f	Ljava/lang/String;	c	DEFAULT_BIND_ADDRESS
	f	I	d	DEFAULT_PORT
	f	I	e	BROADCAST_INTERVAL_MS
	f	Labh;	f	chaseServer
	f	Labg;	g	chaseClient
c	abq	net/minecraft/server/commands/ClearInventoryCommands
	m	(Lcaa;)Z	a	lambda$register$5
		p	0		stack
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	clearInventory
		p	0		source
		p	1		targets
		p	2		item
		p	3		maxCount
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		playerCount
	m	(Lcaa;)Z	b	lambda$register$3
		p	0		stack
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		playerName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_SINGLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_MULTIPLE
c	abr	net/minecraft/server/commands/CloneCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$20
		p	0		context
	m	(Lcuv;)Z	a	lambda$register$11
		p	0		pos
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Lgt;Lgt;Lgt;Ljava/util/function/Predicate;Labr$b;)I	a	clone
		p	0		source
		p	1		begin
		p	2		end
		p	3		destination
		p	4		filter
		p	5		mode
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$19
		p	0		context
	m	(Lcuv;)Z	b	lambda$register$9
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$18
		p	0		context
	m	(Lcuv;)Z	c	lambda$register$7
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$17
		p	0		context
	m	(Lcuv;)Z	d	lambda$register$5
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$16
		p	0		context
	m	(Lcuv;)Z	e	lambda$register$3
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$15
		p	0		context
	m	(Lcuv;)Z	f	lambda$static$1
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$4
		p	0		context
	f	Ljava/util/function/Predicate;	a	FILTER_AIR
	f	I	b	MAX_CLONE_AREA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OVERLAP
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_FAILED
c	abr$a	net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	m	(Lgt;Lcur;Lpj;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		blockEntityNbt
	f	Lgt;	a	pos
	f	Lcur;	b	state
	f	Lpj;	c	tag
c	abr$b	net/minecraft/server/commands/CloneCommands$Mode
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3		allowsOverlap
	m	()Z	a	canOverlap
	m	()[Labr$b;	b	$values
	f	Labr$b;	a	FORCE
	f	Labr$b;	b	MOVE
	f	Labr$b;	c	NORMAL
	f	Z	d	canOverlap
	f	[Labr$b;	e	$VALUES
c	abs	net/minecraft/server/commands/DataPackCommand
	m	(Lahe;)Lrm;	a	lambda$listEnabledPacks$23
		p	0		profile
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$5
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lahe;	a	getPack
		p	0		context
		p	1		name
		p	2		enable
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahe;)V	a	lambda$register$12
		p	1		profiles
		p	2		profile
	m	(Ldr;)I	a	listPacks
		p	0		source
	m	(Ldr;Lahe;)I	a	disablePack
		p	0		source
		p	1		container
	m	(Ldr;Lahe;Labs$a;)I	a	enablePack
		p	0		source
		p	1		container
		p	2		packAdder
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		name
	m	(Ljava/util/Collection;Lahe;)Z	a	lambda$listAvailablePacks$21
		p	1		profile
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$static$4
		p	1		name
	m	(Ljava/util/List;Lahe;)V	a	lambda$register$15
		p	0		profiles
		p	1		profile
	m	(Lahe;)Lrm;	b	lambda$listAvailablePacks$22
		p	0		profile
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$3
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahe;)V	b	lambda$register$10
		p	1		profiles
		p	2		profile
	m	(Ldr;)I	b	listAvailablePacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		name
	m	(Ljava/util/List;Lahe;)V	b	lambda$register$8
		p	0		profiles
		p	1		profile
	m	(Lahe;)Lahe;	c	lambda$register$7
		p	0		profile
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$18
		p	0		context
	m	(Ldr;)I	c	listEnabledPacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$17
		p	0		context
	m	(Ldr;)Z	d	lambda$register$6
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$9
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PACK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_PACK_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_PACK_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SELECTED_PACKS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	UNSELECTED_PACKS
c	abs$a	net/minecraft/server/commands/DataPackCommand$Inserter
	m	(Ljava/util/List;Lahe;)V	apply	apply
		p	1		profiles
		p	2		profile
c	abt	net/minecraft/server/commands/DeOpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	deopPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_OP
c	abu	net/minecraft/server/commands/DebugCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)I	a	start
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	traceFunction
		p	0		source
		p	1		functions
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldr;)I	b	stop
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	m	(Ldr;)Z	c	lambda$register$3
	m	(Ldr;)Z	d	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	abu$a	net/minecraft/server/commands/DebugCommand$Tracer
	m	(Ljava/io/PrintWriter;)V	<init>	<init>
		p	1		writer
	m	()Z	G_	shouldInformAdmins
	m	(I)V	a	indentAndSave
		p	1		width
	m	(ILaaj;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	(I)V	b	printIndent
		p	1		width
	m	(ILjava/lang/String;)V	b	onError
		p	1		depth
		p	2		message
	m	()Z	d_	alwaysAccepts
	m	()V	e	newLine
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
	f	I	b	INDENT_OFFSET
	f	Ljava/io/PrintWriter;	c	output
	f	I	d	lastIndent
	f	Z	e	waitingForResult
c	abv	net/minecraft/server/commands/DebugMobSpawningCommand
	m	(Lbbi;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lbbi;Lgt;)I	a	spawnMobs
		p	0		source
		p	1		group
		p	2		pos
c	abw	net/minecraft/server/commands/DebugPathCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lgt;)I	a	fillBlocks
		p	0		source
		p	1		pos
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_MOB
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PATH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NOT_COMPLETE
c	abx	net/minecraft/server/commands/DefaultGameModeCommands
	m	(Lcfx;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lcfx;)I	a	setMode
		p	0		source
		p	1		defaultGameMode
c	aby	net/minecraft/server/commands/DifficultyCommand
	m	(Lazj;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Lazj;)I	a	setDifficulty
		p	0		source
		p	1		difficulty
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		difficulty
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_ALREADY_DIFFICULT
c	abz	net/minecraft/server/commands/EffectCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	clearEffects
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;Lbah;)I	a	clearEffect
		p	0		source
		p	1		targets
		p	2		effect
	m	(Ldr;Ljava/util/Collection;Lbah;Ljava/lang/Integer;IZ)I	a	giveEffect
		p	0		source
		p	1		targets
		p	2		effect
		p	3		seconds
		p	4		amplifier
		p	5		showParticles
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_CLEAR_EVERYTHING_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CLEAR_SPECIFIC_FAILED
c	aca	net/minecraft/server/commands/EmoteCommands
	m	(Laih;Ldr;Lagd;)V	a	lambda$register$0
		p	2		decoratedMessage
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
c	acb	net/minecraft/server/commands/EnchantCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)Z	a	lambda$register$4
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lcdu;I)I	a	enchant
		p	0		source
		p	1		targets
		p	2		enchantment
		p	3		level
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		itemName
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		level
		p	1		maxLevel
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		entityName
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INCOMPATIBLE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_LEVEL_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOTHING_HAPPENED
c	acc	net/minecraft/server/commands/ExecuteCommand
	m	(Lacc$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createNumericConditionalHandler$56
		p	1		context
	m	(Laei;Leh$g;)I	a	checkMatchingData
		p	0		object
		p	1		path
	m	(Laei;ZLeh$g;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeData$37
		p	4		context
		p	5		success
		p	6		result
	m	(Laej$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$53
		p	1		context
	m	(Laej$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	a	lambda$wrapStores$32
		p	2		context
	m	(Lafo;Lgt;Lgt;Lgt;Z)Ljava/util/OptionalInt;	a	checkRegions
		p	0		world
		p	1		start
		p	2		end
		p	3		destination
		p	4		masked
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer;	a	lambda$static$3
		p	0		consumer
		p	1		consumer2
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$static$2
		p	2		context
		p	3		success
		p	4		result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	a	lambda$addConditionals$51
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lqc;	a	lambda$wrapStores$31
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcj$d;)Z	a	checkScore
		p	0		context
		p	1		range
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$4
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z	a	checkScore
		p	0		context
		p	1		condition
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	checkIfRegions
		p	0		context
		p	1		masked
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	expect
		p	0		context
		p	1		positive
		p	2		value
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLacc$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		condition
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addIfBlocksConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		masked
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLdl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionals
		p	0		root
		p	1		argumentBuilder
		p	2		positive
		p	3		commandRegistryAccess
	m	(Lcom/mojang/brigadier/tree/CommandNode;ZLaej$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$addConditionals$54
		p	3		builder
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Laej$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$wrapStores$33
		p	3		builder
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapStores
		p	0		node
		p	1		builder
		p	2		requestResult
	m	(Ldr;)Z	a	lambda$register$6
		p	0		source
	m	(Ldr;Labd;ZZ)Ldr;	a	storeValue
		p	0		source
		p	1		bossBar
		p	2		storeInValue
		p	3		requestResult
	m	(Ldr;Laei;Leh$g;Ljava/util/function/IntFunction;Z)Ldr;	a	storeData
		p	0		source
		p	1		object
		p	2		path
		p	3		nbtSetter
		p	4		requestResult
	m	(Ldr;Ldua;)Z	a	checkCustomPredicate
		p	0		source
		p	1		condition
	m	(Ldr;Ljava/util/Collection;Ldwo;Z)Ldr;	a	storeValue
		p	0		source
		p	1		targets
		p	2		objective
		p	3		requestResult
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	a	lambda$addConditionals$46
		p	0		a
		p	1		b
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		count
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Ljava/util/Collection;Ldwr;Ldwo;ZLcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$34
		p	4		context
		p	5		success
		p	6		result
	m	(Ljava/util/function/IntFunction;I)Lqc;	a	lambda$storeData$36
	m	(ZLacc$a;)Lcom/mojang/brigadier/Command;	a	createNumericConditionalHandler
		p	0		positive
		p	1		condition
	m	(ZLacc$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditional$58
		p	2		context
	m	(ZLaej$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addConditionals$52
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addIfBlocksConditional$61
		p	1		context
	m	(ZZLabd;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$35
		p	3		context
		p	4		success
		p	5		result
	m	(ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addIfBlocksConditional$59
		p	2		context
	m	(Lacc$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$createNumericConditionalHandler$55
		p	1		context
	m	(Laej$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	b	lambda$wrapStores$30
		p	2		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addConditionals$50
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lqc;	b	lambda$wrapStores$29
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	checkUnlessRegions
		p	0		context
		p	1		masked
	m	(Ldr;)Z	b	lambda$register$5
		p	0		source
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	b	lambda$addConditionals$44
		p	0		a
		p	1		b
	m	(ZLacc$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$addConditional$57
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addIfBlocksConditional$60
		p	1		context
	m	(Laej$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	c	lambda$wrapStores$28
		p	2		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	c	lambda$addConditionals$48
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lqc;	c	lambda$wrapStores$27
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	checkRegions
		p	0		context
		p	1		masked
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	c	lambda$addConditionals$42
		p	0		a
		p	1		b
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	c	lambda$addConditionals$49
		p	1		context
	m	(Laej$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	d	lambda$wrapStores$26
		p	2		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	d	lambda$addConditionals$47
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lqc;	d	lambda$wrapStores$25
		p	1		result
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	d	lambda$addConditionals$40
		p	0		a
		p	1		b
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	d	lambda$wrapStores$20
		p	1		context
	m	(Laej$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	e	lambda$wrapStores$24
		p	2		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	e	lambda$addConditionals$45
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lqc;	e	lambda$wrapStores$23
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	e	lambda$wrapStores$19
		p	1		context
	m	(Laej$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	f	lambda$wrapStores$22
		p	2		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	f	lambda$addConditionals$43
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lqc;	f	lambda$wrapStores$21
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	f	lambda$wrapStores$18
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	g	lambda$addConditionals$41
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	h	lambda$addConditionals$39
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	i	lambda$addConditionals$38
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	j	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	k	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	l	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	m	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	n	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	o	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	p	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	q	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	r	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	s	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	t	lambda$register$7
		p	0		context
	f	I	a	MAX_TEST_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CONDITIONAL_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_CONDITIONAL_FAILED_COUNT
	f	Ljava/util/function/BinaryOperator;	e	CALLBACK_CHAINER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_PREDICATE
c	acc$a	net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	test	test
		p	1		context
c	acc$b	net/minecraft/server/commands/ExecuteCommand$CommandPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	test	test
		p	1		context
c	acd	net/minecraft/server/commands/ExperienceCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldr;)Z	a	lambda$register$9
		p	0		source
	m	(Ldr;Lafp;Lacd$a;)I	a	queryExperience
		p	0		source
		p	1		player
		p	2		component
	m	(Ldr;Ljava/util/Collection;ILacd$a;)I	a	addExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;ILacd$a;)I	b	setExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SET_POINTS_INVALID
c	acd$a	net/minecraft/server/commands/ExperienceCommand$Type
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V	<init>	<init>
		p	3		name
		p	4		adder
		p	5		setter
		p	6		getter
	m	()[Lacd$a;	a	$values
	m	(Lafp;)I	a	lambda$static$3
		p	0		player
	m	(Lafp;Ljava/lang/Integer;)Z	a	lambda$static$2
		p	0		player
		p	1		level
	m	(Lafp;)I	b	lambda$static$1
		p	0		player
	m	(Lafp;Ljava/lang/Integer;)Z	b	lambda$static$0
		p	0		player
		p	1		xp
	f	Lacd$a;	a	POINTS
	f	Lacd$a;	b	LEVELS
	f	Ljava/util/function/BiConsumer;	c	add
	f	Ljava/util/function/BiPredicate;	d	set
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	query
	f	[Lacd$a;	g	$VALUES
c	ace	net/minecraft/server/commands/FillCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Lcuv;)Z	a	lambda$register$5
		p	0		pos
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ldjw;Lfc;Lace$a;Ljava/util/function/Predicate;)I	a	fillBlocks
		p	0		source
		p	1		range
		p	2		block
		p	3		mode
		p	4		filter
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	f	I	a	MAX_FILL_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_AREA_TOO_LARGE
	f	Lfc;	c	HOLLOW_CORE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_FAILED
c	ace$a	net/minecraft/server/commands/FillCommand$Mode
	m	(Ljava/lang/String;ILadm$a;)V	<init>	<init>
		p	3		filter
	m	()[Lace$a;	a	$values
	m	(Ldjw;Lgt;Lfc;Lafo;)Lfc;	a	lambda$static$3
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldjw;Lgt;Lfc;Lafo;)Lfc;	b	lambda$static$2
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldjw;Lgt;Lfc;Lafo;)Lfc;	c	lambda$static$1
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldjw;Lgt;Lfc;Lafo;)Lfc;	d	lambda$static$0
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	f	Lace$a;	a	REPLACE
	f	Lace$a;	b	OUTLINE
	f	Lace$a;	c	HOLLOW
	f	Lace$a;	d	DESTROY
	f	Ladm$a;	e	filter
	f	[Lace$a;	f	$VALUES
c	acf	net/minecraft/server/commands/ForceLoadCommand
	m	(Lafo;J)V	a	lambda$removeAll$10
		p	1		chunkPos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldr;)I	a	listForceLoad
		p	0		source
	m	(Ldr;Laff;)I	a	queryForceLoad
		p	0		source
		p	1		pos
	m	(Ldr;Laff;Laff;Z)I	a	changeForceLoad
		p	0		source
		p	1		from
		p	2		to
		p	3		forceLoaded
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		chunkPos
		p	1		registryKey
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Ldr;)I	b	removeAll
		p	0		source
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldr;)Z	c	lambda$register$2
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	f	I	a	MAX_CHUNK_LIMIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_TOO_MANY_CHUNKS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_NOT_TICKING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_ALL_ADDED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NONE_REMOVED
c	acg	net/minecraft/server/commands/FunctionCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	runFunction
		p	0		source
		p	1		functions
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_FUNCTION
c	ach	net/minecraft/server/commands/GameModeCommand
	m	(Lcfx;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lcfx;)I	a	setMode
		p	0		context
		p	1		targets
		p	2		gameMode
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lafp;Lcfx;)V	a	logGamemodeChange
		p	0		source
		p	1		player
		p	2		gameMode
	m	(Lcfx;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	1		context
	f	I	a	PERMISSION_LEVEL
c	aci	net/minecraft/server/commands/GameRuleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcfw$e;)I	a	setRule
		p	0		context
		p	1		key
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lcfw$e;)I	a	queryRule
		p	0		source
		p	1		key
c	aci$1	net/minecraft/server/commands/GameRuleCommand$1
	m	(Lcfw$e;Lcfw$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Lcfw$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$visit$1
		p	1		context
	m	(Lcfw$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$visit$0
		p	1		context
	f	Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	val$base
c	acj	net/minecraft/server/commands/GiveCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lfu;Ljava/util/Collection;I)I	a	giveItem
		p	0		source
		p	1		item
		p	2		targets
		p	3		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	I	a	MAX_ALLOWED_ITEMSTACKS
c	ack	net/minecraft/server/commands/HelpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	acl	net/minecraft/server/commands/ItemCommands
	m	(Lbaq;I)Lcaa;	a	getEntityItem
		p	0		entity
		p	1		slotId
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$6
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$7
		p	0		source
	m	(Ldr;Lbaq;ILgt;I)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Ldr;Lbaq;ILgt;ILdsr;)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		modifier
	m	(Ldr;Lbaq;ILjava/util/Collection;I)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Ldr;Lbaq;ILjava/util/Collection;ILdsr;)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		modifier
	m	(Ldr;Ldsr;Lcaa;)Lcaa;	a	applyModifier
		p	0		source
		p	1		modifier
		p	2		stack
	m	(Ldr;Lgt;I)Lcaa;	a	getBlockItem
		p	0		source
		p	1		pos
		p	2		slotId
	m	(Ldr;Lgt;ILcaa;)I	a	setBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		stack
	m	(Ldr;Lgt;ILdsr;)I	a	modifyBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		modifier
	m	(Ldr;Lgt;ILgt;I)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Ldr;Lgt;ILgt;ILdsr;)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		modifier
	m	(Ldr;Lgt;ILjava/util/Collection;I)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Ldr;Lgt;ILjava/util/Collection;ILdsr;)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		modifier
	m	(Ldr;Lgt;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lazf;	a	getContainer
		p	0		source
		p	1		pos
		p	2		exception
	m	(Ldr;Ljava/util/Collection;ILcaa;)I	a	setEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		stack
	m	(Ldr;Ljava/util/Collection;ILdsr;)I	a	modifyEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		modifier
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		itemName
		p	1		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$20
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$19
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		slot
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$8
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	a	ERROR_TARGET_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TARGET_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_SOURCE_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_SOURCE_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_TARGET_NO_CHANGES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	g	SUGGEST_MODIFIER
c	acm	net/minecraft/server/commands/JfrCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)I	a	startJfr
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		message
	m	(Ljava/nio/file/Path;Lrv;)Lrv;	a	lambda$stopJfr$4
		p	1		style
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldr;)I	b	stopJfr
		p	0		source
	m	(Ldr;)Z	c	lambda$register$1
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	START_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	DUMP_FAILED
c	acn	net/minecraft/server/commands/KickCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lrm;)I	a	kickPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	aco	net/minecraft/server/commands/KillCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	kill
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	acp	net/minecraft/server/commands/ListPlayersCommand
	m	(Lafp;)Lrm;	a	lambda$listPlayersWithUuids$2
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)I	a	listPlayers
		p	0		source
	m	(Ldr;Ljava/util/function/Function;)I	a	format
		p	0		source
		p	1		nameProvider
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
	m	(Ldr;)I	b	listPlayersWithUuids
		p	0		source
c	acq	net/minecraft/server/commands/LocateCommand
	m	(IIII)F	a	dist
		p	0		x1
		p	1		y1
		p	2		x2
		p	3		y2
	m	(Laai;)Ljava/lang/String;	a	lambda$showLocateResult$14
		p	0		key
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
	m	(Lcom/mojang/datafixers/util/Pair;Lakh;)Ljava/lang/String;	a	lambda$showLocateResult$15
		p	1		key
	m	(Ldr;)Z	a	lambda$register$6
		p	0		source
	m	(Ldr;Ler$c;)I	a	locateStructure
		p	0		source
		p	1		predicate
	m	(Ldr;Ler$c;Lgt;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;Z)I	a	showLocateResult
		p	0		source
		p	1		structure
		p	2		currentPos
		p	3		structurePosAndEntry
		p	4		successMessage
	m	(Ler$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$locateStructure$12
	m	(Ler$c;Lhm;)Ljava/util/Optional;	a	getHolders
		p	0		predicate
		p	1		structureRegistry
	m	(Lgt;Ljava/lang/String;Lrv;)Lrv;	a	lambda$showLocateResult$16
	m	(Lhc;)Lhe$a;	a	lambda$getHolders$10
		p	0		entry
	m	(Lhm;Laai;)Ljava/util/Optional;	a	lambda$getHolders$11
		p	1		key
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		id
	m	(Laai;)Ljava/lang/String;	b	lambda$showLocateResult$13
		p	0		key
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
	m	(Ldr;Ler$c;)I	b	locateBiome
		p	0		source
		p	1		predicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$4
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
	m	(Ldr;Ler$c;)I	c	locatePoi
		p	0		source
		p	1		predicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$3
		p	0		id
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$2
		p	0		id
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$1
		p	0		id
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$0
		p	0		id
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_STRUCTURE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_STRUCTURE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_BIOME_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_BIOME_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_POI_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_POI_INVALID
	f	I	g	MAX_STRUCTURE_SEARCH_RADIUS
	f	I	h	MAX_BIOME_SEARCH_RADIUS
	f	I	i	BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	f	I	j	BIOME_SAMPLE_RESOLUTION_VERTICAL
	f	I	k	POI_SEARCH_RADIUS
c	acr	net/minecraft/server/commands/LootCommand
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$13
		p	1		context
	m	(Lafo;Ldvt;Lcaa;)V	a	lambda$dropInWorld$22
		p	2		stack
	m	(Lazf;Lcaa;)Z	a	distributeToContainer
		p	0		inventory
		p	1		stack
	m	(Lbaq;Ljava/util/List;IILjava/util/List;)V	a	setSlots
		p	0		entity
		p	1		stacks
		p	2		slot
		p	3		stackCount
		p	4		addedStacks
	m	(Lcaa;Lcaa;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lacr$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargets
		p	0		rootArgument
		p	1		sourceConstructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Laaj;Lacr$b;)I	a	dropChestLoot
		p	0		context
		p	1		lootTable
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Laaj;Ldrg;Lacr$b;)I	a	drop
		p	0		context
		p	1		lootTable
		p	2		lootContext
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Laaj;Lgt;Lcaa;Lacr$b;)I	a	dropFishingLoot
		p	0		context
		p	1		lootTable
		p	2		pos
		p	3		stack
		p	4		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbaq;Lacr$b;)I	a	dropKillLoot
		p	0		context
		p	1		entity
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lgt;Lcaa;Lacr$b;)I	a	dropBlockLoot
		p	0		context
		p	1		pos
		p	2		stack
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	a	lambda$addTargets$21
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Ldl;Lcom/mojang/brigadier/builder/ArgumentBuilder;Lacr$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$14
		p	1		builder
		p	2		constructor
	m	(Ldr;)Z	a	lambda$register$3
		p	0		source
	m	(Ldr;Laaj;Ljava/util/List;)V	a	lambda$dropKillLoot$24
		p	2		stacks
	m	(Ldr;Lbav;)Lcaa;	a	getSourceHandItem
		p	0		source
		p	1		slot
	m	(Ldr;Lcur;Ljava/util/List;)V	a	lambda$dropBlockLoot$23
		p	2		stacks
	m	(Ldr;Ldvt;Ljava/util/List;Lacr$a;)I	a	dropInWorld
		p	0		source
		p	1		pos
		p	2		stacks
		p	3		messageSender
	m	(Ldr;Lgt;)Lazf;	a	getContainer
		p	0		source
		p	1		pos
	m	(Ldr;Lgt;IILjava/util/List;Lacr$a;)I	a	blockReplace
		p	0		source
		p	1		targetPos
		p	2		slot
		p	3		stackCount
		p	4		stacks
		p	5		messageSender
	m	(Ldr;Lgt;Ljava/util/List;Lacr$a;)I	a	blockDistribute
		p	0		source
		p	1		targetPos
		p	2		stacks
		p	3		messageSender
	m	(Ldr;Ljava/util/List;)V	a	callback
		p	0		source
		p	1		stacks
	m	(Ldr;Ljava/util/List;Laaj;)V	a	callback
		p	0		source
		p	1		stacks
		p	2		lootTable
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		entityName
	m	(Ljava/util/Collection;IILjava/util/List;Lacr$a;)I	a	entityReplace
		p	0		targets
		p	1		slot
		p	2		stackCount
		p	3		stacks
		p	4		messageSender
	m	(Ljava/util/Collection;Ljava/util/List;Lacr$a;)I	a	playerGive
		p	0		players
		p	1		stacks
		p	2		messageSender
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	b	lambda$addTargets$20
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Ldr;Ljava/util/List;)V	b	lambda$drop$25
		p	1		stacks
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	c	lambda$addTargets$19
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	d	lambda$addTargets$18
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$9
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	e	lambda$addTargets$17
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	f	lambda$addTargets$16
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	g	lambda$addTargets$15
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$6
		p	1		context
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$5
		p	1		context
	m	(Lacr$b;Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$4
		p	1		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_LOOT_TABLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_HELD_ITEMS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NO_LOOT_TABLE
c	acr$a	net/minecraft/server/commands/LootCommand$Callback
	m	(Ljava/util/List;)V	accept	accept
		p	1		items
c	acr$b	net/minecraft/server/commands/LootCommand$DropConsumer
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lacr$a;)I	accept	accept
		p	1		context
		p	2		items
		p	3		messageSender
c	acr$c	net/minecraft/server/commands/LootCommand$TailProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lacr$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	construct	construct
		p	1		builder
		p	2		target
c	acs	net/minecraft/server/commands/MsgCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
		p	0		context
	m	(Ldr;Ljava/util/Collection;Lef$a;)I	a	sendMessage
		p	0		source
		p	1		targets
		p	2		signedMessage
	m	(Ljava/util/Collection;Ldr;Lagd;)V	a	lambda$sendMessage$1
		p	2		decoratedMessage
c	act	net/minecraft/server/commands/OpCommand
	m	(Lafp;)Ljava/lang/String;	a	lambda$register$2
		p	0		player
	m	(Laih;Lafp;)Z	a	lambda$register$1
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$3
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	opPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OP
c	acu	net/minecraft/server/commands/PardonCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	pardonPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_BANNED
c	acv	net/minecraft/server/commands/PardonIpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/lang/String;)I	a	unban
		p	0		source
		p	1		target
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_BANNED
c	acw	net/minecraft/server/commands/ParticleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lim;Ldvt;Ldvt;FIZLjava/util/Collection;)I	a	sendParticles
		p	0		source
		p	1		parameters
		p	2		pos
		p	3		delta
		p	4		speed
		p	5		count
		p	6		force
		p	7		viewers
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	acx	net/minecraft/server/commands/PerfCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)I	a	startProfilingDedicatedServer
		p	0		source
	m	(Ldr;Lawb;)V	a	whenStopped
		p	0		source
		p	1		result
	m	(Ldr;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V	a	saveResults
		p	0		source
		p	1		tempProfilingDirectory
		p	2		server
	m	(Ldr;Lnet/minecraft/server/MinecraftServer;Ljava/nio/file/Path;)V	a	lambda$startProfilingDedicatedServer$4
		p	2		dumpDirectory
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ldr;)I	b	stopProfilingDedicatedServer
		p	0		source
	m	(Ldr;Lawb;)V	b	lambda$startProfilingDedicatedServer$3
		p	1		result
	m	(Ldr;)Z	c	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	acy	net/minecraft/server/commands/PlaceCommand
	m	(Laai;)Ljava/lang/String;	a	lambda$placeStructure$18
		p	0		key
	m	(Lafo;Lcfh;)Z	a	lambda$checkLoaded$19
		p	1		pos
	m	(Lafo;Lcfh;Lcfh;)V	a	checkLoaded
		p	0		world
		p	1		pos1
		p	2		pos2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Ldkm;Lafo;Lcwn;Lcfh;)V	a	lambda$placeStructure$17
		p	3		chunkPos
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Laaj;Lgt;Lcoz;Lcnk;FI)I	a	placeTemplate
		p	0		source
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		mirror
		p	5		integrity
		p	6		seed
	m	(Ldr;Lhc;Laaj;ILgt;)I	a	placeJigsaw
		p	0		source
		p	1		structurePool
		p	2		id
		p	3		maxDepth
		p	4		pos
	m	(Ldr;Lhc;Lgt;)I	a	placeFeature
		p	0		source
		p	1		feature
		p	2		pos
	m	(Lhc;)Z	a	lambda$placeStructure$16
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Laai;)Ljava/lang/String;	b	lambda$placeFeature$15
		p	0		key
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$13
		p	0		context
	m	(Ldr;Lhc;Lgt;)I	b	placeStructure
		p	0		source
		p	1		structure
		p	2		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FEATURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_JIGSAW_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_STRUCTURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_TEMPLATE_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEMPLATE_FAILED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_TEMPLATES
c	acz	net/minecraft/server/commands/PlaySoundCommand
	m	(Lajf;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	source
		p	0		category
	m	(Lajf;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$source$5
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Laaj;Lajf;Ldvt;FFF)I	a	playSound
		p	0		source
		p	1		targets
		p	2		sound
		p	3		category
		p	4		pos
		p	5		volume
		p	6		pitch
		p	7		minVolume
	m	(Lajf;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$source$4
		p	1		context
	m	(Lajf;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$source$3
		p	1		context
	m	(Lajf;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$source$2
		p	1		context
	m	(Lajf;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$source$1
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TOO_FAR
c	ada	net/minecraft/server/commands/PublishCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;I)I	a	publish
		p	0		source
		p	1		port
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_PUBLISHED
c	adb	net/minecraft/server/commands/RaidCommand
	m	(Lafp;)Lbum;	a	getRaid
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Ldr;)I	a	glow
		p	0		source
	m	(Ldr;I)I	a	setBadOmenLevel
		p	0		source
		p	1		level
	m	(Ldr;Lrm;)I	a	playSound
		p	0		source
		p	1		type
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Ldr;)I	b	spawnLeader
		p	0		source
	m	(Ldr;I)I	b	start
		p	0		source
		p	1		level
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Ldr;)I	c	stop
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Ldr;)I	d	check
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Ldr;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
c	adc	net/minecraft/server/commands/RecipeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ljava/util/Collection;)I	a	giveRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ldr;Ljava/util/Collection;Ljava/util/Collection;)I	b	takeRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TAKE_FAILED
c	add	net/minecraft/server/commands/ReloadCommand
	m	(Lahg;Ldqz;Ljava/util/Collection;)Ljava/util/Collection;	a	discoverNewPacks
		p	0		dataPackManager
		p	1		saveProperties
		p	2		enabledDataPacks
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$reloadPacks$0
		p	1		throwable
	m	(Ljava/util/Collection;Ldr;)V	a	reloadPacks
		p	0		dataPacks
		p	1		source
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ade	net/minecraft/server/commands/ResetChunksCommand
	m	()Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lcwm;)V	a	lambda$resetChunks$6
		p	0		chunk
	m	(Lcwq;Layf;Lafo;Lafm;Ljava/util/List;Lcom/mojang/datafixers/util/Unit;)Ljava/util/concurrent/CompletionStage;	a	lambda$resetChunks$8
		p	5		unit
	m	(Lcwq;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$7
		p	1		either
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;IZ)I	a	resetChunks
		p	0		source
		p	1		radius
		p	2		skipOldChunks
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcwm;)Ljava/util/concurrent/CompletableFuture;	b	lambda$resetChunks$5
		p	0		chunk
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lorg/slf4j/Logger;	a	LOGGER
c	adf	net/minecraft/server/commands/SaveAllCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Z)I	a	saveAll
		p	0		source
		p	1		flush
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	adg	net/minecraft/server/commands/SaveOffCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OFF
c	adh	net/minecraft/server/commands/SaveOnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ON
c	adi	net/minecraft/server/commands/SayCommand
	m	(Laih;Ldr;Lagd;)V	a	lambda$register$1
		p	2		decoratedMessage
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
c	adj	net/minecraft/server/commands/ScheduleCommand
	m	(Laaj;ZLdvl;JLdr;ILdm;)V	a	lambda$schedule$7
		p	7		function
	m	(Laaj;ZLdvl;JLdr;ILjava/util/Collection;)V	a	lambda$schedule$8
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Lcom/mojang/datafixers/util/Pair;IZ)I	a	schedule
		p	0		source
		p	1		function
		p	2		time
		p	3		replace
	m	(Ldr;Ljava/lang/String;)I	a	remove
		p	0		source
		p	1		eventName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		eventName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_TICK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_CANT_REMOVE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUGGEST_SCHEDULE
c	adk	net/minecraft/server/commands/ScoreboardCommand
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRenderTypeModify
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$17
		p	0		context
		p	1		builder
	m	(Ldr;)I	a	listTrackedPlayers
		p	0		source
	m	(Ldr;I)I	a	clearDisplaySlot
		p	0		source
		p	1		slot
	m	(Ldr;ILdwo;)I	a	setDisplaySlot
		p	0		source
		p	1		slot
		p	2		objective
	m	(Ldr;Ldwo;)I	a	removeObjective
		p	0		source
		p	1		objective
	m	(Ldr;Ldwo;Ldwu$a;)I	a	setRenderType
		p	0		source
		p	1		objective
		p	2		type
	m	(Ldr;Ldwo;Lrm;)I	a	setDisplayName
		p	0		source
		p	1		objective
		p	2		displayName
	m	(Ldr;Ljava/lang/String;)I	a	listTrackedPlayerScores
		p	0		source
		p	1		target
	m	(Ldr;Ljava/lang/String;Ldwo;)I	a	getScore
		p	0		source
		p	1		target
		p	2		objective
	m	(Ldr;Ljava/lang/String;Ldwu;Lrm;)I	a	addObjective
		p	0		source
		p	1		objective
		p	2		criteria
		p	3		displayName
	m	(Ldr;Ljava/util/Collection;)I	a	resetScores
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTriggers
		p	0		source
		p	1		targets
		p	2		builder
	m	(Ldr;Ljava/util/Collection;Ldwo;)I	a	enableTrigger
		p	0		source
		p	1		targets
		p	2		objective
	m	(Ldr;Ljava/util/Collection;Ldwo;I)I	a	setScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Ldr;Ljava/util/Collection;Ldwo;Lel$a;Ljava/util/Collection;Ldwo;)I	a	performOperation
		p	0		source
		p	1		targets
		p	2		targetObjective
		p	3		operation
		p	4		sources
		p	5		sourceObjectives
	m	(Ldwu$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createRenderTypeModify$20
		p	1		context
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		objective
		p	1		target
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$18
		p	0		context
	m	(Ldr;)I	b	listObjectives
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ldwo;)I	b	resetScore
		p	0		source
		p	1		targets
		p	2		objective
	m	(Ldr;Ljava/util/Collection;Ldwo;I)I	b	addScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$16
		p	0		context
	m	(Ldr;)Z	c	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ldwo;I)I	c	removeScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_OBJECTIVE_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DISPLAY_SLOT_ALREADY_SET
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TRIGGER_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOT_TRIGGER
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_NO_VALUE
c	adl	net/minecraft/server/commands/SeedCommand
	m	(JLrv;)Lrv;	a	lambda$register$1
		p	2		style
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
		p	0		dispatcher
		p	1		dedicated
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(ZLdr;)Z	a	lambda$register$0
		p	1		source
c	adm	net/minecraft/server/commands/SetBlockCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Lcuv;)Z	a	lambda$register$3
		p	0		pos
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lgt;Lfc;Ladm$b;Ljava/util/function/Predicate;)I	a	setBlock
		p	0		source
		p	1		pos
		p	2		block
		p	3		mode
		p	4		condition
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	adm$a	net/minecraft/server/commands/SetBlockCommand$Filter
	m	(Ldjw;Lgt;Lfc;Lafo;)Lfc;	filter	filter
		p	1		box
		p	2		pos
		p	3		block
		p	4		world
c	adm$b	net/minecraft/server/commands/SetBlockCommand$Mode
	m	()[Ladm$b;	a	$values
	f	Ladm$b;	a	REPLACE
	f	Ladm$b;	b	DESTROY
	f	[Ladm$b;	c	$VALUES
c	adn	net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;I)I	a	setIdleTimeout
		p	0		source
		p	1		minutes
c	ado	net/minecraft/server/commands/SetSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lgt;F)I	a	setSpawn
		p	0		source
		p	1		targets
		p	2		pos
		p	3		angle
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
c	adp	net/minecraft/server/commands/SetWorldSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lgt;F)I	a	setSpawn
		p	0		source
		p	1		pos
		p	2		angle
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	adq	net/minecraft/server/commands/SpectateCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Lbaq;Lafp;)I	a	spectate
		p	0		source
		p	1		entity
		p	2		player
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		playerName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SELF
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOT_SPECTATOR
c	adr	net/minecraft/server/commands/SpreadPlayersCommand
	m	(Lalu;IDDDD)[Ladr$a;	a	createInitialPositions
		p	0		random
		p	1		count
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldr;)Z	a	lambda$register$3
		p	0		source
	m	(Ldr;Ldvs;FFIZLjava/util/Collection;)I	a	spreadPlayers
		p	0		source
		p	1		center
		p	2		spreadDistance
		p	3		maxRange
		p	4		maxY
		p	5		respectTeams
		p	6		players
	m	(Ldvs;DLafo;Lalu;DDDDI[Ladr$a;Z)V	a	spreadPositions
		p	0		center
		p	1		spreadDistance
		p	3		world
		p	4		random
		p	5		minX
		p	7		minZ
		p	9		maxX
		p	11		maxZ
		p	13		maxY
		p	14		piles
		p	15		respectTeams
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		maxY
		p	1		worldBottomY
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	m	(Ljava/util/Collection;)I	a	getNumberOfTeams
		p	0		entities
	m	(Ljava/util/Collection;Lafo;[Ladr$a;IZ)D	a	setPlayerPositions
		p	0		entities
		p	1		world
		p	2		piles
		p	3		maxY
		p	4		respectTeams
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	f	I	a	MAX_ITERATION_COUNT
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	ERROR_FAILED_TO_SPREAD_TEAMS
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	c	ERROR_FAILED_TO_SPREAD_ENTITIES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INVALID_MAX_HEIGHT
c	adr$a	net/minecraft/server/commands/SpreadPlayersCommand$Position
	m	()V	a	normalize
	m	(DDDD)Z	a	clamp
		p	1		minX
		p	3		minZ
		p	5		maxX
		p	7		maxZ
	m	(Ladr$a;)D	a	dist
		p	1		other
	m	(Lalu;DDDD)V	a	randomize
		p	1		random
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Lcfg;I)I	a	getSpawnY
		p	1		blockView
		p	2		maxY
	m	()D	b	getLength
	m	(Ladr$a;)V	b	moveAway
		p	1		other
	m	(Lcfg;I)Z	b	isSafe
		p	1		world
		p	2		maxY
	f	D	a	x
	f	D	b	z
c	ads	net/minecraft/server/commands/StopCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
c	adt	net/minecraft/server/commands/StopSoundCommand
	m	(Lajf;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$4
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lajf;Laaj;)I	a	stopSound
		p	0		source
		p	1		targets
		p	2		category
		p	3		sound
	m	(Lajf;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
c	adu	net/minecraft/server/commands/SummonCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Laaj;Ldvt;Lpj;Z)I	a	spawnEntity
		p	0		source
		p	1		entity
		p	2		pos
		p	3		nbt
		p	4		initialize
	m	(Ldvt;Lbaq;)Lbaq;	a	lambda$spawnEntity$4
		p	1		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DUPLICATE_UUID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	INVALID_POSITION
c	adv	net/minecraft/server/commands/TagCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	listTags
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;Ljava/lang/String;)I	a	addTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
		p	0		entities
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ldr;Ljava/util/Collection;Ljava/lang/String;)I	b	removeTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ADD_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_REMOVE_FAILED
c	adw	net/minecraft/server/commands/TeamCommand
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	A	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$27
		p	0		context
	m	(Ldr;)I	a	listTeams
		p	0		source
	m	(Ldr;Ldwp;)I	a	emptyTeam
		p	0		source
		p	1		team
	m	(Ldr;Ldwp;Ldwt$a;)I	a	setCollision
		p	0		source
		p	1		team
		p	2		collisionRule
	m	(Ldr;Ldwp;Ldwt$b;)I	a	setNametagVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Ldr;Ldwp;Ljava/util/Collection;)I	a	joinTeam
		p	0		source
		p	1		team
		p	2		members
	m	(Ldr;Ldwp;Lp;)I	a	setColor
		p	0		source
		p	1		team
		p	2		color
	m	(Ldr;Ldwp;Lrm;)I	a	setDisplayName
		p	0		source
		p	1		team
		p	2		displayName
	m	(Ldr;Ldwp;Z)I	a	setFriendlySight
		p	0		source
		p	1		team
		p	2		allowed
	m	(Ldr;Ljava/lang/String;)I	a	createTeam
		p	0		source
		p	1		team
	m	(Ldr;Ljava/lang/String;Lrm;)I	a	createTeam
		p	0		source
		p	1		team
		p	2		displayName
	m	(Ldr;Ljava/util/Collection;)I	a	leaveTeam
		p	0		source
		p	1		members
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$26
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Ldr;Ldwp;)I	b	deleteTeam
		p	0		source
		p	1		team
	m	(Ldr;Ldwp;Ldwt$b;)I	b	setDeathMessageVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Ldr;Ldwp;Lrm;)I	b	setPrefix
		p	0		source
		p	1		team
		p	2		prefix
	m	(Ldr;Ldwp;Z)I	b	setFriendlyFire
		p	0		source
		p	1		team
		p	2		allowed
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$25
		p	0		context
	m	(Ldr;Ldwp;)I	c	listMembers
		p	0		source
		p	1		team
	m	(Ldr;Ldwp;Lrm;)I	c	setSuffix
		p	0		source
		p	1		team
		p	2		suffix
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$24
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$23
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TEAM_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TEAM_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TEAM_ALREADY_NAME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TEAM_ALREADY_COLOR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_TEAM_COLLISION_UNCHANGED
c	adx	net/minecraft/server/commands/TeamMsgCommand
	m	(Lbaq;Ldwp;Lafp;)Z	a	lambda$sendMessage$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
		p	0		context
	m	(Ldr;Lef$a;)I	a	sendMessage
		p	0		source
		p	1		signedMessage
	m	(Ljava/util/List;Lbaq;Lrm;Ldr;Lri;Lagd;)V	a	lambda$sendMessage$2
		p	5		decoratedMessage
	f	Lrv;	a	SUGGEST_STYLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ON_TEAM
c	ady	net/minecraft/server/commands/TeleportCommand
	m	(D)Ljava/lang/String;	a	formatDouble
		p	0		d
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldr;)Z	a	lambda$register$9
		p	0		source
	m	(Ldr;Lbaq;Lafo;DDDLjava/util/Set;FFLady$a;)V	a	performTeleport
		p	0		source
		p	1		target
		p	2		world
		p	3		x
		p	5		y
		p	7		z
		p	9		movementFlags
		p	10		yaw
		p	11		pitch
		p	12		facingLocation
	m	(Ldr;Ljava/util/Collection;Lafo;Lfj;Lfj;Lady$a;)I	a	teleportToPos
		p	0		source
		p	1		targets
		p	2		world
		p	3		location
		p	4		rotation
		p	5		facingLocation
	m	(Ldr;Ljava/util/Collection;Lbaq;)I	a	teleportToEntity
		p	0		source
		p	1		targets
		p	2		destination
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_POSITION
c	ady$a	net/minecraft/server/commands/TeleportCommand$LookAt
	m	(Lbaq;Lea$a;)V	<init>	<init>
		p	1		target
		p	2		targetAnchor
	m	(Ldvt;)V	<init>	<init>
		p	1		targetPos
	m	(Ldr;Lbaq;)V	a	perform
		p	1		source
		p	2		entity
	f	Ldvt;	a	position
	f	Lbaq;	b	entity
	f	Lea$a;	c	anchor
c	adz	net/minecraft/server/commands/TellRawCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
c	aea	net/minecraft/server/commands/TimeCommand
	m	(Lafo;)I	a	getDayTime
		p	0		world
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;I)I	a	setTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Ldr;I)I	b	addTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldr;I)I	c	queryTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
		p	0		context
c	aeb	net/minecraft/server/commands/TitleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	clearTitle
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;III)I	a	setTimes
		p	0		source
		p	1		targets
		p	2		fadeIn
		p	3		stay
		p	4		fadeOut
	m	(Ldr;Ljava/util/Collection;Lrm;Ljava/lang/String;Ljava/util/function/Function;)I	a	showTitle
		p	0		source
		p	1		targets
		p	2		title
		p	3		titleType
		p	4		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldr;Ljava/util/Collection;)I	b	resetTitle
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
c	aec	net/minecraft/server/commands/TriggerCommand
	m	(Lafp;Ldwo;)Ldwq;	a	getScore
		p	0		player
		p	1		objective
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
		p	0		context
		p	1		builder
	m	(Ldr;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
		p	0		source
		p	1		builder
	m	(Ldr;Ldwq;)I	a	simpleTrigger
		p	0		source
		p	1		score
	m	(Ldr;Ldwq;I)I	a	addValue
		p	0		source
		p	1		score
		p	2		value
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldr;Ldwq;I)I	b	setValue
		p	0		source
		p	1		score
		p	2		value
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PRIMED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OBJECTIVE
c	aed	net/minecraft/server/commands/WardenSpawnTrackerCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	resetTracker
		p	0		source
		p	1		players
	m	(Ldr;Ljava/util/Collection;I)I	a	setWarningLevel
		p	0		source
		p	1		players
		p	2		warningCount
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	aee	net/minecraft/server/commands/WeatherCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;I)I	a	setClear
		p	0		source
		p	1		duration
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldr;I)I	b	setRain
		p	0		source
		p	1		duration
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Ldr;I)I	c	setThunder
		p	0		source
		p	1		duration
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	I	a	DEFAULT_TIME
c	aef	net/minecraft/server/commands/WhitelistCommand
	m	(Lafp;)Ljava/lang/String;	a	lambda$register$5
		p	0		player
	m	(Laih;Lafp;)Z	a	lambda$register$4
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$8
		p	0		context
		p	1		builder
	m	(Ldr;)I	a	reload
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	addPlayers
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$6
		p	0		context
		p	1		builder
	m	(Ldr;)I	b	enableWhitelist
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	b	removePlayers
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldr;)I	c	disableWhitelist
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Ldr;)I	d	showList
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Ldr;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_WHITELISTED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NOT_WHITELISTED
c	aeg	net/minecraft/server/commands/WorldBorderCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Ldr;)I	a	getSize
		p	0		source
	m	(Ldr;DJ)I	a	setSize
		p	0		source
		p	1		distance
		p	3		time
	m	(Ldr;F)I	a	setDamageBuffer
		p	0		source
		p	1		distance
	m	(Ldr;I)I	a	setWarningTime
		p	0		source
		p	1		time
	m	(Ldr;Ldvs;)I	a	setCenter
		p	0		source
		p	1		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Ldr;F)I	b	setDamageAmount
		p	0		source
		p	1		damagePerBlock
	m	(Ldr;I)I	b	setWarningDistance
		p	0		source
		p	1		distance
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_CENTER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SAME_SIZE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TOO_FAR_OUT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SAME_WARNING_TIME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SAME_WARNING_DISTANCE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_SAME_DAMAGE_BUFFER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_SAME_DAMAGE_AMOUNT
c	aeh	net/minecraft/server/commands/data/BlockDataAccessor
	m	(Lcsl;Lgt;)V	<init>	<init>
		p	1		blockEntity
		p	2		pos
	m	()Lpj;	a	getData
	m	(Leh$g;DI)Lrm;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Laej$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lpj;)V	a	setData
		p	1		nbt
	m	(Lqc;)Lrm;	a	getPrintSuccess
		p	1		element
	m	()Lrm;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_A_BLOCK_ENTITY
	f	Lcsl;	c	entity
	f	Lgt;	d	pos
c	aeh$1	net/minecraft/server/commands/data/BlockDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laei;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$argPrefix
c	aei	net/minecraft/server/commands/data/DataAccessor
	m	()Lpj;	a	getData
	m	(Leh$g;DI)Lrm;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Lpj;)V	a	setData
		p	1		nbt
	m	(Lqc;)Lrm;	a	getPrintSuccess
		p	1		element
	m	()Lrm;	b	getModifiedSuccess
c	aej	net/minecraft/server/commands/data/DataCommands
	m	(ILpj;Leh$g;Ljava/util/List;)I	a	insertAtIndex
		p	0		integer
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Laej$c;Laej$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$27
		p	1		modifier
	m	(Laej$c;Laej$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$26
		p	2		context
	m	(Laej$c;Laej$c;Laej$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$25
		p	2		modifier
	m	(Laej$c;Laej$c;Laej$a;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$24
		p	3		builder
	m	(Laej$c;Laej$c;Laej$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$23
		p	3		context
	m	(Laej$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$15
		p	1		builder
	m	(Laej$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Laej$b;)V	a	lambda$register$21
		p	0		builder
		p	1		modifier
	m	(Lcom/mojang/brigadier/context/CommandContext;Laej$c;Laej$a;Ljava/util/List;)I	a	manipulateData
		p	0		context
		p	1		objectType
		p	2		modifier
		p	3		elements
	m	(Lcom/mojang/brigadier/context/CommandContext;Lpj;Leh$g;Ljava/util/List;)I	a	lambda$register$20
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ldr;)Z	a	lambda$register$7
		p	0		source
	m	(Ldr;Laei;)I	a	getData
		p	0		source
		p	1		object
	m	(Ldr;Laei;Leh$g;)I	a	removeData
		p	0		source
		p	1		object
		p	2		path
	m	(Ldr;Laei;Leh$g;D)I	a	getNumeric
		p	0		source
		p	1		object
		p	2		path
		p	3		scale
	m	(Ldr;Laei;Lpj;)I	a	mergeData
		p	0		source
		p	1		object
		p	2		nbt
	m	(Leh$g;Laei;)Lqc;	a	getSingleTag
		p	0		path
		p	1		object
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		index
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	decorateModification
		p	0		subArgumentAdder
	m	(Ljava/util/function/BiConsumer;Laej$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$28
		p	2		builder
	m	(Ljava/util/function/Function;)Laej$c;	a	lambda$static$6
		p	0		factory
	m	(Laej$c;Laej$c;Laej$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$decorateModification$22
		p	3		context
	m	(Laej$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$register$13
		p	1		builder
	m	(Laej$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lpj;Leh$g;Ljava/util/List;)I	b	lambda$register$19
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ldr;Laei;Leh$g;)I	b	getData
		p	0		source
		p	1		object
		p	2		path
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		nbt
	m	(Ljava/util/function/Function;)Laej$c;	b	lambda$static$5
		p	0		factory
	m	(Laej$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	c	lambda$register$9
		p	1		builder
	m	(Laej$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lpj;Leh$g;Ljava/util/List;)I	c	lambda$register$18
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		nbt
	m	(Laej$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lpj;Leh$g;Ljava/util/List;)I	d	lambda$register$17
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
		p	0		path
	m	(Laej$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lpj;Leh$g;Ljava/util/List;)I	e	lambda$register$16
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
		p	0		path
	f	Ljava/util/List;	a	ALL_PROVIDERS
	f	Ljava/util/List;	b	TARGET_PROVIDERS
	f	Ljava/util/List;	c	SOURCE_PROVIDERS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MERGE_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_GET_NOT_NUMBER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_GET_NON_EXISTENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_MULTIPLE_TAGS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_EXPECTED_LIST
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	ERROR_EXPECTED_OBJECT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_INVALID_INDEX
c	aej$a	net/minecraft/server/commands/data/DataCommands$DataManipulator
	m	(Lcom/mojang/brigadier/context/CommandContext;Lpj;Leh$g;Ljava/util/List;)I	modify	modify
		p	1		context
		p	2		sourceNbt
		p	3		path
		p	4		elements
c	aej$b	net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
	m	(Laej$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	create	create
		p	1		modifier
c	aej$c	net/minecraft/server/commands/data/DataCommands$DataProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laei;	a	access
		p	1		context
c	aek	net/minecraft/server/commands/data/EntityDataAccessor
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	()Lpj;	a	getData
	m	(Leh$g;DI)Lrm;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Laej$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lpj;)V	a	setData
		p	1		nbt
	m	(Lqc;)Lrm;	a	getPrintSuccess
		p	1		element
	m	()Lrm;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PLAYERS
	f	Lbaq;	c	entity
c	aek$1	net/minecraft/server/commands/data/EntityDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laei;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	ael	net/minecraft/server/commands/data/StorageDataAccessor
	m	(Ldqm;Laaj;)V	<init>	<init>
		p	1		storage
		p	2		id
	m	()Lpj;	a	getData
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldqm;	a	getGlobalTags
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Leh$g;DI)Lrm;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Laej$c;	a	lambda$static$1
		p	0		argumentName
	m	(Lpj;)V	a	setData
		p	1		nbt
	m	(Lqc;)Lrm;	a	getPrintSuccess
		p	1		element
	m	()Lrm;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_STORAGE
	f	Ldqm;	c	storage
	f	Laaj;	d	id
c	ael$1	net/minecraft/server/commands/data/StorageDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laei;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	aem	net/minecraft/server/commands/data/package-info
c	aen	net/minecraft/server/commands/package-info
c	aeo	net/minecraft/server/dedicated/DedicatedPlayerList
	m	(Laep;Lhn$a;Ldqw;)V	<init>	<init>
		p	1		server
		p	2		tracker
		p	3		saveHandler
	m	()V	A	loadOps
	m	()V	B	saveOps
	m	()V	C	loadWhiteList
	m	()V	D	saveWhiteList
	m	()V	a	reloadWhiteList
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	()Laep;	b	getServer
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()V	w	saveIpBanList
	m	()V	x	saveUserBanList
	m	()V	y	loadIpBanList
	m	()V	z	loadUserBanList
	f	Lorg/slf4j/Logger;	a	LOGGER
c	aep	net/minecraft/server/dedicated/DedicatedServer
	m	(Ljava/lang/Thread;Ldqt$c;Lahg;Labc;Laer;Lcom/mojang/datafixers/DataFixer;Laaz;Lafy;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		propertiesLoader
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()Z	A	isNetherEnabled
	m	()Z	G_	shouldInformAdmins
	m	()Z	P	isSpawningMonsters
	m	()Ljava/util/Optional;	R	getServerResourcePack
	m	()Z	V	isSpawningAnimals
	m	()Z	W	areNpcsEnabled
	m	()Laeq;	a	getProperties
	m	(ILaeq;)Laeq;	a	lambda$setPlayerIdleTimeout$2
		p	2		serverPropertiesHandler
	m	(Lac;)Lac;	a	fillServerSystemReport
		p	1		details
	m	(Lafo;Lgt;Lbtf;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Lafp;)Lagm;	a	createTextFilterForPlayer
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	(Ljava/lang/String;Ldr;)V	a	handleConsoleInput
		p	1		command
		p	2		commandSource
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(ZLaeq;)Laeq;	a	lambda$storeUsingWhiteList$4
		p	2		serverPropertiesHandler
	m	()Z	aU	forceSynchronousWrites
	m	()Lcfx;	aY	getForcedGameType
	m	()Z	aa	previewsChat
	m	()Laih;	ac	getPlayerList
	m	()Z	af	hasGui
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()I	as	getAbsoluteMaxWorldSize
	m	()I	av	getCompressionThreshold
	m	()Z	aw	enforceSecureProfile
	m	()Ljava/lang/String;	b	getServerIp
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
		p	1		shouldKeepTicking
	m	()I	be	getMaxChainedNeighborUpdates
	m	()V	bg	handleConsoleInputs
	m	()Laeo;	bh	getPlayerList
	m	()V	bi	showGui
	m	()Z	bj	convertOldUsers
	m	()J	bk	getMaxTickLength
	m	()V	bt	waitForRetry
	m	()Ljava/lang/String;	bu	lambda$fillServerSystemReport$1
	m	()Ljava/lang/String;	bv	lambda$fillServerSystemReport$0
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	()I	d	getServerPort
	m	()Z	e	initServer
	m	(Ljava/lang/String;)V	e	lambda$runCommand$3
	m	()V	f	onServerExit
	m	()Z	g	isHardcore
	m	()I	h	getOperatorUserPermissionLevel
	m	()I	i	getFunctionCompilationLevel
	m	(Z)V	i	storeUsingWhiteList
		p	1		useWhitelist
	m	()Z	j	shouldRconBroadcast
	m	()Z	k	isDedicatedServer
	m	()I	l	getRateLimitPacketsPerSecond
	m	()Z	m	isEpollEnabled
	m	()Z	n	isCommandBlockEnabled
	m	()Z	o	isPublished
	m	()Ljava/lang/String;	p	getServerName
	m	()V	q	forceDifficulty
	m	()Ljava/lang/String;	r	getLevelIdName
	m	()V	s	stopServer
	m	()Ljava/lang/String;	t	getPluginNames
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	I	o	CONVERSION_RETRY_DELAY_MS
	f	I	p	CONVERSION_RETRIES
	f	Ljava/util/List;	q	consoleInput
	f	Laix;	r	queryThreadGs4
	f	Laiu;	s	rconConsoleSource
	f	Laiz;	t	rconThread
	f	Laer;	u	settings
	f	Laev;	v	gui
	f	Lagn;	w	textFilterClient
c	aep$1	net/minecraft/server/dedicated/DedicatedServer$1
	f	Laep;	a	this$0
c	aeq	net/minecraft/server/dedicated/DedicatedServerProperties
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	(Lhn;)Ldap;	a	getWorldGenSettings
		p	1		dynamicRegistryManager
	m	(Lhn;Ljava/util/Properties;)Laeq;	a	reload
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$new$1
		p	0		percentage
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional;	a	getServerPackInfo
		p	0		url
		p	1		sha1
		p	2		hash
		p	3		required
		p	4		prompt
	m	(Ljava/nio/file/Path;)Laeq;	a	fromFile
		p	0		path
	m	(Lhn;Ljava/util/Properties;)Laet;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$new$0
		p	0		maxWorldSize
	m	(Ljava/lang/String;)Lrm;	c	parseResourcePackPrompt
		p	0		prompt
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$new$3
		p	0		type
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	e	lambda$new$2
		p	0		generatorSettings
	f	I	A	opPermissionLevel
	f	I	B	functionPermissionLevel
	f	J	C	maxTickTime
	f	I	D	maxChainedNeighborUpdates
	f	I	E	rateLimitPacketsPerSecond
	f	I	F	viewDistance
	f	I	G	simulationDistance
	f	I	H	maxPlayers
	f	I	I	networkCompressionThreshold
	f	Z	J	broadcastRconToOps
	f	Z	K	broadcastConsoleToOps
	f	I	L	maxWorldSize
	f	Z	M	syncChunkWrites
	f	Z	N	enableJmxMonitoring
	f	Z	O	enableStatus
	f	Z	P	hideOnlinePlayers
	f	I	Q	entityBroadcastRangePercentage
	f	Ljava/lang/String;	R	textFilteringConfig
	f	Ljava/util/Optional;	S	serverResourcePackInfo
	f	Z	T	previewsChat
	f	Laet$a;	U	playerIdleTimeout
	f	Laet$a;	V	whiteList
	f	Z	W	enforceSecureProfile
	f	Lorg/slf4j/Logger;	Y	LOGGER
	f	Ljava/util/regex/Pattern;	Z	SHA1
	f	Z	a	onlineMode
	f	Laeq$a;	aa	worldGenProperties
	f	Ldap;	ab	worldGenSettings
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	spawnAnimals
	f	Z	e	spawnNpcs
	f	Z	f	pvp
	f	Z	g	allowFlight
	f	Ljava/lang/String;	h	motd
	f	Z	i	forceGameMode
	f	Z	j	enforceWhitelist
	f	Lazj;	k	difficulty
	f	Lcfx;	l	gamemode
	f	Ljava/lang/String;	m	levelName
	f	I	n	serverPort
	f	Ljava/lang/Boolean;	o	announcePlayerAchievements
	f	Z	p	enableQuery
	f	I	q	queryPort
	f	Z	r	enableRcon
	f	I	s	rconPort
	f	Ljava/lang/String;	t	rconPassword
	f	Z	u	hardcore
	f	Z	v	allowNether
	f	Z	w	spawnMonsters
	f	Z	x	useNativeTransport
	f	Z	y	enableCommandBlock
	f	I	z	spawnProtection
c	aeq$a	net/minecraft/server/dedicated/DedicatedServerProperties$WorldGenProperties
	m	()Ljava/lang/String;	a	levelSeed
	m	(Laai;)Ljava/lang/String;	a	lambda$create$4
		p	0		key
	m	(Laaj;)Laai;	a	lambda$create$2
		p	0		levelTypeId
	m	(Lhc;)Lhc;	a	lambda$create$5
	m	(Lhm;)Ljava/util/Optional;	a	lambda$create$0
	m	(Lhn;)Ldap;	a	create
		p	1		dynamicRegistryManager
	m	()Lcom/google/gson/JsonObject;	b	generatorSettings
	m	()Z	c	generateStructures
	m	()Ljava/lang/String;	d	levelType
	m	()Ljava/util/Optional;	e	lambda$create$3
	m	()Ljava/lang/IllegalStateException;	f	lambda$create$1
	f	Ljava/lang/String;	a	levelSeed
	f	Lcom/google/gson/JsonObject;	b	generatorSettings
	f	Z	c	generateStructures
	f	Ljava/lang/String;	d	levelType
	f	Ljava/util/Map;	e	LEGACY_PRESET_NAMES
c	aer	net/minecraft/server/dedicated/DedicatedServerSettings
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	()Laeq;	a	getProperties
	m	(Ljava/util/function/UnaryOperator;)Laer;	a	update
		p	1		applier
	m	()V	b	forceSave
	f	Ljava/nio/file/Path;	a	source
	f	Laeq;	b	properties
c	aes	net/minecraft/server/dedicated/ServerWatchdog
	m	(Laep;)V	<init>	<init>
		p	1		server
	m	()V	a	exit
	m	(Lafo;)Ljava/lang/String;	a	lambda$run$1
	m	()Ljava/lang/String;	b	lambda$run$2
	m	()Ljava/lang/String;	c	lambda$run$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	MAX_SHUTDOWN_TIME
	f	I	c	SHUTDOWN_STATUS
	f	Laep;	d	server
	f	J	e	maxTickTime
c	aes$1	net/minecraft/server/dedicated/ServerWatchdog$1
	f	Laes;	a	this$0
c	aet	net/minecraft/server/dedicated/Settings
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	()Ljava/util/Properties;	a	cloneProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getLegacyString
		p	1		key
	m	(Ljava/lang/String;I)I	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;J)J	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getLegacy
		p	1		key
		p	2		stringifier
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		parsedTransformer
		p	4		stringifier
		p	5		fallback
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	get
		p	1		key
		p	2		transformer
		p	3		fallback
	m	(Ljava/lang/String;Z)Z	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberDeserializer
		p	0		parser
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number;	a	lambda$wrapNumberDeserializer$0
		p	1		string
	m	(Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$get$2
		p	2		value
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	dispatchNumberOrString
		p	0		intParser
		p	1		fallbackParser
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$dispatchNumberOrString$1
		p	2		string
	m	(Lhn;Ljava/util/Properties;)Laet;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getLegacyBoolean
		p	1		key
	m	(Ljava/lang/String;I)Laet$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Laet$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Laet$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Z)Laet$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	loadFromFile
		p	0		path
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringRaw
		p	1		key
	m	(Ljava/nio/file/Path;)V	c	store
		p	1		path
	f	Ljava/util/Properties;	X	properties
	f	Lorg/slf4j/Logger;	a	LOGGER
c	aet$a	net/minecraft/server/dedicated/Settings$MutableValue
	m	(Laet;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V	<init>	<init>
		p	2		key
		p	3		value
		p	4		stringifier
	m	(Lhn;Ljava/lang/Object;)Laet;	a	update
		p	1		registryManager
		p	2		value
	f	Laet;	a	this$0
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	serializer
c	aeu	net/minecraft/server/dedicated/package-info
c	aev	net/minecraft/server/gui/MinecraftServerGui
	m	(Laep;)V	<init>	<init>
		p	1		server
	m	()V	a	start
	m	(Laep;)Laev;	a	showFrameFor
		p	0		server
	m	(Ljava/lang/Runnable;)V	a	addFinalizer
		p	1		task
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V	a	lambda$buildChatPanel$1
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	print
		p	1		textArea
		p	2		scrollPane
		p	3		message
	m	(Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V	a	lambda$buildChatPanel$0
		p	2		event
	m	()V	b	close
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	b	lambda$print$2
	m	()Ljavax/swing/JComponent;	c	buildInfoPanel
	m	()Ljavax/swing/JComponent;	d	buildPlayerPanel
	m	()Ljavax/swing/JComponent;	e	buildChatPanel
	m	()V	f	runFinalizers
	f	Ljava/awt/Font;	a	MONOSPACED
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TITLE
	f	Ljava/lang/String;	d	SHUTDOWN_TITLE
	f	Laep;	e	server
	f	Ljava/lang/Thread;	f	logAppenderThread
	f	Ljava/util/Collection;	g	finalizers
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	h	isClosing
c	aev$1	net/minecraft/server/gui/MinecraftServerGui$1
	f	Laev;	a	val$gui
	f	Ljavax/swing/JFrame;	b	val$frame
	f	Laep;	c	val$server
c	aev$2	net/minecraft/server/gui/MinecraftServerGui$2
	f	Laev;	a	this$0
c	aew	net/minecraft/server/gui/PlayerListComponent
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	tick
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tickCount
c	aex	net/minecraft/server/gui/StatsComponent
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	close
	m	(Ljava/awt/event/ActionEvent;)V	a	lambda$new$1
		p	1		event
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	([J)D	a	getAverage
		p	1		values
	m	()V	b	tick
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	[I	b	values
	f	I	c	vp
	f	[Ljava/lang/String;	d	msgs
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
c	aey	net/minecraft/server/gui/package-info
c	aez	net/minecraft/server/level/BlockDestructionProgress
	m	(ILgt;)V	<init>	<init>
		p	1		breakingEntityId
		p	2		pos
	m	()I	a	getId
	m	(I)V	a	setProgress
		p	1		stage
	m	(Laez;)I	a	compareTo
	m	()Lgt;	b	getPos
	m	(I)V	b	updateTick
		p	1		lastUpdateTick
	m	()I	c	getProgress
	m	()I	d	getUpdatedRenderTick
	f	I	a	id
	f	Lgt;	b	pos
	f	I	c	progress
	f	I	d	updatedRenderTick
c	afa	net/minecraft/server/level/ChunkHolder
	m	(Lcfh;ILcgc;Ldop;Lafa$d;Lafa$e;)V	<init>	<init>
		p	1		pos
		p	2		level
		p	3		world
		p	4		lightingProvider
		p	5		levelUpdateListener
		p	6		playersWatchingChunkProvider
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingChunkFuture
	m	(I)V	a	setTicketLevel
		p	1		level
	m	(Lafb;Lafa$c;)V	a	demoteFullChunk
	m	(Lafb;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lafa$c;)V	a	scheduleFullChunkPromotion
	m	(Lafb;Ljava/util/concurrent/Executor;)V	a	updateFutures
		p	1		chunkStorage
	m	(Lcga;Lgt;)V	a	broadcastBlockEntity
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lcur;)V	a	broadcastBlockEntityIfNeeded
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgj;I)V	a	sectionLightChanged
		p	1		lightType
		p	2		y
	m	(Lcwm;)Lcwm;	a	lambda$updateChunkToSave$3
	m	(Lcwm;Lafa$a;)Lcwm;	a	lambda$updateChunkToSave$4
	m	(Lcwm;Lcom/mojang/datafixers/util/Either;)Lcwm;	a	lambda$updateChunkToSave$5
	m	(Lcwm;Ljava/lang/Object;)Lcwm;	a	lambda$addSaveDependency$2
	m	(Lcwq;)Ljava/util/concurrent/CompletableFuture;	a	getFutureIfPresentUnchecked
		p	1		leastStatus
	m	(Lcwq;Lafb;)Ljava/util/concurrent/CompletableFuture;	a	getOrScheduleFuture
		p	1		targetStatus
		p	2		chunkStorage
	m	(Lcwv;)V	a	replaceProtoChunk
		p	1		chunk
	m	(Lcww;)V	a	broadcastChanges
		p	1		chunk
	m	(Lgt;)V	a	blockChanged
		p	1		pos
	m	(Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V	a	addSaveDependency
		p	1		thenDesc
		p	2		then
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$scheduleFullChunkPromotion$8
	m	(Ljava/util/concurrent/CompletableFuture;Lcww;)V	a	lambda$scheduleFullChunkPromotion$7
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V	a	updateChunkToSave
		p	1		then
		p	2		thenDesc
	m	(Lso;Lafp;)V	a	lambda$broadcast$1
	m	(Lso;Z)V	a	broadcast
		p	1		packet
		p	2		onlyOnWatchDistanceEdge
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingChunkFuture
	m	(I)Lcwq;	b	getStatus
		p	0		level
	m	(Lafb;Lafa$c;)V	b	lambda$scheduleFullChunkPromotion$6
	m	(Lcga;Lgt;Lcur;)V	b	lambda$broadcastChanges$0
		p	2		pos
		p	3		state
	m	(Lcwq;)Ljava/util/concurrent/CompletableFuture;	b	getFutureIfPresent
		p	1		leastStatus
	m	()Ljava/util/concurrent/CompletableFuture;	c	getFullChunkFuture
	m	(I)Lafa$c;	c	getFullChunkStatus
		p	0		distance
	m	()Lcww;	d	getTickingChunk
	m	(I)V	d	setQueueLevel
		p	1		level
	m	()Lcww;	e	getFullChunk
	m	()Lcwq;	f	getLastAvailableStatus
	m	()Lcwm;	g	getLastAvailable
	m	()Ljava/util/concurrent/CompletableFuture;	h	getChunkToSave
	m	()Lafa$c;	i	getFullStatus
	m	()Lcfh;	j	getPos
	m	()I	k	getTicketLevel
	m	()I	l	getQueueLevel
	m	()Z	m	wasAccessibleSinceLastSave
	m	()V	n	refreshAccessibility
	m	()Ljava/util/List;	o	getAllFutures
	f	Z	A	wasAccessibleSinceLastSave
	f	Z	B	resendLight
	f	Ljava/util/concurrent/CompletableFuture;	C	pendingFullStateConfirmation
	f	Lcom/mojang/datafixers/util/Either;	a	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	b	UNLOADED_CHUNK_FUTURE
	f	Lcom/mojang/datafixers/util/Either;	c	UNLOADED_LEVEL_CHUNK
	f	Lcom/mojang/datafixers/util/Either;	d	NOT_DONE_YET
	f	Ljava/util/concurrent/CompletableFuture;	e	UNLOADED_LEVEL_CHUNK_FUTURE
	f	Ljava/util/List;	f	CHUNK_STATUSES
	f	[Lafa$c;	g	FULL_CHUNK_STATUSES
	f	I	h	BLOCKS_BEFORE_RESEND_FUDGE
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	i	futures
	f	Lcgc;	j	levelHeightAccessor
	f	Ljava/util/concurrent/CompletableFuture;	k	fullChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	l	tickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	m	entityTickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	n	chunkToSave
	f	Lakv;	o	chunkToSaveHistory
	f	I	p	oldTicketLevel
	f	I	q	ticketLevel
	f	I	r	queueLevel
	f	Lcfh;	s	pos
	f	Z	t	hasChangedSections
	f	[Lit/unimi/dsi/fastutil/shorts/ShortSet;	u	changedBlocksPerSection
	f	Ljava/util/BitSet;	v	blockChangedLightSectionFilter
	f	Ljava/util/BitSet;	w	skyChangedLightSectionFilter
	f	Ldop;	x	lightEngine
	f	Lafa$d;	y	onLevelChange
	f	Lafa$e;	z	playerProvider
c	afa$1	net/minecraft/server/level/ChunkHolder$1
	f	Lafa;	a	this$0
c	afa$a	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	f	Lafa$a;	b	UNLOADED
c	afa$a$1	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
c	afa$b	net/minecraft/server/level/ChunkHolder$ChunkSaveDebug
	m	(Ljava/lang/Thread;Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V	<init>	<init>
		p	1		thread
		p	2		action
		p	3		actionDesc
	f	Ljava/lang/Thread;	a	thread
	f	Ljava/util/concurrent/CompletableFuture;	b	future
	f	Ljava/lang/String;	c	source
c	afa$c	net/minecraft/server/level/ChunkHolder$FullChunkStatus
	m	()[Lafa$c;	a	$values
	m	(Lafa$c;)Z	a	isOrAfter
		p	1		levelType
	f	Lafa$c;	a	INACCESSIBLE
	f	Lafa$c;	b	BORDER
	f	Lafa$c;	c	TICKING
	f	Lafa$c;	d	ENTITY_TICKING
	f	[Lafa$c;	e	$VALUES
c	afa$d	net/minecraft/server/level/ChunkHolder$LevelChangeListener
	m	(Lcfh;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
c	afa$e	net/minecraft/server/level/ChunkHolder$PlayerProvider
	m	(Lcfh;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
c	afb	net/minecraft/server/level/ChunkMap
	m	(Lafo;Ldqt$c;Lcom/mojang/datafixers/DataFixer;Ldnx;Ljava/util/concurrent/Executor;Layc;Lcwy;Lcwn;Lafx;Lcye;Ljava/util/function/Supplier;IZ)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		executor
		p	6		mainThreadExecutor
		p	7		chunkProvider
		p	8		chunkGenerator
		p	9		worldGenerationProgressListener
		p	10		chunkStatusChangeListener
		p	11		persistentStateManagerFactory
		p	12		viewDistance
		p	13		dsync
	m	()Lcwn;	a	generator
	m	(I)V	a	setViewDistance
		p	1		watchDistance
	m	(IIIII)Z	a	isChunkInRange
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
		p	4		distance
	m	(IIILjava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$getChunkRangeFuture$3
		p	4		chunks
	m	(J)Lafa;	a	getUpdatingChunkIfPresent
		p	1		pos
	m	(JILafa;I)Lafa;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLafa;)V	a	scheduleUnload
		p	1		pos
		p	3		holder
	m	(Lafa$a;)Ljava/lang/String;	a	lambda$printFuture$54
		p	0		unloaded
	m	(Lafa;)Ljava/util/concurrent/CompletableFuture;	a	prepareTickingChunk
		p	1		holder
	m	(Lafa;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$protoChunkToFullChunk$33
		p	2		either
	m	(Lafa;Lcwm;)Lcwm;	a	lambda$protoChunkToFullChunk$32
		p	2		protoChunk
	m	(Lafa;Lcwq;)Ljava/util/concurrent/CompletableFuture;	a	schedule
		p	1		holder
		p	2		requiredStatus
	m	(Lafa;Ljava/lang/Runnable;)V	a	lambda$prepareAccessibleChunk$47
		p	2		task
	m	(Lafa;Ljava/lang/Void;Ljava/lang/Throwable;)V	a	lambda$scheduleUnload$14
		p	1		void_
		p	2		throwable
	m	(Lafa;Ljava/util/concurrent/CompletableFuture;JLcwm;)V	a	lambda$scheduleUnload$13
		p	5		chunk
	m	(Lafo;Ljava/util/List;)V	a	postLoadProtoChunk
		p	0		world
		p	1		nbt
	m	(Lafp;)V	a	move
		p	1		player
	m	(Lafp;Lcfh;)Z	a	playerIsCloseEnoughForSpawning
		p	1		player
		p	2		pos
	m	(Lafp;Lcfh;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V	a	updateChunkTracking
		p	1		player
		p	2		pos
		p	3		packet
		p	4		oldWithinViewDistance
		p	5		newWithinViewDistance
	m	(Lafp;Lorg/apache/commons/lang3/mutable/MutableObject;Lcww;)V	a	playerLoadedChunk
		p	1		player
		p	2		cachedDataPacket
		p	3		chunk
	m	(Lafp;Z)V	a	updatePlayerStatus
		p	1		player
		p	2		added
	m	(Lbaq;)V	a	addEntity
		p	1		entity
	m	(Lbaq;Lso;)V	a	broadcast
		p	1		entity
		p	2		packet
	m	(Lcfh;)Ljava/lang/String;	a	getChunkDebugData
		p	1		chunkPos
	m	(Lcfh;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	getChunkRangeFuture
		p	1		centerChunk
		p	2		margin
		p	3		distanceToStatus
	m	(Lcfh;ILorg/apache/commons/lang3/mutable/MutableObject;Lafp;)V	a	lambda$setViewDistance$48
		p	4		player
	m	(Lcfh;Lafa$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$26
		p	2		unloaded
	m	(Lcfh;Lafa$c;)V	a	onFullChunkStatusChange
		p	1		chunkPos
		p	2		levelType
	m	(Lcfh;Lafa;Lcwq;Ljava/util/concurrent/Executor;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage;	a	lambda$scheduleChunkGeneration$27
		p	5		either
	m	(Lcfh;Lafa;Lcwq;Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$25
		p	5		chunks
	m	(Lcfh;Lbaq;)D	a	euclideanDistanceSquared
		p	0		pos
		p	1		entity
	m	(Lcfh;Lcom/mojang/datafixers/util/Either;)V	a	lambda$prepareTickingChunk$43
		p	2		either
	m	(Lcfh;Lcwq$a;)B	a	markPosition
		p	1		pos
		p	2		type
	m	(Lcfh;Lcww;)V	a	lambda$prepareTickingChunk$42
		p	2		chunk
	m	(Lcfh;Ljava/lang/Throwable;)Lcom/mojang/datafixers/util/Either;	a	lambda$scheduleChunkLoad$19
		p	2		throwable
	m	(Lcfh;Ljava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$scheduleChunkLoad$18
		p	2		nbt
	m	(Lcfh;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult;	a	lambda$debugReloadGenerator$0
		p	0		json
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$prepareAccessibleChunk$46
		p	0		either
	m	(Lcwm;)Z	a	save
		p	1		chunk
	m	(Lcwn;)V	a	lambda$debugReloadGenerator$1
		p	1		chunkGenerator
	m	(Lcwq;)Ljava/lang/String;	a	lambda$scheduleChunkGeneration$21
	m	(Lcwq;I)Lcwq;	a	getDependencyStatus
		p	1		centerChunkTargetStatus
		p	2		distance
	m	(Lcww;)Ljava/lang/String;	a	lambda$printFuture$53
		p	0		chunk
	m	(Lcxf;Lcww;)V	a	lambda$protoChunkToFullChunk$30
		p	2		chunk
	m	(Ljava/io/Writer;)V	a	dumpChunks
		p	1		writer
	m	(Ljava/lang/IllegalStateException;Ljava/lang/String;)Lz;	a	debugFuturesAndCreateReportedException
		p	1		exception
		p	2		details
	m	(Ljava/lang/StringBuilder;Lafa;)V	a	lambda$debugFuturesAndCreateReportedException$5
		p	1		chunkHolder
	m	(Ljava/lang/StringBuilder;Lafa;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$debugFuturesAndCreateReportedException$4
		p	2		pair
	m	(Ljava/lang/Throwable;Lcfh;)Lcom/mojang/datafixers/util/Either;	a	handleChunkLoadFailure
		p	1		throwable
		p	2		chunkPos
	m	(Ljava/util/List;)Lcww;	a	lambda$prepareAccessibleChunk$45
		p	0		chunks
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$readChunk$55
		p	1		nbt
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String;	a	printFuture
		p	0		future
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcwm;)V	a	lambda$saveAllChunks$11
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcww;Lafp;)V	a	lambda$prepareTickingChunk$41
		p	3		player
	m	(Lq;)V	a	lambda$scheduleChunkGeneration$24
	m	(Z)V	a	saveAllChunks
		p	1		flush
	m	()Ldai;	b	randomState
	m	(I)Lcwq;	b	lambda$prepareTickingChunk$35
	m	(IIIII)Z	b	isChunkOnRangeBorder
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
		p	4		distance
	m	(J)Lafa;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Lafa;)Ljava/util/concurrent/CompletableFuture;	b	prepareAccessibleChunk
		p	1		holder
	m	(Lafa;Lcwm;)Ljava/util/concurrent/CompletableFuture;	b	lambda$scheduleChunkGeneration$23
		p	2		chunk
	m	(Lafa;Lcwq;)Ljava/util/concurrent/CompletableFuture;	b	scheduleChunkGeneration
		p	1		holder
		p	2		requiredStatus
	m	(Lafa;Ljava/lang/Runnable;)V	b	lambda$prepareTickingChunk$44
		p	2		task
	m	(Lafp;)Z	b	skipPlayer
		p	1		player
	m	(Lbaq;)V	b	removeEntity
		p	1		entity
	m	(Lbaq;Lso;)V	b	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	b	prepareEntityTickingChunk
		p	1		pos
	m	(Lcfh;Ljava/util/Optional;)Ljava/util/Optional;	b	lambda$scheduleChunkLoad$17
		p	1		nbt
	m	(Lcfh;Lpj;)Z	b	lambda$scheduleChunkLoad$16
		p	1		nbt2
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	b	lambda$prepareTickingChunk$40
		p	1		either
	m	(Lcwm;)Ljava/util/Optional;	b	lambda$dumpChunks$49
		p	0		chunk
	m	(Lcwq;I)Lcwq;	b	lambda$scheduleChunkGeneration$20
		p	2		distance
	m	(Lcww;)Ljava/lang/Integer;	b	lambda$dumpChunks$52
	m	(Ljava/util/List;)Lcww;	b	lambda$prepareTickingChunk$36
	m	(Ljava/util/function/BooleanSupplier;)V	b	processUnloads
		p	1		shouldKeepTicking
	m	(Lpj;)Z	b	isChunkDataValid
		p	0		nbt
	m	()V	c	debugReloadGenerator
	m	(I)Lcwq;	c	lambda$prepareEntityTickingChunk$6
		p	0		distance
	m	(J)Ljava/util/function/IntSupplier;	c	getChunkQueueLevel
		p	1		pos
	m	(Lafa;)Ljava/util/concurrent/CompletableFuture;	c	protoChunkToFullChunk
		p	1		chunkHolder
	m	(Lafa;Lcwm;)Ljava/util/concurrent/CompletableFuture;	c	lambda$schedule$15
	m	(Lafa;Ljava/lang/Runnable;)V	c	lambda$prepareTickingChunk$38
		p	2		task
	m	(Lafp;)Lhq;	c	updatePlayerPos
		p	1		player
	m	(Lcfh;)V	c	releaseLightTicket
		p	1		pos
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	c	lambda$prepareTickingChunk$37
	m	(Lcwm;)Z	c	lambda$saveAllChunks$10
		p	0		chunk
	m	(Lcww;)Ljava/lang/Integer;	c	lambda$dumpChunks$51
	m	(Ljava/util/List;)Lcww;	c	lambda$prepareEntityTickingChunk$7
		p	0		chunks
	m	(Lpj;)Lpj;	c	upgradeChunkTag
		p	1		nbt
	m	()Lafr;	d	getLightEngine
	m	(J)I	d	lambda$getChunkQueueLevel$2
	m	(Lafa;)Z	d	saveChunkIfNeeded
		p	1		chunkHolder
	m	(Lafa;Ljava/lang/Runnable;)V	d	lambda$protoChunkToFullChunk$34
		p	2		task
	m	(Lcfh;)Z	d	anyPlayerCloseEnoughForSpawning
		p	1		pos
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	d	lambda$prepareEntityTickingChunk$8
		p	0		either
	m	(Lcww;)Ljava/lang/Integer;	d	lambda$dumpChunks$50
	m	()Z	e	hasWork
	m	(Lafa;)Lafa$c;	e	lambda$protoChunkToFullChunk$31
	m	(Lafa;Ljava/lang/Runnable;)V	e	lambda$scheduleChunkGeneration$22
		p	2		task
	m	(Lcfh;)Ljava/util/List;	e	getPlayersCloseForSpawning
		p	1		pos
	m	(Lcww;)V	e	lambda$prepareTickingChunk$39
		p	1		chunk
	m	()Z	f	promoteChunkMap
	m	(Lafa;)Lcwm;	f	lambda$saveAllChunks$9
		p	1		chunkHolder
	m	()I	g	getTickingGenerated
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	g	scheduleChunkLoad
		p	1		pos
	m	()I	h	size
	m	(Lcfh;)Lcwm;	h	createEmptyChunk
		p	1		chunkPos
	m	()Lafh;	i	getDistanceManager
	m	(Lcfh;)V	i	markPositionReplaceable
		p	1		pos
	m	()Ljava/lang/Iterable;	j	getChunks
	m	(Lcfh;)Z	j	isExistingChunkFull
		p	1		pos
	m	()V	k	tick
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	k	readChunk
		p	1		chunkPos
	m	()Lblv;	l	getPoiManager
	m	(Lcfh;)Ljava/lang/String;	l	lambda$releaseLightTicket$29
	m	()Ljava/lang/String;	m	getStorageName
	m	(Lcfh;)V	m	lambda$releaseLightTicket$28
	m	()Z	p	lambda$saveAllChunks$12
	f	Lafd;	A	queueSorter
	f	Laye;	B	worldgenMailbox
	f	Laye;	C	mainThreadMailbox
	f	Lafx;	D	progressListener
	f	Lcye;	E	chunkStatusListener
	f	Lafb$a;	F	distanceManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	G	tickingGenerated
	f	Ldnx;	H	structureTemplateManager
	f	Ljava/lang/String;	I	storageName
	f	Lafi;	J	playerMap
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	K	entityMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	L	chunkTypeCache
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	M	chunkSaveCooldowns
	f	Ljava/util/Queue;	N	unloadQueue
	f	I	O	viewDistance
	f	I	a	MAX_VIEW_DISTANCE
	f	I	b	MAX_CHUNK_DISTANCE
	f	I	c	FORCED_TICKET_LEVEL
	f	B	f	CHUNK_TYPE_REPLACEABLE
	f	B	g	CHUNK_TYPE_UNKNOWN
	f	B	h	CHUNK_TYPE_FULL
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	CHUNK_SAVED_PER_TICK
	f	I	k	CHUNK_SAVED_EAGERLY_PER_TICK
	f	I	l	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	f	I	m	MIN_VIEW_DISTANCE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	n	updatingChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	o	visibleChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	p	pendingUnloads
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	entitiesInLevel
	f	Lafo;	r	level
	f	Lafr;	s	lightEngine
	f	Layc;	t	mainThreadExecutor
	f	Lcwn;	u	generator
	f	Ldai;	v	randomState
	f	Ljava/util/function/Supplier;	w	overworldDataStorage
	f	Lblv;	x	poiManager
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	y	toDrop
	f	Z	z	modified
c	afb$1	net/minecraft/server/level/ChunkMap$1
	f	Lcfh;	a	val$k
	f	Lafb;	c	this$0
c	afb$2	net/minecraft/server/level/ChunkMap$2
	f	I	a	val$startX
	f	I	c	val$finalI
	f	I	d	val$range
	f	I	e	val$startZ
	f	Lcom/mojang/datafixers/util/Either;	f	val$either
	f	Lafb;	g	this$0
c	afb$a	net/minecraft/server/level/ChunkMap$DistanceManager
	m	(Lafb;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	2		workerExecutor
		p	3		mainThreadExecutor
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILafa;I)Lafa;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(J)Lafa;	b	getChunk
		p	1		pos
	f	Lafb;	a	this$0
c	afb$b	net/minecraft/server/level/ChunkMap$TrackedEntity
	m	(Lafb;Lbaq;IIZ)V	<init>	<init>
		p	2		entity
		p	3		maxDistance
		p	4		tickInterval
		p	5		alwaysUpdateVelocity
	m	()V	a	broadcastRemoved
	m	(I)I	a	scaledRange
		p	1		initialDistance
	m	(Lafp;)V	a	removePlayer
		p	1		player
	m	(Ljava/util/List;)V	a	updatePlayers
		p	1		players
	m	(Lso;)V	a	broadcast
		p	1		packet
	m	()I	b	getEffectiveRange
	m	(Lafp;)V	b	updatePlayer
		p	1		player
	m	(Lso;)V	b	broadcastAndSend
		p	1		packet
	f	Lafb;	a	this$0
	f	Lafn;	b	serverEntity
	f	Lbaq;	c	entity
	f	I	d	range
	f	Lhq;	e	lastSectionPos
	f	Ljava/util/Set;	f	seenBy
c	afc	net/minecraft/server/level/ChunkTaskPriorityQueue
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		name
		p	2		maxSize
	m	()Ljava/util/stream/Stream;	a	pop
	m	(I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	lambda$new$0
	m	(ILcfh;I)V	a	resortChunkTasks
		p	1		fromLevel
		p	2		pos
		p	3		toLevel
	m	(J)Ljava/lang/Runnable;	a	acquire
		p	1		pos
	m	(JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$pop$6
	m	(JZ)V	a	release
		p	1		pos
		p	3		removeElement
	m	(Ljava/util/Optional;)Z	a	lambda$release$3
	m	(Ljava/util/Optional;JI)V	a	submit
		p	1		element
		p	2		pos
		p	4		level
	m	()Z	b	hasWork
	m	(J)Lcom/mojang/datafixers/util/Either;	b	lambda$pop$5
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	c	getAcquired
	m	(J)V	c	lambda$acquire$4
	m	(J)Ljava/util/List;	d	lambda$submit$2
	m	(J)Ljava/util/List;	e	lambda$resortChunkTasks$1
	f	I	a	PRIORITY_LEVEL_COUNT
	f	Ljava/util/List;	b	taskQueue
	f	I	c	firstQueue
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	acquired
	f	I	f	maxTasks
c	afd	net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	m	(Ljava/util/List;Ljava/util/concurrent/Executor;I)V	<init>	<init>
		p	1		actors
		p	2		executor
		p	3		maxQueues
	m	()Z	a	hasWork
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$15
	m	(ILaye;)Lafc;	a	lambda$new$0
		p	1		actor
	m	(ILcfh;ILafc;)V	a	lambda$onLevelChange$9
		p	3		queue
	m	(Lafa;Ljava/lang/Runnable;)Lafd$a;	a	message
		p	0		holder
		p	1		task
	m	(Lafa;Ljava/util/function/Function;)Lafd$a;	a	message
		p	0		holder
		p	1		taskFunction
	m	(Lafc;Laye;)V	a	pollTask
		p	1		queue
		p	2		actor
	m	(Lafc;Laye;Ljava/lang/Void;)V	a	lambda$pollTask$16
	m	(Laye;)Laye;	a	getReleaseProcessor
		p	1		executor
	m	(Laye;JLjava/lang/Runnable;Z)V	a	release
		p	1		actor
		p	2		chunkPos
		p	4		callback
		p	5		clearTask
	m	(Laye;JZLjava/lang/Runnable;)V	a	lambda$release$11
	m	(Laye;Lafd$b;)V	a	lambda$getReleaseProcessor$6
		p	2		message
	m	(Laye;Laye;)Layh$b;	a	lambda$getReleaseProcessor$8
		p	2		yield
	m	(Laye;Laye;Z)V	a	lambda$getProcessor$4
	m	(Laye;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$14
		p	1		executeOrAddBlocking
	m	(Laye;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V	a	submit
		p	1		actor
		p	2		task
		p	3		chunkPos
		p	5		lastLevelUpdatedToProvider
		p	6		addBlocker
	m	(Laye;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V	a	lambda$submit$12
	m	(Laye;Z)Laye;	a	getProcessor
		p	1		executor
		p	2		addBlocker
	m	(Laye;ZLafd$a;)V	a	lambda$getProcessor$3
		p	3		task
	m	(Laye;ZLaye;)Layh$b;	a	lambda$getProcessor$5
		p	3		yield
	m	(Ljava/lang/Long;)Ljava/lang/String;	a	lambda$getDebugStatus$18
		p	0		pos
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$13
		p	0		addBlocking
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lafd$a;	a	message
		p	0		task
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/lang/Runnable;JZ)Lafd$b;	a	release
		p	0		task
		p	1		pos
		p	3		removeTask
	m	(Ljava/lang/Runnable;Laye;)Ljava/lang/Runnable;	a	lambda$message$2
		p	1		yield
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$getDebugStatus$19
		p	0		entry
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lafd$a;	a	message
		p	0		taskFunction
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/util/function/IntSupplier;Lcfh;ILjava/util/function/IntConsumer;)V	a	lambda$onLevelChange$10
	m	()Ljava/lang/String;	b	getDebugStatus
	m	(Lafc;Laye;)V	b	lambda$pollTask$17
	m	(Laye;)Lafc;	b	getQueue
		p	1		actor
	m	(Laye;Laye;)V	b	lambda$getReleaseProcessor$7
	m	(Ljava/lang/Runnable;Laye;)V	b	lambda$message$1
	m	(Lcfh;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	queues
	f	Ljava/util/Set;	c	sleeping
	f	Layf;	d	mailbox
c	afd$a	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V	<init>	<init>
		p	1		taskFunction
		p	2		pos
		p	4		lastLevelUpdatedToProvider
	f	Ljava/util/function/Function;	a	task
	f	J	b	pos
	f	Ljava/util/function/IntSupplier;	c	level
c	afd$b	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	m	(Ljava/lang/Runnable;JZ)V	<init>	<init>
		p	1		callback
		p	2		pos
		p	4		removeTask
	f	Ljava/lang/Runnable;	a	task
	f	J	b	pos
	f	Z	c	clearQueue
c	afe	net/minecraft/server/level/ChunkTracker
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(J)Z	a	isSource
		p	1		id
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		chunkPos
		p	3		distance
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	aff	net/minecraft/server/level/ColumnPos
	m	()Lcfh;	a	toChunkPos
	m	(II)J	a	asLong
		p	0		x
		p	1		z
	m	(J)I	a	getX
		p	0		packed
	m	()J	b	toLong
	m	(J)I	b	getZ
		p	0		packed
	m	()I	c	x
	m	()I	d	z
	f	I	a	x
	f	I	b	z
	f	J	c	COORD_BITS
	f	J	d	COORD_MASK
c	afg	net/minecraft/server/level/DemoMode
	m	(Lafp;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Lafp;Lcga;Lcaa;Lazl;)Lazm;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Lafp;Lcga;Lcaa;Lazl;Ldvp;)Lazm;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Lgt;Lxw$a;Lgy;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	()V	f	outputDemoReminder
	f	I	a	DEMO_DAYS
	f	I	b	TOTAL_PLAY_TICKS
	f	Z	e	displayedIntro
	f	Z	f	demoHasEnded
	f	I	g	demoEndedReminder
	f	I	h	gameModeTicks
c	afh	net/minecraft/server/level/DistanceManager
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		workerExecutor
		p	2		mainThreadExecutor
	m	()V	a	purgeStaleTickets
	m	(I)V	a	updatePlayerTickets
		p	1		viewDistance
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILafa;I)Lafa;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLafs;)V	a	addTicket
		p	1		position
		p	3		ticket
	m	(JLcom/mojang/datafixers/util/Either;)V	a	lambda$runAllUpdates$4
		p	3		either
	m	(Lafb;)Z	a	runAllUpdates
		p	1		chunkStorage
	m	(Lafb;Lafa;)V	a	lambda$runAllUpdates$0
		p	2		holder
	m	(Lafs;)Z	a	lambda$runAllUpdates$1
		p	0		ticket
	m	(Laft;Lcfh;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lama;)I	a	getTicketLevelAt
		p	0		tickets
	m	(Lcfh;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Lhq;Lafp;)V	a	addPlayer
		p	1		pos
		p	2		player
	m	(Ljava/lang/String;)V	a	dumpTickets
		p	1		path
	m	()I	b	getNaturalSpawnChunkCount
	m	(I)V	b	updateSimulationDistance
		p	1		simulationDistance
	m	(J)Lafa;	b	getChunk
		p	1		pos
	m	(JLafs;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Laft;Lcfh;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lhq;Lafp;)V	b	removePlayer
		p	1		pos
		p	2		player
	m	()Ljava/lang/String;	c	getDebugStatus
	m	(J)Z	c	inEntityTickingRange
		p	1		chunkPos
	m	(Laft;Lcfh;ILjava/lang/Object;)V	c	addRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()Lafu;	d	tickingTracker
	m	(J)Z	d	inBlockTickingRange
		p	1		chunkPos
	m	(Laft;Lcfh;ILjava/lang/Object;)V	d	removeRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()V	e	removeTicketsOnClosing
	m	(J)Ljava/lang/String;	e	getTicketDebugString
		p	1		pos
	m	()Z	f	hasTickets
	m	(J)Z	f	hasPlayersNearby
		p	1		chunkPos
	m	()I	g	getPlayerTicketLevel
	m	(J)Lama;	g	getTickets
		p	1		position
	m	()V	h	lambda$runAllUpdates$2
	m	(J)Lit/unimi/dsi/fastutil/objects/ObjectSet;	h	lambda$addPlayer$6
		p	0		sectionPos
	m	(J)Lama;	i	lambda$getTickets$5
		p	0		pos
	m	(J)V	j	lambda$runAllUpdates$3
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	ENTITY_TICKING_RANGE
	f	I	c	PLAYER_TICKET_LEVEL
	f	I	d	INITIAL_TICKET_LIST_CAPACITY
	f	I	e	ENTITY_TICKING_LEVEL_THRESHOLD
	f	I	f	BLOCK_TICKING_LEVEL_THRESHOLD
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	g	playersPerChunk
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	tickets
	f	Lafh$a;	i	ticketTracker
	f	Lafh$b;	j	naturalSpawnChunkCounter
	f	Lafu;	k	tickingTicketsTracker
	f	Lafh$c;	l	playerTicketManager
	f	Ljava/util/Set;	m	chunksToUpdateFutures
	f	Lafd;	n	ticketThrottler
	f	Laye;	o	ticketThrottlerInput
	f	Laye;	p	ticketThrottlerReleaser
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	ticketsToRelease
	f	Ljava/util/concurrent/Executor;	r	mainThreadExecutor
	f	J	s	ticketTickCounter
	f	I	t	simulationDistance
c	afh$a	net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	m	(I)I	a	runDistanceUpdates
		p	1		distance
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Lafh;	a	this$0
c	afh$b	net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	m	(Lafh;I)V	<init>	<init>
		p	2		maxDistance
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(Ljava/lang/String;)V	a	dumpChunks
		p	1		path
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Z	d	havePlayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	maxDistance
	f	Lafh;	c	this$0
c	afh$c	net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	m	(Lafh;I)V	<init>	<init>
		p	1		maxDistance
	m	()V	a	runAllUpdates
	m	(I)V	a	updateViewDistance
		p	1		watchDistance
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(JIZZ)V	a	onLevelChange
		p	1		pos
		p	3		distance
		p	4		oldWithinViewDistance
		p	5		withinViewDistance
	m	(JLafs;)V	a	lambda$onLevelChange$5
	m	(JI)V	b	lambda$runAllUpdates$7
		p	3		level
	m	(JLafs;)V	b	lambda$onLevelChange$4
	m	(I)Z	c	haveTicketFor
		p	1		distance
	m	(JLafs;)V	c	lambda$onLevelChange$2
	m	()V	d	lambda$onLevelChange$0
	m	(I)I	d	lambda$onLevelChange$3
	m	(J)I	d	lambda$runAllUpdates$6
	m	(JLafs;)V	d	lambda$onLevelChange$1
	f	Lafh;	d	this$0
	f	I	e	viewDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	f	queueLevels
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	toUpdate
c	afi	net/minecraft/server/level/PlayerMap
	m	(J)Ljava/util/Set;	a	getPlayers
	m	(JJLafp;)V	a	updatePlayer
		p	1		prevPos
		p	3		currentPos
		p	5		player
	m	(JLafp;)V	a	removePlayer
		p	3		player
	m	(JLafp;Z)V	a	addPlayer
		p	3		player
		p	4		watchDisabled
	m	(Lafp;)V	a	ignorePlayer
		p	1		player
	m	(Lafp;)V	b	unIgnorePlayer
		p	1		player
	m	(Lafp;)Z	c	ignoredOrUnknown
		p	1		player
	m	(Lafp;)Z	d	ignored
		p	1		player
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	players
c	afj	net/minecraft/server/level/PlayerRespawnLogic
	m	(Lafo;II)Lgt;	a	getOverworldRespawnPos
		p	0		world
		p	1		x
		p	2		z
	m	(Lafo;Lcfh;)Lgt;	a	getSpawnPosInChunk
		p	0		world
		p	1		chunkPos
c	afk	net/minecraft/server/level/SectionTracker
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(J)Z	a	isSource
		p	1		id
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	afl	net/minecraft/server/level/ServerBossEvent
	m	(Lrm;Lazc$a;Lazc$b;)V	<init>	<init>
		p	1		displayName
		p	2		color
		p	3		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Lafp;)V	a	addPlayer
		p	1		player
	m	(Lazc$a;)V	a	setColor
		p	1		color
	m	(Lazc$b;)V	a	setOverlay
		p	1		style
	m	(Ljava/util/function/Function;)V	a	broadcast
		p	1		bossBarToPacketFunction
	m	(Lrm;)V	a	setName
		p	1		name
	m	(Z)Lazc;	a	setDarkenScreen
		p	1		darkenSky
	m	()V	b	removeAllPlayers
	m	(Lafp;)V	b	removePlayer
		p	1		player
	m	(Z)Lazc;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lazc;	c	setCreateWorldFog
		p	1		thickenFog
	m	(Z)V	d	setVisible
		p	1		visible
	m	()Z	g	isVisible
	m	()Ljava/util/Collection;	h	getPlayers
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
c	afm	net/minecraft/server/level/ServerChunkCache
	m	(Lafo;Ldqt$c;Lcom/mojang/datafixers/DataFixer;Ldnx;Ljava/util/concurrent/Executor;Lcwn;IIZLafx;Lcye;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		workerExecutor
		p	6		chunkGenerator
		p	7		viewDistance
		p	8		simulationDistance
		p	9		dsync
		p	10		worldGenerationProgressListener
		p	11		chunkStatusChangeListener
		p	12		persistentStateManagerFactory
	m	()Lafr;	a	getLightEngine
	m	(I)V	a	setViewDistance
		p	1		watchDistance
	m	(II)Lcww;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILcwq;Z)Lcwm;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(J)Z	a	isPositionTicking
		p	1		pos
	m	(JLcwm;Lcwq;)V	a	storeInCache
		p	1		pos
		p	3		chunk
		p	4		status
	m	(JLjava/util/function/Consumer;)V	a	getFullChunk
		p	1		pos
		p	3		chunkConsumer
	m	(Lafa;I)Z	a	chunkAbsent
		p	1		holder
		p	2		maxLevel
	m	(Lafm$a;)V	a	lambda$tickChunks$5
		p	0		chunk
	m	(Lafp;)V	a	move
		p	1		player
	m	(Laft;Lcfh;ILjava/lang/Object;)V	a	addRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbaq;)V	a	removeEntity
		p	1		entity
	m	(Lbaq;Lso;)V	a	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Lcfh;)Ljava/lang/String;	a	getChunkDebugData
		p	1		pos
	m	(Lcfh;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Lcgj;Lhq;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(Lcwm;)Lcwm;	a	lambda$getChunk$1
		p	0		chunk
	m	(Lgt;)V	a	blockChanged
		p	1		pos
	m	(Lhq;Lcgj;)V	a	lambda$onLightUpdate$6
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$getChunkFuture$4
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(Z)V	a	save
		p	1		flush
	m	(ZLafa$a;)Lcwm;	a	lambda$getChunk$2
		p	1		unloaded
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()I	b	getTickingGenerated
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(IILcwq;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFuture
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(J)Lafa;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Laft;Lcfh;ILjava/lang/Object;)V	b	removeRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbaq;)V	b	addEntity
		p	1		entity
	m	(Lbaq;Lso;)V	b	broadcast
		p	1		entity
		p	2		packet
	m	()Lcga;	c	getLevel
	m	(II)Lcfg;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	(IILcwq;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFutureMainThread
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	()Z	d	pollTask
	m	(IILcwq;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$getChunkFuture$3
	m	()Ljava/lang/String;	e	gatherStats
	m	(IILcwq;Z)Lcwm;	e	lambda$getChunk$0
	m	()I	f	getPendingTasksCount
	m	()Lcwn;	g	getGenerator
	m	()Ldai;	h	randomState
	m	()I	i	getLoadedChunksCount
	m	()Ldqp;	j	getDataStorage
	m	()Lblv;	k	getPoiManager
	m	()Lcxk;	l	chunkScanner
	m	()Lcgl$d;	m	getLastSpawnState
	m	()V	n	removeTicketsOnClosing
	m	()Ldop;	o	getLightEngine
	m	()Lcfg;	p	getLevel
	m	()V	q	clearCache
	m	()Z	r	runDistanceManagerUpdates
	m	()V	s	tickChunks
	f	Lafb;	a	chunkMap
	f	Ljava/util/List;	b	CHUNK_STATUSES
	f	Lafh;	c	distanceManager
	f	Lafo;	d	level
	f	Ljava/lang/Thread;	e	mainThread
	f	Lafr;	f	lightEngine
	f	Lafm$b;	g	mainThreadProcessor
	f	Ldqp;	h	dataStorage
	f	J	i	lastInhabitedUpdate
	f	Z	j	spawnEnemies
	f	Z	k	spawnFriendlies
	f	I	l	CACHE_SIZE
	f	[J	m	lastChunkPos
	f	[Lcwq;	n	lastChunkStatus
	f	[Lcwm;	o	lastChunk
	f	Lcgl$d;	p	lastSpawnState
c	afm$a	net/minecraft/server/level/ServerChunkCache$ChunkAndHolder
	m	()Lcww;	a	chunk
	m	()Lafa;	b	holder
	f	Lcww;	a	chunk
	f	Lafa;	b	holder
c	afm$b	net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	m	(Lafm;Lcga;)V	<init>	<init>
		p	2		world
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	()Z	x	pollTask
	f	Lafm;	a	this$0
c	afn	net/minecraft/server/level/ServerEntity
	m	(Lafo;Lbaq;IZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		tickInterval
		p	4		alwaysUpdateVelocity
		p	5		receiver
	m	()V	a	sendChanges
	m	(Lafp;)V	a	removePairing
		p	1		player
	m	(Ljava/util/function/Consumer;)V	a	sendPairingData
		p	1		sender
	m	(Lso;)V	a	broadcastAndSend
		p	1		packet
	m	()V	b	sendDirtyEntityData
	m	(Lafp;)V	b	addPairing
		p	1		player
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	TOLERANCE_LEVEL_ROTATION
	f	Lafo;	c	level
	f	Lbaq;	d	entity
	f	I	e	updateInterval
	f	Z	f	trackDelta
	f	Ljava/util/function/Consumer;	g	broadcast
	f	Lys;	h	positionCodec
	f	I	i	yRotp
	f	I	j	xRotp
	f	I	k	yHeadRotp
	f	Ldvt;	l	ap
	f	I	m	tickCount
	f	I	n	teleportDelay
	f	Ljava/util/List;	o	lastPassengers
	f	Z	p	wasRiding
	f	Z	q	wasOnGround
c	afo	net/minecraft/server/level/ServerLevel
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Ldqt$c;Ldqy;Laai;Lcxy;Lafx;ZJLjava/util/List;Z)V	<init>	<init>
		p	1		server
		p	2		workerExecutor
		p	3		session
		p	4		properties
		p	5		worldKey
		p	6		dimensionOptions
		p	7		worldGenerationProgressListener
		p	8		debugWorld
		p	9		seed
		p	11		spawners
		p	12		shouldTickTime
	m	()Z	A	isFlat
	m	()J	B	getSeed
	m	()Lcya;	C	dragonFight
	m	()Lafo;	D	getLevel
	m	()Ljava/lang/String;	E	getWatchdogStats
	m	()Lcyo;	F	getEntities
	m	(Lgt;)Ljava/util/Optional;	F	findLightningRod
		p	1		pos
	m	()Ljava/lang/String;	G	gatherChunkSourceStats
	m	(Lgt;)V	G	lambda$onBlockStateChange$13
	m	()Ldwr;	H	getScoreboard
	m	(Lgt;)Lgt;	H	lambda$findLightningRod$7
		p	0		pos
	m	()Lcwp;	I	getChunkSource
	m	(Lgt;)Z	I	lambda$findLightningRod$6
		p	1		pos
	m	()Ldwz;	J	getFluidTicks
	m	()Ldwz;	K	getBlockTicks
	m	()Lcgr;	a	structureManager
	m	(I)Lbaq;	a	getEntity
		p	1		id
	m	(III)Lhc;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIZ)Z	a	setChunkForced
		p	1		x
		p	2		z
		p	3		forced
	m	(IIZZ)V	a	setWeatherParameters
		p	1		clearDuration
		p	2		rainDuration
		p	3		raining
		p	4		thundering
	m	(ILgt;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Lafo;)V	a	makeObsidianPlatform
		p	0		world
	m	(Lafo;Lgt;)V	a	lambda$makeObsidianPlatform$21
		p	1		pos
	m	(Lafp;)V	a	addDuringCommandTeleport
		p	1		player
	m	(Lafp;Lbaq$c;)V	a	removePlayerImmediately
		p	1		player
		p	2		reason
	m	(Lafp;Lim;ZDDDIDDDD)Z	a	sendParticles
		p	1		viewer
		p	2		particle
		p	3		force
		p	4		x
		p	6		y
		p	8		z
		p	10		count
		p	11		deltaX
		p	13		deltaY
		p	15		deltaZ
		p	17		speed
	m	(Lafp;ZDDDLso;)Z	a	sendParticles
		p	1		player
		p	2		force
		p	3		x
		p	5		y
		p	7		z
		p	9		packet
	m	(Lakh;Lgt;IZ)Lgt;	a	findNearestMapStructure
		p	1		structureTag
		p	2		pos
		p	3		radius
		p	4		skipReferencedStructures
	m	(Lalt;ZZ)V	a	save
		p	1		progressListener
		p	2		flush
		p	3		savingDisabled
	m	(Lawc;Lbaq;)V	a	lambda$tick$3
		p	2		entity
	m	(Lbaq;)V	a	tickNonPassenger
		p	1		entity
	m	(Lbaq;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbaq;Lazz;Lcft;DDDFZLcfs$a;)Lcfs;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		destructionType
	m	(Lbaq;Lbaq;)V	a	tickPassenger
		p	1		vehicle
		p	2		passenger
	m	(Lbbf;)Z	a	lambda$findLightningTargetAround$8
		p	1		entity
	m	(Lbls;Lbaq;Lbbt;)V	a	onReputationEvent
		p	1		interaction
		p	2		entity
		p	3		observer
	m	(Lbtf;DDDLajd;Lajf;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lbtf;ILgt;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lbtf;Lbaq;Lajd;Lajf;FFJ)V	a	playSeededSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lbtf;Lgt;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Lcff;)Z	a	doBlockEvent
		p	1		event
	m	(Lcfh;)Z	a	isNaturalSpawningAllowed
		p	1		pos
	m	(Lcur;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcwm;)V	a	onStructureStartsAvailable
		p	1		chunk
	m	(Lcww;)V	a	unload
		p	1		chunk
	m	(Lcww;I)V	a	tickChunk
		p	1		chunk
		p	2		randomTickSpeed
	m	(Lcym;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		predicate
	m	(Lcyy;Ldvt;Lcyy$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ldjw;)V	a	clearBlockEvents
		p	1		box
	m	(Ldjw;Lcff;)Z	a	lambda$clearBlockEvents$17
		p	1		event
	m	(Lgt;)Lgt;	a	findLightningTargetAround
		p	1		pos
	m	(Lgt;F)V	a	setDefaultSpawnPos
		p	1		pos
		p	2		angle
	m	(Lgt;I)Z	a	isCloseToVillage
		p	1		pos
		p	2		maxDistance
	m	(Lgt;Lciw;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Lgt;Lciw;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lgt;Lciw;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lciw;Lgy;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Lgt;Lcur;Lcur;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Lgt;Lcur;Lcur;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Lgt;Ldox;)V	a	tickFluid
		p	1		pos
		p	2		fluid
	m	(Lgt;Lhc;)V	a	lambda$onBlockStateChange$16
	m	(Lgy;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lhc;)Z	a	lambda$findLightningRod$5
	m	(Lhq;)Z	a	isVillage
		p	1		sectionPos
	m	(Lim;DDDIDDDD)I	a	sendParticles
		p	1		particle
		p	2		x
		p	4		y
		p	6		z
		p	8		count
		p	9		deltaX
		p	11		deltaY
		p	13		deltaZ
		p	15		speed
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String;	a	lambda$getTypeCount$19
	m	(Ljava/io/Writer;)V	a	dumpBlockEntityTickers
		p	1		writer
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	dumpEntities
		p	0		writer
		p	1		entities
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String;	a	getTypeCount
		p	0		items
		p	1		classifier
	m	(Ljava/lang/String;)Ldqj;	a	getMapData
		p	1		id
	m	(Ljava/lang/String;Ldqj;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Ljava/nio/file/Path;)V	a	saveDebugReport
		p	1		path
	m	(Ljava/util/List;)V	a	handleGameEventMessagesInQueue
		p	1		events
	m	(Ljava/util/List;Lcyy;Ldvt;Lcyy$a;Lcza;Ldvt;)V	a	lambda$gameEvent$12
		p	5		listener
		p	6		listenerPos
	m	(Ljava/util/UUID;)Lbaq;	a	getEntity
		p	1		uuid
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lgt;III)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		predicate
		p	2		pos
		p	3		radius
		p	4		horizontalBlockCheckInterval
		p	5		verticalBlockCheckInterval
	m	(Ljava/util/function/Predicate;Ljava/util/List;Lbaq;)V	a	lambda$getEntities$11
		p	2		entity
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	(Lnet/minecraft/server/MinecraftServer;)Ldqp;	a	lambda$new$0
	m	(Lpj;)Lbuo;	a	lambda$new$1
		p	1		nbt
	m	(ZZ)V	a	tickCustomSpawners
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()V	an	wakeUpAllPlayers
	m	()V	ao	announceSleepStatus
	m	()V	ap	advanceWeatherCycle
	m	()V	aq	resetWeatherCycle
	m	()V	ar	saveLevelData
	m	()V	as	sendGameEvents
	m	()V	at	runBlockEvents
	m	()Lbuo;	au	lambda$new$2
	m	()V	b	tickTime
	m	(I)Lbaq;	b	getEntityOrPart
		p	1		id
	m	(ILgt;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Lafo;Lgt;)V	b	lambda$makeObsidianPlatform$20
		p	1		pos
	m	(Lafp;)V	b	addDuringPortalTeleport
		p	1		player
	m	(Lbaq;)Z	b	addFreshEntity
		p	1		entity
	m	(Lcwm;)V	b	lambda$onStructureStartsAvailable$22
	m	(Lcww;)V	b	startTickingChunk
		p	1		chunk
	m	(Lgt;)Z	b	isVillage
		p	1		pos
	m	(Lgt;Lciw;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(Lgt;Lhc;)V	b	lambda$onBlockStateChange$15
	m	(Lhq;)I	b	sectionsToVillage
		p	1		pos
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	()Z	c	isHandlingTick
	m	(J)Z	c	areEntitiesLoaded
		p	1		chunkPos
	m	(Lafp;)V	c	addNewPlayer
		p	1		player
	m	(Lbaq;)Z	c	addWithUUID
		p	1		entity
	m	(Lgt;)Lbum;	c	getRaidAt
		p	1		pos
	m	(Lgt;Lhc;)V	c	lambda$onBlockStateChange$14
	m	()Z	d	canSleepThroughNights
	m	(J)Z	d	isPositionTickingWithEntitiesLoaded
		p	1		chunkPos
	m	(Lafp;)V	d	addRespawnedPlayer
		p	1		player
	m	(Lbaq;)V	d	addDuringTeleport
		p	1		entity
	m	(Lgt;)Z	d	isRaided
		p	1		pos
	m	(Lgt;Lciw;)V	d	tickBlock
		p	1		pos
		p	2		block
	m	()V	e	updateSleepingPlayerList
	m	(Lafp;)V	e	addPlayer
		p	1		player
	m	(Lbaq;)Z	e	tryAddFreshEntityWithPassengers
		p	1		entity
	m	(Lgt;)Z	e	isPositionEntityTicking
		p	1		pos
	m	()Laay;	f	getScoreboard
	m	(Lafp;)V	f	lambda$wakeUpAllPlayers$4
		p	0		player
	m	(Lgt;)Z	f	isNaturalSpawningAllowed
		p	1		pos
	m	()V	g	resetEmptyTime
	m	()Ljava/util/List;	h	getDragons
	m	()Lafp;	i	getRandomPlayer
	m	(Lbaq;)Z	i	shouldDiscardEntity
		p	1		entity
	m	()I	j	getLogicalHeight
	m	(Lbaq;)Z	j	addEntity
		p	1		entity
	m	()Lafm;	k	getChunkSource
	m	(Lbaq;)Ljava/lang/String;	k	lambda$getWatchdogStats$18
	m	()Ldxa;	l	getBlockTicks
	m	(Lbaq;)Ljava/lang/String;	l	lambda$tickPassenger$10
	m	()Ldxa;	m	getFluidTicks
	m	(Lbaq;)Ljava/lang/String;	m	lambda$tickNonPassenger$9
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldpv;	o	getPortalForcer
	m	()Ldnx;	p	getStructureManager
	m	()Lcct;	q	getRecipeManager
	m	()Z	r	noSave
	m	()Lhn;	s	registryAccess
	m	()Ldqp;	t	getDataStorage
	m	()I	u	getFreeMapId
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	v	getForcedChunks
	m	()Ljava/util/List;	w	players
	m	()Lblv;	x	getPoiManager
	m	()Lbuo;	y	getRaids
	m	()Ljava/lang/Iterable;	z	getAllEntities
	f	I	A	MAX_RAIN_DELAY_TIME
	f	I	B	MIN_RAIN_TIME
	f	I	C	MAX_RAIN_TIME
	f	I	D	MIN_THUNDER_DELAY_TIME
	f	I	E	MAX_THUNDER_DELAY_TIME
	f	I	F	MIN_THUNDER_TIME
	f	I	G	MAX_THUNDER_TIME
	f	Lorg/slf4j/Logger;	H	LOGGER
	f	I	I	EMPTY_TIME_NO_TICK
	f	I	J	MAX_SCHEDULED_TICKS_PER_TICK
	f	Ljava/util/List;	K	players
	f	Lafm;	L	chunkSource
	f	Lnet/minecraft/server/MinecraftServer;	M	server
	f	Ldqy;	N	serverLevelData
	f	Lcyl;	O	entityTickList
	f	Lcyq;	P	entityManager
	f	Laik;	Q	sleepStatus
	f	I	R	emptyTime
	f	Ldpv;	S	portalForcer
	f	Ldxa;	T	blockTicks
	f	Ldxa;	U	fluidTicks
	f	Ljava/util/Set;	V	navigatingMobs
	f	Z	W	isUpdatingNavigations
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	X	blockEvents
	f	Ljava/util/List;	Y	blockEventsToReschedule
	f	Ljava/util/List;	Z	gameEventMessages
	f	Lgt;	a	END_SPAWN_POINT
	f	Z	aa	handlingTick
	f	Ljava/util/List;	ab	customSpawners
	f	Lcya;	ac	dragonFight
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	ad	dragonParts
	f	Lcgr;	ae	structureManager
	f	Ldkf;	af	structureCheck
	f	Z	ag	tickTime
	f	Z	b	noSave
	f	Lbuo;	c	raids
	f	I	z	MIN_RAIN_DELAY_TIME
c	afo$a	net/minecraft/server/level/ServerLevel$EntityCallbacks
	m	(Lbaq;)V	a	onCreated
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Lbaq;)V	b	onDestroyed
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Lbaq;)V	c	onTickingStart
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Lbaq;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Lbaq;)V	e	onTrackingStart
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Lbaq;)V	f	onTrackingEnd
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Lbaq;)V	g	onSectionChange
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
	f	Lafo;	a	this$0
c	afp	net/minecraft/server/level/ServerPlayer
	m	(Lnet/minecraft/server/MinecraftServer;Lafo;Lcom/mojang/authlib/GameProfile;Lbti;)V	<init>	<init>
		p	1		server
		p	2		world
		p	3		profile
		p	4		publicKey
	m	()Lbtd;	A	getChatVisibility
	m	()I	B	getPermissionLevel
	m	()Z	B_	isSpectator
	m	()V	C	resetLastActionTime
	m	()Lajk;	D	getStats
	m	()Lajj;	E	getRecipeBook
	m	()V	F	updateInvisibilityStatus
	m	()Lbaq;	G	getCamera
	m	()V	H	processPortalCooldown
	m	()J	I	getLastActionTime
	m	()Lrm;	J	getTabListDisplayName
	m	()Z	K	isChangingDimension
	m	()V	L	hasChangedDimension
	m	()Laar;	M	getAdvancements
	m	()Lgt;	N	getRespawnPosition
	m	()F	O	getRespawnAngle
	m	()Laai;	P	getRespawnDimension
	m	()Z	Q	isRespawnForced
	m	()Lhq;	R	getLastSectionPos
	m	()Lso;	S	getAddEntityPacket
	m	()Lagm;	T	getTextFilter
	m	()Z	U	isTextFilteringEnabled
	m	()Z	V	allowsListing
	m	()Lcga;	W	getLevel
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DZ)V	a	doCheckFallDamage
		p	1		heightDifference
		p	3		onGround
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFZZ)V	a	setPlayerInput
		p	1		sidewaysSpeed
		p	2		forwardSpeed
		p	3		jumping
		p	4		sneaking
	m	(I)V	a	setExperiencePoints
		p	1		points
	m	(ILcez;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(ILdwq;)V	a	lambda$awardStat$8
		p	1		score
	m	(Laai;)I	a	resolveChatTypeId
		p	1		typeKey
	m	(Laai;Lgt;FZZ)V	a	setRespawnPosition
		p	1		dimension
		p	2		pos
		p	3		angle
		p	4		forced
		p	5		sendMessage
	m	(Lafo;)Ldpw;	a	findDimensionEntryPoint
		p	1		destination
	m	(Lafo;DDDFF)V	a	teleportTo
		p	1		targetWorld
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		pitch
	m	(Lafo;Lgt;)V	a	createEndPlatform
		p	1		world
		p	2		centerPos
	m	(Lafo;Lgt;ZLcwh;)Ljava/util/Optional;	a	getExitPortal
		p	1		destWorld
		p	2		destPos
		p	3		destIsNether
		p	4		worldBorder
	m	(Lafp;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Lafp;Z)V	a	restoreFrom
		p	1		oldPlayer
		p	2		alive
	m	(Lajd;Lajf;FF)V	a	playNotifySound
		p	1		event
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lajl;)V	a	resetStat
		p	1		stat
	m	(Lajl;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lamk;)V	a	lambda$startSleepInBed$7
		p	1		unit
	m	(Lazl;)V	a	swing
		p	1		hand
	m	(Lazp;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaj;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbaj;Lbaq;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbaj;ZLbaq;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbaq;)V	a	crit
		p	1		target
	m	(Lbaq;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbaq;ILazz;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbaq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbbh;)V	a	lambda$tellNeutralMobsThatIDied$5
		p	1		entity
	m	(Lbod;Lazf;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lbpy;)V	a	onItemPickup
		p	1		item
	m	(Lbqt;)Z	a	lambda$startSleepInBed$6
	m	(Lbte;I)V	a	lambda$drop$10
		p	2		index
	m	(Lbtf;)Z	a	canHarmPlayer
		p	1		player
	m	(Lbvp;)V	a	initMenu
		p	1		screenHandler
	m	(Lcaa;)V	a	updateUsingItem
		p	1		stack
	m	(Lcaa;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcaa;Lazl;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcaa;ZZ)Lbpy;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lcfh;)V	a	untrackChunk
		p	1		chunkPos
	m	(Lcfh;Lso;)V	a	trackChunk
		p	1		chunkPos
		p	2		chunkDataPacket
	m	(Lcfx;)Z	a	setGameMode
		p	1		gameMode
	m	(Lcga;Lgt;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lcss;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Lctn;)V	a	openTextEdit
		p	1		sign
	m	(Lcur;)V	a	onInsideBlock
		p	1		state
	m	(Ldwu;I)V	a	updateScoreForCriteria
		p	1		criterion
		p	2		score
	m	(Lea$a;Lbaq;Lea$a;)V	a	lookAt
		p	1		anchorPoint
		p	2		targetEntity
		p	3		targetAnchor
	m	(Lea$a;Ldvt;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Lgt;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Lgt;Lgy;)Z	a	bedInRange
		p	1		pos
		p	2		direction
	m	(Lhq;)V	a	setLastSectionPos
		p	1		section
	m	(Ljava/lang/String;Ljava/lang/String;ZLrm;)V	a	sendTexturePack
		p	1		url
		p	2		hash
		p	3		required
		p	4		resourcePackPrompt
	m	(Ljava/lang/String;Ljava/lang/String;[Ldwu;)V	a	handleTeamKill
		p	1		playerName
		p	2		team
		p	3		criterions
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;Ljava/lang/String;)Lcfx;	a	readPlayerMode
		p	0		nbt
		p	1		key
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$0
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	(Lrm;Laai;)V	a	sendSystemMessage
		p	1		message
		p	2		typeKey
	m	(Lrm;Laai;Lio/netty/util/concurrent/Future;)V	a	lambda$sendSystemMessage$9
		p	3		future
	m	(Lrm;Lio/netty/util/concurrent/Future;)V	a	lambda$die$3
	m	(Lrm;Lrv;)Lrv;	a	lambda$die$2
		p	1		style
	m	(Lrm;Z)V	a	displayClientMessage
		p	1		message
		p	2		actionBar
	m	(Lru;Lri;Laai;)V	a	sendChatMessage
		p	1		message
		p	2		sender
		p	3		typeKey
	m	(Lxe;)V	a	updateOptions
		p	1		packet
	m	(Lzm;)V	a	sendServerStatus
		p	1		metadata
	m	(Z)Z	a	drop
		p	1		entireStack
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	([Laaj;)V	a	awardRecipesByKey
		p	1		ids
	m	(DDD)V	b	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(I)V	b	setExperienceLevels
		p	1		level
	m	(ILdwq;)V	b	lambda$updateScoreForCriteria$1
		p	1		score
	m	(Laai;)Z	b	acceptsChat
		p	1		typeKey
	m	(Lafo;)Lbaq;	b	changeDimension
		p	1		destination
	m	(Lafp;)Z	b	shouldFilterMessageTo
		p	1		player
	m	(Lazz;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbaq;)V	b	magicCrit
		p	1		target
	m	(Lbbh;)Z	b	lambda$tellNeutralMobsThatIDied$4
		p	0		entity
	m	(Lcfx;)Lcfx;	b	calculateGameModeForNewPlayer
		p	1		backupGameMode
	m	(Lgt;)V	b	startSleeping
		p	1		pos
	m	(Lgt;Lgy;)Z	b	bedBlocked
		p	1		pos
		p	2		direction
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lrm;Laai;)V	b	handleMessageDeliveryFailure
		p	1		message
		p	2		typeKey
	m	(DDD)V	c	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Lafo;)V	c	setLevel
		p	1		world
	m	(Lbaq;)V	c	setCamera
		p	1		entity
	m	(Lgt;)V	c	onChangedBlock
		p	1		pos
	m	(Lpj;)V	c	loadGameTypes
		p	1		nbt
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Lafo;)V	d	fudgeSpawnLocation
		p	1		world
	m	(Lbaq;)V	d	attack
		p	1		target
	m	(Lafo;)V	e	triggerDimensionChangeTriggers
		p	1		origin
	m	()Z	f	isCreative
	m	()V	g	initInventoryMenu
	m	(Lgt;)Z	g	isReachableBedBlock
		p	1		pos
	m	()V	gb	tellNeutralMobsThatIDied
	m	()Z	gc	isPvpAllowed
	m	()V	gd	nextContainerCounter
	m	()V	h	onEnterCombat
	m	()V	i	onLeaveCombat
	m	()Lbzx;	j	createItemCooldowns
	m	()V	k	tick
	m	(Lpj;)V	k	storeGameTypes
		p	1		nbt
	m	()V	l	doTick
	m	()V	m	resetFallDistance
	m	()V	n	trackStartFallingPosition
	m	()V	o	trackEnteredOrExitedLavaOnVehicle
	m	()V	p	stopRiding
	m	()V	q	closeContainer
	m	()V	r	doCloseContainer
	m	()V	s	disconnect
	m	()Z	t	hasDisconnected
	m	()V	u	resetSentInfo
	m	(I)I	u	getCoprime
		p	1		horizontalSpawnArea
	m	()V	v	completeUsingItem
	m	()V	w	onUpdateAbilities
	m	()Lafo;	x	getLevel
	m	()Ljava/lang/String;	y	getIpAddress
	m	()Z	z	canChatInColor
	f	Lagh;	b	connection
	f	I	cA	lastSentFood
	f	Z	cB	lastFoodSaturationZero
	f	I	cC	lastSentExp
	f	I	cD	spawnInvulnerableTime
	f	Lbtd;	cE	chatVisibility
	f	Z	cF	canChatColor
	f	J	cG	lastActionTime
	f	Lbaq;	cH	camera
	f	Z	cI	isChangingDimension
	f	Z	cJ	seenCredits
	f	Lajj;	cK	recipeBook
	f	Ldvt;	cL	levitationStartPos
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	I	cM	levitationStartTime
	f	Z	cN	disconnected
	f	Ldvt;	cO	startingToFallPosition
	f	Ldvt;	cP	enteredNetherPosition
	f	Ldvt;	cQ	enteredLavaOnVehiclePosition
	f	Lhq;	cR	lastSectionPos
	f	Laai;	cS	respawnDimension
	f	Lgt;	cT	respawnPosition
	f	Z	cU	respawnForced
	f	F	cV	respawnAngle
	f	Lagm;	cW	textFilter
	f	Z	cX	textFilteringEnabled
	f	Z	cY	allowsListing
	f	Lbwc;	cZ	containerSynchronizer
	f	Lorg/slf4j/Logger;	co	LOGGER
	f	I	cp	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	f	I	cq	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	f	Laar;	cr	advancements
	f	Lajk;	cs	stats
	f	F	ct	lastRecordedHealthAndAbsorption
	f	I	cu	lastRecordedFoodLevel
	f	I	cv	lastRecordedAirLevel
	f	I	cw	lastRecordedArmor
	f	I	cx	lastRecordedLevel
	f	I	cy	lastRecordedExperience
	f	F	cz	lastSentHealth
	f	Lafq;	d	gameMode
	f	Lbwb;	da	containerListener
	f	I	db	containerCounter
	f	I	e	latency
	f	Z	f	wonGame
c	afp$1	net/minecraft/server/level/ServerPlayer$1
	m	(Lbvp;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lbvp;ILcaa;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lbvp;Lcaa;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lbvp;Lhi;Lcaa;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
	m	(Lbvp;II)V	b	broadcastDataValue
		p	1		handler
		p	2		property
		p	3		value
	f	Lafp;	a	this$0
c	afp$2	net/minecraft/server/level/ServerPlayer$2
	m	(Lbvp;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lbvp;ILcaa;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
	f	Lafp;	a	this$0
c	afp$3	net/minecraft/server/level/ServerPlayer$3
	f	[I	a	$SwitchMap$net$minecraft$world$entity$player$ChatVisiblity
c	afq	net/minecraft/server/level/ServerPlayerGameMode
	m	(Lafp;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Lafo;)V	a	setLevel
		p	1		world
	m	(Lafp;Lcga;Lcaa;Lazl;)Lazm;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Lafp;Lcga;Lcaa;Lazl;Ldvp;)Lazm;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Lcfx;)Z	a	changeGameModeForPlayer
		p	1		gameMode
	m	(Lcfx;Lcfx;)V	a	setGameModeForPlayer
		p	1		gameMode
		p	2		previousGameMode
	m	(Lcur;Lgt;I)F	a	incrementDestroyProgress
		p	1		state
		p	2		pos
		p	3		failedStartMiningTime
	m	(Lgt;)Z	a	destroyBlock
		p	1		pos
	m	(Lgt;ILjava/lang/String;)V	a	destroyAndAck
		p	1		pos
		p	2		sequence
		p	3		reason
	m	(Lgt;Lxw$a;Lgy;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	(Lgt;ZILjava/lang/String;)V	a	debugLogging
		p	1		pos
		p	2		success
		p	3		sequence
		p	4		reason
	m	()Lcfx;	b	getGameModeForPlayer
	m	()Lcfx;	c	getPreviousGameModeForPlayer
	m	()Z	d	isSurvival
	m	()Z	e	isCreative
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcfx;	b	gameModeForPlayer
	f	Lafo;	c	level
	f	Lafp;	d	player
	f	Lcfx;	e	previousGameModeForPlayer
	f	Z	f	isDestroyingBlock
	f	I	g	destroyProgressStart
	f	Lgt;	h	destroyPos
	f	I	i	gameTicks
	f	Z	j	hasDelayedDestroy
	f	Lgt;	k	delayedDestroyPos
	f	I	l	delayedTickStart
	f	I	m	lastSentState
c	afr	net/minecraft/server/level/ThreadedLevelLightEngine
	m	(Lcwy;Lafb;ZLayf;Laye;)V	<init>	<init>
		p	1		chunkProvider
		p	2		chunkStorage
		p	3		hasBlockLight
		p	4		processor
		p	5		executor
	m	()V	a	tryScheduleUpdate
	m	(I)V	a	setTaskPerBatch
		p	1		taskBatchSize
	m	(IILafr$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		stage
		p	4		task
	m	(IILjava/util/function/IntSupplier;Lafr$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		completedLevelSupplier
		p	4		stage
		p	5		task
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lafr$a;Ljava/lang/Runnable;)V	a	lambda$addTask$13
	m	(Lcfh;)V	a	updateChunkStatus
		p	1		pos
	m	(Lcfh;Lcwm;)Lcwm;	a	lambda$retainData$17
	m	(Lcfh;Ljava/lang/Runnable;)V	a	lambda$lightChunk$24
	m	(Lcfh;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lcgj;Lhq;Lcwr;Z)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
		p	4		nonEdge
	m	(Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	retainData
		p	1		chunk
	m	(Lcwm;Lcfh;)Lcwm;	a	lambda$lightChunk$23
	m	(Lcwm;Lcfh;Z)V	a	lambda$lightChunk$21
	m	(Lcwm;Lgt;)V	a	lambda$lightChunk$20
		p	2		pos
	m	(Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	a	lightChunk
		p	1		chunk
		p	2		excludeBlocks
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhq;)Ljava/lang/String;	a	lambda$queueSectionData$12
	m	(Lhq;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lcfh;)Ljava/lang/String;	b	lambda$retainData$18
	m	(Lcfh;Ljava/lang/Runnable;)V	b	lambda$retainData$19
		p	2		task
	m	(Lcfh;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lcgj;Lhq;Lcwr;Z)V	b	lambda$queueSectionData$11
	m	(Lgt;)Ljava/lang/String;	b	lambda$checkBlock$1
	m	(Lhq;Z)Ljava/lang/String;	b	lambda$updateSectionStatus$7
	m	(Lcfh;)Ljava/lang/String;	c	lambda$retainData$16
	m	(Lcfh;Z)Ljava/lang/String;	c	lambda$lightChunk$22
	m	(Lgt;)V	c	lambda$checkBlock$0
	m	(Lhq;Z)V	c	lambda$updateSectionStatus$6
	m	(Lcfh;)Ljava/lang/String;	d	lambda$updateChunkStatus$4
	m	(Lcfh;Z)V	d	lambda$retainData$15
	m	()V	e	runUpdate
	m	(Lcfh;)V	e	lambda$updateChunkStatus$3
	m	(Lcfh;Z)Ljava/lang/String;	e	lambda$enableLightSources$9
	m	()V	f	lambda$tryScheduleUpdate$25
	m	(Lcfh;Z)V	f	lambda$enableLightSources$8
	m	()I	g	lambda$retainData$14
	m	()I	h	lambda$queueSectionData$10
	m	()I	i	lambda$updateSectionStatus$5
	m	()I	j	lambda$updateChunkStatus$2
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Layf;	e	taskMailbox
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	f	lightTasks
	f	Lafb;	g	chunkMap
	f	Laye;	h	sorterMailbox
	f	I	i	taskPerBatch
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	j	scheduled
c	afr$a	net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	m	()[Lafr$a;	a	$values
	f	Lafr$a;	a	PRE_UPDATE
	f	Lafr$a;	b	POST_UPDATE
	f	[Lafr$a;	c	$VALUES
c	afs	net/minecraft/server/level/Ticket
	m	(Laft;ILjava/lang/Object;)V	<init>	<init>
		p	1		type
		p	2		level
		p	3		argument
	m	()Laft;	a	getType
	m	(J)V	a	setCreatedTick
		p	1		tickCreated
	m	(Lafs;)I	a	compareTo
	m	()I	b	getTicketLevel
	m	(J)Z	b	timedOut
		p	1		currentTick
	f	Laft;	a	type
	f	I	b	ticketLevel
	f	Ljava/lang/Object;	c	key
	f	J	d	createdTick
c	aft	net/minecraft/server/level/TicketType
	m	(Ljava/lang/String;Ljava/util/Comparator;J)V	<init>	<init>
		p	1		name
		p	2		argumentComparator
		p	3		expiryTicks
	m	()Ljava/util/Comparator;	a	getComparator
	m	(Lamk;Lamk;)I	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/util/Comparator;)Laft;	a	create
		p	0		name
		p	1		argumentComparator
	m	(Ljava/lang/String;Ljava/util/Comparator;I)Laft;	a	create
		p	0		name
		p	1		argumentComparator
		p	2		expiryTicks
	m	()J	b	timeout
	m	(Lamk;Lamk;)I	b	lambda$static$0
	f	Laft;	a	START
	f	Laft;	b	DRAGON
	f	Laft;	c	PLAYER
	f	Laft;	d	FORCED
	f	Laft;	e	LIGHT
	f	Laft;	f	PORTAL
	f	Laft;	g	POST_TELEPORT
	f	Laft;	h	UNKNOWN
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Comparator;	j	comparator
	f	J	k	timeout
c	afu	net/minecraft/server/level/TickingTracker
	m	()V	a	runAllUpdates
	m	(I)V	a	replacePlayerTicketsLevel
		p	1		level
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JLafs;)V	a	addTicket
		p	1		pos
		p	3		ticket
	m	(Laft;Lcfh;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lama;)I	a	getTicketLevelAt
		p	1		ticket
	m	(Lcfh;)I	a	getLevel
		p	1		pos
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JLafs;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Laft;Lcfh;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Ljava/lang/String;	d	getTicketDebugString
		p	1		pos
	m	(J)Lama;	g	getTickets
		p	1		pos
	m	(J)Lama;	h	lambda$getTickets$0
		p	0		p
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	INITIAL_TICKET_LIST_CAPACITY
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	c	tickets
c	afv	net/minecraft/server/level/WorldGenRegion
	m	(Lafo;Ljava/util/List;Lcwq;I)V	<init>	<init>
		p	1		world
		p	2		chunks
		p	3		status
		p	4		placementRadius
	m	()J	B	getSeed
	m	()Lafo;	D	getLevel
	m	()Lcwp;	I	getChunkSource
	m	()Ldwz;	J	getFluidTicks
	m	()Ldwz;	K	getBlockTicks
	m	()Lcfh;	a	getCenter
	m	(DDDDLjava/util/function/Predicate;)Lbtf;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(II)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Lhc;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IILcwq;Z)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Lbaq;Ldvo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbtf;ILgt;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lbtf;Lgt;Lajd;Lajf;FF)V	a	playSound
		p	1		player
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcfh;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lcym;Ldvo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Lcyy;Ldvt;Lcyy$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Lczu$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgt;Lcur;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgt;ZLbaq;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lgy;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lim;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lbaq;)Z	b	addFreshEntity
		p	1		entity
	m	(Lgt;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)Lazk;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(Lgt;)Z	e_	ensureCanWrite
		p	1		pos
	m	(Lgt;)V	f	markPosForPostprocessing
		p	1		pos
	m	(Lgt;)Ldxg;	j	lambda$new$1
		p	1		pos
	m	(Lgt;)Ldxg;	k	lambda$new$0
		p	1		pos
	m	()Z	k_	isClientSide
	m	()Ldop;	l_	getLightEngine
	m	()I	m_	getSeaLevel
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldqq;	n_	getLevelData
	m	()I	o_	getSkyDarken
	m	()Lcwh;	p_	getWorldBorder
	m	()Lcxx;	q_	dimensionType
	m	()Lalu;	r_	getRandom
	m	()Lhn;	s	registryAccess
	m	()Lcgy;	s_	getBiomeManager
	m	()J	t_	nextSubTickCount
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	m	()Ljava/util/List;	w	players
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	cache
	f	Lcwm;	c	center
	f	I	d	size
	f	Lafo;	e	level
	f	J	f	seed
	f	Ldqq;	g	levelData
	f	Lalu;	h	random
	f	Lcxx;	i	dimensionType
	f	Ldxi;	j	blockTicks
	f	Ldxi;	k	fluidTicks
	f	Lcgy;	l	biomeManager
	f	Lcfh;	m	firstPos
	f	Lcfh;	n	lastPos
	f	Lcgr;	o	structureManager
	f	Lcwq;	p	generatingStatus
	f	I	q	writeRadiusCutoff
	f	Ljava/util/function/Supplier;	r	currentlyGenerating
	f	Ljava/util/concurrent/atomic/AtomicLong;	s	subTickCount
	f	Laaj;	t	WORLDGEN_REGION_RANDOM
c	afw	net/minecraft/server/level/package-info
c	afx	net/minecraft/server/level/progress/ChunkProgressListener
	m	()V	a	start
	m	(Lcfh;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcfh;Lcwq;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
c	afy	net/minecraft/server/level/progress/ChunkProgressListenerFactory
	m	(I)Lafx;	create	create
		p	1		radius
c	afz	net/minecraft/server/level/progress/LoggerChunkProgressListener
	m	(I)V	<init>	<init>
		p	1		radius
	m	()V	a	start
	m	(Lcfh;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcfh;Lcwq;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	()I	c	getProgress
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	maxCount
	f	I	c	count
	f	J	d	startTime
	f	J	e	nextTickTime
c	aga	net/minecraft/server/level/progress/ProcessorChunkProgressListener
	m	(Lafx;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		progressListener
		p	2		executor
	m	()V	a	start
	m	(Lafx;Ljava/util/concurrent/Executor;)Laga;	a	createStarted
		p	0		progressListener
		p	1		executor
	m	(Lcfh;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcfh;Lcwq;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	(Lcfh;)V	b	lambda$updateSpawnPos$0
	m	(Lcfh;Lcwq;)V	b	lambda$onStatusChange$1
	f	Lafx;	a	delegate
	f	Layf;	b	mailbox
c	agb	net/minecraft/server/level/progress/StoringChunkProgressListener
	m	(I)V	<init>	<init>
		p	1		radius
	m	()V	a	start
	m	(II)Lcwq;	a	getStatus
		p	1		x
		p	2		z
	m	(Lcfh;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcfh;Lcwq;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	()I	c	getFullDiameter
	m	()I	d	getDiameter
	m	()I	e	getProgress
	f	Lafz;	a	delegate
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	statuses
	f	Lcfh;	c	spawnPos
	f	I	d	fullDiameter
	f	I	e	radius
	f	I	f	diameter
	f	Z	g	started
c	agc	net/minecraft/server/level/progress/package-info
c	agd	net/minecraft/server/network/FilteredText
	m	()Z	a	isFiltered
	m	(Lafp;Lafp;)Ljava/lang/Object;	a	filter
		p	1		sender
		p	2		receiver
	m	(Ldr;Lafp;)Ljava/lang/Object;	a	filter
		p	1		source
		p	2		receiver
	m	(Ljava/lang/Object;)Lagd;	a	passThrough
		p	0		filterable
	m	(Ljava/util/function/Function;)Lagd;	a	map
		p	1		mapper
	m	()Z	b	isFullyFiltered
	m	(Ljava/lang/Object;)Lagd;	b	fullyFiltered
		p	0		filterable
	m	()Ljava/lang/Object;	c	raw
	m	(Ljava/lang/Object;)Ljava/lang/Object;	c	filteredOrElse
		p	1		filterable
	m	()Ljava/lang/Object;	d	filtered
	f	Lagd;	a	EMPTY_STRING
	f	Ljava/lang/Object;	b	raw
	f	Ljava/lang/Object;	c	filtered
c	age	net/minecraft/server/network/LegacyQueryHandler
	m	(Lagg;)V	<init>	<init>
		p	1		networkIo
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	sendFlushAndClose
		p	1		ctx
		p	2		buf
	m	(Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	createReply
		p	1		s
	f	I	a	FAKE_PROTOCOL_VERSION
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lagg;	c	serverConnectionListener
c	agf	net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lqv;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	()Lqv;	a	getConnection
	m	(Lrm;)V	a	onDisconnect
		p	1		reason
	m	(Lyu;)V	a	handleIntention
		p	1		packet
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Lqv;	b	connection
c	agg	net/minecraft/server/network/ServerConnectionListener
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Ljava/net/SocketAddress;	a	startMemoryChannel
	m	(Ljava/net/InetAddress;I)V	a	startTcpServerListener
		p	1		address
		p	2		port
	m	(Lqv;Lrm;Lio/netty/util/concurrent/Future;)V	a	lambda$tick$2
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
	m	()Ljava/util/List;	e	getConnections
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	f	lambda$static$1
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	g	lambda$static$0
	f	Lalk;	a	SERVER_EVENT_GROUP
	f	Lalk;	b	SERVER_EPOLL_EVENT_GROUP
	f	Z	c	running
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
c	agg$1	net/minecraft/server/network/ServerConnectionListener$1
	f	Lagg;	a	this$0
c	agg$2	net/minecraft/server/network/ServerConnectionListener$2
	f	Lagg;	a	this$0
c	agg$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	m	(II)V	<init>	<init>
		p	1		baseDelay
		p	2		extraDelay
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	a	delayDownstream
		p	1		ctx
		p	2		msg
	m	(Lio/netty/util/Timeout;)V	a	onTimeout
		p	1		timeout
	f	Lio/netty/util/Timer;	a	TIMER
	f	I	b	delay
	f	I	c	jitter
	f	Ljava/util/List;	d	queuedMessages
c	agg$a$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	<init>	<init>
		p	1		context
		p	2		message
	f	Lio/netty/channel/ChannelHandlerContext;	a	ctx
	f	Ljava/lang/Object;	b	msg
c	agh	net/minecraft/server/network/ServerGamePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lqv;Lafp;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		player
	m	()Lqv;	a	getConnection
	m	(D)D	a	clampHorizontal
		p	0		d
	m	(DDDFF)V	a	dismount
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFLjava/util/Set;)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
	m	(DDDFFLjava/util/Set;Z)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
		p	10		shouldDismount
	m	(I)V	a	ackBlockChangesUpTo
		p	1		sequence
	m	(ILio/netty/util/concurrent/Future;)V	a	lambda$sendPreviewResponse$11
	m	(ILjava/util/List;)V	a	lambda$handleEditBook$4
		p	2		texts
	m	(ILrm;)V	a	sendPreviewResponse
		p	1		queryId
		p	2		preview
	m	(Lafp;Lcaa;)Z	a	wasBlockPlacementAttempt
		p	0		player
		p	1		stack
	m	(Lagd;)V	a	broadcastChatMessage
		p	1		message
	m	(Lagd;Ljava/util/List;I)V	a	signBook
		p	1		title
		p	2		pages
		p	3		slotId
	m	(Lbaq;)Z	a	noBlocksAround
		p	1		entity
	m	(Lcgd;Ldvo;)Z	a	isPlayerCollidingWithAnythingNew
		p	1		world
		p	2		box
	m	(Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/concurrent/CompletableFuture;	a	getPreviewedArgument
		p	1		builder
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;Ljava/util/function/BiFunction;)V	a	filterTextPacket
		p	1		text
		p	2		consumer
		p	3		backingFilterer
	m	(Ljava/lang/String;)Z	a	isChatMessageIllegal
		p	0		message
	m	(Ljava/lang/String;Ljava/time/Instant;)Z	a	tryHandleChat
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	filterTextPacket
		p	1		text
		p	2		consumer
	m	(Ljava/time/Instant;)Z	a	isChatExpired
		p	1		timestamp
	m	(Ljava/util/List;I)V	a	updateBookContents
		p	1		pages
		p	2		slotId
	m	(Ljava/util/List;Ljava/util/function/Consumer;)V	a	filterTextPacket
		p	1		texts
		p	2		consumer
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;Lcaa;)V	a	updateBookPages
		p	1		messages
		p	2		postProcessor
		p	3		book
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$filterTextPacket$1
		p	3		message
	m	(Ljava/util/function/UnaryOperator;Lagd;)Lqa;	a	lambda$updateBookPages$6
		p	1		message
	m	(Lrm;)V	a	onDisconnect
		p	1		reason
	m	(Lrm;Lio/netty/util/concurrent/Future;)V	a	lambda$disconnect$0
	m	(Lrm;Lrm;)Lrm;	a	lambda$queryChatPreview$12
		p	1		decorated
	m	(Lso;)V	a	send
		p	1		packet
	m	(Lso;Lio/netty/util/concurrent/GenericFutureListener;)V	a	send
		p	1		packet
		p	2		listener
	m	(Lwx;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Lwy;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Lwz;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lxa;)V	a	handleChatCommand
		p	1		packet
	m	(Lxb;)V	a	handleChat
		p	1		packet
	m	(Lxb;Lagd;)V	a	handleChat
		p	1		packet
		p	2		message
	m	(Lxc;)V	a	handleChatPreview
		p	1		packet
	m	(Lxd;)V	a	handleClientCommand
		p	1		packet
	m	(Lxe;)V	a	handleClientInformation
		p	1		packet
	m	(Lxf;)V	a	handleCustomCommandSuggestions
		p	1		packet
	m	(Lxf;Lcom/mojang/brigadier/suggestion/Suggestions;)V	a	lambda$handleCustomCommandSuggestions$2
	m	(Lxg;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Lxh;)V	a	handleContainerClick
		p	1		packet
	m	(Lxi;)V	a	handleContainerClose
		p	1		packet
	m	(Lxj;)V	a	handleCustomPayload
		p	1		packet
	m	(Lxk;)V	a	handleEditBook
		p	1		packet
	m	(Lxl;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Lxm;)V	a	handleInteract
		p	1		packet
	m	(Lxn;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Lxo;)V	a	handleKeepAlive
		p	1		packet
	m	(Lxp;)V	a	handleLockDifficulty
		p	1		packet
	m	(Lxq;)V	a	handleMovePlayer
		p	1		packet
	m	(Lxr;)V	a	handleMoveVehicle
		p	1		packet
	m	(Lxs;)V	a	handlePaddleBoat
		p	1		packet
	m	(Lxt;)V	a	handlePickItem
		p	1		packet
	m	(Lxu;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lxu;Lccs;)V	a	lambda$handlePlaceRecipe$13
		p	2		recipe
	m	(Lxv;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lxw;)V	a	handlePlayerAction
		p	1		packet
	m	(Lxx;)V	a	handlePlayerCommand
		p	1		packet
	m	(Lxy;)V	a	handlePlayerInput
		p	1		packet
	m	(Lxz;)V	a	handlePong
		p	1		packet
	m	(Lya;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Lyb;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Lyc;)V	a	handleRenameItem
		p	1		packet
	m	(Lyd;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Lye;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Lyf;)V	a	handleSelectTrade
		p	1		packet
	m	(Lyg;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Lyh;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Lyi;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Lyj;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Lyk;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Lyl;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Lym;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Lyn;)V	a	handleSignUpdate
		p	1		packet
	m	(Lyn;Ljava/util/List;)V	a	updateSignText
		p	1		packet
		p	2		signText
	m	(Lyo;)V	a	handleAnimate
		p	1		packet
	m	(Lyp;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Lyq;)V	a	handleUseItemOn
		p	1		packet
	m	(Lyr;)V	a	handleUseItem
		p	1		packet
	m	(D)D	b	clampVertical
		p	0		d
	m	(DDDFF)V	b	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(ILjava/util/List;)V	b	lambda$handleEditBook$3
		p	2		texts
	m	(ILrm;)V	b	lambda$handleChatPreview$9
		p	2		decorated
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	queryPreview
		p	1		query
	m	(Ljava/time/Instant;)Z	b	updateChatOrder
		p	1		timestamp
	m	(Lrm;)V	b	disconnect
		p	1		reason
	m	(Lso;)Ljava/lang/String;	b	lambda$send$7
	m	(Lxb;Lagd;)V	b	lambda$handleChat$8
		p	2		message
	m	(Lxc;)Ljava/util/concurrent/CompletableFuture;	b	lambda$handleChatPreview$10
	m	(Lyn;Ljava/util/List;)V	b	lambda$handleSignUpdate$14
		p	2		texts
	m	()V	c	tick
	m	(DDDFF)Z	c	containsInvalidValues
		p	0		x
		p	2		y
		p	4		z
		p	6		yaw
		p	7		pitch
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	c	queryChatPreview
		p	1		query
	m	()V	d	resetPosition
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	d	queryCommandPreview
		p	1		query
	m	()Lafp;	e	getPlayer
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$signBook$5
		p	0		text
	m	()Z	f	isSingleplayerOwner
	m	()Z	g	resetLastActionTime
	m	()V	h	detectRateSpam
	f	D	A	vehicleLastGoodZ
	f	Ldvt;	B	awaitingPositionFromClient
	f	I	C	awaitingTeleport
	f	I	D	awaitingTeleportTime
	f	Z	E	clientIsFloating
	f	I	F	aboveGroundTickCount
	f	Z	G	clientVehicleIsFloating
	f	I	H	aboveGroundVehicleTickCount
	f	I	I	receivedMovePacketCount
	f	I	J	knownMovePacketCount
	f	Lrh;	K	chatPreviewThrottler
	f	Ljava/util/concurrent/atomic/AtomicReference;	L	lastChatTimeStamp
	f	D	a	MAX_INTERACTION_DISTANCE
	f	Lqv;	b	connection
	f	Lafp;	c	player
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	LATENCY_CHECK_INTERVAL
	f	I	f	NO_BLOCK_UPDATES_TO_ACK
	f	Lnet/minecraft/server/MinecraftServer;	g	server
	f	I	h	tickCount
	f	I	i	ackBlockChangesUpTo
	f	J	j	keepAliveTime
	f	Z	k	keepAlivePending
	f	J	l	keepAliveChallenge
	f	I	m	chatSpamTickCount
	f	I	n	dropSpamTickCount
	f	D	o	firstGoodX
	f	D	p	firstGoodY
	f	D	q	firstGoodZ
	f	D	r	lastGoodX
	f	D	s	lastGoodY
	f	D	t	lastGoodZ
	f	Lbaq;	u	lastVehicle
	f	D	v	vehicleFirstGoodX
	f	D	w	vehicleFirstGoodY
	f	D	x	vehicleFirstGoodZ
	f	D	y	vehicleLastGoodX
	f	D	z	vehicleLastGoodY
c	agh$1	net/minecraft/server/network/ServerGamePacketListenerImpl$1
	m	()V	a	onAttack
	m	(Lazl;)V	a	onInteraction
		p	1		hand
	m	(Lazl;Lagh$a;)V	a	performInteraction
		p	1		hand
		p	2		action
	m	(Lazl;Ldvt;)V	a	onInteraction
		p	1		hand
		p	2		pos
	m	(Ldvt;Lafp;Lbaq;Lazl;)Lazm;	a	lambda$onInteraction$0
		p	1		player
		p	2		entity
		p	3		hand
	f	Lbaq;	a	val$target
	f	Lagh;	b	this$0
c	agh$2	net/minecraft/server/network/ServerGamePacketListenerImpl$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	f	[I	b	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	f	[I	c	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	f	[I	d	$SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
c	agh$a	net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
	m	(Lafp;Lbaq;Lazl;)Lazm;	run	run
		p	1		player
		p	2		entity
		p	3		hand
c	agi	net/minecraft/server/network/ServerHandshakePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lqv;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	()Lqv;	a	getConnection
	m	(Lrm;)V	a	onDisconnect
		p	1		reason
	m	(Lyu;)V	a	handleIntention
		p	1		packet
	f	Lrm;	a	IGNORE_STATUS_REASON
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lqv;	c	connection
c	agi$1	net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	f	[I	a	$SwitchMap$net$minecraft$network$ConnectionProtocol
c	agj	net/minecraft/server/network/ServerLoginPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lqv;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	()Lqv;	a	getConnection
	m	(I)Z	a	lambda$isValidUsername$1
		p	0		c
	m	(Lafp;)V	a	placeNewPlayer
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile;	a	createFakeProfile
		p	1		profile
	m	(Lio/netty/channel/ChannelFuture;)V	a	lambda$handleAcceptedLogin$0
	m	(Ljava/lang/String;)Z	a	isValidUsername
		p	0		name
	m	(Lrm;)V	a	onDisconnect
		p	1		reason
	m	(Lze;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Lzf;)V	a	handleHello
		p	1		packet
	m	(Lzf;Lalw;Z)Lbti;	a	validatePublicKey
		p	0		packet
		p	1		servicesSignatureVerifier
		p	2		shouldThrowOnMissingKey
	m	(Lzg;)V	a	handleKey
		p	1		packet
	m	(Lrm;)V	b	disconnect
		p	1		reason
	m	()V	c	tick
	m	()V	d	handleAcceptedLogin
	m	()Ljava/lang/String;	e	getUserName
	f	Lqv;	a	connection
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	UNIQUE_THREAD_ID
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_TICKS_BEFORE_LOGIN
	f	Lalu;	e	RANDOM
	f	Lrm;	f	MISSING_PROFILE_PUBLIC_KEY
	f	Lrm;	g	INVALID_SIGNATURE
	f	Lrm;	h	INVALID_PUBLIC_KEY
	f	[B	i	nonce
	f	Lnet/minecraft/server/MinecraftServer;	j	server
	f	Lagj$b;	k	state
	f	I	l	tick
	f	Lcom/mojang/authlib/GameProfile;	m	gameProfile
	f	Ljava/lang/String;	n	serverId
	f	Lafp;	o	delayedAcceptPlayer
	f	Lbti;	p	playerProfilePublicKey
c	agj$1	net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	m	()Ljava/net/InetAddress;	a	getAddress
	f	Ljava/lang/String;	a	val$digest
	f	Lagj;	b	this$0
c	agj$a	net/minecraft/server/network/ServerLoginPacketListenerImpl$PublicKeyParseException
	m	(Lrm;)V	<init>	<init>
		p	1		messageText
	m	(Lrm;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		messageText
		p	2		cause
c	agj$b	net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	m	()[Lagj$b;	a	$values
	f	Lagj$b;	a	HELLO
	f	Lagj$b;	b	KEY
	f	Lagj$b;	c	AUTHENTICATING
	f	Lagj$b;	d	NEGOTIATING
	f	Lagj$b;	e	READY_TO_ACCEPT
	f	Lagj$b;	f	DELAY_ACCEPT
	f	Lagj$b;	g	ACCEPTED
	f	[Lagj$b;	h	$VALUES
c	agk	net/minecraft/server/network/ServerPlayerConnection
	m	(Lso;)V	a	send
		p	1		packet
	m	()Lafp;	e	getPlayer
c	agl	net/minecraft/server/network/ServerStatusPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lqv;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	()Lqv;	a	getConnection
	m	(Lrm;)V	a	onDisconnect
		p	1		reason
	m	(Lzo;)V	a	handlePingRequest
		p	1		packet
	m	(Lzp;)V	a	handleStatusRequest
		p	1		packet
	f	Lrm;	a	DISCONNECT_REASON
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lqv;	c	connection
	f	Z	d	hasRequestedStatus
c	agm	net/minecraft/server/network/TextFilter
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	(Lrm;)Ljava/util/concurrent/CompletableFuture;	a	processStreamComponent
		p	1		text
	m	(Lrm;Lagd;)Lagd;	a	lambda$processStreamComponent$0
		p	1		filteredMessage
	m	()V	b	leave
	f	Lagm;	a	DUMMY
c	agm$1	net/minecraft/server/network/TextFilter$1
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
c	agn	net/minecraft/server/network/TextFilterClient
	m	(Ljava/net/URL;Lagn$c;Ljava/net/URL;Lagn$b;Ljava/net/URL;Lagn$b;Ljava/lang/String;Lagn$a;I)V	<init>	<init>
		p	1		chatEndpoint
		p	2		messageEncoder
		p	3		joinEndpoint
		p	4		joinEncoder
		p	5		leaveEndpoint
		p	6		leaveEncoder
		p	7		apiKey
		p	8		ignorer
		p	9		parallelism
	m	(ILjava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$2
		p	3		profile
		p	4		message
	m	(Lagn$b;Lcom/mojang/authlib/GameProfile;Ljava/net/URL;)V	a	lambda$processJoinOrLeave$4
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getEndpointFromConfig
		p	0		json
		p	1		key
		p	2		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject;	a	processRequestResponse
		p	1		payload
		p	2		endpoint
	m	(Lcom/mojang/authlib/GameProfile;)Lagm;	a	createContext
		p	1		gameProfile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lagn$a;)Lagd;	a	lambda$requestMessageProcessing$5
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lagn$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	requestMessageProcessing
		p	1		gameProfile
		p	2		message
		p	3		ignorer
		p	4		executor
	m	(Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lagn$b;Ljava/util/concurrent/Executor;)V	a	processJoinOrLeave
		p	1		gameProfile
		p	2		endpoint
		p	3		profileEncoder
		p	4		executor
	m	(Ljava/io/InputStream;)V	a	drainStream
		p	1		inputStream
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$static$0
		p	0		runnable
	m	(Ljava/lang/String;)Lagn;	a	createFromConfig
		p	0		config
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$1
		p	2		profile
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$3
		p	3		profile
		p	4		message
	m	(Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;	a	getEndpoint
		p	0		root
		p	1		endpoints
		p	2		key
		p	3		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)V	b	processRequest
		p	1		payload
		p	2		endpoint
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection;	c	makeRequest
		p	1		payload
		p	2		endpoint
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	WORKER_COUNT
	f	Ljava/util/concurrent/ThreadFactory;	c	THREAD_FACTORY
	f	Ljava/lang/String;	d	DEFAULT_ENDPOINT
	f	Ljava/net/URL;	e	chatEndpoint
	f	Lagn$c;	f	chatEncoder
	f	Ljava/net/URL;	g	joinEndpoint
	f	Lagn$b;	h	joinEncoder
	f	Ljava/net/URL;	i	leaveEndpoint
	f	Lagn$b;	j	leaveEncoder
	f	Ljava/lang/String;	k	authKey
	f	Lagn$a;	l	chatIgnoreStrategy
	f	Ljava/util/concurrent/ExecutorService;	m	workerPool
c	agn$a	net/minecraft/server/network/TextFilterClient$IgnoreStrategy
	m	(ILjava/lang/String;I)Z	a	lambda$ignoreOverThreshold$2
		p	1		hashes
		p	2		hashesSize
	m	(Ljava/lang/String;I)Z	a	lambda$static$1
		p	0		hashes
		p	1		hashesSize
	m	(Ljava/lang/String;I)Z	b	lambda$static$0
		p	0		hashes
		p	1		hashesSize
	m	(I)Lagn$a;	ignoreOverThreshold	ignoreOverThreshold
		p	0		hashesToDrop
	m	(I)Lagn$a;	select	select
		p	0		hashesToDrop
	m	(Ljava/lang/String;I)Z	shouldIgnore	shouldIgnore
		p	1		hashes
		p	2		hashesSize
	f	Lagn$a;	a	NEVER_IGNORE
	f	Lagn$a;	b	IGNORE_FULLY_FILTERED
c	agn$b	net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
c	agn$c	net/minecraft/server/network/TextFilterClient$MessageEncoder
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
		p	2		message
c	agn$d	net/minecraft/server/network/TextFilterClient$PlayerContext
	m	(Lagn;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		gameProfile
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/lang/Throwable;)Ljava/util/List;	a	lambda$processMessageBundle$1
		p	0		throwable
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	lambda$processMessageBundle$0
		p	1		text
	f	Lagn;	b	this$0
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Ljava/util/concurrent/Executor;	d	streamExecutor
c	agn$e	net/minecraft/server/network/TextFilterClient$RequestFailedException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	ago	net/minecraft/server/network/package-info
c	agp	net/minecraft/server/package-info
c	agq	net/minecraft/server/packs/AbstractPackResources
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		base
	m	()Ljava/lang/String;	a	getName
	m	(Lagu;Laaj;)Ljava/io/InputStream;	a	getResource
		p	1		type
		p	2		id
	m	(Lagx;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Lagx;Ljava/io/InputStream;)Ljava/lang/Object;	a	getMetadataFromStream
		p	0		metaReader
		p	1		inputStream
	m	(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;	a	getRelativePath
		p	0		base
		p	1		target
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResource
		p	1		name
	m	(Lagu;Laaj;)Z	b	hasResource
		p	1		type
		p	2		id
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	getRootResource
		p	1		fileName
	m	(Lagu;Laaj;)Ljava/lang/String;	c	getPathFromLocation
		p	0		type
		p	1		id
	m	(Ljava/lang/String;)Z	c	hasResource
		p	1		name
	m	(Ljava/lang/String;)V	d	logWarning
		p	1		namespace
	f	Ljava/io/File;	a	file
	f	Lorg/slf4j/Logger;	b	LOGGER
c	agr	net/minecraft/server/packs/FilePackResources
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		base
	m	(Lagu;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lagu;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		allowedPathPredicate
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResource
		p	1		name
	m	()Ljava/util/zip/ZipFile;	b	getOrCreateZipFile
	m	(Ljava/lang/String;)Z	c	hasResource
		p	1		name
	f	Lcom/google/common/base/Splitter;	b	SPLITTER
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/util/zip/ZipFile;	f	zipFile
c	ags	net/minecraft/server/packs/FolderPackResources
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		base
	m	(Lagu;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lagu;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		allowedPathPredicate
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	validatePath
		p	0		file
		p	1		filename
	m	(Ljava/io/File;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	listResources
		p	1		file
		p	2		namespace
		p	3		foundIds
		p	4		rootDirectory
		p	5		allowedPathPredicate
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResource
		p	1		name
	m	(Ljava/lang/String;)Z	c	hasResource
		p	1		name
	m	(Ljava/lang/String;)Ljava/io/File;	e	getFile
		p	1		name
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Z	e	ON_WINDOWS
	f	Lcom/google/common/base/CharMatcher;	f	BACKSLASH_MATCHER
c	agt	net/minecraft/server/packs/PackResources
	m	()Ljava/lang/String;	a	getName
	m	(Lagu;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lagu;Laaj;)Ljava/io/InputStream;	a	getResource
		p	1		type
		p	2		id
	m	(Lagu;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		allowedPathPredicate
	m	(Lagx;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Lagu;Laaj;)Z	b	hasResource
		p	1		type
		p	2		id
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	getRootResource
		p	1		fileName
	f	Ljava/lang/String;	c	METADATA_EXTENSION
	f	Ljava/lang/String;	d	PACK_META
c	agu	net/minecraft/server/packs/PackType
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/mojang/bridge/game/PackType;)V	<init>	<init>
		p	3		name
		p	4		packType
	m	()Ljava/lang/String;	a	getDirectory
	m	(Lcom/mojang/bridge/game/GameVersion;)I	a	getVersion
		p	1		gameVersion
	m	()[Lagu;	b	$values
	f	Lagu;	a	CLIENT_RESOURCES
	f	Lagu;	b	SERVER_DATA
	f	Ljava/lang/String;	c	directory
	f	Lcom/mojang/bridge/game/PackType;	d	bridgeType
	f	[Lagu;	e	$VALUES
c	agv	net/minecraft/server/packs/ResourcePackFileNotFoundException
	m	(Ljava/io/File;Ljava/lang/String;)V	<init>	<init>
		p	1		packSource
		p	2		resource
c	agw	net/minecraft/server/packs/VanillaPackResources
	m	(Lagy;[Ljava/lang/String;)V	<init>	<init>
		p	1		metadata
		p	2		namespaces
	m	()Ljava/lang/String;	a	getName
	m	(Laaj;)Ljava/util/Optional;	a	lambda$asProvider$4
		p	1		id
	m	(Lagu;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lagu;Laaj;)Ljava/io/InputStream;	a	getResource
		p	1		type
		p	2		id
	m	(Lagu;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection;	a	getResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		allowedPathPredicate
	m	(Lagx;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Ljava/lang/String;)Ljava/io/InputStream;	a	getResourceAsStream
		p	1		path
	m	(Ljava/lang/String;Ljava/net/URL;)Z	a	isResourceUrlValid
		p	0		fileName
		p	1		url
	m	(Ljava/net/URI;)Ljava/nio/file/Path;	a	safeGetPath
		p	0		uri
	m	(Ljava/nio/file/Path;)Z	a	lambda$getResources$1
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/function/Consumer;)V	a	lambda$getResources$2
		p	2		path
	m	(Ljava/util/Collection;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V	a	getResources
		p	0		results
		p	1		namespace
		p	2		root
		p	3		prefix
		p	4		allowedPathPredicate
	m	()Lahx;	b	asProvider
	m	(Laaj;)Ljava/io/InputStream;	b	lambda$asProvider$3
	m	(Lagu;Laaj;)Z	b	hasResource
		p	1		type
		p	2		id
	m	(Ljava/lang/String;)Ljava/io/InputStream;	b	getRootResource
		p	1		fileName
	m	()Lcom/google/common/collect/ImmutableMap;	c	lambda$static$0
	m	(Lagu;Laaj;)Ljava/io/InputStream;	c	getResourceAsStream
		p	1		type
		p	2		id
	m	(Lagu;Laaj;)Ljava/lang/String;	d	createPath
		p	0		type
		p	1		id
	f	Ljava/nio/file/Path;	a	generatedDir
	f	Ljava/lang/Class;	b	clientObject
	f	Lagy;	e	packMetadata
	f	Ljava/util/Set;	f	namespaces
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ljava/util/Map;	h	ROOT_DIR_BY_TYPE
c	agx	net/minecraft/server/packs/metadata/MetadataSectionSerializer
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
c	agy	net/minecraft/server/packs/metadata/pack/PackMetadataSection
	m	(Lrm;I)V	<init>	<init>
		p	1		description
		p	2		format
	m	()Lrm;	a	getDescription
	m	()I	b	getPackFormat
	f	Lagz;	a	SERIALIZER
	f	Lrm;	b	description
	f	I	c	packFormat
c	agz	net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lagy;	b	fromJson
c	aha	net/minecraft/server/packs/metadata/pack/package-info
c	ahb	net/minecraft/server/packs/metadata/package-info
c	ahc	net/minecraft/server/packs/package-info
c	ahd	net/minecraft/server/packs/repository/FolderRepositorySource
	m	(Ljava/io/File;Lahh;)V	<init>	<init>
		p	1		packsFolder
		p	2		source
	m	(Ljava/io/File;)Ljava/util/function/Supplier;	a	createSupplier
		p	1		file
	m	(Ljava/util/function/Consumer;Lahe$a;)V	a	loadPacks
		p	1		profileAdder
		p	2		factory
	m	(Ljava/io/File;)Lagt;	b	lambda$createSupplier$2
	m	(Ljava/io/File;)Lagt;	c	lambda$createSupplier$1
	m	(Ljava/io/File;)Z	d	lambda$static$0
		p	0		file
	f	Ljava/io/FileFilter;	a	RESOURCEPACK_FILTER
	f	Ljava/io/File;	b	folder
	f	Lahh;	c	packSource
c	ahe	net/minecraft/server/packs/repository/Pack
	m	(Ljava/lang/String;Lrm;ZLjava/util/function/Supplier;Lagy;Lagu;Lahe$b;Lahh;)V	<init>	<init>
		p	1		name
		p	2		displayName
		p	3		alwaysEnabled
		p	4		packFactory
		p	5		metadata
		p	6		type
		p	7		direction
		p	8		source
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lrm;Lrm;Lahf;Lahe$b;ZLahh;)V	<init>	<init>
		p	1		name
		p	2		alwaysEnabled
		p	3		packFactory
		p	4		displayName
		p	5		description
		p	6		compatibility
		p	7		direction
		p	8		pinned
		p	9		source
	m	()Lrm;	a	getTitle
	m	(Ljava/lang/String;ZLjava/util/function/Supplier;Lahe$a;Lahe$b;Lahh;)Lahe;	a	create
		p	0		name
		p	1		alwaysEnabled
		p	2		packFactory
		p	3		profileFactory
		p	4		insertionPosition
		p	5		packSource
	m	(Z)Lrm;	a	getChatLink
		p	1		enabled
	m	(ZLrv;)Lrv;	a	lambda$getChatLink$0
		p	2		style
	m	()Lrm;	b	getDescription
	m	()Lahf;	c	getCompatibility
	m	()Lagt;	d	open
	m	()Ljava/lang/String;	e	getId
	m	()Z	f	isRequired
	m	()Z	g	isFixedPosition
	m	()Lahe$b;	h	getDefaultPosition
	m	()Lahh;	i	getPackSource
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	id
	f	Ljava/util/function/Supplier;	c	supplier
	f	Lrm;	d	title
	f	Lrm;	e	description
	f	Lahf;	f	compatibility
	f	Lahe$b;	g	defaultPosition
	f	Z	h	required
	f	Z	i	fixedPosition
	f	Lahh;	j	packSource
c	ahe$a	net/minecraft/server/packs/repository/Pack$PackConstructor
	m	(Ljava/lang/String;Lrm;ZLjava/util/function/Supplier;Lagy;Lahe$b;Lahh;)Lahe;	create	create
		p	1		name
		p	2		displayName
		p	3		alwaysEnabled
		p	4		packFactory
		p	5		metadata
		p	6		initialPosition
		p	7		source
c	ahe$b	net/minecraft/server/packs/repository/Pack$Position
	m	()Lahe$b;	a	opposite
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
		p	1		items
		p	2		item
		p	3		profileGetter
		p	4		listInverted
	m	()[Lahe$b;	b	$values
	f	Lahe$b;	a	TOP
	f	Lahe$b;	b	BOTTOM
	f	[Lahe$b;	c	$VALUES
c	ahf	net/minecraft/server/packs/repository/PackCompatibility
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		translationSuffix
	m	()Z	a	isCompatible
	m	(ILagu;)Lahf;	a	forFormat
		p	0		packVersion
		p	1		type
	m	(Lagy;Lagu;)Lahf;	a	forMetadata
		p	0		metadata
		p	1		type
	m	()Lrm;	b	getDescription
	m	()Lrm;	c	getConfirmation
	m	()[Lahf;	d	$values
	f	Lahf;	a	TOO_OLD
	f	Lahf;	b	TOO_NEW
	f	Lahf;	c	COMPATIBLE
	f	Lrm;	d	description
	f	Lrm;	e	confirmation
	f	[Lahf;	f	$VALUES
c	ahg	net/minecraft/server/packs/repository/PackRepository
	m	(Lagu;[Lahi;)V	<init>	<init>
		p	1		type
		p	2		providers
	m	(Lahe$a;[Lahi;)V	<init>	<init>
		p	1		profileFactory
		p	2		providers
	m	()V	a	reload
	m	(Lagu;Ljava/lang/String;Lrm;ZLjava/util/function/Supplier;Lagy;Lahe$b;Lahh;)Lahe;	a	lambda$new$0
		p	1		name
		p	2		displayName
		p	3		alwaysEnabled
		p	4		packFactory
		p	5		metadata
		p	6		direction
		p	7		source
	m	(Ljava/lang/String;)Lahe;	a	getPack
		p	1		name
	m	(Ljava/util/Collection;)V	a	setSelected
		p	1		enabled
	m	(Ljava/util/Map;Lahe;)V	a	lambda$discoverAvailable$1
		p	1		profile
	m	()Ljava/util/Collection;	b	getAvailableIds
	m	(Ljava/lang/String;)Z	b	isAvailable
		p	1		name
	m	(Ljava/util/Collection;)Ljava/util/List;	b	rebuildSelected
		p	1		enabledNames
	m	()Ljava/util/Collection;	c	getAvailablePacks
	m	(Ljava/util/Collection;)Ljava/util/stream/Stream;	c	getAvailablePacks
		p	1		names
	m	()Ljava/util/Collection;	d	getSelectedIds
	m	()Ljava/util/Collection;	e	getSelectedPacks
	m	()Ljava/util/List;	f	openAllSelected
	m	()Ljava/util/Map;	g	discoverAvailable
	f	Ljava/util/Set;	a	sources
	f	Ljava/util/Map;	b	available
	f	Ljava/util/List;	c	selected
	f	Lahe$a;	d	constructor
c	ahh	net/minecraft/server/packs/repository/PackSource
	m	()Lahh;	a	passThrough
	m	(Ljava/lang/String;)Lahh;	a	decorating
		p	0		source
	m	(Lrm;)Lrm;	a	lambda$passThrough$0
		p	0		name
	m	(Lrm;Lrm;)Lrm;	a	lambda$decorating$1
		p	1		name
	m	(Lrm;)Lrm;	decorate	decorate
		p	1		packName
	f	Lahh;	a	DEFAULT
	f	Lahh;	b	BUILT_IN
	f	Lahh;	c	WORLD
	f	Lahh;	d	SERVER
c	ahi	net/minecraft/server/packs/repository/RepositorySource
	m	(Ljava/util/function/Consumer;Lahe$a;)V	a	loadPacks
		p	1		profileAdder
		p	2		factory
c	ahj	net/minecraft/server/packs/repository/ServerPacksSource
	m	()Lagt;	a	lambda$loadPacks$0
	m	(Ljava/util/function/Consumer;Lahe$a;)V	a	loadPacks
		p	1		profileAdder
		p	2		factory
	f	Lagy;	a	BUILT_IN_METADATA
	f	Ljava/lang/String;	b	VANILLA_ID
	f	Lagw;	c	vanillaPack
c	ahk	net/minecraft/server/packs/repository/package-info
c	ahl	net/minecraft/server/packs/resources/CloseableResourceManager
c	ahm	net/minecraft/server/packs/resources/FallbackResourceManager
	m	(Lagu;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		namespace
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laaj;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Laaj;I)Lahs$a;	a	createStackMetadataFinder
		p	1		id
		p	2		index
	m	(Laaj;Laaj;)Lahm$a;	a	lambda$listPackResources$3
		p	1		id
	m	(Laaj;Lagt;)Lahs$a;	a	createResourceGetter
		p	1		id
		p	2		pack
	m	(Lagt;)V	a	push
		p	1		pack
	m	(Lagt;Laaj;)Ljava/io/InputStream;	a	lambda$createResourceGetter$1
	m	(Lagt;Ljava/util/function/Predicate;)V	a	push
		p	1		pack
		p	2		filter
	m	(Lahm$c;)Lagt;	a	lambda$listPacks$5
		p	0		pack
	m	(Lahm$c;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V	a	listPackResources
		p	1		pack
		p	2		startingPath
		p	3		allowedPathPredicate
		p	4		idToEntryList
	m	(Lahm$c;Ljava/util/Map;)V	a	applyPackFiltersToExistingResources
		p	0		pack
		p	1		idToEntryList
	m	(Ljava/lang/String;Lagt;Ljava/util/function/Predicate;)V	a	pushInternal
		p	1		name
		p	2		underlyingPack
		p	3		filter
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)V	a	pushFilterOnly
		p	1		name
		p	2		filter
	m	(Ljava/util/TreeMap;Laaj;Lahm$a;)V	a	lambda$listResourceStacks$4
		p	1		id
		p	2		entryList
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Laaj;)Laaj;	b	getMetadataLocation
		p	0		id
	m	(Laaj;I)Lahw;	b	lambda$createStackMetadataFinder$2
	m	(Lagt;Laaj;)Ljava/io/InputStream;	b	lambda$createResourceGetter$0
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laaj;)Z	c	isValidLocation
		p	1		id
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laaj;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Ljava/util/List;	a	fallbacks
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lagu;	c	type
	f	Ljava/lang/String;	d	namespace
c	ahm$a	net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack
	m	()Laaj;	a	metadataLocation
	m	()Ljava/util/List;	b	entries
	m	()Ljava/util/List;	c	createThunks
	f	Laaj;	a	metadataLocation
	f	Ljava/util/List;	b	entries
c	ahm$b	net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	m	(Ljava/io/InputStream;Laaj;Ljava/lang/String;)V	<init>	<init>
		p	1		parent
		p	2		id
		p	3		packName
	f	Ljava/lang/String;	a	message
	f	Z	b	closed
c	ahm$c	net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry
	m	()Ljava/lang/String;	a	name
	m	(Laaj;)Z	a	isFiltered
		p	1		id
	m	(Ljava/util/Collection;)V	a	filterAll
		p	1		ids
	m	()Lagt;	b	resources
	m	()Ljava/util/function/Predicate;	c	filter
	f	Ljava/lang/String;	a	name
	f	Lagt;	b	resources
	f	Ljava/util/function/Predicate;	c	filter
c	ahm$d	net/minecraft/server/packs/resources/FallbackResourceManager$SinglePackResourceThunkSupplier
	m	(Lahm;Laaj;Laaj;Lagt;)V	<init>	<init>
		p	2		id
		p	3		metadataId
		p	4		pack
	m	()V	a	ignoreMeta
	m	()Lahs;	b	create
	m	()Lahw;	c	lambda$create$0
	f	Lahm;	a	this$0
	f	Laaj;	b	location
	f	Laaj;	c	metadataLocation
	f	Lagt;	d	source
	f	Z	e	shouldGetMeta
c	ahn	net/minecraft/server/packs/resources/MultiPackResourceManager
	m	(Lagu;Ljava/util/List;)V	<init>	<init>
		p	1		type
		p	2		packs
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laaj;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Lagt;)Laht;	a	getPackFilterSection
		p	1		pack
	m	(Lagu;Lagt;)Ljava/util/stream/Stream;	a	lambda$new$0
		p	1		pack
	m	(Laht;Laaj;)Z	a	lambda$new$1
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laaj;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	namespacedManagers
	f	Ljava/util/List;	c	packs
c	aho	net/minecraft/server/packs/resources/PreparableReloadListener
	m	(Laho$a;Lahu;Lawc;Lawc;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	()Ljava/lang/String;	c	getName
c	aho$a	net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
c	ahp	net/minecraft/server/packs/resources/ProfiledReloadInstance
	m	(Lahu;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		manager
		p	2		reloaders
		p	3		prepareExecutor
		p	4		applyExecutor
		p	5		initialStage
	m	(Laho;Lavv;Lavv;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Lahp$a;	a	lambda$new$6
		p	5		dummy
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	a	lambda$new$4
	m	(Ljava/util/List;)Ljava/util/List;	a	finish
		p	1		summaries
	m	(Ljava/util/concurrent/Executor;Laho$a;Lahu;Laho;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$new$7
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	a	lambda$new$5
		p	2		application
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	b	lambda$new$2
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	b	lambda$new$3
		p	2		preparation
	m	()I	e	lambda$new$1
	m	()I	f	lambda$new$0
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Stopwatch;	d	total
c	ahp$a	net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	m	(Ljava/lang/String;Lawb;Lawb;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	<init>	<init>
		p	1		name
		p	2		prepareProfile
		p	3		applyProfile
		p	4		prepareTimeMs
		p	5		applyTimeMs
	f	Ljava/lang/String;	a	name
	f	Lawb;	b	preparationResult
	f	Lawb;	c	reloadResult
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	preparationNanos
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	reloadNanos
c	ahq	net/minecraft/server/packs/resources/ReloadInstance
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	()F	b	getActualProgress
	m	()Z	c	isDone
	m	()V	d	checkExceptions
c	ahr	net/minecraft/server/packs/resources/ReloadableResourceManager
	m	(Lagu;)V	<init>	<init>
		p	1		type
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laaj;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Laho;)V	a	registerReloadListener
		p	1		reloader
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lambda$createReload$0
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lahq;	a	createReload
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		initialStage
		p	4		packs
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laaj;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lahl;	b	resources
	f	Ljava/util/List;	c	listeners
	f	Lagu;	d	type
c	ahs	net/minecraft/server/packs/resources/Resource
	m	(Ljava/lang/String;Lahs$a;)V	<init>	<init>
		p	1		resourcePackName
		p	2		inputSupplier
	m	(Ljava/lang/String;Lahs$a;Lahs$a;)V	<init>	<init>
		p	1		resourcePackName
		p	2		inputSupplier
		p	3		metadataSupplier
	m	()Ljava/lang/String;	a	sourcePackId
	m	()Ljava/io/InputStream;	b	open
	m	()Ljava/io/BufferedReader;	c	openAsReader
	m	()Lahw;	d	metadata
	m	()Lahw;	e	lambda$new$0
	f	Ljava/lang/String;	a	packId
	f	Lahs$a;	b	streamSupplier
	f	Lahs$a;	c	metadataSupplier
	f	Lahw;	d	cachedMetadata
c	ahs$a	net/minecraft/server/packs/resources/Resource$IoSupplier
c	aht	net/minecraft/server/packs/resources/ResourceFilterSection
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	(Laht;)Ljava/util/List;	a	lambda$static$0
		p	0		filter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/lang/String;)Z	a	isNamespaceFiltered
		p	1		namespace
	m	(Ljava/lang/String;Laht$a;)Z	a	lambda$isPathFiltered$3
		p	1		block
	m	(Ljava/lang/String;)Z	b	isPathFiltered
		p	1		namespace
	m	(Ljava/lang/String;Laht$a;)Z	b	lambda$isNamespaceFiltered$2
		p	1		block
	f	Lagx;	a	SERIALIZER
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/List;	d	blockList
c	aht$1	net/minecraft/server/packs/resources/ResourceFilterSection$1
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Laht;	b	fromJson
c	aht$a	net/minecraft/server/packs/resources/ResourceFilterSection$ResourceLocationPattern
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	(Laaj;)Z	a	test
	m	(Laht$a;)Ljava/util/Optional;	a	lambda$static$1
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ljava/lang/String;)Z	a	lambda$new$4
		p	0		path_
	m	(Laht$a;)Ljava/util/Optional;	b	lambda$static$0
		p	0		entry
	m	(Ljava/lang/String;)Z	b	lambda$new$3
		p	0		namespace_
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	namespacePattern
	f	Ljava/util/function/Predicate;	c	namespacePredicate
	f	Ljava/util/Optional;	d	pathPattern
	f	Ljava/util/function/Predicate;	e	pathPredicate
c	ahu	net/minecraft/server/packs/resources/ResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laaj;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
c	ahu$a	net/minecraft/server/packs/resources/ResourceManager$Empty
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laaj;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	()[Lahu$a;	c	$values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laaj;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lahu$a;	a	INSTANCE
	f	[Lahu$a;	b	$VALUES
c	ahv	net/minecraft/server/packs/resources/ResourceManagerReloadListener
	m	(Laho$a;Lahu;Lawc;Lawc;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lahu;)V	a	onResourceManagerReload
		p	1		manager
	m	(Lawc;Lahu;)V	a	lambda$reload$0
c	ahw	net/minecraft/server/packs/resources/ResourceMetadata
	m	(Lagx;)Ljava/util/Optional;	a	getSection
		p	1		reader
	m	(Ljava/io/InputStream;)Lahw;	a	fromJsonStream
		p	0		stream
	f	Lahw;	a	EMPTY
c	ahw$1	net/minecraft/server/packs/resources/ResourceMetadata$1
	m	(Lagx;)Ljava/util/Optional;	a	getSection
		p	1		reader
c	ahw$2	net/minecraft/server/packs/resources/ResourceMetadata$2
	m	(Lagx;)Ljava/util/Optional;	a	getSection
		p	1		reader
	f	Lcom/google/gson/JsonObject;	b	val$metadata
c	ahx	net/minecraft/server/packs/resources/ResourceProvider
	m	(Laaj;)Ljava/io/FileNotFoundException;	b	lambda$getResourceOrThrow$0
	m	(Laaj;)Ljava/util/Optional;	getResource	getResource
		p	1		id
c	ahy	net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	m	(Lcom/google/gson/Gson;Ljava/lang/String;)V	<init>	<init>
		p	1		gson
		p	2		dataType
	m	(Laaj;)Z	a	lambda$prepare$0
		p	0		id
	m	(Lahu;Lawc;)Ljava/util/Map;	a	prepare
	m	(Lahu;Lawc;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	PATH_SUFFIX
	f	I	c	PATH_SUFFIX_LENGTH
	f	Lcom/google/gson/Gson;	d	gson
	f	Ljava/lang/String;	e	directory
c	ahz	net/minecraft/server/packs/resources/SimplePreparableReloadListener
	m	(Laho$a;Lahu;Lawc;Lawc;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lahu;Lawc;)Ljava/lang/Object;	a	lambda$reload$0
	m	(Lahu;Lawc;Ljava/lang/Object;)V	a	lambda$reload$1
	m	(Ljava/lang/Object;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Lahu;Lawc;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
c	aia	net/minecraft/server/packs/resources/SimpleReloadInstance
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lahu;Ljava/util/List;Laia$a;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		manager
		p	4		reloaders
		p	5		factory
		p	6		initialStage
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	(Lahu;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Laia;	a	of
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
	m	(Lahu;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lahq;	a	create
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
		p	5		profiled
	m	(Ljava/lang/Runnable;)V	a	lambda$new$3
	m	(Ljava/util/concurrent/Executor;Laho$a;Lahu;Laho;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$of$0
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$new$4
		p	2		application
	m	()F	b	getActualProgress
	m	(Ljava/lang/Runnable;)V	b	lambda$new$1
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	b	lambda$new$2
		p	2		preparation
	f	Ljava/util/concurrent/CompletableFuture;	a	allPreparations
	f	Ljava/util/concurrent/CompletableFuture;	b	allDone
	f	I	c	PREPARATION_PROGRESS_WEIGHT
	f	I	d	EXTRA_RELOAD_PROGRESS_WEIGHT
	f	I	e	LISTENER_PROGRESS_WEIGHT
	f	Ljava/util/Set;	f	preparingListeners
	f	I	g	listenerCount
	f	I	h	startedReloads
	f	I	i	finishedReloads
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	startedTaskCounter
	f	Ljava/util/concurrent/atomic/AtomicInteger;	k	doneTaskCounter
c	aia$1	net/minecraft/server/packs/resources/SimpleReloadInstance$1
	m	(Laho;)V	a	lambda$wait$0
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
	m	(Ljava/lang/Object;Lamk;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$wait$1
	f	Ljava/util/concurrent/Executor;	a	val$mainThreadExecutor
	f	Laho;	b	val$listener
	f	Ljava/util/concurrent/CompletableFuture;	c	val$previousTask
	f	Laia;	d	this$0
c	aia$a	net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
	m	(Laho$a;Lahu;Laho;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	create	create
		p	1		synchronizer
		p	2		manager
		p	3		reloader
		p	4		prepareExecutor
		p	5		applyExecutor
c	aib	net/minecraft/server/packs/resources/package-info
c	aic	net/minecraft/server/players/BanListEntry
	m	(Ljava/lang/Object;Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		key
		p	2		json
	m	(Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		creationDate
		p	3		source
		p	4		expiryDate
		p	5		reason
	m	()Ljava/util/Date;	a	getCreated
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpires
	m	()Ljava/lang/String;	d	getReason
	m	()Lrm;	e	getDisplayName
	m	()Z	f	hasExpired
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/lang/String;	b	EXPIRES_NEVER
	f	Ljava/util/Date;	c	created
	f	Ljava/lang/String;	d	source
	f	Ljava/util/Date;	e	expires
	f	Ljava/lang/String;	f	reason
c	aid	net/minecraft/server/players/GameProfileCache
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V	<init>	<init>
		p	1		profileRepository
		p	2		cacheFile
	m	()V	a	clearExecutor
	m	(I)Ljava/util/stream/Stream;	a	getTopMRUProfiles
		p	1		limit
	m	(Laid$a;)V	a	safeAdd
		p	1		entry
	m	(Laid$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement;	a	writeGameProfile
		p	0		entry
		p	1		dateFormat
	m	(Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Laid$a;)V	a	lambda$save$5
		p	2		entry
	m	(Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional;	a	readGameProfile
		p	0		json
		p	1		dateFormat
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional;	a	lookupGameProfile
		p	0		repository
		p	1		name
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$2
		p	2		profile
		p	3		throwable
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	getAsync
		p	1		username
		p	2		consumer
	m	(Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V	a	lambda$load$4
		p	2		json
	m	(Ljava/util/UUID;)Ljava/util/Optional;	a	get
		p	1		uuid
	m	(Ljava/util/concurrent/Executor;)V	a	setExecutor
		p	1		executor
	m	(Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$3
		p	1		profile
		p	2		throwable
	m	(Z)V	a	setUsesAuthentication
		p	0		value
	m	()Ljava/util/List;	b	load
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$getAsync$1
	m	(Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V	b	lambda$getAsync$0
		p	1		profile
		p	2		throwable
	m	()V	c	save
	m	()Z	d	usesAuthentication
	m	()J	e	getNextOperation
	m	()Ljava/text/DateFormat;	f	createDateFormat
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	GAMEPROFILES_MRU_LIMIT
	f	I	c	GAMEPROFILES_EXPIRATION_MONTHS
	f	Z	d	usesAuthentication
	f	Ljava/util/Map;	e	profilesByName
	f	Ljava/util/Map;	f	profilesByUUID
	f	Ljava/util/Map;	g	requests
	f	Lcom/mojang/authlib/GameProfileRepository;	h	profileRepository
	f	Lcom/google/gson/Gson;	i	gson
	f	Ljava/io/File;	j	file
	f	Ljava/util/concurrent/atomic/AtomicLong;	k	operationCount
	f	Ljava/util/concurrent/Executor;	l	executor
c	aid$1	net/minecraft/server/players/GameProfileCache$1
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	val$result
c	aid$a	net/minecraft/server/players/GameProfileCache$GameProfileInfo
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	<init>	<init>
		p	1		profile
		p	2		expirationDate
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	(J)V	a	setLastAccess
		p	1		lastAccessed
	m	()Ljava/util/Date;	b	getExpirationDate
	m	()J	c	getLastAccess
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Date;	b	expirationDate
	f	J	c	lastAccess
c	aie	net/minecraft/server/players/IpBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	(Lcom/google/gson/JsonObject;)Lail;	a	createEntry
		p	1		json
	m	(Ljava/lang/String;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Laif;	b	get
		p	1		address
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	getIpFromAddress
		p	1		address
c	aif	net/minecraft/server/players/IpBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		ip
	m	(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		ip
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	createIpInfo
		p	0		json
	m	()Lrm;	e	getDisplayName
c	aig	net/minecraft/server/players/OldUsersConverter
	m	()Z	a	areOldUserlistsRemoved
	m	(I)[Ljava/lang/String;	a	lambda$lookupPlayers$1
	m	(Laep;)Z	a	convertPlayers
		p	0		minecraftServer
	m	(Ljava/io/File;)V	a	ensureDirectoryExists
		p	0		directory
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	readOldListFormat
		p	0		file
		p	1		valueMap
	m	(Ljava/lang/String;)Z	a	lambda$lookupPlayers$0
		p	0		playerName
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	a	parseDate
		p	0		dateString
		p	1		fallback
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertUserBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID;	a	convertMobOwnerIfNecessary
		p	0		server
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupPlayers
		p	0		server
		p	1		bannedPlayers
		p	2		callback
	m	(Ljava/io/File;)V	b	renameOldFile
		p	0		file
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertIpBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOpsList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhiteList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	serverReadyAfterUserconversion
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	areOldPlayersConverted
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getWorldPlayersDirectory
		p	0		server
	f	Ljava/io/File;	a	OLD_IPBANLIST
	f	Ljava/io/File;	b	OLD_USERBANLIST
	f	Ljava/io/File;	c	OLD_OPLIST
	f	Ljava/io/File;	d	OLD_WHITELIST
	f	Lorg/slf4j/Logger;	e	LOGGER
c	aig$1	net/minecraft/server/players/OldUsersConverter$1
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/Map;	b	val$userMap
	f	Lain;	c	val$bans
c	aig$2	net/minecraft/server/players/OldUsersConverter$2
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Laii;	b	val$opsList
c	aig$3	net/minecraft/server/players/OldUsersConverter$3
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Laip;	b	val$whitelist
c	aig$4	net/minecraft/server/players/OldUsersConverter$4
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/List;	b	val$profiles
c	aig$5	net/minecraft/server/players/OldUsersConverter$5
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	a	getFileNameForProfile
		p	1		profile
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	movePlayerFile
		p	1		playerDataFolder
		p	2		fileName
		p	3		uuid
	f	Laep;	a	val$server
	f	Ljava/io/File;	b	val$worldNewPlayerDirectory
	f	Ljava/io/File;	c	val$unknownPlayerDirectory
	f	Ljava/io/File;	d	val$worldPlayerDirectory
	f	[Ljava/lang/String;	e	val$names
c	aig$a	net/minecraft/server/players/OldUsersConverter$ConversionError
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
c	aih	net/minecraft/server/players/PlayerList
	m	(Lnet/minecraft/server/MinecraftServer;Lhn$a;Ldqw;I)V	<init>	<init>
		p	1		server
		p	2		registryManager
		p	3		saveHandler
		p	4		maxPlayers
	m	()V	a	reloadWhiteList
	m	(I)V	a	setViewDistance
		p	1		viewDistance
	m	(Laay;Lafp;)V	a	updateEntireScoreboard
		p	1		scoreboard
		p	2		player
	m	(Lafo;)V	a	addWorldborderListener
		p	1		world
	m	(Lafo;Lbaq;)Lbaq;	a	lambda$placeNewPlayer$1
		p	1		vehicle
	m	(Lafp;)Lpj;	a	load
		p	1		player
	m	(Lafp;I)V	a	sendPlayerPermissionLevel
		p	1		player
		p	2		permissionLevel
	m	(Lafp;Lafo;)V	a	sendLevelInfo
		p	1		player
		p	2		world
	m	(Lafp;Lnet/minecraft/server/MinecraftServer$b;)V	a	lambda$placeNewPlayer$0
		p	1		properties
	m	(Lafp;Z)Lafp;	a	respawn
		p	1		player
		p	2		alive
	m	(Lagd;Lafp;Laai;)V	a	broadcastChatMessage
		p	1		message
		p	2		sender
		p	3		typeKey
	m	(Lagd;Lafp;Lafp;)Lru;	a	lambda$broadcastChatMessage$4
		p	2		player
	m	(Lagd;Ldr;Laai;)V	a	broadcastChatMessage
		p	1		message
		p	2		source
		p	3		typeKey
	m	(Lbaq;)V	a	lambda$remove$2
		p	0		entity
	m	(Lbtf;)Lajk;	a	getPlayerStats
		p	1		player
	m	(Lbtf;DDDDLaai;Lso;)V	a	broadcast
		p	1		player
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
		p	10		worldKey
		p	11		packet
	m	(Lbtf;Lrm;)V	a	broadcastSystemToTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;Lbti;)Lafp;	a	getPlayerForLogin
		p	1		profile
		p	2		publicKey
	m	(Ljava/lang/String;)Lafp;	a	getPlayerByName
		p	1		name
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lrm;	a	canPlayerLogin
		p	1		address
		p	2		profile
	m	(Ljava/util/UUID;)Lafp;	a	getPlayer
		p	1		uuid
	m	(Lqv;Lafp;)V	a	placeNewPlayer
		p	1		connection
		p	2		player
	m	(Lrm;Laai;)V	a	broadcastSystemMessage
		p	1		message
		p	2		typeKey
	m	(Lrm;Lafp;)Lrm;	a	lambda$broadcastSystemMessage$3
		p	1		player
	m	(Lrm;Ljava/util/function/Function;Laai;)V	a	broadcastSystemMessage
		p	1		message
		p	2		playerMessageFactory
		p	3		typeKey
	m	(Lru;Lafp;)Lru;	a	lambda$broadcastChatMessage$5
		p	1		player
	m	(Lru;Ljava/util/function/Function;Lri;Laai;)V	a	broadcastChatMessage
		p	1		message
		p	2		playerMessageFactory
		p	3		sender
		p	4		typeKey
	m	(Lru;Lri;Laai;)V	a	broadcastChatMessage
		p	1		message
		p	2		sender
		p	3		typeKey
	m	(Lso;)V	a	broadcastAll
		p	1		packet
	m	(Lso;Laai;)V	a	broadcastAll
		p	1		packet
		p	2		dimension
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(Lafp;)V	b	save
		p	1		player
	m	(Lbtf;Lrm;)V	b	broadcastSystemToAllExceptTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersWithAddress
		p	1		ip
	m	(Z)V	b	setAllowCheatsForAllPlayers
		p	1		cheatsAllowed
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lafp;)V	c	remove
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	()V	d	tick
	m	(Lafp;)V	d	sendPlayerPermissionLevel
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()[Ljava/lang/String;	e	getPlayerNamesArray
	m	(Lafp;)V	e	sendAllPlayerInfo
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	e	isOp
		p	1		profile
	m	()Lain;	f	getBans
	m	(Lafp;)Laar;	f	getPlayerAdvancements
		p	1		player
	m	()Laie;	g	getIpBans
	m	()V	h	saveAll
	m	()Laip;	i	getWhiteList
	m	()[Ljava/lang/String;	j	getWhiteListNames
	m	()Laii;	k	getOps
	m	()[Ljava/lang/String;	l	getOpNames
	m	()I	m	getPlayerCount
	m	()I	n	getMaxPlayers
	m	()Z	o	isUsingWhitelist
	m	()I	p	getViewDistance
	m	()I	q	getSimulationDistance
	m	()Lpj;	r	getSingleplayerData
	m	()V	s	removeAll
	m	()Ljava/util/List;	t	getPlayers
	m	()V	u	reloadResources
	m	()Z	v	isAllowCheatsForAllPlayers
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	USERBANLIST_FILE
	f	Ljava/io/File;	c	IPBANLIST_FILE
	f	Ljava/io/File;	d	OPLIST_FILE
	f	Ljava/io/File;	e	WHITELIST_FILE
	f	I	f	maxPlayers
	f	I	g	SEND_PLAYER_INFO_INTERVAL
	f	Ljava/text/SimpleDateFormat;	h	BAN_DATE_FORMAT
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Ljava/util/List;	j	players
	f	Ljava/util/Map;	k	playersByUUID
	f	Lain;	l	bans
	f	Laie;	m	ipBans
	f	Laii;	n	ops
	f	Laip;	o	whitelist
	f	Ljava/util/Map;	p	stats
	f	Ljava/util/Map;	q	advancements
	f	Ldqw;	r	playerIo
	f	Z	s	doWhiteList
	f	Lhn$a;	t	registryHolder
	f	I	u	viewDistance
	f	I	v	simulationDistance
	f	Z	w	allowCheatsForAllPlayers
	f	Z	x	ALLOW_LOGOUTIVATOR
	f	I	y	sendAllPlayerInfoIn
c	aih$1	net/minecraft/server/players/PlayerList$1
	m	(Lcwh;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Lcwh;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Lcwh;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Lcwh;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Lcwh;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Lcwh;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Lcwh;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Laih;	a	this$0
c	aii	net/minecraft/server/players/ServerOpList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lail;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	canBypassPlayerLimit
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	aij	net/minecraft/server/players/ServerOpListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;IZ)V	<init>	<init>
		p	1		profile
		p	2		permissionLevel
		p	3		bypassPlayerLimit
	m	()I	a	getLevel
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	b	getBypassesPlayerLimit
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	f	I	a	level
	f	Z	b	bypassesPlayerLimit
c	aik	net/minecraft/server/players/SleepStatus
	m	()V	a	removeAllSleepers
	m	(I)Z	a	areEnoughSleeping
		p	1		percentage
	m	(ILjava/util/List;)Z	a	areEnoughDeepSleeping
		p	1		percentage
		p	2		players
	m	(Ljava/util/List;)Z	a	update
		p	1		players
	m	()I	b	amountSleeping
	m	(I)I	b	sleepersNeeded
		p	1		percentage
	f	I	a	activePlayers
	f	I	b	sleepingPlayers
c	ail	net/minecraft/server/players/StoredUserEntry
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		key
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	f	hasExpired
	m	()Ljava/lang/Object;	g	getUser
	f	Ljava/lang/Object;	a	user
c	aim	net/minecraft/server/players/StoredUserList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(Lail;)V	a	add
		p	1		entry
	m	(Lcom/google/gson/JsonObject;)Lail;	a	createEntry
		p	1		json
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	()Ljava/io/File;	b	getFile
	m	(Lail;)V	b	remove
		p	1		entry
	m	(Ljava/lang/Object;)Lail;	b	get
		p	1		key
	m	()Z	c	isEmpty
	m	(Lail;)Lcom/google/gson/JsonObject;	c	lambda$save$0
		p	0		entry
	m	(Ljava/lang/Object;)V	c	remove
		p	1		key
	m	()Ljava/util/Collection;	d	getEntries
	m	(Ljava/lang/Object;)Z	d	contains
	m	()V	e	save
	m	()V	f	load
	m	()V	g	removeExpired
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
c	ain	net/minecraft/server/players/UserBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lail;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isBanned
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	aio	net/minecraft/server/players/UserBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		profile
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	m	()Lrm;	e	getDisplayName
c	aip	net/minecraft/server/players/UserWhiteList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lail;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isWhiteListed
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	aiq	net/minecraft/server/players/UserWhiteListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
c	air	net/minecraft/server/players/package-info
c	ais	net/minecraft/server/rcon/NetworkDataOutputStream
	m	(I)V	<init>	<init>
		p	1		size
	m	()[B	a	toByteArray
	m	(F)V	a	writeFloat
		p	1		value
	m	(I)V	a	write
		p	1		value
	m	(Ljava/lang/String;)V	a	writeString
		p	1		value
	m	(S)V	a	writeShort
		p	1		value
	m	([B)V	a	writeBytes
		p	1		values
	m	()V	b	reset
	m	(I)V	b	writeInt
		p	1		value
	f	Ljava/io/ByteArrayOutputStream;	a	outputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
c	ait	net/minecraft/server/rcon/PktUtils
	m	(B)Ljava/lang/String;	a	toHexString
		p	0		b
	m	([BI)I	a	intFromByteArray
		p	0		buf
		p	1		start
	m	([BII)Ljava/lang/String;	a	stringFromByteArray
		p	0		buf
	m	([BII)I	b	intFromByteArray
		p	0		buf
		p	1		start
		p	2		limit
	m	([BII)I	c	intFromNetworkByteArray
		p	0		buf
		p	1		start
		p	2		limit
	f	I	a	MAX_PACKET_SIZE
	f	[C	b	HEX_CHAR
c	aiu	net/minecraft/server/rcon/RconConsoleSource
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Z	G_	shouldInformAdmins
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	()V	e	prepareForCommand
	m	()Ljava/lang/String;	f	getCommandResponse
	m	()Ldr;	g	createCommandSourceStack
	m	()Z	i_	acceptsSuccess
	m	()Z	j_	acceptsFailure
	f	Ljava/lang/String;	b	RCON
	f	Lrm;	c	RCON_COMPONENT
	f	Ljava/lang/StringBuffer;	d	buffer
	f	Lnet/minecraft/server/MinecraftServer;	e	server
c	aiv	net/minecraft/server/rcon/package-info
c	aiw	net/minecraft/server/rcon/thread/GenericThread
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		description
	m	()Z	a	start
	m	()V	b	stop
	m	()Z	c	isRunning
	f	Z	a	running
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Thread;	c	thread
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	UNIQUE_THREAD_ID
	f	I	f	MAX_STOP_WAIT
c	aix	net/minecraft/server/rcon/thread/QueryThreadGs4
	m	(Laax;I)V	<init>	<init>
		p	1		server
		p	2		queryPort
	m	()Z	a	start
	m	(JLaix$a;)Z	a	lambda$pruneChallenges$0
		p	2		query
	m	(Laax;)Laix;	a	create
		p	0		server
	m	(Ljava/lang/Exception;)V	a	recoverSocketError
		p	1		e
	m	(Ljava/net/DatagramPacket;)Z	a	processPacket
		p	1		packet
	m	(Ljava/net/SocketAddress;)[B	a	getIdentBytes
		p	1		address
	m	([BLjava/net/DatagramPacket;)V	a	sendTo
		p	1		buf
		p	2		packet
	m	(Ljava/net/DatagramPacket;)[B	b	buildRuleResponse
		p	1		packet
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	validChallenge
		p	1		packet
	m	()V	d	pruneChallenges
	m	(Ljava/net/DatagramPacket;)V	d	sendChallenge
		p	1		packet
	m	()Z	e	initSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	GAME_TYPE
	f	Ljava/lang/String;	f	GAME_ID
	f	J	g	CHALLENGE_CHECK_INTERVAL
	f	J	h	RESPONSE_CACHE_TIME
	f	J	i	lastChallengeCheck
	f	I	j	port
	f	I	k	serverPort
	f	I	l	maxPlayers
	f	Ljava/lang/String;	m	serverName
	f	Ljava/lang/String;	n	worldName
	f	Ljava/net/DatagramSocket;	o	socket
	f	[B	p	buffer
	f	Ljava/lang/String;	q	hostIp
	f	Ljava/lang/String;	r	serverIp
	f	Ljava/util/Map;	s	validChallenges
	f	Lais;	t	rulesResponse
	f	J	u	lastRulesResponse
	f	Laax;	v	serverInterface
c	aix$a	net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	m	(Ljava/net/DatagramPacket;)V	<init>	<init>
		p	1		packet
	m	()I	a	getChallenge
	m	(J)Ljava/lang/Boolean;	a	before
		p	1		lastQueryTime
	m	()[B	b	getChallengeBytes
	m	()[B	c	getIdentBytes
	m	()Ljava/lang/String;	d	getIdent
	f	J	a	time
	f	I	b	challenge
	f	[B	c	identBytes
	f	[B	d	challengeBytes
	f	Ljava/lang/String;	e	ident
c	aiy	net/minecraft/server/rcon/thread/RconClient
	m	(Laax;Ljava/lang/String;Ljava/net/Socket;)V	<init>	<init>
		p	1		server
		p	2		password
		p	3		socket
	m	(IILjava/lang/String;)V	a	send
		p	1		sessionToken
		p	2		responseType
		p	3		message
	m	(ILjava/lang/String;)V	a	sendCmdResponse
		p	1		sessionToken
		p	2		message
	m	()V	b	stop
	m	()V	d	sendAuthFailure
	m	()V	e	closeSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	SERVERDATA_AUTH
	f	I	f	SERVERDATA_EXECCOMMAND
	f	I	g	SERVERDATA_RESPONSE_VALUE
	f	I	h	SERVERDATA_AUTH_RESPONSE
	f	I	i	SERVERDATA_AUTH_FAILURE
	f	Z	j	authed
	f	Ljava/net/Socket;	k	client
	f	[B	l	buf
	f	Ljava/lang/String;	m	rconPassword
	f	Laax;	n	serverInterface
c	aiz	net/minecraft/server/rcon/thread/RconThread
	m	(Laax;Ljava/net/ServerSocket;Ljava/lang/String;)V	<init>	<init>
		p	1		server
		p	2		listener
		p	3		password
	m	(Laax;)Laiz;	a	create
		p	0		server
	m	(Laiy;)Z	a	lambda$clearClients$0
		p	0		client
	m	(Ljava/net/ServerSocket;)V	a	closeSocket
		p	1		socket
	m	()V	b	stop
	m	()V	d	clearClients
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/net/ServerSocket;	e	socket
	f	Ljava/lang/String;	f	rconPassword
	f	Ljava/util/List;	g	clients
	f	Laax;	h	serverInterface
c	aja	net/minecraft/server/rcon/thread/package-info
c	ajb	net/minecraft/sounds/Music
	m	(Lajd;IIZ)V	<init>	<init>
		p	1		sound
		p	2		minDelay
		p	3		maxDelay
		p	4		replaceCurrentMusic
	m	()Lajd;	a	getEvent
	m	(Lajb;)Ljava/lang/Boolean;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMinDelay
	m	(Lajb;)Ljava/lang/Integer;	b	lambda$static$2
	m	()I	c	getMaxDelay
	m	(Lajb;)Ljava/lang/Integer;	c	lambda$static$1
	m	()Z	d	replaceCurrentMusic
	m	(Lajb;)Lajd;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lajd;	b	event
	f	I	c	minDelay
	f	I	d	maxDelay
	f	Z	e	replaceCurrentMusic
c	ajc	net/minecraft/sounds/Musics
	m	(Lajd;)Lajb;	a	createGameMusic
		p	0		event
	f	Lajb;	a	MENU
	f	Lajb;	b	CREATIVE
	f	Lajb;	c	CREDITS
	f	Lajb;	d	END_BOSS
	f	Lajb;	e	END
	f	Lajb;	f	UNDER_WATER
	f	Lajb;	g	GAME
	f	I	h	ONE_SECOND
	f	I	i	THIRTY_SECONDS
	f	I	j	TEN_MINUTES
	f	I	k	TWENTY_MINUTES
	f	I	l	FIVE_MINUTES
c	ajd	net/minecraft/sounds/SoundEvent
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	(Laaj;F)V	<init>	<init>
		p	1		id
		p	2		distanceToTravel
	m	(Laaj;FZ)V	<init>	<init>
		p	1		id
		p	2		distanceToTravel
		p	3		useStaticDistance
	m	()Laaj;	a	getLocation
	m	(F)F	a	getRange
		p	1		volume
	m	(Lajd;)Laaj;	a	lambda$static$0
		p	0		soundEvent
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laaj;	b	location
	f	F	c	range
	f	Z	d	newSystem
c	aje	net/minecraft/sounds/SoundEvents
	m	()Lcom/google/common/collect/ImmutableList;	a	registerGoatHornSoundVariants
	m	(I)Lajd;	a	lambda$registerGoatHornSoundVariants$0
		p	0		variant
	m	(Ljava/lang/String;)Lajd;	a	register
		p	0		id
	m	(Ljava/lang/String;F)Lajd;	a	register
		p	0		id
		p	1		distanceToTravel
	f	Lajd;	A	AMBIENT_UNDERWATER_LOOP_ADDITIONS
	f	Lajd;	B	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	f	Lajd;	C	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	f	Lajd;	D	AMETHYST_BLOCK_BREAK
	f	Lajd;	E	AMETHYST_BLOCK_CHIME
	f	Lajd;	F	AMETHYST_BLOCK_FALL
	f	Lajd;	G	AMETHYST_BLOCK_HIT
	f	Lajd;	H	AMETHYST_BLOCK_PLACE
	f	Lajd;	I	AMETHYST_BLOCK_STEP
	f	Lajd;	J	AMETHYST_CLUSTER_BREAK
	f	Lajd;	K	AMETHYST_CLUSTER_FALL
	f	Lajd;	L	AMETHYST_CLUSTER_HIT
	f	Lajd;	M	AMETHYST_CLUSTER_PLACE
	f	Lajd;	N	AMETHYST_CLUSTER_STEP
	f	Lajd;	O	ANCIENT_DEBRIS_BREAK
	f	Lajd;	P	ANCIENT_DEBRIS_STEP
	f	Lajd;	Q	ANCIENT_DEBRIS_PLACE
	f	Lajd;	R	ANCIENT_DEBRIS_HIT
	f	Lajd;	S	ANCIENT_DEBRIS_FALL
	f	Lajd;	T	ANVIL_BREAK
	f	Lajd;	U	ANVIL_DESTROY
	f	Lajd;	V	ANVIL_FALL
	f	Lajd;	W	ANVIL_HIT
	f	Lajd;	X	ANVIL_LAND
	f	Lajd;	Y	ANVIL_PLACE
	f	Lajd;	Z	ANVIL_STEP
	f	Lajd;	aA	AXOLOTL_SWIM
	f	Lajd;	aB	AZALEA_BREAK
	f	Lajd;	aC	AZALEA_FALL
	f	Lajd;	aD	AZALEA_HIT
	f	Lajd;	aE	AZALEA_PLACE
	f	Lajd;	aF	AZALEA_STEP
	f	Lajd;	aG	AZALEA_LEAVES_BREAK
	f	Lajd;	aH	AZALEA_LEAVES_FALL
	f	Lajd;	aI	AZALEA_LEAVES_HIT
	f	Lajd;	aJ	AZALEA_LEAVES_PLACE
	f	Lajd;	aK	AZALEA_LEAVES_STEP
	f	Lajd;	aL	BAMBOO_BREAK
	f	Lajd;	a	ALLAY_AMBIENT_WITH_ITEM
	f	Lajd;	aM	BAMBOO_FALL
	f	Lajd;	aN	BAMBOO_HIT
	f	Lajd;	aO	BAMBOO_PLACE
	f	Lajd;	aP	BAMBOO_STEP
	f	Lajd;	aQ	BAMBOO_SAPLING_BREAK
	f	Lajd;	aR	BAMBOO_SAPLING_HIT
	f	Lajd;	aS	BAMBOO_SAPLING_PLACE
	f	Lajd;	aT	BARREL_CLOSE
	f	Lajd;	aU	BARREL_OPEN
	f	Lajd;	aV	BASALT_BREAK
	f	Lajd;	aW	BASALT_STEP
	f	Lajd;	aX	BASALT_PLACE
	f	Lajd;	aY	BASALT_HIT
	f	Lajd;	aZ	BASALT_FALL
	f	Lajd;	aa	ANVIL_USE
	f	Lajd;	ab	ARMOR_EQUIP_CHAIN
	f	Lajd;	ac	ARMOR_EQUIP_DIAMOND
	f	Lajd;	ad	ARMOR_EQUIP_ELYTRA
	f	Lajd;	ae	ARMOR_EQUIP_GENERIC
	f	Lajd;	af	ARMOR_EQUIP_GOLD
	f	Lajd;	ag	ARMOR_EQUIP_IRON
	f	Lajd;	ah	ARMOR_EQUIP_LEATHER
	f	Lajd;	ai	ARMOR_EQUIP_NETHERITE
	f	Lajd;	aj	ARMOR_EQUIP_TURTLE
	f	Lajd;	ak	ARMOR_STAND_BREAK
	f	Lajd;	al	ARMOR_STAND_FALL
	f	Lajd;	am	ARMOR_STAND_HIT
	f	Lajd;	an	ARMOR_STAND_PLACE
	f	Lajd;	ao	ARROW_HIT
	f	Lajd;	ap	ARROW_HIT_PLAYER
	f	Lajd;	aq	ARROW_SHOOT
	f	Lajd;	ar	AXE_STRIP
	f	Lajd;	as	AXE_SCRAPE
	f	Lajd;	at	AXE_WAX_OFF
	f	Lajd;	au	AXOLOTL_ATTACK
	f	Lajd;	av	AXOLOTL_DEATH
	f	Lajd;	aw	AXOLOTL_HURT
	f	Lajd;	ax	AXOLOTL_IDLE_AIR
	f	Lajd;	ay	AXOLOTL_IDLE_WATER
	f	Lajd;	az	AXOLOTL_SPLASH
	f	Lajd;	bA	BIG_DRIPLEAF_STEP
	f	Lajd;	bB	BLAZE_AMBIENT
	f	Lajd;	bC	BLAZE_BURN
	f	Lajd;	bD	BLAZE_DEATH
	f	Lajd;	bE	BLAZE_HURT
	f	Lajd;	bF	BLAZE_SHOOT
	f	Lajd;	bG	BOAT_PADDLE_LAND
	f	Lajd;	bH	BOAT_PADDLE_WATER
	f	Lajd;	bI	BONE_BLOCK_BREAK
	f	Lajd;	bJ	BONE_BLOCK_FALL
	f	Lajd;	bK	BONE_BLOCK_HIT
	f	Lajd;	bL	BONE_BLOCK_PLACE
	f	Lajd;	b	ALLAY_AMBIENT_WITHOUT_ITEM
	f	Lajd;	bM	BONE_BLOCK_STEP
	f	Lajd;	bN	BONE_MEAL_USE
	f	Lajd;	bO	BOOK_PAGE_TURN
	f	Lajd;	bP	BOOK_PUT
	f	Lajd;	bQ	BLASTFURNACE_FIRE_CRACKLE
	f	Lajd;	bR	BOTTLE_EMPTY
	f	Lajd;	bS	BOTTLE_FILL
	f	Lajd;	bT	BOTTLE_FILL_DRAGONBREATH
	f	Lajd;	bU	BREWING_STAND_BREW
	f	Lajd;	bV	BUBBLE_COLUMN_BUBBLE_POP
	f	Lajd;	bW	BUBBLE_COLUMN_UPWARDS_AMBIENT
	f	Lajd;	bX	BUBBLE_COLUMN_UPWARDS_INSIDE
	f	Lajd;	bY	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	f	Lajd;	bZ	BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	f	Lajd;	ba	BAT_AMBIENT
	f	Lajd;	bb	BAT_DEATH
	f	Lajd;	bc	BAT_HURT
	f	Lajd;	bd	BAT_LOOP
	f	Lajd;	be	BAT_TAKEOFF
	f	Lajd;	bf	BEACON_ACTIVATE
	f	Lajd;	bg	BEACON_AMBIENT
	f	Lajd;	bh	BEACON_DEACTIVATE
	f	Lajd;	bi	BEACON_POWER_SELECT
	f	Lajd;	bj	BEE_DEATH
	f	Lajd;	bk	BEE_HURT
	f	Lajd;	bl	BEE_LOOP_AGGRESSIVE
	f	Lajd;	bm	BEE_LOOP
	f	Lajd;	bn	BEE_STING
	f	Lajd;	bo	BEE_POLLINATE
	f	Lajd;	bp	BEEHIVE_DRIP
	f	Lajd;	bq	BEEHIVE_ENTER
	f	Lajd;	br	BEEHIVE_EXIT
	f	Lajd;	bs	BEEHIVE_SHEAR
	f	Lajd;	bt	BEEHIVE_WORK
	f	Lajd;	bu	BELL_BLOCK
	f	Lajd;	bv	BELL_RESONATE
	f	Lajd;	bw	BIG_DRIPLEAF_BREAK
	f	Lajd;	bx	BIG_DRIPLEAF_FALL
	f	Lajd;	by	BIG_DRIPLEAF_HIT
	f	Lajd;	bz	BIG_DRIPLEAF_PLACE
	f	Lajd;	cA	CANDLE_HIT
	f	Lajd;	cB	CANDLE_PLACE
	f	Lajd;	cC	CANDLE_STEP
	f	Lajd;	cD	CAT_AMBIENT
	f	Lajd;	cE	CAT_STRAY_AMBIENT
	f	Lajd;	cF	CAT_DEATH
	f	Lajd;	cG	CAT_EAT
	f	Lajd;	cH	CAT_HISS
	f	Lajd;	cI	CAT_BEG_FOR_FOOD
	f	Lajd;	cJ	CAT_HURT
	f	Lajd;	cK	CAT_PURR
	f	Lajd;	cL	CAT_PURREOW
	f	Lajd;	c	ALLAY_DEATH
	f	Lajd;	cM	CAVE_VINES_BREAK
	f	Lajd;	cN	CAVE_VINES_FALL
	f	Lajd;	cO	CAVE_VINES_HIT
	f	Lajd;	cP	CAVE_VINES_PLACE
	f	Lajd;	cQ	CAVE_VINES_STEP
	f	Lajd;	cR	CAVE_VINES_PICK_BERRIES
	f	Lajd;	cS	CHAIN_BREAK
	f	Lajd;	cT	CHAIN_FALL
	f	Lajd;	cU	CHAIN_HIT
	f	Lajd;	cV	CHAIN_PLACE
	f	Lajd;	cW	CHAIN_STEP
	f	Lajd;	cX	CHEST_CLOSE
	f	Lajd;	cY	CHEST_LOCKED
	f	Lajd;	cZ	CHEST_OPEN
	f	Lajd;	ca	BUCKET_EMPTY
	f	Lajd;	cb	BUCKET_EMPTY_AXOLOTL
	f	Lajd;	cc	BUCKET_EMPTY_FISH
	f	Lajd;	cd	BUCKET_EMPTY_LAVA
	f	Lajd;	ce	BUCKET_EMPTY_POWDER_SNOW
	f	Lajd;	cf	BUCKET_EMPTY_TADPOLE
	f	Lajd;	cg	BUCKET_FILL
	f	Lajd;	ch	BUCKET_FILL_AXOLOTL
	f	Lajd;	ci	BUCKET_FILL_FISH
	f	Lajd;	cj	BUCKET_FILL_LAVA
	f	Lajd;	ck	BUCKET_FILL_POWDER_SNOW
	f	Lajd;	cl	BUCKET_FILL_TADPOLE
	f	Lajd;	cm	BUNDLE_DROP_CONTENTS
	f	Lajd;	cn	BUNDLE_INSERT
	f	Lajd;	co	BUNDLE_REMOVE_ONE
	f	Lajd;	cp	CAKE_ADD_CANDLE
	f	Lajd;	cq	CALCITE_BREAK
	f	Lajd;	cr	CALCITE_STEP
	f	Lajd;	cs	CALCITE_PLACE
	f	Lajd;	ct	CALCITE_HIT
	f	Lajd;	cu	CALCITE_FALL
	f	Lajd;	cv	CAMPFIRE_CRACKLE
	f	Lajd;	cw	CANDLE_AMBIENT
	f	Lajd;	cx	CANDLE_BREAK
	f	Lajd;	cy	CANDLE_EXTINGUISH
	f	Lajd;	cz	CANDLE_FALL
	f	Lajd;	dA	COPPER_FALL
	f	Lajd;	dB	CORAL_BLOCK_BREAK
	f	Lajd;	dC	CORAL_BLOCK_FALL
	f	Lajd;	dD	CORAL_BLOCK_HIT
	f	Lajd;	dE	CORAL_BLOCK_PLACE
	f	Lajd;	dF	CORAL_BLOCK_STEP
	f	Lajd;	dG	COW_AMBIENT
	f	Lajd;	dH	COW_DEATH
	f	Lajd;	dI	COW_HURT
	f	Lajd;	dJ	COW_MILK
	f	Lajd;	dK	COW_STEP
	f	Lajd;	dL	CREEPER_DEATH
	f	Lajd;	d	ALLAY_HURT
	f	Lajd;	dM	CREEPER_HURT
	f	Lajd;	dN	CREEPER_PRIMED
	f	Lajd;	dO	CROP_BREAK
	f	Lajd;	dP	CROP_PLANTED
	f	Lajd;	dQ	CROSSBOW_HIT
	f	Lajd;	dR	CROSSBOW_LOADING_END
	f	Lajd;	dS	CROSSBOW_LOADING_MIDDLE
	f	Lajd;	dT	CROSSBOW_LOADING_START
	f	Lajd;	dU	CROSSBOW_QUICK_CHARGE_1
	f	Lajd;	dV	CROSSBOW_QUICK_CHARGE_2
	f	Lajd;	dW	CROSSBOW_QUICK_CHARGE_3
	f	Lajd;	dX	CROSSBOW_SHOOT
	f	Lajd;	dY	DEEPSLATE_BRICKS_BREAK
	f	Lajd;	dZ	DEEPSLATE_BRICKS_FALL
	f	Lajd;	da	CHICKEN_AMBIENT
	f	Lajd;	db	CHICKEN_DEATH
	f	Lajd;	dc	CHICKEN_EGG
	f	Lajd;	dd	CHICKEN_HURT
	f	Lajd;	de	CHICKEN_STEP
	f	Lajd;	df	CHORUS_FLOWER_DEATH
	f	Lajd;	dg	CHORUS_FLOWER_GROW
	f	Lajd;	dh	CHORUS_FRUIT_TELEPORT
	f	Lajd;	di	COD_AMBIENT
	f	Lajd;	dj	COD_DEATH
	f	Lajd;	dk	COD_FLOP
	f	Lajd;	dl	COD_HURT
	f	Lajd;	dm	COMPARATOR_CLICK
	f	Lajd;	dn	COMPOSTER_EMPTY
	f	Lajd;	do	COMPOSTER_FILL
	f	Lajd;	dp	COMPOSTER_FILL_SUCCESS
	f	Lajd;	dq	COMPOSTER_READY
	f	Lajd;	dr	CONDUIT_ACTIVATE
	f	Lajd;	ds	CONDUIT_AMBIENT
	f	Lajd;	dt	CONDUIT_AMBIENT_SHORT
	f	Lajd;	du	CONDUIT_ATTACK_TARGET
	f	Lajd;	dv	CONDUIT_DEACTIVATE
	f	Lajd;	dw	COPPER_BREAK
	f	Lajd;	dx	COPPER_STEP
	f	Lajd;	dy	COPPER_PLACE
	f	Lajd;	dz	COPPER_HIT
	f	Lajd;	eA	DONKEY_AMBIENT
	f	Lajd;	eB	DONKEY_ANGRY
	f	Lajd;	eC	DONKEY_CHEST
	f	Lajd;	eD	DONKEY_DEATH
	f	Lajd;	eE	DONKEY_EAT
	f	Lajd;	eF	DONKEY_HURT
	f	Lajd;	eG	DRIPSTONE_BLOCK_BREAK
	f	Lajd;	eH	DRIPSTONE_BLOCK_STEP
	f	Lajd;	eI	DRIPSTONE_BLOCK_PLACE
	f	Lajd;	eJ	DRIPSTONE_BLOCK_HIT
	f	Lajd;	eK	DRIPSTONE_BLOCK_FALL
	f	Lajd;	eL	POINTED_DRIPSTONE_BREAK
	f	Lajd;	e	ALLAY_ITEM_GIVEN
	f	Lajd;	eM	POINTED_DRIPSTONE_STEP
	f	Lajd;	eN	POINTED_DRIPSTONE_PLACE
	f	Lajd;	eO	POINTED_DRIPSTONE_HIT
	f	Lajd;	eP	POINTED_DRIPSTONE_FALL
	f	Lajd;	eQ	POINTED_DRIPSTONE_LAND
	f	Lajd;	eR	POINTED_DRIPSTONE_DRIP_LAVA
	f	Lajd;	eS	POINTED_DRIPSTONE_DRIP_WATER
	f	Lajd;	eT	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	f	Lajd;	eU	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	f	Lajd;	eV	BIG_DRIPLEAF_TILT_DOWN
	f	Lajd;	eW	BIG_DRIPLEAF_TILT_UP
	f	Lajd;	eX	DROWNED_AMBIENT
	f	Lajd;	eY	DROWNED_AMBIENT_WATER
	f	Lajd;	eZ	DROWNED_DEATH
	f	Lajd;	ea	DEEPSLATE_BRICKS_HIT
	f	Lajd;	eb	DEEPSLATE_BRICKS_PLACE
	f	Lajd;	ec	DEEPSLATE_BRICKS_STEP
	f	Lajd;	ed	DEEPSLATE_BREAK
	f	Lajd;	ee	DEEPSLATE_FALL
	f	Lajd;	ef	DEEPSLATE_HIT
	f	Lajd;	eg	DEEPSLATE_PLACE
	f	Lajd;	eh	DEEPSLATE_STEP
	f	Lajd;	ei	DEEPSLATE_TILES_BREAK
	f	Lajd;	ej	DEEPSLATE_TILES_FALL
	f	Lajd;	ek	DEEPSLATE_TILES_HIT
	f	Lajd;	el	DEEPSLATE_TILES_PLACE
	f	Lajd;	em	DEEPSLATE_TILES_STEP
	f	Lajd;	en	DISPENSER_DISPENSE
	f	Lajd;	eo	DISPENSER_FAIL
	f	Lajd;	ep	DISPENSER_LAUNCH
	f	Lajd;	eq	DOLPHIN_AMBIENT
	f	Lajd;	er	DOLPHIN_AMBIENT_WATER
	f	Lajd;	es	DOLPHIN_ATTACK
	f	Lajd;	et	DOLPHIN_DEATH
	f	Lajd;	eu	DOLPHIN_EAT
	f	Lajd;	ev	DOLPHIN_HURT
	f	Lajd;	ew	DOLPHIN_JUMP
	f	Lajd;	ex	DOLPHIN_PLAY
	f	Lajd;	ey	DOLPHIN_SPLASH
	f	Lajd;	ez	DOLPHIN_SWIM
	f	Lajd;	fA	ENDER_DRAGON_SHOOT
	f	Lajd;	fB	ENDER_EYE_DEATH
	f	Lajd;	fC	ENDER_EYE_LAUNCH
	f	Lajd;	fD	ENDERMAN_AMBIENT
	f	Lajd;	fE	ENDERMAN_DEATH
	f	Lajd;	fF	ENDERMAN_HURT
	f	Lajd;	fG	ENDERMAN_SCREAM
	f	Lajd;	fH	ENDERMAN_STARE
	f	Lajd;	fI	ENDERMAN_TELEPORT
	f	Lajd;	fJ	ENDERMITE_AMBIENT
	f	Lajd;	fK	ENDERMITE_DEATH
	f	Lajd;	fL	ENDERMITE_HURT
	f	Lajd;	f	ALLAY_ITEM_TAKEN
	f	Lajd;	fM	ENDERMITE_STEP
	f	Lajd;	fN	ENDER_PEARL_THROW
	f	Lajd;	fO	END_GATEWAY_SPAWN
	f	Lajd;	fP	END_PORTAL_FRAME_FILL
	f	Lajd;	fQ	END_PORTAL_SPAWN
	f	Lajd;	fR	EVOKER_AMBIENT
	f	Lajd;	fS	EVOKER_CAST_SPELL
	f	Lajd;	fT	EVOKER_CELEBRATE
	f	Lajd;	fU	EVOKER_DEATH
	f	Lajd;	fV	EVOKER_FANGS_ATTACK
	f	Lajd;	fW	EVOKER_HURT
	f	Lajd;	fX	EVOKER_PREPARE_ATTACK
	f	Lajd;	fY	EVOKER_PREPARE_SUMMON
	f	Lajd;	fZ	EVOKER_PREPARE_WOLOLO
	f	Lajd;	fa	DROWNED_DEATH_WATER
	f	Lajd;	fb	DROWNED_HURT
	f	Lajd;	fc	DROWNED_HURT_WATER
	f	Lajd;	fd	DROWNED_SHOOT
	f	Lajd;	fe	DROWNED_STEP
	f	Lajd;	ff	DROWNED_SWIM
	f	Lajd;	fg	DYE_USE
	f	Lajd;	fh	EGG_THROW
	f	Lajd;	fi	ELDER_GUARDIAN_AMBIENT
	f	Lajd;	fj	ELDER_GUARDIAN_AMBIENT_LAND
	f	Lajd;	fk	ELDER_GUARDIAN_CURSE
	f	Lajd;	fl	ELDER_GUARDIAN_DEATH
	f	Lajd;	fm	ELDER_GUARDIAN_DEATH_LAND
	f	Lajd;	fn	ELDER_GUARDIAN_FLOP
	f	Lajd;	fo	ELDER_GUARDIAN_HURT
	f	Lajd;	fp	ELDER_GUARDIAN_HURT_LAND
	f	Lajd;	fq	ELYTRA_FLYING
	f	Lajd;	fr	ENCHANTMENT_TABLE_USE
	f	Lajd;	fs	ENDER_CHEST_CLOSE
	f	Lajd;	ft	ENDER_CHEST_OPEN
	f	Lajd;	fu	ENDER_DRAGON_AMBIENT
	f	Lajd;	fv	ENDER_DRAGON_DEATH
	f	Lajd;	fw	DRAGON_FIREBALL_EXPLODE
	f	Lajd;	fx	ENDER_DRAGON_FLAP
	f	Lajd;	fy	ENDER_DRAGON_GROWL
	f	Lajd;	fz	ENDER_DRAGON_HURT
	f	Lajd;	gA	FOX_AMBIENT
	f	Lajd;	gB	FOX_BITE
	f	Lajd;	gC	FOX_DEATH
	f	Lajd;	gD	FOX_EAT
	f	Lajd;	gE	FOX_HURT
	f	Lajd;	gF	FOX_SCREECH
	f	Lajd;	gG	FOX_SLEEP
	f	Lajd;	gH	FOX_SNIFF
	f	Lajd;	gI	FOX_SPIT
	f	Lajd;	gJ	FOX_TELEPORT
	f	Lajd;	gK	FROGLIGHT_BREAK
	f	Lajd;	gL	FROGLIGHT_FALL
	f	Lajd;	g	ALLAY_THROW
	f	Lajd;	gM	FROGLIGHT_HIT
	f	Lajd;	gN	FROGLIGHT_PLACE
	f	Lajd;	gO	FROGLIGHT_STEP
	f	Lajd;	gP	FROGSPAWNSTEP
	f	Lajd;	gQ	FROGSPAWN_BREAK
	f	Lajd;	gR	FROGSPAWN_FALL
	f	Lajd;	gS	FROGSPAWN_HATCH
	f	Lajd;	gT	FROGSPAWN_HIT
	f	Lajd;	gU	FROGSPAWN_PLACE
	f	Lajd;	gV	FROG_AMBIENT
	f	Lajd;	gW	FROG_DEATH
	f	Lajd;	gX	FROG_EAT
	f	Lajd;	gY	FROG_HURT
	f	Lajd;	gZ	FROG_LAY_SPAWN
	f	Lajd;	ga	EXPERIENCE_BOTTLE_THROW
	f	Lajd;	gb	EXPERIENCE_ORB_PICKUP
	f	Lajd;	gc	FENCE_GATE_CLOSE
	f	Lajd;	gd	FENCE_GATE_OPEN
	f	Lajd;	ge	FIRECHARGE_USE
	f	Lajd;	gf	FIREWORK_ROCKET_BLAST
	f	Lajd;	gg	FIREWORK_ROCKET_BLAST_FAR
	f	Lajd;	gh	FIREWORK_ROCKET_LARGE_BLAST
	f	Lajd;	gi	FIREWORK_ROCKET_LARGE_BLAST_FAR
	f	Lajd;	gj	FIREWORK_ROCKET_LAUNCH
	f	Lajd;	gk	FIREWORK_ROCKET_SHOOT
	f	Lajd;	gl	FIREWORK_ROCKET_TWINKLE
	f	Lajd;	gm	FIREWORK_ROCKET_TWINKLE_FAR
	f	Lajd;	gn	FIRE_AMBIENT
	f	Lajd;	go	FIRE_EXTINGUISH
	f	Lajd;	gp	FISH_SWIM
	f	Lajd;	gq	FISHING_BOBBER_RETRIEVE
	f	Lajd;	gr	FISHING_BOBBER_SPLASH
	f	Lajd;	gs	FISHING_BOBBER_THROW
	f	Lajd;	gt	FLINTANDSTEEL_USE
	f	Lajd;	gu	FLOWERING_AZALEA_BREAK
	f	Lajd;	gv	FLOWERING_AZALEA_FALL
	f	Lajd;	gw	FLOWERING_AZALEA_HIT
	f	Lajd;	gx	FLOWERING_AZALEA_PLACE
	f	Lajd;	gy	FLOWERING_AZALEA_STEP
	f	Lajd;	gz	FOX_AGGRO
	f	Lajd;	hA	GILDED_BLACKSTONE_BREAK
	f	Lajd;	hB	GILDED_BLACKSTONE_FALL
	f	Lajd;	hC	GILDED_BLACKSTONE_HIT
	f	Lajd;	hD	GILDED_BLACKSTONE_PLACE
	f	Lajd;	hE	GILDED_BLACKSTONE_STEP
	f	Lajd;	hF	GLASS_BREAK
	f	Lajd;	hG	GLASS_FALL
	f	Lajd;	hH	GLASS_HIT
	f	Lajd;	hI	GLASS_PLACE
	f	Lajd;	hJ	GLASS_STEP
	f	Lajd;	hK	GLOW_INK_SAC_USE
	f	Lajd;	hL	GLOW_ITEM_FRAME_ADD_ITEM
	f	Lajd;	h	AMBIENT_CAVE
	f	Lajd;	hM	GLOW_ITEM_FRAME_BREAK
	f	Lajd;	hN	GLOW_ITEM_FRAME_PLACE
	f	Lajd;	hO	GLOW_ITEM_FRAME_REMOVE_ITEM
	f	Lajd;	hP	GLOW_ITEM_FRAME_ROTATE_ITEM
	f	Lajd;	hQ	GLOW_SQUID_AMBIENT
	f	Lajd;	hR	GLOW_SQUID_DEATH
	f	Lajd;	hS	GLOW_SQUID_HURT
	f	Lajd;	hT	GLOW_SQUID_SQUIRT
	f	Lajd;	hU	GOAT_AMBIENT
	f	Lajd;	hV	GOAT_DEATH
	f	Lajd;	hW	GOAT_EAT
	f	Lajd;	hX	GOAT_HURT
	f	Lajd;	hY	GOAT_LONG_JUMP
	f	Lajd;	hZ	GOAT_MILK
	f	Lajd;	ha	FROG_LONG_JUMP
	f	Lajd;	hb	FROG_STEP
	f	Lajd;	hc	FROG_TONGUE
	f	Lajd;	hd	ROOTS_BREAK
	f	Lajd;	he	ROOTS_STEP
	f	Lajd;	hf	ROOTS_PLACE
	f	Lajd;	hg	ROOTS_HIT
	f	Lajd;	hh	ROOTS_FALL
	f	Lajd;	hi	FURNACE_FIRE_CRACKLE
	f	Lajd;	hj	GENERIC_BIG_FALL
	f	Lajd;	hk	GENERIC_BURN
	f	Lajd;	hl	GENERIC_DEATH
	f	Lajd;	hm	GENERIC_DRINK
	f	Lajd;	hn	GENERIC_EAT
	f	Lajd;	ho	GENERIC_EXPLODE
	f	Lajd;	hp	GENERIC_EXTINGUISH_FIRE
	f	Lajd;	hq	GENERIC_HURT
	f	Lajd;	hr	GENERIC_SMALL_FALL
	f	Lajd;	hs	GENERIC_SPLASH
	f	Lajd;	ht	GENERIC_SWIM
	f	Lajd;	hu	GHAST_AMBIENT
	f	Lajd;	hv	GHAST_DEATH
	f	Lajd;	hw	GHAST_HURT
	f	Lajd;	hx	GHAST_SCREAM
	f	Lajd;	hy	GHAST_SHOOT
	f	Lajd;	hz	GHAST_WARN
	f	Lajd;	iA	GUARDIAN_AMBIENT
	f	Lajd;	iB	GUARDIAN_AMBIENT_LAND
	f	Lajd;	iC	GUARDIAN_ATTACK
	f	Lajd;	iD	GUARDIAN_DEATH
	f	Lajd;	iE	GUARDIAN_DEATH_LAND
	f	Lajd;	iF	GUARDIAN_FLOP
	f	Lajd;	iG	GUARDIAN_HURT
	f	Lajd;	iH	GUARDIAN_HURT_LAND
	f	Lajd;	iI	HANGING_ROOTS_BREAK
	f	Lajd;	iJ	HANGING_ROOTS_FALL
	f	Lajd;	iK	HANGING_ROOTS_HIT
	f	Lajd;	iL	HANGING_ROOTS_PLACE
	f	Lajd;	i	AMBIENT_BASALT_DELTAS_ADDITIONS
	f	Lajd;	iM	HANGING_ROOTS_STEP
	f	Lajd;	iN	HOE_TILL
	f	Lajd;	iO	HOGLIN_AMBIENT
	f	Lajd;	iP	HOGLIN_ANGRY
	f	Lajd;	iQ	HOGLIN_ATTACK
	f	Lajd;	iR	HOGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lajd;	iS	HOGLIN_DEATH
	f	Lajd;	iT	HOGLIN_HURT
	f	Lajd;	iU	HOGLIN_RETREAT
	f	Lajd;	iV	HOGLIN_STEP
	f	Lajd;	iW	HONEY_BLOCK_BREAK
	f	Lajd;	iX	HONEY_BLOCK_FALL
	f	Lajd;	iY	HONEY_BLOCK_HIT
	f	Lajd;	iZ	HONEY_BLOCK_PLACE
	f	Lajd;	ia	GOAT_PREPARE_RAM
	f	Lajd;	ib	GOAT_RAM_IMPACT
	f	Lajd;	ic	GOAT_HORN_BREAK
	f	Lajd;	id	GOAT_HORN_PLAY
	f	Lajd;	ie	GOAT_SCREAMING_AMBIENT
	f	Lajd;	if	GOAT_SCREAMING_DEATH
	f	Lajd;	ig	GOAT_SCREAMING_EAT
	f	Lajd;	ih	GOAT_SCREAMING_HURT
	f	Lajd;	ii	GOAT_SCREAMING_LONG_JUMP
	f	Lajd;	ij	GOAT_SCREAMING_MILK
	f	Lajd;	ik	GOAT_SCREAMING_PREPARE_RAM
	f	Lajd;	il	GOAT_SCREAMING_RAM_IMPACT
	f	Lajd;	im	GOAT_SCREAMING_HORN_BREAK
	f	Lajd;	in	GOAT_STEP
	f	Lajd;	io	GRASS_BREAK
	f	Lajd;	ip	GRASS_FALL
	f	Lajd;	iq	GRASS_HIT
	f	Lajd;	ir	GRASS_PLACE
	f	Lajd;	is	GRASS_STEP
	f	Lajd;	it	GRAVEL_BREAK
	f	Lajd;	iu	GRAVEL_FALL
	f	Lajd;	iv	GRAVEL_HIT
	f	Lajd;	iw	GRAVEL_PLACE
	f	Lajd;	ix	GRAVEL_STEP
	f	Lajd;	iy	GRINDSTONE_USE
	f	Lajd;	iz	GROWING_PLANT_CROP
	f	Lajd;	jA	HUSK_CONVERTED_TO_ZOMBIE
	f	Lajd;	jB	HUSK_DEATH
	f	Lajd;	jC	HUSK_HURT
	f	Lajd;	jD	HUSK_STEP
	f	Lajd;	jE	ILLUSIONER_AMBIENT
	f	Lajd;	jF	ILLUSIONER_CAST_SPELL
	f	Lajd;	jG	ILLUSIONER_DEATH
	f	Lajd;	jH	ILLUSIONER_HURT
	f	Lajd;	jI	ILLUSIONER_MIRROR_MOVE
	f	Lajd;	jJ	ILLUSIONER_PREPARE_BLINDNESS
	f	Lajd;	jK	ILLUSIONER_PREPARE_MIRROR
	f	Lajd;	jL	INK_SAC_USE
	f	Lajd;	j	AMBIENT_BASALT_DELTAS_LOOP
	f	Lajd;	jM	IRON_DOOR_CLOSE
	f	Lajd;	jN	IRON_DOOR_OPEN
	f	Lajd;	jO	IRON_GOLEM_ATTACK
	f	Lajd;	jP	IRON_GOLEM_DAMAGE
	f	Lajd;	jQ	IRON_GOLEM_DEATH
	f	Lajd;	jR	IRON_GOLEM_HURT
	f	Lajd;	jS	IRON_GOLEM_REPAIR
	f	Lajd;	jT	IRON_GOLEM_STEP
	f	Lajd;	jU	IRON_TRAPDOOR_CLOSE
	f	Lajd;	jV	IRON_TRAPDOOR_OPEN
	f	Lajd;	jW	ITEM_FRAME_ADD_ITEM
	f	Lajd;	jX	ITEM_FRAME_BREAK
	f	Lajd;	jY	ITEM_FRAME_PLACE
	f	Lajd;	jZ	ITEM_FRAME_REMOVE_ITEM
	f	Lajd;	ja	HONEY_BLOCK_SLIDE
	f	Lajd;	jb	HONEY_BLOCK_STEP
	f	Lajd;	jc	HONEYCOMB_WAX_ON
	f	Lajd;	jd	HONEY_DRINK
	f	I	je	GOAT_HORN_VARIANT_COUNT
	f	Lcom/google/common/collect/ImmutableList;	jf	GOAT_HORN_SOUND_VARIANTS
	f	Lajd;	jg	HORSE_AMBIENT
	f	Lajd;	jh	HORSE_ANGRY
	f	Lajd;	ji	HORSE_ARMOR
	f	Lajd;	jj	HORSE_BREATHE
	f	Lajd;	jk	HORSE_DEATH
	f	Lajd;	jl	HORSE_EAT
	f	Lajd;	jm	HORSE_GALLOP
	f	Lajd;	jn	HORSE_HURT
	f	Lajd;	jo	HORSE_JUMP
	f	Lajd;	jp	HORSE_LAND
	f	Lajd;	jq	HORSE_SADDLE
	f	Lajd;	jr	HORSE_STEP
	f	Lajd;	js	HORSE_STEP_WOOD
	f	Lajd;	jt	HOSTILE_BIG_FALL
	f	Lajd;	ju	HOSTILE_DEATH
	f	Lajd;	jv	HOSTILE_HURT
	f	Lajd;	jw	HOSTILE_SMALL_FALL
	f	Lajd;	jx	HOSTILE_SPLASH
	f	Lajd;	jy	HOSTILE_SWIM
	f	Lajd;	jz	HUSK_AMBIENT
	f	Lajd;	kA	LLAMA_CHEST
	f	Lajd;	kB	LLAMA_DEATH
	f	Lajd;	kC	LLAMA_EAT
	f	Lajd;	kD	LLAMA_HURT
	f	Lajd;	kE	LLAMA_SPIT
	f	Lajd;	kF	LLAMA_STEP
	f	Lajd;	kG	LLAMA_SWAG
	f	Lajd;	kH	MAGMA_CUBE_DEATH_SMALL
	f	Lajd;	kI	LODESTONE_BREAK
	f	Lajd;	kJ	LODESTONE_STEP
	f	Lajd;	kK	LODESTONE_PLACE
	f	Lajd;	kL	LODESTONE_HIT
	f	Lajd;	k	AMBIENT_BASALT_DELTAS_MOOD
	f	Lajd;	kM	LODESTONE_FALL
	f	Lajd;	kN	LODESTONE_COMPASS_LOCK
	f	Lajd;	kO	MAGMA_CUBE_DEATH
	f	Lajd;	kP	MAGMA_CUBE_HURT
	f	Lajd;	kQ	MAGMA_CUBE_HURT_SMALL
	f	Lajd;	kR	MAGMA_CUBE_JUMP
	f	Lajd;	kS	MAGMA_CUBE_SQUISH
	f	Lajd;	kT	MAGMA_CUBE_SQUISH_SMALL
	f	Lajd;	kU	MANGROVE_ROOTS_BREAK
	f	Lajd;	kV	MANGROVE_ROOTS_FALL
	f	Lajd;	kW	MANGROVE_ROOTS_HIT
	f	Lajd;	kX	MANGROVE_ROOTS_PLACE
	f	Lajd;	kY	MANGROVE_ROOTS_STEP
	f	Lajd;	kZ	MEDIUM_AMETHYST_BUD_BREAK
	f	Lajd;	ka	ITEM_FRAME_ROTATE_ITEM
	f	Lajd;	kb	ITEM_BREAK
	f	Lajd;	kc	ITEM_PICKUP
	f	Lajd;	kd	LADDER_BREAK
	f	Lajd;	ke	LADDER_FALL
	f	Lajd;	kf	LADDER_HIT
	f	Lajd;	kg	LADDER_PLACE
	f	Lajd;	kh	LADDER_STEP
	f	Lajd;	ki	LANTERN_BREAK
	f	Lajd;	kj	LANTERN_FALL
	f	Lajd;	kk	LANTERN_HIT
	f	Lajd;	kl	LANTERN_PLACE
	f	Lajd;	km	LANTERN_STEP
	f	Lajd;	kn	LARGE_AMETHYST_BUD_BREAK
	f	Lajd;	ko	LARGE_AMETHYST_BUD_PLACE
	f	Lajd;	kp	LAVA_AMBIENT
	f	Lajd;	kq	LAVA_EXTINGUISH
	f	Lajd;	kr	LAVA_POP
	f	Lajd;	ks	LEASH_KNOT_BREAK
	f	Lajd;	kt	LEASH_KNOT_PLACE
	f	Lajd;	ku	LEVER_CLICK
	f	Lajd;	kv	LIGHTNING_BOLT_IMPACT
	f	Lajd;	kw	LIGHTNING_BOLT_THUNDER
	f	Lajd;	kx	LINGERING_POTION_THROW
	f	Lajd;	ky	LLAMA_AMBIENT
	f	Lajd;	kz	LLAMA_ANGRY
	f	Lajd;	lA	MUD_BREAK
	f	Lajd;	lB	MUD_FALL
	f	Lajd;	lC	MUD_HIT
	f	Lajd;	lD	MUD_PLACE
	f	Lajd;	lE	MUD_STEP
	f	Lajd;	lF	MUD_BRICKS_BREAK
	f	Lajd;	lG	MUD_BRICKS_FALL
	f	Lajd;	lH	MUD_BRICKS_HIT
	f	Lajd;	lI	MUD_BRICKS_PLACE
	f	Lajd;	lJ	MUD_BRICKS_STEP
	f	Lajd;	lK	MUDDY_MANGROVE_ROOTS_BREAK
	f	Lajd;	lL	MUDDY_MANGROVE_ROOTS_FALL
	f	Lajd;	l	AMBIENT_CRIMSON_FOREST_ADDITIONS
	f	Lajd;	lM	MUDDY_MANGROVE_ROOTS_HIT
	f	Lajd;	lN	MUDDY_MANGROVE_ROOTS_PLACE
	f	Lajd;	lO	MUDDY_MANGROVE_ROOTS_STEP
	f	Lajd;	lP	MULE_AMBIENT
	f	Lajd;	lQ	MULE_ANGRY
	f	Lajd;	lR	MULE_CHEST
	f	Lajd;	lS	MULE_DEATH
	f	Lajd;	lT	MULE_EAT
	f	Lajd;	lU	MULE_HURT
	f	Lajd;	lV	MUSIC_CREATIVE
	f	Lajd;	lW	MUSIC_CREDITS
	f	Lajd;	lX	MUSIC_DISC_5
	f	Lajd;	lY	MUSIC_DISC_11
	f	Lajd;	lZ	MUSIC_DISC_13
	f	Lajd;	la	MEDIUM_AMETHYST_BUD_PLACE
	f	Lajd;	lb	METAL_BREAK
	f	Lajd;	lc	METAL_FALL
	f	Lajd;	ld	METAL_HIT
	f	Lajd;	le	METAL_PLACE
	f	Lajd;	lf	METAL_PRESSURE_PLATE_CLICK_OFF
	f	Lajd;	lg	METAL_PRESSURE_PLATE_CLICK_ON
	f	Lajd;	lh	METAL_STEP
	f	Lajd;	li	MINECART_INSIDE_UNDERWATER
	f	Lajd;	lj	MINECART_INSIDE
	f	Lajd;	lk	MINECART_RIDING
	f	Lajd;	ll	MOOSHROOM_CONVERT
	f	Lajd;	lm	MOOSHROOM_EAT
	f	Lajd;	ln	MOOSHROOM_MILK
	f	Lajd;	lo	MOOSHROOM_MILK_SUSPICIOUSLY
	f	Lajd;	lp	MOOSHROOM_SHEAR
	f	Lajd;	lq	MOSS_CARPET_BREAK
	f	Lajd;	lr	MOSS_CARPET_FALL
	f	Lajd;	ls	MOSS_CARPET_HIT
	f	Lajd;	lt	MOSS_CARPET_PLACE
	f	Lajd;	lu	MOSS_CARPET_STEP
	f	Lajd;	lv	MOSS_BREAK
	f	Lajd;	lw	MOSS_FALL
	f	Lajd;	lx	MOSS_HIT
	f	Lajd;	ly	MOSS_PLACE
	f	Lajd;	lz	MOSS_STEP
	f	Lajd;	mA	MUSIC_BIOME_MEADOW
	f	Lajd;	mB	MUSIC_BIOME_NETHER_WASTES
	f	Lajd;	mC	MUSIC_BIOME_FROZEN_PEAKS
	f	Lajd;	mD	MUSIC_BIOME_SNOWY_SLOPES
	f	Lajd;	mE	MUSIC_BIOME_SOUL_SAND_VALLEY
	f	Lajd;	mF	MUSIC_BIOME_STONY_PEAKS
	f	Lajd;	mG	MUSIC_BIOME_WARPED_FOREST
	f	Lajd;	mH	MUSIC_UNDER_WATER
	f	Lajd;	mI	NETHER_BRICKS_BREAK
	f	Lajd;	mJ	NETHER_BRICKS_STEP
	f	Lajd;	mK	NETHER_BRICKS_PLACE
	f	Lajd;	mL	NETHER_BRICKS_HIT
	f	Lajd;	m	AMBIENT_CRIMSON_FOREST_LOOP
	f	Lajd;	mM	NETHER_BRICKS_FALL
	f	Lajd;	mN	NETHER_WART_BREAK
	f	Lajd;	mO	NETHER_WART_PLANTED
	f	Lajd;	mP	PACKED_MUD_BREAK
	f	Lajd;	mQ	PACKED_MUD_FALL
	f	Lajd;	mR	PACKED_MUD_HIT
	f	Lajd;	mS	PACKED_MUD_PLACE
	f	Lajd;	mT	PACKED_MUD_STEP
	f	Lajd;	mU	STEM_BREAK
	f	Lajd;	mV	STEM_STEP
	f	Lajd;	mW	STEM_PLACE
	f	Lajd;	mX	STEM_HIT
	f	Lajd;	mY	STEM_FALL
	f	Lajd;	mZ	NYLIUM_BREAK
	f	Lajd;	ma	MUSIC_DISC_BLOCKS
	f	Lajd;	mb	MUSIC_DISC_CAT
	f	Lajd;	mc	MUSIC_DISC_CHIRP
	f	Lajd;	md	MUSIC_DISC_FAR
	f	Lajd;	me	MUSIC_DISC_MALL
	f	Lajd;	mf	MUSIC_DISC_MELLOHI
	f	Lajd;	mg	MUSIC_DISC_PIGSTEP
	f	Lajd;	mh	MUSIC_DISC_STAL
	f	Lajd;	mi	MUSIC_DISC_STRAD
	f	Lajd;	mj	MUSIC_DISC_WAIT
	f	Lajd;	mk	MUSIC_DISC_WARD
	f	Lajd;	ml	MUSIC_DISC_OTHERSIDE
	f	Lajd;	mm	MUSIC_DRAGON
	f	Lajd;	mn	MUSIC_END
	f	Lajd;	mo	MUSIC_GAME
	f	Lajd;	mp	MUSIC_MENU
	f	Lajd;	mq	MUSIC_BIOME_BASALT_DELTAS
	f	Lajd;	mr	MUSIC_BIOME_CRIMSON_FOREST
	f	Lajd;	ms	MUSIC_BIOME_DEEP_DARK
	f	Lajd;	mt	MUSIC_BIOME_DRIPSTONE_CAVES
	f	Lajd;	mu	MUSIC_BIOME_GROVE
	f	Lajd;	mv	MUSIC_BIOME_JAGGED_PEAKS
	f	Lajd;	mw	MUSIC_BIOME_LUSH_CAVES
	f	Lajd;	mx	MUSIC_BIOME_SWAMP
	f	Lajd;	my	MUSIC_BIOME_JUNGLE_AND_FOREST
	f	Lajd;	mz	MUSIC_BIOME_OLD_GROWTH_TAIGA
	f	Lajd;	nA	NETHERITE_BLOCK_PLACE
	f	Lajd;	nB	NETHERITE_BLOCK_HIT
	f	Lajd;	nC	NETHERITE_BLOCK_FALL
	f	Lajd;	nD	NETHERRACK_BREAK
	f	Lajd;	nE	NETHERRACK_STEP
	f	Lajd;	nF	NETHERRACK_PLACE
	f	Lajd;	nG	NETHERRACK_HIT
	f	Lajd;	nH	NETHERRACK_FALL
	f	Lajd;	nI	NOTE_BLOCK_BASEDRUM
	f	Lajd;	nJ	NOTE_BLOCK_BASS
	f	Lajd;	nK	NOTE_BLOCK_BELL
	f	Lajd;	nL	NOTE_BLOCK_CHIME
	f	Lajd;	n	AMBIENT_CRIMSON_FOREST_MOOD
	f	Lajd;	nM	NOTE_BLOCK_FLUTE
	f	Lajd;	nN	NOTE_BLOCK_GUITAR
	f	Lajd;	nO	NOTE_BLOCK_HARP
	f	Lajd;	nP	NOTE_BLOCK_HAT
	f	Lajd;	nQ	NOTE_BLOCK_PLING
	f	Lajd;	nR	NOTE_BLOCK_SNARE
	f	Lajd;	nS	NOTE_BLOCK_XYLOPHONE
	f	Lajd;	nT	NOTE_BLOCK_IRON_XYLOPHONE
	f	Lajd;	nU	NOTE_BLOCK_COW_BELL
	f	Lajd;	nV	NOTE_BLOCK_DIDGERIDOO
	f	Lajd;	nW	NOTE_BLOCK_BIT
	f	Lajd;	nX	NOTE_BLOCK_BANJO
	f	Lajd;	nY	OCELOT_HURT
	f	Lajd;	nZ	OCELOT_AMBIENT
	f	Lajd;	na	NYLIUM_STEP
	f	Lajd;	nb	NYLIUM_PLACE
	f	Lajd;	nc	NYLIUM_HIT
	f	Lajd;	nd	NYLIUM_FALL
	f	Lajd;	ne	NETHER_SPROUTS_BREAK
	f	Lajd;	nf	NETHER_SPROUTS_STEP
	f	Lajd;	ng	NETHER_SPROUTS_PLACE
	f	Lajd;	nh	NETHER_SPROUTS_HIT
	f	Lajd;	ni	NETHER_SPROUTS_FALL
	f	Lajd;	nj	FUNGUS_BREAK
	f	Lajd;	nk	FUNGUS_STEP
	f	Lajd;	nl	FUNGUS_PLACE
	f	Lajd;	nm	FUNGUS_HIT
	f	Lajd;	nn	FUNGUS_FALL
	f	Lajd;	no	WEEPING_VINES_BREAK
	f	Lajd;	np	WEEPING_VINES_STEP
	f	Lajd;	nq	WEEPING_VINES_PLACE
	f	Lajd;	nr	WEEPING_VINES_HIT
	f	Lajd;	ns	WEEPING_VINES_FALL
	f	Lajd;	nt	WART_BLOCK_BREAK
	f	Lajd;	nu	WART_BLOCK_STEP
	f	Lajd;	nv	WART_BLOCK_PLACE
	f	Lajd;	nw	WART_BLOCK_HIT
	f	Lajd;	nx	WART_BLOCK_FALL
	f	Lajd;	ny	NETHERITE_BLOCK_BREAK
	f	Lajd;	nz	NETHERITE_BLOCK_STEP
	f	Lajd;	oA	PARROT_IMITATE_GHAST
	f	Lajd;	oB	PARROT_IMITATE_GUARDIAN
	f	Lajd;	oC	PARROT_IMITATE_HOGLIN
	f	Lajd;	oD	PARROT_IMITATE_HUSK
	f	Lajd;	oE	PARROT_IMITATE_ILLUSIONER
	f	Lajd;	oF	PARROT_IMITATE_MAGMA_CUBE
	f	Lajd;	oG	PARROT_IMITATE_PHANTOM
	f	Lajd;	oH	PARROT_IMITATE_PIGLIN
	f	Lajd;	oI	PARROT_IMITATE_PIGLIN_BRUTE
	f	Lajd;	oJ	PARROT_IMITATE_PILLAGER
	f	Lajd;	oK	PARROT_IMITATE_RAVAGER
	f	Lajd;	oL	PARROT_IMITATE_SHULKER
	f	Lajd;	o	AMBIENT_NETHER_WASTES_ADDITIONS
	f	Lajd;	oM	PARROT_IMITATE_SILVERFISH
	f	Lajd;	oN	PARROT_IMITATE_SKELETON
	f	Lajd;	oO	PARROT_IMITATE_SLIME
	f	Lajd;	oP	PARROT_IMITATE_SPIDER
	f	Lajd;	oQ	PARROT_IMITATE_STRAY
	f	Lajd;	oR	PARROT_IMITATE_VEX
	f	Lajd;	oS	PARROT_IMITATE_VINDICATOR
	f	Lajd;	oT	PARROT_IMITATE_WARDEN
	f	Lajd;	oU	PARROT_IMITATE_WITCH
	f	Lajd;	oV	PARROT_IMITATE_WITHER
	f	Lajd;	oW	PARROT_IMITATE_WITHER_SKELETON
	f	Lajd;	oX	PARROT_IMITATE_ZOGLIN
	f	Lajd;	oY	PARROT_IMITATE_ZOMBIE
	f	Lajd;	oZ	PARROT_IMITATE_ZOMBIE_VILLAGER
	f	Lajd;	oa	OCELOT_DEATH
	f	Lajd;	ob	PAINTING_BREAK
	f	Lajd;	oc	PAINTING_PLACE
	f	Lajd;	od	PANDA_PRE_SNEEZE
	f	Lajd;	oe	PANDA_SNEEZE
	f	Lajd;	of	PANDA_AMBIENT
	f	Lajd;	og	PANDA_DEATH
	f	Lajd;	oh	PANDA_EAT
	f	Lajd;	oi	PANDA_STEP
	f	Lajd;	oj	PANDA_CANT_BREED
	f	Lajd;	ok	PANDA_AGGRESSIVE_AMBIENT
	f	Lajd;	ol	PANDA_WORRIED_AMBIENT
	f	Lajd;	om	PANDA_HURT
	f	Lajd;	on	PANDA_BITE
	f	Lajd;	oo	PARROT_AMBIENT
	f	Lajd;	op	PARROT_DEATH
	f	Lajd;	oq	PARROT_EAT
	f	Lajd;	or	PARROT_FLY
	f	Lajd;	os	PARROT_HURT
	f	Lajd;	ot	PARROT_IMITATE_BLAZE
	f	Lajd;	ou	PARROT_IMITATE_CREEPER
	f	Lajd;	ov	PARROT_IMITATE_DROWNED
	f	Lajd;	ow	PARROT_IMITATE_ELDER_GUARDIAN
	f	Lajd;	ox	PARROT_IMITATE_ENDER_DRAGON
	f	Lajd;	oy	PARROT_IMITATE_ENDERMITE
	f	Lajd;	oz	PARROT_IMITATE_EVOKER
	f	Lajd;	pA	PIGLIN_BRUTE_STEP
	f	Lajd;	pB	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	f	Lajd;	pC	PILLAGER_AMBIENT
	f	Lajd;	pD	PILLAGER_CELEBRATE
	f	Lajd;	pE	PILLAGER_DEATH
	f	Lajd;	pF	PILLAGER_HURT
	f	Lajd;	pG	PISTON_CONTRACT
	f	Lajd;	pH	PISTON_EXTEND
	f	Lajd;	pI	PLAYER_ATTACK_CRIT
	f	Lajd;	pJ	PLAYER_ATTACK_KNOCKBACK
	f	Lajd;	pK	PLAYER_ATTACK_NODAMAGE
	f	Lajd;	pL	PLAYER_ATTACK_STRONG
	f	Lajd;	p	AMBIENT_NETHER_WASTES_LOOP
	f	Lajd;	pM	PLAYER_ATTACK_SWEEP
	f	Lajd;	pN	PLAYER_ATTACK_WEAK
	f	Lajd;	pO	PLAYER_BIG_FALL
	f	Lajd;	pP	PLAYER_BREATH
	f	Lajd;	pQ	PLAYER_BURP
	f	Lajd;	pR	PLAYER_DEATH
	f	Lajd;	pS	PLAYER_HURT
	f	Lajd;	pT	PLAYER_HURT_DROWN
	f	Lajd;	pU	PLAYER_HURT_FREEZE
	f	Lajd;	pV	PLAYER_HURT_ON_FIRE
	f	Lajd;	pW	PLAYER_HURT_SWEET_BERRY_BUSH
	f	Lajd;	pX	PLAYER_LEVELUP
	f	Lajd;	pY	PLAYER_SMALL_FALL
	f	Lajd;	pZ	PLAYER_SPLASH
	f	Lajd;	pa	PARROT_STEP
	f	Lajd;	pb	PHANTOM_AMBIENT
	f	Lajd;	pc	PHANTOM_BITE
	f	Lajd;	pd	PHANTOM_DEATH
	f	Lajd;	pe	PHANTOM_FLAP
	f	Lajd;	pf	PHANTOM_HURT
	f	Lajd;	pg	PHANTOM_SWOOP
	f	Lajd;	ph	PIG_AMBIENT
	f	Lajd;	pi	PIG_DEATH
	f	Lajd;	pj	PIG_HURT
	f	Lajd;	pk	PIG_SADDLE
	f	Lajd;	pl	PIG_STEP
	f	Lajd;	pm	PIGLIN_ADMIRING_ITEM
	f	Lajd;	pn	PIGLIN_AMBIENT
	f	Lajd;	po	PIGLIN_ANGRY
	f	Lajd;	pp	PIGLIN_CELEBRATE
	f	Lajd;	pq	PIGLIN_DEATH
	f	Lajd;	pr	PIGLIN_JEALOUS
	f	Lajd;	ps	PIGLIN_HURT
	f	Lajd;	pt	PIGLIN_RETREAT
	f	Lajd;	pu	PIGLIN_STEP
	f	Lajd;	pv	PIGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lajd;	pw	PIGLIN_BRUTE_AMBIENT
	f	Lajd;	px	PIGLIN_BRUTE_ANGRY
	f	Lajd;	py	PIGLIN_BRUTE_DEATH
	f	Lajd;	pz	PIGLIN_BRUTE_HURT
	f	Lajd;	qA	PUFFER_FISH_HURT
	f	Lajd;	qB	PUFFER_FISH_STING
	f	Lajd;	qC	PUMPKIN_CARVE
	f	Lajd;	qD	RABBIT_AMBIENT
	f	Lajd;	qE	RABBIT_ATTACK
	f	Lajd;	qF	RABBIT_DEATH
	f	Lajd;	qG	RABBIT_HURT
	f	Lajd;	qH	RABBIT_JUMP
	f	Lajd;	qI	RAID_HORN
	f	Lajd;	qJ	RAVAGER_AMBIENT
	f	Lajd;	qK	RAVAGER_ATTACK
	f	Lajd;	qL	RAVAGER_CELEBRATE
	f	Lajd;	q	AMBIENT_NETHER_WASTES_MOOD
	f	Lajd;	qM	RAVAGER_DEATH
	f	Lajd;	qN	RAVAGER_HURT
	f	Lajd;	qO	RAVAGER_STEP
	f	Lajd;	qP	RAVAGER_STUNNED
	f	Lajd;	qQ	RAVAGER_ROAR
	f	Lajd;	qR	NETHER_GOLD_ORE_BREAK
	f	Lajd;	qS	NETHER_GOLD_ORE_FALL
	f	Lajd;	qT	NETHER_GOLD_ORE_HIT
	f	Lajd;	qU	NETHER_GOLD_ORE_PLACE
	f	Lajd;	qV	NETHER_GOLD_ORE_STEP
	f	Lajd;	qW	NETHER_ORE_BREAK
	f	Lajd;	qX	NETHER_ORE_FALL
	f	Lajd;	qY	NETHER_ORE_HIT
	f	Lajd;	qZ	NETHER_ORE_PLACE
	f	Lajd;	qa	PLAYER_SPLASH_HIGH_SPEED
	f	Lajd;	qb	PLAYER_SWIM
	f	Lajd;	qc	POLAR_BEAR_AMBIENT
	f	Lajd;	qd	POLAR_BEAR_AMBIENT_BABY
	f	Lajd;	qe	POLAR_BEAR_DEATH
	f	Lajd;	qf	POLAR_BEAR_HURT
	f	Lajd;	qg	POLAR_BEAR_STEP
	f	Lajd;	qh	POLAR_BEAR_WARNING
	f	Lajd;	qi	POLISHED_DEEPSLATE_BREAK
	f	Lajd;	qj	POLISHED_DEEPSLATE_FALL
	f	Lajd;	qk	POLISHED_DEEPSLATE_HIT
	f	Lajd;	ql	POLISHED_DEEPSLATE_PLACE
	f	Lajd;	qm	POLISHED_DEEPSLATE_STEP
	f	Lajd;	qn	PORTAL_AMBIENT
	f	Lajd;	qo	PORTAL_TRAVEL
	f	Lajd;	qp	PORTAL_TRIGGER
	f	Lajd;	qq	POWDER_SNOW_BREAK
	f	Lajd;	qr	POWDER_SNOW_FALL
	f	Lajd;	qs	POWDER_SNOW_HIT
	f	Lajd;	qt	POWDER_SNOW_PLACE
	f	Lajd;	qu	POWDER_SNOW_STEP
	f	Lajd;	qv	PUFFER_FISH_AMBIENT
	f	Lajd;	qw	PUFFER_FISH_BLOW_OUT
	f	Lajd;	qx	PUFFER_FISH_BLOW_UP
	f	Lajd;	qy	PUFFER_FISH_DEATH
	f	Lajd;	qz	PUFFER_FISH_FLOP
	f	Lajd;	rA	SCULK_BLOCK_CHARGE
	f	Lajd;	rB	SCULK_BLOCK_BREAK
	f	Lajd;	rC	SCULK_BLOCK_FALL
	f	Lajd;	rD	SCULK_BLOCK_HIT
	f	Lajd;	rE	SCULK_BLOCK_PLACE
	f	Lajd;	rF	SCULK_BLOCK_STEP
	f	Lajd;	rG	SCULK_CATALYST_BLOOM
	f	Lajd;	rH	SCULK_CATALYST_BREAK
	f	Lajd;	rI	SCULK_CATALYST_FALL
	f	Lajd;	rJ	SCULK_CATALYST_HIT
	f	Lajd;	rK	SCULK_CATALYST_PLACE
	f	Lajd;	rL	SCULK_CATALYST_STEP
	f	Lajd;	r	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	f	Lajd;	rM	SCULK_CLICKING
	f	Lajd;	rN	SCULK_CLICKING_STOP
	f	Lajd;	rO	SCULK_SENSOR_BREAK
	f	Lajd;	rP	SCULK_SENSOR_FALL
	f	Lajd;	rQ	SCULK_SENSOR_HIT
	f	Lajd;	rR	SCULK_SENSOR_PLACE
	f	Lajd;	rS	SCULK_SENSOR_STEP
	f	Lajd;	rT	SCULK_SHRIEKER_BREAK
	f	Lajd;	rU	SCULK_SHRIEKER_FALL
	f	Lajd;	rV	SCULK_SHRIEKER_HIT
	f	Lajd;	rW	SCULK_SHRIEKER_PLACE
	f	Lajd;	rX	SCULK_SHRIEKER_SHRIEK
	f	Lajd;	rY	SCULK_SHRIEKER_STEP
	f	Lajd;	rZ	SCULK_VEIN_BREAK
	f	Lajd;	ra	NETHER_ORE_STEP
	f	Lajd;	rb	REDSTONE_TORCH_BURNOUT
	f	Lajd;	rc	RESPAWN_ANCHOR_AMBIENT
	f	Lajd;	rd	RESPAWN_ANCHOR_CHARGE
	f	Lajd;	re	RESPAWN_ANCHOR_DEPLETE
	f	Lajd;	rf	RESPAWN_ANCHOR_SET_SPAWN
	f	Lajd;	rg	ROOTED_DIRT_BREAK
	f	Lajd;	rh	ROOTED_DIRT_FALL
	f	Lajd;	ri	ROOTED_DIRT_HIT
	f	Lajd;	rj	ROOTED_DIRT_PLACE
	f	Lajd;	rk	ROOTED_DIRT_STEP
	f	Lajd;	rl	SALMON_AMBIENT
	f	Lajd;	rm	SALMON_DEATH
	f	Lajd;	rn	SALMON_FLOP
	f	Lajd;	ro	SALMON_HURT
	f	Lajd;	rp	SAND_BREAK
	f	Lajd;	rq	SAND_FALL
	f	Lajd;	rr	SAND_HIT
	f	Lajd;	rs	SAND_PLACE
	f	Lajd;	rt	SAND_STEP
	f	Lajd;	ru	SCAFFOLDING_BREAK
	f	Lajd;	rv	SCAFFOLDING_FALL
	f	Lajd;	rw	SCAFFOLDING_HIT
	f	Lajd;	rx	SCAFFOLDING_PLACE
	f	Lajd;	ry	SCAFFOLDING_STEP
	f	Lajd;	rz	SCULK_BLOCK_SPREAD
	f	Lajd;	sA	SHULKER_OPEN
	f	Lajd;	sB	SHULKER_SHOOT
	f	Lajd;	sC	SHULKER_TELEPORT
	f	Lajd;	sD	SILVERFISH_AMBIENT
	f	Lajd;	sE	SILVERFISH_DEATH
	f	Lajd;	sF	SILVERFISH_HURT
	f	Lajd;	sG	SILVERFISH_STEP
	f	Lajd;	sH	SKELETON_AMBIENT
	f	Lajd;	sI	SKELETON_CONVERTED_TO_STRAY
	f	Lajd;	sJ	SKELETON_DEATH
	f	Lajd;	sK	SKELETON_HORSE_AMBIENT
	f	Lajd;	sL	SKELETON_HORSE_DEATH
	f	Lajd;	s	AMBIENT_SOUL_SAND_VALLEY_LOOP
	f	Lajd;	sM	SKELETON_HORSE_HURT
	f	Lajd;	sN	SKELETON_HORSE_SWIM
	f	Lajd;	sO	SKELETON_HORSE_AMBIENT_WATER
	f	Lajd;	sP	SKELETON_HORSE_GALLOP_WATER
	f	Lajd;	sQ	SKELETON_HORSE_JUMP_WATER
	f	Lajd;	sR	SKELETON_HORSE_STEP_WATER
	f	Lajd;	sS	SKELETON_HURT
	f	Lajd;	sT	SKELETON_SHOOT
	f	Lajd;	sU	SKELETON_STEP
	f	Lajd;	sV	SLIME_ATTACK
	f	Lajd;	sW	SLIME_DEATH
	f	Lajd;	sX	SLIME_HURT
	f	Lajd;	sY	SLIME_JUMP
	f	Lajd;	sZ	SLIME_SQUISH
	f	Lajd;	sa	SCULK_VEIN_FALL
	f	Lajd;	sb	SCULK_VEIN_HIT
	f	Lajd;	sc	SCULK_VEIN_PLACE
	f	Lajd;	sd	SCULK_VEIN_STEP
	f	Lajd;	se	SHEEP_AMBIENT
	f	Lajd;	sf	SHEEP_DEATH
	f	Lajd;	sg	SHEEP_HURT
	f	Lajd;	sh	SHEEP_SHEAR
	f	Lajd;	si	SHEEP_STEP
	f	Lajd;	sj	SHIELD_BLOCK
	f	Lajd;	sk	SHIELD_BREAK
	f	Lajd;	sl	SHROOMLIGHT_BREAK
	f	Lajd;	sm	SHROOMLIGHT_STEP
	f	Lajd;	sn	SHROOMLIGHT_PLACE
	f	Lajd;	so	SHROOMLIGHT_HIT
	f	Lajd;	sp	SHROOMLIGHT_FALL
	f	Lajd;	sq	SHOVEL_FLATTEN
	f	Lajd;	sr	SHULKER_AMBIENT
	f	Lajd;	ss	SHULKER_BOX_CLOSE
	f	Lajd;	st	SHULKER_BOX_OPEN
	f	Lajd;	su	SHULKER_BULLET_HIT
	f	Lajd;	sv	SHULKER_BULLET_HURT
	f	Lajd;	sw	SHULKER_CLOSE
	f	Lajd;	sx	SHULKER_DEATH
	f	Lajd;	sy	SHULKER_HURT
	f	Lajd;	sz	SHULKER_HURT_CLOSED
	f	Lajd;	tA	SPORE_BLOSSOM_PLACE
	f	Lajd;	tB	SPORE_BLOSSOM_STEP
	f	Lajd;	tC	STRIDER_AMBIENT
	f	Lajd;	tD	STRIDER_HAPPY
	f	Lajd;	tE	STRIDER_RETREAT
	f	Lajd;	tF	STRIDER_DEATH
	f	Lajd;	tG	STRIDER_HURT
	f	Lajd;	tH	STRIDER_STEP
	f	Lajd;	tI	STRIDER_STEP_LAVA
	f	Lajd;	tJ	STRIDER_EAT
	f	Lajd;	tK	STRIDER_SADDLE
	f	Lajd;	tL	SLIME_DEATH_SMALL
	f	Lajd;	t	AMBIENT_SOUL_SAND_VALLEY_MOOD
	f	Lajd;	tM	SLIME_HURT_SMALL
	f	Lajd;	tN	SLIME_JUMP_SMALL
	f	Lajd;	tO	SLIME_SQUISH_SMALL
	f	Lajd;	tP	SMITHING_TABLE_USE
	f	Lajd;	tQ	SMOKER_SMOKE
	f	Lajd;	tR	SNOWBALL_THROW
	f	Lajd;	tS	SNOW_BREAK
	f	Lajd;	tT	SNOW_FALL
	f	Lajd;	tU	SNOW_GOLEM_AMBIENT
	f	Lajd;	tV	SNOW_GOLEM_DEATH
	f	Lajd;	tW	SNOW_GOLEM_HURT
	f	Lajd;	tX	SNOW_GOLEM_SHOOT
	f	Lajd;	tY	SNOW_GOLEM_SHEAR
	f	Lajd;	tZ	SNOW_HIT
	f	Lajd;	ta	SLIME_BLOCK_BREAK
	f	Lajd;	tb	SLIME_BLOCK_FALL
	f	Lajd;	tc	SLIME_BLOCK_HIT
	f	Lajd;	td	SLIME_BLOCK_PLACE
	f	Lajd;	te	SLIME_BLOCK_STEP
	f	Lajd;	tf	SMALL_AMETHYST_BUD_BREAK
	f	Lajd;	tg	SMALL_AMETHYST_BUD_PLACE
	f	Lajd;	th	SMALL_DRIPLEAF_BREAK
	f	Lajd;	ti	SMALL_DRIPLEAF_FALL
	f	Lajd;	tj	SMALL_DRIPLEAF_HIT
	f	Lajd;	tk	SMALL_DRIPLEAF_PLACE
	f	Lajd;	tl	SMALL_DRIPLEAF_STEP
	f	Lajd;	tm	SOUL_SAND_BREAK
	f	Lajd;	tn	SOUL_SAND_STEP
	f	Lajd;	to	SOUL_SAND_PLACE
	f	Lajd;	tp	SOUL_SAND_HIT
	f	Lajd;	tq	SOUL_SAND_FALL
	f	Lajd;	tr	SOUL_SOIL_BREAK
	f	Lajd;	ts	SOUL_SOIL_STEP
	f	Lajd;	tt	SOUL_SOIL_PLACE
	f	Lajd;	tu	SOUL_SOIL_HIT
	f	Lajd;	tv	SOUL_SOIL_FALL
	f	Lajd;	tw	SOUL_ESCAPE
	f	Lajd;	tx	SPORE_BLOSSOM_BREAK
	f	Lajd;	ty	SPORE_BLOSSOM_FALL
	f	Lajd;	tz	SPORE_BLOSSOM_HIT
	f	Lajd;	uA	STRAY_STEP
	f	Lajd;	uB	SWEET_BERRY_BUSH_BREAK
	f	Lajd;	uC	SWEET_BERRY_BUSH_PLACE
	f	Lajd;	uD	SWEET_BERRY_BUSH_PICK_BERRIES
	f	Lajd;	uE	TADPOLE_DEATH
	f	Lajd;	uF	TADPOLE_FLOP
	f	Lajd;	uG	TADPOLE_GROW_UP
	f	Lajd;	uH	TADPOLE_HURT
	f	Lajd;	uI	THORNS_HIT
	f	Lajd;	uJ	TNT_PRIMED
	f	Lajd;	uK	TOTEM_USE
	f	Lajd;	uL	TRIDENT_HIT
	f	Lajd;	u	AMBIENT_WARPED_FOREST_ADDITIONS
	f	Lajd;	uM	TRIDENT_HIT_GROUND
	f	Lajd;	uN	TRIDENT_RETURN
	f	Lajd;	uO	TRIDENT_RIPTIDE_1
	f	Lajd;	uP	TRIDENT_RIPTIDE_2
	f	Lajd;	uQ	TRIDENT_RIPTIDE_3
	f	Lajd;	uR	TRIDENT_THROW
	f	Lajd;	uS	TRIDENT_THUNDER
	f	Lajd;	uT	TRIPWIRE_ATTACH
	f	Lajd;	uU	TRIPWIRE_CLICK_OFF
	f	Lajd;	uV	TRIPWIRE_CLICK_ON
	f	Lajd;	uW	TRIPWIRE_DETACH
	f	Lajd;	uX	TROPICAL_FISH_AMBIENT
	f	Lajd;	uY	TROPICAL_FISH_DEATH
	f	Lajd;	uZ	TROPICAL_FISH_FLOP
	f	Lajd;	ua	SNOW_PLACE
	f	Lajd;	ub	SNOW_STEP
	f	Lajd;	uc	SPIDER_AMBIENT
	f	Lajd;	ud	SPIDER_DEATH
	f	Lajd;	ue	SPIDER_HURT
	f	Lajd;	uf	SPIDER_STEP
	f	Lajd;	ug	SPLASH_POTION_BREAK
	f	Lajd;	uh	SPLASH_POTION_THROW
	f	Lajd;	ui	SPYGLASS_USE
	f	Lajd;	uj	SPYGLASS_STOP_USING
	f	Lajd;	uk	SQUID_AMBIENT
	f	Lajd;	ul	SQUID_DEATH
	f	Lajd;	um	SQUID_HURT
	f	Lajd;	un	SQUID_SQUIRT
	f	Lajd;	uo	STONE_BREAK
	f	Lajd;	up	STONE_BUTTON_CLICK_OFF
	f	Lajd;	uq	STONE_BUTTON_CLICK_ON
	f	Lajd;	ur	STONE_FALL
	f	Lajd;	us	STONE_HIT
	f	Lajd;	ut	STONE_PLACE
	f	Lajd;	uu	STONE_PRESSURE_PLATE_CLICK_OFF
	f	Lajd;	uv	STONE_PRESSURE_PLATE_CLICK_ON
	f	Lajd;	uw	STONE_STEP
	f	Lajd;	ux	STRAY_AMBIENT
	f	Lajd;	uy	STRAY_DEATH
	f	Lajd;	uz	STRAY_HURT
	f	Lajd;	vA	UI_TOAST_OUT
	f	Lajd;	vB	VEX_AMBIENT
	f	Lajd;	vC	VEX_CHARGE
	f	Lajd;	vD	VEX_DEATH
	f	Lajd;	vE	VEX_HURT
	f	Lajd;	vF	VILLAGER_AMBIENT
	f	Lajd;	vG	VILLAGER_CELEBRATE
	f	Lajd;	vH	VILLAGER_DEATH
	f	Lajd;	vI	VILLAGER_HURT
	f	Lajd;	vJ	VILLAGER_NO
	f	Lajd;	vK	VILLAGER_TRADE
	f	Lajd;	vL	VILLAGER_YES
	f	Lajd;	v	AMBIENT_WARPED_FOREST_LOOP
	f	Lajd;	vM	VILLAGER_WORK_ARMORER
	f	Lajd;	vN	VILLAGER_WORK_BUTCHER
	f	Lajd;	vO	VILLAGER_WORK_CARTOGRAPHER
	f	Lajd;	vP	VILLAGER_WORK_CLERIC
	f	Lajd;	vQ	VILLAGER_WORK_FARMER
	f	Lajd;	vR	VILLAGER_WORK_FISHERMAN
	f	Lajd;	vS	VILLAGER_WORK_FLETCHER
	f	Lajd;	vT	VILLAGER_WORK_LEATHERWORKER
	f	Lajd;	vU	VILLAGER_WORK_LIBRARIAN
	f	Lajd;	vV	VILLAGER_WORK_MASON
	f	Lajd;	vW	VILLAGER_WORK_SHEPHERD
	f	Lajd;	vX	VILLAGER_WORK_TOOLSMITH
	f	Lajd;	vY	VILLAGER_WORK_WEAPONSMITH
	f	Lajd;	vZ	VINDICATOR_AMBIENT
	f	Lajd;	va	TROPICAL_FISH_HURT
	f	Lajd;	vb	TUFF_BREAK
	f	Lajd;	vc	TUFF_STEP
	f	Lajd;	vd	TUFF_PLACE
	f	Lajd;	ve	TUFF_HIT
	f	Lajd;	vf	TUFF_FALL
	f	Lajd;	vg	TURTLE_AMBIENT_LAND
	f	Lajd;	vh	TURTLE_DEATH
	f	Lajd;	vi	TURTLE_DEATH_BABY
	f	Lajd;	vj	TURTLE_EGG_BREAK
	f	Lajd;	vk	TURTLE_EGG_CRACK
	f	Lajd;	vl	TURTLE_EGG_HATCH
	f	Lajd;	vm	TURTLE_HURT
	f	Lajd;	vn	TURTLE_HURT_BABY
	f	Lajd;	vo	TURTLE_LAY_EGG
	f	Lajd;	vp	TURTLE_SHAMBLE
	f	Lajd;	vq	TURTLE_SHAMBLE_BABY
	f	Lajd;	vr	TURTLE_SWIM
	f	Lajd;	vs	UI_BUTTON_CLICK
	f	Lajd;	vt	UI_LOOM_SELECT_PATTERN
	f	Lajd;	vu	UI_LOOM_TAKE_RESULT
	f	Lajd;	vv	UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	f	Lajd;	vw	UI_STONECUTTER_TAKE_RESULT
	f	Lajd;	vx	UI_STONECUTTER_SELECT_RECIPE
	f	Lajd;	vy	UI_TOAST_CHALLENGE_COMPLETE
	f	Lajd;	vz	UI_TOAST_IN
	f	Lajd;	wA	WARDEN_HEARTBEAT
	f	Lajd;	wB	WARDEN_HURT
	f	Lajd;	wC	WARDEN_LISTENING
	f	Lajd;	wD	WARDEN_LISTENING_ANGRY
	f	Lajd;	wE	WARDEN_NEARBY_CLOSE
	f	Lajd;	wF	WARDEN_NEARBY_CLOSER
	f	Lajd;	wG	WARDEN_NEARBY_CLOSEST
	f	Lajd;	wH	WARDEN_ROAR
	f	Lajd;	wI	WARDEN_SNIFF
	f	Lajd;	wJ	WARDEN_SONIC_BOOM
	f	Lajd;	wK	WARDEN_SONIC_CHARGE
	f	Lajd;	wL	WARDEN_STEP
	f	Lajd;	w	AMBIENT_WARPED_FOREST_MOOD
	f	Lajd;	wM	WARDEN_TENDRIL_CLICKS
	f	Lajd;	wN	WATER_AMBIENT
	f	Lajd;	wO	WEATHER_RAIN
	f	Lajd;	wP	WEATHER_RAIN_ABOVE
	f	Lajd;	wQ	WET_GRASS_BREAK
	f	Lajd;	wR	WET_GRASS_FALL
	f	Lajd;	wS	WET_GRASS_HIT
	f	Lajd;	wT	WET_GRASS_PLACE
	f	Lajd;	wU	WET_GRASS_STEP
	f	Lajd;	wV	WITCH_AMBIENT
	f	Lajd;	wW	WITCH_CELEBRATE
	f	Lajd;	wX	WITCH_DEATH
	f	Lajd;	wY	WITCH_DRINK
	f	Lajd;	wZ	WITCH_HURT
	f	Lajd;	wa	VINDICATOR_CELEBRATE
	f	Lajd;	wb	VINDICATOR_DEATH
	f	Lajd;	wc	VINDICATOR_HURT
	f	Lajd;	wd	VINE_BREAK
	f	Lajd;	we	VINE_FALL
	f	Lajd;	wf	VINE_HIT
	f	Lajd;	wg	VINE_PLACE
	f	Lajd;	wh	VINE_STEP
	f	Lajd;	wi	LILY_PAD_PLACE
	f	Lajd;	wj	WANDERING_TRADER_AMBIENT
	f	Lajd;	wk	WANDERING_TRADER_DEATH
	f	Lajd;	wl	WANDERING_TRADER_DISAPPEARED
	f	Lajd;	wm	WANDERING_TRADER_DRINK_MILK
	f	Lajd;	wn	WANDERING_TRADER_DRINK_POTION
	f	Lajd;	wo	WANDERING_TRADER_HURT
	f	Lajd;	wp	WANDERING_TRADER_NO
	f	Lajd;	wq	WANDERING_TRADER_REAPPEARED
	f	Lajd;	wr	WANDERING_TRADER_TRADE
	f	Lajd;	ws	WANDERING_TRADER_YES
	f	Lajd;	wt	WARDEN_AGITATED
	f	Lajd;	wu	WARDEN_AMBIENT
	f	Lajd;	wv	WARDEN_ANGRY
	f	Lajd;	ww	WARDEN_ATTACK_IMPACT
	f	Lajd;	wx	WARDEN_DEATH
	f	Lajd;	wy	WARDEN_DIG
	f	Lajd;	wz	WARDEN_EMERGE
	f	Lajd;	xA	WOODEN_BUTTON_CLICK_ON
	f	Lajd;	xB	WOOD_FALL
	f	Lajd;	xC	WOOD_HIT
	f	Lajd;	xD	WOOD_PLACE
	f	Lajd;	xE	WOODEN_PRESSURE_PLATE_CLICK_OFF
	f	Lajd;	xF	WOODEN_PRESSURE_PLATE_CLICK_ON
	f	Lajd;	xG	WOOD_STEP
	f	Lajd;	xH	WOOL_BREAK
	f	Lajd;	xI	WOOL_FALL
	f	Lajd;	xJ	WOOL_HIT
	f	Lajd;	xK	WOOL_PLACE
	f	Lajd;	xL	WOOL_STEP
	f	Lajd;	x	AMBIENT_UNDERWATER_ENTER
	f	Lajd;	xM	ZOGLIN_AMBIENT
	f	Lajd;	xN	ZOGLIN_ANGRY
	f	Lajd;	xO	ZOGLIN_ATTACK
	f	Lajd;	xP	ZOGLIN_DEATH
	f	Lajd;	xQ	ZOGLIN_HURT
	f	Lajd;	xR	ZOGLIN_STEP
	f	Lajd;	xS	ZOMBIE_AMBIENT
	f	Lajd;	xT	ZOMBIE_ATTACK_WOODEN_DOOR
	f	Lajd;	xU	ZOMBIE_ATTACK_IRON_DOOR
	f	Lajd;	xV	ZOMBIE_BREAK_WOODEN_DOOR
	f	Lajd;	xW	ZOMBIE_CONVERTED_TO_DROWNED
	f	Lajd;	xX	ZOMBIE_DEATH
	f	Lajd;	xY	ZOMBIE_DESTROY_EGG
	f	Lajd;	xZ	ZOMBIE_HORSE_AMBIENT
	f	Lajd;	xa	WITCH_THROW
	f	Lajd;	xb	WITHER_AMBIENT
	f	Lajd;	xc	WITHER_BREAK_BLOCK
	f	Lajd;	xd	WITHER_DEATH
	f	Lajd;	xe	WITHER_HURT
	f	Lajd;	xf	WITHER_SHOOT
	f	Lajd;	xg	WITHER_SKELETON_AMBIENT
	f	Lajd;	xh	WITHER_SKELETON_DEATH
	f	Lajd;	xi	WITHER_SKELETON_HURT
	f	Lajd;	xj	WITHER_SKELETON_STEP
	f	Lajd;	xk	WITHER_SPAWN
	f	Lajd;	xl	WOLF_AMBIENT
	f	Lajd;	xm	WOLF_DEATH
	f	Lajd;	xn	WOLF_GROWL
	f	Lajd;	xo	WOLF_HOWL
	f	Lajd;	xp	WOLF_HURT
	f	Lajd;	xq	WOLF_PANT
	f	Lajd;	xr	WOLF_SHAKE
	f	Lajd;	xs	WOLF_STEP
	f	Lajd;	xt	WOLF_WHINE
	f	Lajd;	xu	WOODEN_DOOR_CLOSE
	f	Lajd;	xv	WOODEN_DOOR_OPEN
	f	Lajd;	xw	WOODEN_TRAPDOOR_CLOSE
	f	Lajd;	xx	WOODEN_TRAPDOOR_OPEN
	f	Lajd;	xy	WOOD_BREAK
	f	Lajd;	xz	WOODEN_BUTTON_CLICK_OFF
	f	Lajd;	y	AMBIENT_UNDERWATER_EXIT
	f	Lajd;	ya	ZOMBIE_HORSE_DEATH
	f	Lajd;	yb	ZOMBIE_HORSE_HURT
	f	Lajd;	yc	ZOMBIE_HURT
	f	Lajd;	yd	ZOMBIE_INFECT
	f	Lajd;	ye	ZOMBIFIED_PIGLIN_AMBIENT
	f	Lajd;	yf	ZOMBIFIED_PIGLIN_ANGRY
	f	Lajd;	yg	ZOMBIFIED_PIGLIN_DEATH
	f	Lajd;	yh	ZOMBIFIED_PIGLIN_HURT
	f	Lajd;	yi	ZOMBIE_STEP
	f	Lajd;	yj	ZOMBIE_VILLAGER_AMBIENT
	f	Lajd;	yk	ZOMBIE_VILLAGER_CONVERTED
	f	Lajd;	yl	ZOMBIE_VILLAGER_CURE
	f	Lajd;	ym	ZOMBIE_VILLAGER_DEATH
	f	Lajd;	yn	ZOMBIE_VILLAGER_HURT
	f	Lajd;	yo	ZOMBIE_VILLAGER_STEP
	f	Lajd;	z	AMBIENT_UNDERWATER_LOOP
c	ajf	net/minecraft/sounds/SoundSource
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lajf;	b	$values
	f	Lajf;	a	MASTER
	f	Lajf;	b	MUSIC
	f	Lajf;	c	RECORDS
	f	Lajf;	d	WEATHER
	f	Lajf;	e	BLOCKS
	f	Lajf;	f	HOSTILE
	f	Lajf;	g	NEUTRAL
	f	Lajf;	h	PLAYERS
	f	Lajf;	i	AMBIENT
	f	Lajf;	j	VOICE
	f	Ljava/lang/String;	k	name
	f	[Lajf;	l	$VALUES
c	ajg	net/minecraft/sounds/package-info
c	ajh	net/minecraft/stats/RecipeBook
	m	()Laji;	a	getBookSettings
	m	(Laaj;)V	a	add
		p	1		id
	m	(Lajh;)V	a	copyOverData
		p	1		book
	m	(Laji;)V	a	setBookSettings
		p	1		options
	m	(Lbwy;)Z	a	isFiltering
		p	1		handler
	m	(Lbwz;)Z	a	isOpen
		p	1		category
	m	(Lbwz;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Lbwz;ZZ)V	a	setBookSetting
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lccs;)V	a	add
		p	1		recipe
	m	(Laaj;)Z	b	contains
		p	1		id
	m	(Lbwz;)Z	b	isFiltering
		p	1		category
	m	(Lbwz;Z)V	b	setFiltering
		p	1		category
		p	2		filteringCraftable
	m	(Lccs;)Z	b	contains
		p	1		recipe
	m	(Laaj;)V	c	remove
		p	1		id
	m	(Lccs;)V	c	remove
		p	1		recipe
	m	(Laaj;)V	d	addHighlight
		p	1		id
	m	(Lccs;)Z	d	willHighlight
		p	1		recipe
	m	(Lccs;)V	e	removeHighlight
		p	1		recipe
	m	(Lccs;)V	f	addHighlight
		p	1		recipe
	f	Ljava/util/Set;	a	known
	f	Ljava/util/Set;	b	highlight
	f	Laji;	c	bookSettings
c	aji	net/minecraft/stats/RecipeBookSettings
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		categoryOptions
	m	()Laji;	a	copy
	m	(Laji;)V	a	replaceFrom
		p	1		other
	m	(Lbwz;)Z	a	isOpen
		p	1		category
	m	(Lbwz;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Ljava/util/EnumMap;)V	a	lambda$new$0
	m	(Lpj;)Laji;	a	read
		p	0		nbt
	m	(Lpj;Lbwz;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$write$2
		p	2		category
	m	(Lpj;Ljava/util/Map;Lbwz;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$read$1
		p	2		category
	m	(Lqx;)Laji;	a	read
		p	0		buf
	m	(Lbwz;)Z	b	isFiltering
		p	1		category
	m	(Lbwz;Z)V	b	setFiltering
		p	1		category
		p	2		filtering
	m	(Lpj;)V	b	write
		p	1		nbt
	m	(Lqx;)V	b	write
		p	1		buf
	f	Ljava/util/Map;	a	TAG_FIELDS
	f	Ljava/util/Map;	b	states
c	aji$a	net/minecraft/stats/RecipeBookSettings$TypeSettings
	m	(ZZ)V	<init>	<init>
		p	1		guiOpen
		p	2		filteringCraftable
	m	()Laji$a;	a	copy
	f	Z	a	open
	f	Z	b	filtering
c	ajj	net/minecraft/stats/ServerRecipeBook
	m	(Lafp;)V	a	sendInitialRecipeBook
		p	1		player
	m	(Ljava/util/Collection;Lafp;)I	a	addRecipes
		p	1		recipes
		p	2		player
	m	(Lpj;Lcct;)V	a	fromNbt
		p	1		nbt
		p	2		recipeManager
	m	(Lpp;Ljava/util/function/Consumer;Lcct;)V	a	loadRecipes
		p	1		list
		p	2		handler
		p	3		recipeManager
	m	(Luv$a;Lafp;Ljava/util/List;)V	a	sendRecipes
		p	1		action
		p	2		player
		p	3		recipeIds
	m	()Lpj;	b	toNbt
	m	(Ljava/util/Collection;Lafp;)I	b	removeRecipes
		p	1		recipes
		p	2		player
	f	Ljava/lang/String;	c	RECIPE_BOOK_TAG
	f	Lorg/slf4j/Logger;	d	LOGGER
c	ajk	net/minecraft/stats/ServerStatsCounter
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V	<init>	<init>
		p	1		server
		p	2		file
	m	()V	a	save
	m	(Lafp;)V	a	sendStats
		p	1		player
	m	(Lajn;)Lcom/google/gson/JsonObject;	a	lambda$toJson$4
	m	(Lajn;Ljava/lang/String;)Ljava/util/Optional;	a	getStat
		p	1		type
		p	2		id
	m	(Lbtf;Lajl;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lcom/google/gson/JsonObject;)Lpj;	a	fromJson
		p	0		json
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parseLocal
		p	1		dataFixer
		p	2		json
	m	(Ljava/lang/String;)V	a	lambda$parseLocal$3
	m	(Lpj;Ljava/lang/String;Lajl;)V	a	lambda$parseLocal$0
	m	(Lpj;Ljava/lang/String;Lajn;)V	a	lambda$parseLocal$2
	m	()Ljava/lang/String;	b	toJson
	m	(Lajl;)Laaj;	b	getKey
		p	0		stat
	m	(Ljava/lang/String;)V	b	lambda$parseLocal$1
	m	()V	c	markAllDirty
	m	()Ljava/util/Set;	d	getDirty
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/io/File;	d	file
	f	Ljava/util/Set;	e	dirty
c	ajl	net/minecraft/stats/Stat
	m	(Lajn;Ljava/lang/Object;Lajm;)V	<init>	<init>
		p	1		type
		p	2		value
		p	3		formatter
	m	()Lajn;	a	getType
	m	(I)Ljava/lang/String;	a	format
		p	1		value
	m	(Laaj;)Ljava/lang/String;	a	locationToKey
		p	0		id
	m	(Lajn;Ljava/lang/Object;)Ljava/lang/String;	a	buildName
		p	0		type
		p	1		value
	m	()Ljava/lang/Object;	b	getValue
	f	Lajm;	n	formatter
	f	Ljava/lang/Object;	o	value
	f	Lajn;	p	type
c	ajm	net/minecraft/stats/StatFormatter
	m	(I)Ljava/lang/String;	a	lambda$static$3
		p	0		ticks
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
		p	0		decimalFormat
	m	(I)Ljava/lang/String;	b	lambda$static$2
		p	0		cm
	m	(I)Ljava/lang/String;	c	lambda$static$1
		p	0		i
	m	(I)Ljava/lang/String;	format	format
		p	1		value
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Lajm;	b	DEFAULT
	f	Lajm;	c	DIVIDE_BY_TEN
	f	Lajm;	d	DISTANCE
	f	Lajm;	e	TIME
c	ajn	net/minecraft/stats/StatType
	m	(Lhm;)V	<init>	<init>
		p	1		registry
	m	()Lhm;	a	getRegistry
	m	(Lajm;Ljava/lang/Object;)Lajl;	a	lambda$get$0
		p	2		value
	m	(Ljava/lang/Object;)Z	a	contains
		p	1		key
	m	(Ljava/lang/Object;Lajm;)Lajl;	a	get
		p	1		key
		p	2		formatter
	m	()Ljava/lang/String;	b	getTranslationKey
	m	(Ljava/lang/Object;)Lajl;	b	get
		p	1		key
	m	()Lrm;	c	getDisplayName
	f	Lhm;	a	registry
	f	Ljava/util/Map;	b	map
	f	Lrm;	c	displayName
c	ajo	net/minecraft/stats/Stats
	m	(Ljava/lang/String;Lajm;)Laaj;	a	makeCustomStat
		p	0		id
		p	1		formatter
	m	(Ljava/lang/String;Lhm;)Lajn;	a	makeRegistryStatType
		p	0		id
		p	1		registry
	f	Laaj;	A	HORSE_ONE_CM
	f	Laaj;	B	AVIATE_ONE_CM
	f	Laaj;	C	SWIM_ONE_CM
	f	Laaj;	D	STRIDER_ONE_CM
	f	Laaj;	E	JUMP
	f	Laaj;	F	DROP
	f	Laaj;	G	DAMAGE_DEALT
	f	Laaj;	H	DAMAGE_DEALT_ABSORBED
	f	Laaj;	I	DAMAGE_DEALT_RESISTED
	f	Laaj;	J	DAMAGE_TAKEN
	f	Laaj;	K	DAMAGE_BLOCKED_BY_SHIELD
	f	Laaj;	L	DAMAGE_ABSORBED
	f	Laaj;	M	DAMAGE_RESISTED
	f	Laaj;	N	DEATHS
	f	Laaj;	O	MOB_KILLS
	f	Laaj;	P	ANIMALS_BRED
	f	Laaj;	Q	PLAYER_KILLS
	f	Laaj;	R	FISH_CAUGHT
	f	Laaj;	S	TALKED_TO_VILLAGER
	f	Laaj;	T	TRADED_WITH_VILLAGER
	f	Laaj;	U	EAT_CAKE_SLICE
	f	Laaj;	V	FILL_CAULDRON
	f	Laaj;	W	USE_CAULDRON
	f	Laaj;	X	CLEAN_ARMOR
	f	Laaj;	Y	CLEAN_BANNER
	f	Laaj;	Z	CLEAN_SHULKER_BOX
	f	Laaj;	aA	RAID_TRIGGER
	f	Laaj;	aB	RAID_WIN
	f	Laaj;	aC	INTERACT_WITH_ANVIL
	f	Laaj;	aD	INTERACT_WITH_GRINDSTONE
	f	Laaj;	aE	TARGET_HIT
	f	Laaj;	aF	INTERACT_WITH_SMITHING_TABLE
	f	Lajn;	a	BLOCK_MINED
	f	Laaj;	aa	INTERACT_WITH_BREWINGSTAND
	f	Laaj;	ab	INTERACT_WITH_BEACON
	f	Laaj;	ac	INSPECT_DROPPER
	f	Laaj;	ad	INSPECT_HOPPER
	f	Laaj;	ae	INSPECT_DISPENSER
	f	Laaj;	af	PLAY_NOTEBLOCK
	f	Laaj;	ag	TUNE_NOTEBLOCK
	f	Laaj;	ah	POT_FLOWER
	f	Laaj;	ai	TRIGGER_TRAPPED_CHEST
	f	Laaj;	aj	OPEN_ENDERCHEST
	f	Laaj;	ak	ENCHANT_ITEM
	f	Laaj;	al	PLAY_RECORD
	f	Laaj;	am	INTERACT_WITH_FURNACE
	f	Laaj;	an	INTERACT_WITH_CRAFTING_TABLE
	f	Laaj;	ao	OPEN_CHEST
	f	Laaj;	ap	SLEEP_IN_BED
	f	Laaj;	aq	OPEN_SHULKER_BOX
	f	Laaj;	ar	OPEN_BARREL
	f	Laaj;	as	INTERACT_WITH_BLAST_FURNACE
	f	Laaj;	at	INTERACT_WITH_SMOKER
	f	Laaj;	au	INTERACT_WITH_LECTERN
	f	Laaj;	av	INTERACT_WITH_CAMPFIRE
	f	Laaj;	aw	INTERACT_WITH_CARTOGRAPHY_TABLE
	f	Laaj;	ax	INTERACT_WITH_LOOM
	f	Laaj;	ay	INTERACT_WITH_STONECUTTER
	f	Laaj;	az	BELL_RING
	f	Lajn;	b	ITEM_CRAFTED
	f	Lajn;	c	ITEM_USED
	f	Lajn;	d	ITEM_BROKEN
	f	Lajn;	e	ITEM_PICKED_UP
	f	Lajn;	f	ITEM_DROPPED
	f	Lajn;	g	ENTITY_KILLED
	f	Lajn;	h	ENTITY_KILLED_BY
	f	Lajn;	i	CUSTOM
	f	Laaj;	j	LEAVE_GAME
	f	Laaj;	k	PLAY_TIME
	f	Laaj;	l	TOTAL_WORLD_TIME
	f	Laaj;	m	TIME_SINCE_DEATH
	f	Laaj;	n	TIME_SINCE_REST
	f	Laaj;	o	CROUCH_TIME
	f	Laaj;	p	WALK_ONE_CM
	f	Laaj;	q	CROUCH_ONE_CM
	f	Laaj;	r	SPRINT_ONE_CM
	f	Laaj;	s	WALK_ON_WATER_ONE_CM
	f	Laaj;	t	FALL_ONE_CM
	f	Laaj;	u	CLIMB_ONE_CM
	f	Laaj;	v	FLY_ONE_CM
	f	Laaj;	w	WALK_UNDER_WATER_ONE_CM
	f	Laaj;	x	MINECART_ONE_CM
	f	Laaj;	y	BOAT_ONE_CM
	f	Laaj;	z	PIG_ONE_CM
c	ajp	net/minecraft/stats/StatsCounter
	m	(Lajl;)I	a	getValue
		p	1		stat
	m	(Lajn;Ljava/lang/Object;)I	a	getValue
		p	1		type
		p	2		stat
	m	(Lbtf;Lajl;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lbtf;Lajl;I)V	b	increment
		p	1		player
		p	2		stat
		p	3		value
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	ajq	net/minecraft/stats/package-info
c	ajr	net/minecraft/tags/BannerPatternTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	NO_ITEM_REQUIRED
	f	Lakh;	b	PATTERN_ITEM_FLOWER
	f	Lakh;	c	PATTERN_ITEM_CREEPER
	f	Lakh;	d	PATTERN_ITEM_SKULL
	f	Lakh;	e	PATTERN_ITEM_MOJANG
	f	Lakh;	f	PATTERN_ITEM_GLOBE
	f	Lakh;	g	PATTERN_ITEM_PIGLIN
c	ajs	net/minecraft/tags/BiomeTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	A	HAS_RUINED_PORTAL_JUNGLE
	f	Lakh;	B	HAS_RUINED_PORTAL_OCEAN
	f	Lakh;	C	HAS_RUINED_PORTAL_SWAMP
	f	Lakh;	D	HAS_RUINED_PORTAL_MOUNTAIN
	f	Lakh;	E	HAS_RUINED_PORTAL_STANDARD
	f	Lakh;	F	HAS_SHIPWRECK_BEACHED
	f	Lakh;	G	HAS_SHIPWRECK
	f	Lakh;	H	HAS_STRONGHOLD
	f	Lakh;	I	HAS_SWAMP_HUT
	f	Lakh;	J	HAS_VILLAGE_DESERT
	f	Lakh;	K	HAS_VILLAGE_PLAINS
	f	Lakh;	L	HAS_VILLAGE_SAVANNA
	f	Lakh;	M	HAS_VILLAGE_SNOWY
	f	Lakh;	N	HAS_VILLAGE_TAIGA
	f	Lakh;	O	HAS_WOODLAND_MANSION
	f	Lakh;	P	HAS_NETHER_FORTRESS
	f	Lakh;	Q	HAS_NETHER_FOSSIL
	f	Lakh;	R	HAS_BASTION_REMNANT
	f	Lakh;	S	HAS_ANCIENT_CITY
	f	Lakh;	T	HAS_RUINED_PORTAL_NETHER
	f	Lakh;	U	HAS_END_CITY
	f	Lakh;	V	REQUIRED_OCEAN_MONUMENT_SURROUNDING
	f	Lakh;	W	MINESHAFT_BLOCKING
	f	Lakh;	X	PLAYS_UNDERWATER_MUSIC
	f	Lakh;	Y	HAS_CLOSER_WATER_FOG
	f	Lakh;	Z	WATER_ON_MAP_OUTLINES
	f	Lakh;	a	IS_DEEP_OCEAN
	f	Lakh;	aa	PRODUCES_CORALS_FROM_BONEMEAL
	f	Lakh;	ab	WITHOUT_ZOMBIE_SIEGES
	f	Lakh;	ac	WITHOUT_PATROL_SPAWNS
	f	Lakh;	ad	WITHOUT_WANDERING_TRADER_SPAWNS
	f	Lakh;	ae	SPAWNS_COLD_VARIANT_FROGS
	f	Lakh;	af	SPAWNS_WARM_VARIANT_FROGS
	f	Lakh;	ag	ONLY_ALLOWS_SNOW_AND_GOLD_RABBITS
	f	Lakh;	ah	REDUCED_WATER_AMBIENT_SPAWNS
	f	Lakh;	ai	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	f	Lakh;	aj	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	f	Lakh;	ak	MORE_FREQUENT_DROWNED_SPAWNS
	f	Lakh;	al	ALLOWS_SURFACE_SLIME_SPAWNS
	f	Lakh;	b	IS_OCEAN
	f	Lakh;	c	IS_BEACH
	f	Lakh;	d	IS_RIVER
	f	Lakh;	e	IS_MOUNTAIN
	f	Lakh;	f	IS_BADLANDS
	f	Lakh;	g	IS_HILL
	f	Lakh;	h	IS_TAIGA
	f	Lakh;	i	IS_JUNGLE
	f	Lakh;	j	IS_FOREST
	f	Lakh;	k	IS_SAVANNA
	f	Lakh;	l	IS_OVERWORLD
	f	Lakh;	m	IS_NETHER
	f	Lakh;	n	IS_END
	f	Lakh;	o	STRONGHOLD_BIASED_TO
	f	Lakh;	p	HAS_BURIED_TREASURE
	f	Lakh;	q	HAS_DESERT_PYRAMID
	f	Lakh;	r	HAS_IGLOO
	f	Lakh;	s	HAS_JUNGLE_TEMPLE
	f	Lakh;	t	HAS_MINESHAFT
	f	Lakh;	u	HAS_MINESHAFT_MESA
	f	Lakh;	v	HAS_OCEAN_MONUMENT
	f	Lakh;	w	HAS_OCEAN_RUIN_COLD
	f	Lakh;	x	HAS_OCEAN_RUIN_WARM
	f	Lakh;	y	HAS_PILLAGER_OUTPOST
	f	Lakh;	z	HAS_RUINED_PORTAL_DESERT
c	ajt	net/minecraft/tags/BlockTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	A	CRIMSON_STEMS
	f	Lakh;	B	WARPED_STEMS
	f	Lakh;	C	WART_BLOCKS
	f	Lakh;	D	BANNERS
	f	Lakh;	E	SAND
	f	Lakh;	F	STAIRS
	f	Lakh;	G	SLABS
	f	Lakh;	H	WALLS
	f	Lakh;	I	ANVIL
	f	Lakh;	J	RAILS
	f	Lakh;	K	LEAVES
	f	Lakh;	L	TRAPDOORS
	f	Lakh;	M	SMALL_FLOWERS
	f	Lakh;	N	BEDS
	f	Lakh;	O	FENCES
	f	Lakh;	P	TALL_FLOWERS
	f	Lakh;	Q	FLOWERS
	f	Lakh;	R	PIGLIN_REPELLENTS
	f	Lakh;	S	GOLD_ORES
	f	Lakh;	T	IRON_ORES
	f	Lakh;	U	DIAMOND_ORES
	f	Lakh;	V	REDSTONE_ORES
	f	Lakh;	W	LAPIS_ORES
	f	Lakh;	X	COAL_ORES
	f	Lakh;	Y	EMERALD_ORES
	f	Lakh;	Z	COPPER_ORES
	f	Lakh;	aA	PORTALS
	f	Lakh;	aB	FIRE
	f	Lakh;	aC	NYLIUM
	f	Lakh;	aD	BEACON_BASE_BLOCKS
	f	Lakh;	aE	SOUL_SPEED_BLOCKS
	f	Lakh;	aF	WALL_POST_OVERRIDE
	f	Lakh;	aG	CLIMBABLE
	f	Lakh;	aH	FALL_DAMAGE_RESETTING
	f	Lakh;	aI	SHULKER_BOXES
	f	Lakh;	aJ	HOGLIN_REPELLENTS
	f	Lakh;	aK	SOUL_FIRE_BASE_BLOCKS
	f	Lakh;	aL	STRIDER_WARM_BLOCKS
	f	Lakh;	a	WOOL
	f	Lakh;	aM	CAMPFIRES
	f	Lakh;	aN	GUARDED_BY_PIGLINS
	f	Lakh;	aO	PREVENT_MOB_SPAWNING_INSIDE
	f	Lakh;	aP	FENCE_GATES
	f	Lakh;	aQ	UNSTABLE_BOTTOM_CENTER
	f	Lakh;	aR	MUSHROOM_GROW_BLOCK
	f	Lakh;	aS	INFINIBURN_OVERWORLD
	f	Lakh;	aT	INFINIBURN_NETHER
	f	Lakh;	aU	INFINIBURN_END
	f	Lakh;	aV	BASE_STONE_OVERWORLD
	f	Lakh;	aW	STONE_ORE_REPLACEABLES
	f	Lakh;	aX	DEEPSLATE_ORE_REPLACEABLES
	f	Lakh;	aY	BASE_STONE_NETHER
	f	Lakh;	aZ	OVERWORLD_CARVER_REPLACEABLES
	f	Lakh;	aa	NON_FLAMMABLE_WOOD
	f	Lakh;	ab	CANDLES
	f	Lakh;	ac	DIRT
	f	Lakh;	ad	TERRACOTTA
	f	Lakh;	ae	COMPLETES_FIND_TREE_TUTORIAL
	f	Lakh;	af	FLOWER_POTS
	f	Lakh;	ag	ENDERMAN_HOLDABLE
	f	Lakh;	ah	ICE
	f	Lakh;	ai	VALID_SPAWN
	f	Lakh;	aj	IMPERMEABLE
	f	Lakh;	ak	UNDERWATER_BONEMEALS
	f	Lakh;	al	CORAL_BLOCKS
	f	Lakh;	am	WALL_CORALS
	f	Lakh;	an	CORAL_PLANTS
	f	Lakh;	ao	CORALS
	f	Lakh;	ap	BAMBOO_PLANTABLE_ON
	f	Lakh;	aq	STANDING_SIGNS
	f	Lakh;	ar	WALL_SIGNS
	f	Lakh;	as	SIGNS
	f	Lakh;	at	DRAGON_IMMUNE
	f	Lakh;	au	DRAGON_TRANSPARENT
	f	Lakh;	av	WITHER_IMMUNE
	f	Lakh;	aw	WITHER_SUMMON_BASE_BLOCKS
	f	Lakh;	ax	BEEHIVES
	f	Lakh;	ay	CROPS
	f	Lakh;	az	BEE_GROWABLES
	f	Lakh;	bA	SCULK_REPLACEABLE
	f	Lakh;	bB	SCULK_REPLACEABLE_WORLD_GEN
	f	Lakh;	bC	ANCIENT_CITY_REPLACEABLE
	f	Lakh;	bD	ANIMALS_SPAWNABLE_ON
	f	Lakh;	bE	AXOLOTLS_SPAWNABLE_ON
	f	Lakh;	bF	GOATS_SPAWNABLE_ON
	f	Lakh;	bG	MOOSHROOMS_SPAWNABLE_ON
	f	Lakh;	bH	PARROTS_SPAWNABLE_ON
	f	Lakh;	bI	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	f	Lakh;	bJ	RABBITS_SPAWNABLE_ON
	f	Lakh;	bK	FOXES_SPAWNABLE_ON
	f	Lakh;	bL	WOLVES_SPAWNABLE_ON
	f	Lakh;	b	PLANKS
	f	Lakh;	bM	FROGS_SPAWNABLE_ON
	f	Lakh;	bN	AZALEA_GROWS_ON
	f	Lakh;	bO	REPLACEABLE_PLANTS
	f	Lakh;	bP	CONVERTABLE_TO_MUD
	f	Lakh;	bQ	MANGROVE_LOGS_CAN_GROW_THROUGH
	f	Lakh;	bR	MANGROVE_ROOTS_CAN_GROW_THROUGH
	f	Lakh;	bS	DEAD_BUSH_MAY_PLACE_ON
	f	Lakh;	bT	SNAPS_GOAT_HORN
	f	Lakh;	bU	SNOW_LAYER_CANNOT_SURVIVE_ON
	f	Lakh;	bV	SNOW_LAYER_CAN_SURVIVE_ON
	f	Lakh;	ba	NETHER_CARVER_REPLACEABLES
	f	Lakh;	bb	CANDLE_CAKES
	f	Lakh;	bc	CAULDRONS
	f	Lakh;	bd	CRYSTAL_SOUND_BLOCKS
	f	Lakh;	be	INSIDE_STEP_SOUND_BLOCKS
	f	Lakh;	bf	OCCLUDES_VIBRATION_SIGNALS
	f	Lakh;	bg	DAMPENS_VIBRATIONS
	f	Lakh;	bh	DRIPSTONE_REPLACEABLE
	f	Lakh;	bi	CAVE_VINES
	f	Lakh;	bj	MOSS_REPLACEABLE
	f	Lakh;	bk	LUSH_GROUND_REPLACEABLE
	f	Lakh;	bl	AZALEA_ROOT_REPLACEABLE
	f	Lakh;	bm	SMALL_DRIPLEAF_PLACEABLE
	f	Lakh;	bn	BIG_DRIPLEAF_PLACEABLE
	f	Lakh;	bo	SNOW
	f	Lakh;	bp	MINEABLE_WITH_AXE
	f	Lakh;	bq	MINEABLE_WITH_HOE
	f	Lakh;	br	MINEABLE_WITH_PICKAXE
	f	Lakh;	bs	MINEABLE_WITH_SHOVEL
	f	Lakh;	bt	NEEDS_DIAMOND_TOOL
	f	Lakh;	bu	NEEDS_IRON_TOOL
	f	Lakh;	bv	NEEDS_STONE_TOOL
	f	Lakh;	bw	FEATURES_CANNOT_REPLACE
	f	Lakh;	bx	LAVA_POOL_STONE_CANNOT_REPLACE
	f	Lakh;	by	GEODE_INVALID_BLOCKS
	f	Lakh;	bz	FROG_PREFER_JUMP_TO
	f	Lakh;	c	STONE_BRICKS
	f	Lakh;	d	WOODEN_BUTTONS
	f	Lakh;	e	BUTTONS
	f	Lakh;	f	WOOL_CARPETS
	f	Lakh;	g	WOODEN_DOORS
	f	Lakh;	h	WOODEN_STAIRS
	f	Lakh;	i	WOODEN_SLABS
	f	Lakh;	j	WOODEN_FENCES
	f	Lakh;	k	PRESSURE_PLATES
	f	Lakh;	l	WOODEN_PRESSURE_PLATES
	f	Lakh;	m	STONE_PRESSURE_PLATES
	f	Lakh;	n	WOODEN_TRAPDOORS
	f	Lakh;	o	DOORS
	f	Lakh;	p	SAPLINGS
	f	Lakh;	q	LOGS_THAT_BURN
	f	Lakh;	r	OVERWORLD_NATURAL_LOGS
	f	Lakh;	s	LOGS
	f	Lakh;	t	DARK_OAK_LOGS
	f	Lakh;	u	OAK_LOGS
	f	Lakh;	v	BIRCH_LOGS
	f	Lakh;	w	ACACIA_LOGS
	f	Lakh;	x	JUNGLE_LOGS
	f	Lakh;	y	SPRUCE_LOGS
	f	Lakh;	z	MANGROVE_LOGS
c	aju	net/minecraft/tags/CatVariantTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	DEFAULT_SPAWNS
	f	Lakh;	b	FULL_MOON_SPAWNS
c	ajv	net/minecraft/tags/EntityTypeTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	SKELETONS
	f	Lakh;	b	RAIDERS
	f	Lakh;	c	BEEHIVE_INHABITORS
	f	Lakh;	d	ARROWS
	f	Lakh;	e	IMPACT_PROJECTILES
	f	Lakh;	f	POWDER_SNOW_WALKABLE_MOBS
	f	Lakh;	g	AXOLOTL_ALWAYS_HOSTILES
	f	Lakh;	h	AXOLOTL_HUNT_TARGETS
	f	Lakh;	i	FREEZE_IMMUNE_ENTITY_TYPES
	f	Lakh;	j	FREEZE_HURTS_EXTRA_TYPES
	f	Lakh;	k	FROG_FOOD
c	ajw	net/minecraft/tags/FlatLevelGeneratorPresetTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	VISIBLE
c	ajx	net/minecraft/tags/FluidTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	WATER
	f	Lakh;	b	LAVA
c	ajy	net/minecraft/tags/GameEventTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	VIBRATIONS
	f	Lakh;	b	WARDEN_CAN_LISTEN
	f	Lakh;	c	SHRIEKER_CAN_LISTEN
	f	Lakh;	d	IGNORE_VIBRATIONS_SNEAKING
	f	Lakh;	e	ALLAY_CAN_LISTEN
c	ajz	net/minecraft/tags/InstrumentTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	REGULAR_GOAT_HORNS
	f	Lakh;	b	SCREAMING_GOAT_HORNS
	f	Lakh;	c	GOAT_HORNS
c	aka	net/minecraft/tags/ItemTags
	m	(Ljava/lang/String;)Lakh;	a	bind
		p	0		id
	f	Lakh;	A	WART_BLOCKS
	f	Lakh;	B	BANNERS
	f	Lakh;	C	SAND
	f	Lakh;	D	STAIRS
	f	Lakh;	E	SLABS
	f	Lakh;	F	WALLS
	f	Lakh;	G	ANVIL
	f	Lakh;	H	RAILS
	f	Lakh;	I	LEAVES
	f	Lakh;	J	TRAPDOORS
	f	Lakh;	K	SMALL_FLOWERS
	f	Lakh;	L	BEDS
	f	Lakh;	M	FENCES
	f	Lakh;	N	TALL_FLOWERS
	f	Lakh;	O	FLOWERS
	f	Lakh;	P	PIGLIN_REPELLENTS
	f	Lakh;	Q	PIGLIN_LOVED
	f	Lakh;	R	IGNORED_BY_PIGLIN_BABIES
	f	Lakh;	S	PIGLIN_FOOD
	f	Lakh;	T	FOX_FOOD
	f	Lakh;	U	GOLD_ORES
	f	Lakh;	V	IRON_ORES
	f	Lakh;	W	DIAMOND_ORES
	f	Lakh;	X	REDSTONE_ORES
	f	Lakh;	Y	LAPIS_ORES
	f	Lakh;	Z	COAL_ORES
	f	Lakh;	a	WOOL
	f	Lakh;	aa	EMERALD_ORES
	f	Lakh;	ab	COPPER_ORES
	f	Lakh;	ac	NON_FLAMMABLE_WOOD
	f	Lakh;	ad	SOUL_FIRE_BASE_BLOCKS
	f	Lakh;	ae	CANDLES
	f	Lakh;	af	DIRT
	f	Lakh;	ag	TERRACOTTA
	f	Lakh;	ah	COMPLETES_FIND_TREE_TUTORIAL
	f	Lakh;	ai	BOATS
	f	Lakh;	aj	CHEST_BOATS
	f	Lakh;	ak	FISHES
	f	Lakh;	al	SIGNS
	f	Lakh;	am	MUSIC_DISCS
	f	Lakh;	an	CREEPER_DROP_MUSIC_DISCS
	f	Lakh;	ao	COALS
	f	Lakh;	ap	ARROWS
	f	Lakh;	aq	LECTERN_BOOKS
	f	Lakh;	ar	BEACON_PAYMENT_ITEMS
	f	Lakh;	as	STONE_TOOL_MATERIALS
	f	Lakh;	at	STONE_CRAFTING_MATERIALS
	f	Lakh;	au	FREEZE_IMMUNE_WEARABLES
	f	Lakh;	av	AXOLOTL_TEMPT_ITEMS
	f	Lakh;	aw	DAMPENS_VIBRATIONS
	f	Lakh;	ax	CLUSTER_MAX_HARVESTABLES
	f	Lakh;	ay	COMPASSES
	f	Lakh;	b	PLANKS
	f	Lakh;	c	STONE_BRICKS
	f	Lakh;	d	WOODEN_BUTTONS
	f	Lakh;	e	BUTTONS
	f	Lakh;	f	WOOL_CARPETS
	f	Lakh;	g	WOODEN_DOORS
	f	Lakh;	h	WOODEN_STAIRS
	f	Lakh;	i	WOODEN_SLABS
	f	Lakh;	j	WOODEN_FENCES
	f	Lakh;	k	WOODEN_PRESSURE_PLATES
	f	Lakh;	l	WOODEN_TRAPDOORS
	f	Lakh;	m	DOORS
	f	Lakh;	n	SAPLINGS
	f	Lakh;	o	LOGS_THAT_BURN
	f	Lakh;	p	OVERWORLD_NATURAL_LOGS
	f	Lakh;	q	LOGS
	f	Lakh;	r	DARK_OAK_LOGS
	f	Lakh;	s	OAK_LOGS
	f	Lakh;	t	BIRCH_LOGS
	f	Lakh;	u	ACACIA_LOGS
	f	Lakh;	v	JUNGLE_LOGS
	f	Lakh;	w	SPRUCE_LOGS
	f	Lakh;	x	MANGROVE_LOGS
	f	Lakh;	y	CRIMSON_STEMS
	f	Lakh;	z	WARPED_STEMS
c	akb	net/minecraft/tags/PaintingVariantTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	PLACEABLE
c	akc	net/minecraft/tags/PoiTypeTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	ACQUIRABLE_JOB_SITE
	f	Lakh;	b	VILLAGE
	f	Lakh;	c	BEE_HOME
c	akd	net/minecraft/tags/StructureTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	EYE_OF_ENDER_LOCATED
	f	Lakh;	b	DOLPHIN_LOCATED
	f	Lakh;	c	ON_WOODLAND_EXPLORER_MAPS
	f	Lakh;	d	ON_OCEAN_EXPLORER_MAPS
	f	Lakh;	e	ON_TREASURE_MAPS
	f	Lakh;	f	CATS_SPAWN_IN
	f	Lakh;	g	CATS_SPAWN_AS_BLACK
	f	Lakh;	h	VILLAGE
	f	Lakh;	i	MINESHAFT
	f	Lakh;	j	SHIPWRECK
	f	Lakh;	k	RUINED_PORTAL
	f	Lakh;	l	OCEAN_RUIN
c	ake	net/minecraft/tags/TagBuilder
	m	()Lake;	a	create
	m	(Laaj;)Lake;	a	addElement
		p	1		id
	m	(Lakf;)Lake;	a	add
		p	1		entry
	m	()Ljava/util/List;	b	build
	m	(Laaj;)Lake;	b	addOptionalElement
		p	1		id
	m	(Laaj;)Lake;	c	addTag
		p	1		id
	m	(Laaj;)Lake;	d	addOptionalTag
		p	1		id
	f	Ljava/util/List;	a	entries
c	akf	net/minecraft/tags/TagEntry
	m	(Laaj;ZZ)V	<init>	<init>
		p	1		id
		p	2		tag
		p	3		required
	m	(Laky$d;Z)V	<init>	<init>
		p	1		id
		p	2		required
	m	()Laky$d;	a	elementOrTag
	m	(Laaj;)Lakf;	a	element
		p	0		id
	m	(Lakf$a;Ljava/util/function/Consumer;)Z	a	build
	m	(Lakf;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$5
		p	0		entry
	m	(Laky$d;)Lakf;	a	lambda$static$2
		p	0		id
	m	(Lcom/mojang/datafixers/util/Either;)Lakf;	a	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
		p	1		directEntryPredicate
		p	2		tagEntryPredicate
	m	(Laaj;)Lakf;	b	optionalElement
		p	0		id
	m	(Lakf;)Lakf;	b	lambda$static$3
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
	m	(Laaj;)Lakf;	c	tag
		p	0		id
	m	(Lakf;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		entry
	m	(Laaj;)Lakf;	d	optionalTag
		p	0		id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	FULL_CODEC
	f	Laaj;	c	id
	f	Z	d	tag
	f	Z	e	required
c	akf$a	net/minecraft/tags/TagEntry$Lookup
	m	(Laaj;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Laaj;)Ljava/util/Collection;	b	tag
		p	1		id
c	akg	net/minecraft/tags/TagFile
	m	()Ljava/util/List;	a	entries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Z	b	replace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	entries
	f	Z	c	replace
c	akh	net/minecraft/tags/TagKey
	m	()Laai;	a	registry
	m	(Laai;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Laai;Laaj;)Lakh;	a	create
		p	0		registry
		p	1		id
	m	(Laai;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$hashedCodec$2
		p	1		string
	m	(Lakh;)Ljava/lang/String;	a	lambda$hashedCodec$3
		p	0		string
	m	()Laaj;	b	location
	m	(Laai;)Lcom/mojang/serialization/Codec;	b	hashedCodec
		p	0		registry
	m	(Laai;Laaj;)Lakh;	b	lambda$hashedCodec$1
		p	1		id
	m	(Laai;)Z	c	isFor
		p	1		registryRef
	m	(Laai;Laaj;)Lakh;	c	lambda$codec$0
		p	1		id
	m	(Laai;)Ljava/util/Optional;	d	cast
		p	1		registryRef
	f	Laai;	a	registry
	f	Laaj;	b	location
	f	Lcom/google/common/collect/Interner;	c	VALUES
c	aki	net/minecraft/tags/TagLoader
	m	(Ljava/util/function/Function;Ljava/lang/String;)V	<init>	<init>
		p	1		registryGetter
		p	2		dataType
	m	(Laaj;)Ljava/util/List;	a	lambda$load$1
	m	(Laaj;Ljava/util/Collection;)V	a	lambda$build$11
	m	(Lahu;)Ljava/util/Map;	a	load
		p	1		manager
	m	(Lakf$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	build
	m	(Lakf$a;Ljava/util/Map;Laaj;Ljava/util/List;)V	a	lambda$build$13
	m	(Lcom/google/common/collect/Multimap;Laaj;Laaj;)Z	a	isCyclic
	m	(Lcom/google/common/collect/Multimap;Laaj;Laki$a;)V	a	lambda$build$9
	m	(Lcom/google/common/collect/Multimap;Laaj;Ljava/util/List;)V	a	lambda$build$10
	m	(Ljava/util/List;Ljava/lang/String;Lakf;)V	a	lambda$load$2
	m	(Ljava/util/Map;)Ljava/util/Map;	a	build
	m	(Ljava/util/Map;Laaj;Ljava/util/Collection;)V	a	lambda$build$12
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Laaj;Ljava/util/function/BiConsumer;)V	a	visitDependenciesAndElement
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Lakf$a;Ljava/util/Map;Laaj;)V	a	lambda$build$14
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Laaj;)V	a	lambda$visitDependenciesAndElement$3
	m	(Laaj;)Z	b	lambda$load$0
		p	0		id
	m	(Lahu;)Ljava/util/Map;	b	loadAndBuild
		p	1		manager
	m	(Lcom/google/common/collect/Multimap;Laaj;Laaj;)V	b	addDependencyIfNotCyclic
	m	(Lcom/google/common/collect/Multimap;Laaj;Laki$a;)V	b	lambda$build$6
	m	(Lcom/google/common/collect/Multimap;Laaj;Ljava/util/List;)V	b	lambda$build$7
	m	(Lcom/google/common/collect/Multimap;Laaj;Laaj;)V	c	lambda$build$8
	m	(Lcom/google/common/collect/Multimap;Laaj;Laaj;)V	d	lambda$build$5
	m	(Lcom/google/common/collect/Multimap;Laaj;Laaj;)Z	e	lambda$isCyclic$4
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	PATH_SUFFIX
	f	I	c	PATH_SUFFIX_LENGTH
	f	Ljava/util/function/Function;	d	idToValue
	f	Ljava/lang/String;	e	directory
c	aki$1	net/minecraft/tags/TagLoader$1
	m	(Laaj;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Laaj;)Ljava/util/Collection;	b	tag
		p	1		id
	f	Ljava/util/Map;	a	val$newTags
	f	Laki;	b	this$0
c	aki$a	net/minecraft/tags/TagLoader$EntryWithSource
	m	(Lakf;Ljava/lang/String;)V	<init>	<init>
		p	2		source
	m	()Lakf;	a	entry
	m	()Ljava/lang/String;	b	source
	f	Lakf;	a	entry
	f	Ljava/lang/String;	b	source
c	akj	net/minecraft/tags/TagManager
	m	(Lhn;)V	<init>	<init>
		p	1		registryManager
	m	()Ljava/util/List;	a	getResult
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$1
	m	(Laai;)Ljava/lang/String;	a	getTagDir
		p	0		registry
	m	(Laai;Laki;Lahu;)Lakj$a;	a	lambda$createLoader$4
	m	(Laho$a;Lahu;Lawc;Lawc;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lahu;Ljava/util/concurrent/Executor;Lhn$d;)Ljava/util/concurrent/CompletableFuture;	a	createLoader
		p	1		resourceManager
		p	2		prepareExecutor
		p	3		requirement
	m	(Lhm;Laai;Laaj;)Ljava/util/Optional;	a	lambda$createLoader$3
	m	(Ljava/util/List;Ljava/lang/Void;)V	a	lambda$reload$2
	m	(Lahu;Ljava/util/concurrent/Executor;Lhn$d;)Ljava/util/concurrent/CompletableFuture;	b	lambda$reload$0
	f	Ljava/util/Map;	a	CUSTOM_REGISTRY_DIRECTORIES
	f	Lhn;	b	registryAccess
	f	Ljava/util/List;	c	results
c	akj$a	net/minecraft/tags/TagManager$LoadResult
	m	()Laai;	a	key
	m	()Ljava/util/Map;	b	tags
	f	Laai;	a	key
	f	Ljava/util/Map;	b	tags
c	akk	net/minecraft/tags/TagNetworkSerialization
	m	(Laai;Lhm;Lakk$a;Lakk$b;)V	a	deserializeTagsFromNetwork
		p	0		registryKey
		p	1		registry
		p	2		serialized
		p	3		loader
	m	(Laai;Lhm;Lakk$b;Laaj;Lit/unimi/dsi/fastutil/ints/IntList;)V	a	lambda$deserializeTagsFromNetwork$3
		p	3		tagId
		p	4		rawIds
	m	(Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$serializeTagsToNetwork$1
	m	(Lhm;)Lakk$a;	a	serializeToNetwork
		p	0		registry
	m	(Lhm;Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serializeToNetwork$2
		p	2		pair
	m	(Lhn$d;)Lcom/mojang/datafixers/util/Pair;	a	lambda$serializeTagsToNetwork$0
	m	(Lhn;)Ljava/util/Map;	a	serializeTagsToNetwork
		p	0		dynamicRegistryManager
c	akk$a	net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		contents
	m	()Z	a	isEmpty
	m	(Lqx;)V	a	write
		p	1		buf
	m	(Lqx;)Lakk$a;	b	read
		p	0		buf
	f	Ljava/util/Map;	a	tags
c	akk$b	net/minecraft/tags/TagNetworkSerialization$TagOutput
	m	(Lakh;Ljava/util/List;)V	accept	accept
		p	1		tag
		p	2		entries
c	akl	net/minecraft/tags/WorldPresetTags
	m	(Ljava/lang/String;)Lakh;	a	create
		p	0		id
	f	Lakh;	a	NORMAL
	f	Lakh;	b	EXTENDED
c	akm	net/minecraft/tags/package-info
c	akn	net/minecraft/util/BitStorage
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Lakn;	d	copy
c	ako	net/minecraft/util/ClassInstanceMultiMap
	m	(Ljava/lang/Class;)V	<init>	<init>
		p	1		elementType
	m	()Ljava/util/List;	a	getAllInstances
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	find
		p	1		type
	m	(Ljava/lang/Class;)Ljava/util/List;	b	lambda$find$0
		p	1		typeClass
	f	Ljava/util/Map;	a	byClass
	f	Ljava/lang/Class;	b	baseClass
	f	Ljava/util/List;	c	allInstances
c	akp	net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	m	(I)V	<init>	<init>
		p	1		size
	m	()V	a	clear
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	()I	b	size
	m	(Ljava/lang/Object;)Z	b	contains
		p	1		value
	m	(Ljava/lang/Object;I)I	b	indexOf
		p	1		value
		p	2		id
	m	()Lakp;	c	copy
	m	(I)Lakp;	c	create
		p	0		expectedSize
	m	(Ljava/lang/Object;)I	c	add
		p	1		value
	m	()I	d	nextId
	m	(I)Z	d	contains
		p	1		index
	m	(Ljava/lang/Object;)I	d	hash
		p	1		value
	m	(I)I	e	getValue
		p	1		index
	m	(I)V	f	grow
		p	1		newSize
	m	(I)I	g	findEmpty
		p	1		size
	f	I	b	NOT_FOUND
	f	Ljava/lang/Object;	c	EMPTY_SLOT
	f	F	d	LOADFACTOR
	f	[Ljava/lang/Object;	e	keys
	f	[I	f	values
	f	[Ljava/lang/Object;	g	byId
	f	I	h	nextId
	f	I	i	size
c	akq	net/minecraft/util/Crypt
	m	()Ljavax/crypto/SecretKey;	a	generateSecretKey
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	setupCipher
		p	0		opMode
		p	1		algorithm
		p	2		key
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	getCipher
		p	0		opMode
		p	1		key
	m	(ILjava/security/Key;[B)[B	a	cipherData
		p	0		opMode
		p	1		key
		p	2		data
	m	(Ljava/lang/String;)Ljava/security/PrivateKey;	a	stringToPemRsaPrivateKey
		p	0		key
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lakq$a;)Ljava/security/Key;	a	rsaStringToKey
		p	0		key
		p	1		prefix
		p	2		suffix
		p	3		decoder
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	digestData
		p	0		baseServerId
		p	1		publicKey
		p	2		secretKey
	m	(Ljava/security/Key;[B)[B	a	encryptUsingKey
		p	0		key
		p	1		data
	m	(Ljava/security/PrivateKey;)Ljava/lang/String;	a	pemRsaPrivateKeyToString
		p	0		key
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptByteToSecretKey
		p	0		privateKey
		p	1		encryptedSecretKey
	m	(Ljava/security/PublicKey;)Ljava/lang/String;	a	rsaPublicKeyToString
		p	0		key
	m	([B)Ljava/security/PublicKey;	a	byteToPublicKey
		p	0		key
	m	([[B)[B	a	digestData
		p	0		bytes
	m	()Ljava/security/KeyPair;	b	generateKeyPair
	m	(Ljava/lang/String;)Ljava/security/PublicKey;	b	stringToRsaPublicKey
		p	0		key
	m	(Ljava/security/Key;[B)[B	b	decryptUsingKey
		p	0		key
		p	1		data
	m	([B)Ljava/security/PrivateKey;	b	byteToPrivateKey
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$0
		p	0		key
	f	Ljava/lang/String;	a	SIGNING_ALGORITHM
	f	Ljava/lang/String;	b	RSA_PUBLIC_KEY_HEADER
	f	Ljava/lang/String;	c	MIME_LINE_SEPARATOR
	f	Ljava/util/Base64$Encoder;	d	MIME_ENCODER
	f	Lcom/mojang/serialization/Codec;	e	PUBLIC_KEY_CODEC
	f	Lcom/mojang/serialization/Codec;	f	PRIVATE_KEY_CODEC
	f	Ljava/lang/String;	g	SYMMETRIC_ALGORITHM
	f	I	h	SYMMETRIC_BITS
	f	Ljava/lang/String;	i	ASYMMETRIC_ALGORITHM
	f	I	j	ASYMMETRIC_BITS
	f	Ljava/lang/String;	k	BYTE_ENCODING
	f	Ljava/lang/String;	l	HASH_ALGORITHM
	f	Ljava/lang/String;	m	PEM_RSA_PRIVATE_KEY_HEADER
	f	Ljava/lang/String;	n	PEM_RSA_PRIVATE_KEY_FOOTER
	f	Ljava/lang/String;	o	RSA_PUBLIC_KEY_FOOTER
c	akq$a	net/minecraft/util/Crypt$ByteArrayToKeyFunction
	m	([B)Ljava/security/Key;	apply	apply
		p	1		key
c	akq$b	net/minecraft/util/Crypt$SaltSignaturePair
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isValid
	m	(Lqx;Lakq$b;)V	a	write
		p	0		buf
		p	1		signatureData
	m	()[B	b	saltAsBytes
	m	()J	c	salt
	m	()[B	d	signature
	f	Lakq$b;	a	EMPTY
	f	J	b	salt
	f	[B	c	signature
c	akq$c	net/minecraft/util/Crypt$SaltSupplier
	m	()J	a	getLong
	f	Ljava/security/SecureRandom;	a	secureRandom
c	akr	net/minecraft/util/CryptException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		throwable
c	aks	net/minecraft/util/CsvOutput
	m	(Ljava/io/Writer;Ljava/util/List;)V	<init>	<init>
		p	1		writer
		p	2		columns
	m	()Laks$a;	a	builder
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getStringValue
		p	0		o
	m	(Ljava/util/stream/Stream;)V	a	writeLine
		p	1		columns
	m	([Ljava/lang/Object;)V	a	writeRow
		p	1		columns
	f	Ljava/lang/String;	a	LINE_SEPARATOR
	f	Ljava/lang/String;	b	FIELD_SEPARATOR
	f	Ljava/io/Writer;	c	output
	f	I	d	columnCount
c	aks$a	net/minecraft/util/CsvOutput$Builder
	m	(Ljava/io/Writer;)Laks;	a	build
		p	1		writer
	m	(Ljava/lang/String;)Laks$a;	a	addColumn
		p	1		name
	f	Ljava/util/List;	a	headers
c	akt	net/minecraft/util/CubicSampler
	m	(Ldvt;Lakt$a;)Ldvt;	a	gaussianSampleVec3
		p	0		pos
		p	1		rgbFetcher
	f	I	a	GAUSSIAN_SAMPLE_RADIUS
	f	I	b	GAUSSIAN_SAMPLE_BREADTH
	f	[D	c	GAUSSIAN_SAMPLE_KERNEL
c	akt$a	net/minecraft/util/CubicSampler$Vec3Fetcher
	m	(III)Ldvt;	fetch	fetch
		p	1		x
		p	2		y
		p	3		z
c	aku	net/minecraft/util/CubicSpline
	m	()Ljava/lang/String;	a	parityString
	m	(F)Laku;	a	constant
		p	0		value
	m	(FLaku;F)Laku$a;	a	lambda$codec$0
		p	0		location
		p	1		value
		p	2		derivative
	m	(Laku$d;)Laku;	a	mapAll
	m	(Laku$e;)Ljava/lang/Record;	a	lambda$codec$6
		p	0		spline
	m	(Laku$e;I)Laku$a;	a	lambda$codec$2
		p	1		index
	m	(Laku;)Lcom/mojang/datafixers/util/Either;	a	lambda$codec$8
		p	0		spline
	m	(Lami;)Laku$b;	a	builder
		p	0		locationFunction
	m	(Lami;Lami;)Laku$b;	a	builder
		p	0		locationFunction
		p	1		amplifier
	m	(Lami;Ljava/util/List;)Laku$e;	a	lambda$codec$4
		p	0		locationFunction
		p	1		splines
	m	(Lcom/mojang/datafixers/util/Either;)Laku;	a	lambda$codec$7
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		locationFunctionCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$5
		p	2		instance
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	m	(Laku$e;)Ljava/util/List;	b	lambda$codec$3
		p	0		spline
c	aku$a	net/minecraft/util/CubicSpline$1Point
	m	()F	a	location
	m	()Laku;	b	value
	m	()F	c	derivative
	f	F	a	location
	f	Laku;	b	value
	f	F	c	derivative
c	aku$b	net/minecraft/util/CubicSpline$Builder
	m	(Lami;)V	<init>	<init>
		p	1		locationFunction
	m	(Lami;Lami;)V	<init>	<init>
		p	1		locationFunction
		p	2		amplifier
	m	()Laku;	a	build
	m	(FF)Laku$b;	a	addPoint
	m	(FFF)Laku$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	m	(FLaku;)Laku$b;	a	addPoint
	m	(FLaku;F)Laku$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	f	Lami;	a	coordinate
	f	Lami;	b	valueTransformer
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	c	locations
	f	Ljava/util/List;	d	values
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	e	derivatives
c	aku$c	net/minecraft/util/CubicSpline$Constant
	m	(F)V	<init>	<init>
		p	1		value
	m	()Ljava/lang/String;	a	parityString
	m	(Laku$d;)Laku;	a	mapAll
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()F	d	value
	f	F	b	value
c	aku$d	net/minecraft/util/CubicSpline$CoordinateVisitor
c	aku$e	net/minecraft/util/CubicSpline$Multipoint
	m	()Ljava/lang/String;	a	parityString
	m	(D)Ljava/lang/String;	a	lambda$toString$2
		p	0		value
	m	(F[FF[FI)F	a	linearExtend
	m	(F[FI)Z	a	lambda$findIntervalStart$0
	m	(Laku$d;)Laku;	a	mapAll
	m	(Laku$d;Laku;)Laku;	a	lambda$mapAll$3
	m	(Lami;[FLjava/util/List;[F)Laku$e;	a	create
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	([F)Ljava/lang/String;	a	toString
		p	1		values
	m	([FF)I	a	findIntervalStart
	m	([FI)D	a	lambda$toString$1
		p	1		index
	m	([FLjava/util/List;[F)V	a	validateSizes
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()Lami;	d	coordinate
	m	()[F	e	locations
	m	()Ljava/util/List;	f	values
	m	()[F	g	derivatives
	f	Lami;	b	coordinate
	f	[F	c	locations
	f	Ljava/util/List;	d	values
	f	[F	e	derivatives
	f	F	f	minValue
	f	F	g	maxValue
c	akv	net/minecraft/util/DebugBuffer
	m	(I)V	<init>	<init>
		p	1		maxSize
	m	()Ljava/util/List;	a	dump
	m	(Ljava/lang/Object;)V	a	push
		p	1		value
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	a	data
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	index
c	akw	net/minecraft/util/DirectoryLock
	m	(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V	<init>	<init>
		p	1		channel
		p	2		lock
	m	()Z	a	isValid
	m	(Ljava/nio/file/Path;)Lakw;	a	create
		p	0		path
	m	(Ljava/nio/file/Path;)Z	b	isLocked
		p	0		path
	f	Ljava/lang/String;	a	LOCK_FILE
	f	Ljava/nio/channels/FileChannel;	b	lockFile
	f	Ljava/nio/channels/FileLock;	c	lock
	f	Ljava/nio/ByteBuffer;	d	DUMMY
c	akw$a	net/minecraft/util/DirectoryLock$LockException
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		message
	m	(Ljava/nio/file/Path;)Lakw$a;	a	alreadyLocked
		p	0		path
c	akx	net/minecraft/util/ExceptionCollector
	m	()V	a	throwIfPresent
	m	(Ljava/lang/Throwable;)V	a	add
		p	1		throwable
	f	Ljava/lang/Throwable;	a	result
c	aky	net/minecraft/util/ExtraCodecs
	m	()Ljava/util/function/Function;	a	nonEmptyListCheck
	m	(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	floatRangeMinExclusiveWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(IILjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intRangeWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(Laaj;)Laky$d;	a	lambda$static$32
		p	0		id
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object;	a	lambda$intervalCodec$8
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	nonEmptyList
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	xor
		p	0		first
		p	1		second
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$intervalCodec$3
		p	3		instance
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intervalCodec
		p	0		codec
		p	1		leftFieldName
		p	2		rightFieldName
		p	3		combineFunction
		p	4		leftFunction
		p	5		rightFunction
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	overrideLifecycle
		p	0		originalCodec
		p	1		entryLifecycleGetter
		p	2		lifecycleGetter
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	asOptionalLong
		p	0		codec
	m	(Lhe;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyHolderSetCheck$25
		p	0		entries
	m	(Ljava/lang/Float;)Ljava/lang/String;	a	lambda$static$23
		p	0		v
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$static$21
		p	0		v
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function;	a	checkRangeWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;Ljava/lang/Number;)Lcom/mojang/serialization/DataResult;	a	lambda$checkRangeMinExclusiveWithMessage$22
		p	3		value
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction;	a	orElsePartial
		p	0		object
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$33
		p	0		tagEntry
	m	(Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec;	a	instantCodec
		p	0		formatter
	m	(Ljava/time/format/DateTimeFormatter;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$instantCodec$28
		p	1		dateTimeString
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyListCheck$24
		p	0		list
	m	(Ljava/util/Optional;)Ljava/util/OptionalLong;	a	lambda$static$34
		p	0		optional
	m	(Ljava/util/OptionalLong;)Ljava/util/Optional;	a	lambda$static$35
		p	0		optionalLong
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$10
		p	1		either
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$4
		p	1		pair
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$9
		p	1		object
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$1
		p	1		list
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	retrieveContext
		p	0		retriever
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$18
		p	1		element
	m	(Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$16
		p	1		id
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Lcom/mojang/serialization/DataResult;	a	lambda$ensureHomogenous$26
		p	1		collection
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	stringResolverCodec
		p	0		elementToId
		p	1		idToElement
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	a	lambda$intervalCodec$11
		p	2		pair
	m	(Ljava/util/function/IntFunction;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$13
		p	1		rawId
	m	(Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec;	a	lazyInitializedCodec
		p	0		supplier
	m	(Ljava/util/function/ToIntFunction;ILjava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$14
		p	2		element
	m	(Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec;	a	idResolverCodec
		p	0		elementToRawId
		p	1		rawIdToElement
		p	2		errorRawId
	m	([B)Ljava/lang/String;	a	lambda$static$30
		p	0		data
	m	()Ljava/util/function/Function;	b	nonEmptyHolderSetCheck
	m	(Laaj;)Laky$d;	b	lambda$static$31
		p	0		id
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	nonEmptyHolderSet
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	orCompressed
		p	0		uncompressedCodec
		p	1		compressedCodec
	m	(Ljava/lang/Integer;)Ljava/lang/String;	b	lambda$static$20
		p	0		v
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function;	b	checkRangeMinExclusiveWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;Ljava/lang/Number;)Lcom/mojang/serialization/DataResult;	b	lambda$checkRangeWithMessage$19
		p	3		value
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$stringResolverCodec$17
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$29
		p	0		encoded
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$intervalCodec$0
		p	1		list
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	ensureHomogenous
		p	0		typeGetter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	b	lambda$intervalCodec$5
		p	2		pair
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	catchDecoderException
		p	0		codec
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	c	lambda$idResolverCodec$12
	m	(Ljava/lang/Object;)Ljava/lang/Object;	c	lambda$intervalCodec$7
		p	0		object
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$27
		p	0		pattern
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/List;	c	lambda$intervalCodec$2
		p	2		pair
	m	(Ljava/lang/Object;)Ljava/lang/Object;	d	lambda$intervalCodec$6
		p	0		object
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$stringResolverCodec$15
	f	Lcom/mojang/serialization/Codec;	a	UUID
	f	Lcom/mojang/serialization/Codec;	b	NON_NEGATIVE_INT
	f	Lcom/mojang/serialization/Codec;	c	POSITIVE_INT
	f	Lcom/mojang/serialization/Codec;	d	POSITIVE_FLOAT
	f	Lcom/mojang/serialization/Codec;	e	PATTERN
	f	Lcom/mojang/serialization/Codec;	f	INSTANT_ISO8601
	f	Lcom/mojang/serialization/Codec;	g	BASE64_STRING
	f	Lcom/mojang/serialization/Codec;	h	TAG_OR_ELEMENT_ID
	f	Ljava/util/function/Function;	i	toOptionalLong
	f	Ljava/util/function/Function;	j	fromOptionalLong
c	aky$1	net/minecraft/util/ExtraCodecs$1
	f	Ljava/lang/Object;	a	val$value
c	aky$2	net/minecraft/util/ExtraCodecs$2
	f	Lcom/mojang/serialization/Codec;	a	val$compressed
	f	Lcom/mojang/serialization/Codec;	b	val$normal
c	aky$3	net/minecraft/util/ExtraCodecs$3
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$apply$0
		p	2		pair
	f	Ljava/util/function/Function;	a	val$decodeLifecycle
	f	Ljava/util/function/Function;	b	val$encodeLifecycle
c	aky$4	net/minecraft/util/ExtraCodecs$4
	f	Lcom/mojang/serialization/Codec;	a	val$codec
c	aky$a	net/minecraft/util/ExtraCodecs$1ContextRetrievalCodec
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		retriever
	f	Ljava/util/function/Function;	a	val$getter
c	aky$b	net/minecraft/util/ExtraCodecs$EitherCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$2
		p	0		pair
		p	1		pair2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$4
		p	3		right
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$3
		p	3		left
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	aky$c	net/minecraft/util/ExtraCodecs$LazyInitializedCodec
	m	()Ljava/util/function/Supplier;	a	delegate
	f	Ljava/util/function/Supplier;	a	delegate
c	aky$d	net/minecraft/util/ExtraCodecs$TagOrElementLocation
	m	()Laaj;	a	id
	m	()Z	b	tag
	m	()Ljava/lang/String;	c	decoratedId
	f	Laaj;	a	id
	f	Z	b	tag
c	aky$e	net/minecraft/util/ExtraCodecs$XorCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$3
		p	3		right
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$2
		p	3		left
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	akz	net/minecraft/util/FastBufferedInputStream
	m	(Ljava/io/InputStream;)V	<init>	<init>
		p	1		stream
	m	(Ljava/io/InputStream;I)V	<init>	<init>
		p	1		stream
		p	2		size
	m	()I	a	bytesInBuffer
	m	()V	b	fill
	f	I	a	DEFAULT_BUFFER_SIZE
	f	Ljava/io/InputStream;	b	in
	f	[B	c	buffer
	f	I	d	limit
	f	I	e	position
c	ala	net/minecraft/util/FastColor
c	ala$a	net/minecraft/util/FastColor$ARGB32
	m	(I)I	a	alpha
		p	0		argb
	m	(II)I	a	multiply
		p	0		first
		p	1		second
	m	(IIII)I	a	color
		p	0		alpha
		p	1		red
		p	2		green
		p	3		blue
	m	(I)I	b	red
		p	0		argb
	m	(I)I	c	green
		p	0		argb
	m	(I)I	d	blue
		p	0		argb
c	alb	net/minecraft/util/FileZipper
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		file
	m	(Ljava/nio/file/Path;)V	a	add
		p	1		source
	m	(Ljava/nio/file/Path;Ljava/io/File;)V	a	add
		p	1		target
		p	2		source
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	add
		p	1		target
		p	2		content
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$add$0
		p	0		path
		p	1		attributes
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	outputFile
	f	Ljava/nio/file/Path;	c	tempFile
	f	Ljava/nio/file/FileSystem;	d	fs
c	alc	net/minecraft/util/FormattedCharSequence
	m	(Lalc;Lalc;Lald;)Z	a	lambda$fromPair$7
		p	2		visitor
	m	(Lald;)Z	a	lambda$static$0
		p	0		visitor
	m	(Lald;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILrv;I)Z	a	lambda$decorateOutput$6
		p	2		charIndex
		p	3		style
		p	4		charPoint
	m	(Ljava/lang/String;Lrv;Lald;)Z	a	lambda$backward$4
		p	2		visitor
	m	(Ljava/lang/String;Lrv;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lald;)Z	a	lambda$backward$5
		p	3		visitor
	m	(Ljava/util/List;Lald;)Z	a	lambda$fromList$8
		p	1		visitor
	m	(Lrv;ILald;)Z	a	lambda$codepoint$1
		p	2		visitor
	m	(Lald;)Z	accept	accept
		p	1		visitor
	m	(Ljava/lang/String;Lrv;Lald;)Z	b	lambda$forward$2
		p	2		visitor
	m	(Ljava/lang/String;Lrv;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lald;)Z	b	lambda$forward$3
		p	3		visitor
	m	(Ljava/lang/String;Lrv;)Lalc;	backward	backward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Lrv;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lalc;	backward	backward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(ILrv;)Lalc;	codepoint	codepoint
		p	0		codePoint
		p	1		style
	m	(Lalc;)Lalc;	composite	composite
		p	0		text
	m	(Lalc;Lalc;)Lalc;	composite	composite
		p	0		first
		p	1		second
	m	(Ljava/util/List;)Lalc;	composite	composite
		p	0		texts
	m	([Lalc;)Lalc;	composite	composite
		p	0		texts
	m	(Lald;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lald;	decorateOutput	decorateOutput
		p	0		visitor
		p	1		codePointMapper
	m	(Ljava/lang/String;Lrv;)Lalc;	forward	forward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Lrv;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lalc;	forward	forward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(Ljava/util/List;)Lalc;	fromList	fromList
		p	0		texts
	m	(Lalc;Lalc;)Lalc;	fromPair	fromPair
		p	0		text1
		p	1		text2
	f	Lalc;	a	EMPTY
c	ald	net/minecraft/util/FormattedCharSink
	m	(ILrv;I)Z	accept	accept
		p	1		index
		p	2		style
		p	3		codePoint
c	ale	net/minecraft/util/FrameTimer
	m	()I	a	getLogStart
	m	(I)J	a	getAverageDuration
	m	(II)I	a	scaleAverageDurationTo
	m	(J)V	a	logFrameDuration
		p	1		time
	m	(JII)I	a	scaleSampleTo
	m	()I	b	getLogEnd
	m	(I)I	b	wrapIndex
		p	1		index
	m	()[J	c	getLog
	f	I	a	LOGGING_LENGTH
	f	[J	b	loggedTimes
	f	I	c	logStart
	f	I	d	logLength
	f	I	e	logEnd
c	alf	net/minecraft/util/Graph
	m	(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z	a	depthFirstSearch
		p	0		successors
		p	1		visited
		p	2		visiting
		p	3		reversedOrderConsumer
		p	4		now
c	alg	net/minecraft/util/GsonHelper
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		clazz
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		clazz
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		clazz
		p	3		lenient
	m	(Lcom/google/gson/JsonElement;)Z	a	isStringValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	convertToString
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	convertToObject
		p	0		element
		p	1		name
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	isStringValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getAsByte
		p	0		object
		p	1		element
		p	2		defaultByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;C)C	a	getAsCharacter
		p	0		object
		p	1		element
		p	2		defaultChar
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;D)D	a	getAsDouble
		p	0		object
		p	1		element
		p	2		defaultDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getAsFloat
		p	0		object
		p	1		element
		p	2		defaultFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getAsInt
		p	0		object
		p	1		element
		p	2		defaultInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getAsLong
		p	0		object
		p	1		element
		p	2		defaultLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbzw;)Lbzw;	a	getAsItem
		p	0		object
		p	1		key
		p	2		defaultItem
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getAsJsonArray
		p	0		object
		p	1		name
		p	2		defaultArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getAsJsonObject
		p	0		object
		p	1		element
		p	2		defaultObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		defaultValue
		p	3		context
		p	4		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getAsString
		p	0		object
		p	1		element
		p	2		defaultStr
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;	a	getAsBigDecimal
		p	0		object
		p	1		element
		p	2		defaultBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;	a	getAsBigInteger
		p	0		object
		p	1		element
		p	2		defaultBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;S)S	a	getAsShort
		p	0		object
		p	1		element
		p	2		defaultShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getAsBoolean
		p	0		object
		p	1		element
		p	2		defaultBoolean
	m	(Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V	a	writeValue
		p	0		writer
		p	1		json
		p	2		comparator
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
	m	(Ljava/io/Reader;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
		p	1		lenient
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
	m	(Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$convertToItem$0
	m	(Ljava/lang/String;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
		p	1		lenient
	m	(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection;	a	sortByKeyIfNeeded
		p	0		entries
		p	1		comparator
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumberValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lbzw;	b	convertToItem
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	b	isNumberValue
		p	0		object
		p	1		element
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		reader
	m	(Ljava/lang/String;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		content
	m	(Lcom/google/gson/JsonElement;)Z	c	isBooleanValue
		p	0		object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	convertToBoolean
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	isBooleanValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)D	d	convertToDouble
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	isArrayNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	e	toStableString
		p	0		json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	convertToFloat
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	e	isObjectNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	convertToLong
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	isValidPrimitive
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	convertToInt
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	isValidNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	convertToByte
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	h	getAsString
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)C	i	convertToCharacter
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lbzw;	i	getAsItem
		p	0		object
		p	1		key
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal;	j	convertToBigDecimal
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	j	getAsBoolean
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger;	k	convertToBigInteger
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)D	k	getAsDouble
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)S	l	convertToShort
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	l	getAsFloat
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	convertToJsonObject
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	m	getAsLong
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	convertToJsonArray
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	n	getAsInt
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)B	o	getAsByte
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)C	p	getAsCharacter
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal;	q	getAsBigDecimal
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger;	r	getAsBigInteger
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)S	s	getAsShort
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	t	getAsJsonObject
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	u	getAsJsonArray
		p	0		object
		p	1		element
	f	Lcom/google/gson/Gson;	a	GSON
c	alh	net/minecraft/util/HttpUtil
	m	()I	a	getAvailablePort
	m	(Lalt;Ljava/net/URL;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object;	a	lambda$downloadTo$0
	m	(Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILalt;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture;	a	downloadTo
		p	0		file
		p	1		url
		p	2		headers
		p	3		maxFileSize
		p	4		progressListener
		p	5		proxy
	f	Lcom/google/common/util/concurrent/ListeningExecutorService;	a	DOWNLOAD_EXECUTOR
	f	Lorg/slf4j/Logger;	b	LOGGER
c	ali	net/minecraft/util/InclusiveRange
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		minInclusive
		p	2		maxInclusive
	m	()Ljava/lang/Comparable;	a	minInclusive
	m	(Lali;)Z	a	contains
		p	1		other
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		elementCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
		p	1		minInclusive
		p	2		maxInclusive
	m	(Ljava/lang/Comparable;)Z	a	isValueInRange
		p	1		value
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		minInclusive
		p	1		maxInclusive
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lali;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$0
		p	2		range
	m	()Ljava/lang/Comparable;	b	maxInclusive
	f	Lcom/mojang/serialization/Codec;	a	INT
	f	Ljava/lang/Comparable;	b	minInclusive
	f	Ljava/lang/Comparable;	c	maxInclusive
c	alj	net/minecraft/util/KeyDispatchDataCodec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;)Lalj;	a	of
		p	0		codec
	m	(Lcom/mojang/serialization/MapCodec;)Lalj;	a	of
		p	0		mapCodec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	alk	net/minecraft/util/LazyLoadedValue
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		delegate
	m	()Ljava/lang/Object;	a	get
	f	Ljava/util/function/Supplier;	a	factory
c	all	net/minecraft/util/LinearCongruentialGenerator
	m	(JJ)J	a	next
		p	0		seed
		p	2		salt
	f	J	a	MULTIPLIER
	f	J	b	INCREMENT
c	alm	net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	toLowercase
		p	1		o
c	alm$1	net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	f	Ljava/util/Map;	a	val$lowercaseToConstant
	f	Lalm;	b	this$0
c	aln	net/minecraft/util/MemoryReserve
	m	()V	a	allocate
	m	()V	b	release
	f	[B	a	reserve
c	alo	net/minecraft/util/ModCheck
	m	()Z	a	shouldReportAsModified
	m	(Lalo;)Lalo;	a	merge
		p	1		brand
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lalo;	a	identify
		p	0		vanillaBrand
		p	1		brandSupplier
		p	2		environment
		p	3		clazz
	m	()Ljava/lang/String;	b	fullDescription
	m	()Lalo$a;	c	confidence
	m	()Ljava/lang/String;	d	description
	f	Lalo$a;	a	confidence
	f	Ljava/lang/String;	b	description
c	alo$a	net/minecraft/util/ModCheck$Confidence
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		description
		p	4		modded
	m	()[Lalo$a;	a	$values
	f	Lalo$a;	a	PROBABLY_NOT
	f	Lalo$a;	b	VERY_LIKELY
	f	Lalo$a;	c	DEFINITELY
	f	Ljava/lang/String;	d	description
	f	Z	e	shouldReportAsModified
	f	[Lalo$a;	f	$VALUES
c	alp	net/minecraft/util/Mth
	m	()Ljava/util/UUID;	a	createInsecureUUID
	m	(BBB)B	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(D)I	a	fastFloor
		p	0		value
	m	(DD)D	a	absMax
		p	0		a
		p	2		b
	m	(DDD)D	a	clamp
		p	0		value
		p	2		min
		p	4		max
	m	(DDDDD)D	a	clampedMap
		p	0		lerpValue
		p	2		lerpStart
		p	4		lerpEnd
		p	6		start
		p	8		end
	m	(DDDDDD)D	a	lerp2
		p	0		deltaX
		p	2		deltaY
		p	4		x0y0
		p	6		x1y0
		p	8		x0y1
		p	10		x1y1
	m	(DDDDDDDDDDD)D	a	lerp3
		p	0		deltaX
		p	2		deltaY
		p	4		deltaZ
		p	6		x0y0z0
		p	8		x1y0z0
		p	10		x0y1z0
		p	12		x1y1z0
		p	14		x0y0z1
		p	16		x1y0z1
		p	18		x0y1z1
		p	20		x1y1z1
	m	(DDDDDDII)[D	a	binBiModalNormalDistribution
	m	(DDDII)[D	a	binNormalDistribution
	m	(DDII)[D	a	binLogDistribution
	m	(DI)I	a	quantize
		p	0		a
		p	2		b
	m	(F)F	a	sin
		p	0		value
	m	(FF)Z	a	equal
		p	0		a
		p	1		b
	m	(FFF)F	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(FFFFF)F	a	catmullrom
	m	(I)I	a	abs
		p	0		value
	m	(IFFF)I	a	colorMultiply
		p	0		color
		p	1		r
		p	2		g
		p	3		b
	m	(II)I	a	intFloorDiv
		p	0		dividend
		p	1		divisor
	m	(III)I	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(IIII)Ljava/util/stream/IntStream;	a	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
		p	3		steps
	m	(IIIII)I	a	lambda$outFromOrigin$2
		p	4		i
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
		p	0		min
		p	1		max
		p	2		predicate
	m	(J)J	a	murmurHash3Mixer
		p	0		value
	m	(JJJ)J	a	clamp
		p	0		value
		p	2		min
		p	4		max
	m	(Lalu;)Ljava/util/UUID;	a	createInsecureUUID
		p	0		random
	m	(Lalu;DD)D	a	nextDouble
		p	0		random
		p	1		min
		p	3		max
	m	(Lalu;FF)F	a	nextFloat
		p	0		random
		p	1		min
		p	2		max
	m	(Lalu;II)I	a	nextInt
		p	0		random
		p	1		min
		p	2		max
	m	(Lalu;[D)I	a	getRandomForDistributionIntegral
	m	(Ldvt;Ldvt;Ldvo;)Z	a	rayIntersectsAABB
	m	(Ldvt;Ldvt;Ldvt;Ldvt;D)Ldvt;	a	catmullRomSplinePos
	m	(Lhs;)J	a	getSeed
		p	0		vec
	m	(Ljava/lang/String;D)D	a	getDouble
		p	0		string
		p	1		fallback
	m	(Ljava/lang/String;DD)D	a	getDouble
		p	0		string
		p	1		fallback
		p	3		min
	m	(Ljava/lang/String;I)I	a	getInt
		p	0		string
		p	1		fallback
	m	(Ljava/lang/String;II)I	a	getInt
		p	0		string
		p	1		fallback
		p	2		min
	m	([D)[D	a	cumulativeSum
		p	0		values
	m	([F)V	a	lambda$static$0
		p	0		sineTable
	m	([J)D	a	average
		p	0		array
	m	(D)I	b	floor
		p	0		value
	m	(DD)Z	b	equal
		p	0		a
		p	2		b
	m	(DDD)D	b	clampedLerp
		p	0		start
		p	2		end
		p	4		delta
	m	(DDDDD)D	b	map
		p	0		lerpValue
		p	2		lerpStart
		p	4		lerpEnd
		p	6		start
		p	8		end
	m	(F)F	b	cos
		p	0		value
	m	(FF)F	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(FFF)F	b	clampedLerp
		p	0		start
		p	1		end
		p	2		delta
	m	(FFFFF)F	b	clampedMap
		p	0		lerpValue
		p	1		lerpStart
		p	2		lerpEnd
		p	3		start
		p	4		end
	m	(I)I	b	wrapDegrees
		p	0		degrees
	m	(II)I	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(III)I	b	color
		p	0		r
		p	1		g
		p	2		b
	m	(IIII)Z	b	lambda$outFromOrigin$1
		p	3		i
	m	(J)J	b	square
		p	0		n
	m	(Lalu;FF)F	b	randomBetween
		p	0		random
		p	1		min
		p	2		max
	m	(Lalu;II)I	b	randomBetweenInclusive
		p	0		random
		p	1		min
		p	2		max
	m	(D)J	c	lfloor
		p	0		value
	m	(DD)D	c	positiveModulo
		p	0		dividend
		p	2		divisor
	m	(DDD)D	c	inverseLerp
		p	0		value
		p	2		start
		p	4		end
	m	(F)F	c	sqrt
		p	0		value
	m	(FF)F	c	degreesDifference
		p	0		start
		p	1		end
	m	(FFF)F	c	rotateIfNecessary
		p	0		value
		p	1		mean
		p	2		delta
	m	(FFFFF)F	c	map
		p	0		lerpValue
		p	1		lerpStart
		p	2		lerpEnd
		p	3		start
		p	4		end
	m	(I)I	c	smallestEncompassingPowerOfTwo
		p	0		value
	m	(II)I	c	colorMultiply
		p	0		a
		p	1		b
	m	(III)J	c	getSeed
		p	0		x
		p	1		y
		p	2		z
	m	(Lalu;FF)F	c	normal
		p	0		random
		p	1		mean
		p	2		deviation
	m	(D)I	d	absFloor
		p	0		value
	m	(DD)D	d	atan2
		p	0		y
		p	2		x
	m	(DDD)D	d	lerp
		p	0		delta
		p	2		start
		p	4		end
	m	(F)I	d	floor
		p	0		value
	m	(FF)F	d	degreesDifferenceAbs
		p	0		first
		p	1		second
	m	(FFF)F	d	approach
		p	0		from
		p	1		to
		p	2		step
	m	(I)Z	d	isPowerOfTwo
		p	0		value
	m	(II)I	d	roundToward
		p	0		value
		p	1		divisor
	m	(III)Ljava/util/stream/IntStream;	d	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
	m	(D)I	e	ceil
		p	0		value
	m	(DD)D	e	lengthSquared
		p	0		a
		p	2		b
	m	(DDD)D	e	lengthSquared
		p	0		a
		p	2		b
		p	4		c
	m	(F)F	e	abs
		p	0		value
	m	(FF)F	e	triangleWave
		p	0		value
		p	1		maxDeviation
	m	(FFF)F	e	approachDegrees
		p	0		from
		p	1		to
		p	2		step
	m	(I)I	e	ceillog2
		p	0		value
	m	(II)I	e	positiveCeilDiv
		p	0		a
		p	1		b
	m	(D)D	f	wrapDegrees
		p	0		degrees
	m	(DD)D	f	length
		p	0		a
		p	2		b
	m	(DDD)D	f	length
		p	0		a
		p	2		b
		p	4		c
	m	(F)I	f	ceil
		p	0		value
	m	(FFF)I	f	color
		p	0		r
		p	1		g
		p	2		b
	m	(I)I	f	log2
		p	0		value
	m	(D)D	g	frac
		p	0		value
	m	(F)F	g	wrapDegrees
		p	0		degrees
	m	(FFF)F	g	inverseLerp
		p	0		value
		p	1		start
		p	2		end
	m	(I)I	g	murmurHash3Mixer
		p	0		value
	m	(D)D	h	fastInvSqrt
		p	0		x
	m	(F)F	h	frac
		p	0		value
	m	(FFF)I	h	hsvToRgb
		p	0		hue
		p	1		saturation
		p	2		value
	m	(I)I	h	square
		p	0		n
	m	(D)D	i	smoothstep
		p	0		value
	m	(F)F	i	fastInvSqrt
		p	0		x
	m	(FFF)F	i	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)D	j	smoothstepDerivative
		p	0		value
	m	(F)F	j	fastInvCubeRoot
		p	0		x
	m	(FFF)F	j	rotLerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)I	k	sign
		p	0		value
	m	(F)F	k	square
		p	0		n
	m	(FFF)F	k	diffuseLight
	m	(D)F	l	rotWrap
		p	0		degrees
	m	(F)F	l	cube
		p	0		n
	m	(FFF)F	l	rotlerp
		p	0		start
		p	1		end
		p	2		delta
	m	(D)D	m	square
		p	0		n
	m	(D)D	n	wobble
	f	F	a	PI
	f	F	b	HALF_PI
	f	F	c	TWO_PI
	f	F	d	DEG_TO_RAD
	f	F	e	RAD_TO_DEG
	f	F	f	EPSILON
	f	F	g	SQRT_OF_TWO
	f	I	h	BIG_ENOUGH_INT
	f	F	i	BIG_ENOUGH_FLOAT
	f	J	j	UUID_VERSION
	f	J	k	UUID_VERSION_TYPE_4
	f	J	l	UUID_VARIANT
	f	J	m	UUID_VARIANT_2
	f	F	n	SIN_SCALE
	f	[F	o	SIN
	f	Lalu;	p	RANDOM
	f	[I	q	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	r	ONE_SIXTH
	f	I	s	FRAC_EXP
	f	I	t	LUT_SIZE
	f	D	u	FRAC_BIAS
	f	[D	v	ASIN_TAB
	f	[D	w	COS_TAB
c	alq	net/minecraft/util/NativeModuleLister
	m	()Ljava/util/List;	a	listModules
	m	(Lalq$a;)Ljava/lang/String;	a	lambda$addCrashSection$1
		p	0		moduleName
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer;	a	queryVersionValue
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	tryGetVersion
		p	0		path
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	langTableKey
		p	0		key
		p	1		languageId
		p	2		codePage
	m	(Lr;)V	a	addCrashSection
		p	0		section
	m	([I)Ljava/util/OptionalInt;	a	findLangAndCodepage
		p	0		indices
	m	()Ljava/lang/String;	b	lambda$addCrashSection$2
	m	(Lalq$a;)Ljava/lang/String;	b	lambda$addCrashSection$0
		p	0		module
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String;	b	queryVersionString
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LANG_MASK
	f	I	c	DEFAULT_LANG
	f	I	d	CODEPAGE_MASK
	f	I	e	DEFAULT_CODEPAGE
c	alq$a	net/minecraft/util/NativeModuleLister$NativeModuleInfo
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		path
		p	2		info
	m	(Lalq$b;)Ljava/lang/String;	a	lambda$toString$0
		p	1		info
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	version
c	alq$b	net/minecraft/util/NativeModuleLister$NativeModuleVersion
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		fileDescription
		p	2		fileVersion
		p	3		companyName
	f	Ljava/lang/String;	a	description
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	company
c	alr	net/minecraft/util/OptionEnum
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Lrm;	c	getCaption
c	als	net/minecraft/util/ParticleUtils
	m	(Lalu;)Ldvt;	a	getRandomSpeedRanges
		p	0		random
	m	(Lcga;)Ldvt;	a	lambda$spawnParticlesOnBlockFaces$0
	m	(Lcga;Lgt;Lgy;Lim;Ldvt;D)V	a	spawnParticleOnFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		effect
		p	4		velocity
		p	5		offsetMultiplier
	m	(Lcga;Lgt;Lim;Layr;)V	a	spawnParticlesOnBlockFaces
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
	m	(Lcga;Lgt;Lim;Layr;Lgy;Ljava/util/function/Supplier;D)V	a	spawnParticlesOnBlockFace
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
		p	4		direction
		p	5		velocity
		p	6		offsetMultiplier
	m	(Lgy$a;Lcga;Lgt;DLim;Layx;)V	a	spawnParticlesAlongAxis
		p	0		axis
		p	1		world
		p	2		pos
		p	3		variance
		p	5		effect
		p	6		range
c	alt	net/minecraft/util/ProgressListener
	m	()V	a	stop
	m	(I)V	a	progressStagePercentage
		p	1		percentage
	m	(Lrm;)V	a	progressStartNoAbort
		p	1		title
	m	(Lrm;)V	b	progressStart
		p	1		title
	m	(Lrm;)V	c	progressStage
		p	1		task
c	alu	net/minecraft/util/RandomSource
	m	()Lalu;	a	create
	m	(DD)D	a	triangle
		p	1		mode
		p	3		deviation
	m	(I)I	a	nextInt
		p	1		bound
	m	(II)I	a	nextIntBetweenInclusive
		p	1		min
		p	2		max
	m	(J)Lalu;	a	create
		p	0		seed
	m	()Lalu;	b	createThreadSafe
	m	(I)V	b	consumeCount
		p	1		count
	m	(II)I	b	nextInt
		p	1		min
		p	2		max
	m	(J)V	b	setSeed
		p	1		seed
	m	()Lalu;	c	createNewThreadLocalInstance
	m	()Lalu;	d	fork
	m	()Ldah;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	D	a	GAUSSIAN_SPREAD_FACTOR
c	alv	net/minecraft/util/SignatureUpdater
	m	(Lalv$a;)V	update	update
		p	1		updater
c	alv$a	net/minecraft/util/SignatureUpdater$Output
	m	([B)V	update	update
		p	1		data
c	alw	net/minecraft/util/SignatureValidator
	m	(Lalv;[B)Z	a	lambda$static$0
		p	0		updatable
		p	1		signatureData
	m	(Lalv;[BLjava/security/Signature;)Z	a	verifySignature
		p	0		updatable
		p	1		signatureData
		p	2		signature
	m	(Lcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Lalw;	a	from
		p	0		servicesKeyInfo
	m	(Lcom/mojang/authlib/yggdrasil/ServicesKeyInfo;Lalv;[B)Z	a	lambda$from$3
	m	(Ljava/lang/String;Ljava/security/PublicKey;Lalv;[B)Z	a	lambda$from$2
		p	2		updatable
		p	3		signatureData
	m	(Ljava/security/PublicKey;Ljava/lang/String;)Lalw;	a	from
		p	0		publicKey
		p	1		algorithm
	m	([BLalv$a;)V	a	lambda$validate$1
		p	1		updater
	m	([B[B)Z	a	validate
		p	1		signedData
		p	2		signatureData
	m	(Lalv;[B)Z	validate	validate
		p	1		updatable
		p	2		signatureData
	f	Lalw;	a	NO_VALIDATION
	f	Lorg/slf4j/Logger;	b	LOGGER
c	alx	net/minecraft/util/Signer
	m	(Ljava/lang/String;Ljava/security/PrivateKey;Lalv;)[B	a	lambda$from$1
		p	2		updatable
	m	(Ljava/security/PrivateKey;Ljava/lang/String;)Lalx;	a	from
		p	0		privateKey
		p	1		algorithm
	m	([B)[B	a	sign
		p	1		data
	m	([BLalv$a;)V	a	lambda$sign$0
		p	1		updater
	m	(Lalv;)[B	sign	sign
		p	1		updatable
	f	Lorg/slf4j/Logger;	a	LOGGER
c	aly	net/minecraft/util/SimpleBitStorage
	m	(II)V	<init>	<init>
		p	1		elementBits
		p	2		size
	m	(II[I)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	(II[J)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(I)I	b	cellIndex
		p	1		index
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Lakn;	d	copy
	f	[I	a	MAGIC
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
	f	I	f	valuesPerLong
	f	I	g	divideMul
	f	I	h	divideAdd
	f	I	i	divideShift
c	aly$a	net/minecraft/util/SimpleBitStorage$InitializationException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	alz	net/minecraft/util/SmoothDouble
	m	()V	a	reset
	m	(DD)D	a	getNewDeltaValue
		p	1		original
		p	3		smoother
	f	D	a	targetValue
	f	D	b	remainingValue
	f	D	c	lastAmount
c	ama	net/minecraft/util/SortedArraySet
	m	(ILjava/util/Comparator;)V	<init>	<init>
		p	1		initialCapacity
		p	2		comparator
	m	()Lama;	a	create
	m	(I)Lama;	a	create
		p	0		initialCapacity
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addOrGet
		p	1		object
	m	(Ljava/lang/Object;I)V	a	addInternal
		p	1		object
		p	2		index
	m	(Ljava/util/Comparator;)Lama;	a	create
	m	(Ljava/util/Comparator;I)Lama;	a	create
		p	1		initialCapacity
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	castRawArray
		p	0		array
	m	()Ljava/lang/Object;	b	first
	m	(I)I	b	getInsertionPosition
		p	0		binarySearchResult
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	get
	m	()Ljava/lang/Object;	c	last
	m	(I)V	c	grow
		p	1		minCapacity
	m	(Ljava/lang/Object;)I	c	findIndex
		p	1		object
	m	(I)V	d	removeInternal
		p	1		index
	m	(I)Ljava/lang/Object;	e	getInternal
		p	1		index
	f	I	a	DEFAULT_INITIAL_CAPACITY
	f	Ljava/util/Comparator;	b	comparator
	f	[Ljava/lang/Object;	c	contents
	f	I	d	size
c	ama$a	net/minecraft/util/SortedArraySet$ArrayIterator
	f	Lama;	a	this$0
	f	I	b	index
	f	I	c	last
c	amb	net/minecraft/util/SpawnUtil
	m	(Lafo;ILgt$a;Lamb$a;)Z	a	moveToPossibleSpawnPosition
		p	0		world
		p	1		verticalRange
		p	2		pos
		p	3		requirements
	m	(Lbau;Lbbj;Lafo;Lgt;IIILamb$a;)Ljava/util/Optional;	a	trySpawnMob
		p	0		entityType
		p	1		reason
		p	2		world
		p	3		pos
		p	4		tries
		p	5		horizontalRange
		p	6		verticalRange
		p	7		requirements
c	amb$a	net/minecraft/util/SpawnUtil$Strategy
	m	(Lafo;Lgt;Lcur;Lgt;Lcur;)Z	a	lambda$static$1
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Lafo;Lgt;Lcur;Lgt;Lcur;)Z	b	lambda$static$0
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Lafo;Lgt;Lcur;Lgt;Lcur;)Z	canSpawnOn	canSpawnOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		abovePos
		p	5		aboveState
	f	Lamb$a;	a	LEGACY_IRON_GOLEM
	f	Lamb$a;	b	ON_TOP_OF_COLLIDER
c	amc	net/minecraft/util/StringDecomposer
	m	(Lald;Lrv;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$iterateFormatted$0
		p	1		style
		p	2		string
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterBrokenSurrogates
		p	0		text
	m	(Ljava/lang/String;ILrv;Lald;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		style
		p	3		visitor
	m	(Ljava/lang/String;ILrv;Lrv;Lald;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		startingStyle
		p	3		resetStyle
		p	4		visitor
	m	(Ljava/lang/String;Lrv;Lald;)Z	a	iterate
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILrv;I)Z	a	lambda$getPlainText$2
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Lrp;)Ljava/lang/String;	a	getPlainText
		p	0		text
	m	(Lrp;Lrv;Lald;)Z	a	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	m	(Lrv;Lald;IC)Z	a	feedChar
		p	0		style
		p	1		visitor
		p	2		index
		p	3		c
	m	(Ljava/lang/String;Lrv;Lald;)Z	b	iterateBackwards
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILrv;I)Z	b	lambda$filterBrokenSurrogates$1
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Ljava/lang/String;Lrv;Lald;)Z	c	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	f	C	a	REPLACEMENT_CHAR
	f	Ljava/util/Optional;	b	STOP_ITERATION
c	amd	net/minecraft/util/StringRepresentable
	m	(Ljava/lang/Enum;)Ljava/lang/Enum;	a	lambda$fromEnum$1
		p	0		enum_
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$fromEnum$0
		p	0		identifiable
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Enum;	a	lambda$fromEnum$2
		p	1		id
	m	(Ljava/util/function/Supplier;)Lamd$a;	a	fromEnum
		p	0		enumValues
	m	([Lamd;)Lcom/mojang/serialization/Keyable;	a	keys
		p	0		values
	m	([Ljava/lang/Enum;Ljava/lang/String;)Ljava/lang/Enum;	a	lambda$fromEnum$3
		p	1		id
	m	()Ljava/lang/String;	c	getSerializedName
	f	I	W	PRE_BUILT_MAP_THRESHOLD
c	amd$1	net/minecraft/util/StringRepresentable$1
	f	[Lamd;	a	val$values
c	amd$a	net/minecraft/util/StringRepresentable$EnumCodec
	m	([Ljava/lang/Enum;Ljava/util/function/Function;)V	<init>	<init>
		p	1		values
		p	2		idToIdentifiable
	m	(Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;)I	a	lambda$new$1
		p	0		enum_
	m	(Ljava/lang/String;)Ljava/lang/Enum;	a	byName
		p	1		id
	m	([Ljava/lang/Enum;I)Ljava/lang/Enum;	a	lambda$new$2
		p	1		ordinal
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$new$0
		p	0		identifiable
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Ljava/util/function/Function;	b	resolver
c	ame	net/minecraft/util/StringUtil
	m	(I)Ljava/lang/String;	a	formatTickDuration
		p	0		ticks
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripColor
		p	0		text
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	truncateStringIfNecessary
		p	0		text
		p	1		maxLength
		p	2		addEllipsis
	m	(Ljava/lang/String;)Z	b	isNullOrEmpty
		p	0		text
	m	(Ljava/lang/String;)I	c	lineCount
		p	0		text
	m	(Ljava/lang/String;)Z	d	endsWithNewLine
		p	0		text
	m	(Ljava/lang/String;)Ljava/lang/String;	e	trimChatMessage
		p	0		text
	f	Ljava/util/regex/Pattern;	a	STRIP_COLOR_PATTERN
	f	Ljava/util/regex/Pattern;	b	LINE_PATTERN
	f	Ljava/util/regex/Pattern;	c	LINE_END_PATTERN
c	amf	net/minecraft/util/TelemetryConstants
	f	Ljava/time/format/DateTimeFormatter;	a	TIMESTAMP_FORMATTER
	f	Ljava/lang/String;	b	EVENT_WORLD_LOADED
	f	Ljava/lang/String;	c	SERVER_MODDED
	f	Ljava/lang/String;	d	USER_ID
	f	Ljava/lang/String;	e	CLIENT_ID
	f	Ljava/lang/String;	f	DEVICE_SESSION_ID
	f	Ljava/lang/String;	g	WORLD_SESSION_ID
	f	Ljava/lang/String;	h	EVENT_TIMESTAMP_UTC
	f	Ljava/lang/String;	i	BUILD_DISPLAY_NAME
	f	Ljava/lang/String;	j	CLIENT_MODDED
	f	Ljava/lang/String;	k	SERVER_TYPE
	f	Ljava/lang/String;	l	BUILD_PLATFORM
	f	Ljava/lang/String;	m	PLATFORM
	f	Ljava/lang/String;	n	JAVA_VERSION
	f	Ljava/lang/String;	o	PLAYER_GAME_MODE
	f	I	p	GAME_MODE_SURVIVAL
	f	I	q	GAME_MODE_CREATIVE
	f	I	r	GAME_MODE_ADVENTURE
	f	I	s	GAME_MODE_SPECTATOR
	f	I	t	GAME_MODE_HARDCORE
	f	Ljava/lang/String;	u	SERVER_TYPE_REALM
	f	Ljava/lang/String;	v	SERVER_TYPE_LOCAL
	f	Ljava/lang/String;	w	SERVER_TYPE_OTHER
c	amg	net/minecraft/util/ThreadingDetector
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()V	a	checkAndLock
	m	(Ljava/lang/String;Ljava/lang/Thread;)Lz;	a	makeThreadingException
		p	0		message
		p	1		thread
	m	(Ljava/lang/Thread;)Ljava/lang/String;	a	stackTrace
	m	()V	b	checkAndUnlock
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	f	Ljava/util/concurrent/Semaphore;	c	lock
	f	Ljava/util/concurrent/locks/Lock;	d	stackTraceLock
	f	Ljava/lang/Thread;	e	threadThatFailedToAcquire
	f	Lz;	f	fullException
c	amh	net/minecraft/util/TimeUtil
	m	(II)Layx;	a	rangeOfSeconds
		p	0		min
		p	1		max
	f	J	a	NANOSECONDS_PER_SECOND
	f	J	b	NANOSECONDS_PER_MILLISECOND
c	ami	net/minecraft/util/ToFloatFunction
	m	(F)F	a	lambda$static$0
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lami;	a	createUnlimited
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	(Ljava/util/function/Function;)Lami;	a	comap
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lami;	a	IDENTITY
c	ami$1	net/minecraft/util/ToFloatFunction$1
	m	(Ljava/lang/Float;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	b	val$function
c	ami$2	net/minecraft/util/ToFloatFunction$2
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lami;	b	val$outer
	f	Ljava/util/function/Function;	c	val$function
	f	Lami;	d	this$0
c	amj	net/minecraft/util/Tuple
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		left
		p	2		right
	m	()Ljava/lang/Object;	a	getA
	m	(Ljava/lang/Object;)V	a	setA
		p	1		left
	m	()Ljava/lang/Object;	b	getB
	m	(Ljava/lang/Object;)V	b	setB
		p	1		right
c	amk	net/minecraft/util/Unit
	m	()[Lamk;	a	$values
	f	Lamk;	a	INSTANCE
	f	[Lamk;	b	$VALUES
c	aml	net/minecraft/util/VisibleForDebug
c	amm	net/minecraft/util/ZeroBitStorage
	m	(I)V	<init>	<init>
		p	1		size
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Lakn;	d	copy
	f	[J	a	RAW
	f	I	b	size
c	amn	net/minecraft/util/datafix/DataFixTypes
	m	(Ljava/lang/String;ILcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	3		typeReference
	m	()Lcom/mojang/datafixers/DSL$TypeReference;	a	getType
	m	()[Lamn;	b	$values
	f	Lamn;	a	LEVEL
	f	Lamn;	b	PLAYER
	f	Lamn;	c	CHUNK
	f	Lamn;	d	HOTBAR
	f	Lamn;	e	OPTIONS
	f	Lamn;	f	STRUCTURE
	f	Lamn;	g	STATS
	f	Lamn;	h	SAVED_DATA
	f	Lamn;	i	ADVANCEMENTS
	f	Lamn;	j	POI_CHUNK
	f	Lamn;	k	WORLD_GEN_SETTINGS
	f	Lamn;	l	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	type
	f	[Lamn;	n	$VALUES
c	amo	net/minecraft/util/datafix/DataFixerOptimizationOption
	m	()[Lamo;	a	$values
	f	Lamo;	a	UNINITIALIZED_UNOPTIMIZED
	f	Lamo;	b	UNINITIALIZED_OPTIMIZED
	f	Lamo;	c	INITIALIZED_UNOPTIMIZED
	f	Lamo;	d	INITIALIZED_OPTIMIZED
	f	[Lamo;	e	$VALUES
c	amp	net/minecraft/util/datafix/DataFixers
	m	()Lcom/mojang/datafixers/DataFixer;	a	getDataFixer
	m	(Lcom/google/common/collect/ImmutableMap;Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$4
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	addFixers
		p	0		builder
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$addFixers$5
		p	0		frogVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$2
		p	0		id
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	createRenamer
		p	0		old
		p	1		current
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$8
		p	2		string
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	a	createRenamer
		p	0		replacements
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$7
		p	1		string
	m	()Lcom/mojang/datafixers/DataFixer;	b	createFixerUpper
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	b	lambda$addFixers$3
		p	0		catVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$1
		p	0		id
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$6
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$0
		p	0		id
	f	I	a	BLENDING_VERSION
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/function/BiFunction;	c	SAME
	f	Ljava/util/function/BiFunction;	d	SAME_NAMESPACED
	f	Lcom/mojang/datafixers/DataFixer;	e	dataFixer
c	amp$1	net/minecraft/util/datafix/DataFixers$1
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	amp$2	net/minecraft/util/datafix/DataFixers$2
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	amp$3	net/minecraft/util/datafix/DataFixers$3
	f	[I	a	$SwitchMap$net$minecraft$util$datafix$DataFixerOptimizationOption
c	amq	net/minecraft/util/datafix/PackedBitStorage
	m	(II)V	<init>	<init>
		p	1		unitSize
		p	2		length
	m	(II[J)V	<init>	<init>
		p	1		unitSize
		p	2		length
		p	3		array
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	()I	b	getBits
	f	I	a	BIT_TO_LONG_SHIFT
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
c	amr	net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
		p	1		typed
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		typed
		p	2		choiceName
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updatePickup
		p	0		arrowData
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
		p	1		t
c	ams	net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		schema
		p	2		name
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$processSectionRecords$4
		p	2		dynamics
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
		p	1		ops
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	processSection
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	processSectionRecords
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$3
		p	1		sections
	f	Ljava/lang/String;	a	name
c	amt	net/minecraft/util/datafix/fixes/AbstractUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		typeReference
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
		p	1		typed
		p	2		name
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	createUUIDFromML
	m	(Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional;	a	createUUIDTag
		p	1		mostBits
		p	3		leastBits
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$createUUIDFromString$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	createUUIDFromString
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	replaceUUIDString
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDMLTag$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDLeastMost$3
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	b	replaceUUIDMLTag
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$replaceUUIDString$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	c	replaceUUIDLeastMost
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	d	createUUIDFromLongs
		p	1		mostBitsKey
		p	2		leastBitsKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	typeReference
c	amu	net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Z)V	<init>	<init>
		p	1		schema
		p	2		typeReference
		p	3		key
		p	4		value
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Z	b	flagValue
	f	Ljava/lang/String;	c	flagKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	typeReference
c	amv	net/minecraft/util/datafix/fixes/AddNewChoices
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		types
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		name
		p	2		inputChoiceType
		p	3		outputChoiceType
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	amw	net/minecraft/util/datafix/fixes/AdvancementsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RENAMES
c	amx	net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	amy	net/minecraft/util/datafix/fixes/AttributesRename
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixName
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fixName$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEntity$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixEntity
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEntity$9
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixItemStackTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEntity$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixItemStackTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackTag$2
	f	Ljava/util/Map;	a	RENAMES
c	amz	net/minecraft/util/datafix/fixes/BedItemColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	ana	net/minecraft/util/datafix/fixes/BiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	f	Ljava/util/Map;	a	BIOMES
c	anb	net/minecraft/util/datafix/fixes/BitStorageAlignFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(II[J)[J	a	addPadding
		p	0		maxValue
		p	1		elementBits
		p	2		elements
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$8
		p	1		sectionDynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	5		chunk
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateSections
		p	0		levelSectionsFinder
		p	1		sectionFinder
		p	2		paletteFinder
		p	3		level
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$10
		p	2		levelSection
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$9
		p	1		section
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateHeightmaps
		p	1		fixedLevel
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$5
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$7
		p	2		statesDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateHeightmaps$3
		p	1		heightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$4
		p	1		heightmapsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBitStorage
		p	0		sectionDynamic
		p	1		statesDynamic
		p	2		maxValue
		p	3		elementBits
	m	(Ljava/util/List;)Ljava/lang/Integer;	a	lambda$updateSections$6
		p	0		palette
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
		p	4		level
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateHeightmaps$2
		p	1		heightmapDynamic
	f	I	a	BIT_TO_LONG_SHIFT
	f	I	b	SECTION_WIDTH
	f	I	c	SECTION_HEIGHT
	f	I	d	SECTION_SIZE
	f	I	e	HEIGHTMAP_BITS
	f	I	f	HEIGHTMAP_SIZE
c	anc	net/minecraft/util/datafix/fixes/BlendingDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBlendingData
		p	0		dynamic
		p	1		height
		p	2		minY
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	STATUSES_TO_SKIP_BLENDING
c	and	net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixTag$0
c	ane	net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	()Ljava/lang/IllegalStateException;	b	lambda$fix$0
c	anf	net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	ang	net/minecraft/util/datafix/fixes/BlockEntityIdFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	anh	net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	ani	net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	anj	net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	ank	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateLine
		p	2		lineName
	f	Lcom/google/gson/Gson;	a	GSON
c	ank$1	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lrt;	a	deserialize
c	anl	net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSkull$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSkull
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateConduit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkull$1
c	anm	net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	ann	net/minecraft/util/datafix/fixes/BlockRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		oldSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/lang/String;	a	name
c	ann$1	net/minecraft/util/datafix/fixes/BlockRenameFix$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/util/function/Function;	a	val$fixBlock
c	ano	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/DSL$TypeReference;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	b	create
		p	0		oldSchema
		p	1		name
		p	2		rename
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
c	ano$1	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/util/function/Function;	a	val$fixBlock
c	anp	net/minecraft/util/datafix/fixes/BlockStateData
	m	()V	a	bootstrap0
	m	(I)Ljava/lang/String;	a	upgradeBlock
		p	0		stateId
	m	(ILjava/lang/String;[Ljava/lang/String;)V	a	register
		p	0		oldId
		p	1		newStateStr
		p	2		oldStateStrings
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeBlock
		p	0		oldBlockName
	m	()V	b	bootstrap1
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getTag
		p	0		stateId
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	b	lambda$static$0
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	parse
		p	0		stateStr
	m	()V	c	bootstrap2
	m	()V	d	bootstrap3
	m	()V	e	bootstrap4
	m	()V	f	bootstrap5
	m	()V	g	bootstrap6
	m	()V	h	bootstrap7
	m	()V	i	bootstrap8
	m	()V	j	bootstrap9
	m	()V	k	bootstrap10
	m	()V	l	bootstrap11
	m	()V	m	bootstrap12
	m	()V	n	bootstrap13
	m	()V	o	bootstrap14
	m	()V	p	bootstrap15
	m	()V	q	finalizeMaps
	f	Ljava/lang/String;	a	FILTER_ME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	[Lcom/mojang/serialization/Dynamic;	c	MAP
	f	[Lcom/mojang/serialization/Dynamic;	d	BLOCK_DEFAULTS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	ID_BY_OLD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	f	ID_BY_OLD_NAME
c	anq	net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	anr	net/minecraft/util/datafix/fixes/CatTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	ans	net/minecraft/util/datafix/fixes/CauldronRenameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	ant	net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	anu	net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		level
		p	2		blockEntities
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
c	anv	net/minecraft/util/datafix/fixes/ChunkBiomeFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	anw	net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	anx	net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(I)I	a	ceillog2
		p	0		value
	m	(IILcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCarvingMasks$21
	m	(J)J	a	lambda$getFixedHeightmap$23
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	shiftUpgradeData
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateCarvingMasks
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	makePalettedContainer
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic;	a	padPaletteEntries
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic;	a	makeBiomeContainer
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeBiomeContainer$24
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	addPaddingEntries
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	predictChunkStatusBeforeSurface
	m	(Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic;	a	getBiomeContainers
	m	(Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$shiftUpgradeData$18
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)V	a	lambda$shiftUpgradeData$17
	m	(Ljava/util/Map;Ljava/util/Map;)V	a	lambda$shiftUpgradeData$19
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$predictChunkStatusBeforeSurface$12
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/IntSet;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$makeRule$4
	m	(ZLjava/util/Set;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
	m	([II)I	a	getOldBiome
	m	([III)I	a	lambda$getBiomeContainers$14
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateHeightmaps
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	makeOptimizedPalettedContainer
	m	([II)I	b	lambda$getBiomeContainers$16
	m	([III)I	b	lambda$getBiomeContainers$13
	m	()Laoa$a;	c	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	getFixedHeightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	([II)I	c	lambda$getBiomeContainers$15
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	makePalettedContainer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateHeightmaps$22
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$shiftUpgradeData$20
	m	(Lcom/mojang/serialization/Dynamic;)Laoa$a;	g	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	h	lambda$makeRule$2
	f	Ljava/lang/String;	a	DATAFIXER_CONTEXT_TAG
	f	I	b	BLOCKS_PER_SECTION
	f	Ljava/lang/String;	c	DEFAULT_BIOME
	f	Ljava/lang/String;	d	NAME
	f	I	e	OLD_SECTION_COUNT
	f	I	f	NEW_SECTION_COUNT
	f	I	g	NEW_MIN_SECTION_Y
	f	I	h	LONGS_PER_SECTION
	f	I	i	HEIGHTMAP_BITS
	f	J	j	HEIGHTMAP_MASK
	f	I	k	HEIGHTMAP_OFFSET
	f	[Ljava/lang/String;	l	HEIGHTMAP_TYPES
	f	Ljava/util/Set;	m	STATUS_IS_OR_AFTER_SURFACE
	f	Ljava/util/Set;	n	STATUS_IS_OR_AFTER_NOISE
	f	Ljava/util/Set;	o	BLOCKS_BEFORE_FEATURE_STATUS
	f	I	p	BIOME_CONTAINER_LAYER_SIZE
	f	I	q	BIOME_CONTAINER_SIZE
	f	I	r	BIOME_CONTAINER_TOP_LAYER_OFFSET
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	s	BIOMES_BY_ID
c	any	net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	anz	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	m	(Lakp;Lcom/mojang/serialization/Dynamic;)I	a	idFor
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$4
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$6
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	addBeds
		p	0		out
		p	2		color
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	mapSkull
		p	0		out
		p	2		mob
		p	3		block
	m	(Ljava/util/Map;Ljava/lang/String;I)V	a	mapDoor
		p	0		out
		p	1		name
	m	(ZZZZ)I	a	getSideMask
		p	0		west
		p	1		east
		p	2		north
		p	3		south
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	(Ljava/util/HashMap;)V	b	lambda$static$5
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	addBanners
		p	0		out
		p	2		color
	m	(Ljava/util/HashMap;)V	c	lambda$static$3
		p	0		map
	m	(Ljava/util/HashMap;)V	d	lambda$static$2
		p	0		map
	m	(Ljava/util/HashMap;)V	e	lambda$static$1
		p	0		map
	m	(Ljava/util/HashMap;)V	f	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	A	BED_BLOCK_MAP
	f	Ljava/util/Map;	B	BANNER_BLOCK_MAP
	f	Lcom/mojang/serialization/Dynamic;	C	AIR
	f	I	D	SIZE
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/util/BitSet;	j	VIRTUAL
	f	Ljava/util/BitSet;	k	FIX
	f	Lcom/mojang/serialization/Dynamic;	l	PUMPKIN
	f	Lcom/mojang/serialization/Dynamic;	m	SNOWY_PODZOL
	f	Lcom/mojang/serialization/Dynamic;	n	SNOWY_GRASS
	f	Lcom/mojang/serialization/Dynamic;	o	SNOWY_MYCELIUM
	f	Lcom/mojang/serialization/Dynamic;	p	UPPER_SUNFLOWER
	f	Lcom/mojang/serialization/Dynamic;	q	UPPER_LILAC
	f	Lcom/mojang/serialization/Dynamic;	r	UPPER_TALL_GRASS
	f	Lcom/mojang/serialization/Dynamic;	s	UPPER_LARGE_FERN
	f	Lcom/mojang/serialization/Dynamic;	t	UPPER_ROSE_BUSH
	f	Lcom/mojang/serialization/Dynamic;	u	UPPER_PEONY
	f	Ljava/util/Map;	v	FLOWER_POT_MAP
	f	Ljava/util/Map;	w	SKULL_MAP
	f	Ljava/util/Map;	x	DOOR_MAP
	f	Ljava/util/Map;	y	NOTE_BLOCK_MAP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	z	DYE_COLOR_MAP
c	anz$1	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	f	[I	a	$SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
c	anz$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	m	(I)Z	a	isFirst
		p	1		index
	m	(III)I	a	get
		p	1		x
		p	2		y
	m	(I)I	b	getPosition
		p	1		index
	f	I	a	SIZE
	f	I	b	NIBBLE_SIZE
	f	[B	c	data
c	anz$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	m	(Ljava/lang/String;ILanz$b$b;Lanz$b$a;)V	<init>	<init>
		p	3		direction
	m	()Lanz$b$b;	a	getAxisDirection
	m	()Lanz$b$a;	b	getAxis
	m	()[Lanz$b;	c	$values
	f	Lanz$b;	a	DOWN
	f	Lanz$b;	b	UP
	f	Lanz$b;	c	NORTH
	f	Lanz$b;	d	SOUTH
	f	Lanz$b;	e	WEST
	f	Lanz$b;	f	EAST
	f	Lanz$b$a;	g	axis
	f	Lanz$b$b;	h	axisDirection
	f	[Lanz$b;	i	$VALUES
c	anz$b$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	m	()[Lanz$b$a;	a	$values
	f	Lanz$b$a;	a	X
	f	Lanz$b$a;	b	Y
	f	Lanz$b$a;	c	Z
	f	[Lanz$b$a;	d	$VALUES
c	anz$b$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	m	()I	a	getStep
	m	()[Lanz$b$b;	b	$values
	f	Lanz$b$b;	a	POSITIVE
	f	Lanz$b$b;	b	NEGATIVE
	f	I	c	step
	f	[Lanz$b$b;	d	$VALUES
c	anz$c	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
		p	1		index
	m	(II)V	a	addFix
		p	1		section
		p	2		index
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
		p	1		pos
	m	(Ljava/nio/ByteBuffer;)Lanz$a;	a	lambda$upgrade$1
	m	(I)I	b	upgrade
		p	1		sidesToUpgrade
	m	(Ljava/nio/ByteBuffer;)Lanz$a;	b	lambda$upgrade$0
	f	I	a	y
	f	Lakp;	b	palette
	f	Ljava/util/List;	c	listTag
	f	Lcom/mojang/serialization/Dynamic;	d	section
	f	Z	e	hasData
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	toFix
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	update
	f	Ljava/util/Set;	h	seen
	f	[I	i	buffer
c	anz$d	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
	m	(ILanz$b;)I	a	relative
		p	1		direction
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
	m	(Ljava/util/stream/Stream;)V	a	lambda$new$3
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getBlockEntity
	m	(Lcom/mojang/serialization/Dynamic;)V	b	lambda$new$0
	m	(Ljava/util/stream/Stream;)V	b	lambda$new$1
	m	(I)Lcom/mojang/serialization/Dynamic;	c	removeBlockEntity
	m	(I)Lanz$c;	d	getSection
	f	I	a	sides
	f	[Lanz$c;	b	sections
	f	Lcom/mojang/serialization/Dynamic;	c	level
	f	I	d	x
	f	I	e	z
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
c	aoa	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
	m	(I)Z	a	lambda$makeTickList$14
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$12
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/Typed;)Ljava/util/List;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Laoa$a;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getBlock
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$10
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	makeTickList
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	createTick
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIILjava/util/function/Function;I)Lcom/mojang/serialization/Dynamic;	a	lambda$makeTickList$15
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;ILcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$5
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$8
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	b	getLiquid
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)I	c	lambda$makeTickList$13
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	d	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$1
	f	I	a	SECTION_WIDTH
	f	Lcom/google/common/collect/ImmutableSet;	b	ALWAYS_WATERLOGGED
c	aoa$a	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	m	()Ljava/util/List;	a	palette
	m	(III)Lcom/mojang/serialization/Dynamic;	a	get
	m	()[J	b	data
	m	(III)I	b	getIndex
	f	J	a	SIZE_BITS
	f	Ljava/util/List;	b	palette
	f	[J	c	data
	f	I	d	bits
	f	J	e	mask
	f	I	f	valuesPerLong
c	aob	net/minecraft/util/datafix/fixes/ChunkRenamesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	appendChunkName
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainders
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	renameField
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	renameFieldHelper
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainders$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainders$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	aoc	net/minecraft/util/datafix/fixes/ChunkStatusFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aod	net/minecraft/util/datafix/fixes/ChunkStatusFix2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	Ljava/util/Map;	a	RENAMES_AND_DOWNGRADES
c	aoe	net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	aof	net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	m	(I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList;	a	lambda$repackTicks$3
	m	(III)S	a	packOffsetCoordinates
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChunkData
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$2
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$6
	m	(Lcom/mojang/serialization/Dynamic;Ljava/nio/ByteBuffer;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$7
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V	a	lambda$repackTicks$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	repackBiomes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	repackTicks
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	I	a	NUM_SECTIONS
c	aog	net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	aoh	net/minecraft/util/datafix/fixes/CriteriaRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		schema
		p	2		description
		p	3		advancementId
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		typed
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixAdvancements$3
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixAdvancements
		p	1		advancements
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAdvancements$1
		p	2		keyString
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixAdvancements$5
		p	1		advancement
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixAdvancements$4
		p	1		criteria
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixAdvancements$2
		p	1		key
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	advancementId
	f	Ljava/util/function/UnaryOperator;	c	conversions
c	aoi	net/minecraft/util/datafix/fixes/DyeItemRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	aoj	net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aok	net/minecraft/util/datafix/fixes/EntityBlockStateFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFallingBlock
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	updateBlockToBlockState
		p	2		oldIdKey
		p	3		oldDataKey
		p	4		newStateKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	2		entityId
		p	3		function
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$7
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$updateFallingBlock$10
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$9
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateBlockToBlockState$12
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateBlockToBlockState$11
	m	(Ljava/lang/String;)I	a	getBlockId
		p	0		blockId
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$4
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$updateFallingBlock$6
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$1
	f	Ljava/util/Map;	a	MAP
c	aol	net/minecraft/util/datafix/fixes/EntityCatSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	aom	net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_EGG_IDS
c	aon	net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTagCustomName
c	aoo	net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	aop	net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$1
c	aoq	net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	aor	net/minecraft/util/datafix/fixes/EntityHealthFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	Ljava/util/Set;	a	ENTITIES
c	aos	net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	aot	net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
c	aou	net/minecraft/util/datafix/fixes/EntityIdFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	aov	net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(B)B	a	direction2dTo3d
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aow	net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$0
	f	Ljava/util/List;	a	MINECART_BY_ID
c	aox	net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	renameField
		p	1		dynamic
		p	2		oldKey
		p	3		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$0
		p	3		value
c	aoy	net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic;	a	doFix
		p	2		isPainting
		p	3		isItemFrame
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	[[I	a	DIRECTIONS
c	aoz	net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
c	apa	net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JJ)[I	a	createUUIDArray
		p	0		most
		p	2		least
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateOwnerArrow
	m	(Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic;	a	setUUID
		p	2		most
		p	4		least
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateOwnerLlamaSpit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateItemPotion
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateOwnerThrowable
c	apb	net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	apc	net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	apd	net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	m	(ILjava/util/List;)Ljava/lang/Boolean;	a	lambda$isZeroList$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/OptionalDynamic;I)Z	a	isZeroList
	m	(Ljava/lang/Float;)Z	a	lambda$isZeroList$2
	f	Lcom/mojang/serialization/Codec;	a	FLOAT_LIST_CODEC
c	ape	net/minecraft/util/datafix/fixes/EntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	getEntity
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
	f	Ljava/lang/String;	a	name
c	apf	net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		inputSchema
		p	2		outputSchema
		p	3		inputEntityTreeType
		p	4		outputEntityTreeType
		p	5		inputEntityType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either;	a	lambda$cap$2
	m	()Ljava/lang/IllegalStateException;	b	lambda$cap$3
	m	()Ljava/lang/IllegalStateException;	c	lambda$cap$1
	m	()Ljava/lang/IllegalStateException;	d	lambda$cap$0
c	apg	net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aph	net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double;	b	lambda$fixTag$0
c	api	net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	apj	net/minecraft/util/datafix/fixes/EntityStringUuidFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	apk	net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_BLOCKS
	f	Ljava/util/Map;	c	RENAMED_ITEMS
	f	Ljava/lang/String;	d	MINECRAFT_BRED
c	apl	net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
c	apm	net/minecraft/util/datafix/fixes/EntityUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateProjectile$14
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateLivingEntity
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateLivingEntity$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntityUUID
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateLivingEntity$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updatePiglin
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateFox$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	updateEvokerFangs
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateFox$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateZombieVillager
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	updateAreaEffectCloud
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	updateShulkerBullet
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	updateItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	updateFox
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	updateHurtBy
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	updateAnimalOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	m	updateAnimal
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	updateMob
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	updateProjectile
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$updateLivingEntity$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	q	lambda$updateLivingEntity$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$updateMob$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	s	lambda$updateFox$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	t	lambda$updateFox$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	u	lambda$updatePiglin$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	v	lambda$updatePiglin$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	w	lambda$updatePiglin$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	x	lambda$updatePiglin$1
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	ABSTRACT_HORSES
	f	Ljava/util/Set;	d	TAMEABLE_ANIMALS
	f	Ljava/util/Set;	e	ANIMALS
	f	Ljava/util/Set;	f	MOBS
	f	Ljava/util/Set;	g	LIVING_ENTITIES
	f	Ljava/util/Set;	h	PROJECTILES
c	apn	net/minecraft/util/datafix/fixes/EntityVariantFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/IntFunction;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	4		entityId
		p	5		variantKey
		p	6		variantIntToId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Number;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	updateAndRename
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$1
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$4
	f	Ljava/lang/String;	a	fieldName
	f	Ljava/util/function/IntFunction;	b	idConversions
c	apo	net/minecraft/util/datafix/fixes/EntityWolfColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	app	net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	apq	net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)I	a	getVillagerProfession
		p	1		type
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	I	a	PROFESSION_MAX
	f	Lalu;	b	RANDOM
c	apr	net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	aps	net/minecraft/util/datafix/fixes/FilteredBooksFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	apt	net/minecraft/util/datafix/fixes/FilteredSignsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		blockEntity
c	apu	net/minecraft/util/datafix/fixes/ForcePoiRebuild
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$2
c	apv	net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFurnaceContents
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V	a	lambda$updateFurnaceContents$5
	m	(Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V	a	lambda$updateFurnaceContents$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$cap$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$cap$0
c	apw	net/minecraft/util/datafix/fixes/GoatHornIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
	f	[Ljava/lang/String;	a	INSTRUMENTS
c	apx	net/minecraft/util/datafix/fixes/GossipUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
c	apy	net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	apz	net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$removeIglooPieces$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	removeIglooPieces
	m	(Ljava/util/stream/Stream;)Ljava/lang/Boolean;	b	lambda$fixTag$0
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isIglooPiece
	m	(Lcom/mojang/serialization/Dynamic;)Z	d	lambda$removeIglooPieces$1
c	aqa	net/minecraft/util/datafix/fixes/ItemBannerColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aqb	net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aqc	net/minecraft/util/datafix/fixes/ItemIdFix
	m	(I)Ljava/lang/String;	a	getItem
		p	0		id
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ITEM_NAMES
c	aqd	net/minecraft/util/datafix/fixes/ItemLoreFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixLoreList$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixLoreEntry
		p	0		string
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixLoreList
		p	0		nbt
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	aqe	net/minecraft/util/datafix/fixes/ItemPotionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	([Ljava/lang/String;)V	a	lambda$static$0
	f	Ljava/lang/String;	a	DEFAULT
	f	I	b	SPLASH
	f	[Ljava/lang/String;	c	POTIONS
c	aqf	net/minecraft/util/datafix/fixes/ItemRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/lang/String;	a	name
c	aqf$1	net/minecraft/util/datafix/fixes/ItemRenameFix$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/util/function/Function;	a	val$fixItem
c	aqg	net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	[Ljava/lang/String;	a	NAMES_BY_COLOR
c	aqh	net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$4
	m	([Ljava/lang/String;)V	a	lambda$static$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	c	lambda$makeRule$1
	f	[Ljava/lang/String;	a	ID_TO_ENTITY
c	aqi	net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$3
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	MAP
c	aqj	net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aqk	net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
c	aql	net/minecraft/util/datafix/fixes/ItemStackTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		itemIdPredicate
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	3		typed
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		nbt
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Predicate;	b	idFilter
c	aqm	net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	updateItem
		p	0		originalName
		p	1		damage
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
	f	Ljava/util/Set;	b	IDS
	f	Ljava/util/Set;	c	DAMAGE_IDS
c	aqn	net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateAttributeModifiers$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateAttributeModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSkullOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkullOwner$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateAttributeModifiers$4
c	aqo	net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aqp	net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$2
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	aqq	net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aqr	net/minecraft/util/datafix/fixes/JigsawRotationFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
	f	Ljava/util/Map;	a	RENAMES
c	aqs	net/minecraft/util/datafix/fixes/LeavesFix
	m	(I)I	a	getX
	m	(III)I	a	getIndex
	m	(Laqs$a;)Laqs$a;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Laqs$a;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(ZZZZ)I	a	getSideMask
	m	([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$5
	m	(I)I	b	getY
	m	(I)I	c	getZ
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	[[I	i	DIRECTIONS
	f	I	j	DECAY_DISTANCE
	f	I	k	SIZE_BITS
	f	I	l	SIZE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	m	LEAVES
	f	Ljava/util/Set;	n	LOGS
c	aqs$a	net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	m	()Z	a	skippable
	m	(I)Z	a	isLog
	m	(III)V	a	setDistance
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;	a	makeLeafTag
	m	(I)Z	b	isLeaf
	m	(I)I	d	getDistance
	f	Ljava/lang/String;	h	PERSISTENT
	f	Ljava/lang/String;	i	DECAYABLE
	f	Ljava/lang/String;	j	DISTANCE
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	k	leaveIds
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	l	logIds
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	m	stateToIdMap
c	aqs$b	net/minecraft/util/datafix/fixes/LeavesFix$Section
	m	()Z	a	skippable
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	write
	m	(Lcom/mojang/serialization/Dynamic;)V	a	readStorage
	m	(Ljava/lang/String;ZI)I	a	getStateId
		p	1		leafBlockName
		p	2		persistent
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	()Z	b	isSkippable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	lambda$write$2
	m	()I	c	getIndex
	m	(I)I	c	getBlock
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$write$1
	f	Ljava/lang/String;	a	BLOCK_STATES_TAG
	f	Ljava/lang/String;	b	NAME_TAG
	f	Ljava/lang/String;	c	PROPERTIES_TAG
	f	Lcom/mojang/datafixers/OpticFinder;	d	paletteFinder
	f	Ljava/util/List;	e	palette
	f	I	f	index
	f	Lamq;	g	storage
	f	Lcom/mojang/datafixers/types/Type;	h	blockStateType
c	aqt	net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$convert$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$convert$6
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	getLayerInfoFromString
		p	0		layer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	convert
		p	0		generatorOptions
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	b	lambda$convert$5
	m	(Ljava/lang/String;)Ljava/util/List;	b	getLayersInfoFromString
		p	0		layers
	f	Ljava/util/Map;	a	MAP
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
c	aqu	net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	m	(Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String;	a	lambda$fixString$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixString
		p	1		generatorOptions
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
	f	Ljava/lang/String;	a	DEFAULT
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Lcom/google/common/base/Splitter;	d	LAYER_SPLITTER
	f	Lcom/google/common/base/Splitter;	e	OLD_AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	f	AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	g	BLOCK_SPLITTER
c	aqv	net/minecraft/util/datafix/fixes/LevelUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCustomBossEvents$11
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateCustomBossEvents$9
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateDragonFight$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateWanderingTrader
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateDragonFight
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateCustomBossEvents
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateCustomBossEvents$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$updateCustomBossEvents$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$updateCustomBossEvents$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$updateCustomBossEvents$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$updateDragonFight$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	lambda$updateDragonFight$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	lambda$updateDragonFight$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	aqw	net/minecraft/util/datafix/fixes/MapIdFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aqx	net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	updateMemoryEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateBrain
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateMemories
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	wrapMemoryValue
c	aqy	net/minecraft/util/datafix/fixes/MissingDimensionFix
	m	(Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type;	a	flatType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	recreateSettings
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	fields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	optionalFields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	b	optionalFields
c	aqz	net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
c	ara	net/minecraft/util/datafix/fixes/NamedEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
c	arb	net/minecraft/util/datafix/fixes/NewVillageFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$9
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$13
	m	(Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$12
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$cap$1
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$6
c	arc	net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	ard	net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)Ldwu$a;	a	getRenderType
		p	0		oldName
c	are	net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	arf	net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	arg	net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)D	a	calculateBackground
		p	1		chatOpacity
c	arh	net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	ari	net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	KEY_UNKNOWN
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	MAP
c	arj	net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
c	ark	net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	arl	net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		oldName
		p	5		newName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	fixName
	f	Ljava/lang/String;	b	fieldFrom
	f	Ljava/lang/String;	c	fieldTo
c	arm	net/minecraft/util/datafix/fixes/OverreachingTickFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(IILcom/mojang/serialization/Dynamic;)Z	a	lambda$extractOverreachingTicks$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	extractOverreachingTicks
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	arn	net/minecraft/util/datafix/fixes/PlayerUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
c	aro	net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		removePredicate
	m	(Lcom/mojang/serialization/Dynamic;)Z	a	shouldKeepRecord
		p	1		dynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	f	Ljava/util/function/Predicate;	a	typesToKeep
c	arp	net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		renamer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$processRecords$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$processRecords$0
	f	Ljava/util/function/Function;	a	renamer
c	arq	net/minecraft/util/datafix/fixes/RecipesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RECIPES
c	arr	net/minecraft/util/datafix/fixes/RecipesRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		renamer
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	ars	net/minecraft/util/datafix/fixes/RecipesRenameningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RECIPES
c	art	net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateRedstoneConnections
	m	(Ljava/lang/String;)Z	a	isConnected
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateRedstoneConnections$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$3
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateRedstoneConnections$2
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateRedstoneConnections$1
c	aru	net/minecraft/util/datafix/fixes/References
	m	()Ljava/lang/String;	A	lambda$static$0
	m	()Ljava/lang/String;	a	lambda$static$26
	m	()Ljava/lang/String;	b	lambda$static$25
	m	()Ljava/lang/String;	c	lambda$static$24
	m	()Ljava/lang/String;	d	lambda$static$23
	m	()Ljava/lang/String;	e	lambda$static$22
	m	()Ljava/lang/String;	f	lambda$static$21
	m	()Ljava/lang/String;	g	lambda$static$20
	m	()Ljava/lang/String;	h	lambda$static$19
	m	()Ljava/lang/String;	i	lambda$static$18
	m	()Ljava/lang/String;	j	lambda$static$17
	m	()Ljava/lang/String;	k	lambda$static$16
	m	()Ljava/lang/String;	l	lambda$static$15
	m	()Ljava/lang/String;	m	lambda$static$14
	m	()Ljava/lang/String;	n	lambda$static$13
	m	()Ljava/lang/String;	o	lambda$static$12
	m	()Ljava/lang/String;	p	lambda$static$11
	m	()Ljava/lang/String;	q	lambda$static$10
	m	()Ljava/lang/String;	r	lambda$static$9
	m	()Ljava/lang/String;	s	lambda$static$8
	m	()Ljava/lang/String;	t	lambda$static$7
	m	()Ljava/lang/String;	u	lambda$static$6
	m	()Ljava/lang/String;	v	lambda$static$5
	m	()Ljava/lang/String;	w	lambda$static$4
	m	()Ljava/lang/String;	x	lambda$static$3
	m	()Ljava/lang/String;	y	lambda$static$2
	m	()Ljava/lang/String;	z	lambda$static$1
	f	Lcom/mojang/datafixers/DSL$TypeReference;	A	WORLD_GEN_SETTINGS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	PLAYER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	HOTBAR
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	OPTIONS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	SAVED_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	POI_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	BLOCK_ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	ITEM_STACK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	ENTITY_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	ENTITY_TREE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	BLOCK_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	ITEM_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	GAME_EVENT_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	y	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	z	BIOME
c	arv	net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
		p	0		villagerData
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixValue$0
c	arw	net/minecraft/util/datafix/fixes/RenameBiomesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		changes
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	biomes
c	arx	net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	ary	net/minecraft/util/datafix/fixes/RenamedCoralFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	arz	net/minecraft/util/datafix/fixes/ReorganizePoi
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
c	asa	net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixFeature
		p	0		feature
	m	(Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	get
		p	0		root
		p	1		pathParts
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	getReplacement
		p	0		type
		p	1		name
		p	2		stateProviderType
		p	3		stateProviderStateName
		p	4		stateProviderFirstEntryName
		p	5		foliagePlacerType
		p	6		leavesProviderStateName
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixTag
		p	0		structureFeature
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateChildren$1
		p	0		child
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
		p	0		poolElement
	f	Ljava/util/regex/Pattern;	a	INDEX_PATTERN
	f	Ljava/util/Set;	b	PIECE_TYPE
	f	Ljava/util/Set;	c	FEATURES
c	asb	net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	asc	net/minecraft/util/datafix/fixes/SavedDataVillageCropFix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateCrop
		p	1		cropId
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
		p	0		villageChildren
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateChildren
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSingleField
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateDoubleField
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
c	asd	net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	ase	net/minecraft/util/datafix/fixes/SimpleRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		schema
		p	3		name
		p	4		renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/util/Map;)V	<init>	<init>
		p	1		schema
		p	3		renames
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	fixerName
	f	Ljava/util/Map;	b	nameMapping
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	typeReference
c	asf	net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/lang/String;	a	name
c	asg	net/minecraft/util/datafix/fixes/SpawnerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	wrapEntityToSpawnData
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	a	lambda$wrapSpawnPotentialsToWeightedEntries$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	wrapSpawnPotentialsToWeightedEntries
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$0
c	ash	net/minecraft/util/datafix/fixes/StatsCounterFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeItem
	m	(Ljava/lang/String;)Ljava/lang/String;	b	upgradeBlock
	f	Ljava/util/Set;	a	SKIP
	f	Ljava/util/Map;	b	CUSTOM_MAP
	f	Ljava/lang/String;	c	BLOCK_KEY
	f	Ljava/lang/String;	d	NEW_BLOCK_KEY
	f	Ljava/util/Map;	e	ITEM_KEYS
	f	Ljava/util/Map;	f	ENTITY_KEYS
	f	Ljava/util/Map;	g	ENTITIES
	f	Ljava/lang/String;	h	NEW_CUSTOM_KEY
c	asi	net/minecraft/util/datafix/fixes/StatsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		replacements
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	createCriteriaRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$6
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$createStatRule$5
		p	1		old
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	createStatRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$createCriteriaRule$1
		p	1		old
	m	()Ljava/lang/IllegalStateException;	c	lambda$createCriteriaRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
c	asj	net/minecraft/util/datafix/fixes/StriderGravityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	ask	net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	setCountToAtLeastOne
	m	(Ljava/lang/Integer;)Z	a	lambda$setCountToAtLeastOne$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$setCountToAtLeastOne$2
c	asl	net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	fixDimension
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStructures
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixStructures$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixDimension$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixDimension$2
c	asm	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lasm$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	a	lambda$guessConfiguration$9
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	updateStart
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateReference$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;Lasm$a;)Ljava/util/Optional;	a	guessConfiguration
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateReferences$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateStarts
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$updateReferences$5
	m	(Lasm$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	b	lambda$guessConfiguration$8
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	updateReference
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateStarts$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateReferences
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	b	lambda$updateStarts$3
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	findUpdatedStructureType
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fix$0
	f	Ljava/util/Map;	a	CONVERSION_MAP
c	asm$a	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	m	()Ljava/util/Map;	a	biomeMapping
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map$Entry;Ljava/lang/String;)V	a	lambda$unpack$0
	m	(Ljava/lang/String;)Lasm$a;	a	trivial
		p	0		mapping
	m	(Ljava/util/Map;)Ljava/util/Map;	a	unpack
		p	0		biomeMapping
	m	(Ljava/util/Map;Ljava/lang/String;)Lasm$a;	a	biomeMapped
		p	0		biomeMapping
		p	1		fallback
	m	()Ljava/lang/String;	b	fallback
	f	Ljava/util/Map;	a	biomeMapping
	f	Ljava/lang/String;	b	fallback
c	asn	net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	aso	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	m	(IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SIZE
	f	S	c	SIZE_BITS
c	aso$a	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	m	()Z	a	skippable
	m	(I)Z	a	isTrappedChest
		p	1		index
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	h	chestIds
c	asp	net/minecraft/util/datafix/fixes/VariantRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		type
		p	4		choiceName
		p	5		oldToNewNames
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	2		variantName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
		p	1		variant
	f	Ljava/util/Map;	a	renames
c	asq	net/minecraft/util/datafix/fixes/VillagerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		entity
	m	(II)Ljava/lang/String;	a	upgradeData
		p	0		professionId
		p	1		careerId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	asr	net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixValue$0
	f	D	a	ORIGINAL_VALUE
	f	D	b	NEW_BASE_VALUE
c	ass	net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	m	(I)I	a	getMinXpPerLevel
		p	0		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addXpFromLevel$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	addLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addLevel$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	b	addXpFromLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$addLevel$4
	f	I	a	TRADES_PER_LEVEL
	f	[I	b	LEVEL_XP_THRESHOLDS
c	ast	net/minecraft/util/datafix/fixes/VillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateItemStack
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateItemStack$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$updateItemStack$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$fix$0
c	asu	net/minecraft/util/datafix/fixes/WallPropertyFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixWallProperty
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mapProperty
		p	0		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$upgradeBlockStateTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixWallProperty$1
	f	Ljava/util/Set;	a	WALL_BLOCKS
c	asv	net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		dynamic
c	asw	net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$makeRule$0
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$makeRule$1
c	asx	net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	noise
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V	a	lambda$fix$6
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	defaultOverworld
	m	(Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object;	a	vanillaLevels
	m	(Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic;	a	vanillaBiomeSource
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$7
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$8
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map;	a	fixFlatStructures
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$12
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$11
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fix$1
	m	(Ljava/lang/String;I)I	a	getInt
	m	(Ljava/lang/String;II)I	a	getInt
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V	a	setSpacing
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$fix$2
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$9
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$10
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$3
	f	Ljava/lang/String;	a	VILLAGE
	f	Ljava/lang/String;	b	DESERT_PYRAMID
	f	Ljava/lang/String;	c	IGLOO
	f	Ljava/lang/String;	d	JUNGLE_TEMPLE
	f	Ljava/lang/String;	e	SWAMP_HUT
	f	Ljava/lang/String;	f	PILLAGER_OUTPOST
	f	Ljava/lang/String;	g	END_CITY
	f	Ljava/lang/String;	h	WOODLAND_MANSION
	f	Ljava/lang/String;	i	OCEAN_MONUMENT
	f	Lcom/google/common/collect/ImmutableMap;	j	DEFAULTS
c	asx$a	net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	m	(III)V	<init>	<init>
		p	1		spacing
		p	2		separation
		p	3		salt
	m	(Lasx$a;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lasx$a;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lasx$a;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
c	asy	net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateLayers
	m	(ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(ZZLcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$4
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	Ljava/lang/String;	a	WAS_PREVIOUSLY_INCREASED_KEY
	f	Ljava/lang/String;	b	NAME
c	asz	net/minecraft/util/datafix/fixes/WriteAndReadFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	ata	net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	atb	net/minecraft/util/datafix/fixes/package-info
c	atc	net/minecraft/util/datafix/package-info
c	atd	net/minecraft/util/datafix/schemas/NamespacedSchema
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/Type;	a	namespacedString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	ensureNamespaced
		p	0		id
	f	Lcom/mojang/serialization/codecs/PrimitiveCodec;	a	NAMESPACED_STRING_CODEC
	f	Lcom/mojang/datafixers/types/Type;	b	NAMESPACED_STRING
c	atd$1	net/minecraft/util/datafix/schemas/NamespacedSchema$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object;	a	write
c	ate	net/minecraft/util/datafix/schemas/V100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$1
c	atf	net/minecraft/util/datafix/schemas/V102
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	atg	net/minecraft/util/datafix/schemas/V1022
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
c	ath	net/minecraft/util/datafix/schemas/V106
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	ati	net/minecraft/util/datafix/schemas/V107
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	atj	net/minecraft/util/datafix/schemas/V1125
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$1
c	atk	net/minecraft/util/datafix/schemas/V135
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	atl	net/minecraft/util/datafix/schemas/V143
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	atm	net/minecraft/util/datafix/schemas/V1451
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	atn	net/minecraft/util/datafix/schemas/V1451_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	ato	net/minecraft/util/datafix/schemas/V1451_2
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	atp	net/minecraft/util/datafix/schemas/V1451_3
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$1
c	atq	net/minecraft/util/datafix/schemas/V1451_4
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	atr	net/minecraft/util/datafix/schemas/V1451_5
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	ats	net/minecraft/util/datafix/schemas/V1451_6
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	a	createCriterionTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$5
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$createCriterionTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$0
	f	Ljava/lang/String;	b	SPECIAL_OBJECTIVE_MARKER
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	c	UNPACK_OBJECTIVE_ID
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	d	REPACK_OBJECTIVE_ID
c	ats$1	net/minecraft/util/datafix/schemas/V1451_6$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$apply$0
c	ats$2	net/minecraft/util/datafix/schemas/V1451_6$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	packWithDot
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$apply$0
c	att	net/minecraft/util/datafix/schemas/V1451_7
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	atu	net/minecraft/util/datafix/schemas/V1460
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$47
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$26
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$39
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$42
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$46
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$44
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerInventory
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$32
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$45
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$43
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$24
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$30
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$37
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$41
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$23
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$36
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$40
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$22
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$27
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$38
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$34
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$33
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	y	lambda$registerEntities$2
c	atv	net/minecraft/util/datafix/schemas/V1466
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	atw	net/minecraft/util/datafix/schemas/V1470
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	atx	net/minecraft/util/datafix/schemas/V1481
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	aty	net/minecraft/util/datafix/schemas/V1483
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	atz	net/minecraft/util/datafix/schemas/V1486
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	aua	net/minecraft/util/datafix/schemas/V1510
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	aub	net/minecraft/util/datafix/schemas/V1800
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
c	auc	net/minecraft/util/datafix/schemas/V1801
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	aud	net/minecraft/util/datafix/schemas/V1904
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	aue	net/minecraft/util/datafix/schemas/V1906
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
c	auf	net/minecraft/util/datafix/schemas/V1909
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	aug	net/minecraft/util/datafix/schemas/V1920
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
c	auh	net/minecraft/util/datafix/schemas/V1928
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	aui	net/minecraft/util/datafix/schemas/V1929
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	auj	net/minecraft/util/datafix/schemas/V1931
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	auk	net/minecraft/util/datafix/schemas/V2100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	aul	net/minecraft/util/datafix/schemas/V2501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerFurnace$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerFurnace
		p	0		schema
		p	1		map
		p	2		name
c	aum	net/minecraft/util/datafix/schemas/V2502
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		name
c	aun	net/minecraft/util/datafix/schemas/V2505
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	auo	net/minecraft/util/datafix/schemas/V2509
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	aup	net/minecraft/util/datafix/schemas/V2519
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	auq	net/minecraft/util/datafix/schemas/V2522
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	aur	net/minecraft/util/datafix/schemas/V2551
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$0
c	aus	net/minecraft/util/datafix/schemas/V2568
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	aut	net/minecraft/util/datafix/schemas/V2571
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	auu	net/minecraft/util/datafix/schemas/V2684
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	auv	net/minecraft/util/datafix/schemas/V2686
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	auw	net/minecraft/util/datafix/schemas/V2688
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	auy	net/minecraft/util/datafix/schemas/V2704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
c	auz	net/minecraft/util/datafix/schemas/V2707
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntity$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerEntity
		p	0		schema
		p	1		entityTypes
		p	2		name
c	ava	net/minecraft/util/datafix/schemas/V2831
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	avb	net/minecraft/util/datafix/schemas/V2832
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$0
c	avc	net/minecraft/util/datafix/schemas/V2842
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	avd	net/minecraft/util/datafix/schemas/V3076
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	ave	net/minecraft/util/datafix/schemas/V3078
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	avf	net/minecraft/util/datafix/schemas/V3081
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		id
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	avg	net/minecraft/util/datafix/schemas/V3082
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
		p	1		string
c	avh	net/minecraft/util/datafix/schemas/V3083
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
c	avi	net/minecraft/util/datafix/schemas/V501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
c	avj	net/minecraft/util/datafix/schemas/V700
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
c	avk	net/minecraft/util/datafix/schemas/V701
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
c	avl	net/minecraft/util/datafix/schemas/V702
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
c	avm	net/minecraft/util/datafix/schemas/V703
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$0
c	avn	net/minecraft/util/datafix/schemas/V704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/google/common/collect/ImmutableMap;	a	lambda$static$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	2		blockEntityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$1
	f	Ljava/util/Map;	a	ITEM_TO_BLOCKENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	avn$1	net/minecraft/util/datafix/schemas/V704$1
c	avo	net/minecraft/util/datafix/schemas/V705
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$24
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$2
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	avo$1	net/minecraft/util/datafix/schemas/V705$1
c	avp	net/minecraft/util/datafix/schemas/V808
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	2		blockEntityId
c	avq	net/minecraft/util/datafix/schemas/V99
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$30
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	2		entityId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$35
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$34
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;	a	addNames
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$36
	m	(Ljava/util/HashMap;)V	a	lambda$static$33
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$27
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$32
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	2		entityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$24
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$26
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	c	registerMinecart
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	d	registerInventory
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerInventory$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerMinecart$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$4
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	a	ADD_NAMES
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	ITEM_TO_BLOCKENTITY
c	avq$1	net/minecraft/util/datafix/schemas/V99$1
c	avr	net/minecraft/util/datafix/schemas/package-info
c	avs	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()F	a	getAverageTickTime
	m	(I)[Ljavax/management/MBeanAttributeInfo;	a	lambda$new$1
	m	(Lavs$a;)Ljavax/management/Attribute;	a	lambda$getAttributes$2
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	registerJmxMonitoring
		p	0		server
	m	()[J	b	getTickTimes
	m	(Lavs$a;)Ljava/lang/String;	b	lambda$new$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljavax/management/MBeanInfo;	c	mBeanInfo
	f	Ljava/util/Map;	d	attributeDescriptionByName
c	avs$a	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		getter
		p	3		description
		p	4		type
	m	()Ljavax/management/MBeanAttributeInfo;	a	asMBeanAttributeInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Supplier;	b	getter
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Class;	d	type
c	avt	net/minecraft/util/monitoring/jmx/package-info
c	avu	net/minecraft/util/package-info
c	avv	net/minecraft/util/profiling/ActiveProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Z)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
		p	3		checkTimeout
	m	()V	a	startTick
	m	(J)Ljava/lang/Object;	a	lambda$pop$2
	m	(Laxg;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lavv$a;	c	getEntry
		p	1		name
	m	()Lawb;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	m	(Ljava/lang/String;)Lavv$a;	e	lambda$getCurrentEntry$3
		p	0		k
	m	()Lavv$a;	f	getCurrentEntry
	m	()Ljava/lang/Object;	g	lambda$pop$1
	m	()Ljava/lang/Object;	h	lambda$endTick$0
	f	J	a	WARNING_TIME_NANOS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/List;	d	paths
	f	Lit/unimi/dsi/fastutil/longs/LongList;	e	startTimes
	f	Ljava/util/Map;	f	entries
	f	Ljava/util/function/IntSupplier;	g	getTickTime
	f	Ljava/util/function/LongSupplier;	h	getRealTime
	f	J	i	startTimeNano
	f	I	j	startTimeTicks
	f	Ljava/lang/String;	k	path
	f	Z	l	started
	f	Lavv$a;	m	currentEntry
	f	Z	n	warn
	f	Ljava/util/Set;	o	chartedPaths
c	avv$a	net/minecraft/util/profiling/ActiveProfiler$PathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
	f	J	a	maxDuration
	f	J	b	minDuration
	f	J	c	accumulatedDuration
	f	J	d	count
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	e	counters
c	avw	net/minecraft/util/profiling/ContinuousProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
	m	()Z	a	isEnabled
	m	()V	b	disable
	m	()V	c	enable
	m	()Lawc;	d	getFiller
	m	()Lawb;	e	getResults
	f	Ljava/util/function/LongSupplier;	a	realTime
	f	Ljava/util/function/IntSupplier;	b	tickCount
	f	Lawa;	c	profiler
c	avx	net/minecraft/util/profiling/EmptyProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	Lavx;	a	EMPTY
c	avy	net/minecraft/util/profiling/FilledProfileResults
	m	(Ljava/util/Map;JIJI)V	<init>	<init>
		p	1		locationInfos
		p	2		startTime
		p	4		startTick
		p	5		endTime
		p	7		endTick
	m	()J	a	getStartTimeNano
	m	(IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V	a	lambda$appendCounterResults$5
		p	4		entry
	m	(ILjava/lang/String;Lavy$a;ILjava/lang/StringBuilder;)V	a	appendCounterResults
		p	1		depth
		p	2		name
		p	3		info
		p	4		tickSpan
		p	5		sb
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendProfilerResults
		p	1		level
		p	2		name
		p	3		sb
	m	(JI)Ljava/lang/String;	a	getProfilerResults
		p	1		timeSpan
		p	3		tickSpan
	m	(Lavy$a;)J	a	lambda$static$0
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isDirectChild
		p	0		parent
		p	1		path
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indentLine
		p	0		sb
		p	1		size
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Lavy$a;)V	a	lambda$appendCounters$6
		p	3		name
		p	4		info
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V	a	lambda$appendProfilerResults$4
		p	3		marker
		p	4		count
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	(Ljava/util/Map;Ljava/lang/String;Lawd;)V	a	lambda$getCounterValues$3
		p	1		location
		p	2		info
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounters
		p	1		counters
		p	2		sb
		p	3		tickSpan
	m	(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V	a	lambda$getCounterValues$2
		p	2		marker
		p	3		count
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	(Ljava/lang/String;)Lawd;	c	getEntry
		p	1		path
	m	()I	d	getEndTimeTicks
	m	(Ljava/lang/String;)Lavy$a;	d	lambda$getCounterValues$1
		p	0		k
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()Ljava/util/Map;	h	getCounterValues
	m	()Ljava/lang/String;	i	getComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lawd;	b	EMPTY
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	e	COUNTER_ENTRY_COMPARATOR
	f	Ljava/util/Map;	f	entries
	f	J	g	startTimeNano
	f	I	h	startTimeTicks
	f	J	i	endTimeNano
	f	I	j	endTimeTicks
	f	I	k	tickDuration
c	avy$1	net/minecraft/util/profiling/FilledProfileResults$1
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	avy$a	net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	m	(Ljava/lang/String;)Lavy$a;	a	lambda$addValue$0
		p	0		k
	m	(Ljava/util/Iterator;J)V	a	addValue
		p	1		pathIterator
		p	2		time
	f	J	a	selfValue
	f	J	b	totalValue
	f	Ljava/util/Map;	c	children
c	avz	net/minecraft/util/profiling/InactiveProfiler
	m	()V	a	startTick
	m	(Laxg;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lavv$a;	c	getEntry
		p	1		name
	m	()Lawb;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	f	Lavz;	a	INSTANCE
c	awa	net/minecraft/util/profiling/ProfileCollector
	m	(Ljava/lang/String;)Lavv$a;	c	getEntry
		p	1		name
	m	()Lawb;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
c	awb	net/minecraft/util/profiling/ProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	(Ljava/lang/String;)Ljava/lang/String;	b	demanglePath
		p	0		path
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()J	g	getNanoDuration
	f	C	d	PATH_SEPARATOR
c	awc	net/minecraft/util/profiling/ProfilerFiller
	m	()V	a	startTick
	m	(Lawc;Lawc;)Lawc;	a	tee
		p	0		a
		p	1		b
	m	(Laxg;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/util/function/Supplier;)V	c	incrementCounter
		p	1		markerGetter
	m	(Ljava/lang/String;)V	d	incrementCounter
		p	1		marker
	f	Ljava/lang/String;	b	ROOT
c	awc$1	net/minecraft/util/profiling/ProfilerFiller$1
	m	()V	a	startTick
	m	(Laxg;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	f	Lawc;	a	val$first
	f	Lawc;	c	val$second
c	awd	net/minecraft/util/profiling/ProfilerPathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	awe	net/minecraft/util/profiling/ResultField
	m	(Ljava/lang/String;DDJ)V	<init>	<init>
		p	1		name
		p	2		parentUsagePercentage
		p	4		totalUsagePercentage
		p	6		visitCount
	m	()I	a	getColor
	m	(Lawe;)I	a	compareTo
	f	D	a	percentage
	f	D	b	globalPercentage
	f	J	c	count
	f	Ljava/lang/String;	d	name
c	awf	net/minecraft/util/profiling/SingleTickProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/lang/String;J)V	<init>	<init>
		p	1		timeGetter
		p	2		filename
		p	3		overtime
	m	()Lawc;	a	startTick
	m	(Lawc;Lawf;)Lawc;	a	decorateFiller
		p	0		profiler
		p	1		monitor
	m	(Ljava/lang/String;)Lawf;	a	createTickProfiler
		p	0		name
	m	()V	b	endTick
	m	()I	c	lambda$startTick$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/LongSupplier;	b	realTime
	f	J	c	saveThreshold
	f	I	d	tick
	f	Ljava/io/File;	e	location
	f	Lawa;	f	profiler
c	awg	net/minecraft/util/profiling/jfr/Environment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	(Lnet/minecraft/server/MinecraftServer;)Lawg;	a	from
		p	0		server
	m	()[Lawg;	b	$values
	f	Lawg;	a	CLIENT
	f	Lawg;	b	SERVER
	f	Ljava/lang/String;	c	description
	f	[Lawg;	d	$VALUES
c	awh	net/minecraft/util/profiling/jfr/JfrProfiler
	m	()Lawh;	a	getInstance
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	(Lawg;)Z	a	start
		p	1		instanceType
	m	(Lawg;Ljava/lang/String;Ljdk/jfr/Recording;)V	a	lambda$start$2
		p	2		recording
	m	(Lcfh;Laai;Ljava/lang/String;)Lawl;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Ljava/io/Reader;Lawg;)Z	a	start
		p	1		reader
		p	2		instanceType
	m	(Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b;	a	networkStatFor
		p	1		address
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lawl;	e	onWorldLoadedStarted
	m	()V	f	setupSummaryListener
	m	()V	g	lambda$new$1
	m	()V	h	lambda$new$0
	f	Ljava/lang/String;	a	ROOT_CATEGORY
	f	Ljava/lang/String;	b	WORLD_GEN_CATEGORY
	f	Ljava/lang/String;	c	TICK_CATEGORY
	f	Ljava/lang/String;	d	NETWORK_CATEGORY
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ljava/util/List;	g	CUSTOM_EVENTS
	f	Ljava/lang/String;	h	FLIGHT_RECORDER_CONFIG
	f	Ljava/time/format/DateTimeFormatter;	i	DATE_TIME_FORMATTER
	f	Lawh;	j	INSTANCE
	f	Ljdk/jfr/Recording;	k	recording
	f	F	l	currentAverageTickTime
	f	Ljava/util/Map;	m	networkTrafficByAddress
c	awh$1	net/minecraft/util/profiling/jfr/JfrProfiler$1
	m	()V	a	lambda$$0
	f	Lawk;	a	summaryReporter
	f	Lawh;	b	this$0
c	awi	net/minecraft/util/profiling/jfr/JvmProfiler
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	(Lawg;)Z	a	start
		p	1		instanceType
	m	(Lcfh;Laai;Ljava/lang/String;)Lawl;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lawl;	e	onWorldLoadedStarted
	f	Lawi;	e	INSTANCE
c	awi$a	net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	m	()V	a	lambda$static$0
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	(Lawg;)Z	a	start
		p	1		instanceType
	m	(Lcfh;Laai;Ljava/lang/String;)Lawl;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lawl;	e	onWorldLoadedStarted
	f	Lawl;	a	noOpCommit
	f	Lorg/slf4j/Logger;	b	LOGGER
c	awj	net/minecraft/util/profiling/jfr/Percentiles
	m	(Ljava/util/Map;)Ljava/util/Map;	a	sorted
		p	0		map
	m	(Ljava/util/Map;Lit/unimi/dsi/fastutil/ints/Int2DoubleRBTreeMap;)V	a	lambda$sorted$0
		p	1		reversedMap
	m	([D)Ljava/util/Map;	a	evaluate
		p	0		values
	m	([J)Ljava/util/Map;	a	evaluate
		p	0		values
	f	Lcom/google/common/math/Quantiles$ScaleAndIndexes;	a	DEFAULT_INDEXES
c	awk	net/minecraft/util/profiling/jfr/SummaryReporter
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		stopCallback
	m	()Ljava/lang/String;	a	lambda$recordingStopped$3
	m	(Ljava/nio/file/Path;)V	a	recordingStopped
		p	1		dumpPath
	m	(Ljava/util/function/Supplier;)V	a	infoWithFallback
	m	(Ljava/util/function/Supplier;Ljava/lang/Throwable;)V	a	warnWithFallback
		p	1		throwable
	m	()Ljava/lang/String;	b	lambda$recordingStopped$1
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	b	lambda$recordingStopped$2
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	c	lambda$recordingStopped$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/Runnable;	b	onDeregistration
c	awl	net/minecraft/util/profiling/jfr/callback/ProfiledDuration
c	awm	net/minecraft/util/profiling/jfr/callback/package-info
c	awn	net/minecraft/util/profiling/jfr/event/PacketEvent
	m	(IILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	awn$a	net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	PROTOCOL_ID
	f	Ljava/lang/String;	c	PACKET_ID
	f	Ljava/lang/String;	d	BYTES
c	awo	net/minecraft/util/profiling/jfr/event/package-info
c	awp	net/minecraft/util/profiling/jfr/package-info
c	awq	net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		events
	m	()Lawr;	a	results
	m	(Lawz$b;)Lawq$a;	a	lambda$incrementPacket$1
		p	0		packet
	m	(Ljava/nio/file/Path;)Lawr;	a	parse
		p	0		path
	m	(Ljava/time/Duration;Ljava/util/Map;)Lawz;	a	collectPacketStats
		p	0		duration
		p	1		packetsToCounter
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$collectPacketStats$2
		p	0		entry
	m	(Ljava/util/stream/Stream;)V	a	capture
		p	1		events
	m	(Ljdk/jfr/consumer/RecordedEvent;)V	a	lambda$capture$0
		p	1		event
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	a	incrementPacket
		p	1		event
		p	2		bytes
		p	3		packetsToCounter
	m	(Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V	a	appendFileIO
		p	1		event
		p	2		samples
		p	3		bytesKey
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/util/List;	c	chunkGenStats
	f	Ljava/util/List;	d	cpuLoadStat
	f	Ljava/util/Map;	e	receivedPackets
	f	Ljava/util/Map;	f	sentPackets
	f	Ljava/util/List;	g	fileWrites
	f	Ljava/util/List;	h	fileReads
	f	I	i	garbageCollections
	f	Ljava/time/Duration;	j	gcTotalDuration
	f	Ljava/util/List;	k	gcHeapStats
	f	Ljava/util/List;	l	threadAllocationStats
	f	Ljava/util/List;	m	tickTimes
	f	Ljava/time/Duration;	n	worldCreationDuration
c	awq$1	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$1
	m	()Ljdk/jfr/consumer/RecordedEvent;	a	next
	f	Ljdk/jfr/consumer/RecordingFile;	a	val$recordingFile
c	awq$a	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	m	()Lawz$a;	a	toCountAndSize
	m	(I)V	a	increment
		p	1		bytes
	f	J	a	count
	f	J	b	totalSize
c	awr	net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	m	()Ljava/util/List;	a	chunkGenSummary
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/time/Duration;	a	lambda$chunkGenSummary$1
		p	0		pair
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$chunkGenSummary$0
		p	0		entry
	m	()Ljava/lang/String;	b	asJson
	m	()Ljava/time/Instant;	c	recordingStarted
	m	()Ljava/time/Instant;	d	recordingEnded
	m	()Ljava/time/Duration;	e	recordingDuration
	m	()Ljava/time/Duration;	f	worldCreationDuration
	m	()Ljava/util/List;	g	tickTimes
	m	()Ljava/util/List;	h	cpuLoadStats
	m	()Lawy$a;	i	heapSummary
	m	()Laxa$a;	j	threadAllocationSummary
	m	()Lawz;	k	receivedPacketsSummary
	m	()Lawz;	l	sentPacketsSummary
	m	()Lawx$a;	m	fileWrites
	m	()Lawx$a;	n	fileReads
	m	()Ljava/util/List;	o	chunkGenStats
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/time/Duration;	c	recordingDuration
	f	Ljava/time/Duration;	d	worldCreationDuration
	f	Ljava/util/List;	e	tickTimes
	f	Ljava/util/List;	f	cpuLoadStats
	f	Lawy$a;	g	heapSummary
	f	Laxa$a;	h	threadAllocationSummary
	f	Lawz;	i	receivedPacketsSummary
	f	Lawz;	j	sentPacketsSummary
	f	Lawx$a;	k	fileWrites
	f	Lawx$a;	l	fileReads
	f	Ljava/util/List;	m	chunkGenStats
c	aws	net/minecraft/util/profiling/jfr/parse/package-info
c	awt	net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	m	(Lawr;)Ljava/lang/String;	a	format
		p	1		profile
	m	(Lawv;)Lcom/google/gson/JsonElement;	a	lambda$chunkGen$4
		p	0		sample
	m	(Lawx$a;)Lcom/google/gson/JsonElement;	a	fileIoSummary
		p	1		statistics
	m	(Lawy$a;)Lcom/google/gson/JsonElement;	a	heap
		p	1		statistics
	m	(Lawz;)Lcom/google/gson/JsonElement;	a	packets
		p	1		statistics
	m	(Laxa$a;)Lcom/google/gson/JsonElement;	a	threadAllocations
		p	1		statistics
	m	(Laxb;)D	a	lambda$serverTicks$7
		p	0		sample
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$packets$10
		p	1		pair
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ljava/lang/Double;)V	a	lambda$threadAllocations$6
		p	1		threadName
		p	2		allocation
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonArray;)V	a	lambda$chunkGen$1
		p	1		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V	a	lambda$chunkGen$2
		p	1		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	a	lambda$serverTicks$8
		p	1		quantile
		p	2		value
	m	(Lcom/mojang/datafixers/util/Pair;)D	a	lambda$chunkGen$0
		p	0		pair
	m	(Ljava/lang/String;Ljava/lang/Double;Lcom/google/gson/JsonObject;)V	a	lambda$threadAllocations$5
		p	2		json
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	chunkGen
		p	1		statistics
	m	(Ljava/util/List;Ljava/util/function/ToDoubleFunction;)Lcom/google/gson/JsonObject;	a	lambda$cpu$11
		p	0		samples
		p	1		valueGetter
	m	(Lawr;)Lcom/google/gson/JsonElement;	b	fileIO
		p	1		profile
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	b	lambda$fileIoSummary$9
		p	1		pair
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	b	lambda$chunkGen$3
		p	1		quantile
		p	2		value
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	b	serverTicks
		p	1		samples
	m	(Lawr;)Lcom/google/gson/JsonElement;	c	network
		p	1		profile
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	c	cpu
		p	1		samples
	f	Lcom/google/gson/Gson;	a	gson
	f	Ljava/lang/String;	b	BYTES_PER_SECOND
	f	Ljava/lang/String;	c	COUNT
	f	Ljava/lang/String;	d	DURATION_NANOS_TOTAL
	f	Ljava/lang/String;	e	TOTAL_BYTES
	f	Ljava/lang/String;	f	COUNT_PER_SECOND
c	awu	net/minecraft/util/profiling/jfr/serialize/package-info
c	awv	net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	m	(Ljava/time/Duration;Lcfh;Laff;Lcwq;Ljava/lang/String;)V	<init>	<init>
		p	1		duration
	m	()Ljava/time/Duration;	a	duration
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lawv;	a	from
		p	0		event
	m	()Lcfh;	b	chunkPos
	m	()Laff;	c	worldPos
	m	()Lcwq;	d	status
	m	()Ljava/lang/String;	e	level
	f	Ljava/time/Duration;	a	duration
	f	Lcfh;	b	chunkPos
	f	Laff;	c	worldPos
	f	Lcwq;	d	status
	f	Ljava/lang/String;	e	level
c	aww	net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	m	()D	a	jvm
	m	(Ljdk/jfr/consumer/RecordedEvent;)Laww;	a	from
		p	0		event
	m	()D	b	userJvm
	m	()D	c	system
	f	D	a	jvm
	f	D	b	userJvm
	f	D	c	system
c	awx	net/minecraft/util/profiling/jfr/stats/FileIOStat
	m	()Ljava/time/Duration;	a	duration
	m	(Lawx;)J	a	lambda$summary$3
		p	0		sample
	m	(Ljava/time/Duration;Ljava/util/List;)Lawx$a;	a	summary
		p	0		duration
		p	1		samples
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$summary$4
		p	0		entry
	m	()Ljava/lang/String;	b	path
	m	(Lawx;)Ljava/lang/String;	b	lambda$summary$2
		p	0		sample
	m	()J	c	bytes
	m	(Lawx;)Z	c	lambda$summary$1
		p	0		sample
	m	(Lawx;)J	d	lambda$summary$0
		p	0		sample
	f	Ljava/time/Duration;	a	duration
	f	Ljava/lang/String;	b	path
	f	J	c	bytes
c	awx$a	net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	m	()J	a	totalBytes
	m	()D	b	bytesPerSecond
	m	()J	c	counts
	m	()D	d	countsPerSecond
	m	()Ljava/time/Duration;	e	timeSpentInIO
	m	()Ljava/util/List;	f	topTenContributorsByTotalBytes
	f	J	a	totalBytes
	f	D	b	bytesPerSecond
	f	J	c	counts
	f	D	d	countsPerSecond
	f	Ljava/time/Duration;	e	timeSpentInIO
	f	Ljava/util/List;	f	topTenContributorsByTotalBytes
c	awy	net/minecraft/util/profiling/jfr/stats/GcHeapStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Lawy;)Lawy$b;	a	lambda$calculateAllocationRatePerSecond$0
	m	(Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lawy$a;	a	summary
		p	0		duration
		p	1		samples
		p	2		gcDuration
		p	3		count
	m	(Ljava/util/List;)D	a	calculateAllocationRatePerSecond
		p	0		samples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lawy;	a	from
		p	0		event
	m	()J	b	heapUsed
	m	()Lawy$b;	c	timing
	f	Ljava/time/Instant;	a	timestamp
	f	J	b	heapUsed
	f	Lawy$b;	c	timing
c	awy$a	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	m	()F	a	gcOverHead
	m	()Ljava/time/Duration;	b	duration
	m	()Ljava/time/Duration;	c	gcTotalDuration
	m	()I	d	totalGCs
	m	()D	e	allocationRateBytesPerSecond
	f	Ljava/time/Duration;	a	duration
	f	Ljava/time/Duration;	b	gcTotalDuration
	f	I	c	totalGCs
	f	D	d	allocationRateBytesPerSecond
c	awy$b	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	m	()[Lawy$b;	a	$values
	f	Lawy$b;	a	BEFORE_GC
	f	Lawy$b;	b	AFTER_GC
	f	[Lawy$b;	c	$VALUES
c	awz	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	m	(Ljava/time/Duration;Ljava/util/List;)V	<init>	<init>
		p	1		duration
		p	2		packetsToStatistics
	m	()D	a	getCountsPerSecond
	m	()D	b	getSizePerSecond
	m	()J	c	getTotalCount
	m	()J	d	getTotalSize
	m	()Ljava/util/List;	e	largestSizeContributors
	m	()Lawz$a;	f	lambda$new$0
	f	Lawz$a;	a	totalPacketCountAndSize
	f	Ljava/util/List;	b	largestSizeContributors
	f	Ljava/time/Duration;	c	recordingDuration
c	awz$a	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize
	m	()J	a	totalCount
	m	(Lawz$a;)Lawz$a;	a	add
		p	1		statistics
	m	()J	b	totalSize
	f	J	a	totalCount
	f	J	b	totalSize
	f	Ljava/util/Comparator;	c	SIZE_THEN_COUNT
c	awz$b	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification
	m	()Ljava/lang/String;	a	packetName
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lsp;Lqw;Ljava/lang/Integer;Ljava/lang/Class;)V	a	lambda$static$0
		p	3		packetId
		p	4		clazz
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lawz$b;	a	from
		p	0		event
	m	()Lsp;	b	direction
	m	()I	c	protocolId
	m	()I	d	packetId
	f	Lsp;	a	direction
	f	I	b	protocolId
	f	I	c	packetId
	f	Ljava/util/Map;	d	PACKET_NAME_BY_ID
c	axa	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Laxa;)Ljava/lang/String;	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Laxa$a;	a	summary
		p	0		samples
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V	a	lambda$summary$1
		p	1		threadName
		p	2		groupedSamples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Laxa;	a	from
		p	0		event
	m	()Ljava/lang/String;	b	threadName
	m	()J	c	totalBytes
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/lang/String;	b	threadName
	f	J	c	totalBytes
	f	Ljava/lang/String;	d	UNKNOWN_THREAD
c	axa$a	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	m	()Ljava/util/Map;	a	allocationsPerSecondByThread
	f	Ljava/util/Map;	a	allocationsPerSecondByThread
c	axb	net/minecraft/util/profiling/jfr/stats/TickTimeStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Ljdk/jfr/consumer/RecordedEvent;)Laxb;	a	from
		p	0		event
	m	()Ljava/time/Duration;	b	currentAverage
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/time/Duration;	b	currentAverage
c	axc	net/minecraft/util/profiling/jfr/stats/TimeStamped
	m	()Ljava/time/Instant;	a	getTimestamp
c	axd	net/minecraft/util/profiling/jfr/stats/TimedStat
	m	()Ljava/time/Duration;	a	duration
c	axe	net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	m	()Laxd;	a	fastest
	m	(Laxd;)J	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Laxe;	a	summary
		p	0		samples
	m	()Laxd;	b	slowest
	m	()Laxd;	c	secondSlowest
	m	()I	d	count
	m	()Ljava/util/Map;	e	percentilesNanos
	m	()Ljava/time/Duration;	f	totalDuration
	f	Laxd;	a	fastest
	f	Laxd;	b	slowest
	f	Laxd;	c	secondSlowest
	f	I	d	count
	f	Ljava/util/Map;	e	percentilesNanos
	f	Ljava/time/Duration;	f	totalDuration
c	axf	net/minecraft/util/profiling/jfr/stats/package-info
c	axg	net/minecraft/util/profiling/metrics/MetricCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	()[Laxg;	b	$values
	f	Laxg;	a	PATH_FINDING
	f	Laxg;	b	EVENT_LOOPS
	f	Laxg;	c	MAIL_BOXES
	f	Laxg;	d	TICK_LOOP
	f	Laxg;	e	JVM
	f	Laxg;	f	CHUNK_RENDERING
	f	Laxg;	g	CHUNK_RENDERING_DISPATCHING
	f	Laxg;	h	CPU
	f	Laxg;	i	GPU
	f	Ljava/lang/String;	j	description
	f	[Laxg;	k	$VALUES
c	axh	net/minecraft/util/profiling/metrics/MetricSampler
	m	(Ljava/lang/String;Laxg;Ljava/util/function/DoubleSupplier;Ljava/lang/Runnable;Laxh$c;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		retriever
		p	4		startAction
		p	5		deviationChecker
	m	()V	a	onStartTick
	m	(I)V	a	onEndTick
		p	1		tick
	m	(Ljava/lang/String;Laxg;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Laxh;	a	create
		p	0		name
		p	1		type
		p	2		context
		p	3		retriever
	m	(Ljava/lang/String;Laxg;Ljava/util/function/DoubleSupplier;)Laxh;	a	create
		p	0		name
		p	1		type
		p	2		retriever
	m	(Ljava/lang/String;Laxg;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Laxh$a;	a	builder
		p	0		name
		p	1		type
		p	2		retriever
		p	3		context
	m	()V	b	onFinished
	m	()Ljava/util/function/DoubleSupplier;	c	getSampler
	m	()Ljava/lang/String;	d	getName
	m	()Laxg;	e	getCategory
	m	()Laxh$b;	f	result
	m	()Z	g	triggersThreshold
	m	()V	h	verifyRunning
	f	Laxh$c;	a	thresholdTest
	f	Ljava/lang/String;	b	name
	f	Laxg;	c	category
	f	Ljava/util/function/DoubleSupplier;	d	sampler
	f	Lio/netty/buffer/ByteBuf;	e	ticks
	f	Lio/netty/buffer/ByteBuf;	f	values
	f	Z	g	isRunning
	f	Ljava/lang/Runnable;	h	beforeTick
	f	D	i	currentValue
c	axh$a	net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	m	(Ljava/lang/String;Laxg;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		timeFunction
		p	4		context
	m	()Laxh;	a	build
	m	(Laxh$c;)Laxh$a;	a	withThresholdAlert
		p	1		deviationChecker
	m	(Ljava/util/function/Consumer;)Laxh$a;	a	withBeforeTick
		p	1		action
	m	(Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)D	a	lambda$new$0
	m	(Ljava/util/function/Consumer;)V	b	lambda$withBeforeTick$1
	f	Ljava/lang/String;	a	name
	f	Laxg;	b	category
	f	Ljava/util/function/DoubleSupplier;	c	sampler
	f	Ljava/lang/Object;	d	context
	f	Ljava/lang/Runnable;	e	beforeTick
	f	Laxh$c;	f	thresholdTest
c	axh$b	net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	m	(IILit/unimi/dsi/fastutil/ints/Int2DoubleMap;)V	<init>	<init>
		p	1		startTick
		p	2		endTick
		p	3		values
	m	()I	a	getFirstTick
	m	(I)D	a	valueAtTick
		p	1		tick
	m	()I	b	getLastTick
	f	Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;	a	recording
	f	I	b	firstTick
	f	I	c	lastTick
c	axh$c	net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
	m	(D)Z	test	test
		p	1		value
c	axh$d	net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	m	(F)V	<init>	<init>
		p	1		threshold
	m	(D)Z	test	test
		p	1		value
	f	F	a	percentageIncreaseThreshold
	f	D	b	previousValue
c	axi	net/minecraft/util/profiling/metrics/MetricsRegistry
	m	()Ljava/util/List;	a	getRegisteredSamplers
	m	(Laxk;)V	a	add
		p	1		executor
	m	(Ljava/util/Map$Entry;)Laxh;	a	lambda$aggregateDuplicates$1
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/List;	a	aggregateDuplicates
		p	0		samplers
	m	(Laxk;)Ljava/util/stream/Stream;	b	lambda$getRegisteredSamplers$0
		p	0		executor
	f	Laxi;	a	INSTANCE
	f	Ljava/util/WeakHashMap;	b	measuredInstances
c	axi$a	net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		delegates
	m	(DLaxh;)Z	a	lambda$thresholdTest$2
		p	2		sampler
	m	(Ljava/util/List;)Laxh$c;	a	thresholdTest
		p	0		delegates
	m	(Ljava/util/List;D)Z	a	lambda$thresholdTest$3
		p	1		value
	m	(Ljava/util/List;)V	b	beforeTick
		p	0		samplers
	m	(Ljava/util/List;)D	c	averageValueFromDelegates
		p	0		samplers
	m	(Ljava/util/List;)V	d	lambda$new$1
	m	(Ljava/util/List;)D	e	lambda$new$0
	f	Ljava/util/List;	b	delegates
c	axj	net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
c	axk	net/minecraft/util/profiling/metrics/ProfilerMeasured
	m	()Ljava/util/List;	bl	profiledMetrics
c	axl	net/minecraft/util/profiling/metrics/package-info
c	axm	net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	m	(Laxj;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Laxs;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		samplerSource
		p	2		timeGetter
		p	3		dumpExecutor
		p	4		dumper
		p	5		resultConsumer
		p	6		dumpConsumer
	m	()V	a	end
	m	(Lawb;)V	a	scheduleSaveResults
		p	1		result
	m	(Laxh;)Ljava/util/List;	a	lambda$endTick$3
		p	0		s
	m	(Laxj;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Laxs;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Laxm;	a	createStarted
		p	0		source
		p	1		timeGetter
		p	2		dumpExecutor
		p	3		dumper
		p	4		resultConsumer
		p	5		dumpConsumer
	m	(Ljava/util/Collection;)V	a	cleanup
		p	1		samplers
	m	(Ljava/util/HashSet;Lawb;)V	a	lambda$scheduleSaveResults$5
	m	(Ljava/util/function/Consumer;)V	a	registerGlobalCompletionCallback
		p	0		consumer
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lawc;	f	getProfiler
	m	()V	g	verifyStarted
	m	()I	h	lambda$endTick$4
	m	()Lawa;	i	lambda$startTick$2
	m	()I	j	lambda$new$1
	m	()I	k	lambda$new$0
	f	I	a	PROFILING_MAX_DURATION_SECONDS
	f	Ljava/util/function/Consumer;	b	globalOnReportFinished
	f	Ljava/util/Map;	c	deviationsBySampler
	f	Lavw;	d	taskProfiler
	f	Ljava/util/concurrent/Executor;	e	ioExecutor
	f	Laxs;	f	metricsPersister
	f	Ljava/util/function/Consumer;	g	onProfilingEnd
	f	Ljava/util/function/Consumer;	h	onReportFinished
	f	Laxj;	i	metricsSamplerProvider
	f	Ljava/util/function/LongSupplier;	j	wallTimeSource
	f	J	k	deadlineNano
	f	I	l	currentTick
	f	Lawa;	m	singleTickProfiler
	f	Z	n	killSwitch
	f	Ljava/util/Set;	o	thisTickSamplers
c	axn	net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lawc;	f	getProfiler
	f	Laxo;	a	INSTANCE
c	axo	net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lawc;	f	getProfiler
c	axp	net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	newSamplersFoundInProfiler
		p	1		profilerSupplier
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)D	a	lambda$samplerForProfilingPath$2
	m	(Ljava/util/function/Supplier;Ljava/lang/String;Laxg;)Laxh;	a	samplerForProfilingPath
		p	0		profilerSupplier
		p	1		id
		p	2		type
	m	(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/tuple/Pair;)Laxh;	a	lambda$newSamplersFoundInProfiler$1
		p	1		target
	m	(Lorg/apache/commons/lang3/tuple/Pair;)Z	a	lambda$newSamplersFoundInProfiler$0
		p	1		target
	f	Ljava/util/Set;	a	previouslyFoundSamplerNames
c	axq	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	m	(Ljava/util/function/LongSupplier;Z)V	<init>	<init>
		p	1		nanoTimeSupplier
		p	2		includeSystem
	m	()Ljava/util/Set;	a	runtimeIndependentSamplers
	m	(Laxq$a;I)Laxh;	a	lambda$runtimeIndependentSamplers$1
		p	1		index
	m	(Lcom/google/common/base/Stopwatch;)D	a	lambda$tickTimeSampler$3
		p	0		watch
	m	(Ljava/util/function/LongSupplier;)Laxh;	a	tickTimeSampler
		p	0		nanoTimeSupplier
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
	m	()D	b	lambda$runtimeIndependentSamplers$2
	m	(Laxq$a;I)D	b	lambda$runtimeIndependentSamplers$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	samplers
	f	Laxp;	c	samplerFactory
c	axq$1	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$1
	f	Ljava/util/function/LongSupplier;	a	val$timeSource
c	axq$a	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	m	(I)D	a	loadForCpu
		p	1		index
	f	I	a	nrOfCpus
	f	Loshi/SystemInfo;	b	systemInfo
	f	Loshi/hardware/CentralProcessor;	c	processor
	f	[[J	d	previousCpuLoadTick
	f	[D	e	currentLoad
	f	J	f	lastPollMs
c	axr	net/minecraft/util/profiling/metrics/profiling/package-info
c	axs	net/minecraft/util/profiling/metrics/storage/MetricsPersister
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		type
	m	(I)[Ljava/lang/String;	a	lambda$saveCategory$2
	m	(ILaxh$b;)Ljava/lang/String;	a	lambda$saveCategory$1
		p	1		data
	m	(Lawb;Ljava/nio/file/Path;)V	a	saveProfilingTaskExecutionResult
		p	1		result
		p	2		directory
	m	(Laxg;Ljava/util/List;Ljava/nio/file/Path;)V	a	saveCategory
		p	1		type
		p	2		samplers
		p	3		directory
	m	(Ljava/nio/file/Path;Laxg;Ljava/util/List;)V	a	lambda$saveMetrics$0
		p	2		type
		p	3		sampler
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Laxh;Laxt;)V	a	lambda$saveDeviations$3
		p	3		deviation
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Laxh;Ljava/util/List;)V	a	lambda$saveDeviations$4
		p	2		sampler
		p	3		sampleDeviations
	m	(Ljava/util/Map;Ljava/nio/file/Path;)V	a	saveDeviations
		p	1		deviations
		p	2		deviationsDirectory
	m	(Ljava/util/Set;Ljava/nio/file/Path;)V	a	saveMetrics
		p	1		samplers
		p	2		directory
	m	(Ljava/util/Set;Ljava/util/Map;Lawb;)Ljava/nio/file/Path;	a	saveReports
		p	1		samplers
		p	2		deviations
		p	3		result
	f	Ljava/nio/file/Path;	a	PROFILING_RESULTS_DIR
	f	Ljava/lang/String;	b	METRICS_DIR_NAME
	f	Ljava/lang/String;	c	DEVIATIONS_DIR_NAME
	f	Ljava/lang/String;	d	PROFILING_RESULT_FILENAME
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/lang/String;	f	rootFolderName
c	axt	net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	m	(Ljava/time/Instant;ILawb;)V	<init>	<init>
		p	1		instant
		p	2		ticks
		p	3		result
	f	Ljava/time/Instant;	a	timestamp
	f	I	b	tick
	f	Lawb;	c	profilerResultAtTick
c	axu	net/minecraft/util/profiling/metrics/storage/package-info
c	axv	net/minecraft/util/profiling/package-info
c	axw	net/minecraft/util/random/SimpleWeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Laxw$a;	a	builder
	m	(Lalu;)Ljava/util/Optional;	a	getRandomValue
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	wrappedCodecAllowingEmpty
	m	(Ljava/lang/Object;)Laxw;	a	single
		p	0		object
	m	()Laxw;	b	empty
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	wrappedCodec
		p	0		dataCodec
c	axw$a	net/minecraft/util/random/SimpleWeightedRandomList$Builder
	m	()Laxw;	a	build
	m	(Ljava/lang/Object;I)Laxw$a;	a	add
		p	1		object
		p	2		weight
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	result
c	axx	net/minecraft/util/random/Weight
	m	(I)V	<init>	<init>
		p	1		weight
	m	()I	a	asInt
	m	(I)Laxx;	a	of
		p	0		weight
	m	(I)V	b	validateWeight
		p	0		weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laxx;	b	ONE
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	value
c	axy	net/minecraft/util/random/WeightedEntry
	m	()Laxx;	a	getWeight
	m	(Ljava/lang/Object;I)Laxy$b;	a	wrap
		p	0		data
		p	1		weight
c	axy$a	net/minecraft/util/random/WeightedEntry$IntrusiveBase
	m	(I)V	<init>	<init>
		p	1		weight
	m	(Laxx;)V	<init>	<init>
		p	1		weight
	m	()Laxx;	a	getWeight
	f	Laxx;	a	weight
c	axy$b	net/minecraft/util/random/WeightedEntry$Wrapper
	m	(Ljava/lang/Object;Laxx;)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Laxx;	a	getWeight
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		dataCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	()Ljava/lang/Object;	b	getData
	f	Ljava/lang/Object;	a	data
	f	Laxx;	b	weight
c	axz	net/minecraft/util/random/WeightedRandom
	m	(Lalu;Ljava/util/List;)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
	m	(Lalu;Ljava/util/List;I)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
		p	2		totalWeight
	m	(Ljava/util/List;)I	a	getTotalWeight
		p	0		pool
	m	(Ljava/util/List;I)Ljava/util/Optional;	a	getWeightedItem
		p	0		pool
		p	1		totalWeight
c	aya	net/minecraft/util/random/WeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Ljava/util/List;)Laya;	a	create
		p	0		entries
	m	([Laxy;)Laya;	a	create
		p	0		entries
	m	(Lalu;)Ljava/util/Optional;	b	getRandom
		p	1		random
	m	()Laya;	c	create
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	codec
		p	0		entryCodec
	m	()Z	d	isEmpty
	m	()Ljava/util/List;	e	unwrap
	f	I	a	totalWeight
	f	Lcom/google/common/collect/ImmutableList;	b	items
c	ayb	net/minecraft/util/random/package-info
c	ayc	net/minecraft/util/thread/BlockableEventLoop
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	submitAsync
		p	1		runnable
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
		p	1		task
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	(Ljava/lang/Runnable;)Ljava/lang/Void;	b	lambda$submitAsync$0
	m	()Ljava/util/List;	bl	profiledMetrics
	m	()Z	bm	isSameThread
	m	()I	bn	getPendingTasksCount
	m	()Ljava/lang/String;	bo	name
	m	()V	bp	dropAllTasks
	m	()V	bq	runAllTasks
	m	()V	br	waitForTasks
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/util/function/BooleanSupplier;)V	c	managedBlock
		p	1		stopCondition
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	g	submit
		p	1		task
	m	(Ljava/lang/Runnable;)V	h	executeBlocking
		p	1		runnable
	m	(Ljava/lang/Runnable;)V	i	tell
	m	()Z	x	pollTask
	f	Ljava/lang/String;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	pendingRunnables
	f	I	e	blockingCount
c	ayd	net/minecraft/util/thread/NamedThreadFactory
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$newThread$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/ThreadGroup;	b	group
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	threadNumber
	f	Ljava/lang/String;	d	namePrefix
c	aye	net/minecraft/util/thread/ProcessorHandle
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Laye;	a	of
		p	0		name
		p	1		action
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$askEither$0
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	ask
		p	1		messageProvider
	m	()Ljava/lang/String;	bo	name
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	askEither
		p	1		messageProvider
c	aye$1	net/minecraft/util/thread/ProcessorHandle$1
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	()Ljava/lang/String;	bo	name
	f	Ljava/lang/String;	a	val$name
	f	Ljava/util/function/Consumer;	b	val$tell
c	ayf	net/minecraft/util/thread/ProcessorMailbox
	m	(Layh;Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
		p	1		queue
		p	2		executor
		p	3		name
	m	()V	a	runAll
	m	(I)Z	a	lambda$runAll$1
		p	0		runCount
	m	(Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I	a	pollUntil
		p	1		condition
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)Layf;	a	create
		p	0		executor
		p	1		name
	m	()I	b	size
	m	(I)Z	b	lambda$run$0
		p	0		runCount
	m	()Ljava/util/List;	bl	profiledMetrics
	m	()Ljava/lang/String;	bo	name
	m	()Z	c	hasWork
	m	()Z	d	setAsScheduled
	m	()V	e	setAsIdle
	m	()Z	f	canBeScheduled
	m	()Z	g	shouldProcess
	m	()Z	h	pollTask
	m	()V	i	registerForExecution
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	CLOSED_BIT
	f	I	c	SCHEDULED_BIT
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	status
	f	Layh;	e	queue
	f	Ljava/util/concurrent/Executor;	f	dispatcher
	f	Ljava/lang/String;	g	name
c	ayg	net/minecraft/util/thread/ReentrantBlockableEventLoop
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Z	at	scheduleExecutables
	m	()Z	bs	runningTask
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	f	I	b	reentrantCount
c	ayh	net/minecraft/util/thread/StrictQueue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
c	ayh$a	net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	m	(I)V	<init>	<init>
		p	1		priorityCount
	m	()Ljava/lang/Object;	a	pop
	m	(Layh$b;)Z	a	push
		p	1		message
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	m	()Ljava/lang/Runnable;	d	pop
	f	[Ljava/util/Queue;	a	queues
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	size
c	ayh$b	net/minecraft/util/thread/StrictQueue$IntRunnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		priority
		p	2		runnable
	m	()I	a	getPriority
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	task
c	ayh$c	net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	m	(Ljava/util/Queue;)V	<init>	<init>
		p	1		queue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	f	Ljava/util/Queue;	a	queue
c	ayi	net/minecraft/util/thread/package-info
c	ayj	net/minecraft/util/valueproviders/BiasedToBottomInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Layj;	a	of
		p	0		min
		p	1		max
	m	(Lalu;)I	a	sample
		p	1		random
	m	(Layj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Layj;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		provider
	m	()Lays;	c	getType
	m	(Layj;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	ayk	net/minecraft/util/valueproviders/ClampedInt
	m	(Layr;II)V	<init>	<init>
		p	1		source
		p	2		min
		p	3		max
	m	()I	a	getMinValue
	m	(Lalu;)I	a	sample
		p	1		random
	m	(Layk;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Layr;II)Layk;	a	of
		p	0		source
		p	1		min
		p	2		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()I	b	getMaxValue
	m	(Layk;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		provider
	m	()Lays;	c	getType
	m	(Layk;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		provider
	m	(Layk;)Layr;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	source
	f	I	f	minInclusive
	f	I	g	maxInclusive
c	ayl	net/minecraft/util/valueproviders/ClampedNormalFloat
	m	(FFFF)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()F	a	getMinValue
	m	(FFFF)Layl;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Lalu;)F	a	sample
		p	1		random
	m	(Lalu;FFFF)F	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Layl;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()F	b	getMaxValue
	m	(Layl;)Ljava/lang/Float;	b	lambda$static$3
		p	0		provider
	m	()Layq;	c	getType
	m	(Layl;)Ljava/lang/Float;	c	lambda$static$2
		p	0		provider
	m	(Layl;)Ljava/lang/Float;	d	lambda$static$1
		p	0		provider
	m	(Layl;)Ljava/lang/Float;	e	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	d	deviation
	f	F	e	min
	f	F	f	max
c	aym	net/minecraft/util/valueproviders/ClampedNormalInt
	m	(FFII)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()I	a	getMinValue
	m	(FFII)Laym;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Lalu;)I	a	sample
		p	1		random
	m	(Lalu;FFFF)I	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Laym;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMaxValue
	m	(Laym;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		provider
	m	()Lays;	c	getType
	m	(Laym;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		provider
	m	(Laym;)Ljava/lang/Float;	d	lambda$static$1
		p	0		provider
	m	(Laym;)Ljava/lang/Float;	e	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	f	deviation
	f	I	g	min_inclusive
	f	I	h	max_inclusive
c	ayn	net/minecraft/util/valueproviders/ConstantFloat
	m	(F)V	<init>	<init>
		p	1		value
	m	()F	a	getMinValue
	m	(F)Layn;	a	of
		p	0		value
	m	(Lalu;)F	a	sample
		p	1		random
	m	(Layn;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Layn;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()F	b	getMaxValue
	m	(Layn;)Layn;	b	lambda$static$2
		p	0		provider
	m	()Layq;	c	getType
	m	(Layn;)Ljava/lang/Float;	c	lambda$static$0
		p	0		provider
	m	()F	d	getValue
	f	Layn;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	d	value
c	ayo	net/minecraft/util/valueproviders/ConstantInt
	m	(I)V	<init>	<init>
		p	1		value
	m	()I	a	getMinValue
	m	(I)Layo;	a	of
		p	0		value
	m	(Lalu;)I	a	sample
		p	1		random
	m	(Layo;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Layo;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	getMaxValue
	m	(Layo;)Layo;	b	lambda$static$2
		p	0		provider
	m	()Lays;	c	getType
	m	(Layo;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		provider
	m	()I	d	getValue
	f	Layo;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	f	value
c	ayp	net/minecraft/util/valueproviders/FloatProvider
	m	()F	a	getMinValue
	m	(FF)Lcom/mojang/serialization/Codec;	a	codec
		p	0		min
		p	1		max
	m	(FFLayp;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
		p	2		provider
	m	(Layp;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Layp;	a	lambda$static$1
		p	0		either
	m	()F	b	getMaxValue
	m	(Layp;)Layp;	b	lambda$static$0
		p	0		provider
	m	()Layq;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	ayq	net/minecraft/util/valueproviders/FloatProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Layq;	a	register
		p	0		id
		p	1		codec
	f	Layq;	a	CONSTANT
	f	Layq;	b	UNIFORM
	f	Layq;	c	CLAMPED_NORMAL
	f	Layq;	d	TRAPEZOID
c	ayr	net/minecraft/util/valueproviders/IntProvider
	m	()I	a	getMinValue
	m	(IILayr;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
		p	2		provider
	m	(Lalu;)I	a	sample
		p	1		random
	m	(Layr;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Layr;	a	lambda$static$1
		p	0		either
	m	()I	b	getMaxValue
	m	(II)Lcom/mojang/serialization/Codec;	b	codec
		p	0		min
		p	1		max
	m	(Layr;)Layr;	b	lambda$static$0
		p	0		provider
	m	()Lays;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NON_NEGATIVE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	POSITIVE_CODEC
c	ays	net/minecraft/util/valueproviders/IntProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lays;	a	register
		p	0		id
		p	1		codec
	f	Lays;	a	CONSTANT
	f	Lays;	b	UNIFORM
	f	Lays;	c	BIASED_TO_BOTTOM
	f	Lays;	d	CLAMPED
	f	Lays;	e	WEIGHTED_LIST
	f	Lays;	f	CLAMPED_NORMAL
c	ayt	net/minecraft/util/valueproviders/MultipliedFloats
	m	([Layu;)V	<init>	<init>
		p	1		multipliers
	m	(Lalu;)F	a	sample
		p	1		random
	f	[Layu;	a	values
c	ayu	net/minecraft/util/valueproviders/SampledFloat
	m	(Lalu;)F	a	sample
		p	1		random
c	ayv	net/minecraft/util/valueproviders/TrapezoidFloat
	m	(FFF)V	<init>	<init>
		p	1		min
		p	2		max
		p	3		plateau
	m	()F	a	getMinValue
	m	(FFF)Layv;	a	of
		p	0		min
		p	1		max
		p	2		plateau
	m	(Lalu;)F	a	sample
		p	1		random
	m	(Layv;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()F	b	getMaxValue
	m	(Layv;)Ljava/lang/Float;	b	lambda$static$2
		p	0		provider
	m	()Layq;	c	getType
	m	(Layv;)Ljava/lang/Float;	c	lambda$static$1
		p	0		provider
	m	(Layv;)Ljava/lang/Float;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	min
	f	F	d	max
	f	F	e	plateau
c	ayw	net/minecraft/util/valueproviders/UniformFloat
	m	(FF)V	<init>	<init>
		p	1		min
		p	2		max
	m	()F	a	getMinValue
	m	(Lalu;)F	a	sample
		p	1		random
	m	(Layw;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()F	b	getMaxValue
	m	(FF)Layw;	b	of
		p	0		min
		p	1		max
	m	(Layw;)Ljava/lang/Float;	b	lambda$static$1
		p	0		provider
	m	()Layq;	c	getType
	m	(Layw;)Ljava/lang/Float;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minInclusive
	f	F	d	maxExclusive
c	ayx	net/minecraft/util/valueproviders/UniformInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Layx;	a	of
		p	0		min
		p	1		max
	m	(Lalu;)I	a	sample
		p	1		random
	m	(Layx;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Layx;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		provider
	m	()Lays;	c	getType
	m	(Layx;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	ayy	net/minecraft/util/valueproviders/WeightedListInt
	m	(Laxw;)V	<init>	<init>
		p	1		weightedList
	m	()I	a	getMinValue
	m	(Lalu;)I	a	sample
		p	1		random
	m	(Layy;)Laxw;	a	lambda$static$0
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	getMaxValue
	m	()Lays;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laxw;	b	distribution
	f	I	f	minValue
	f	I	g	maxValue
c	ayz	net/minecraft/util/valueproviders/package-info
c	aza	net/minecraft/util/worldupdate/WorldUpgrader
	m	(Ldqt$c;Lcom/mojang/datafixers/DataFixer;Ldap;Z)V	<init>	<init>
		p	1		session
		p	2		dataFixer
		p	3		generatorOptions
		p	4		eraseCache
	m	()V	a	cancel
	m	(Laai;)F	a	dimensionProgress
		p	1		world
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	lambda$getAllChunkPos$2
		p	0		directory
		p	1		name
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$new$0
		p	1		thread
		p	2		throwable
	m	()Z	b	isFinished
	m	(Laai;)Ljava/util/List;	b	getAllChunkPos
		p	1		world
	m	()Lcom/google/common/collect/ImmutableSet;	c	levels
	m	()F	d	getProgress
	m	()I	e	getTotalChunks
	m	()I	f	getConverted
	m	()I	g	getSkipped
	m	()Lrm;	h	getStatus
	m	()V	i	work
	m	()Ldqp;	j	lambda$work$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	THREAD_FACTORY
	f	Ldap;	c	worldGenSettings
	f	Z	d	eraseCache
	f	Ldqt$c;	e	levelStorage
	f	Ljava/lang/Thread;	f	thread
	f	Lcom/mojang/datafixers/DataFixer;	g	dataFixer
	f	Z	h	running
	f	Z	i	finished
	f	F	j	progress
	f	I	k	totalChunks
	f	I	l	converted
	f	I	m	skipped
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	n	progressMap
	f	Lrm;	o	status
	f	Ljava/util/regex/Pattern;	p	REGEX
	f	Ldqp;	q	overworldDataStorage
c	azb	net/minecraft/util/worldupdate/package-info
c	azc	net/minecraft/world/BossEvent
	m	(Ljava/util/UUID;Lrm;Lazc$a;Lazc$b;)V	<init>	<init>
		p	1		uuid
		p	2		name
		p	3		color
		p	4		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Lazc$a;)V	a	setColor
		p	1		color
	m	(Lazc$b;)V	a	setOverlay
		p	1		style
	m	(Lrm;)V	a	setName
		p	1		name
	m	(Z)Lazc;	a	setDarkenScreen
		p	1		darkenSky
	m	(Z)Lazc;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lazc;	c	setCreateWorldFog
		p	1		thickenFog
	m	()Ljava/util/UUID;	i	getId
	m	()Lrm;	j	getName
	m	()F	k	getProgress
	m	()Lazc$a;	l	getColor
	m	()Lazc$b;	m	getOverlay
	m	()Z	n	shouldDarkenScreen
	m	()Z	o	shouldPlayBossMusic
	m	()Z	p	shouldCreateWorldFog
	f	Lrm;	a	name
	f	F	b	progress
	f	Lazc$a;	c	color
	f	Lazc$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playBossMusic
	f	Z	g	createWorldFog
	f	Ljava/util/UUID;	h	id
c	azc$a	net/minecraft/world/BossEvent$BossBarColor
	m	(Ljava/lang/String;ILjava/lang/String;Lp;)V	<init>	<init>
		p	3		name
		p	4		format
	m	()Lp;	a	getFormatting
	m	(Ljava/lang/String;)Lazc$a;	a	byName
		p	0		name
	m	()Ljava/lang/String;	b	getName
	m	()[Lazc$a;	c	$values
	f	Lazc$a;	a	PINK
	f	Lazc$a;	b	BLUE
	f	Lazc$a;	c	RED
	f	Lazc$a;	d	GREEN
	f	Lazc$a;	e	YELLOW
	f	Lazc$a;	f	PURPLE
	f	Lazc$a;	g	WHITE
	f	Ljava/lang/String;	h	name
	f	Lp;	i	formatting
	f	[Lazc$a;	j	$VALUES
c	azc$b	net/minecraft/world/BossEvent$BossBarOverlay
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lazc$b;	a	byName
		p	0		name
	m	()[Lazc$b;	b	$values
	f	Lazc$b;	a	PROGRESS
	f	Lazc$b;	b	NOTCHED_6
	f	Lazc$b;	c	NOTCHED_10
	f	Lazc$b;	d	NOTCHED_12
	f	Lazc$b;	e	NOTCHED_20
	f	Ljava/lang/String;	f	name
	f	[Lazc$b;	g	$VALUES
c	azd	net/minecraft/world/Clearable
	m	()V	a	clearContent
	m	(Ljava/lang/Object;)V	a	tryClear
		p	0		o
c	aze	net/minecraft/world/CompoundContainer
	m	(Lazf;Lazf;)V	<init>	<init>
		p	1		first
		p	2		second
	m	()I	P_	getMaxStackSize
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lazf;)Z	a	contains
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcaa;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()Z	c	isEmpty
	m	(Lbtf;)V	c_	stopOpen
		p	1		player
	m	(Lbtf;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	f	Lazf;	b	container1
	f	Lazf;	c	container2
c	azf	net/minecraft/world/Container
	m	()I	P_	getMaxStackSize
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Ljava/util/Set;)Z	a	hasAnyOf
		p	1		items
	m	(Ljava/util/Set;Lcaa;)Z	a	lambda$hasAnyOf$0
		p	1		stack
	m	(Lbzw;)I	a_	countItem
		p	1		item
	m	(Ljava/util/function/Predicate;)Z	a_	hasAnyMatching
		p	1		predicate
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcaa;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()Z	c	isEmpty
	m	(Lbtf;)V	c_	stopOpen
		p	1		player
	m	(Lbtf;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	f	I	j_	LARGE_MAX_STACK_SIZE
c	azg	net/minecraft/world/ContainerHelper
	m	(Lazf;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		inventory
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Lcaa;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		stack
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Ljava/util/List;I)Lcaa;	a	takeItem
		p	0		stacks
		p	1		slot
	m	(Ljava/util/List;II)Lcaa;	a	removeItem
		p	0		stacks
		p	1		slot
		p	2		amount
	m	(Lpj;Lhi;)Lpj;	a	saveAllItems
		p	0		nbt
		p	1		stacks
	m	(Lpj;Lhi;Z)Lpj;	a	saveAllItems
		p	0		nbt
		p	1		stacks
		p	2		setIfEmpty
	m	(Lpj;Lhi;)V	b	loadAllItems
		p	0		nbt
		p	1		stacks
c	azh	net/minecraft/world/ContainerListener
	m	(Lazf;)V	a	containerChanged
		p	1		sender
c	azi	net/minecraft/world/Containers
	m	(Lcga;DDDLazf;)V	a	dropContents
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		inventory
	m	(Lcga;DDDLcaa;)V	a	dropItemStack
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		stack
	m	(Lcga;Lbaq;Lazf;)V	a	dropContents
		p	0		world
		p	1		entity
		p	2		inventory
	m	(Lcga;Lgt;Lazf;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		inventory
	m	(Lcga;Lgt;Lcaa;)V	a	lambda$dropContents$0
		p	2		stack
	m	(Lcga;Lgt;Lhi;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		stacks
c	azj	net/minecraft/world/Difficulty
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lazj;	a	byId
		p	0		ordinal
	m	(Ljava/lang/String;)Lazj;	a	byName
		p	0		name
	m	()Lrm;	b	getDisplayName
	m	(I)[Lazj;	b	lambda$static$0
	m	()Ljava/lang/String;	c	getKey
	m	()[Lazj;	d	$values
	f	Lazj;	a	PEACEFUL
	f	Lazj;	b	EASY
	f	Lazj;	c	NORMAL
	f	Lazj;	d	HARD
	f	[Lazj;	e	BY_ID
	f	I	f	id
	f	Ljava/lang/String;	g	key
	f	[Lazj;	h	$VALUES
c	azk	net/minecraft/world/DifficultyInstance
	m	(Lazj;JJF)V	<init>	<init>
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()Lazj;	a	getDifficulty
	m	(F)Z	a	isHarderThan
		p	1		difficulty
	m	(Lazj;JJF)F	a	calculateDifficulty
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()F	b	getEffectiveDifficulty
	m	()Z	c	isHard
	m	()F	d	getSpecialMultiplier
	f	F	a	DIFFICULTY_TIME_GLOBAL_OFFSET
	f	F	b	MAX_DIFFICULTY_TIME_GLOBAL
	f	F	c	MAX_DIFFICULTY_TIME_LOCAL
	f	Lazj;	d	base
	f	F	e	effectiveDifficulty
c	azl	net/minecraft/world/InteractionHand
	m	()[Lazl;	a	$values
	f	Lazl;	a	MAIN_HAND
	f	Lazl;	b	OFF_HAND
	f	[Lazl;	c	$VALUES
c	azm	net/minecraft/world/InteractionResult
	m	()Z	a	consumesAction
	m	(Z)Lazm;	a	sidedSuccess
		p	0		swingHand
	m	()Z	b	shouldSwing
	m	()Z	c	shouldAwardStats
	m	()[Lazm;	d	$values
	f	Lazm;	a	SUCCESS
	f	Lazm;	b	CONSUME
	f	Lazm;	c	CONSUME_PARTIAL
	f	Lazm;	d	PASS
	f	Lazm;	e	FAIL
	f	[Lazm;	f	$VALUES
c	azn	net/minecraft/world/InteractionResultHolder
	m	(Lazm;Ljava/lang/Object;)V	<init>	<init>
		p	1		result
		p	2		value
	m	()Lazm;	a	getResult
	m	(Ljava/lang/Object;)Lazn;	a	success
		p	0		data
	m	(Ljava/lang/Object;Z)Lazn;	a	sidedSuccess
		p	0		data
		p	1		swingHand
	m	()Ljava/lang/Object;	b	getObject
	m	(Ljava/lang/Object;)Lazn;	b	consume
		p	0		data
	m	(Ljava/lang/Object;)Lazn;	c	pass
		p	0		data
	m	(Ljava/lang/Object;)Lazn;	d	fail
		p	0		data
	f	Lazm;	a	result
	f	Ljava/lang/Object;	b	object
c	azo	net/minecraft/world/LockCode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	(Lcaa;)Z	a	unlocksWith
		p	1		stack
	m	(Lpj;)V	a	addToTag
		p	1		nbt
	m	(Lpj;)Lazo;	b	fromTag
		p	0		nbt
	f	Lazo;	a	NO_LOCK
	f	Ljava/lang/String;	b	TAG_LOCK
	f	Ljava/lang/String;	c	key
c	azp	net/minecraft/world/MenuProvider
	m	()Lrm;	C_	getDisplayName
c	azq	net/minecraft/world/Nameable
	m	()Lrm;	C_	getDisplayName
	m	()Lrm;	X	getName
	m	()Z	Y	hasCustomName
	m	()Lrm;	Z	getCustomName
c	azr	net/minecraft/world/SimpleContainer
	m	(I)V	<init>	<init>
		p	1		size
	m	([Lcaa;)V	<init>	<init>
		p	1		items
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lazh;)V	a	addListener
		p	1		listener
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtj;)V	a	fillStackedContents
		p	1		finder
	m	(Lbzw;I)Lcaa;	a	removeItemType
		p	1		item
		p	2		count
	m	(Lcaa;)Lcaa;	a	addItem
		p	1		stack
	m	(Lcaa;Lcaa;)V	a	moveItemsBetweenStacks
		p	1		source
		p	2		target
	m	(Lpp;)V	a	fromTag
		p	1		nbtList
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(Lazh;)V	b	removeListener
		p	1		listener
	m	(Lcaa;)Z	b	canAddItem
		p	1		stack
	m	()Z	c	isEmpty
	m	(Lcaa;)V	c	moveItemToEmptySlots
		p	1		stack
	m	(Lcaa;)V	d	moveItemToOccupiedSlotsWithSameType
		p	1		stack
	m	()V	e	setChanged
	m	(Lcaa;)Z	e	lambda$toString$1
		p	0		stack
	m	()Ljava/util/List;	f	removeAllItems
	m	(Lcaa;)Z	f	lambda$removeAllItems$0
		p	0		stack
	m	()Lpp;	g	createTag
	f	I	b	size
	f	Lhi;	c	items
	f	Ljava/util/List;	d	listeners
c	azs	net/minecraft/world/SimpleMenuProvider
	m	(Lbws;Lrm;)V	<init>	<init>
		p	1		baseFactory
		p	2		name
	m	()Lrm;	C_	getDisplayName
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	f	Lrm;	a	title
	f	Lbws;	b	menuConstructor
c	azt	net/minecraft/world/WorldlyContainer
	m	(ILcaa;Lgy;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgy;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcaa;Lgy;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	azu	net/minecraft/world/WorldlyContainerHolder
	m	(Lcur;Lcgb;Lgt;)Lazt;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
c	azv	net/minecraft/world/damagesource/BadRespawnPointDamage
	m	(Lbbf;)Lrm;	a	getLocalizedDeathMessage
		p	1		entity
	m	(Lrv;)Lrv;	a	lambda$getLocalizedDeathMessage$0
		p	0		style
c	azw	net/minecraft/world/damagesource/CombatEntry
	m	(Lazz;IFFLjava/lang/String;F)V	<init>	<init>
		p	1		damageSource
		p	2		entityAge
		p	3		entityOriginalHealth
		p	4		damage
		p	5		fallDeathSuffix
		p	6		fallDistance
	m	()Lazz;	a	getSource
	m	()I	b	getTime
	m	()F	c	getDamage
	m	()F	d	getHealthBeforeDamage
	m	()F	e	getHealthAfterDamage
	m	()Z	f	isCombatRelated
	m	()Ljava/lang/String;	g	getLocation
	m	()Lrm;	h	getAttackerName
	m	()Lbaq;	i	getAttacker
	m	()F	j	getFallDistance
	f	Lazz;	a	source
	f	I	b	time
	f	F	c	damage
	f	F	d	health
	f	Ljava/lang/String;	e	location
	f	F	f	fallDistance
c	azx	net/minecraft/world/damagesource/CombatRules
	m	(FF)F	a	getDamageAfterMagicAbsorb
		p	0		damageDealt
		p	1		protection
	m	(FFF)F	a	getDamageAfterAbsorb
		p	0		damage
		p	1		armor
		p	2		armorToughness
	f	F	a	MAX_ARMOR
	f	F	b	ARMOR_PROTECTION_DIVIDER
	f	F	c	BASE_ARMOR_TOUGHNESS
	f	F	d	MIN_ARMOR_RATIO
	f	I	e	NUM_ARMOR_ITEMS
c	azy	net/minecraft/world/damagesource/CombatTracker
	m	(Lbbf;)V	<init>	<init>
		p	1		entity
	m	()V	a	prepareForDamage
	m	(Lazw;)Ljava/lang/String;	a	getFallLocation
		p	1		damageRecord
	m	(Lazz;FF)V	a	recordDamage
		p	1		damageSource
		p	2		originalHealth
		p	3		damage
	m	()Lrm;	b	getDeathMessage
	m	()Lbbf;	c	getKiller
	m	()Z	d	isTakingDamage
	m	()Z	e	isInCombat
	m	()I	f	getCombatDuration
	m	()V	g	recheckStatus
	m	()Lbbf;	h	getMob
	m	()Lazw;	i	getLastEntry
	m	()I	j	getKillerId
	m	()Lazw;	k	getMostSignificantFall
	m	()V	l	resetPreparedStatus
	f	I	a	RESET_DAMAGE_STATUS_TIME
	f	I	b	RESET_COMBAT_STATUS_TIME
	f	Ljava/util/List;	c	entries
	f	Lbbf;	d	mob
	f	I	e	lastDamageTime
	f	I	f	combatStartTime
	f	I	g	combatEndTime
	f	Z	h	inCombat
	f	Z	i	takingDamage
	f	Ljava/lang/String;	j	nextLocation
c	azz	net/minecraft/world/damagesource/DamageSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Lazz;	A	setMagic
	m	()Z	B	isFall
	m	()Lazz;	C	setIsFall
	m	()Z	D	isCreativePlayer
	m	()Ldvt;	E	getSourcePosition
	m	()Lazz;	a	badRespawnPointExplosion
	m	(Lbaq;)Lazz;	a	thorns
		p	0		attacker
	m	(Lbaq;Lbaq;)Lazz;	a	trident
		p	0		trident
		p	1		attacker
	m	(Lbaq;Lbbf;)Lazz;	a	indirectMobAttack
		p	0		projectile
		p	1		attacker
	m	(Lbbf;)Lrm;	a	getLocalizedDeathMessage
		p	1		entity
	m	(Lbtf;)Lazz;	a	playerAttack
		p	0		attacker
	m	(Lbtl;Lbaq;)Lazz;	a	arrow
		p	0		projectile
		p	1		attacker
	m	(Lbtr;Lbaq;)Lazz;	a	fireball
		p	0		fireball
		p	1		attacker
	m	(Lbts;Lbaq;)Lazz;	a	fireworks
		p	0		firework
		p	1		attacker
	m	(Lbuk;Lbaq;)Lazz;	a	witherSkull
		p	0		witherSkull
		p	1		attacker
	m	(Lcfs;)Lazz;	a	explosion
		p	0		explosion
	m	()Z	b	isProjectile
	m	(Lbaq;)Lazz;	b	sonicBoom
		p	0		attacker
	m	(Lbaq;Lbaq;)Lazz;	b	thrown
		p	0		projectile
		p	1		attacker
	m	(Lbbf;)Lazz;	b	sting
		p	0		attacker
	m	()Lazz;	c	setProjectile
	m	(Lbaq;Lbaq;)Lazz;	c	indirectMagic
		p	0		magic
		p	1		attacker
	m	(Lbbf;)Lazz;	c	mobAttack
		p	0		attacker
	m	()Z	d	isExplosion
	m	(Lbbf;)Lazz;	d	explosion
		p	0		attacker
	m	()Lazz;	e	setExplosion
	m	()Z	f	isBypassArmor
	m	()Z	g	isDamageHelmet
	m	()F	h	getFoodExhaustion
	m	()Z	i	isBypassInvul
	m	()Z	j	isBypassMagic
	m	()Z	k	isBypassEnchantments
	m	()Lbaq;	l	getDirectEntity
	m	()Lbaq;	m	getEntity
	m	()Lazz;	n	bypassArmor
	m	()Lazz;	o	damageHelmet
	m	()Lazz;	p	bypassInvul
	m	()Lazz;	q	bypassMagic
	m	()Lazz;	r	bypassEnchantments
	m	()Lazz;	s	setIsFire
	m	()Lazz;	t	setNoAggro
	m	()Z	u	isFire
	m	()Z	v	isNoAggro
	m	()Ljava/lang/String;	w	getMsgId
	m	()Lazz;	x	setScalesWithDifficulty
	m	()Z	y	scalesWithDifficulty
	m	()Z	z	isMagic
	f	Z	A	bypassArmor
	f	Z	B	bypassInvul
	f	Z	C	bypassMagic
	f	Z	D	bypassEnchantments
	f	F	E	exhaustion
	f	Z	F	isFireSource
	f	Z	G	isProjectile
	f	Z	H	scalesWithDifficulty
	f	Z	I	isMagic
	f	Z	J	isExplosion
	f	Z	K	isFall
	f	Z	L	noAggro
	f	Lazz;	a	IN_FIRE
	f	Lazz;	b	LIGHTNING_BOLT
	f	Lazz;	c	ON_FIRE
	f	Lazz;	d	LAVA
	f	Lazz;	e	HOT_FLOOR
	f	Lazz;	f	IN_WALL
	f	Lazz;	g	CRAMMING
	f	Lazz;	h	DROWN
	f	Lazz;	i	STARVE
	f	Lazz;	j	CACTUS
	f	Lazz;	k	FALL
	f	Lazz;	l	FLY_INTO_WALL
	f	Lazz;	m	OUT_OF_WORLD
	f	Lazz;	n	GENERIC
	f	Lazz;	o	MAGIC
	f	Lazz;	p	WITHER
	f	Lazz;	q	ANVIL
	f	Lazz;	r	FALLING_BLOCK
	f	Lazz;	s	DRAGON_BREATH
	f	Lazz;	t	DRY_OUT
	f	Lazz;	u	SWEET_BERRY_BUSH
	f	Lazz;	v	FREEZE
	f	Lazz;	w	FALLING_STALACTITE
	f	Lazz;	x	STALAGMITE
	f	Ljava/lang/String;	y	msgId
	f	Z	z	damageHelmet
c	baa	net/minecraft/world/damagesource/EntityDamageSource
	m	(Ljava/lang/String;Lbaq;)V	<init>	<init>
		p	1		name
		p	2		source
	m	()Ldvt;	E	getSourcePosition
	m	()Lbaa;	F	setThorns
	m	()Z	G	isThorns
	m	(Lbbf;)Lrm;	a	getLocalizedDeathMessage
		p	1		entity
	m	()Lbaq;	m	getEntity
	m	()Z	y	scalesWithDifficulty
	f	Z	A	isThorns
	f	Lbaq;	z	entity
c	bab	net/minecraft/world/damagesource/IndirectEntityDamageSource
	m	(Ljava/lang/String;Lbaq;Lbaq;)V	<init>	<init>
		p	1		name
		p	2		projectile
		p	3		attacker
	m	(Lbbf;)Lrm;	a	getLocalizedDeathMessage
		p	1		entity
	m	()Lbaq;	l	getDirectEntity
	m	()Lbaq;	m	getEntity
	f	Lbaq;	A	owner
c	bac	net/minecraft/world/damagesource/package-info
c	bad	net/minecraft/world/effect/AbsoptionMobEffect
	m	(Lbai;I)V	<init>	<init>
		p	2		color
	m	(Lbbf;Lbcd;I)V	a	removeAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
	m	(Lbbf;Lbcd;I)V	b	addAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
c	bae	net/minecraft/world/effect/AttackDamageMobEffect
	m	(Lbai;ID)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		modifier
	m	(ILbce;)D	a	getAttributeModifierValue
		p	1		amplifier
		p	2		modifier
	f	D	a	multiplier
c	baf	net/minecraft/world/effect/HealthBoostMobEffect
	m	(Lbai;I)V	<init>	<init>
		p	2		color
	m	(Lbbf;Lbcd;I)V	a	removeAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
c	bag	net/minecraft/world/effect/InstantenousMobEffect
	m	(Lbai;I)V	<init>	<init>
		p	2		color
	m	()Z	a	isInstantenous
	m	(II)Z	a	isDurationEffectTick
		p	1		duration
		p	2		amplifier
c	bah	net/minecraft/world/effect/MobEffect
	m	(Lbai;I)V	<init>	<init>
		p	2		color
	m	()Z	a	isInstantenous
	m	(I)Lbah;	a	byId
		p	0		rawId
	m	(II)Z	a	isDurationEffectTick
		p	1		duration
		p	2		amplifier
	m	(ILbce;)D	a	getAttributeModifierValue
		p	1		amplifier
		p	2		modifier
	m	(Lbah;)I	a	getId
		p	0		type
	m	(Lbaq;Lbaq;Lbbf;ID)V	a	applyInstantenousEffect
		p	1		source
		p	2		attacker
		p	3		target
		p	4		amplifier
		p	5		proximity
	m	(Lbbf;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	m	(Lbbf;Lbcd;I)V	a	removeAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
	m	(Lbcb;Ljava/lang/String;DLbce$a;)Lbah;	a	addAttributeModifier
		p	1		attribute
		p	2		uuid
		p	3		amount
		p	5		operation
	m	(Ljava/util/function/Supplier;)Lbah;	a	setFactorDataFactory
	m	()Ljava/util/Optional;	b	createFactorData
	m	(Lbah;)I	b	getIdFromNullable
	m	(Lbbf;Lbcd;I)V	b	addAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
	m	()Ljava/lang/String;	c	getOrCreateDescriptionId
	m	()Ljava/lang/String;	d	getDescriptionId
	m	()Lrm;	e	getDisplayName
	m	()Lbai;	f	getCategory
	m	()I	g	getColor
	m	()Ljava/util/Map;	h	getAttributeModifiers
	m	()Z	i	isBeneficial
	m	()Lbaj$a;	j	lambda$new$0
	f	Ljava/util/Map;	a	attributeModifiers
	f	Lbai;	b	category
	f	I	c	color
	f	Ljava/lang/String;	d	descriptionId
	f	Ljava/util/function/Supplier;	e	factorDataFactory
c	bai	net/minecraft/world/effect/MobEffectCategory
	m	(Ljava/lang/String;ILp;)V	<init>	<init>
		p	3		format
	m	()Lp;	a	getTooltipFormatting
	m	()[Lbai;	b	$values
	f	Lbai;	a	BENEFICIAL
	f	Lbai;	b	HARMFUL
	f	Lbai;	c	NEUTRAL
	f	Lp;	d	tooltipFormatting
	f	[Lbai;	e	$VALUES
c	baj	net/minecraft/world/effect/MobEffectInstance
	m	(Lbah;)V	<init>	<init>
		p	1		type
	m	(Lbah;I)V	<init>	<init>
		p	1		type
		p	2		duration
	m	(Lbah;II)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
	m	(Lbah;IIZZ)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		visible
	m	(Lbah;IIZZZ)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
	m	(Lbah;IIZZZLbaj;Ljava/util/Optional;)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
		p	7		hiddenEffect
		p	8		factorCalculationData
	m	(Lbaj;)V	<init>	<init>
		p	1		instance
	m	()Ljava/util/Optional;	a	getFactorData
	m	(ILbaj$a;)V	a	lambda$update$0
		p	2		factorCalculationData
	m	(Lbah;Lpj;)Lbaj;	a	loadSpecifiedEffect
		p	0		type
		p	1		nbt
	m	(Lbaj$a;)V	a	lambda$tick$1
		p	1		factorCalculationData
	m	(Lbaj;)V	a	setDetailsFrom
		p	1		that
	m	(Lbbf;)V	a	applyEffect
		p	1		entity
	m	(Lbbf;Ljava/lang/Runnable;)Z	a	tick
		p	1		entity
		p	2		overwriteCallback
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lpj;Lbaj$a;)V	a	lambda$writeDetailsTo$3
		p	1		factorCalculationData
	m	(Lpj;Lqc;)V	a	lambda$writeDetailsTo$2
		p	1		factorCalculationDataNbt
	m	(Z)V	a	setNoCounter
		p	1		permanent
	m	()Lbah;	b	getEffect
	m	(Lbaj;)Z	b	update
		p	1		that
	m	(Lpj;)Lbaj;	b	load
		p	0		nbt
	m	()I	c	getDuration
	m	(Lbaj;)I	c	compareTo
	m	(Lpj;)V	c	writeDetailsTo
		p	1		nbt
	m	()I	d	getAmplifier
	m	()Z	e	isAmbient
	m	()Z	f	isVisible
	m	()Z	g	showIcon
	m	()Ljava/lang/String;	h	getDescriptionId
	m	()Z	i	isNoCounter
	m	()I	j	tickDownDuration
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbah;	b	effect
	f	I	c	duration
	f	I	d	amplifier
	f	Z	e	ambient
	f	Z	f	noCounter
	f	Z	g	visible
	f	Z	h	showIcon
	f	Lbaj;	i	hiddenEffect
	f	Ljava/util/Optional;	j	factorData
c	baj$a	net/minecraft/world/effect/MobEffectInstance$FactorData
	m	(I)V	<init>	<init>
		p	1		paddingDuration
	m	(IFFFIFZ)V	<init>	<init>
		p	1		paddingDuration
		p	2		factorTarget
	m	(Lbaj$a;)Ljava/lang/Boolean;	a	lambda$static$6
		p	0		data
	m	(Lbaj;)V	a	update
		p	1		instance
	m	(Lbbf;F)F	a	getFactor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Lbaj$a;)Ljava/lang/Float;	b	lambda$static$5
		p	0		data
	m	(Lbaj$a;)Ljava/lang/Integer;	c	lambda$static$4
		p	0		data
	m	(Lbaj$a;)Ljava/lang/Float;	d	lambda$static$3
		p	0		data
	m	(Lbaj$a;)Ljava/lang/Float;	e	lambda$static$2
		p	0		data
	m	(Lbaj$a;)Ljava/lang/Float;	f	lambda$static$1
	m	(Lbaj$a;)Ljava/lang/Integer;	g	lambda$static$0
		p	0		data
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	paddingDuration
	f	F	c	factorStart
	f	F	d	factorTarget
	f	F	e	factorCurrent
	f	I	f	effectChangedTimestamp
	f	F	g	factorPreviousFrame
	f	Z	h	hadEffectLastTick
c	bak	net/minecraft/world/effect/MobEffectUtil
	m	(Lafo;Lbaq;Ldvt;DLbaj;I)Ljava/util/List;	a	addEffectToPlayersAround
		p	0		world
		p	1		entity
		p	2		origin
		p	3		range
		p	5		statusEffectInstance
		p	6		duration
	m	(Lbaj;F)Ljava/lang/String;	a	formatDuration
		p	0		effect
		p	1		multiplier
	m	(Lbaj;Lbaq;Lafp;)V	a	lambda$addEffectToPlayersAround$1
		p	2		player
	m	(Lbaq;Ldvt;DLbah;Lbaj;ILafp;)Z	a	lambda$addEffectToPlayersAround$0
		p	7		player
	m	(Lbbf;)Z	a	hasDigSpeed
		p	0		entity
	m	(Lbbf;)I	b	getDigSpeedAmplification
		p	0		entity
	m	(Lbbf;)Z	c	hasWaterBreathing
		p	0		entity
c	bal	net/minecraft/world/effect/MobEffects
	m	()Lbaj$a;	a	lambda$static$0
	m	(ILjava/lang/String;Lbah;)Lbah;	a	register
		p	0		rawId
		p	1		id
		p	2		entry
	f	Lbah;	A	UNLUCK
	f	Lbah;	B	SLOW_FALLING
	f	Lbah;	C	CONDUIT_POWER
	f	Lbah;	D	DOLPHINS_GRACE
	f	Lbah;	E	BAD_OMEN
	f	Lbah;	F	HERO_OF_THE_VILLAGE
	f	Lbah;	G	DARKNESS
	f	I	H	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	f	Lbah;	a	MOVEMENT_SPEED
	f	Lbah;	b	MOVEMENT_SLOWDOWN
	f	Lbah;	c	DIG_SPEED
	f	Lbah;	d	DIG_SLOWDOWN
	f	Lbah;	e	DAMAGE_BOOST
	f	Lbah;	f	HEAL
	f	Lbah;	g	HARM
	f	Lbah;	h	JUMP
	f	Lbah;	i	CONFUSION
	f	Lbah;	j	REGENERATION
	f	Lbah;	k	DAMAGE_RESISTANCE
	f	Lbah;	l	FIRE_RESISTANCE
	f	Lbah;	m	WATER_BREATHING
	f	Lbah;	n	INVISIBILITY
	f	Lbah;	o	BLINDNESS
	f	Lbah;	p	NIGHT_VISION
	f	Lbah;	q	HUNGER
	f	Lbah;	r	WEAKNESS
	f	Lbah;	s	POISON
	f	Lbah;	t	WITHER
	f	Lbah;	u	HEALTH_BOOST
	f	Lbah;	v	ABSORPTION
	f	Lbah;	w	SATURATION
	f	Lbah;	x	GLOWING
	f	Lbah;	y	LEVITATION
	f	Lbah;	z	LUCK
c	bal$1	net/minecraft/world/effect/MobEffects$1
	m	(Lbai;I)V	<init>	<init>
		p	2		color
	m	(II)Z	a	isDurationEffectTick
		p	1		duration
		p	2		amplifier
	m	(Lbbf;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bam	net/minecraft/world/effect/package-info
c	ban	net/minecraft/world/entity/AgeableMob
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	ageUp
		p	1		age
		p	2		overGrow
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(I)V	a_	ageUp
		p	1		age
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	b_	setAge
		p	1		age
	m	(I)I	c	getSpeedUpSecondsWhenFeeding
		p	0		breedingAge
	m	()Z	g	canBreed
	m	()I	j	getAge
	m	()V	n	ageBoundaryReached
	m	()V	w_	aiStep
	m	()Z	y_	isBaby
	f	I	b	BABY_START_AGE
	f	Lzr;	bX	DATA_BABY_ID
	f	I	bY	FORCED_AGE_PARTICLE_TICKS
	f	I	c	age
	f	I	d	forcedAge
	f	I	e	forcedAgeTimer
c	ban$a	net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	m	(F)V	<init>	<init>
		p	1		babyChance
	m	(Z)V	<init>	<init>
		p	1		babyAllowed
	m	(ZF)V	<init>	<init>
		p	1		babyAllowed
		p	2		babyChance
	m	()I	a	getGroupSize
	m	()V	b	increaseGroupSizeByOne
	m	()Z	c	isShouldSpawnBaby
	m	()F	d	getBabySpawnChance
	f	I	a	groupSize
	f	Z	b	shouldSpawnBaby
	f	F	c	babySpawnChance
c	bao	net/minecraft/world/entity/AnimationState
	m	()V	a	stop
	m	(FF)V	a	updateTime
		p	1		animationProgress
		p	2		speedMultiplier
	m	(I)V	a	start
		p	1		age
	m	(Ljava/util/function/Consumer;)V	a	ifStarted
		p	1		consumer
	m	()J	b	getAccumulatedTime
	m	(I)V	b	startIfStopped
		p	1		age
	m	()Z	c	isStarted
	f	J	a	STOPPED
	f	J	b	lastTime
	f	J	c	accumulatedTime
c	bap	net/minecraft/world/entity/AreaEffectCloud
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lso;	S	getAddEntityPacket
	m	(F)V	a	setRadius
		p	1		radius
	m	(I)V	a	setFixedColor
		p	1		rgb
	m	(Lbaj;)V	a	addEffect
		p	1		effect
	m	(Lbbf;)V	a	setOwner
		p	1		owner
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lcbv;)V	a	setPotion
		p	1		potion
	m	(Lim;)V	a	setParticle
		p	1		particle
	m	(Ljava/util/Map$Entry;)Z	a	lambda$tick$0
		p	1		entry
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Z)V	a	setWaiting
		p	1		waiting
	m	()V	a_	defineSynchedData
	m	(F)V	b	setRadiusOnUse
		p	1		radiusOnUse
	m	(I)V	b	setDuration
		p	1		duration
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(F)V	c	setRadiusPerTick
		p	1		radiusGrowth
	m	(I)V	c	setDurationOnUse
		p	1		durationOnUse
	m	()Ldpe;	c_	getPistonPushReaction
	m	(I)V	d	setWaitTime
		p	1		waitTime
	m	()F	h	getRadius
	m	()I	i	getColor
	m	()Lim;	j	getParticle
	m	()V	k	tick
	m	()Z	l	isWaiting
	m	()I	n	getDuration
	m	()F	o	getRadiusOnUse
	m	()F	q	getRadiusPerTick
	m	()I	r	getDurationOnUse
	m	()I	s	getWaitTime
	m	()Lbbf;	t	getOwner
	m	()Lcbv;	u	getPotion
	m	()V	w	updateColor
	m	()V	z_	refreshDimensions
	f	Lbbf;	aA	owner
	f	Ljava/util/UUID;	aB	ownerUUID
	f	Lzr;	ao	DATA_PARTICLE
	f	F	ap	MAX_RADIUS
	f	Lcbv;	aq	potion
	f	Ljava/util/List;	ar	effects
	f	Ljava/util/Map;	as	victims
	f	I	at	duration
	f	I	au	waitTime
	f	I	av	reapplicationDelay
	f	Z	aw	fixedColor
	f	I	ax	durationOnUse
	f	F	ay	radiusOnUse
	f	F	az	radiusPerTick
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	TIME_BETWEEN_APPLICATIONS
	f	Lzr;	d	DATA_RADIUS
	f	Lzr;	e	DATA_COLOR
	f	Lzr;	f	DATA_WAITING
c	baq	net/minecraft/world/entity/Entity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	B	getPermissionLevel
	m	()Z	B_	isSpectator
	m	()Lrm;	C_	getDisplayName
	m	()Z	G_	shouldInformAdmins
	m	()V	H	processPortalCooldown
	m	()Lso;	S	getAddEntityPacket
	m	()Lcga;	W	getLevel
	m	()Lrm;	X	getName
	m	()Z	Y	hasCustomName
	m	()Lrm;	Z	getCustomName
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DD)V	a	turn
		p	1		cursorDeltaX
		p	3		cursorDeltaY
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDFF)V	a	absMoveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(DDF)Ldvt;	a	getCollisionHorizontalEscapeVector
		p	0		vehicleWidth
		p	2		passengerWidth
		p	4		passengerYaw
	m	(DFZ)Ldvr;	a	pick
		p	1		maxDistance
		p	3		tickDelta
		p	4		includeFluids
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(F)Lgt;	a	getOnPos
		p	1		offset
	m	(FF)V	a	setRot
		p	1		yaw
		p	2		pitch
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(FLdvt;)V	a	moveRelative
		p	1		speed
		p	2		movementInput
	m	(Lafo;)Ldpw;	a	findDimensionEntryPoint
		p	1		destination
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lafo;Lbbf;)Z	a	wasKilled
		p	1		world
		p	2		other
	m	(Lafo;Lgt;ZLcwh;)Ljava/util/Optional;	a	getExitPortal
		p	1		destWorld
		p	2		destPos
		p	3		destIsNether
		p	4		worldBorder
	m	(Lafo;Ln$a;)Ldpw;	a	lambda$findDimensionEntryPoint$6
		p	2		rect
	m	(Lafp;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Lajd;)V	a	playSound
		p	1		event
	m	(Lajd;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Lakh;)Z	a	isEyeInFluid
		p	1		fluidTag
	m	(Lakh;D)Z	a	updateFluidHeightAndDoFluidPushing
		p	1		tag
		p	2		speed
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq$c;)V	a	remove
		p	1		reason
	m	(Lbaq;)Z	a	lambda$hasExactlyOnePlayerPassenger$15
		p	0		entity
	m	(Lbaq;D)Z	a	closerThan
		p	1		entity
		p	2		radius
	m	(Lbaq;DD)Z	a	closerThan
		p	1		entity
		p	2		horizontalRadius
		p	4		verticalRadius
	m	(Lbaq;ILazz;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbaq;Lbaq$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbaq;Lbaq;)Z	a	lambda$hasIndirectPassenger$16
		p	1		entity
	m	(Lbaq;Ldvt;Ldvo;Lcga;Ljava/util/List;)Ldvt;	a	collideBoundingBox
		p	0		entity
		p	1		movement
		p	2		entityBoundingBox
		p	3		world
		p	4		collisions
	m	(Lbaq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbar;Ldvt;)V	a	lambda$refreshDimensions$13
		p	2		pos
	m	(Lbav;Lcaa;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbbf;Lbaq;)V	a	doEnchantDamageEffects
		p	1		attacker
		p	2		target
	m	(Lbbl;Ldvt;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lbbr;Lbar;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lbtf;Ldvt;Lazl;)Lazm;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Lbzw;)Ldvt;	a	getHandHoldingItemAngle
		p	1		item
	m	(Lcaa;F)Lbpy;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Lcfs;Lcfg;Lgt;Lcur;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Lcfs;Lcfg;Lgt;Lcur;Ldoy;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lcfz;)Lbpy;	a	spawnAtLocation
		p	1		item
	m	(Lcfz;I)Lbpy;	a	spawnAtLocation
		p	1		item
		p	2		yOffset
	m	(Lcga;Lgt;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lcnk;)F	a	mirror
		p	1		mirror
	m	(Lcoz;)F	a	rotate
		p	1		rotation
	m	(Lcur;)V	a	onInsideBlock
		p	1		state
	m	(Lcur;Ldvt;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lcur;Lgt;)Z	a	lambda$findDimensionEntryPoint$5
		p	2		pos
	m	(Lcyg;)V	a	setLevelCallback
		p	1		changeListener
	m	(Lcyy;)V	a	gameEvent
		p	1		event
	m	(Lcyy;Lbaq;)V	a	gameEvent
		p	1		event
		p	2		entity
	m	(Ldvo;)V	a	setBoundingBox
		p	1		boundingBox
	m	(Ldvo;Lgt;)Z	a	lambda$isInWall$1
		p	2		pos
	m	(Ldvt;FF)Ldvt;	a	getInputVector
		p	0		movementInput
		p	1		speed
		p	2		yaw
	m	(Ldvt;Lbbl;)Ldvt;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Ldvt;Ldvo;Ljava/util/List;)Ldvt;	a	collideWithShapes
		p	0		movement
		p	1		entityBoundingBox
		p	2		collisions
	m	(Ldwt;)Z	a	isAlliedTo
		p	1		team
	m	(Lea$a;Ldvt;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Lgt;FF)V	a	moveTo
		p	1		pos
		p	2		yaw
		p	3		pitch
	m	(Lgt;Lcur;)Z	a	isColliding
		p	1		pos
		p	2		state
	m	(Lgy$a;D)D	a	applyPistonMovementRestriction
		p	1		axis
		p	2		offsetFactor
	m	(Lgy$a;Ln$a;)Ldvt;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/lang/String;)Z	a	addTag
		p	1		tag
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Ljava/util/function/Predicate;)Z	a	hasPassenger
		p	1		predicate
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lr;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	(Lrv;)Lrv;	a	lambda$getDisplayName$11
		p	1		style
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	([D)Lpp;	a	newDoubleList
		p	1		values
	m	([F)Lpp;	a	newFloatList
		p	1		values
	m	()Lgt;	aA	getOnPosLegacy
	m	()Lgt;	aB	getOnPos
	m	()F	aC	getBlockJumpFactor
	m	()F	aD	getBlockSpeedFactor
	m	()Lgt;	aE	getBlockPosBelowThatAffectsMyMovement
	m	()F	aF	nextStep
	m	()Lajd;	aG	getSwimSound
	m	()Lajd;	aH	getSwimSplashSound
	m	()Lajd;	aI	getSwimHighSpeedSplashSound
	m	()V	aJ	checkInsideBlocks
	m	()V	aK	onFlap
	m	()Z	aL	isFlapping
	m	()Z	aM	isSilent
	m	()Z	aN	isNoGravity
	m	()Lbaq$b;	aO	getMovementEmission
	m	()Z	aP	dampensVibrations
	m	()Lbaq;	aQ	getResponsibleEntity
	m	()Z	aR	fireImmune
	m	()Z	aS	isInWater
	m	()Z	aT	isInWaterOrRain
	m	()Z	aU	isInWaterRainOrBubble
	m	()Z	aV	isInWaterOrBubble
	m	()Z	aW	isUnderWater
	m	()Lri;	aX	asChatSender
	m	()V	aY	updateSwimming
	m	()Z	aZ	updateInWaterStateAndDoFluidPushing
	m	()V	a_	defineSynchedData
	m	(Ldvt;)V	a_	setPos
		p	1		pos
	m	(Ljava/util/UUID;)V	a_	setUUID
		p	1		uuid
	m	(Z)V	a_	setSharedFlagOnFire
		p	1		onFire
	m	()I	aa	getTeamColor
	m	()V	ab	unRide
	m	()Lys;	ac	getPositionCodec
	m	()Lbau;	ad	getType
	m	()I	ae	getId
	m	()Ljava/util/Set;	af	getTags
	m	()V	ag	kill
	m	()V	ah	discard
	m	()Lzu;	ai	getEntityData
	m	()V	aj	onClientRemoval
	m	()Lbbr;	ak	getPose
	m	()Ldvo;	al	makeBoundingBox
	m	()V	am	reapplyPosition
	m	()V	an	baseTick
	m	()V	ao	checkOutOfWorld
	m	()V	ap	setPortalCooldown
	m	()Z	aq	isOnPortalCooldown
	m	()I	ar	getPortalWaitTime
	m	()V	as	lavaHurt
	m	()I	at	getRemainingFireTicks
	m	()V	au	clearFire
	m	()V	av	outOfWorld
	m	()Z	aw	isOnGround
	m	()V	ax	tryCheckInsideBlocks
	m	()V	ay	playEntityOnFireExtinguishedSound
	m	()V	az	processFlappingMovement
	m	(D)V	b	setViewScale
		p	0		value
	m	(DDD)V	b	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(FF)Ldvt;	b	calculateViewVector
		p	1		pitch
		p	2		yaw
	m	(IZ)V	b	setSharedFlag
		p	1		index
		p	2		value
	m	(Lafo;)Lbaq;	b	changeDimension
		p	1		destination
	m	(Lakh;)D	b	getFluidHeight
		p	1		fluid
	m	(Lazz;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbaq$c;)V	b	setRemoved
		p	1		reason
	m	(Lbaq;)V	b	lambda$teleportTo$12
		p	0		entity
	m	(Lbaq;Lbaq;)Z	b	lambda$removePassenger$4
	m	(Lbbf;)Ldvt;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbbr;)V	b	setPose
		p	1		pose
	m	(Lcaa;)Lbpy;	b	spawnAtLocation
		p	1		stack
	m	(Lcur;)V	b	playAmethystStepSound
		p	1		state
	m	(Ldvo;)Z	b	isFree
		p	1		box
	m	(Ldvt;)Z	b	isHorizontalCollisionMinor
		p	1		adjustedMovement
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljava/lang/String;)Z	b	removeTag
		p	1		tag
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lrm;)V	b	setCustomName
		p	1		name
	m	()Ldvs;	bA	getRotationVector
	m	()Ldvt;	bB	getForward
	m	()V	bC	handleNetherPortal
	m	()I	bD	getDimensionChangingDelay
	m	()V	bE	animateHurt
	m	()Ljava/lang/Iterable;	bF	getHandSlots
	m	()Ljava/lang/Iterable;	bG	getArmorSlots
	m	()Ljava/lang/Iterable;	bH	getAllSlots
	m	()Z	bI	isOnFire
	m	()Z	bJ	isPassenger
	m	()Z	bK	isVehicle
	m	()Z	bL	rideableUnderWater
	m	()Z	bM	isShiftKeyDown
	m	()Z	bN	isSteppingCarefully
	m	()Z	bO	isSuppressingBounce
	m	()Z	bP	isDiscrete
	m	()Z	bQ	isDescending
	m	()Z	bR	isCrouching
	m	()Z	bS	isSprinting
	m	()Z	bT	isSwimming
	m	()Z	bU	isVisuallySwimming
	m	()Z	bV	isVisuallyCrawling
	m	()Z	bW	hasGlowingTag
	m	()Z	bX	isCurrentlyGlowing
	m	()Z	bY	isInvisible
	m	()Ldwt;	bZ	getTeam
	m	(Lbtf;)V	b_	playerTouch
		p	1		player
	m	()V	ba	updateInWaterStateAndDoWaterCurrentPushing
	m	()V	bb	doWaterSplashEffect
	m	()Lcur;	bc	getBlockStateOnLegacy
	m	()Lcur;	bd	getBlockStateOn
	m	()Z	be	canSpawnSprintParticle
	m	()V	bf	spawnSprintParticle
	m	()Z	bg	isInLava
	m	()F	bh	getLightLevelDependentMagicValue
	m	()V	bi	setOldPosAndRot
	m	()V	bj	markHurt
	m	()Ldvt;	bk	getEyePosition
	m	()Z	bl	isPickable
	m	()Z	bm	isPushable
	m	()Z	bn	repositionEntityAfterLoad
	m	()Ljava/lang/String;	bo	getEncodeId
	m	()Z	bp	isAlive
	m	()Z	bq	isInWall
	m	()Z	br	canBeCollidedWith
	m	()V	bs	rideTick
	m	()D	bt	getMyRidingOffset
	m	()D	bu	getPassengersRidingOffset
	m	()Z	bv	showVehicleHealth
	m	()V	bw	ejectPassengers
	m	()V	bx	removeVehicle
	m	()F	by	getPickRadius
	m	()Ldvt;	bz	getLookAngle
	m	(D)D	c	getX
		p	1		widthScale
	m	(DDD)V	c	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(FF)Ldvt;	c	calculateUpVector
		p	1		pitch
		p	2		yaw
	m	(Lafp;)V	c	startSeenByPlayer
		p	1		player
	m	(Lbaq;)V	c	lambda$startRiding$3
		p	0		player
	m	(Lbbr;)Z	c	hasPose
		p	1		pose
	m	(Lbtf;)Z	c	isInvisibleTo
		p	1		player
	m	(Lcur;)Z	c	lambda$move$0
		p	0		state
	m	(Ldvt;)Ldvt;	c	limitPistonMovement
		p	1		movement
	m	(Lrm;)Lrm;	c	removeAction
		p	0		textComponent
	m	(Z)V	c	setOnGround
		p	1		onGround
	m	()Ldvo;	cA	getBoundingBoxForCulling
	m	()F	cB	getEyeHeight
	m	()Ldvt;	cC	getLeashOffset
	m	()Lcga;	cD	getCommandSenderWorld
	m	()Lnet/minecraft/server/MinecraftServer;	cE	getServer
	m	()Z	cF	ignoreExplosion
	m	()Z	cG	onlyOpCanSetNbt
	m	()Lbaq;	cH	getControllingPassenger
	m	()Z	cI	hasControllingPassenger
	m	()Ljava/util/List;	cJ	getPassengers
	m	()Lbaq;	cK	getFirstPassenger
	m	()Ljava/util/stream/Stream;	cL	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cM	getPassengersAndSelf
	m	()Ljava/lang/Iterable;	cN	getIndirectPassengers
	m	()Z	cO	hasExactlyOnePlayerPassenger
	m	()Lbaq;	cP	getRootVehicle
	m	()Z	cQ	isControlledByLocalInstance
	m	()Lbaq;	cR	getVehicle
	m	()Lajf;	cS	getSoundSource
	m	()I	cT	getFireImmuneTicks
	m	()Ldr;	cU	createCommandSourceStack
	m	()Z	cV	touchingUnloadedChunk
	m	()D	cW	getFluidJumpThreshold
	m	()F	cX	getBbWidth
	m	()F	cY	getBbHeight
	m	()Ldvt;	cZ	position
	m	()Ldpe;	c_	getPistonPushReaction
	m	()I	ca	getMaxAirSupply
	m	()I	cb	getAirSupply
	m	()I	cc	getTicksFrozen
	m	()F	cd	getPercentFrozen
	m	()Z	ce	isFullyFrozen
	m	()I	cf	getTicksRequiredToFreeze
	m	()Lrm;	cg	getTypeName
	m	()F	ch	getYHeadRot
	m	()Z	ci	isAttackable
	m	()Z	cj	isInvulnerable
	m	()V	ck	removeAfterChangingDimensions
	m	()Z	cl	canChangeDimensions
	m	()I	cm	getMaxFallDistance
	m	()Z	cn	isIgnoringBlockTriggers
	m	()Z	co	displayFireAnimation
	m	()Ljava/util/UUID;	cp	getUUID
	m	()Ljava/lang/String;	cq	getStringUUID
	m	()Ljava/lang/String;	cr	getScoreboardName
	m	()Z	cs	isPushedByFluid
	m	()D	ct	getViewScale
	m	()Z	cu	isCustomNameVisible
	m	()Z	cv	shouldShowName
	m	()Lgy;	cw	getDirection
	m	()Lgy;	cx	getMotionDirection
	m	()Lrq;	cy	createHoverEvent
	m	()Ldvo;	cz	getBoundingBox
	m	(D)D	d	getRandomX
		p	1		widthScale
	m	(DDD)V	d	syncPacketPositionCodec
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	d	playSwimSound
		p	1		volume
	m	(Lafp;)V	d	stopSeenByPlayer
		p	1		player
	m	(Lbaq;)Z	d	lambda$startRiding$2
		p	0		passenger
	m	(Lbbr;)Z	d	canEnterPose
		p	1		pose
	m	(Ldvt;)V	d	moveTo
		p	1		pos
	m	(Lgt;)V	d	handleInsidePortal
		p	1		pos
	m	(Lpj;)Z	d	saveAsPassenger
		p	1		nbt
	m	(Z)V	d	setSilent
		p	1		silent
	m	()Ldvt;	da	trackingPosition
	m	()Lgt;	db	blockPosition
	m	()Lcur;	dc	getFeetBlockState
	m	()Lcfh;	dd	chunkPosition
	m	()Ldvt;	de	getDeltaMovement
	m	()I	df	getBlockX
	m	()D	dg	getX
	m	()I	dh	getBlockY
	m	()D	di	getY
	m	()D	dj	getRandomY
	m	()D	dk	getEyeY
	m	()I	dl	getBlockZ
	m	()D	dm	getZ
	m	()V	dn	checkDespawn
	m	()Lcaa;	do	getPickResult
	m	()Z	dp	canFreeze
	m	()Z	dq	isFreezing
	m	()F	dr	getYRot
	m	()F	ds	getVisualRotationYInDegrees
	m	()F	dt	getXRot
	m	()Z	du	isRemoved
	m	()Lbaq$c;	dv	getRemovalReason
	m	()V	dw	unsetRemoved
	m	()Z	dx	shouldBeSaved
	m	()Z	dy	isAlwaysTicking
	m	(D)D	e	getY
		p	1		heightScale
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ldvt;	e	getViewVector
		p	1		tickDelta
	m	(I)V	e	setId
		p	1		id
	m	(Lbaq;)F	e	distanceTo
		p	1		entity
	m	(Lbbr;)Ldvo;	e	getBoundingBoxForPose
		p	1		pos
	m	(Ldvt;)D	e	distanceToSqr
		p	1		vector
	m	(Lpj;)Z	e	save
		p	1		nbt
	m	(Z)V	e	setNoGravity
		p	1		noGravity
	m	(D)D	f	getZ
		p	1		widthScale
	m	(DDD)Z	f	isFree
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(F)F	f	getViewXRot
		p	1		tickDelta
	m	(I)V	f	setSecondsOnFire
		p	1		seconds
	m	(Lbaq;)D	f	distanceToSqr
		p	1		entity
	m	(Lbbr;)F	f	getEyeHeight
		p	1		pose
	m	(Ldvt;)V	f	setDeltaMovement
		p	1		velocity
	m	(Lpj;)Lpj;	f	saveWithoutId
		p	1		nbt
	m	(Z)V	f	setShiftKeyDown
		p	1		sneaking
	m	(D)D	g	getRandomZ
		p	1		widthScale
	m	(DDD)V	g	absMoveTo
		p	1		x
		p	3		y
		p	5		z
	m	(F)F	g	getViewYRot
		p	1		tickDelta
	m	(I)V	g	setRemainingFireTicks
		p	1		fireTicks
	m	(Lbaq;)V	g	push
		p	1		entity
	m	(Ldvt;)Ldvt;	g	collide
		p	1		movement
	m	(Lpj;)V	g	load
		p	1		nbt
	m	(Z)V	g	setSprinting
		p	1		sprinting
	m	(DDD)D	h	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ldvt;	h	getUpVector
		p	1		tickDelta
	m	(I)Z	h	getSharedFlag
		p	1		index
	m	(Lbaq;)Z	h	canCollideWith
		p	1		other
	m	(Z)V	h	setSwimming
		p	1		swimming
	m	(DDD)V	i	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	(F)Ldvt;	i	getEyePosition
		p	1		tickDelta
	m	(I)V	i	setAirSupply
		p	1		air
	m	(Lbaq;)V	i	positionRider
		p	1		passenger
	m	(Z)V	i	setGlowingTag
		p	1		glowing
	m	()Z	i_	acceptsSuccess
	m	()Z	j	isInRain
	m	(DDD)Z	j	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	(F)Ldvt;	j	getLightProbePosition
		p	1		tickDelta
	m	(I)V	j	setTicksFrozen
		p	1		frozenTicks
	m	(Lbaq;)V	j	onPassengerTurned
		p	1		passenger
	m	(Z)V	j	setInvisible
		p	1		invisible
	m	()Z	j_	acceptsFailure
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ldvt;	k	getPosition
		p	1		delta
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	(Lbaq;)Z	k	startRiding
		p	1		entity
	m	(Z)V	k	onAboveBubbleCol
		p	1		drag
	m	()Z	l	isInBubbleColumn
	m	(DDD)V	l	moveTowardsClosestSpace
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	l	setYHeadRot
		p	1		headYaw
	m	(I)Z	l	hasPermissions
		p	1		permissionLevel
	m	(Lbaq;)Z	l	canRide
		p	1		entity
	m	(Z)V	l	onInsideBubbleColumn
		p	1		drag
	m	()V	m	resetFallDistance
	m	(DDD)V	m	teleportToWithTicket
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(F)V	m	setYBodyRot
		p	1		bodyYaw
	m	(Lbaq;)V	m	addPassenger
		p	1		passenger
	m	(Z)V	m	setInvulnerable
		p	1		invulnerable
	m	()V	n	updateFluidOnEyes
	m	(DDD)V	n	setDeltaMovement
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ldvt;	n	getRopeHoldPosition
		p	1		delta
	m	(Lbaq;)V	n	removePassenger
		p	1		passenger
	m	(Z)V	n	setCustomNameVisible
		p	1		visible
	m	()Ljava/util/stream/Stream;	o	getIndirectPassengersStream
	m	(DDD)V	o	setPosRaw
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	o	setYRot
		p	1		yaw
	m	(Lbaq;)Z	o	canAddPassenger
		p	1		passenger
	m	(Z)V	o	setIsInPowderSnow
		p	1		inPowderSnow
	m	()V	p	stopRiding
	m	(F)V	p	setXRot
		p	1		pitch
	m	(Lbaq;)Z	p	isAlliedTo
		p	1		other
	m	(Lbaq;)Z	q	is
		p	1		entity
	m	()Ljava/util/Iterator;	r	lambda$getIndirectPassengers$14
	m	(Lbaq;)Z	r	skipAttackInteraction
		p	1		attacker
	m	()Ljava/lang/String;	s	lambda$fillCrashReportCategory$10
	m	(Lbaq;)V	s	copyPosition
		p	1		entity
	m	(Lbaq;)V	t	restoreFrom
		p	1		original
	m	()Ljava/lang/String;	u	lambda$fillCrashReportCategory$9
	m	(Lbaq;)Z	u	hasPassenger
		p	1		passenger
	m	(Lbaq;)Z	v	isPassengerOfSameVehicle
		p	1		entity
	m	()Ljava/lang/String;	w	lambda$fillCrashReportCategory$8
	m	(Lbaq;)Z	w	hasIndirectPassenger
		p	1		passenger
	m	()Ljava/lang/String;	x	lambda$fillCrashReportCategory$7
	m	()V	z_	refreshDimensions
	f	Z	A	verticalCollision
	f	Z	B	verticalCollisionBelow
	f	Z	C	minorHorizontalCollision
	f	Z	D	hurtMarked
	f	Ldvt;	E	stuckSpeedMultiplier
	f	F	F	DEFAULT_BB_WIDTH
	f	F	G	DEFAULT_BB_HEIGHT
	f	F	H	walkDistO
	f	F	I	walkDist
	f	F	J	moveDist
	f	F	K	flyDist
	f	F	L	fallDistance
	f	D	M	xOld
	f	D	N	yOld
	f	D	O	zOld
	f	F	P	maxUpStep
	f	Z	Q	noPhysics
	f	Lalu;	R	random
	f	I	S	tickCount
	f	Z	T	wasTouchingWater
	f	Lit/unimi/dsi/fastutil/objects/Object2DoubleMap;	U	fluidHeight
	f	Z	V	wasEyeInWater
	f	I	W	invulnerableTime
	f	Z	X	firstTick
	f	Lzu;	Y	entityData
	f	Lzr;	Z	DATA_SHARED_FLAGS_ID
	f	F	aA	yRot
	f	F	aB	xRot
	f	Ldvo;	aC	bb
	f	Lbaq$c;	aD	removalReason
	f	F	aE	nextStep
	f	I	aF	remainingFireTicks
	f	Ljava/util/Set;	aG	fluidOnEyes
	f	I	aH	FLAG_SHIFT_KEY_DOWN
	f	I	aI	FLAG_SPRINTING
	f	I	aJ	FLAG_SWIMMING
	f	I	aK	FLAG_INVISIBLE
	f	Lzr;	aL	DATA_AIR_SUPPLY_ID
	f	Lzr;	aM	DATA_CUSTOM_NAME
	f	Lzr;	aN	DATA_CUSTOM_NAME_VISIBLE
	f	Lzr;	aO	DATA_SILENT
	f	Lzr;	aP	DATA_NO_GRAVITY
	f	Lzr;	aQ	DATA_TICKS_FROZEN
	f	Lcyg;	aR	levelCallback
	f	Lys;	aS	packetPositionCodec
	f	I	aT	portalCooldown
	f	Z	aU	invulnerable
	f	Z	aV	hasGlowingTag
	f	Ljava/util/Set;	aW	tags
	f	[D	aX	pistonDeltas
	f	J	aY	pistonDeltasGameTime
	f	Lbar;	aZ	dimensions
	f	I	aa	FLAG_ONFIRE
	f	I	ab	FLAG_GLOWING
	f	I	ac	FLAG_FALL_FLYING
	f	Lzr;	ad	DATA_POSE
	f	Z	ae	noCulling
	f	Z	af	hasImpulse
	f	Z	ag	isInsidePortal
	f	I	ah	portalTime
	f	Lgt;	ai	portalEntrancePos
	f	Ljava/util/UUID;	aj	uuid
	f	Ljava/lang/String;	ak	stringUUID
	f	Z	al	isInPowderSnow
	f	Z	am	wasInPowderSnow
	f	Z	an	wasOnFire
	f	D	ao	WATER_FLOW_SCALE
	f	D	ap	LAVA_FAST_FLOW_SCALE
	f	D	aq	LAVA_SLOW_FLOW_SCALE
	f	D	ar	viewScale
	f	Lbau;	as	type
	f	I	at	id
	f	Lcom/google/common/collect/ImmutableList;	au	passengers
	f	Lbaq;	av	vehicle
	f	Ldvt;	aw	position
	f	Lgt;	ax	blockPosition
	f	Lcfh;	ay	chunkPosition
	f	Ldvt;	az	deltaMovement
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	F	ba	eyeHeight
	f	F	bb	crystalSoundIntensity
	f	I	bc	lastCrystalSoundPlayTick
	f	Z	bd	hasVisualFire
	f	Lcur;	be	feetBlockState
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	ENTITY_COUNTER
	f	Ljava/util/List;	d	EMPTY_LIST
	f	Ldvo;	e	INITIAL_AABB
	f	Ljava/lang/String;	g	ID_TAG
	f	Ljava/lang/String;	h	PASSENGERS_TAG
	f	I	i	BOARDING_COOLDOWN
	f	I	j	TOTAL_AIR_SUPPLY
	f	I	k	MAX_ENTITY_TAG_COUNT
	f	D	l	DELTA_AFFECTED_BY_BLOCKS_BELOW
	f	F	m	BREATHING_DISTANCE_BELOW_EYES
	f	I	n	BASE_TICKS_REQUIRED_TO_FREEZE
	f	I	o	FREEZE_HURT_FREQUENCY
	f	Ljava/lang/String;	p	UUID_TAG
	f	Z	q	blocksBuilding
	f	I	r	boardingCooldown
	f	Lcga;	s	level
	f	D	t	xo
	f	D	u	yo
	f	D	v	zo
	f	F	w	yRotO
	f	F	x	xRotO
	f	Z	y	onGround
	f	Z	z	horizontalCollision
c	baq$1	net/minecraft/world/entity/Entity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	baq$a	net/minecraft/world/entity/Entity$MoveFunction
	m	(Lbaq;DDD)V	accept	accept
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
c	baq$b	net/minecraft/world/entity/Entity$MovementEmission
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		sounds
		p	4		events
	m	()Z	a	emitsAnything
	m	()Z	b	emitsEvents
	m	()Z	c	emitsSounds
	m	()[Lbaq$b;	d	$values
	f	Lbaq$b;	a	NONE
	f	Lbaq$b;	b	SOUNDS
	f	Lbaq$b;	c	EVENTS
	f	Lbaq$b;	d	ALL
	f	Z	e	sounds
	f	Z	f	events
	f	[Lbaq$b;	g	$VALUES
c	baq$c	net/minecraft/world/entity/Entity$RemovalReason
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		destroy
		p	4		save
	m	()Z	a	shouldDestroy
	m	()Z	b	shouldSave
	m	()[Lbaq$c;	c	$values
	f	Lbaq$c;	a	KILLED
	f	Lbaq$c;	b	DISCARDED
	f	Lbaq$c;	c	UNLOADED_TO_CHUNK
	f	Lbaq$c;	d	UNLOADED_WITH_PLAYER
	f	Lbaq$c;	e	CHANGED_DIMENSION
	f	Z	f	destroy
	f	Z	g	save
	f	[Lbaq$c;	h	$VALUES
c	bar	net/minecraft/world/entity/EntityDimensions
	m	(FFZ)V	<init>	<init>
		p	1		width
		p	2		height
		p	3		fixed
	m	(DDD)Ldvo;	a	makeBoundingBox
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lbar;	a	scale
		p	1		ratio
	m	(FF)Lbar;	a	scale
		p	1		widthRatio
		p	2		heightRatio
	m	(Ldvt;)Ldvo;	a	makeBoundingBox
		p	1		pos
	m	(FF)Lbar;	b	scalable
		p	0		width
		p	1		height
	m	(FF)Lbar;	c	fixed
		p	0		width
		p	1		height
	f	F	a	width
	f	F	b	height
	f	Z	c	fixed
c	bas	net/minecraft/world/entity/EntityEvent
	f	B	A	PERMISSION_LEVEL_ADMINS
	f	B	B	PERMISSION_LEVEL_OWNERS
	f	B	C	ATTACK_BLOCKED
	f	B	D	SHIELD_DISABLED
	f	B	E	FISHING_ROD_REEL_IN
	f	B	F	ARMORSTAND_WOBBLE
	f	B	G	THORNED
	f	B	H	STOP_OFFER_FLOWER
	f	B	I	TALISMAN_ACTIVATE
	f	B	J	DROWNED
	f	B	K	BURNED
	f	B	L	DOLPHIN_LOOKING_FOR_TREASURE
	f	B	M	RAVAGER_STUNNED
	f	B	N	TRUSTING_FAILED
	f	B	O	TRUSTING_SUCCEEDED
	f	B	P	VILLAGER_SWEAT
	f	B	Q	BAD_OMEN_TRIGGERED
	f	B	R	POKED
	f	B	S	FOX_EAT
	f	B	T	TELEPORT
	f	B	U	MAINHAND_BREAK
	f	B	V	OFFHAND_BREAK
	f	B	W	HEAD_BREAK
	f	B	X	CHEST_BREAK
	f	B	Y	LEGS_BREAK
	f	B	Z	FEET_BREAK
	f	B	a	JUMP
	f	B	aa	HONEY_SLIDE
	f	B	ab	HONEY_JUMP
	f	B	ac	SWAP_HANDS
	f	B	ad	CANCEL_SHAKE_WETNESS
	f	B	ae	FROZEN
	f	B	af	START_RAM
	f	B	ag	END_RAM
	f	B	ah	POOF
	f	B	ai	TENDRILS_SHIVER
	f	B	aj	SONIC_CHARGE
	f	B	b	HURT
	f	B	c	DEATH
	f	B	d	START_ATTACKING
	f	B	e	STOP_ATTACKING
	f	B	f	TAMING_FAILED
	f	B	g	TAMING_SUCCEEDED
	f	B	h	SHAKE_WETNESS
	f	B	i	USE_ITEM_COMPLETE
	f	B	j	EAT_GRASS
	f	B	k	OFFER_FLOWER
	f	B	l	LOVE_HEARTS
	f	B	m	VILLAGER_ANGRY
	f	B	n	VILLAGER_HAPPY
	f	B	o	WITCH_HAT_MAGIC
	f	B	p	ZOMBIE_CONVERTING
	f	B	q	FIREWORKS_EXPLODE
	f	B	r	IN_LOVE_HEARTS
	f	B	s	SQUID_ANIM_SYNCH
	f	B	t	SILVERFISH_MERGE_ANIM
	f	B	u	GUARDIAN_ATTACK_SOUND
	f	B	v	REDUCED_DEBUG_INFO
	f	B	w	FULL_DEBUG_INFO
	f	B	x	PERMISSION_LEVEL_ALL
	f	B	y	PERMISSION_LEVEL_MODERATORS
	f	B	z	PERMISSION_LEVEL_GAMEMASTERS
c	bat	net/minecraft/world/entity/EntitySelector
	m	(DDDD)Ljava/util/function/Predicate;	a	withinDistance
		p	0		x
		p	2		y
		p	4		z
		p	6		max
	m	(DDDDLbaq;)Z	a	lambda$withinDistance$5
		p	8		entity
	m	(Lbaq;)Ljava/util/function/Predicate;	a	pushableBy
		p	0		entity
	m	(Lbaq;Lbaq;)Z	a	lambda$notRiding$7
	m	(Lbaq;Ldwt;Ldwt$a;Lbaq;)Z	a	lambda$pushableBy$6
		p	3		entity
	m	(Lbaq;)Ljava/util/function/Predicate;	b	notRiding
		p	0		entity
	m	(Lbaq;)Z	c	lambda$static$4
		p	0		entity
	m	(Lbaq;)Z	d	lambda$static$3
		p	0		entity
	m	(Lbaq;)Z	e	lambda$static$2
		p	0		entity
	m	(Lbaq;)Z	f	lambda$static$1
		p	0		entity
	m	(Lbaq;)Z	g	lambda$static$0
		p	0		entity
	f	Ljava/util/function/Predicate;	a	ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	b	LIVING_ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	c	ENTITY_NOT_BEING_RIDDEN
	f	Ljava/util/function/Predicate;	d	CONTAINER_ENTITY_SELECTOR
	f	Ljava/util/function/Predicate;	e	NO_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	NO_SPECTATORS
	f	Ljava/util/function/Predicate;	g	CAN_BE_COLLIDED_WITH
c	bat$a	net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	m	(Lcaa;)V	<init>	<init>
		p	1		stack
	m	(Lbaq;)Z	a	test
	f	Lcaa;	a	itemStack
c	bau	net/minecraft/world/entity/EntityType
	m	(Lbau$b;Lbbi;ZZZZLcom/google/common/collect/ImmutableSet;Lbar;II)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
		p	3		saveable
		p	4		summonable
		p	5		fireImmune
		p	6		spawnableFarFromPlayer
		p	7		canSpawnInside
		p	8		dimensions
		p	9		maxTrackDistance
		p	10		trackTickInterval
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(DDD)Ldvo;	a	getAABB
		p	1		feetX
		p	3		feetY
		p	5		feetZ
	m	(Lafo;Lcaa;Lbtf;Lgt;Lbbj;ZZ)Lbaq;	a	spawn
		p	1		world
		p	2		stack
		p	3		player
		p	4		pos
		p	5		spawnReason
		p	6		alignPosition
		p	7		invertY
	m	(Lafo;Lpj;Lrm;Lbtf;Lgt;Lbbj;ZZ)Lbaq;	a	spawn
		p	1		world
		p	2		itemNbt
		p	3		name
		p	4		player
		p	5		pos
		p	6		spawnReason
		p	7		alignPosition
		p	8		invertY
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lbaq;)Lbaq;	a	tryCast
		p	1		obj
	m	(Lbau;)Laaj;	a	getKey
		p	0		type
	m	(Lcga;)Lbaq;	a	create
		p	1		world
	m	(Lcga;Lbau;)Lbaq;	a	lambda$create$0
		p	1		entityType
	m	(Lcga;Lbtf;Lbaq;Lpj;)V	a	updateCustomEntityTag
		p	0		world
		p	1		player
		p	2		entity
		p	3		itemNbt
	m	(Lcgd;Lgt;ZLdvo;)D	a	getYOffset
		p	0		world
		p	1		pos
		p	2		invertY
		p	3		boundingBox
	m	(Lcur;)Z	a	isBlockDangerous
		p	1		state
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byString
		p	0		id
	m	(Ljava/lang/String;Lbau$a;)Lbau;	a	register
		p	0		id
		p	1		type
	m	(Ljava/util/List;Lcga;)Ljava/util/stream/Stream;	a	loadEntitiesRecursive
		p	0		entityNbtList
		p	1		world
	m	(Lpj;)Ljava/util/Optional;	a	by
		p	0		nbt
	m	(Lpj;Lbaq;)V	a	lambda$create$1
		p	1		entity
	m	(Lpj;Lcga;)Ljava/util/Optional;	a	create
		p	0		nbt
		p	1		world
	m	(Lpj;Lcga;Ljava/util/function/Function;)Lbaq;	a	loadEntityRecursive
		p	0		nbt
		p	1		world
		p	2		entityProcessor
	m	(Lpj;Lcga;Ljava/util/function/Function;Lbaq;)Lbaq;	a	lambda$loadEntityRecursive$3
		p	3		entity
	m	()Z	b	canSerialize
	m	(Lafo;Lpj;Lrm;Lbtf;Lgt;Lbbj;ZZ)Lbaq;	b	create
		p	1		world
		p	2		itemNbt
		p	3		name
		p	4		player
		p	5		pos
		p	6		spawnReason
		p	7		alignPosition
		p	8		invertY
	m	(Lpj;)V	b	lambda$create$2
	m	(Lpj;Lcga;)Ljava/util/Optional;	b	loadStaticEntity
		p	0		nbt
		p	1		world
	m	()Z	c	canSummon
	m	()Z	d	fireImmune
	m	()Z	e	canSpawnFarFromPlayer
	m	()Lbbi;	f	getCategory
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Lrm;	h	getDescription
	m	()Ljava/lang/String;	i	toShortString
	m	()Laaj;	j	getDefaultLootTable
	m	()F	k	getWidth
	m	()F	l	getHeight
	m	()Lbar;	m	getDimensions
	m	()I	n	clientTrackingRange
	m	()I	o	updateInterval
	m	()Z	p	trackDeltas
	m	()Lhc$c;	q	builtInRegistryHolder
	f	Lbau;	A	EVOKER
	f	Lbau;	B	EVOKER_FANGS
	f	Lbau;	C	EXPERIENCE_ORB
	f	Lbau;	D	EYE_OF_ENDER
	f	Lbau;	E	FALLING_BLOCK
	f	Lbau;	F	FIREWORK_ROCKET
	f	Lbau;	G	FOX
	f	Lbau;	H	FROG
	f	Lbau;	I	GHAST
	f	Lbau;	J	GIANT
	f	Lbau;	K	GLOW_ITEM_FRAME
	f	Lbau;	L	GLOW_SQUID
	f	Lbau;	M	GOAT
	f	Lbau;	N	GUARDIAN
	f	Lbau;	O	HOGLIN
	f	Lbau;	P	HORSE
	f	Lbau;	Q	HUSK
	f	Lbau;	R	ILLUSIONER
	f	Lbau;	S	IRON_GOLEM
	f	Lbau;	T	ITEM
	f	Lbau;	U	ITEM_FRAME
	f	Lbau;	V	FIREBALL
	f	Lbau;	W	LEASH_KNOT
	f	Lbau;	X	LIGHTNING_BOLT
	f	Lbau;	Y	LLAMA
	f	Lbau;	Z	LLAMA_SPIT
	f	Lbau;	aA	SHEEP
	f	Lbau;	aB	SHULKER
	f	Lbau;	aC	SHULKER_BULLET
	f	Lbau;	aD	SILVERFISH
	f	Lbau;	aE	SKELETON
	f	Lbau;	aF	SKELETON_HORSE
	f	Lbau;	aG	SLIME
	f	Lbau;	aH	SMALL_FIREBALL
	f	Lbau;	aI	SNOW_GOLEM
	f	Lbau;	aJ	SNOWBALL
	f	Lbau;	aK	SPECTRAL_ARROW
	f	Lbau;	aL	SPIDER
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Lbau;	aM	SQUID
	f	Lbau;	aN	STRAY
	f	Lbau;	aO	STRIDER
	f	Lbau;	aP	TADPOLE
	f	Lbau;	aQ	EGG
	f	Lbau;	aR	ENDER_PEARL
	f	Lbau;	aS	EXPERIENCE_BOTTLE
	f	Lbau;	aT	POTION
	f	Lbau;	aU	TRIDENT
	f	Lbau;	aV	TRADER_LLAMA
	f	Lbau;	aW	TROPICAL_FISH
	f	Lbau;	aX	TURTLE
	f	Lbau;	aY	VEX
	f	Lbau;	aZ	VILLAGER
	f	Lbau;	aa	MAGMA_CUBE
	f	Lbau;	ab	MARKER
	f	Lbau;	ac	MINECART
	f	Lbau;	ad	CHEST_MINECART
	f	Lbau;	ae	COMMAND_BLOCK_MINECART
	f	Lbau;	af	FURNACE_MINECART
	f	Lbau;	ag	HOPPER_MINECART
	f	Lbau;	ah	SPAWNER_MINECART
	f	Lbau;	ai	TNT_MINECART
	f	Lbau;	aj	MULE
	f	Lbau;	ak	MOOSHROOM
	f	Lbau;	al	OCELOT
	f	Lbau;	am	PAINTING
	f	Lbau;	an	PANDA
	f	Lbau;	ao	PARROT
	f	Lbau;	ap	PHANTOM
	f	Lbau;	aq	PIG
	f	Lbau;	ar	PIGLIN
	f	Lbau;	as	PIGLIN_BRUTE
	f	Lbau;	at	PILLAGER
	f	Lbau;	au	POLAR_BEAR
	f	Lbau;	av	TNT
	f	Lbau;	aw	PUFFERFISH
	f	Lbau;	ax	RABBIT
	f	Lbau;	ay	RAVAGER
	f	Lbau;	az	SALMON
	f	I	bA	updateInterval
	f	Ljava/lang/String;	bB	descriptionId
	f	Lrm;	bC	description
	f	Laaj;	bD	lootTable
	f	Lbar;	bE	dimensions
	f	Lbau;	b	ALLAY
	f	Lbau;	ba	VINDICATOR
	f	Lbau;	bb	WANDERING_TRADER
	f	Lbau;	bc	WARDEN
	f	Lbau;	bd	WITCH
	f	Lbau;	be	WITHER
	f	Lbau;	bf	WITHER_SKELETON
	f	Lbau;	bg	WITHER_SKULL
	f	Lbau;	bh	WOLF
	f	Lbau;	bi	ZOGLIN
	f	Lbau;	bj	ZOMBIE
	f	Lbau;	bk	ZOMBIE_HORSE
	f	Lbau;	bl	ZOMBIE_VILLAGER
	f	Lbau;	bm	ZOMBIFIED_PIGLIN
	f	Lbau;	bn	PLAYER
	f	Lbau;	bo	FISHING_BOBBER
	f	Lorg/slf4j/Logger;	bp	LOGGER
	f	Lhc$c;	bq	builtInRegistryHolder
	f	F	br	MAGIC_HORSE_WIDTH
	f	Lbau$b;	bs	factory
	f	Lbbi;	bt	category
	f	Lcom/google/common/collect/ImmutableSet;	bu	immuneTo
	f	Z	bv	serialize
	f	Z	bw	summon
	f	Z	bx	fireImmune
	f	Z	by	canSpawnFarFromPlayer
	f	I	bz	clientTrackingRange
	f	Lbau;	c	AREA_EFFECT_CLOUD
	f	Lbau;	d	ARMOR_STAND
	f	Lbau;	e	ARROW
	f	Lbau;	f	AXOLOTL
	f	Lbau;	g	BAT
	f	Lbau;	h	BEE
	f	Lbau;	i	BLAZE
	f	Lbau;	j	BOAT
	f	Lbau;	k	CHEST_BOAT
	f	Lbau;	l	CAT
	f	Lbau;	m	CAVE_SPIDER
	f	Lbau;	n	CHICKEN
	f	Lbau;	o	COD
	f	Lbau;	p	COW
	f	Lbau;	q	CREEPER
	f	Lbau;	r	DOLPHIN
	f	Lbau;	s	DONKEY
	f	Lbau;	t	DRAGON_FIREBALL
	f	Lbau;	u	DROWNED
	f	Lbau;	v	ELDER_GUARDIAN
	f	Lbau;	w	END_CRYSTAL
	f	Lbau;	x	ENDER_DRAGON
	f	Lbau;	y	ENDERMAN
	f	Lbau;	z	ENDERMITE
c	bau$1	net/minecraft/world/entity/EntityType$1
	m	(Lcga;Ljava/util/function/Consumer;Lqc;)V	a	lambda$tryAdvance$1
		p	2		nbt
	m	(Ljava/util/function/Consumer;Lbaq;)Lbaq;	a	lambda$tryAdvance$0
		p	1		entity
	f	Ljava/util/Spliterator;	a	val$tagSpliterator
	f	Lcga;	b	val$level
	f	Ljava/util/List;	c	val$entities
c	bau$a	net/minecraft/world/entity/EntityType$Builder
	m	(Lbau$b;Lbbi;)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
	m	()Lbau$a;	a	noSummon
	m	(FF)Lbau$a;	a	sized
		p	1		width
		p	2		height
	m	(I)Lbau$a;	a	clientTrackingRange
		p	1		maxTrackingRange
	m	(Lbau$b;Lbbi;)Lbau$a;	a	of
		p	0		factory
		p	1		spawnGroup
	m	(Lbau;Lcga;)Lbaq;	a	lambda$createNothing$0
		p	0		type
		p	1		world
	m	(Lbbi;)Lbau$a;	a	createNothing
		p	0		spawnGroup
	m	(Ljava/lang/String;)Lbau;	a	build
		p	1		id
	m	([Lciw;)Lbau$a;	a	immuneTo
		p	1		blocks
	m	()Lbau$a;	b	noSave
	m	(I)Lbau$a;	b	updateInterval
		p	1		trackingTickInterval
	m	()Lbau$a;	c	fireImmune
	m	()Lbau$a;	d	canSpawnFarFromPlayer
	f	Lbau$b;	a	factory
	f	Lbbi;	b	category
	f	Lcom/google/common/collect/ImmutableSet;	c	immuneTo
	f	Z	d	serialize
	f	Z	e	summon
	f	Z	f	fireImmune
	f	Z	g	canSpawnFarFromPlayer
	f	I	h	clientTrackingRange
	f	I	i	updateInterval
	f	Lbar;	j	dimensions
c	bau$b	net/minecraft/world/entity/EntityType$EntityFactory
	m	(Lbau;Lcga;)Lbaq;	create	create
		p	1		type
		p	2		world
c	bav	net/minecraft/world/entity/EquipmentSlot
	m	(Ljava/lang/String;ILbav$a;IILjava/lang/String;)V	<init>	<init>
		p	3		type
		p	4		entityId
		p	5		armorStandId
		p	6		name
	m	()Lbav$a;	a	getType
	m	(I)I	a	getIndex
		p	1		offset
	m	(Lbav$a;I)Lbav;	a	byTypeAndIndex
		p	0		type
		p	1		index
	m	(Ljava/lang/String;)Lbav;	a	byName
		p	0		name
	m	()I	b	getIndex
	m	()I	c	getFilterFlag
	m	()Ljava/lang/String;	d	getName
	m	()[Lbav;	e	$values
	f	Lbav;	a	MAINHAND
	f	Lbav;	b	OFFHAND
	f	Lbav;	c	FEET
	f	Lbav;	d	LEGS
	f	Lbav;	e	CHEST
	f	Lbav;	f	HEAD
	f	Lbav$a;	g	type
	f	I	h	index
	f	I	i	filterFlag
	f	Ljava/lang/String;	j	name
	f	[Lbav;	k	$VALUES
c	bav$a	net/minecraft/world/entity/EquipmentSlot$Type
	m	()[Lbav$a;	a	$values
	f	Lbav$a;	a	HAND
	f	Lbav$a;	b	ARMOR
	f	[Lbav$a;	c	$VALUES
c	baw	net/minecraft/world/entity/ExperienceOrb
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDDI)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		amount
	m	()Lso;	S	getAddEntityPacket
	m	(I)I	a	getExperienceValue
		p	0		value
	m	(IILbaw;)Z	a	lambda$tryMergeToExisting$0
		p	2		orb
	m	(Lafo;Ldvt;I)V	a	award
		p	0		world
		p	1		pos
		p	2		amount
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaw;)Z	a	canMerge
		p	1		other
	m	(Lbaw;II)Z	a	canMerge
		p	0		orb
		p	1		seed
		p	2		amount
	m	(Lbtf;I)I	a	repairPlayerItems
		p	1		player
		p	2		amount
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)I	b	durabilityToXp
		p	1		repairAmount
	m	(Lafo;Ldvt;I)Z	b	tryMergeToExisting
		p	0		world
		p	1		pos
		p	2		amount
	m	(Lbaw;)V	b	merge
		p	1		other
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	b_	playerTouch
		p	1		player
	m	()V	bb	doWaterSplashEffect
	m	(I)I	c	xpToDurability
		p	1		experienceAmount
	m	()Lajf;	cS	getSoundSource
	m	()Z	ci	isAttackable
	m	()I	h	getValue
	m	()I	i	getIcon
	m	()V	j	scanForEntities
	m	()V	k	tick
	m	()V	l	setUnderwaterMovement
	f	I	ao	age
	f	I	ap	health
	f	I	aq	value
	f	I	ar	count
	f	Lbtf;	as	followingPlayer
	f	I	b	LIFETIME
	f	I	c	ENTITY_SCAN_PERIOD
	f	I	d	MAX_FOLLOW_DIST
	f	I	e	ORB_GROUPS_PER_AREA
	f	D	f	ORB_MERGE_DISTANCE
c	bax	net/minecraft/world/entity/FlyingMob
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	()Z	b_	onClimbable
	m	(Ldvt;)V	g	travel
		p	1		movementInput
c	bay	net/minecraft/world/entity/GlowSquid
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	a	checkGlowSquideSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	setDarkTicks
		p	1		ticks
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lim;	n	getInkParticle
	m	()Lajd;	q	getSquirtSound
	m	()Lajd;	r	getAmbientSound
	m	()I	t	getDarkTicksRemaining
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	Lzr;	cb	DATA_DARK_TICKS_REMAINING
c	baz	net/minecraft/world/entity/HasCustomInventoryScreen
	m	(Lbtf;)V	b	openCustomInventoryScreen
		p	1		player
c	bba	net/minecraft/world/entity/HumanoidArm
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		translationKey
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Lbba;	d	getOpposite
	m	()[Lbba;	e	$values
	f	Lbba;	a	LEFT
	f	Lbba;	b	RIGHT
	f	I	c	id
	f	Ljava/lang/String;	d	name
	f	[Lbba;	e	$VALUES
c	bbb	net/minecraft/world/entity/ItemBasedSteering
	m	(Lzu;Lzr;Lzr;)V	<init>	<init>
		p	1		dataTracker
		p	2		boostTime
		p	3		saddled
	m	()V	a	onSynced
	m	(Lalu;)Z	a	boost
		p	1		random
	m	(Lpj;)V	a	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setSaddle
		p	1		saddled
	m	()Z	b	hasSaddle
	m	(Lpj;)V	b	readAdditionalSaveData
		p	1		nbt
	f	Z	a	boosting
	f	I	b	boostTime
	f	I	c	boostTimeTotal
	f	I	d	MIN_BOOST_TIME
	f	I	e	MAX_BOOST_TIME
	f	Lzu;	f	entityData
	f	Lzr;	g	boostTimeAccessor
	f	Lzr;	h	hasSaddleAccessor
c	bbc	net/minecraft/world/entity/ItemSteerable
	m	()Z	a	boost
	m	(Lbbh;Lbbb;Ldvt;)Z	a	travel
		p	1		entity
		p	2		saddledEntity
		p	3		movementInput
	m	(Ldvt;)V	a	travelWithInput
		p	1		movementInput
	m	()F	b	getSteeringSpeed
c	bbd	net/minecraft/world/entity/LerpingModel
	m	()Ljava/util/Map;	a	getModelRotationValues
c	bbe	net/minecraft/world/entity/LightningBolt
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lso;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(I)V	a	spawnFire
		p	1		spreadAttempts
	m	(Lbaq;)Z	a	lambda$tick$0
	m	(Lcga;Lgt;Lcur;)V	a	lambda$randomStepCleaningCopper$2
		p	2		state
	m	(Lcga;Lgt;Lgt$a;I)V	a	randomWalkCleaningCopper
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		count
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setVisualOnly
		p	1		cosmetic
	m	()V	a_	defineSynchedData
	m	(Lafp;)V	b	setCause
		p	1		channeler
	m	(Lcga;Lgt;)V	b	clearCopperOnLightningStrike
		p	0		world
		p	1		pos
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcga;Lgt;)Ljava/util/Optional;	c	randomStepCleaningCopper
		p	0		world
		p	1		pos
	m	()Lajf;	cS	getSoundSource
	m	(Lafp;)Z	e	lambda$tick$1
	m	()Lafp;	h	getCause
	m	()I	i	getBlocksSetOnFire
	m	()Ljava/util/stream/Stream;	j	getHitEntities
	m	()V	k	tick
	m	()V	l	powerLightningRod
	m	()Lgt;	n	getStrikePosition
	f	I	ao	flashes
	f	Z	ap	visualOnly
	f	Lafp;	aq	cause
	f	Ljava/util/Set;	ar	hitEntities
	f	I	as	blocksSetOnFire
	f	J	b	seed
	f	I	c	START_LIFE
	f	D	d	DAMAGE_RADIUS
	f	D	e	DETECTION_RADIUS
	f	I	f	life
c	bbf	net/minecraft/world/entity/LivingEntity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	A	updatingUsingItem
	m	(Lbaq;)V	A	doPush
		p	1		entity
	m	(Lbaq;)Z	B	hasLineOfSight
		p	1		entity
	m	()Z	C	shouldTriggerItemUseEffects
	m	()V	D	updateSwimAmount
	m	()Z	E	checkBedExists
	m	()V	F	updateInvisibilityStatus
	m	()Lso;	S	getAddEntityPacket
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(DDDZ)Z	a	randomTeleport
		p	1		x
		p	3		y
		p	5		z
		p	7		particleEffects
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(DZLdvt;)Ldvt;	a	getFluidFallingAdjustedMovement
		p	1		gravity
		p	3		falling
		p	4		motion
	m	(F)F	a	getSwimAmount
		p	1		tickDelta
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(Lazl;)V	a	swing
		p	1		hand
	m	(Lazl;Lcaa;)V	a	setItemInHand
		p	1		hand
		p	2		stack
	m	(Lazl;Z)V	a	swing
		p	1		hand
		p	2		fromServerPlayer
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lazz;Z)V	a	dropFromLootTable
		p	1		source
		p	2		causedByPlayer
	m	(Lbah;)Z	a	hasEffect
		p	1		effect
	m	(Lbaj;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbaj;Lbaq;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbaj;ZLbaq;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbaq;)V	a	dismountVehicle
		p	1		vehicle
	m	(Lbaq;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbau;)Z	a	canAttackType
		p	1		type
	m	(Lbav;)Z	a	doesEmitEquipEvent
		p	1		slot
	m	(Lbav;Lcaa;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbav;Lcaa;Lcaa;)V	a	onEquipItem
		p	1		slot
		p	2		oldStack
		p	3		newStack
	m	(Lbbf;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbbf;Lbav;)Lbbw;	a	createEquipmentSlotAccess
		p	0		entity
		p	1		slot
	m	(Lbbf;Lbli;)Z	a	canAttack
		p	1		entity
		p	2		predicate
	m	(Lbbf;Z)V	a	calculateEntityAnimation
		p	1		entity
		p	2		flutter
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lbbr;Lbar;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbcb;)Lbcc;	a	getAttribute
		p	1		attribute
	m	(Lbpy;)V	a	onItemPickup
		p	1		item
	m	(Lbzw;Lcaa;)Z	a	lambda$isHolding$4
		p	1		stack
	m	(Lcaa;)V	a	updateUsingItem
		p	1		stack
	m	(Lcaa;I)V	a	spawnItemParticles
		p	1		stack
		p	2		count
	m	(Lcaa;Lcga;Lbbf;)V	a	addEatEffect
		p	1		stack
		p	2		world
		p	3		targetEntity
	m	(Lcga;Lcaa;)Lcaa;	a	eat
		p	1		world
		p	2		stack
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Ldoy;)Z	a	canStandOnFluid
		p	1		state
	m	(Ldvo;Ldvo;)V	a	checkAutoSpinAttack
		p	1		a
		p	2		b
	m	(Ldvt;F)Ldvt;	a	handleRelativeFrictionAndCalculateMovement
		p	1		movementInput
		p	2		slipperiness
	m	(Lea$a;Ldvt;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Lgt;)V	a	setPosToBed
		p	1		pos
	m	(Lgt;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Lgy$a;Ln$a;)Ldvt;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/util/List;Lbav;Lcaa;)V	a	lambda$handleEquipmentChanges$5
		p	2		slot
		p	3		stack
	m	(Ljava/util/Map;)V	a	handleHandSwap
		p	1		equipmentChanges
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lgt;)V	a	lambda$addAdditionalSaveData$1
		p	1		pos
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$2
		p	1		brain
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(ZLazz;)Ldrg$a;	a	createLootContext
		p	1		causedByPlayer
		p	2		source
	m	()F	aD	getBlockSpeedFactor
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	()V	an	baseTick
	m	()V	av	outOfWorld
	m	(F)V	b	heal
		p	1		amount
	m	(Lazl;)Lcaa;	b	getItemInHand
		p	1		hand
	m	(Lazz;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbah;)Lbaj;	b	getEffect
		p	1		effect
	m	(Lbaj;)Z	b	addEffect
		p	1		effect
	m	(Lbaj;Lbaq;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lbav;)Z	b	hasItemInSlot
		p	1		slot
	m	(Lbav;Lcaa;)V	b	setLastArmorItem
		p	1		slot
		p	2		armor
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbcb;)D	b	getAttributeValue
		p	1		attribute
	m	(Lbzw;)Z	b	isHolding
		p	1		item
	m	(Lcaa;I)V	b	triggerItemUseEffects
		p	1		stack
		p	2		particleCount
	m	(Lcur;)Z	b	shouldRemoveSoulSpeed
		p	1		landingState
	m	(Lgt;)V	b	startSleeping
		p	1		pos
	m	(Ljava/util/Map;)V	b	handleEquipmentChanges
		p	1		equipmentChanges
	m	(Ljava/util/function/Predicate;)Z	b	isHolding
		p	1		predicate
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	bE	animateHurt
	m	()Ljava/lang/Iterable;	bG	getArmorSlots
	m	()Z	bL	rideableUnderWater
	m	()Z	bU	isVisuallySwimming
	m	()Z	bX	isCurrentlyGlowing
	m	()Z	b_	onClimbable
	m	()Z	bl	isPickable
	m	()Z	bm	isPushable
	m	()Z	bp	isAlive
	m	()Z	bq	isInWall
	m	()V	bs	rideTick
	m	(F)V	c	setHealth
		p	1		health
	m	(I)Lajd;	c	getFallDamageSound
		p	1		distance
	m	(IZ)V	c	setLivingEntityFlag
		p	1		mask
		p	2		value
	m	(Lakh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lazl;)V	c	startUsingItem
		p	1		hand
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lazz;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbah;)Lbaj;	c	removeEffectNoUpdate
		p	1		type
	m	(Lbaj;)Z	c	canBeAffected
		p	1		effect
	m	(Lbaj;Lbaq;)V	c	forceAddEffect
		p	1		effect
		p	2		source
	m	(Lbav;)Lcaa;	c	getItemBySlot
		p	1		slot
	m	(Lbav;Lcaa;)V	c	setLastHandItem
		p	1		slot
		p	2		stack
	m	(Lbbf;)Z	c	canAttack
		p	1		target
	m	(Lbcb;)D	c	getAttributeBaseValue
		p	1		attribute
	m	(Lcaa;)V	c	playEquipSound
		p	1		stack
	m	(Lgt;)V	c	onChangedBlock
		p	1		pos
	m	(Lgt;Lcur;)Z	c	trapdoorUsableAsLadder
		p	1		pos
		p	2		state
	m	(Ljava/util/Collection;)Z	c	areAllEffectsAmbient
		p	0		effects
	m	(Z)V	c	setOnGround
		p	1		onGround
	m	()Ldvo;	cA	getBoundingBoxForCulling
	m	()F	ch	getYHeadRot
	m	()Z	cv	shouldShowName
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(I)Lbav;	d	getEquipmentSlot
		p	0		slotId
	m	(Lazl;)V	d	broadcastBreakEvent
		p	1		hand
	m	(Lazz;)V	d	playHurtSound
		p	1		source
	m	(Lazz;F)F	d	getDamageAfterArmorAbsorb
		p	1		source
		p	2		amount
	m	(Lbah;)Z	d	removeEffect
		p	1		type
	m	(Lbaj;)V	d	lambda$tickEffects$3
	m	(Lbav;)V	d	broadcastBreakEvent
		p	1		slot
	m	(Lbav;Lcaa;)Z	d	lambda$createEquipmentSlotAccess$10
		p	1		stack
	m	(Lbbf;)V	d	blockUsingShield
		p	1		attacker
	m	(Lbtf;)V	d	setLastHurtByPlayer
		p	1		attacking
	m	(Lcaa;)Lajd;	d	getDrinkingSound
		p	1		stack
	m	()Lbca$b;	dA	brainProvider
	m	()Lbcf$a;	dB	createLivingAttributes
	m	()Z	dC	canBreatheUnderwater
	m	()Z	dD	canSpawnSoulSpeedParticle
	m	()V	dE	spawnSoulSpeedParticle
	m	()Z	dF	onSoulSpeedBlock
	m	()V	dG	removeSoulSpeed
	m	()V	dH	tryAddSoulSpeed
	m	()V	dI	removeFrost
	m	()V	dJ	tryAddFrost
	m	()F	dK	getScale
	m	()Z	dL	isAffectedByFluids
	m	()V	dM	tickDeath
	m	()Z	dN	shouldDropExperience
	m	()Z	dO	shouldDropLoot
	m	()I	dP	getExperienceReward
	m	()Z	dQ	isAlwaysExperienceDropper
	m	()Lalu;	dR	getRandom
	m	()Lbbf;	dS	getLastHurtByMob
	m	()I	dT	getLastHurtByMobTimestamp
	m	()Lbbf;	dU	getLastHurtMob
	m	()I	dV	getLastHurtMobTimestamp
	m	()I	dW	getNoActionTime
	m	()Z	dX	shouldDiscardFriction
	m	()V	dY	tickEffects
	m	()Z	dZ	canBeSeenAsEnemy
	m	()Z	dp	canFreeze
	m	()F	ds	getVisualRotationYInDegrees
	m	()Lbca;	dz	getBrain
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lazz;)Z	e	isDamageSourceBlocked
		p	1		source
	m	(Lazz;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	(Lbav;)Lcaa;	e	getLastArmorItem
		p	1		slot
	m	(Lbbf;)V	e	blockedByShield
		p	1		target
	m	(Lcaa;)Lajd;	e	getEatingSound
		p	1		stack
	m	(Lgt;)V	e	setSleepingPos
		p	1		pos
	m	()Lcaa;	eA	getMainHandItem
	m	()Lcaa;	eB	getOffhandItem
	m	()F	eC	getArmorCoverPercentage
	m	()F	eD	getSoundVolume
	m	()F	eE	getVoicePitch
	m	()Z	eF	isImmobile
	m	()F	eG	getJumpPower
	m	()D	eH	getJumpBoostPower
	m	()V	eI	jumpFromGround
	m	()V	eJ	goDownInWater
	m	()F	eK	getWaterSlowDown
	m	()F	eL	getSpeed
	m	()Z	eM	isSensitiveToWater
	m	()V	eN	serverAiStep
	m	()V	eO	pushEntities
	m	()Z	eP	isAutoSpinAttack
	m	()Z	eQ	isEffectiveAi
	m	()F	eR	getAbsorptionAmount
	m	()V	eS	updateEffectVisibility
	m	()Lbba;	eT	getMainArm
	m	()Z	eU	isUsingItem
	m	()Lazl;	eV	getUsedItemHand
	m	()Lcaa;	eW	getUseItem
	m	()I	eX	getUseItemRemainingTicks
	m	()I	eY	getTicksUsingItem
	m	()V	eZ	releaseUsingItem
	m	()Z	ea	canBeSeenByAnyone
	m	()V	eb	removeEffectParticles
	m	()Z	ec	removeAllEffects
	m	()Ljava/util/Collection;	ed	getActiveEffects
	m	()Ljava/util/Map;	ee	getActiveEffectsMap
	m	()Z	ef	isInvertedHealAndHarm
	m	()F	eg	getHealth
	m	()Z	eh	isDeadOrDying
	m	()Lazz;	ei	getLastDamageSource
	m	()V	ej	dropEquipment
	m	()V	ek	dropExperience
	m	()Laaj;	el	getLootTable
	m	()V	em	skipDropExperience
	m	()Z	en	wasExperienceConsumed
	m	()Lbbf$a;	eo	getFallSounds
	m	()Ljava/util/Optional;	ep	getLastClimbablePos
	m	()V	eq	playBlockFallSound
	m	()I	er	getArmorValue
	m	()Lazy;	es	getCombatTracker
	m	()Lbbf;	et	getKillCredit
	m	()F	eu	getMaxHealth
	m	()I	ev	getArrowCount
	m	()I	ew	getStingerCount
	m	()V	ex	updateSwingTime
	m	()Lbcd;	ey	getAttributes
	m	()Lbbk;	ez	getMobType
	m	(Lazz;)V	f	dropAllDeathLoot
		p	1		source
	m	(Lazz;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lbav;)Lcaa;	f	getLastHandItem
		p	1		slot
	m	(Lbbf;)V	f	createWitherRose
		p	1		adversary
	m	(Lcaa;)V	f	verifyEquippedItem
		p	1		stack
	m	(Lgt;)V	f	lambda$stopSleeping$9
		p	1		pos
	m	()V	fa	stopUsingItem
	m	()Z	fb	isBlocking
	m	()Z	fc	isSuppressingSlidingDownLadder
	m	()Z	fd	isFallFlying
	m	()I	fe	getFallFlyingTicks
	m	()Z	ff	isAffectedByPotions
	m	()Z	fg	attackable
	m	()Lcom/google/common/collect/ImmutableList;	fh	getDismountPoses
	m	()Ljava/util/Optional;	fi	getSleepingPos
	m	()V	fj	clearSleepingPos
	m	()Z	fk	isSleeping
	m	()V	fl	stopSleeping
	m	()Lgy;	fm	getBedOrientation
	m	()Z	fn	canDisableShield
	m	(F)F	g	getViewYRot
		p	1		tickDelta
	m	(Lazz;)Z	g	checkTotemDeathProtection
		p	1		source
	m	(Lbaq;)V	g	push
		p	1		entity
	m	(Lbav;)B	g	entityEventForEquipmentBreak
		p	0		slot
	m	(Lbbf;)V	g	doAutoAttackOnTouch
		p	1		target
	m	(Lbbr;)Ldvo;	g	getLocalBoundsForPose
		p	1		pose
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(Lgt;)Ldvt;	g	lambda$stopSleeping$8
	m	(Z)V	g	setSprinting
		p	1		sprinting
	m	()V	h	onEnterCombat
	m	(Lbbf;)V	h	lambda$updateFallFlying$6
		p	0		player
	m	(Lcaa;)Lcaa;	h	getProjectile
		p	1		stack
	m	(Ldvt;)Ldvt;	h	resetForwardDirectionOfRelativePortalPosition
		p	0		pos
	m	(Lgt;)Ljava/lang/Boolean;	h	lambda$checkBedExists$7
		p	1		pos
	m	()V	i	onLeaveCombat
	m	(Lbbf;)V	i	lambda$tryAddSoulSpeed$0
		p	0		player
	m	(Lcaa;)Lbav;	i	getEquipmentSlotForItem
		p	0		stack
	m	(Ldvt;)Ldvt;	i	handleOnClimbable
		p	1		motion
	m	(Lcaa;)V	j	breakItem
		p	1		stack
	m	()V	k	tick
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	(F)V	l	setYHeadRot
		p	1		headYaw
	m	(F)V	m	setYBodyRot
		p	1		bodyYaw
	m	(I)I	m	decreaseAirSupply
		p	1		air
	m	()V	n	updateGlowingStatus
	m	(I)I	n	increaseAirSupply
		p	1		air
	m	(I)V	o	setNoActionTime
		p	1		despawnCounter
	m	()V	p	stopRiding
	m	(DDD)V	p	knockback
		p	1		strength
		p	3		x
		p	5		z
	m	(I)V	p	setArrowCount
		p	1		stuckArrowCount
	m	(Z)V	p	setDiscardFriction
		p	1		noDrag
	m	(F)V	q	hurtCurrentlyUsedShield
		p	1		amount
	m	(I)V	q	setStingerCount
		p	1		stingerCount
	m	(Z)V	q	setJumping
		p	1		jumping
	m	()I	r	getCurrentSwingDuration
	m	(F)V	r	setSpeed
		p	1		movementSpeed
	m	(F)F	s	getAttackAnim
		p	1		tickDelta
	m	(F)V	t	setAbsorptionAmount
		p	1		amount
	m	()V	u	makePoofParticles
	m	(F)F	u	getFrictionInfluencedSpeed
		p	1		slipperiness
	m	()V	v	completeUsingItem
	m	()V	w	swapHandItems
	m	()V	w_	aiStep
	m	()V	x	detectEquipmentUpdates
	m	(Lbaq;)V	x	setLastHurtMob
		p	1		target
	m	()Lajd;	x_	getDeathSound
	m	()Ljava/util/Map;	y	collectEquipmentChanges
	m	(Lbaq;)D	y	getVisibilityPercent
		p	1		entity
	m	()Z	y_	isBaby
	m	()V	z	updateFallFlying
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	I	aA	LIVING_ENTITY_FLAG_SPIN_ATTACK
	f	Lzr;	aB	DATA_LIVING_ENTITY_FLAGS
	f	F	aC	DEFAULT_EYE_HEIGHT
	f	Lbar;	aD	SLEEPING_DIMENSIONS
	f	F	aE	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	f	Z	aF	swinging
	f	Lazl;	aG	swingingArm
	f	I	aH	swingTime
	f	I	aI	removeArrowTime
	f	I	aJ	removeStingerTime
	f	I	aK	hurtTime
	f	I	aL	hurtDuration
	f	F	aM	hurtDir
	f	I	aN	deathTime
	f	F	aO	oAttackAnim
	f	F	aP	attackAnim
	f	I	aQ	attackStrengthTicker
	f	F	aR	animationSpeedOld
	f	F	aS	animationSpeed
	f	F	aT	animationPosition
	f	I	aU	invulnerableDuration
	f	F	aV	timeOffs
	f	F	aW	rotA
	f	F	aX	yBodyRot
	f	F	aY	yBodyRotO
	f	F	aZ	yHeadRot
	f	I	ao	HAND_SLOTS
	f	I	ap	ARMOR_SLOTS
	f	I	aq	EQUIPMENT_SLOT_OFFSET
	f	I	ar	ARMOR_SLOT_OFFSET
	f	I	as	SWING_DURATION
	f	I	at	PLAYER_HURT_EXPERIENCE_TIME
	f	D	au	MIN_MOVEMENT_DISTANCE
	f	D	av	DEFAULT_BASE_GRAVITY
	f	I	aw	DEATH_DURATION
	f	I	ax	USE_ITEM_INTERVAL
	f	I	ay	LIVING_ENTITY_FLAG_IS_USING
	f	I	az	LIVING_ENTITY_FLAG_OFF_HAND
	f	I	bA	useItemRemaining
	f	I	bB	fallFlyTicks
	f	I	bC	autoSpinAttackTicks
	f	Lbca;	bD	brain
	f	Lbce;	bE	SPEED_MODIFIER_SPRINTING
	f	I	bF	DAMAGE_SOURCE_TIMEOUT
	f	I	bG	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS
	f	I	bH	TICKS_PER_ELYTRA_FREE_FALL_EVENT
	f	I	bI	FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	f	D	bJ	MAX_LINE_OF_SIGHT_TEST_RANGE
	f	Lzr;	bK	DATA_HEALTH_ID
	f	Lzr;	bL	DATA_EFFECT_COLOR_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lzr;	bM	DATA_EFFECT_AMBIENCE_ID
	f	Lzr;	bN	DATA_ARROW_COUNT_ID
	f	Lzr;	bO	DATA_STINGER_COUNT_ID
	f	Lzr;	bP	SLEEPING_POS_ID
	f	Lbcd;	bQ	attributes
	f	Lazy;	bR	combatTracker
	f	Ljava/util/Map;	bS	activeEffects
	f	Lhi;	bT	lastHandItemStacks
	f	Lhi;	bU	lastArmorItemStacks
	f	Z	bV	discardFriction
	f	Z	bW	effectsDirty
	f	Lbbf;	bX	lastHurtByMob
	f	I	bY	lastHurtByMobTimestamp
	f	Lbbf;	bZ	lastHurtMob
	f	F	ba	yHeadRotO
	f	F	bb	flyingSpeed
	f	Lbtf;	bc	lastHurtByPlayer
	f	I	bd	lastHurtByPlayerTime
	f	Z	be	dead
	f	I	bf	noActionTime
	f	F	bg	oRun
	f	F	bh	run
	f	F	bi	animStep
	f	F	bj	animStepO
	f	F	bk	rotOffs
	f	I	bl	deathScore
	f	F	bm	lastHurt
	f	Z	bn	jumping
	f	F	bo	xxa
	f	F	bp	yya
	f	F	bq	zza
	f	I	br	lerpSteps
	f	D	bs	lerpX
	f	D	bt	lerpY
	f	D	bu	lerpZ
	f	D	bv	lerpYRot
	f	D	bw	lerpXRot
	f	D	bx	lyHeadRot
	f	I	by	lerpHeadSteps
	f	Lcaa;	bz	useItem
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_SPRINTING_UUID
	f	I	ca	lastHurtMobTimestamp
	f	F	cb	speed
	f	I	cc	noJumpDelay
	f	F	cd	absorptionAmount
	f	Lgt;	ce	lastPos
	f	Ljava/util/Optional;	cf	lastClimbablePos
	f	Lazz;	cg	lastDamageSource
	f	J	ch	lastDamageStamp
	f	F	ci	swimAmount
	f	F	cj	swimAmountO
	f	Z	ck	skipDropExperience
	f	Ljava/util/UUID;	d	SPEED_MODIFIER_SOUL_SPEED_UUID
	f	Ljava/util/UUID;	e	SPEED_MODIFIER_POWDER_SNOW_UUID
c	bbf$1	net/minecraft/world/entity/LivingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	bbf$a	net/minecraft/world/entity/LivingEntity$Fallsounds
	m	()Lajd;	a	small
	m	()Lajd;	b	big
	f	Lajd;	a	small
	f	Lajd;	b	big
c	bbg	net/minecraft/world/entity/Marker
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lso;	S	getAddEntityPacket
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ldpe;	c_	getPistonPushReaction
	m	()V	k	tick
	m	(Lbaq;)V	m	addPassenger
		p	1		passenger
	f	Ljava/lang/String;	b	DATA_TAG
	f	Lpj;	c	data
c	bbh	net/minecraft/world/entity/Mob
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbgv;	A	getMoveControl
	m	()Lbgt;	C	getJumpControl
	m	()Lbkf;	D	getNavigation
	m	()Lbla;	E	getSensing
	m	()Lbbf;	G	getTarget
	m	()V	I	ate
	m	()I	J	getAmbientSoundInterval
	m	()V	K	playAmbientSound
	m	()V	L	spawnAnim
	m	()V	M	updateControlFlags
	m	()Laaj;	N	getDefaultLootTable
	m	()Lhs;	O	getPickupReach
	m	()Z	P	requiresCustomPersistence
	m	()Z	Q	shouldDespawnInPeaceful
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	()I	U	getMaxHeadXRot
	m	()I	V	getMaxHeadYRot
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	(Lalu;F)V	a	enchantSpawnedWeapon
		p	1		random
		p	2		power
	m	(Lalu;FLbav;)V	a	enchantSpawnedArmor
		p	1		random
		p	2		power
		p	3		slot
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lazz;Z)V	a	dropFromLootTable
		p	1		source
		p	2		causedByPlayer
	m	(Lbaq;FF)V	a	lookAt
		p	1		targetEntity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Lbaq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbau;)Z	a	canAttackType
		p	1		type
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	a	checkMobSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbau;Z)Lbbh;	a	convertTo
		p	1		entityType
		p	2		keepEquipment
	m	(Lbav;F)V	a	setDropChance
		p	1		slot
		p	2		chance
	m	(Lbav;I)Lbzw;	a	getEquipmentForSlot
		p	0		equipmentSlot
		p	1		equipmentLevel
	m	(Lbav;Lcaa;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lbtf;Lbbh;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lbtf;Lcaa;Lcaa;)V	a	maybeDisableShield
		p	1		player
		p	2		mobStack
		p	3		playerStack
	m	(Lcaa;Lcaa;)Z	a	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Lcap;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgb;Lbbj;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldpk;)F	a	getPathfindingMalus
		p	1		nodeType
	m	(Ldpk;F)V	a	setPathfindingMalus
		p	1		nodeType
		p	2		penalty
	m	(Lgt;)Z	a	isWithinRestriction
		p	1		pos
	m	(Lgt;I)V	a	restrictTo
		p	1		target
		p	2		range
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	(ZLazz;)Ldrg$a;	a	createLootContext
		p	1		causedByPlayer
		p	2		source
	m	(ZZ)V	a	dropLeash
		p	1		sendPacket
		p	2		dropItem
	m	()V	a_	defineSynchedData
	m	()V	an	baseTick
	m	(Lalu;Lazk;)V	b	populateDefaultEquipmentEnchantments
		p	1		random
		p	2		localDifficulty
	m	(Lbaq;Z)V	b	setLeashedTo
		p	1		entity
		p	2		sendPacket
	m	(Lbav;Lcaa;)V	b	setItemSlotAndDropWhenKilled
		p	1		slot
		p	2		stack
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbtf;Lbbh;)V	b	lambda$checkAndHandleImportantInteractions$2
		p	2		entity
	m	(Lcaa;Lcaa;)Z	b	canReplaceEqualItem
		p	1		newStack
		p	2		oldStack
	m	(Ldpk;)Z	b	canCutCorner
		p	1		type
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bF	getHandSlots
	m	()Ljava/lang/Iterable;	bG	getArmorSlots
	m	(Lakh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbav;)Lcaa;	c	getItemBySlot
		p	1		slot
	m	(Lbtf;Lazl;)Lazm;	c	checkAndHandleImportantInteractions
		p	1		player
		p	2		hand
	m	(Ljava/lang/String;)Z	c	lambda$canReplaceEqualItem$1
		p	0		key
	m	()Z	cQ	isControlledByLocalInstance
	m	()V	ck	removeAfterChangingDimensions
	m	()I	cm	getMaxFallDistance
	m	(I)Z	d	isMaxGroupSizeReached
		p	1		count
	m	(Lazz;)V	d	playHurtSound
		p	1		source
	m	(Ljava/lang/String;)Z	d	lambda$canReplaceEqualItem$0
		p	0		key
	m	()I	dP	getExperienceReward
	m	()V	dn	checkDespawn
	m	()Lcaa;	do	getPickResult
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbav;)V	e	setGuaranteedDrop
		p	1		slot
	m	()V	eN	serverAiStep
	m	()Z	eQ	isEffectiveAi
	m	()Lbba;	eT	getMainArm
	m	()Laaj;	el	getLootTable
	m	(Lbav;)F	f	getEquipmentDropChance
		p	1		slot
	m	()Lbaq;	fA	getLeashHolder
	m	()Z	fB	isNoAi
	m	()Z	fC	isLeftHanded
	m	()Z	fD	isAggressive
	m	()Z	fE	isSunBurnTick
	m	()V	fF	removeFreeWill
	m	()Ljava/lang/Iterable;	fG	iteratePathfindingStartNodeCandidatePositions
	m	()V	fH	restoreLeashFromSave
	m	()I	fo	getHeadRotSpeed
	m	()I	fp	getMaxSpawnClusterSize
	m	()V	fq	setPersistenceRequired
	m	()Z	fr	canPickUpLoot
	m	()Z	fs	isPersistenceRequired
	m	()Z	ft	isWithinRestriction
	m	()Lgt;	fu	getRestrictCenter
	m	()F	fv	getRestrictRadius
	m	()V	fw	clearRestriction
	m	()Z	fx	hasRestriction
	m	()V	fy	tickLeash
	m	()Z	fz	isLeashed
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbbf;)V	h	setTarget
		p	1		target
	m	(Lbbf;)D	i	getMeleeAttackRangeSqr
		p	1		target
	m	(Lbbf;)Z	j	isWithinMeleeAttackRange
		p	1		entity
	m	(Lcaa;)Z	j	equipItemIfPossible
		p	1		equipment
	m	()V	k	tick
	m	(Lcaa;)Z	k	canHoldItem
		p	1		stack
	m	(Lcaa;)Z	l	wantsToPickUp
		p	1		stack
	m	()V	n	resetAmbientSoundTime
	m	(Lcaa;)V	n	lambda$removeAfterChangingDimensions$3
		p	0		stack
	m	()Lajd;	r	getAmbientSound
	m	(F)V	r	setSpeed
		p	1		movementSpeed
	m	(I)V	r	setDelayedLeashHolderId
		p	1		id
	m	(Z)V	r	setCanPickUpLoot
		p	1		canPickUpLoot
	m	(Z)V	s	setNoAi
		p	1		aiDisabled
	m	(Z)V	t	setLeftHanded
		p	1		leftHanded
	m	()V	u	registerGoals
	m	(F)V	u	setZza
		p	1		forwardSpeed
	m	(Z)V	u	setAggressive
		p	1		attacking
	m	(F)V	v	setYya
		p	1		upwardSpeed
	m	()Lbcf$a;	w	createMobAttributes
	m	(F)V	w	setXxa
		p	1		sidewaysSpeed
	m	()V	w_	aiStep
	m	()Z	x	shouldPassengersInheritMalus
	m	()Lbgq;	y	createBodyControl
	m	()Lbgu;	z	getLookControl
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	F	bE	MAX_WEARING_ARMOR_CHANCE
	f	F	bF	MAX_PICKUP_LOOT_CHANCE
	f	F	bG	MAX_ENCHANTED_ARMOR_CHANCE
	f	F	bH	MAX_ENCHANTED_WEAPON_CHANCE
	f	Ljava/lang/String;	bI	LEASH_TAG
	f	F	bJ	DEFAULT_EQUIPMENT_DROP_CHANCE
	f	I	bK	PRESERVE_ITEM_DROP_CHANCE
	f	I	bL	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	f	Lzr;	b	DATA_MOB_FLAGS_ID
	f	I	bM	ambientSoundTime
	f	I	bN	xpReward
	f	Lbgu;	bO	lookControl
	f	Lbgv;	bP	moveControl
	f	Lbgt;	bQ	jumpControl
	f	Lbkf;	bR	navigation
	f	Lbht;	bS	goalSelector
	f	Lbht;	bT	targetSelector
	f	[F	bU	handDropChances
	f	[F	bV	armorDropChances
	f	Lhs;	bW	ITEM_PICKUP_REACH
	f	Lbgq;	bX	bodyRotationControl
	f	Lbbf;	bY	target
	f	Lbla;	bZ	sensing
	f	I	c	MOB_FLAG_NO_AI
	f	Lhi;	ca	handItems
	f	Lhi;	cb	armorItems
	f	Z	cc	canPickUpLoot
	f	Z	cd	persistenceRequired
	f	Ljava/util/Map;	ce	pathfindingMalus
	f	Laaj;	cf	lootTable
	f	J	cg	lootTableSeed
	f	Lbaq;	ch	leashHolder
	f	I	ci	delayedLeashHolderId
	f	Lpj;	cj	leashInfoTag
	f	Lgt;	ck	restrictCenter
	f	F	cl	restrictRadius
	f	I	d	MOB_FLAG_LEFTHANDED
	f	I	e	MOB_FLAG_AGGRESSIVE
	f	I	f	PICKUP_REACH
c	bbh$1	net/minecraft/world/entity/Mob$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	bbi	net/minecraft/world/entity/MobCategory
	m	(Ljava/lang/String;ILjava/lang/String;IZZI)V	<init>	<init>
		p	3		name
		p	4		spawnCap
		p	5		peaceful
		p	6		rare
		p	7		immediateDespawnRange
	m	()Ljava/lang/String;	a	getName
	m	()I	b	getMaxInstancesPerChunk
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isFriendly
	m	()Z	e	isPersistent
	m	()I	f	getDespawnDistance
	m	()I	g	getNoDespawnDistance
	m	()[Lbbi;	h	$values
	f	Lbbi;	a	MONSTER
	f	Lbbi;	b	CREATURE
	f	Lbbi;	c	AMBIENT
	f	Lbbi;	d	AXOLOTLS
	f	Lbbi;	e	UNDERGROUND_WATER_CREATURE
	f	Lbbi;	f	WATER_CREATURE
	f	Lbbi;	g	WATER_AMBIENT
	f	Lbbi;	h	MISC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	I	j	max
	f	Z	k	isFriendly
	f	Z	l	isPersistent
	f	Ljava/lang/String;	m	name
	f	I	n	noDespawnDistance
	f	I	o	despawnDistance
	f	[Lbbi;	p	$VALUES
c	bbj	net/minecraft/world/entity/MobSpawnType
	m	()[Lbbj;	a	$values
	f	Lbbj;	a	NATURAL
	f	Lbbj;	b	CHUNK_GENERATION
	f	Lbbj;	c	SPAWNER
	f	Lbbj;	d	STRUCTURE
	f	Lbbj;	e	BREEDING
	f	Lbbj;	f	MOB_SUMMONED
	f	Lbbj;	g	JOCKEY
	f	Lbbj;	h	EVENT
	f	Lbbj;	i	CONVERSION
	f	Lbbj;	j	REINFORCEMENT
	f	Lbbj;	k	TRIGGERED
	f	Lbbj;	l	BUCKET
	f	Lbbj;	m	SPAWN_EGG
	f	Lbbj;	n	COMMAND
	f	Lbbj;	o	DISPENSER
	f	Lbbj;	p	PATROL
	f	[Lbbj;	q	$VALUES
c	bbk	net/minecraft/world/entity/MobType
	f	Lbbk;	a	UNDEFINED
	f	Lbbk;	b	UNDEAD
	f	Lbbk;	c	ARTHROPOD
	f	Lbbk;	d	ILLAGER
	f	Lbbk;	e	WATER
c	bbl	net/minecraft/world/entity/MoverType
	m	()[Lbbl;	a	$values
	f	Lbbl;	a	SELF
	f	Lbbl;	b	PLAYER
	f	Lbbl;	c	PISTON
	f	Lbbl;	d	SHULKER_BOX
	f	Lbbl;	e	SHULKER
	f	[Lbbl;	f	$VALUES
c	bbm	net/minecraft/world/entity/NeutralMob
	m	()Lbbf;	G	getTarget
	m	()V	H_	stopBeingAngry
	m	()Z	I_	isAngry
	m	()V	J_	forgetCurrentTargetAndRefreshUniversalAnger
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lafo;Z)V	a	updatePersistentAnger
		p	1		world
		p	2		angerPersistent
	m	(Lbbf;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lcga;Lpj;)V	a	readPersistentAngerSaveData
		p	1		world
		p	2		nbt
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lbbf;)Z	a_	isAngryAt
		p	1		entity
	m	(Lbtf;)V	a_	playerDied
		p	1		player
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lcga;)Z	b	isAngryAtAllPlayers
		p	1		world
	m	()V	c	startPersistentAngerTimer
	m	(Lbbf;)Z	c	canAttack
		p	1		target
	m	(Lpj;)V	c	addPersistentAngerSaveData
		p	1		nbt
	m	(Lbtf;)V	d	setLastHurtByPlayer
		p	1		attacking
	m	()Lbbf;	dS	getLastHurtByMob
	m	(Lbbf;)V	h	setTarget
		p	1		target
	f	Ljava/lang/String;	a_	TAG_ANGER_TIME
	f	Ljava/lang/String;	b_	TAG_ANGRY_AT
c	bbn	net/minecraft/world/entity/OwnableEntity
	m	()Ljava/util/UUID;	d	getOwnerUUID
	m	()Lbaq;	e	getOwner
c	bbo	net/minecraft/world/entity/PathfinderMob
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcgb;Lbbj;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lgt;)F	f	getWalkTargetValue
		p	1		pos
	m	()Z	fH	isPathFinding
	m	()Z	fI	shouldStayCloseToLeashHolder
	m	()D	fJ	followLeashSpeed
	m	()V	fy	tickLeash
	m	(F)V	x	onLeashDistance
		p	1		leashLength
	f	F	bW	DEFAULT_WALK_TARGET_VALUE
c	bbp	net/minecraft/world/entity/PlayerRideable
c	bbq	net/minecraft/world/entity/PlayerRideableJumping
	m	()Z	a	canJump
	m	(I)V	a	onPlayerJump
		p	1		strength
	m	()V	b	handleStopJump
	m	(I)V	b	handleStartJump
		p	1		height
c	bbr	net/minecraft/world/entity/Pose
	m	()[Lbbr;	a	$values
	f	Lbbr;	a	STANDING
	f	Lbbr;	b	FALL_FLYING
	f	Lbbr;	c	SLEEPING
	f	Lbbr;	d	SWIMMING
	f	Lbbr;	e	SPIN_ATTACK
	f	Lbbr;	f	CROUCHING
	f	Lbbr;	g	LONG_JUMPING
	f	Lbbr;	h	DYING
	f	Lbbr;	i	CROAKING
	f	Lbbr;	j	USING_TONGUE
	f	Lbbr;	k	ROARING
	f	Lbbr;	l	SNIFFING
	f	Lbbr;	m	EMERGING
	f	Lbbr;	n	DIGGING
	f	[Lbbr;	o	$VALUES
c	bbs	net/minecraft/world/entity/PowerableMob
	m	()Z	a	isPowered
c	bbt	net/minecraft/world/entity/ReputationEventHandler
	m	(Lbls;Lbaq;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
c	bbu	net/minecraft/world/entity/Saddleable
	m	(Lajf;)V	a	equipSaddle
		p	1		sound
	m	()Z	c	isSaddleable
	m	()Z	d	isSaddled
c	bbv	net/minecraft/world/entity/Shearable
	m	()Z	a	readyForShearing
	m	(Lajf;)V	a	shear
		p	1		shearedSoundCategory
c	bbw	net/minecraft/world/entity/SlotAccess
	m	()Lcaa;	a	get
	m	(Lazf;I)Lbbw;	a	forContainer
		p	0		inventory
		p	1		index
	m	(Lazf;ILjava/util/function/Predicate;)Lbbw;	a	forContainer
		p	0		inventory
		p	1		index
		p	2		stackFilter
	m	(Lbbf;Lbav;)Lbbw;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
	m	(Lbbf;Lbav;Ljava/util/function/Predicate;)Lbbw;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
		p	2		filter
	m	(Lcaa;)Z	a	set
		p	1		stack
	m	(Lcaa;)Z	b	lambda$forEquipmentSlot$1
		p	0		stack
	m	(Lcaa;)Z	c	lambda$forContainer$0
		p	0		stack
	f	Lbbw;	a	NULL
c	bbw$1	net/minecraft/world/entity/SlotAccess$1
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
c	bbw$2	net/minecraft/world/entity/SlotAccess$2
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
	f	Lazf;	b	val$inventory
	f	I	c	val$id
	f	Ljava/util/function/Predicate;	d	val$validator
c	bbw$3	net/minecraft/world/entity/SlotAccess$3
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
	f	Lbbf;	b	val$entity
	f	Lbav;	c	val$slot
	f	Ljava/util/function/Predicate;	d	val$validator
c	bbx	net/minecraft/world/entity/SpawnGroupData
c	bby	net/minecraft/world/entity/SpawnPlacements
	m	(Lbau;)Lbby$c;	a	getPlacementType
		p	0		type
	m	(Lbau;Lbby$c;Lczu$a;Lbby$b;)V	a	register
		p	0		type
		p	1		location
		p	2		heightmapType
		p	3		predicate
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	a	checkSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbau;)Lczu$a;	b	getHeightmapType
		p	0		type
	f	Ljava/util/Map;	a	DATA_BY_TYPE
c	bby$a	net/minecraft/world/entity/SpawnPlacements$Data
	m	(Lczu$a;Lbby$c;Lbby$b;)V	<init>	<init>
		p	1		heightmapType
		p	2		location
		p	3		predicate
	f	Lczu$a;	a	heightMap
	f	Lbby$c;	b	placement
	f	Lbby$b;	c	predicate
c	bby$b	net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	test	test
		p	1		type
		p	2		world
		p	3		spawnReason
		p	4		pos
		p	5		random
c	bby$c	net/minecraft/world/entity/SpawnPlacements$Type
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		name
		p	2		id
	m	()[Lbby$c;	a	$values
	f	Lbby$c;	a	ON_GROUND
	f	Lbby$c;	b	IN_WATER
	f	Lbby$c;	c	NO_RESTRICTIONS
	f	Lbby$c;	d	IN_LAVA
	f	[Lbby$c;	e	$VALUES
c	bbz	net/minecraft/world/entity/TamableAnimal
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lbbf;Lbbf;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		uuid
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ldwt;	bZ	getTeam
	m	(Lbbf;)Z	c	canAttack
		p	1		target
	m	()Ljava/util/UUID;	d	getOwnerUUID
	m	()Lbaq;	e	getOwner
	m	(Lbtf;)V	e	tame
		p	1		player
	m	()Z	fK	isInSittingPose
	m	()Lbbf;	fL	getOwner
	m	()Z	fM	isOrderedToSit
	m	(Lbbf;)Z	k	isOwnedBy
		p	1		entity
	m	(Lbaq;)Z	p	isAlliedTo
		p	1		other
	m	()Z	q	isTame
	m	()V	t	reassessTameGoals
	m	(Z)V	v	spawnTamingParticles
		p	1		positive
	m	(Z)V	w	setTame
		p	1		tamed
	m	(Z)V	x	setInSittingPose
		p	1		inSittingPose
	m	(Z)V	y	setOrderedToSit
		p	1		sitting
	f	Lzr;	bX	DATA_FLAGS_ID
	f	Lzr;	bY	DATA_OWNERUUID_ID
	f	Z	ca	orderedToSit
c	bca	net/minecraft/world/entity/ai/Brain
	m	(Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		memories
		p	2		sensors
		p	3		memoryEntries
		p	4		codecSupplier
	m	()Ljava/util/Map;	a	getMemories
	m	(ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;	a	createPriorityPairs
		p	1		begin
		p	2		tasks
	m	(JJ)V	a	updateActivityFromSchedule
		p	1		timeOfDay
		p	3		time
	m	(Lafo;Lbbf;)V	a	tick
		p	1		world
		p	2		entity
	m	(Lbjx;)Z	a	hasMemoryValue
		p	1		type
	m	(Lbjx;Lbjy;)Z	a	checkMemory
		p	1		type
		p	2		state
	m	(Lbjx;Ljava/lang/Object;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lbjx;Ljava/lang/Object;J)V	a	setMemoryWithExpiry
		p	1		type
		p	2		value
		p	3		startTime
	m	(Lbjx;Ljava/util/Optional;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lbuq;)V	a	setActiveActivityIfPossible
		p	1		activity
	m	(Lbuq;ILcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		begin
		p	3		list
	m	(Lbuq;ILcom/google/common/collect/ImmutableList;Lbjx;)V	a	addActivityAndRemoveMemoryWhenStopped
		p	1		activity
		p	2		begin
		p	3		tasks
		p	4		memoryType
	m	(Lbuq;Lcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		indexedTasks
	m	(Lbuq;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	addActivityWithConditions
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
	m	(Lbuq;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V	a	addActivityAndRemoveMemoriesWhenStopped
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
		p	4		forgettingMemories
	m	(Lbus;)V	a	setSchedule
		p	1		schedule
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	serializeStart
		p	1		ops
	m	(Ljava/lang/Integer;)Ljava/util/Map;	a	lambda$addActivityAndRemoveMemoriesWhenStopped$2
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
		p	1		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$isMemoryValue$1
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lbca$b;	a	provider
		p	0		memoryModules
		p	1		sensors
	m	(Ljava/util/List;)V	a	setActiveActivityToFirstValid
		p	1		activities
	m	(Ljava/util/Map$Entry;)Lbca$a;	a	lambda$memories$0
	m	(Ljava/util/Set;)V	a	setCoreActivities
		p	1		coreActivities
	m	()Lbus;	b	getSchedule
	m	(Lafo;Lbbf;)V	b	stopAll
		p	1		world
		p	2		entity
	m	(Lbjx;)V	b	eraseMemory
		p	1		type
	m	(Lbjx;Ljava/lang/Object;)Z	b	isMemoryValue
		p	1		type
		p	2		value
	m	(Lbjx;Ljava/util/Optional;)V	b	setMemoryInternal
		p	1		type
		p	2		memory
	m	(Lbuq;)V	b	setDefaultActivity
		p	1		activity
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec;	b	codec
		p	0		memoryModules
		p	1		sensors
	m	()Ljava/util/Set;	c	getActiveActivities
	m	(Lafo;Lbbf;)V	c	tickSensors
		p	1		world
		p	2		entity
	m	(Lbjx;)Ljava/util/Optional;	c	getMemory
		p	1		type
	m	(Lbuq;)Z	c	isActive
		p	1		activity
	m	()Ljava/util/List;	d	getRunningBehaviors
	m	(Lafo;Lbbf;)V	d	startEachNonRunningBehavior
		p	1		world
		p	2		entity
	m	(Lbjx;)J	d	getTimeUntilExpiry
		p	1		type
	m	(Lbuq;)V	d	setActiveActivity
		p	1		except
	m	()V	e	useDefaultActivity
	m	(Lafo;Lbbf;)V	e	tickEachRunningBehavior
		p	1		world
		p	2		entity
	m	(Lbuq;)V	e	eraseMemoriesForOtherActivitesThan
		p	1		except
	m	()Ljava/util/Optional;	f	getActiveNonCoreActivity
	m	(Lbuq;)Z	f	activityRequirementsAreMet
		p	1		activity
	m	()V	g	removeAllBehaviors
	m	(Lbuq;)Ljava/util/Set;	g	lambda$addActivityAndRemoveMemoriesWhenStopped$3
	m	()Lbca;	h	copyWithoutBehaviors
	m	()Ljava/util/stream/Stream;	i	memories
	m	()V	j	forgetOutdatedMemories
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Supplier;	b	codec
	f	I	c	SCHEDULE_UPDATE_DELAY
	f	Ljava/util/Map;	d	memories
	f	Ljava/util/Map;	e	sensors
	f	Ljava/util/Map;	f	availableBehaviorsByPriority
	f	Lbus;	g	schedule
	f	Ljava/util/Map;	h	activityRequirements
	f	Ljava/util/Map;	i	activityMemoriesToEraseWhenStopped
	f	Ljava/util/Set;	j	coreActivities
	f	Ljava/util/Set;	k	activeActivities
	f	Lbuq;	l	defaultActivity
	f	J	m	lastScheduleUpdate
c	bca$1	net/minecraft/world/entity/ai/Brain$1
	m	(Lbca;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	m	(Lbjx;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$5
	m	(Lbjx;Lbjw;)Lbca$a;	a	lambda$captureRead$7
	m	(Lbjx;Lcom/mojang/serialization/Codec;)Laaj;	a	lambda$keys$0
	m	(Lbjx;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	captureRead
	m	(Lcom/mojang/serialization/DynamicOps;Laaj;)Ljava/lang/Object;	a	lambda$keys$2
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lbjx;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Lbca$a;)V	a	lambda$encode$8
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$6
	m	(Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$decode$4
	m	(Lbjx;)Ljava/util/stream/Stream;	b	lambda$keys$1
	f	Ljava/util/Collection;	a	val$memoryTypes
	f	Ljava/util/Collection;	b	val$sensorTypes
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	c	val$codecReference
c	bca$a	net/minecraft/world/entity/ai/Brain$MemoryValue
	m	(Lbjx;Ljava/util/Optional;)V	<init>	<init>
		p	1		type
		p	2		data
	m	(Lbca;)V	a	setMemoryInternal
		p	1		brain
	m	(Lbjx;Ljava/util/Optional;)Lbca$a;	a	createUnchecked
		p	0		type
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V	a	serialize
		p	1		ops
		p	2		builder
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V	a	lambda$serialize$1
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lbjw;)V	a	lambda$serialize$0
	f	Lbjx;	a	type
	f	Ljava/util/Optional;	b	value
c	bca$b	net/minecraft/world/entity/ai/Brain$Provider
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	<init>	<init>
		p	1		memoryModules
		p	2		sensors
	m	()Lbca;	a	lambda$makeBrain$1
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		data
	m	()Lcom/mojang/serialization/Codec;	b	lambda$makeBrain$0
	f	Ljava/util/Collection;	a	memoryTypes
	f	Ljava/util/Collection;	b	sensorTypes
	f	Lcom/mojang/serialization/Codec;	c	codec
c	bcb	net/minecraft/world/entity/ai/attributes/Attribute
	m	(Ljava/lang/String;D)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
	m	()D	a	getDefaultValue
	m	(D)D	a	sanitizeValue
		p	1		value
	m	(Z)Lbcb;	a	setSyncable
		p	1		tracked
	m	()Z	b	isClientSyncable
	m	()Ljava/lang/String;	c	getDescriptionId
	f	I	a	MAX_NAME_LENGTH
	f	D	b	defaultValue
	f	Z	c	syncable
	f	Ljava/lang/String;	d	descriptionId
c	bcc	net/minecraft/world/entity/ai/attributes/AttributeInstance
	m	(Lbcb;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		type
		p	2		updateCallback
	m	()Lbcb;	a	getAttribute
	m	(D)V	a	setBaseValue
		p	1		baseValue
	m	(Lbcc;)V	a	replaceFrom
		p	1		other
	m	(Lbce$a;)Ljava/util/Set;	a	getModifiers
		p	1		operation
	m	(Lbce$a;Ljava/util/Set;)V	a	lambda$replaceFrom$1
		p	1		operation
		p	2		modifiers
	m	(Lbce;)Z	a	hasModifier
		p	1		modifier
	m	(Ljava/util/UUID;)Lbce;	a	getModifier
		p	1		uuid
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()D	b	getBaseValue
	m	(Lbce$a;)Ljava/util/Collection;	b	getModifiersOrEmpty
		p	1		operation
	m	(Lbce;)V	b	addTransientModifier
		p	1		modifier
	m	(Ljava/util/UUID;)V	b	removeModifier
		p	1		uuid
	m	()Ljava/util/Set;	c	getModifiers
	m	(Lbce$a;)Ljava/util/Set;	c	lambda$getModifiers$0
		p	0		operation
	m	(Lbce;)V	c	addPermanentModifier
		p	1		modifier
	m	(Ljava/util/UUID;)Z	c	removePermanentModifier
		p	1		uuid
	m	()V	d	setDirty
	m	(Lbce;)V	d	removeModifier
		p	1		modifier
	m	()V	e	removeModifiers
	m	(Lbce;)V	e	addModifier
		p	1		modifier
	m	()D	f	getValue
	m	()Lpj;	g	save
	m	()D	h	calculateValue
	f	Lbcb;	a	attribute
	f	Ljava/util/Map;	b	modifiersByOperation
	f	Ljava/util/Map;	c	modifierById
	f	Ljava/util/Set;	d	permanentModifiers
	f	D	e	baseValue
	f	Z	f	dirty
	f	D	g	cachedValue
	f	Ljava/util/function/Consumer;	h	onDirty
c	bcd	net/minecraft/world/entity/ai/attributes/AttributeMap
	m	(Lbcf;)V	<init>	<init>
		p	1		defaultAttributes
	m	()Ljava/util/Set;	a	getDirtyAttributes
	m	(Lbcb;)Lbcc;	a	getInstance
		p	1		attribute
	m	(Lbcb;Lbce;)V	a	lambda$addTransientAttributeModifiers$3
		p	1		attribute
		p	2		attributeModifier
	m	(Lbcb;Ljava/util/Collection;)V	a	lambda$removeAttributeModifiers$2
		p	1		attribute
	m	(Lbcb;Ljava/util/UUID;)Z	a	hasModifier
		p	1		attribute
		p	2		uuid
	m	(Lbcc;)V	a	onAttributeModified
		p	1		instance
	m	(Lbcd;)V	a	assignValues
		p	1		other
	m	(Lcom/google/common/collect/Multimap;)V	a	removeAttributeModifiers
		p	1		attributeModifiers
	m	(Ljava/lang/String;)V	a	lambda$load$6
	m	(Lpj;Lbcb;)V	a	lambda$load$5
		p	2		attribute
	m	(Lpp;)V	a	load
		p	1		nbt
	m	()Ljava/util/Collection;	b	getSyncableAttributes
	m	(Lbcb;)Z	b	hasAttribute
		p	1		attribute
	m	(Lbcb;Ljava/util/UUID;)D	b	getModifierValue
		p	1		attribute
		p	2		uuid
	m	(Lbcc;)V	b	lambda$assignValues$4
		p	1		attributeInstance
	m	(Lcom/google/common/collect/Multimap;)V	b	addTransientAttributeModifiers
		p	1		attributeModifiers
	m	()Lpp;	c	save
	m	(Lbcb;)D	c	getValue
		p	1		attribute
	m	(Lbcc;)Z	c	lambda$getSyncableAttributes$0
		p	0		attribute
	m	(Lbcb;)D	d	getBaseValue
		p	1		attribute
	m	(Lbcb;)Lbcc;	e	lambda$getInstance$1
		p	1		attribute
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	attributes
	f	Ljava/util/Set;	c	dirtyAttributes
	f	Lbcf;	d	supplier
c	bce	net/minecraft/world/entity/ai/attributes/AttributeModifier
	m	(Ljava/lang/String;DLbce$a;)V	<init>	<init>
		p	1		name
		p	2		value
		p	4		operation
	m	(Ljava/util/UUID;Ljava/lang/String;DLbce$a;)V	<init>	<init>
		p	1		uuid
		p	2		name
		p	3		value
		p	5		operation
	m	(Ljava/util/UUID;Ljava/util/function/Supplier;DLbce$a;)V	<init>	<init>
		p	1		uuid
		p	2		nameGetter
		p	3		value
		p	5		operation
	m	()Ljava/util/UUID;	a	getId
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$1
	m	(Lpj;)Lbce;	a	load
		p	0		nbt
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$new$0
	m	()Lbce$a;	c	getOperation
	m	()D	d	getAmount
	m	()Lpj;	e	save
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	D	b	amount
	f	Lbce$a;	c	operation
	f	Ljava/util/function/Supplier;	d	nameGetter
	f	Ljava/util/UUID;	e	id
c	bce$a	net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()I	a	toValue
	m	(I)Lbce$a;	a	fromValue
		p	0		id
	m	()[Lbce$a;	b	$values
	f	Lbce$a;	a	ADDITION
	f	Lbce$a;	b	MULTIPLY_BASE
	f	Lbce$a;	c	MULTIPLY_TOTAL
	f	[Lbce$a;	d	OPERATIONS
	f	I	e	value
	f	[Lbce$a;	f	$VALUES
c	bcf	net/minecraft/world/entity/ai/attributes/AttributeSupplier
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		instances
	m	()Lbcf$a;	a	builder
	m	(Lbcb;)D	a	getValue
		p	1		attribute
	m	(Lbcb;Ljava/util/UUID;)D	a	getModifierValue
		p	1		attribute
		p	2		uuid
	m	(Ljava/util/function/Consumer;Lbcb;)Lbcc;	a	createInstance
		p	1		updateCallback
		p	2		attribute
	m	(Lbcb;)D	b	getBaseValue
		p	1		attribute
	m	(Lbcb;Ljava/util/UUID;)Z	b	hasModifier
		p	1		type
		p	2		uuid
	m	(Lbcb;)Z	c	hasAttribute
		p	1		type
	m	(Lbcb;)Lbcc;	d	getAttributeInstance
		p	1		attribute
	f	Ljava/util/Map;	a	instances
c	bcf$a	net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	m	()Lbcf;	a	build
	m	(Lbcb;)Lbcf$a;	a	add
		p	1		attribute
	m	(Lbcb;D)Lbcf$a;	a	add
		p	1		attribute
		p	2		baseValue
	m	(Lbcb;Lbcc;)V	a	lambda$create$0
		p	2		attribute
	m	(Lbcb;)Lbcc;	b	create
		p	1		attribute
	f	Ljava/util/Map;	a	builder
	f	Z	b	instanceFrozen
c	bcg	net/minecraft/world/entity/ai/attributes/Attributes
	m	(Ljava/lang/String;Lbcb;)Lbcb;	a	register
		p	0		id
		p	1		attribute
	f	Lbcb;	a	MAX_HEALTH
	f	Lbcb;	b	FOLLOW_RANGE
	f	Lbcb;	c	KNOCKBACK_RESISTANCE
	f	Lbcb;	d	MOVEMENT_SPEED
	f	Lbcb;	e	FLYING_SPEED
	f	Lbcb;	f	ATTACK_DAMAGE
	f	Lbcb;	g	ATTACK_KNOCKBACK
	f	Lbcb;	h	ATTACK_SPEED
	f	Lbcb;	i	ARMOR
	f	Lbcb;	j	ARMOR_TOUGHNESS
	f	Lbcb;	k	LUCK
	f	Lbcb;	l	SPAWN_REINFORCEMENTS_CHANCE
	f	Lbcb;	m	JUMP_STRENGTH
c	bch	net/minecraft/world/entity/ai/attributes/DefaultAttributes
	m	()V	a	validate
	m	(Laaj;)V	a	lambda$validate$2
		p	0		id
	m	(Lbau;)Lbcf;	a	getSupplier
		p	0		type
	m	(Lbau;)Z	b	hasSupplier
		p	0		type
	m	(Lbau;)Z	c	lambda$validate$1
		p	0		entityType
	m	(Lbau;)Z	d	lambda$validate$0
		p	0		entityType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	SUPPLIERS
c	bci	net/minecraft/world/entity/ai/attributes/RangedAttribute
	m	(Ljava/lang/String;DDD)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
		p	4		min
		p	6		max
	m	(D)D	a	sanitizeValue
		p	1		value
	m	()D	d	getMinValue
	m	()D	e	getMaxValue
	f	D	b	minValue
	f	D	c	maxValue
c	bcj	net/minecraft/world/entity/ai/attributes/package-info
c	bck	net/minecraft/world/entity/ai/behavior/AcquirePoi
	m	(Ljava/util/function/Predicate;Lbjx;Lbjx;ZLjava/util/Optional;)V	<init>	<init>
		p	1		poiTypePredicate
		p	2		moduleType
		p	3		targetMemoryModuleType
		p	4		onlyRunIfChild
		p	5		entityStatus
	m	(Ljava/util/function/Predicate;Lbjx;ZLjava/util/Optional;)V	<init>	<init>
		p	1		poiTypePredicate
		p	2		moduleType
		p	3		onlyRunIfChild
		p	4		entityStatus
	m	(JLgt;)Z	a	lambda$start$1
		p	3		pos
	m	(JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z	a	lambda$start$0
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;Ljava/lang/Byte;)V	a	lambda$start$3
	m	(Lbbh;Ljava/util/Set;)Ldpo;	a	findPathToPois
		p	0		entity
		p	1		pois
	m	(Lbbo;JJ)Lbck$a;	a	lambda$start$5
	m	(Lbjx;Lbjx;)Lcom/google/common/collect/ImmutableMap;	a	constructEntryConditionMap
		p	0		firstModule
		p	1		secondModule
	m	(Lblv;Lgt;Lbbo;Lafo;Lhc;)V	a	lambda$start$4
	m	(Lgt;Lhc;Lgt;)Z	a	lambda$start$2
	f	I	a	SCAN_RANGE
	f	I	d	BATCH_SIZE
	f	I	e	RATE
	f	Ljava/util/function/Predicate;	f	poiType
	f	Lbjx;	g	memoryToAcquire
	f	Z	h	onlyIfAdult
	f	Ljava/util/Optional;	i	onPoiAcquisitionEvent
	f	J	j	nextScheduledStart
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	k	batchCache
c	bck$a	net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	m	(Lalu;J)V	<init>	<init>
		p	1		random
		p	2		time
	m	(J)V	a	markAttempt
		p	1		time
	m	(J)Z	b	isStillValid
		p	1		time
	m	(J)Z	c	shouldRetry
		p	1		time
	f	I	a	MIN_INTERVAL_INCREASE
	f	I	b	MAX_INTERVAL_INCREASE
	f	I	c	MAX_RETRY_PATHFINDING_INTERVAL
	f	Lalu;	d	random
	f	J	e	previousAttemptTimestamp
	f	J	f	nextScheduledAttemptTimestamp
	f	I	g	currentDelay
c	bcl	net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	m	(Lbau;F)V	<init>	<init>
		p	1		targetType
		p	2		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbmh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbmh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbmh;)Lbmh;	a	getBreedTarget
		p	1		animal
	m	(Lbmh;Lbbf;)Z	a	lambda$findValidBreedPartner$0
		p	2		entity
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbmh;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbmh;)Z	b	hasBreedTargetOfRightType
		p	1		animal
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbmh;J)V	c	tick
	m	(Lbmh;)Ljava/util/Optional;	c	findValidBreedPartner
		p	1		animal
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbmh;J)V	d	stop
	f	I	a	BREED_RANGE
	f	I	d	MIN_DURATION
	f	I	e	MAX_DURATION
	f	Lbau;	f	partnerType
	f	F	g	speedModifier
	f	J	h	spawnChildAtTime
c	bcm	net/minecraft/world/entity/ai/behavior/AnimalPanic
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)Z	a	canStillUse
	m	(Lbbo;Lafo;)Ldvt;	a	getPanicPos
		p	1		entity
		p	2		world
	m	(Lcfg;Lbaq;)Ljava/util/Optional;	a	lookForWater
		p	1		world
		p	2		entity
	m	(Lcfg;Lgt;)Z	a	lambda$lookForWater$0
		p	1		pos
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	PANIC_MIN_DURATION
	f	I	d	PANIC_MAX_DURATION
	f	I	e	PANIC_DISTANCE_HORIZONTAL
	f	I	f	PANIC_DISTANCE_VERTICAL
	f	F	g	speedMultiplier
c	bcn	net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbss;Lafo;Lbsv;)V	a	lambda$start$3
		p	2		profession
	m	(Lhb;Lafo;)Ljava/util/Optional;	a	lambda$start$0
		p	1		world
	m	(Lhc;)Ljava/util/Optional;	a	lambda$start$2
	m	(Lhc;Lbsv;)Z	a	lambda$start$1
		p	1		profession
c	bco	net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	m	(Layx;F)V	<init>	<init>
		p	1		executionRange
		p	2		speed
	m	(Layx;Ljava/util/function/Function;)V	<init>	<init>
		p	1		executionRange
		p	2		speed
	m	(FLbbf;)Ljava/lang/Float;	a	lambda$new$0
		p	1		entity
	m	(Lafo;Lban;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lban;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lban;)Lban;	a	getNearestAdult
		p	1		entity
	f	Layx;	a	followRange
	f	Ljava/util/function/Function;	d	speedModifier
c	bcp	net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	m	(IF)V	<init>	<init>
		p	1		distance
		p	2		forwardMovement
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbh;)Z	a	isTargetVisible
		p	1		entity
	m	(Lbbh;)Z	b	isTargetTooClose
		p	1		entity
	m	(Lbbh;)Lbbf;	c	getTarget
		p	1		entity
	f	I	a	tooCloseDistance
	f	F	d	strafeSpeed
c	bcq	net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	m	(Lbjx;I)V	<init>	<init>
		p	1		requiredMemoryModuleType
		p	2		duration
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	pacifyDuration
c	bcr	net/minecraft/world/entity/ai/behavior/Behavior
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		requiredMemoryState
	m	(Ljava/util/Map;I)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		runTime
	m	(Ljava/util/Map;II)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		minRunTime
		p	3		maxRunTime
	m	()Lbcr$a;	a	getStatus
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	hasRequiredMemories
		p	1		entity
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	Lbcr$a;	a	status
	f	I	b	DEFAULT_DURATION
	f	Ljava/util/Map;	c	entryCondition
	f	J	d	endTimestamp
	f	I	e	minDuration
	f	I	f	maxDuration
c	bcr$a	net/minecraft/world/entity/ai/behavior/Behavior$Status
	m	()[Lbcr$a;	a	$values
	f	Lbcr$a;	a	STOPPED
	f	Lbcr$a;	b	RUNNING
	f	[Lbcr$a;	c	$VALUES
c	bcs	net/minecraft/world/entity/ai/behavior/BehaviorUtils
	m	(Lafo;ILhq;)Z	a	lambda$findSectionClosestToVillage$2
		p	2		sectionPos
	m	(Lafo;Lhq;I)Lhq;	a	findSectionClosestToVillage
		p	0		world
		p	1		center
		p	2		radius
	m	(Lbaq;)Lbbf;	a	lambda$getLivingEntityFromUUIDMemory$4
		p	0		target
	m	(Lbau;Lbbf;)Z	a	lambda$targetIsValid$0
		p	1		entity
	m	(Lbbf;)Z	a	isBreeding
		p	0		entity
	m	(Lbbf;Lbaq;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbbf;Lbbf;)V	a	lookAtEntity
		p	0		entity
		p	1		target
	m	(Lbbf;Lbbf;D)Z	a	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
		p	0		source
		p	1		target
		p	2		extraDistance
	m	(Lbbf;Lbbf;F)V	a	lockGazeAndWalkToEachOther
		p	0		first
		p	1		second
		p	2		speed
	m	(Lbbf;Lbbf;Lbbf;)Lbbf;	a	getTargetNearestMe
		p	0		source
		p	1		first
		p	2		second
	m	(Lbbf;Lbef;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbbf;Lbjx;)Ljava/util/Optional;	a	getLivingEntityFromUUIDMemory
		p	0		entity
		p	1		uuidMemoryModule
	m	(Lbbf;Lcaa;Ldvt;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
	m	(Lbbf;Lcaa;Ldvt;Ldvt;F)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
		p	3		velocityFactor
		p	4		yOffset
	m	(Lbbf;Lgt;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbbf;Ljava/util/Optional;Lbbf;)Lbbf;	a	getNearestTarget
		p	0		source
		p	1		first
		p	2		second
	m	(Lbbf;Ljava/util/UUID;)Lbaq;	a	lambda$getLivingEntityFromUUIDMemory$3
		p	1		uuid
	m	(Lbbh;Lbbf;I)Z	a	isWithinAttackRange
		p	0		mob
		p	1		target
		p	2		rangedWeaponReachReduction
	m	(Lbbo;II)Ldvt;	a	getRandomSwimmablePos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbca;Lbbf;)Z	a	entityIsVisible
		p	0		brain
		p	1		target
	m	(Lbca;Lbjx;Lbau;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryModuleType
		p	2		entityType
	m	(Lbca;Lbjx;Ljava/util/function/Predicate;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryType
		p	2		filter
	m	(Lbss;Lbbf;)Z	a	lambda$getNearbyVillagersWithCondition$5
		p	1		entity
	m	(Lbss;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	a	getNearbyVillagersWithCondition
		p	0		villager
		p	1		filter
	m	(Lbss;Ljava/util/function/Predicate;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$getNearbyVillagersWithCondition$7
	m	(Lbbf;)Lbss;	b	lambda$getNearbyVillagersWithCondition$6
	m	(Lbbf;Lbbf;)Z	b	canSee
		p	0		source
		p	1		target
	m	(Lbbf;Lbbf;F)V	b	setWalkAndLookTargetMemoriesToEachOther
		p	0		first
		p	1		second
		p	2		speed
	m	(Lbca;Lbbf;)Z	b	lambda$targetIsValid$1
		p	1		target
	m	(Lbbf;Lbbf;)V	c	lookAtEachOther
		p	0		first
		p	1		second
c	bct	net/minecraft/world/entity/ai/behavior/BlockPosTracker
	m	(Lgt;)V	<init>	<init>
		p	1		blockPos
	m	()Ldvt;	a	currentPosition
	m	(Lbbf;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgt;	b	currentBlockPosition
	f	Lgt;	a	blockPos
	f	Ldvt;	b	centerPosition
c	bcu	net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lbyt;I)Lcaa;	a	getFirework
		p	1		color
		p	2		flight
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	b	stop
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lbum;	a	currentRaid
c	bcv	net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	m	(Ljava/util/function/Predicate;Lbjx;Lbjx;Layx;)V	<init>	<init>
		p	1		runPredicate
		p	2		sourceType
		p	3		targetType
		p	4		duration
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/util/function/Predicate;	a	predicate
	f	Lbjx;	d	sourceMemory
	f	Lbjx;	e	targetMemory
	f	Layx;	f	durationOfCopy
c	bcw	net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	m	(Lbjx;)V	<init>	<init>
		p	1		moduleType
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lbbf;)Ljava/util/Optional;	a	getCooldownTickMemory
		p	1		entity
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lbjx;	a	cooldownTicks
c	bcx	net/minecraft/world/entity/ai/behavior/Croak
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbnt;J)Z	a	canStillUse
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	CROAK_TICKS
	f	I	d	TIME_OUT_DURATION
	f	I	e	croakCounter
c	bcy	net/minecraft/world/entity/ai/behavior/CrossbowAttack
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)Z	a	canStillUse
	m	(Lbbf;)Lbbf;	a	getAttackTarget
		p	0		entity
	m	(Lbbh;Lbbf;)V	a	crossbowAttack
		p	1		entity
		p	2		target
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	b	tick
	m	(Lbbh;Lbbf;)V	b	lookAtTarget
		p	1		entity
		p	2		target
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	TIMEOUT
	f	I	d	attackDelay
	f	Lbcy$a;	e	crossbowState
c	bcy$a	net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	m	()[Lbcy$a;	a	$values
	f	Lbcy$a;	a	UNCHARGED
	f	Lbcy$a;	b	CHARGING
	f	Lbcy$a;	c	CHARGED
	f	Lbcy$a;	d	READY_TO_ATTACK
	f	[Lbcy$a;	e	$VALUES
c	bcz	net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	m	(ILjava/util/function/BiPredicate;)V	<init>	<init>
		p	1		range
		p	2		alternativeRideCondition
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;Lbaq;)Z	a	isVehicleValid
		p	1		entity
		p	2		target
	f	I	a	maxWalkDistToRideTarget
	f	Ljava/util/function/BiPredicate;	d	dontRideIf
c	bda	net/minecraft/world/entity/ai/behavior/DoNothing
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
c	bdb	net/minecraft/world/entity/ai/behavior/EntityTracker
	m	(Lbaq;Z)V	<init>	<init>
		p	1		entity
		p	2		useEyeHeight
	m	()Ldvt;	a	currentPosition
	m	(Lbbf;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgt;	b	currentBlockPosition
	m	()Lbaq;	c	getEntity
	f	Lbaq;	a	entity
	f	Z	b	trackEyeHeight
c	bdc	net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	m	(Ljava/util/function/Predicate;Lbjx;)V	<init>	<init>
		p	1		condition
		p	2		memory
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/util/function/Predicate;	a	predicate
	f	Lbjx;	d	memoryType
c	bdd	net/minecraft/world/entity/ai/behavior/FlyingRandomStroll
	m	(F)V	<init>	<init>
		p	1		speed
	m	(FZ)V	<init>	<init>
		p	1		speed
		p	2		strollInsideWater
	m	(Lbbo;)Ldvt;	a	getTargetPos
		p	1		entity
c	bde	net/minecraft/world/entity/ai/behavior/FollowTemptation
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)Z	a	canStillUse
	m	(Lbbo;)F	a	getSpeedModifier
		p	1		entity
	m	()Lcom/google/common/collect/ImmutableMap;	b	lambda$new$0
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	b	start
	m	(Lbbo;)Ljava/util/Optional;	b	getTemptingPlayer
		p	1		entity
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	TEMPTATION_COOLDOWN
	f	D	d	CLOSE_ENOUGH_DIST
	f	Ljava/util/function/Function;	e	speedModifier
c	bdf	net/minecraft/world/entity/ai/behavior/GateBehavior
	m	(Ljava/util/Map;Ljava/util/Set;Lbdf$a;Lbdf$b;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		memoriesToForgetWhenStopped
		p	3		order
		p	4		runMode
		p	5		tasks
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;JLbcr;)V	a	lambda$stop$6
		p	4		task
	m	(Lbcr;)Z	a	lambda$toString$7
		p	0		task
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$0
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;JLbcr;)V	b	lambda$tick$4
		p	4		task
	m	(Lbcr;)Z	b	lambda$stop$5
		p	0		task
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;JLbcr;)Z	c	lambda$canStillUse$2
		p	4		task
	m	(Lbcr;)Z	c	lambda$tick$3
		p	0		task
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbcr;)Z	d	lambda$canStillUse$1
		p	0		task
	f	Ljava/util/Set;	a	exitErasedMemories
	f	Lbdf$a;	d	orderPolicy
	f	Lbdf$b;	e	runningPolicy
	f	Lbfb;	f	behaviors
c	bdf$a	net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
		p	3		listModifier
	m	()[Lbdf$a;	a	$values
	m	(Lbfb;)V	a	apply
		p	1		list
	m	(Lbfb;)V	b	lambda$static$0
	f	Lbdf$a;	a	ORDERED
	f	Lbdf$a;	b	SHUFFLED
	f	Ljava/util/function/Consumer;	c	consumer
	f	[Lbdf$a;	d	$VALUES
c	bdf$b	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	m	()[Lbdf$b;	a	$values
	m	(Ljava/util/stream/Stream;Lafo;Lbbf;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
	f	Lbdf$b;	a	RUN_ONE
	f	Lbdf$b;	b	TRY_ALL
	f	[Lbdf$b;	c	$VALUES
c	bdf$b$1	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	m	(Lafo;Lbbf;JLbcr;)Z	a	lambda$apply$1
		p	4		task
	m	(Lbcr;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Lafo;Lbbf;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	bdf$b$2	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	m	(Lafo;Lbbf;JLbcr;)V	a	lambda$apply$1
		p	4		task
	m	(Lbcr;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Lafo;Lbbf;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	bdg	net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	m	(I)V	<init>	<init>
		p	1		delay
	m	(Lafo;)I	a	calculateTimeUntilNextGift
		p	0		world
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbss;)Ljava/util/List;	a	getItemToThrow
		p	1		villager
	m	(Lbss;Lbbf;)V	a	throwGift
		p	1		villager
		p	2		recipient
	m	(Lbss;Lbtf;)Z	a	isWithinThrowingDistance
		p	1		villager
		p	2		player
	m	(Lbtf;)Z	a	isHero
		p	1		player
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbss;)Z	b	isHeroVisible
		p	1		villager
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	tick
	m	(Lbss;)Ljava/util/Optional;	c	getNearestTargetableHero
		p	1		villager
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	d	stop
	f	I	a	THROW_GIFT_AT_DISTANCE
	f	I	d	MIN_TIME_BETWEEN_GIFTS
	f	I	e	MAX_TIME_BETWEEN_GIFTS
	f	I	f	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	f	Ljava/util/Map;	g	GIFTS
	f	F	h	SPEED_MODIFIER
	f	I	i	timeUntilNextGift
	f	Z	j	giftGivenDuringThisRun
	f	J	k	timeSinceStart
c	bdh	net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	m	(Ljava/util/function/Function;F)V	<init>	<init>
		p	1		lookTargetFunction
		p	2		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	canThrowItemToTarget
		p	1		entity
	m	(Lbbf;Lbef;)V	a	lambda$start$0
		p	2		target
	m	(Lbbf;Lcaa;Ldvt;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		target
	m	(Lbef;)Ldvt;	a	getThrowPosition
		p	0		target
	m	(Lbef;Lcaa;Lafp;)V	a	triggerDropItemOnBlock
		p	1		target
		p	2		stack
		p	3		player
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbef;Lcaa;Lafp;)V	b	lambda$tick$1
		p	3		player
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	CLOSE_ENOUGH_DISTANCE_TO_TARGET
	f	I	d	ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	f	Ljava/util/function/Function;	e	targetPositionGetter
	f	F	f	speedModifier
c	bdi	net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
c	bdj	net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	m	(FI)V	<init>	<init>
		p	1		speed
		p	2		completionRange
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lblv;Lgt;)D	a	lambda$start$0
	f	F	a	speedModifier
	f	I	d	closeEnoughDistance
c	bdk	net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lafo;Lhb;)V	a	lambda$stop$2
		p	1		pos
	m	(Lbuq;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$0
		p	0		activity
	m	(Lhc;)Z	a	lambda$stop$1
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	b	tick
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	F	a	speedModifier
	f	I	d	TICKS_UNTIL_TIMEOUT
c	bdl	net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	m	(Lbjx;IF)V	<init>	<init>
		p	1		memoryModuleType
		p	2		completionRange
		p	3		speed
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lalu;)I	a	getRandomOffset
		p	0		random
	m	(Lbbh;)Lgt;	a	getTargetLocation
		p	1		entity
	m	(Lbbh;Lgt;)Lgt;	a	getNearbyPos
		p	0		mob
		p	1		pos
	f	Lbjx;	a	locationMemory
	f	I	d	closeEnoughDist
	f	F	e	speedModifier
c	bdm	net/minecraft/world/entity/ai/behavior/GoToWantedItem
	m	(FZI)V	<init>	<init>
		p	1		speed
		p	2		requiresWalkTarget
		p	3		radius
	m	(Ljava/util/function/Predicate;FZI)V	<init>	<init>
		p	1		startCondition
		p	2		speed
		p	3		requiresWalkTarget
		p	4		radius
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	isOnPickupCooldown
		p	1		entity
	m	(Lbbf;)Lbpy;	b	getClosestLovedItem
		p	1		entity
	m	(Lbbf;)Z	c	lambda$new$0
		p	0		entity
	f	Ljava/util/function/Predicate;	a	predicate
	f	I	d	maxDistToWalk
	f	F	e	speedModifier
c	bdn	net/minecraft/world/entity/ai/behavior/HarvestFarmland
	m	(Lafo;)Lgt;	a	getValidFarmland
		p	1		world
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lgt;Lafo;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	b	stop
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)Z	d	canStillUse
	f	F	a	SPEED_MODIFIER
	f	I	d	HARVEST_DURATION
	f	Lgt;	e	aboveFarmlandPos
	f	J	f	nextOkStartTime
	f	I	g	timeWorkedSoFar
	f	Ljava/util/List;	h	validFarmlandAroundVillager
c	bdo	net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;Lgt;)Z	a	lambda$start$2
	m	(Lafo;Lgt;)Z	a	lambda$start$0
		p	1		pos
	m	(Lbbo;Lgt;)V	a	lambda$start$3
		p	2		pos
	m	(Lafo;Lbbo;Lgt;)Z	b	lambda$start$1
		p	2		pos
	f	F	a	speedModifier
c	bdp	net/minecraft/world/entity/ai/behavior/InteractWith
	m	(Lbau;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lbjx;FI)V	<init>	<init>
		p	1		entityType
		p	2		maxDistance
		p	3		shouldRunPredicate
		p	4		predicate
		p	5		targetModule
		p	6		speed
		p	7		completionRange
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbau;ILbjx;FI)Lbdp;	a	of
		p	0		entityType
		p	1		maxDistance
		p	2		targetModule
		p	3		speed
		p	4		completionRange
	m	(Lbau;ILjava/util/function/Predicate;Lbjx;FI)Lbdp;	a	of
		p	0		entityType
		p	1		maxDistance
		p	2		condition
		p	3		moduleType
		p	4		speed
		p	5		completionRange
	m	(Lbbf;)Z	a	seesAtLeastOneValidTarget
		p	1		entity
	m	(Lbbf;Lbbf;)Z	a	canInteract
		p	1		self
		p	2		target
	m	(Lbca;Lbbf;)V	a	lambda$start$4
		p	2		target
	m	(Lbbf;)Z	b	isTargetValid
		p	1		entity
	m	(Lbbf;Lbbf;)Z	b	lambda$start$3
		p	2		target
	m	(Lbbf;)Z	c	lambda$of$2
		p	0		entity
	m	(Lbbf;)Z	d	lambda$of$1
		p	0		entity
	m	(Lbbf;)Z	e	lambda$of$0
		p	0		entity
	f	I	a	maxDist
	f	F	d	speedModifier
	f	Lbau;	e	type
	f	I	f	interactionRangeSqr
	f	Ljava/util/function/Predicate;	g	targetFilter
	f	Ljava/util/function/Predicate;	h	selfFilter
	f	Lbjx;	i	memory
c	bdq	net/minecraft/world/entity/ai/behavior/InteractWithDoor
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;Ldpm;Ldpm;)V	a	closeDoorsThatIHaveOpenedOrPassedThrough
		p	0		world
		p	1		entity
		p	2		lastNode
		p	3		currentNode
	m	(Lafo;Lbbf;Lgt;)Z	a	areOtherMobsComingThroughDoor
		p	0		world
		p	1		entity
		p	2		pos
	m	(Lafo;Lbbf;Lhb;)Z	a	isDoorTooFarAway
		p	0		world
		p	1		entity
		p	2		doorPos
	m	(Lafo;Lgt;Lbbf;)Z	a	lambda$areOtherMobsComingThroughDoor$5
	m	(Lbbf;Lbbf;)Z	a	lambda$areOtherMobsComingThroughDoor$3
	m	(Lcuq$a;)Z	a	lambda$closeDoorsThatIHaveOpenedOrPassedThrough$2
		p	0		state
	m	(Lgt;Lbbf;)Z	a	lambda$areOtherMobsComingThroughDoor$4
	m	(Lafo;Lbbf;Lgt;)Z	b	isMobComingThroughDoor
		p	0		world
		p	1		entity
		p	2		pos
	m	(Lcuq$a;)Z	b	lambda$start$1
		p	0		state
	m	(Lafo;Lbbf;Lgt;)V	c	rememberDoorToClose
		p	1		world
		p	2		entity
		p	3		pos
	m	(Lcuq$a;)Z	c	lambda$start$0
		p	0		state
	f	I	a	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	f	D	d	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	f	D	e	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
	f	Ldpm;	f	lastCheckedNode
	f	I	g	remainingCooldown
c	bdr	net/minecraft/world/entity/ai/behavior/JumpOnBed
	m	(F)V	<init>	<init>
		p	1		walkSpeed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;Lgt;)V	a	lambda$start$0
		p	3		pos
	m	(Lafo;Lgt;)Z	a	isBed
		p	1		world
		p	2		pos
	m	(Lbbh;)Ljava/util/Optional;	a	getNearestBed
		p	1		mob
	m	(Lbbh;Lgt;)V	a	startWalkingTowardsBed
		p	1		mob
		p	2		pos
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	b	nearBed
		p	1		world
		p	2		mob
	m	(Lafo;Lbbh;J)V	b	stop
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	c	onOrOverBed
		p	1		world
		p	2		mob
	m	(Lafo;Lbbh;J)Z	c	canStillUse
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	d	onBedSurface
		p	1		world
		p	2		mob
	m	(Lafo;Lbbh;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	e	tiredOfWalking
		p	1		world
		p	2		mob
	m	(Lafo;Lbbh;)Z	f	tiredOfJumping
		p	1		world
		p	2		mob
	f	I	a	MAX_TIME_TO_REACH_BED
	f	I	d	MIN_JUMPS
	f	I	e	MAX_JUMPS
	f	I	f	COOLDOWN_BETWEEN_JUMPS
	f	F	g	speedModifier
	f	Lgt;	h	targetBed
	f	I	i	remainingTimeToReachBed
	f	I	j	remainingJumps
	f	I	k	remainingCooldownUntilNextJump
c	bds	net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	m	(IFI)V	<init>	<init>
		p	1		maxDistance
		p	2		walkSpeed
		p	3		preferredDistance
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lgt;)Z	a	lambda$start$3
		p	0		pos
	m	(Lhc;)Z	a	lambda$start$2
		p	0		poiType
	m	(Lgt;)Z	b	lambda$checkExtraStartConditions$1
		p	0		pos
	m	(Lhc;)Z	b	lambda$checkExtraStartConditions$0
		p	0		poiType
	f	F	a	speedModifier
	f	I	d	radius
	f	I	e	closeEnoughDist
	f	Ljava/util/Optional;	f	currentPos
c	bdt	net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid
	m	(IF)V	<init>	<init>
		p	1		maxDistance
		p	2		walkSpeed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
c	bdu	net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	m	(Layx;Lajd;)V	<init>	<init>
		p	1		cooldownRange
		p	2		sound
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)Z	a	canStillUse
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	TIME_OUT_DURATION
	f	Layx;	d	timeBetweenLongJumps
	f	Lajd;	e	landingSound
c	bdv	net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	m	(Layx;IIFLjava/util/function/Function;Lakh;FLjava/util/function/Predicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		favoredBlocks
		p	7		biasChance
		p	8		jumpToPredicate
	m	(Lafo;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;Lgt;)Z	a	isAcceptableLandingPosition
		p	1		world
		p	2		entity
		p	3		pos
	m	(Lafo;Lgt;)Z	a	willNotLandInFluid
		p	1		world
		p	2		pos
	f	Lakh;	m	preferredBlockTag
	f	F	n	preferredBlocksChance
	f	Ljava/util/List;	o	notPrefferedJumpCandidates
	f	Z	p	currentlyWantingPreferredOnes
c	bdw	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	m	(Layx;IIFLjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
	m	(Layx;IIFLjava/util/function/Function;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		jumpToPredicate
	m	(Lafo;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;Lgt;)Z	a	isAcceptableLandingPosition
		p	1		world
		p	2		entity
		p	3		pos
	m	(Lbbh;Ldvt;)Ldvt;	a	calculateOptimalJumpVector
		p	1		entity
		p	2		pos
	m	(Lbbh;Ldvt;I)Ldvt;	a	calculateJumpVectorForAngle
		p	1		entity
		p	2		pos
		p	3		range
	m	(Lbbh;Ldvt;Ldvt;)Z	a	isClearTransition
		p	1		entity
		p	2		startPos
		p	3		endPos
	m	(Lcur;)Z	a	lambda$new$0
		p	0		state
	m	(Lgt;Lgt;)Lbdw$a;	a	lambda$start$2
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lgt;Lgt;)Z	b	lambda$start$1
	m	(Lafo;Lbbh;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	d	pickCandidate
	f	I	a	FIND_JUMP_TRIES
	f	I	d	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	f	I	e	maxLongJumpHeight
	f	I	f	maxLongJumpWidth
	f	F	g	maxJumpVelocity
	f	Ljava/util/List;	h	jumpCandidates
	f	Ljava/util/Optional;	i	initialPosition
	f	Ldvt;	j	chosenJump
	f	I	k	findJumpTries
	f	J	l	prepareJumpStart
	f	I	m	PREPARE_JUMP_DURATION
	f	I	n	TIME_OUT_DURATION
	f	Ljava/util/List;	o	ALLOWED_ANGLES
	f	Layx;	p	timeBetweenLongJumps
	f	Ljava/util/function/Function;	q	getJumpSound
	f	Ljava/util/function/Predicate;	r	acceptableLandingSpot
c	bdw$a	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	m	(Lgt;I)V	<init>	<init>
		p	1		pos
		p	2		weight
	m	()Lgt;	b	getJumpTarget
	f	Lgt;	a	jumpTarget
c	bdx	net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	m	(F)V	<init>	<init>
		p	1		speed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lbss;)V	a	followPlayer
		p	1		villager
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	F	a	speedModifier
c	bdy	net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lafo;Lbbh;J)Z	a	canStillUse
	m	(Lbbh;Lbef;)V	a	lambda$tick$1
		p	1		lookTarget
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	b	stop
	m	(Lbbh;Lbef;)Z	b	lambda$canStillUse$0
		p	1		lookTarget
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
c	bdz	net/minecraft/world/entity/ai/behavior/MeleeAttack
	m	(I)V	<init>	<init>
		p	1		interval
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbh;)Z	a	isHoldingUsableProjectileWeapon
		p	1		entity
	m	(Lbbh;Lcaa;)Z	a	lambda$isHoldingUsableProjectileWeapon$0
		p	1		stack
	m	(Lbbh;)Lbbf;	b	getAttackTarget
		p	1		entity
	f	I	a	cooldownBetweenAttacks
c	bea	net/minecraft/world/entity/ai/behavior/Mount
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	isCloseEnoughToStartRiding
		p	1		entity
	m	(Lbbf;)Lbaq;	b	getRidableEntity
		p	1		entity
	f	I	a	CLOSE_ENOUGH_TO_START_RIDING_DIST
	f	F	d	speedModifier
c	beb	net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;Lgt;)Z	a	hasNoBlocksAbove
		p	0		world
		p	1		entity
		p	2		pos
	m	(Ldvt;)Lbka;	a	lambda$start$0
		p	1		pos
	m	(Lafo;Lbbf;)Ldvt;	b	getOutdoorPosition
		p	1		world
		p	2		entity
	f	F	a	speedModifier
c	bec	net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)Z	a	canStillUse
	m	(Lbbh;Lbka;)Z	a	reachedTarget
		p	1		entity
		p	2		walkTarget
	m	(Lbbh;Lbka;J)Z	a	tryComputePath
		p	1		entity
		p	2		walkTarget
		p	3		time
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	b	stop
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	c	start
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	MAX_COOLDOWN_BEFORE_RETRYING
	f	I	d	remainingCooldown
	f	Ldpo;	e	path
	f	Lgt;	f	lastTargetPos
	f	F	g	speedModifier
c	bed	net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;Lbbf;)V	a	fleeFromChaser
		p	1		world
		p	2		entity
		p	3		unusedBaby
	m	(Lbbf;)Lbbf;	a	whoAreYouChasing
		p	1		entity
	m	(Lbbf;Lbbf;)Z	a	isFriendChasingMe
		p	1		entity
		p	2		other
	m	(Lbbf;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$checkHowManyChasersEachFriendHas$2
	m	(Lbbo;)Ljava/util/Optional;	a	findSomeoneToChase
		p	1		entity
	m	(Lbbo;Lbbf;)V	a	chaseKid
		p	0		entity
		p	1		target
	m	(Ljava/util/Map$Entry;)Z	a	lambda$findSomeoneBeingChased$1
	m	(Ljava/util/Map;Lbbf;)V	a	lambda$checkHowManyChasersEachFriendHas$3
	m	(Lbbf;)Lbbf;	b	seeIfSomeoneIsChasingMe
		p	1		entity
	m	(Lbbf;Lbbf;)Z	b	lambda$isFriendChasingMe$5
	m	(Lbbo;)Ljava/util/Optional;	b	findSomeoneBeingChased
		p	1		entity
	m	(Lbbo;Lbbf;)V	b	lambda$start$0
		p	1		target
	m	(Lbbf;)Z	c	isChasingSomeone
		p	1		entity
	m	(Lbbf;Lbbf;)Z	c	lambda$seeIfSomeoneIsChasingMe$4
	m	(Lbbo;)Ljava/util/Map;	c	checkHowManyChasersEachFriendHas
		p	1		entity
	m	(Lbbo;)Ljava/util/List;	d	getFriendsNearby
		p	1		entity
	m	(Lbbo;)Z	e	hasFriendsNearby
		p	1		entity
	f	I	a	MAX_FLEE_XZ_DIST
	f	I	d	MAX_FLEE_Y_DIST
	f	F	e	FLEE_SPEED_MODIFIER
	f	F	f	CHASE_SPEED_MODIFIER
	f	I	g	MAX_CHASERS_PER_TARGET
	f	I	h	AVERAGE_WAIT_TIME_BETWEEN_RUNS
c	bee	net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	m	(Lbsv;)V	<init>	<init>
		p	1		profession
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbss;)Z	a	hasJobSite
		p	1		villager
	m	(Lbss;Lbss;)Lbss;	a	selectWinner
		p	0		first
		p	1		second
	m	(Lbss;Lhb;Lhc;)V	a	lambda$start$1
	m	(Lhb;Lhc;Lbss;)Z	a	competesForSameJobsite
		p	1		pos
		p	2		poiType
		p	3		villager
	m	(Lhc;Lbsv;)Z	a	hasMatchingProfession
		p	1		poiType
		p	2		profession
	m	(Lhb;Lhc;Lbss;)Z	b	lambda$start$0
	f	Lbsv;	a	profession
c	bef	net/minecraft/world/entity/ai/behavior/PositionTracker
	m	()Ldvt;	a	currentPosition
	m	(Lbbf;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgt;	b	currentBlockPosition
c	beg	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	m	(Ljava/util/function/ToIntFunction;IIFLbli;ILjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownFactory
		p	2		minDistance
		p	3		maxDistance
		p	4		speed
		p	5		targetPredicate
		p	6		prepareTime
		p	7		soundFactory
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;Lgt;)Lbeg$a;	a	lambda$chooseRamPosition$4
		p	1		start
	m	(Lbbo;Lbbf;)Ljava/util/Optional;	a	calculateRammingStartPosition
		p	1		entity
		p	2		target
	m	(Lbbo;Lbjz;)Ljava/util/Optional;	a	lambda$start$1
	m	(Lbbo;Lgt;)Z	a	isWalkableBlock
		p	1		entity
		p	2		target
	m	(Lbkf;Lgt;)Z	a	lambda$calculateRammingStartPosition$3
		p	1		start
	m	(Lgt;Lgt;)Ldvt;	a	getEdgeOfBlock
		p	1		start
		p	2		end
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	b	stop
	m	(Lbbo;Lbbf;)V	b	chooseRamPosition
		p	1		entity
		p	2		target
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)Z	c	canStillUse
	m	(Lbbo;Lbbf;)V	c	lambda$start$2
		p	2		mob
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbo;Lbbf;)Z	d	lambda$start$0
		p	2		mob
	f	I	a	TIME_OUT_DURATION
	f	Ljava/util/function/ToIntFunction;	d	getCooldownOnFail
	f	I	e	minRamDistance
	f	I	f	maxRamDistance
	f	F	g	walkSpeed
	f	Lbli;	h	ramTargeting
	f	I	i	ramPrepareTime
	f	Ljava/util/function/Function;	j	getPrepareRamSound
	f	Ljava/util/Optional;	k	reachedRamPositionTimestamp
	f	Ljava/util/Optional;	l	ramCandidate
c	beg$a	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	m	(Lgt;Lgt;Lbbf;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		entity
	m	()Lgt;	a	getStartPosition
	m	()Lgt;	b	getTargetPosition
	m	()Lbbf;	c	getTarget
	f	Lgt;	a	startPosition
	f	Lgt;	b	targetPosition
	f	Lbbf;	c	target
c	beh	net/minecraft/world/entity/ai/behavior/RamTarget
	m	(Ljava/util/function/Function;Lbli;FLjava/util/function/ToDoubleFunction;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRangeFactory
		p	2		targetPredicate
		p	3		speed
		p	4		strengthMultiplierFactory
		p	5		impactSoundFactory
		p	6		hornBreakSoundFactory
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbnz;J)Z	a	canStillUse
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnz;)V	b	finishRam
		p	1		world
		p	2		goat
	m	(Lafo;Lbnz;J)V	b	start
	m	(Lafo;Lbnz;)Z	c	hasRammedHornBreakingBlock
		p	1		world
		p	2		goat
	m	(Lafo;Lbnz;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	TIME_OUT_DURATION
	f	F	d	RAM_SPEED_FORCE_FACTOR
	f	Ljava/util/function/Function;	e	getTimeBetweenRams
	f	Lbli;	f	ramTargeting
	f	F	g	speed
	f	Ljava/util/function/ToDoubleFunction;	h	getKnockbackForce
	f	Ldvt;	i	ramDirection
	f	Ljava/util/function/Function;	j	getImpactSound
	f	Ljava/util/function/Function;	k	getHornBreakSound
c	bei	net/minecraft/world/entity/ai/behavior/RandomStroll
	m	(F)V	<init>	<init>
		p	1		speed
	m	(FII)V	<init>	<init>
		p	1		speed
		p	2		horizontalRadius
		p	3		verticalRadius
	m	(FIIZ)V	<init>	<init>
		p	1		speed
		p	2		horizontalRadius
		p	3		verticalRadius
		p	4		strollInsideWater
	m	(FZ)V	<init>	<init>
		p	1		speed
		p	2		strollInsideWater
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbo;)Ldvt;	a	getTargetPos
		p	1		entity
	m	(Ldvt;)Lbka;	a	lambda$start$0
		p	1		pos
	f	I	a	maxHorizontalDistance
	f	I	d	maxVerticalDistance
	f	I	e	MAX_XZ_DIST
	f	I	f	MAX_Y_DIST
	f	F	g	speedModifier
	f	Z	h	mayStrollFromWater
c	bej	net/minecraft/world/entity/ai/behavior/RandomSwim
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lbbo;)Ldvt;	a	getTargetPos
		p	1		entity
	f	[[I	e	XY_DISTANCE_TIERS
c	bek	net/minecraft/world/entity/ai/behavior/ReactToBell
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bel	net/minecraft/world/entity/ai/behavior/ResetProfession
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bem	net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	ben	net/minecraft/world/entity/ai/behavior/RingBell
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	RING_BELL_FROM_DISTANCE
	f	F	d	BELL_RING_CHANCE
c	beo	net/minecraft/world/entity/ai/behavior/RunIf
	m	(Ljava/util/Map;Lbcr;)V	<init>	<init>
		p	1		memory
		p	2		delegate
	m	(Ljava/util/Map;Ljava/util/function/Predicate;Lbcr;Z)V	<init>	<init>
		p	1		requiredMemoryStates
		p	2		condition
		p	3		delegate
		p	4		allowsContinuation
	m	(Ljava/util/function/Predicate;Lbcr;)V	<init>	<init>
		p	1		condition
		p	2		delegate
	m	(Ljava/util/function/Predicate;Lbcr;Z)V	<init>	<init>
		p	1		condition
		p	2		delegate
		p	3		allowsContinuation
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	lambda$new$0
	m	(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;	a	mergeMaps
		p	0		first
		p	1		second
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/util/function/Predicate;	a	predicate
	f	Lbcr;	d	wrappedBehavior
	f	Z	e	checkWhileRunningAlso
c	bep	net/minecraft/world/entity/ai/behavior/RunOne
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		tasks
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		tasks
c	beq	net/minecraft/world/entity/ai/behavior/RunSometimes
	m	(Lbcr;Layx;)V	<init>	<init>
		p	1		delegate
		p	2		timeRange
	m	(Lbcr;ZLayx;)V	<init>	<init>
		p	1		delegate
		p	2		skipFirstRun
		p	3		timeRange
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;)V	a	resetTicksUntilNextStart
		p	1		world
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Z	a	resetTicks
	f	Z	d	wasRunning
	f	Layx;	e	interval
	f	Lbcr;	f	wrappedBehavior
	f	I	g	ticksUntilNextStart
c	ber	net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lgt;)Z	a	lambda$start$1
		p	1		pos
	m	(Lhc;)Z	a	lambda$start$2
		p	0		poiType
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$start$3
	m	(Lhc;)Z	b	lambda$checkExtraStartConditions$0
		p	0		poiType
	f	I	a	CACHE_TIMEOUT
	f	I	d	BATCH_SIZE
	f	I	e	RATE
	f	I	f	OK_DISTANCE_SQR
	f	F	g	speedModifier
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	h	batchCache
	f	I	i	triedCount
	f	J	j	lastUpdate
c	bes	net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	m	(F)V	<init>	<init>
		p	1		maxDistance
	m	(Lakh;F)V	<init>	<init>
		p	1		entityType
		p	2		maxDistance
	m	(Lbau;F)V	<init>	<init>
		p	1		entityType
		p	2		maxDistance
	m	(Lbbi;F)V	<init>	<init>
		p	1		group
		p	2		maxDistance
	m	(Ljava/util/function/Predicate;F)V	<init>	<init>
		p	1		predicate
		p	2		maxDistance
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakh;Lbbf;)Z	a	lambda$new$0
		p	1		entity
	m	(Lbau;Lbbf;)Z	a	lambda$new$2
		p	1		entity
	m	(Lbbf;)Z	a	lambda$new$3
		p	0		entity
	m	(Lbbf;Lbbf;)Z	a	lambda$checkExtraStartConditions$4
	m	(Lbbi;Lbbf;)Z	a	lambda$new$1
		p	1		entity
	f	Ljava/util/function/Predicate;	a	predicate
	f	F	d	maxDistSqr
	f	Ljava/util/Optional;	e	nearestEntityMatchingTest
c	bet	net/minecraft/world/entity/ai/behavior/SetHiddenState
	m	(II)V	<init>	<init>
		p	1		maxHiddenSeconds
		p	2		distance
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	HIDE_TIMEOUT
	f	I	d	closeEnoughDist
	f	I	e	stayHiddenTicks
	f	I	f	ticksHidden
c	beu	net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	m	(Lbau;I)V	<init>	<init>
		p	1		entityType
		p	2		maxDistance
	m	(Lbau;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		entityType
		p	2		maxDistance
		p	3		shouldRunPredicate
		p	4		predicate
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	isMatchingTarget
		p	1		entity
	m	(Lbbf;Lbbf;)Z	a	lambda$start$2
	m	(Lbbf;Lbjz;)Ljava/util/Optional;	a	lambda$start$3
	m	(Lbca;Lbbf;)V	a	lambda$start$4
		p	1		target
	m	(Lbbf;)Lbjz;	b	getVisibleEntities
		p	1		entity
	m	(Lbbf;)Z	c	lambda$new$1
	m	(Lbbf;)Z	d	lambda$new$0
	f	Lbau;	a	type
	f	I	d	interactionRangeSqr
	f	Ljava/util/function/Predicate;	e	targetFilter
	f	Ljava/util/function/Predicate;	f	selfFilter
c	bev	net/minecraft/world/entity/ai/behavior/SetRaidStatus
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bew	net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	m	(Lbjx;FIZLjava/util/function/Function;)V	<init>	<init>
		p	1		memoryType
		p	2		speed
		p	3		range
		p	4		requiresWalkTarget
		p	5		posRetriever
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbo;)Ldvt;	a	getPosToAvoid
		p	1		entity
	m	(Lbbo;Ldvt;F)V	a	moveAwayFrom
		p	0		entity
		p	1		pos
		p	2		speed
	m	(Lbjx;FIZ)Lbew;	a	pos
		p	0		memoryType
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
	m	(Lbbo;)Z	b	alreadyWalkingAwayFromPosWithSameSpeed
		p	1		entity
	m	(Lbjx;FIZ)Lbew;	b	entity
		p	0		memoryType
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
	f	Lbjx;	a	walkAwayFromMemory
	f	F	d	speedModifier
	f	I	e	desiredDistance
	f	Ljava/util/function/Function;	f	toPosition
c	bex	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
	m	(FLbbf;)Ljava/lang/Float;	a	lambda$new$0
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)V	a	clearWalkTarget
		p	1		entity
	m	(Lbbf;Lbbf;)V	a	setWalkAndLookTarget
		p	1		entity
		p	2		target
	f	I	a	PROJECTILE_ATTACK_RANGE_BUFFER
	f	Ljava/util/function/Function;	d	speedModifier
c	bey	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	m	(Lbjx;FIII)V	<init>	<init>
		p	1		destination
		p	2		speed
		p	3		completionRange
		p	4		maxRange
		p	5		maxRunTime
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	tiredOfTryingToFindTarget
		p	1		world
		p	2		villager
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;JLbca;Lhb;)V	a	lambda$start$0
		p	6		pos
	m	(Lafo;Lbss;Lhb;)Z	a	closeEnough
		p	1		world
		p	2		villager
		p	3		pos
	m	(Lafo;Lhb;)Z	a	wrongDimension
		p	1		world
		p	2		pos
	m	(Lbss;J)V	a	dropPOI
		p	1		villager
		p	2		time
	m	(Lbss;Lhb;)Z	a	tooFar
		p	1		villager
		p	2		pos
	f	Lbjx;	a	memoryType
	f	F	d	speedModifier
	f	I	e	closeEnoughDist
	f	I	f	tooFarDistance
	f	I	g	tooLongUnreachableDuration
c	bez	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	m	(FI)V	<init>	<init>
		p	1		speed
		p	2		completionRange
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;I)V	<init>	<init>
		p	1		predicate
		p	2		speed
		p	3		completionRange
	m	(FLbbf;)Ljava/lang/Float;	a	lambda$new$1
		p	1		entity
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	lambda$new$0
		p	0		entity
	f	Ljava/util/function/Function;	a	speedModifier
	f	I	d	closeEnoughDistance
	f	Ljava/util/function/Predicate;	e	canSetWalkTargetPredicate
c	bfa	net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lbbf;Lbss;)V	a	findItemsToDisplay
		p	1		customer
		p	2		villager
	m	(Lbss;)V	a	displayFirstItem
		p	1		villager
	m	(Lbss;Lcaa;)V	a	displayAsHeldItem
		p	0		villager
		p	1		stack
	m	(Lcey;)Z	a	playerItemStackMatchesCostOfOffer
		p	1		offer
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	b	start
	m	(Lbss;)V	b	updateDisplayItems
		p	1		villager
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	tick
	m	(Lbss;)V	c	clearHeldItem
		p	0		villager
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	d	stop
	m	(Lbss;)Lbbf;	d	lookAtTarget
		p	1		villager
	m	(Lbss;)V	e	displayCyclingItems
		p	1		villager
	f	I	a	MAX_LOOK_TIME
	f	I	d	STARTING_LOOK_TIME
	f	Lcaa;	e	playerItemStack
	f	Ljava/util/List;	f	displayItems
	f	I	g	cycleCounter
	f	I	h	displayIndex
	f	I	i	lookTime
c	bfb	net/minecraft/world/entity/ai/behavior/ShufflingList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Lbfb;	a	shuffle
	m	(Lbfb$a;)V	a	lambda$shuffle$1
		p	1		entry
	m	(Lbfb;)Ljava/util/List;	a	lambda$codec$0
		p	0		weightedList
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Ljava/lang/Object;I)Lbfb;	a	add
		p	1		data
		p	2		weight
	m	()Ljava/util/stream/Stream;	b	stream
	f	Ljava/util/List;	a	entries
	f	Lalu;	b	random
c	bfb$a	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	m	(Ljava/lang/Object;I)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Ljava/lang/Object;	a	getData
	m	(F)V	a	setRandom
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	()I	b	getWeight
	m	()D	c	getRandWeight
	f	Ljava/lang/Object;	a	data
	f	I	b	weight
	f	D	c	randWeight
c	bfb$a$1	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry$1
	m	(Lbfb$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Lbfb$a;	a	lambda$decode$0
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lbfb$a;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
	f	Lcom/mojang/serialization/Codec;	a	val$elementCodec
c	bfc	net/minecraft/world/entity/ai/behavior/SleepInBed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	COOLDOWN_AFTER_BEING_WOKEN
	f	J	d	nextOkStartTime
c	bfd	net/minecraft/world/entity/ai/behavior/SocializeAtBell
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	lambda$checkExtraStartConditions$0
	m	(Lbbf;Lbbf;)Z	a	lambda$start$1
	m	(Lbbf;Lbjz;)Ljava/util/Optional;	a	lambda$start$2
	m	(Lbca;Lbbf;)V	a	lambda$start$3
	f	F	a	SPEED_MODIFIER
c	bfe	net/minecraft/world/entity/ai/behavior/StartAttacking
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;)V	<init>	<init>
		p	1		startCondition
		p	2		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;I)V	<init>	<init>
		p	1		startCondition
		p	2		targetGetter
		p	3		duration
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbh;)Z	a	lambda$new$0
		p	0		entity
	m	(Lbbh;Lbbf;)V	a	setAttackTarget
		p	0		entity
		p	1		target
	m	(Lbbh;Lbbf;)V	b	lambda$start$1
		p	1		target
	f	Ljava/util/function/Predicate;	a	canAttackPredicate
	f	Ljava/util/function/Function;	d	targetFinderFunction
c	bff	net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	m	(ILjava/util/function/BiPredicate;)V	<init>	<init>
		p	1		duration
		p	2		predicate
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Lbbf;	a	getAttackTarget
		p	1		entity
	f	I	a	celebrateDuration
	f	Ljava/util/function/BiPredicate;	d	dancePredicate
c	bfg	net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	m	(Ljava/util/function/Function;IIF)V	<init>	<init>
		p	1		lookTargetFunction
		p	2		completionRange
		p	3		searchRange
		p	4		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/util/function/Function;	a	targetPositionGetter
	f	I	d	closeEnough
	f	I	e	tooFar
	f	F	f	speedModifier
c	bfh	net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	m	(Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1		forgetCallback
	m	(Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		alternativePredicate
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1		alternativePredicate
		p	2		forgetCallback
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)V	<init>	<init>
		p	1		alternativePredicate
		p	2		forgetCallback
		p	3		shouldForgetIfTargetUnreachable
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbf;)Z	a	isTiredOfTryingToReachTarget
		p	0		entity
	m	(Lbbh;)V	a	clearAttackTarget
		p	1		entity
	m	(Lbbh;Lbbf;)V	a	lambda$new$3
	m	(Lbbf;)Z	b	lambda$new$2
		p	0		target
	m	(Lbbh;)Z	b	isCurrentTargetInDifferentLevel
		p	1		entity
	m	(Lbbh;Lbbf;)V	b	lambda$new$0
	m	(Lbbf;)Z	c	lambda$new$1
		p	0		target
	m	(Lbbh;)Lbbf;	c	getAttackTarget
		p	1		entity
	m	(Lbbh;)Z	d	isCurrentTargetDeadOrRemoved
		p	1		entity
	f	I	a	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
	f	Ljava/util/function/Predicate;	d	stopAttackingWhen
	f	Ljava/util/function/BiConsumer;	e	onTargetErased
	f	Z	f	canGrowTiredOfTryingToReachTarget
c	bfi	net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;Lbbf;)V	a	lambda$start$0
		p	2		target
c	bfj	net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	m	(Lbjx;FI)V	<init>	<init>
		p	1		target
		p	2		walkSpeed
		p	3		maxDistance
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Ldvt;)Lbka;	a	lambda$start$0
		p	1		pos
	f	I	a	MIN_TIME_BETWEEN_STROLLS
	f	I	d	STROLL_MAX_XZ_DIST
	f	I	e	STROLL_MAX_Y_DIST
	f	Lbjx;	f	memoryType
	f	J	g	nextOkStartTime
	f	I	h	maxDistanceFromPoi
	f	F	i	speedModifier
c	bfk	net/minecraft/world/entity/ai/behavior/StrollToPoi
	m	(Lbjx;FII)V	<init>	<init>
		p	1		memoryModuleType
		p	2		walkSpeed
		p	3		completionRange
		p	4		maxDistance
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbca;Lhb;)V	a	lambda$start$0
		p	2		pos
	f	Lbjx;	a	memoryType
	f	I	d	closeEnoughDist
	f	I	e	maxDistanceFromPoi
	f	F	f	speedModifier
	f	J	g	nextOkStartTime
c	bfl	net/minecraft/world/entity/ai/behavior/StrollToPoiList
	m	(Lbjx;FIILbjx;)V	<init>	<init>
		p	1		secondaryPositions
		p	2		speed
		p	3		completionRange
		p	4		primaryPositionActivationDistance
		p	5		primaryPosition
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	Lbjx;	a	strollToMemoryType
	f	Lbjx;	d	mustBeCloseToMemoryType
	f	F	e	speedModifier
	f	I	f	closeEnoughDist
	f	I	g	maxDistanceFromPoi
	f	J	h	nextOkStartTime
	f	Lhb;	i	targetPos
c	bfm	net/minecraft/world/entity/ai/behavior/Swim
	m	(F)V	<init>	<init>
		p	1		chance
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;J)Z	a	canStillUse
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbh;J)V	b	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	F	a	chance
c	bfn	net/minecraft/world/entity/ai/behavior/TradeWithVillager
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lbss;Lbss;)Ljava/util/Set;	a	figureOutWhatIAmWillingToTrade
	m	(Lbss;Ljava/util/Set;Lbbf;)V	a	throwHalfStack
		p	0		villager
		p	1		validItems
		p	2		target
	m	(Lcom/google/common/collect/ImmutableSet;Lbzw;)Z	a	lambda$figureOutWhatIAmWillingToTrade$0
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	d	stop
	f	I	a	INTERACT_DIST_SQR
	f	F	d	SPEED_MODIFIER
	f	Ljava/util/Set;	e	trades
c	bfo	net/minecraft/world/entity/ai/behavior/TryFindLand
	m	(IF)V	<init>	<init>
		p	1		range
		p	2		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	stop
	m	(Lafo;Lbbo;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	COOLDOWN_TICKS
	f	I	d	range
	f	F	e	speedModifier
	f	J	f	nextOkStartTime
c	bfp	net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	m	(IF)V	<init>	<init>
		p	1		range
		p	2		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	stop
	m	(Lafo;Lbbo;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	range
	f	F	d	speedModifier
	f	J	e	nextOkStartTime
c	bfq	net/minecraft/world/entity/ai/behavior/TryFindWater
	m	(IF)V	<init>	<init>
		p	1		range
		p	2		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;J)V	a	stop
	m	(Lafo;Lbbo;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	range
	f	F	d	speedModifier
	f	J	e	nextOkStartTime
c	bfr	net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	m	(Lciw;Lbjx;)V	<init>	<init>
		p	1		frogSpawn
		p	2		triggerMemory
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbnt;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	Lciw;	a	spawnBlock
	f	Lbjx;	d	memoryModule
c	bfs	net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bft	net/minecraft/world/entity/ai/behavior/UseBonemeal
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lbss;)V	a	setCurrentCropAsTarget
		p	1		villager
	m	(Lbss;Lgt;)V	a	lambda$setCurrentCropAsTarget$0
		p	1		pos
	m	(Lgt;Lafo;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Ljava/util/Optional;	b	pickNextTarget
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	BONEMEALING_DURATION
	f	J	d	nextWorkCycleTime
	f	J	e	lastBonemealingSession
	f	I	f	timeWorkedSoFar
	f	Ljava/util/Optional;	g	cropPos
c	bfu	net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	m	(Ljava/util/function/Predicate;Lbjx;)V	<init>	<init>
		p	1		poiTypePredicate
		p	2		memoryModule
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lgt;)Z	a	poiDoesntExist
		p	1		world
		p	2		pos
	m	(Lafo;Lgt;Lbbf;)Z	a	bedIsOccupied
		p	1		world
		p	2		pos
		p	3		entity
	f	I	a	MAX_DISTANCE
	f	Lbjx;	d	memoryType
	f	Ljava/util/function/Predicate;	e	poiPredicate
c	bfv	net/minecraft/world/entity/ai/behavior/VictoryStroll
	m	(F)V	<init>	<init>
		p	1		walkSpeed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
c	bfw	net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	m	(F)V	<init>	<init>
		p	1		walkSpeed
	m	(FII)V	<init>	<init>
		p	1		walkSpeed
		p	2		maxHorizontalDistance
		p	3		maxVerticalDistance
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbo;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbbo;)V	a	setRandomPos
		p	1		entity
	m	(Lbbo;Lhq;)V	a	setTargetedPos
		p	1		entity
		p	2		pos
	m	(Ldvt;)Lbka;	a	lambda$setRandomPos$1
		p	1		pos
	m	(Ldvt;)Lbka;	b	lambda$setTargetedPos$0
		p	1		pos
	f	I	a	MAX_XZ_DIST
	f	I	d	MAX_Y_DIST
	f	F	e	speedModifier
	f	I	f	maxXyDist
	f	I	g	maxYDist
c	bfx	net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbss;)Z	a	isCloseToEntityThatHurtMe
		p	0		entity
	m	(Lbss;Lbbf;)Z	a	lambda$isCloseToEntityThatHurtMe$0
	f	I	a	SAFE_DISTANCE_FROM_DANGER
c	bfy	net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	m	()Lcom/mojang/datafixers/util/Pair;	a	getFullLookBehavior
	m	(F)Lcom/google/common/collect/ImmutableList;	a	getPlayPackage
		p	0		speed
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	a	getCorePackage
		p	0		profession
		p	1		speed
	m	(Lhc;)Z	a	lambda$getMeetPackage$3
	m	()Lcom/mojang/datafixers/util/Pair;	b	getMinimalLookBehavior
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	b	getWorkPackage
		p	0		profession
		p	1		speed
	m	(Lhc;)Z	b	lambda$getRestPackage$2
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	c	getRestPackage
		p	0		profession
		p	1		speed
	m	(Lhc;)Z	c	lambda$getCorePackage$1
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	d	getMeetPackage
		p	0		profession
		p	1		speed
	m	(Lhc;)Z	d	lambda$getCorePackage$0
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	e	getIdlePackage
		p	0		profession
		p	1		speed
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	f	getPanicPackage
		p	0		profession
		p	1		speed
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	g	getPreRaidPackage
		p	0		profession
		p	1		speed
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	h	getRaidPackage
		p	0		profession
		p	1		speed
	m	(Lbsv;F)Lcom/google/common/collect/ImmutableList;	i	getHidePackage
		p	0		profession
		p	1		speed
	f	F	a	STROLL_SPEED_MODIFIER
c	bfz	net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lafo;Lbss;Lbss;)V	a	tryToGiveBirth
		p	1		world
		p	2		first
		p	3		second
	m	(Lafo;Lbss;Lgt;)V	a	giveBedToChild
		p	1		world
		p	2		child
		p	3		pos
	m	(Lban;)Z	a	lambda$isBreedingPossible$0
	m	(Lbss;)Z	a	isBreedingPossible
		p	1		villager
	m	(Lbss;Lgt;Lhc;)Z	a	canReach
		p	1		villager
		p	2		pos
		p	3		poiType
	m	(Lbss;Lhc;Lgt;)Z	a	lambda$takeVacantBed$2
		p	2		poiType
		p	3		pos
	m	(Lhc;)Z	a	lambda$takeVacantBed$1
		p	0		poiType
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Ljava/util/Optional;	b	takeVacantBed
		p	1		world
		p	2		villager
	m	(Lafo;Lbss;J)V	b	start
	m	(Lafo;Lbss;Lbss;)Ljava/util/Optional;	b	breed
		p	1		world
		p	2		parent
		p	3		partner
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	d	stop
	f	I	a	INTERACT_DIST_SQR
	f	F	d	SPEED_MODIFIER
	f	J	e	birthTimestamp
c	bga	net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)Z	a	canStillUse
	m	(Lbbf;)Z	a	hasHostile
		p	0		entity
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;J)V	b	start
	m	(Lbbf;)Z	b	isHurt
		p	0		entity
	m	(Lafo;Lbss;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
c	bgb	net/minecraft/world/entity/ai/behavior/WakeUp
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bgc	net/minecraft/world/entity/ai/behavior/WorkAtComposter
	m	(Lafo;Lbss;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;Lhb;Lcur;)V	a	compostItems
		p	1		world
		p	2		entity
		p	3		pos
		p	4		composterState
	m	(Lafo;Lcur;Lgt;Lcur;)V	a	spawnComposterFillEffects
		p	1		world
		p	2		oldState
		p	3		pos
		p	4		newState
	m	(Lbss;)V	a	makeBread
		p	1		entity
	f	Ljava/util/List;	a	COMPOSTABLE_ITEMS
c	bgd	net/minecraft/world/entity/ai/behavior/WorkAtPoi
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbca;Lhb;)V	a	lambda$start$0
		p	1		pos
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	b	checkExtraStartConditions
	m	(Lafo;Lbss;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	CHECK_COOLDOWN
	f	D	d	DISTANCE
	f	J	e	lastCheck
c	bge	net/minecraft/world/entity/ai/behavior/YieldJobSite
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbss;Lbss;Lgt;Z)V	a	yieldJobSite
		p	1		world
		p	2		previousOwner
		p	3		newOwner
		p	4		pos
		p	5		jobSitePresent
	m	(Lafo;Lbss;Lgt;Lbss;)V	a	lambda$start$1
	m	(Lbss;)V	a	eraseMemories
		p	1		villager
	m	(Lbss;Lgt;Lbly;)Z	a	canReachPos
		p	1		villager
		p	2		pos
		p	3		poiType
	m	(Lhc;Lbss;Lgt;)Z	a	nearbyWantsJobsite
		p	1		poiType
		p	2		villager
		p	3		pos
	m	(Ljava/util/Optional;Lgt;Lbss;)Z	a	lambda$start$0
	f	F	a	speedModifier
c	bgf	net/minecraft/world/entity/ai/behavior/package-info
c	bgg	net/minecraft/world/entity/ai/behavior/warden/Digging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbsj;J)Z	a	canStillUse
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
c	bgh	net/minecraft/world/entity/ai/behavior/warden/Emerging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)Z	a	canStillUse
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
c	bgi	net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bgj	net/minecraft/world/entity/ai/behavior/warden/Roar
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	d	stop
	f	I	a	TICKS_BEFORE_PLAYING_ROAR_SOUND
	f	I	d	ROAR_ANGER_INCREASE
c	bgk	net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		targetFinder
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbsj;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbsj;Lbbf;)V	a	lambda$start$0
		p	1		target
	f	Ljava/util/function/Function;	a	targetFinderFunction
c	bgl	net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbsj;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbsj;)Ljava/util/Optional;	a	lambda$start$0
c	bgm	net/minecraft/world/entity/ai/behavior/warden/Sniffing
	m	(I)V	<init>	<init>
		p	1		runTime
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)Z	a	canStillUse
	m	(Lbsj;Lbbf;)V	a	lambda$stop$0
		p	1		target
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	b	start
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	f	D	a	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	f	D	d	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
c	bgn	net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbsj;J)Z	a	canStillUse
	m	(Lbbf;I)V	a	setCooldown
		p	0		warden
		p	1		cooldown
	m	(Lbsj;Lafo;Lbbf;)V	a	lambda$tick$2
		p	2		target
	m	(Lbsj;Lbbf;)Z	a	lambda$tick$1
		p	1		target
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	b	start
	m	(Lbsj;Lbbf;)V	b	lambda$tick$0
		p	1		target
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	c	tick
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	d	stop
	f	I	a	COOLDOWN
	f	I	d	DISTANCE_XZ
	f	I	e	DISTANCE_Y
	f	D	f	KNOCKBACK_VERTICAL
	f	D	g	KNOCKBACK_HORIZONTAL
	f	I	h	TICKS_BEFORE_PLAYING_SOUND
	f	I	i	DURATION
c	bgo	net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	Layr;	a	SNIFF_COOLDOWN
c	bgp	net/minecraft/world/entity/ai/behavior/warden/package-info
c	bgq	net/minecraft/world/entity/ai/control/BodyRotationControl
	m	(Lbbh;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
	m	()V	b	rotateBodyIfNecessary
	m	()V	c	rotateHeadIfNecessary
	m	()V	d	rotateHeadTowardsFront
	m	()Z	e	notCarryingMobPassengers
	m	()Z	f	isMoving
	f	Lbbh;	a	mob
	f	I	b	HEAD_STABLE_ANGLE
	f	I	c	DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	f	I	d	HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	f	I	e	headStableTime
	f	F	f	lastStableYHeadRot
c	bgr	net/minecraft/world/entity/ai/control/Control
c	bgs	net/minecraft/world/entity/ai/control/FlyingMoveControl
	m	(Lbbh;IZ)V	<init>	<init>
		p	1		entity
		p	2		maxPitchChange
		p	3		noGravity
	m	()V	a	tick
	f	I	l	maxTurn
	f	Z	m	hoversInPlace
c	bgt	net/minecraft/world/entity/ai/control/JumpControl
	m	(Lbbh;)V	<init>	<init>
		p	1		entity
	m	()V	a	jump
	m	()V	b	tick
	f	Z	a	jump
	f	Lbbh;	b	mob
c	bgu	net/minecraft/world/entity/ai/control/LookControl
	m	(Lbbh;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDD)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
	m	(DDDFF)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
		p	7		maxYawChange
		p	8		maxPitchChange
	m	(FFF)F	a	rotateTowards
		p	1		from
		p	2		to
		p	3		max
	m	(Lbaq;)V	a	setLookAt
		p	1		entity
	m	(Lbaq;FF)V	a	setLookAt
		p	1		entity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Ldvt;)V	a	setLookAt
		p	1		direction
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	()V	b	clampHeadRotationToBody
	m	(Lbaq;)D	b	getWantedY
		p	0		entity
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	m	()Z	c	resetXRotOnTick
	m	()Z	d	isLookingAtTarget
	m	()D	e	getWantedX
	m	()D	f	getWantedY
	m	()D	g	getWantedZ
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbbh;	a	mob
	f	F	b	yMaxRotSpeed
	f	F	c	xMaxRotAngle
	f	I	d	lookAtCooldown
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
c	bgv	net/minecraft/world/entity/ai/control/MoveControl
	m	(Lbbh;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(FF)V	a	strafe
		p	1		forward
		p	2		sideways
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	()Z	b	hasWanted
	m	(FF)Z	b	isWalkable
		p	1		x
		p	2		z
	m	()D	c	getSpeedModifier
	m	()D	d	getWantedX
	m	()D	e	getWantedY
	m	()D	f	getWantedZ
	f	F	a	MIN_SPEED
	f	F	b	MIN_SPEED_SQR
	f	I	c	MAX_TURN
	f	Lbbh;	d	mob
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
	f	D	h	speedModifier
	f	F	i	strafeForwards
	f	F	j	strafeRight
	f	Lbgv$a;	k	operation
c	bgv$a	net/minecraft/world/entity/ai/control/MoveControl$Operation
	m	()[Lbgv$a;	a	$values
	f	Lbgv$a;	a	WAIT
	f	Lbgv$a;	b	MOVE_TO
	f	Lbgv$a;	c	STRAFE
	f	Lbgv$a;	d	JUMPING
	f	[Lbgv$a;	e	$VALUES
c	bgw	net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	m	(Lbbh;I)V	<init>	<init>
		p	1		entity
		p	2		yawAdjustThreshold
	m	()V	a	tick
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	f	I	h	maxYRotFromCenter
	f	I	i	HEAD_TILT_X
	f	I	j	HEAD_TILT_Y
c	bgx	net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	m	(Lbbh;IIFFZ)V	<init>	<init>
		p	1		entity
		p	2		pitchChange
		p	3		yawChange
		p	4		speedInWater
		p	5		speedInAir
		p	6		buoyant
	m	()V	a	tick
	f	I	l	maxTurnX
	f	I	m	maxTurnY
	f	F	n	inWaterSpeedModifier
	f	F	o	outsideWaterSpeedModifier
	f	Z	p	applyGravity
c	bgy	net/minecraft/world/entity/ai/control/package-info
c	bgz	net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	m	(Lbbo;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	(Lbbo;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		fleeingEntity
		p	2		classToFleeFrom
		p	3		fleeDistance
		p	4		fleeSlowSpeed
		p	6		fleeFastSpeed
		p	8		inclusionSelector
	m	(Lbbo;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		extraInclusionSelector
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
		p	9		inclusionSelector
	m	()Z	a	canUse
	m	(Lbbf;)Z	a	lambda$canUse$2
	m	()Z	b	canContinueToUse
	m	(Lbbf;)Z	b	lambda$new$1
	m	()V	c	start
	m	(Lbbf;)Z	c	lambda$new$0
	m	()V	d	stop
	m	()V	e	tick
	f	Lbbo;	a	mob
	f	Lbbf;	b	toAvoid
	f	F	c	maxDist
	f	Ldpo;	d	path
	f	Lbkf;	e	pathNav
	f	Ljava/lang/Class;	f	avoidClass
	f	Ljava/util/function/Predicate;	g	avoidPredicate
	f	Ljava/util/function/Predicate;	h	predicateOnAvoidEntity
	f	D	i	walkSpeedModifier
	f	D	j	sprintSpeedModifier
	f	Lbli;	k	avoidEntityTargeting
c	bha	net/minecraft/world/entity/ai/goal/BegGoal
	m	(Lbnk;F)V	<init>	<init>
		p	1		wolf
		p	2		begDistance
	m	()Z	a	canUse
	m	(Lbtf;)Z	a	playerHoldingInteresting
		p	1		player
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbnk;	a	wolf
	f	Lbtf;	b	player
	f	Lcga;	c	level
	f	F	d	lookDistance
	f	I	e	lookTime
	f	Lbli;	f	begTargeting
c	bhb	net/minecraft/world/entity/ai/goal/BoatGoals
	m	()[Lbhb;	a	$values
	f	Lbhb;	a	GO_TO_BOAT
	f	Lbhb;	b	GO_IN_BOAT_DIRECTION
	f	[Lbhb;	c	$VALUES
c	bhc	net/minecraft/world/entity/ai/goal/BreakDoorGoal
	m	(Lbbh;ILjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		maxProgress
		p	3		difficultySufficientPredicate
	m	(Lbbh;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		difficultySufficientPredicate
	m	()Z	a	canUse
	m	(Lazj;)Z	a	isValidDifficulty
		p	1		difficulty
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	f	getDoorBreakTime
	f	I	a	breakTime
	f	I	b	lastBreakProgress
	f	I	c	doorBreakTime
	f	I	g	DEFAULT_DOOR_BREAK_TIME
	f	Ljava/util/function/Predicate;	h	validDifficulties
c	bhd	net/minecraft/world/entity/ai/goal/BreathAirGoal
	m	(Lbbo;)V	<init>	<init>
		p	1		mob
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	givesAir
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	findAirPosition
	f	Lbbo;	a	mob
c	bhe	net/minecraft/world/entity/ai/goal/BreedGoal
	m	(Lbmh;D)V	<init>	<init>
		p	1		animal
		p	2		chance
	m	(Lbmh;DLjava/lang/Class;)V	<init>	<init>
		p	1		animal
		p	2		chance
		p	4		entityClass
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()V	g	breed
	m	()Lbmh;	h	getFreePartner
	f	Lbmh;	a	animal
	f	Lcga;	b	level
	f	Lbmh;	c	partner
	f	Lbli;	d	PARTNER_TARGETING
	f	Ljava/lang/Class;	e	partnerClass
	f	I	f	loveTime
	f	D	g	speedModifier
c	bhf	net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	m	(Lbmk;DI)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		range
	m	()Z	a	canUse
	m	(Lbbo;)I	a	nextStartTick
		p	1		mob
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmk;	g	cat
c	bhg	net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	m	(Lbmk;D)V	<init>	<init>
		p	1		cat
		p	2		speed
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Lcuq$a;)Z	a	lambda$isValidTarget$1
		p	0		state
	m	(Lcvf;)Ljava/lang/Boolean;	a	lambda$isValidTarget$0
		p	0		part
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmk;	g	cat
c	bhh	net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbbh;	a	mob
	f	Lcga;	b	level
c	bhi	net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	m	(Lbmp;I)V	<init>	<init>
		p	1		dolphin
		p	2		chance
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	(Lgt;III)Z	a	waterIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()Z	b	canContinueToUse
	m	(Lgt;III)Z	b	surfaceIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	[I	a	STEPS_TO_CHECK
	f	Lbmp;	b	dolphin
	f	I	c	interval
	f	Z	d	breached
c	bhj	net/minecraft/world/entity/ai/goal/DoorInteractGoal
	m	(Lbbh;)V	<init>	<init>
		p	1		mob
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Z)V	a	setOpen
		p	1		open
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()Z	h	isOpen
	f	Z	a	passed
	f	F	b	doorOpenDirX
	f	F	c	doorOpenDirZ
	f	Lbbh;	d	mob
	f	Lgt;	e	doorPos
	f	Z	f	hasDoor
c	bhk	net/minecraft/world/entity/ai/goal/EatBlockGoal
	m	(Lbbh;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getEatAnimationTick
	f	I	a	EAT_ANIMATION_TICKS
	f	Ljava/util/function/Predicate;	b	IS_TALL_GRASS
	f	Lbbh;	c	mob
	f	Lcga;	d	level
	f	I	e	eatAnimationTick
c	bhl	net/minecraft/world/entity/ai/goal/FleeSunGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	setWantedPos
	m	()Ldvt;	i	getHidePos
	f	Lbbo;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcga;	f	level
c	bhm	net/minecraft/world/entity/ai/goal/FloatGoal
	m	(Lbbh;)V	<init>	<init>
		p	1		mob
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbbh;	a	mob
c	bhn	net/minecraft/world/entity/ai/goal/FollowBoatGoal
	m	(Lbbo;)V	<init>	<init>
		p	1		mob
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	timeToRecalcPath
	f	Lbbo;	b	mob
	f	Lbtf;	c	following
	f	Lbhb;	d	currentGoal
c	bho	net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	m	(Lbmg;)V	<init>	<init>
		p	1		fish
	m	()Z	a	canUse
	m	(Lbmg;)I	a	nextStartTick
		p	1		fish
	m	()Z	b	canContinueToUse
	m	(Lbmg;)Z	b	lambda$canUse$1
		p	0		fish
	m	()V	c	start
	m	(Lbmg;)Z	c	lambda$canUse$0
		p	0		fish
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	INTERVAL_TICKS
	f	Lbmg;	b	mob
	f	I	c	timeToRecalcPath
	f	I	d	nextStartTick
c	bhp	net/minecraft/world/entity/ai/goal/FollowMobGoal
	m	(Lbbh;DFF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
	m	()Z	a	canUse
	m	(Lbbh;Lbbh;)Z	a	lambda$new$0
		p	1		target
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbbh;	a	mob
	f	Ljava/util/function/Predicate;	b	followPredicate
	f	Lbbh;	c	followingMob
	f	D	d	speedModifier
	f	Lbkf;	e	navigation
	f	I	f	timeToRecalcPath
	f	F	g	stopDistance
	f	F	h	oldWaterCost
	f	F	i	areaSize
c	bhq	net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	m	(Lbbz;DFFZ)V	<init>	<init>
		p	1		tameable
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
		p	6		leavesAllowed
	m	()Z	a	canUse
	m	(II)I	a	randomIntInclusive
		p	1		min
		p	2		max
	m	(III)Z	a	maybeTeleportTo
		p	1		x
		p	2		y
		p	3		z
	m	(Lgt;)Z	a	canTeleportTo
		p	1		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	teleportToOwner
	f	I	a	TELEPORT_WHEN_DISTANCE_IS
	f	I	b	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	c	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	d	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	Lbbz;	e	tamable
	f	Lbbf;	f	owner
	f	Lcgd;	g	level
	f	D	h	speedModifier
	f	Lbkf;	i	navigation
	f	I	j	timeToRecalcPath
	f	F	k	stopDistance
	f	F	l	startDistance
	f	F	m	oldWaterCost
	f	Z	n	canFly
c	bhr	net/minecraft/world/entity/ai/goal/FollowParentGoal
	m	(Lbmh;D)V	<init>	<init>
		p	1		animal
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	HORIZONTAL_SCAN_RANGE
	f	I	b	VERTICAL_SCAN_RANGE
	f	I	c	DONT_FOLLOW_IF_CLOSER_THAN
	f	Lbmh;	d	animal
	f	Lbmh;	e	parent
	f	D	f	speedModifier
	f	I	g	timeToRecalcPath
c	bhs	net/minecraft/world/entity/ai/goal/Goal
	m	()Z	D_	isInterruptable
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canContinueToUse
	m	(I)I	b	reducedTickDelay
		p	0		serverTicks
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/EnumSet;	j	getFlags
	f	Ljava/util/EnumSet;	a	flags
c	bhs$a	net/minecraft/world/entity/ai/goal/Goal$Flag
	m	()[Lbhs$a;	a	$values
	f	Lbhs$a;	a	MOVE
	f	Lbhs$a;	b	LOOK
	f	Lbhs$a;	c	JUMP
	f	Lbhs$a;	d	TARGET
	f	[Lbhs$a;	e	$VALUES
c	bht	net/minecraft/world/entity/ai/goal/GoalSelector
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		profiler
	m	()V	a	removeAllGoals
	m	(I)V	a	setNewGoalRate
		p	1		timeInterval
	m	(ILbhs;)V	a	addGoal
		p	1		priority
		p	2		goal
	m	(Lbhs$a;)V	a	disableControlFlag
		p	1		control
	m	(Lbhs$a;Z)V	a	setControlFlag
		p	1		control
		p	2		enabled
	m	(Lbhs;)V	a	removeGoal
		p	1		goal
	m	(Lbhs;Lbjf;)Z	a	lambda$removeGoal$1
	m	(Lbjf;Ljava/util/EnumSet;)Z	a	goalContainsAnyFlags
		p	0		goal
		p	1		controls
	m	(Lbjf;Ljava/util/Map;)Z	a	goalCanBeReplacedForAllFlags
		p	0		goal
		p	1		goalsByControl
	m	(Z)V	a	tickRunningGoals
		p	1		tickAll
	m	()V	b	tick
	m	(Lbhs$a;)V	b	enableControlFlag
		p	1		control
	m	(Lbhs;Lbjf;)Z	b	lambda$removeGoal$0
	m	()Ljava/util/Set;	c	getAvailableGoals
	m	()Ljava/util/stream/Stream;	d	getRunningGoals
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbjf;	b	NO_GOAL
	f	Ljava/util/Map;	c	lockedFlags
	f	Ljava/util/Set;	d	availableGoals
	f	Ljava/util/function/Supplier;	e	profiler
	f	Ljava/util/EnumSet;	f	disabledFlags
	f	I	g	tickCount
	f	I	h	newGoalRate
c	bht$1	net/minecraft/world/entity/ai/goal/GoalSelector$1
	m	()Z	a	canUse
c	bht$2	net/minecraft/world/entity/ai/goal/GoalSelector$2
	m	(ILbhs;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	h	isRunning
c	bhu	net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		entity
		p	2		speed
	m	(Lafo;Lhq;)Z	a	lambda$getRandomVillageSection$0
		p	1		sectionPos
	m	(Lbss;)Z	a	doesVillagerWantGolem
		p	1		villager
	m	(Lhc;)Z	a	lambda$getRandomPoiWithinSection$1
	m	(Lhq;)Lgt;	a	getRandomPoiWithinSection
		p	1		pos
	m	()Ldvt;	h	getPosition
	m	()Ldvt;	k	getPositionTowardsAnywhere
	m	()Ldvt;	l	getPositionTowardsVillagerWhoWantsGolem
	m	()Ldvt;	m	getPositionTowardsPoi
	m	()Lhq;	n	getRandomVillageSection
	f	I	i	POI_SECTION_SCAN_RADIUS
	f	I	j	VILLAGER_SCAN_RADIUS
	f	I	k	RANDOM_POS_XY_DISTANCE
	f	I	l	RANDOM_POS_Y_DISTANCE
c	bhv	net/minecraft/world/entity/ai/goal/InteractGoal
	m	(Lbbh;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbbh;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
c	bhw	net/minecraft/world/entity/ai/goal/JumpGoal
c	bhx	net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	m	(Lbne;)V	<init>	<init>
		p	1		tameable
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbne;	a	entity
	f	Lafp;	b	owner
	f	Z	c	isSittingOnShoulder
c	bhy	net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	m	(Lbbh;F)V	<init>	<init>
		p	1		mob
		p	2		velocity
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbbh;	a	mob
	f	Lbbf;	b	target
	f	F	c	yd
c	bhz	net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	m	(Lbog;D)V	<init>	<init>
		p	1		llama
		p	2		speed
	m	()Z	a	canUse
	m	(Lbaq;)Z	a	lambda$canUse$0
		p	0		entity
	m	(Lbog;I)Z	a	firstIsLeashed
		p	1		llama
		p	2		length
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbog;	a	llama
	f	D	b	speedModifier
	f	I	c	CARAVAN_LIMIT
	f	I	d	distCheckCounter
c	bia	net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	m	(Lbbh;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbbh;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
	m	(Lbbh;Ljava/lang/Class;FFZ)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
		p	5		lookForward
	m	()Z	a	canUse
	m	(Lbbf;)Z	a	lambda$canUse$1
	m	(Lbbh;Lbbf;)Z	a	lambda$new$0
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	F	a	DEFAULT_PROBABILITY
	f	Lbbh;	b	mob
	f	Lbaq;	c	lookAt
	f	F	d	lookDistance
	f	F	e	probability
	f	Ljava/lang/Class;	f	lookAtType
	f	Lbli;	g	lookAtContext
	f	I	h	lookTime
	f	Z	i	onlyHorizontal
c	bib	net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	m	(Lbsn;)V	<init>	<init>
		p	1		merchant
	m	()Z	a	canUse
	f	Lbsn;	h	villager
c	bic	net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	m	(Lbbo;DZ)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbbf;)D	a	getAttackReachSqr
		p	1		entity
	m	(Lbbf;D)V	a	checkAndPerformAttack
		p	1		target
		p	2		squaredDistance
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	resetAttackCooldown
	m	()Z	i	isTimeToAttack
	m	()I	k	getTicksUntilNextAttack
	m	()I	l	getAttackInterval
	f	Lbbo;	a	mob
	f	D	b	speedModifier
	f	Z	c	followingTargetEvenIfNotSeen
	f	Ldpo;	d	path
	f	D	e	pathedTargetX
	f	D	f	pathedTargetY
	f	D	g	pathedTargetZ
	f	I	h	ticksUntilNextPathRecalculation
	f	I	i	ticksUntilNextAttack
	f	I	j	attackInterval
	f	J	k	lastCanUseCheck
	f	J	l	COOLDOWN_BETWEEN_CAN_USE_CHECKS
c	bid	net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	m	(Lbbo;DZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		canDespawn
	m	()Z	a	canUse
	m	()Ldvt;	h	getPosition
	f	I	i	MAX_XZ_DIST
	f	I	j	MAX_Y_DIST
c	bie	net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	m	(Lbbo;DZILjava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		requiresNighttime
		p	5		distance
		p	6		doorPassingThroughGetter
	m	()Z	a	canUse
	m	(Lafo;Lgt;Lgt;)D	a	lambda$canUse$2
		p	3		pos
	m	(Lgt;)Z	a	hasNotVisited
		p	1		pos
	m	(Lgt;Lgt;)Ljava/lang/Double;	a	lambda$canUse$1
	m	(Lhc;)Z	a	lambda$canUse$3
		p	0		poiType
	m	()Z	b	canContinueToUse
	m	(Lhc;)Z	b	lambda$canUse$0
		p	0		poiType
	m	()V	c	start
	m	()V	d	stop
	m	()V	h	updateVisited
	f	Lbbo;	a	mob
	f	D	b	speedModifier
	f	Ldpo;	c	path
	f	Lgt;	d	poiPos
	f	Z	e	onlyAtNight
	f	Ljava/util/List;	f	visited
	f	I	g	distanceToPoi
	f	Ljava/util/function/BooleanSupplier;	h	canDealWithDoors
c	bif	net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	m	(Lbbo;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
	m	(Lbbo;DII)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbbo;)I	a	nextStartTick
		p	1		mob
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	moveMobToBlock
	m	()D	i	acceptedDistance
	m	()Lgt;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	m	()Z	m	isReachedTarget
	m	()Z	n	findNearestBlock
	f	Lbbo;	a	mob
	f	D	b	speedModifier
	f	I	c	nextStartTick
	f	I	d	tryTicks
	f	Lgt;	e	blockPos
	f	I	f	verticalSearchStart
	f	I	g	GIVE_UP_TICKS
	f	I	h	STAY_TICKS
	f	I	i	INTERVAL_TICKS
	f	I	j	maxStayTicks
	f	Z	k	reachedTarget
	f	I	l	searchRange
	f	I	m	verticalSearchRange
c	big	net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbbo;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
c	bih	net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	m	(Lbbo;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		maxDistance
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbbo;	a	mob
	f	Lbbf;	b	target
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	F	g	within
c	bii	net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	m	(Lbbh;)V	<init>	<init>
		p	1		mob
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbbh;	a	mob
	f	Lbbf;	b	target
	f	I	c	attackTime
c	bij	net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	m	(Lbmt;)V	<init>	<init>
		p	1		golem
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	OFFER_TICKS
	f	Lbli;	b	OFFER_TARGER_CONTEXT
	f	Lbmt;	c	golem
	f	Lbss;	d	villager
	f	I	e	tick
c	bik	net/minecraft/world/entity/ai/goal/OpenDoorGoal
	m	(Lbbh;Z)V	<init>	<init>
		p	1		mob
		p	2		delayedClose
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Z	a	closeDoor
	f	I	b	forgetTime
c	bil	net/minecraft/world/entity/ai/goal/PanicGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	(Lcfg;Lbaq;I)Lgt;	a	lookForWater
		p	1		world
		p	2		entity
		p	3		rangeX
	m	(Lcfg;Lgt;)Z	a	lambda$lookForWater$0
		p	1		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	h	shouldPanic
	m	()Z	i	findRandomPosition
	m	()Z	k	isRunning
	f	I	a	WATER_CHECK_DISTANCE_VERTICAL
	f	Lbbo;	b	mob
	f	D	c	speedModifier
	f	D	d	posX
	f	D	e	posY
	f	D	f	posZ
	f	Z	g	isRunning
c	bim	net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	m	(Lbun;)V	<init>	<init>
		p	1		actor
	m	()Z	a	canUse
	m	(Lbum;)V	a	recruitNearby
		p	1		raid
	m	(Lbum;Lbun;)Z	a	lambda$recruitNearby$0
		p	1		raider
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	I	a	RECRUITMENT_SEARCH_TICK_DELAY
	f	F	b	SPEED_MODIFIER
	f	Lbun;	c	mob
	f	I	d	recruitmentTick
c	bin	net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	m	(Lbbh;)V	<init>	<init>
		p	1		mob
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbbh;	a	mob
	f	D	b	relX
	f	D	c	relZ
	f	I	d	lookTime
c	bio	net/minecraft/world/entity/ai/goal/RandomStrollGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbbo;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	(Lbbo;DIZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		chance
		p	5		canDespawn
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setInterval
		p	1		chance
	m	()V	d	stop
	m	()Ldvt;	h	getPosition
	m	()V	i	trigger
	f	I	a	DEFAULT_INTERVAL
	f	Lbbo;	b	mob
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	I	g	interval
	f	Z	h	forceTrigger
	f	Z	i	checkNoActionTime
c	bip	net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	m	(Lbbo;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	()Ldvt;	h	getPosition
c	biq	net/minecraft/world/entity/ai/goal/RangedAttackGoal
	m	(Lbqx;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	(Lbqx;DIIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		minIntervalTicks
		p	5		maxIntervalTicks
		p	6		maxShootRange
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbbh;	a	mob
	f	Lbqx;	b	rangedAttackMob
	f	Lbbf;	c	target
	f	I	d	attackTime
	f	D	e	speedModifier
	f	I	f	seeTime
	f	I	g	attackIntervalMin
	f	I	h	attackIntervalMax
	f	F	i	attackRadius
	f	F	j	attackRadiusSqr
c	bir	net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	m	(Lbqt;DIF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		attackInterval
		p	5		range
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setMinAttackInterval
		p	1		attackInterval
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingBow
	f	Lbqt;	a	mob
	f	D	b	speedModifier
	f	I	c	attackIntervalMin
	f	F	d	attackRadiusSqr
	f	I	e	attackTime
	f	I	f	seeTime
	f	Z	g	strafingClockwise
	f	Z	h	strafingBackwards
	f	I	i	strafingTime
c	bis	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	m	(Lbqt;DF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		range
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingCrossbow
	m	()Z	i	isValidTarget
	m	()Z	k	canRun
	f	Layx;	a	PATHFINDING_DELAY_RANGE
	f	Lbqt;	b	mob
	f	Lbis$a;	c	crossbowState
	f	D	d	speedModifier
	f	F	e	attackRadiusSqr
	f	I	f	seeTime
	f	I	g	attackDelay
	f	I	h	updatePathDelay
c	bis$a	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	m	()[Lbis$a;	a	$values
	f	Lbis$a;	a	UNCHARGED
	f	Lbis$a;	b	CHARGING
	f	Lbis$a;	c	CHARGED
	f	Lbis$a;	d	READY_TO_ATTACK
	f	[Lbis$a;	e	$VALUES
c	bit	net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	m	(Lciw;Lbbo;DI)V	<init>	<init>
		p	1		targetBlock
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	()Z	a	canUse
	m	(Lcga;Lgt;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Lgt;Lcfg;)Lgt;	a	getPosWithBlock
		p	1		pos
		p	2		world
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	o	tryFindBlock
	f	Lciw;	g	blockToRemove
	f	Lbbh;	h	removerMob
	f	I	i	ticksSinceReachedGoal
	f	I	j	WAIT_AFTER_BLOCK_FOUND
c	biu	net/minecraft/world/entity/ai/goal/RestrictSunGoal
	m	(Lbbo;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbbo;	a	mob
c	biv	net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	m	(Lbod;D)V	<init>	<init>
		p	1		horse
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbod;	a	horse
	f	D	b	speedModifier
	f	D	c	posX
	f	D	d	posY
	f	D	e	posZ
c	biw	net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	m	(Lbbz;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbbz;	a	mob
c	bix	net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	m	(Lbbo;I)V	<init>	<init>
		p	1		mob
		p	2		searchRange
	m	()Z	a	canUse
	m	(Lafo;Lgt;)D	a	lambda$canUse$0
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	m	()V	h	moveRandomly
	f	I	a	DISTANCE_THRESHOLD
	f	Lbbo;	b	mob
	f	I	c	interval
	f	Lgt;	d	wantedPos
c	biy	net/minecraft/world/entity/ai/goal/SwellGoal
	m	(Lbqf;)V	<init>	<init>
		p	1		creeper
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqf;	a	creeper
	f	Lbbf;	b	target
c	biz	net/minecraft/world/entity/ai/goal/TemptGoal
	m	(Lbbo;DLccp;Z)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	a	canUse
	m	(Lbbf;)Z	a	shouldFollow
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canScare
	m	()Z	i	isRunning
	f	Lbbo;	a	mob
	f	Lbtf;	b	player
	f	Lbli;	c	TEMP_TARGETING
	f	Lbli;	d	targetingConditions
	f	D	e	speedModifier
	f	D	f	px
	f	D	g	py
	f	D	h	pz
	f	D	i	pRotX
	f	D	j	pRotY
	f	I	k	calmDown
	f	Z	l	isRunning
	f	Lccp;	m	items
	f	Z	n	canScare
c	bja	net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	m	(Lbsn;)V	<init>	<init>
		p	1		merchant
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbsn;	a	mob
c	bjb	net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	m	(Lbbo;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbbo;	a	mob
c	bjc	net/minecraft/world/entity/ai/goal/UseItemGoal
	m	(Lbbh;Lcaa;Lajd;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		item
		p	3		sound
		p	4		condition
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbbh;	a	mob
	f	Lcaa;	b	item
	f	Ljava/util/function/Predicate;	c	canUseSelector
	f	Lajd;	d	finishUsingSound
c	bjd	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Ldvt;	h	getPosition
c	bje	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbbo;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		probability
	m	()Ldvt;	h	getPosition
	f	F	i	PROBABILITY
	f	F	j	probability
c	bjf	net/minecraft/world/entity/ai/goal/WrappedGoal
	m	(ILbhs;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	D_	isInterruptable
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Lbjf;)Z	a	canBeReplacedBy
		p	1		goal
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isRunning
	m	()I	i	getPriority
	m	()Ljava/util/EnumSet;	j	getFlags
	m	()Lbhs;	k	getGoal
	f	Lbhs;	a	goal
	f	I	b	priority
	f	Z	c	isRunning
c	bjg	net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	m	(Lbrm;DZ)V	<init>	<init>
		p	1		zombie
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrm;	b	zombie
	f	I	c	raiseArmTicks
c	bjh	net/minecraft/world/entity/ai/goal/package-info
c	bji	net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	m	(Lbmt;)V	<init>	<init>
		p	1		golem
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbmt;	a	golem
	f	Lbbf;	b	potentialTarget
	f	Lbli;	c	attackTargeting
c	bjj	net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	m	(Lbbo;[Ljava/lang/Class;)V	<init>	<init>
		p	1		mob
		p	2		noRevengeTypes
	m	()Z	a	canUse
	m	(Lbbh;Lbbf;)V	a	alertOther
		p	1		mob
		p	2		target
	m	([Ljava/lang/Class;)Lbjj;	a	setAlertOthers
		p	1		noHelpTypes
	m	()V	c	start
	m	()V	h	alertOthers
	f	Lbli;	a	HURT_BY_TARGETING
	f	I	b	ALERT_RANGE_Y
	f	Z	c	alertSameType
	f	I	d	timestamp
	f	[Ljava/lang/Class;	i	toIgnoreDamage
	f	[Ljava/lang/Class;	j	toIgnoreAlert
c	bjk	net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	m	(Lbbh;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	(Lbbh;Ljava/lang/Class;Z)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
	m	(Lbbh;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	(Lbbh;Ljava/lang/Class;ZZ)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		checkCanNavigate
	m	()Z	a	canUse
	m	(D)Ldvo;	a	getTargetSearchArea
		p	1		distance
	m	(Lbbf;)V	a	setTarget
		p	1		targetEntity
	m	(Lbbf;)Z	b	lambda$findTarget$0
	m	()V	c	start
	m	()V	h	findTarget
	f	Ljava/lang/Class;	a	targetType
	f	I	b	randomInterval
	f	Lbbf;	c	target
	f	Lbli;	d	targetConditions
	f	I	i	DEFAULT_RANDOM_INTERVAL
c	bjl	net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	m	(Lbun;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		targetEntityClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	()Z	a	canUse
	m	(Z)V	a	setCanAttack
		p	1		enabled
	f	Z	i	canAttack
c	bjm	net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	m	(Lbun;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		raider
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	i	getCooldown
	m	()V	k	decrementCooldown
	f	I	i	DEFAULT_COOLDOWN
	f	I	j	cooldown
c	bjn	net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	m	(Lbbz;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		tameable
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbbz;	i	tamableMob
c	bjo	net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	m	(Lbbz;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbbz;	a	tameAnimal
	f	Lbbf;	b	ownerLastHurtBy
	f	I	c	timestamp
c	bjp	net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	m	(Lbbz;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbbz;	a	tameAnimal
	f	Lbbf;	b	ownerLastHurt
	f	I	c	timestamp
c	bjq	net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	m	(Lbbh;Z)V	<init>	<init>
		p	1		mob
		p	2		triggerOthers
	m	()Z	a	canUse
	m	(Lbbh;)Lbbm;	a	lambda$start$1
		p	0		entity
	m	(Lbbh;)Z	b	lambda$start$0
		p	1		entity
	m	()V	c	start
	m	()Z	h	wasHurtByPlayer
	m	()Ljava/util/List;	i	getNearbyMobsOfSameType
	f	I	a	ALERT_RANGE_Y
	f	Lbbh;	b	mob
	f	Z	c	alertOthersOfSameType
	f	I	d	lastHurtByPlayerTimestamp
c	bjr	net/minecraft/world/entity/ai/goal/target/TargetGoal
	m	(Lbbh;Z)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
	m	(Lbbh;ZZ)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
		p	3		checkNavigable
	m	(Lbbf;)Z	a	canReach
		p	1		entity
	m	(Lbbf;Lbli;)Z	a	canAttack
		p	1		target
		p	2		targetPredicate
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)Lbjr;	c	setUnseenMemoryTicks
		p	1		time
	m	()V	d	stop
	m	()D	l	getFollowDistance
	f	I	a	EMPTY_REACH_CACHE
	f	I	b	CAN_REACH_CACHE
	f	I	c	CANT_REACH_CACHE
	f	Z	d	mustReach
	f	Lbbh;	e	mob
	f	Z	f	mustSee
	f	Lbbf;	g	targetMob
	f	I	h	unseenMemoryTicks
	f	I	i	reachCache
	f	I	j	reachCacheTime
	f	I	k	unseenTicks
c	bjs	net/minecraft/world/entity/ai/goal/target/package-info
c	bjt	net/minecraft/world/entity/ai/gossip/GossipContainer
	m	()Ljava/util/Map;	a	getGossipEntries
	m	(II)I	a	mergeValuesForTransfer
		p	0		left
		p	1		right
	m	(Lalu;I)Ljava/util/Collection;	a	selectGossipsForTransfer
		p	1		random
		p	2		count
	m	(Lbjt$b;)V	a	lambda$update$8
	m	(Lbjt;Lalu;I)V	a	transferFrom
		p	1		from
		p	2		random
		p	3		count
	m	(Lbju;)V	a	remove
		p	1		type
	m	(Lbju;II)I	a	mergeValuesForAddition
		p	1		type
		p	2		left
		p	3		right
	m	(Lbju;Ljava/util/function/DoublePredicate;)J	a	getCountForType
		p	1		type
		p	2		predicate
	m	(Lcom/mojang/serialization/DataResult;)Ljava/util/stream/Stream;	a	lambda$update$7
	m	(Lcom/mojang/serialization/Dynamic;)V	a	update
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	store
	m	(Lcom/mojang/serialization/DynamicOps;Lbjt$b;)Lcom/mojang/serialization/Dynamic;	a	lambda$store$6
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$unpack$1
	m	(Ljava/util/Map;Ljava/util/UUID;)V	a	lambda$getGossipEntries$0
		p	2		uuid
	m	(Ljava/util/UUID;)Lbjt$a;	a	getOrCreate
		p	1		target
	m	(Ljava/util/UUID;Lbju;)V	a	remove
		p	1		target
		p	2		type
	m	(Ljava/util/UUID;Lbju;I)V	a	add
		p	1		target
		p	2		type
		p	3		value
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputation
		p	1		target
		p	2		gossipTypeFilter
	m	(Ljava/util/function/DoublePredicate;Lbju;Lbjt$a;)Z	a	lambda$getCountForType$4
	m	()V	b	decay
	m	(Lbjt$b;)V	b	lambda$transferFrom$3
		p	1		gossip
	m	(Lbju;II)I	b	lambda$add$5
		p	2		left
		p	3		right
	m	(Ljava/util/UUID;)Lbjt$a;	b	lambda$getOrCreate$2
		p	0		uuid
	m	(Ljava/util/UUID;Lbju;I)V	b	remove
		p	1		target
		p	2		type
		p	3		value
	m	()Ljava/util/stream/Stream;	c	unpack
	f	I	a	DISCARD_THRESHOLD
	f	Ljava/util/Map;	b	gossips
c	bjt$a	net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	m	()V	a	decay
	m	(Lbju;)V	a	makeSureValueIsntTooLowOrTooHigh
		p	1		gossipType
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I	a	lambda$weightedValue$1
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	unpack
		p	1		target
	m	(Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lbjt$b;	a	lambda$unpack$2
	m	(Ljava/util/function/Predicate;)I	a	weightedValue
		p	1		gossipTypeFilter
	m	(Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z	a	lambda$weightedValue$0
	m	()Z	b	isEmpty
	m	(Lbju;)V	b	remove
		p	1		gossipType
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	entries
c	bjt$b	net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	m	(Ljava/util/UUID;Lbju;I)V	<init>	<init>
		p	1		target
		p	2		type
		p	3		value
	m	()I	a	weightedValue
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	load
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	store
	f	Ljava/lang/String;	a	TAG_TARGET
	f	Ljava/lang/String;	b	TAG_TYPE
	f	Ljava/lang/String;	c	TAG_VALUE
	f	Ljava/util/UUID;	d	target
	f	Lbju;	e	type
	f	I	f	value
c	bju	net/minecraft/world/entity/ai/gossip/GossipType
	m	(Ljava/lang/String;ILjava/lang/String;IIII)V	<init>	<init>
		p	3		key
		p	4		multiplier
		p	5		maxReputation
		p	6		decay
		p	7		shareDecrement
	m	()[Lbju;	a	$values
	m	(Lbju;)Ljava/lang/String;	a	lambda$static$0
	m	(Ljava/lang/String;)Lbju;	a	byId
		p	0		key
	f	Lbju;	a	MAJOR_NEGATIVE
	f	Lbju;	b	MINOR_NEGATIVE
	f	Lbju;	c	MINOR_POSITIVE
	f	Lbju;	d	MAJOR_POSITIVE
	f	Lbju;	e	TRADING
	f	I	f	REPUTATION_CHANGE_PER_EVENT
	f	I	g	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	f	I	h	REPUTATION_CHANGE_PER_TRADE
	f	Ljava/lang/String;	i	id
	f	I	j	weight
	f	I	k	max
	f	I	l	decayPerDay
	f	I	m	decayPerTransfer
	f	Ljava/util/Map;	n	BY_ID
	f	[Lbju;	o	$VALUES
c	bjv	net/minecraft/world/entity/ai/gossip/package-info
c	bjw	net/minecraft/world/entity/ai/memory/ExpirableValue
	m	(Ljava/lang/Object;J)V	<init>	<init>
		p	1		value
		p	2		expiry
	m	()V	a	tick
	m	(Lbjw;)Ljava/util/Optional;	a	lambda$codec$1
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	(Ljava/lang/Object;)Lbjw;	a	of
		p	0		value
	m	(Ljava/lang/Object;J)Lbjw;	a	of
		p	0		value
		p	1		expiry
	m	(Ljava/lang/Object;Ljava/util/Optional;)Lbjw;	a	lambda$codec$2
	m	()J	b	getTimeToLive
	m	(Lbjw;)Ljava/lang/Object;	b	lambda$codec$0
	m	()Ljava/lang/Object;	c	getValue
	m	()Z	d	hasExpired
	m	()Z	e	canExpire
	f	Ljava/lang/Object;	a	value
	f	J	b	timeToLive
c	bjx	net/minecraft/world/entity/ai/memory/MemoryModuleType
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1		codec
	m	()Ljava/util/Optional;	a	getCodec
	m	(Ljava/lang/String;)Lbjx;	a	register
		p	0		id
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbjx;	a	register
		p	0		id
		p	1		codec
	f	Lbjx;	A	NEAREST_HOSTILE
	f	Lbjx;	B	NEAREST_ATTACKABLE
	f	Lbjx;	C	HIDING_PLACE
	f	Lbjx;	D	HEARD_BELL_TIME
	f	Lbjx;	E	CANT_REACH_WALK_TARGET_SINCE
	f	Lbjx;	F	GOLEM_DETECTED_RECENTLY
	f	Lbjx;	G	LAST_SLEPT
	f	Lbjx;	H	LAST_WOKEN
	f	Lbjx;	I	LAST_WORKED_AT_POI
	f	Lbjx;	J	NEAREST_VISIBLE_ADULT
	f	Lbjx;	K	NEAREST_VISIBLE_WANTED_ITEM
	f	Lbjx;	L	NEAREST_VISIBLE_NEMESIS
	f	Lbjx;	M	PLAY_DEAD_TICKS
	f	Lbjx;	N	TEMPTING_PLAYER
	f	Lbjx;	O	TEMPTATION_COOLDOWN_TICKS
	f	Lbjx;	P	IS_TEMPTED
	f	Lbjx;	Q	LONG_JUMP_COOLDOWN_TICKS
	f	Lbjx;	R	LONG_JUMP_MID_JUMP
	f	Lbjx;	S	HAS_HUNTING_COOLDOWN
	f	Lbjx;	T	RAM_COOLDOWN_TICKS
	f	Lbjx;	U	RAM_TARGET
	f	Lbjx;	V	IS_IN_WATER
	f	Lbjx;	W	IS_PREGNANT
	f	Lbjx;	X	IS_PANICKING
	f	Lbjx;	Y	UNREACHABLE_TONGUE_TARGETS
	f	Lbjx;	Z	ANGRY_AT
	f	Lbjx;	aA	IS_EMERGING
	f	Lbjx;	aB	ROAR_SOUND_DELAY
	f	Lbjx;	aC	DIG_COOLDOWN
	f	Lbjx;	aD	ROAR_SOUND_COOLDOWN
	f	Lbjx;	aE	SNIFF_COOLDOWN
	f	Lbjx;	aF	TOUCH_COOLDOWN
	f	Lbjx;	aG	VIBRATION_COOLDOWN
	f	Lbjx;	aH	SONIC_BOOM_COOLDOWN
	f	Lbjx;	aI	SONIC_BOOM_SOUND_COOLDOWN
	f	Lbjx;	aJ	SONIC_BOOM_SOUND_DELAY
	f	Lbjx;	aK	LIKED_PLAYER
	f	Lbjx;	aL	LIKED_NOTEBLOCK_POSITION
	f	Lbjx;	a	DUMMY
	f	Lbjx;	aM	LIKED_NOTEBLOCK_COOLDOWN_TICKS
	f	Lbjx;	aN	ITEM_PICKUP_COOLDOWN_TICKS
	f	Ljava/util/Optional;	aO	codec
	f	Lbjx;	aa	UNIVERSAL_ANGER
	f	Lbjx;	ab	ADMIRING_ITEM
	f	Lbjx;	ac	TIME_TRYING_TO_REACH_ADMIRE_ITEM
	f	Lbjx;	ad	DISABLE_WALK_TO_ADMIRE_ITEM
	f	Lbjx;	ae	ADMIRING_DISABLED
	f	Lbjx;	af	HUNTED_RECENTLY
	f	Lbjx;	ag	CELEBRATE_LOCATION
	f	Lbjx;	ah	DANCING
	f	Lbjx;	ai	NEAREST_VISIBLE_HUNTABLE_HOGLIN
	f	Lbjx;	aj	NEAREST_VISIBLE_BABY_HOGLIN
	f	Lbjx;	ak	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	f	Lbjx;	al	NEARBY_ADULT_PIGLINS
	f	Lbjx;	am	NEAREST_VISIBLE_ADULT_PIGLINS
	f	Lbjx;	an	NEAREST_VISIBLE_ADULT_HOGLINS
	f	Lbjx;	ao	NEAREST_VISIBLE_ADULT_PIGLIN
	f	Lbjx;	ap	NEAREST_VISIBLE_ZOMBIFIED
	f	Lbjx;	aq	VISIBLE_ADULT_PIGLIN_COUNT
	f	Lbjx;	ar	VISIBLE_ADULT_HOGLIN_COUNT
	f	Lbjx;	as	NEAREST_PLAYER_HOLDING_WANTED_ITEM
	f	Lbjx;	at	ATE_RECENTLY
	f	Lbjx;	au	NEAREST_REPELLENT
	f	Lbjx;	av	PACIFIED
	f	Lbjx;	aw	ROAR_TARGET
	f	Lbjx;	ax	DISTURBANCE_LOCATION
	f	Lbjx;	ay	RECENT_PROJECTILE
	f	Lbjx;	az	IS_SNIFFING
	f	Lbjx;	b	HOME
	f	Lbjx;	c	JOB_SITE
	f	Lbjx;	d	POTENTIAL_JOB_SITE
	f	Lbjx;	e	MEETING_POINT
	f	Lbjx;	f	SECONDARY_JOB_SITE
	f	Lbjx;	g	NEAREST_LIVING_ENTITIES
	f	Lbjx;	h	NEAREST_VISIBLE_LIVING_ENTITIES
	f	Lbjx;	i	VISIBLE_VILLAGER_BABIES
	f	Lbjx;	j	NEAREST_PLAYERS
	f	Lbjx;	k	NEAREST_VISIBLE_PLAYER
	f	Lbjx;	l	NEAREST_VISIBLE_ATTACKABLE_PLAYER
	f	Lbjx;	m	WALK_TARGET
	f	Lbjx;	n	LOOK_TARGET
	f	Lbjx;	o	ATTACK_TARGET
	f	Lbjx;	p	ATTACK_COOLING_DOWN
	f	Lbjx;	q	INTERACTION_TARGET
	f	Lbjx;	r	BREED_TARGET
	f	Lbjx;	s	RIDE_TARGET
	f	Lbjx;	t	PATH
	f	Lbjx;	u	INTERACTABLE_DOORS
	f	Lbjx;	v	DOORS_TO_CLOSE
	f	Lbjx;	w	NEAREST_BED
	f	Lbjx;	x	HURT_BY
	f	Lbjx;	y	HURT_BY_ENTITY
	f	Lbjx;	z	AVOID_TARGET
c	bjy	net/minecraft/world/entity/ai/memory/MemoryStatus
	m	()[Lbjy;	a	$values
	f	Lbjy;	a	VALUE_PRESENT
	f	Lbjy;	b	VALUE_ABSENT
	f	Lbjy;	c	REGISTERED
	f	[Lbjy;	d	$VALUES
c	bjz	net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	m	(Lbbf;Ljava/util/List;)V	<init>	<init>
		p	1		owner
		p	2		entities
	m	()Lbjz;	a	empty
	m	(Lbbf;)Z	a	contains
		p	1		entity
	m	(Lbbf;Lbbf;)Z	a	lambda$new$1
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanOpenHashMap;Ljava/util/function/Predicate;Lbbf;)Z	a	lambda$new$2
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/Optional;	a	findClosest
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbbf;)Z	a	lambda$find$4
		p	2		entity
	m	(Lbbf;)Z	b	lambda$new$0
		p	0		entity
	m	(Ljava/util/function/Predicate;)Ljava/lang/Iterable;	b	findAll
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbbf;)Z	b	lambda$findAll$3
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	find
		p	1		predicate
	m	(Ljava/util/function/Predicate;)Z	d	contains
		p	1		predicate
	f	Lbjz;	a	EMPTY
	f	Ljava/util/List;	b	nearbyEntities
	f	Ljava/util/function/Predicate;	c	lineOfSightTest
c	bka	net/minecraft/world/entity/ai/memory/WalkTarget
	m	(Lbaq;FI)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	3		completionRange
	m	(Lbef;FI)V	<init>	<init>
		p	1		lookTarget
		p	2		speed
		p	3		completionRange
	m	(Ldvt;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	(Lgt;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	()Lbef;	a	getTarget
	m	()F	b	getSpeedModifier
	m	()I	c	getCloseEnoughDist
	f	Lbef;	a	target
	f	F	b	speedModifier
	f	I	c	closeEnoughDist
c	bkb	net/minecraft/world/entity/ai/memory/package-info
c	bkc	net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
	m	(Ldvt;)D	a	getGroundY
		p	1		pos
	m	(Ldvt;Ldvt;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Ldvt;	b	getTempMobPos
c	bkd	net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
	m	(Lbaq;I)Ldpo;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	()Ldvt;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	()V	c	tick
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
c	bke	net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	F_	trimPath
	m	()Z	a	canUpdatePath
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
	m	(Lbaq;I)Ldpo;	a	createPath
		p	1		entity
		p	2		distance
	m	(Ldpk;)Z	a	hasValidPathType
		p	1		pathType
	m	(Lgt;I)Ldpo;	a	createPath
		p	1		target
		p	2		distance
	m	()Ldvt;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	(Z)V	d	setAvoidSun
		p	1		avoidSunlight
	m	()Z	e	canPassDoors
	m	()Z	f	canOpenDoors
	m	()I	t	getSurfaceY
	f	Z	p	avoidSun
c	bkf	net/minecraft/world/entity/ai/navigation/PathNavigation
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	F_	trimPath
	m	()Z	a	canUpdatePath
	m	(D)V	a	setSpeedModifier
		p	1		speed
	m	(DDDD)Z	a	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(DDDI)Ldpo;	a	createPath
		p	1		x
		p	3		y
		p	5		z
		p	7		distance
	m	(F)V	a	setMaxVisitedNodesMultiplier
		p	1		rangeMultiplier
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
	m	(Lbaq;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbaq;I)Ldpo;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lbbh;Ldvt;Ldvt;)Z	a	isClearForMovementBetween
		p	0		entity
		p	1		startPos
		p	2		entityPos
	m	(Ldpo;D)Z	a	moveTo
		p	1		path
		p	2		speed
	m	(Ldvt;)D	a	getGroundY
		p	1		pos
	m	(Ldvt;Ldvt;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	(Lgt;I)Ldpo;	a	createPath
		p	1		target
		p	2		distance
	m	(Lgt;II)Ldpo;	a	createPath
		p	1		target
		p	2		minDistance
		p	3		maxDistance
	m	(Ljava/util/Set;I)Ldpo;	a	createPath
		p	1		positions
		p	2		distance
	m	(Ljava/util/Set;IZI)Ldpo;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
	m	(Ljava/util/Set;IZIF)Ldpo;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
		p	5		followRange
	m	(Ljava/util/stream/Stream;I)Ldpo;	a	createPath
		p	1		positions
		p	2		distance
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Ldvt;	b	getTempMobPos
	m	(Ldvt;)V	b	doStuckDetection
		p	1		currentPos
	m	(Lgt;)Z	b	shouldRecomputePath
		p	1		pos
	m	()V	c	tick
	m	(Ldvt;)Z	c	shouldTargetNextNodeInDirection
		p	1		currentPos
	m	()V	e	timeoutPath
	m	()V	f	resetStuckTimeout
	m	()V	g	resetMaxVisitedNodesMultiplier
	m	()Lgt;	h	getTargetPos
	m	()V	i	recomputePath
	m	()Ldpo;	j	getPath
	m	()V	k	followThePath
	m	()Z	l	isDone
	m	()Z	m	isInProgress
	m	()V	n	stop
	m	()Z	o	isInLiquid
	m	()Ldpn;	p	getNodeEvaluator
	m	()Z	q	canFloat
	m	()F	r	getMaxDistanceToWaypoint
	m	()Z	s	isStuck
	f	Lbbh;	a	mob
	f	Lcga;	b	level
	f	Ldpo;	c	path
	f	D	d	speedModifier
	f	I	e	tick
	f	I	f	lastStuckCheck
	f	Ldvt;	g	lastStuckCheckPos
	f	Lhs;	h	timeoutCachedNode
	f	J	i	timeoutTimer
	f	J	j	lastTimeoutCheck
	f	D	k	timeoutLimit
	f	F	l	maxDistanceToWaypoint
	f	Z	m	hasDelayedRecomputation
	f	J	n	timeLastRecompute
	f	Ldpn;	o	nodeEvaluator
	f	I	p	MAX_TIME_RECOMPUTE
	f	Lgt;	q	targetPos
	f	I	r	reachRange
	f	F	s	maxVisitedNodesMultiplier
	f	Ldpq;	t	pathFinder
	f	Z	u	isStuck
c	bkg	net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(Lbaq;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbaq;I)Ldpo;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lgt;I)Ldpo;	a	createPath
		p	1		target
		p	2		distance
	m	()V	c	tick
	f	Lgt;	p	pathToPosition
c	bkh	net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
	m	(Ldvt;)D	a	getGroundY
		p	1		pos
	m	(Ldvt;Ldvt;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Ldvt;	b	getTempMobPos
	f	Z	p	allowBreaching
c	bki	net/minecraft/world/entity/ai/navigation/package-info
c	bkj	net/minecraft/world/entity/ai/package-info
c	bkk	net/minecraft/world/entity/ai/sensing/AdultSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lban;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lban;Lbbf;)Z	a	lambda$setNearestVisibleAdult$1
	m	(Lban;Lbjz;)V	a	setNearestVisibleAdult
		p	1		entity
	m	(Lban;Lbjz;)V	b	lambda$doTick$0
c	bkl	net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	m	(Lbbf;Lbbf;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lbjx;	b	getMemory
	m	(Lbbf;)Z	b	isHostileTarget
		p	1		axolotl
	m	(Lbbf;Lbbf;)Z	e	isHuntTarget
		p	1		axolotl
		p	2		target
	m	(Lbbf;Lbbf;)Z	f	isClose
		p	1		axolotl
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	bkm	net/minecraft/world/entity/ai/sensing/DummySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
c	bkn	net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	m	(Lbbf;Lbbf;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lbjx;	b	getMemory
	m	(Lbbf;Lbbf;)Z	e	isUnreachableAttackTarget
		p	1		entity
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	bko	net/minecraft/world/entity/ai/sensing/GolemSensor
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbf;)V	a	checkForNearbyGolem
		p	0		entity
	m	(Lbbf;)V	b	golemDetected
		p	0		entity
	m	(Lbbf;)Z	c	lambda$checkForNearbyGolem$0
	f	I	a	GOLEM_SCAN_RATE
	f	I	c	MEMORY_TIME_TO_LIVE
c	bkp	net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbrp;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lgt;)Z	a	lambda$findNearestRepellent$1
		p	1		pos
	m	(Lbbf;)Z	a	lambda$doTick$0
	m	(Lafo;Lbrp;)Ljava/util/Optional;	b	findNearestRepellent
		p	1		world
		p	2		hoglin
c	bkq	net/minecraft/world/entity/ai/sensing/HurtBySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbca;Lbbf;)V	a	lambda$doTick$0
c	bkr	net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
c	bks	net/minecraft/world/entity/ai/sensing/NearestBedSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lgt;)Z	a	lambda$doTick$0
		p	1		pos
	m	(Lhc;)Z	a	lambda$doTick$1
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$doTick$2
	f	I	a	CACHE_TIMEOUT
	f	I	c	BATCH_SIZE
	f	I	d	RATE
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	batchCache
	f	I	f	triedCount
	f	J	g	lastUpdate
c	bkt	net/minecraft/world/entity/ai/sensing/NearestItemSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbbh;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbh;Lbpy;)Z	a	lambda$doTick$2
	m	(Lbpy;)Z	a	lambda$doTick$0
	m	(Lbbh;Lbpy;)Z	b	lambda$doTick$1
	f	I	a	MAX_DISTANCE_TO_WANTED_ITEM
	f	J	c	XZ_RANGE
	f	J	d	Y_RANGE
c	bku	net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbf;Lbbf;)Z	a	lambda$doTick$0
		p	1		e
	m	()I	b	radiusXZ
	m	()I	c	radiusY
c	bkv	net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbf;)Ljava/util/Optional;	a	getVisibleEntities
		p	1		entity
	m	(Lbbf;Lbbf;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	(Lbbf;Lbjz;)Ljava/util/Optional;	a	lambda$getNearestEntity$1
	m	()Lbjx;	b	getMemory
	m	(Lbbf;)Ljava/util/Optional;	b	getNearestEntity
		p	1		entity
	m	(Lbbf;Lbbf;)Z	e	lambda$getNearestEntity$0
c	bkw	net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbf;)Z	a	lambda$doTick$0
c	bkx	net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lgt;)Z	a	isValidRepellent
		p	0		world
		p	1		pos
	m	(Lbbf;)Z	a	lambda$doTick$0
	m	(Lafo;Lgt;)Z	b	lambda$findNearestRepellent$1
		p	1		pos
	m	(Lafo;Lbbf;)Ljava/util/Optional;	c	findNearestRepellent
		p	0		world
		p	1		entity
c	bky	net/minecraft/world/entity/ai/sensing/PlayerSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbf;Lafp;)Z	a	lambda$doTick$0
		p	1		player
	m	(Lbbf;Lbtf;)Z	a	lambda$doTick$2
		p	1		player
	m	(Lbbf;Lbtf;)Z	b	lambda$doTick$1
		p	1		player
c	bkz	net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbss;)V	a	doTick
		p	1		world
		p	2		entity
	f	I	a	SCAN_RATE
c	bla	net/minecraft/world/entity/ai/sensing/Sensing
	m	(Lbbh;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(Lbaq;)Z	a	hasLineOfSight
		p	1		entity
	f	Lbbh;	a	mob
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	b	seen
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	c	unseen
c	blb	net/minecraft/world/entity/ai/sensing/Sensor
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;)V	b	tick
		p	1		world
		p	2		entity
	m	(Lbbf;Lbbf;)Z	b	isEntityTargetable
		p	0		entity
		p	1		target
	m	(Lbbf;Lbbf;)Z	c	isEntityAttackable
		p	0		entity
		p	1		target
	m	(Lbbf;Lbbf;)Z	d	isEntityAttackableIgnoringLineOfSight
		p	0		entity
		p	1		target
	f	Lalu;	a	RANDOM
	f	I	b	TARGETING_RANGE
	f	I	c	DEFAULT_SCAN_RATE
	f	Lbli;	d	TARGET_CONDITIONS
	f	Lbli;	e	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbli;	f	ATTACK_TARGET_CONDITIONS
	f	Lbli;	g	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbli;	h	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	f	Lbli;	i	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	f	I	j	scanRate
	f	J	k	timeToTick
c	blc	net/minecraft/world/entity/ai/sensing/SensorType
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		factory
	m	()Lblb;	a	create
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lblc;	a	register
		p	0		id
		p	1		factory
	m	()Lbld;	b	lambda$static$2
	m	()Lbld;	c	lambda$static$1
	m	()Lbld;	d	lambda$static$0
	f	Lblc;	a	DUMMY
	f	Lblc;	b	NEAREST_ITEMS
	f	Lblc;	c	NEAREST_LIVING_ENTITIES
	f	Lblc;	d	NEAREST_PLAYERS
	f	Lblc;	e	NEAREST_BED
	f	Lblc;	f	HURT_BY
	f	Lblc;	g	VILLAGER_HOSTILES
	f	Lblc;	h	VILLAGER_BABIES
	f	Lblc;	i	SECONDARY_POIS
	f	Lblc;	j	GOLEM_DETECTED
	f	Lblc;	k	PIGLIN_SPECIFIC_SENSOR
	f	Lblc;	l	PIGLIN_BRUTE_SPECIFIC_SENSOR
	f	Lblc;	m	HOGLIN_SPECIFIC_SENSOR
	f	Lblc;	n	NEAREST_ADULT
	f	Lblc;	o	AXOLOTL_ATTACKABLES
	f	Lblc;	p	AXOLOTL_TEMPTATIONS
	f	Lblc;	q	GOAT_TEMPTATIONS
	f	Lblc;	r	FROG_TEMPTATIONS
	f	Lblc;	s	FROG_ATTACKABLES
	f	Lblc;	t	IS_IN_WATER
	f	Lblc;	u	WARDEN_ENTITY_SENSOR
	f	Ljava/util/function/Supplier;	v	factory
c	bld	net/minecraft/world/entity/ai/sensing/TemptingSensor
	m	(Lccp;)V	<init>	<init>
		p	1		ingredient
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbbo;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbo;Lafp;)Z	a	lambda$doTick$1
		p	1		player
	m	(Lbtf;)Z	a	playerHoldingTemptation
		p	1		player
	m	(Lcaa;)Z	a	isTemptation
		p	1		stack
	m	(Lbbo;Lafp;)Z	b	lambda$doTick$0
		p	1		player
	f	I	a	TEMPTATION_RANGE
	f	Lbli;	c	TEMPT_TARGETING
	f	Lccp;	d	temptations
c	ble	net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbf;)Ljava/util/List;	a	getNearestVillagerBabies
		p	1		entities
	m	(Lbbf;)Z	b	isVillagerBaby
		p	1		entity
	m	(Lbbf;)Lbjz;	c	getVisibleEntities
		p	1		entity
c	blf	net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	m	(Lbbf;Lbbf;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lbjx;	b	getMemory
	m	(Lbbf;)Z	b	isHostile
		p	1		entity
	m	(Lbbf;Lbbf;)Z	e	isClose
		p	1		villager
		p	2		target
	f	Lcom/google/common/collect/ImmutableMap;	a	ACCEPTABLE_DISTANCE_FROM_HOSTILES
c	blg	net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lafo;Lbbf;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lafo;Lbsj;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbbf;)Z	a	lambda$doTick$1
	m	(Lbsj;)V	a	lambda$doTick$4
	m	(Lbsj;Lbbf;)V	a	lambda$doTick$3
		p	1		entity
	m	(Lbsj;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	getClosest
		p	0		warden
		p	1		targetPredicate
	m	()I	b	radiusXZ
	m	(Lbbf;)Z	b	lambda$doTick$0
		p	0		entity
	m	(Lbsj;)Ljava/util/Optional;	b	lambda$doTick$2
	m	()I	c	radiusY
c	blh	net/minecraft/world/entity/ai/sensing/package-info
c	bli	net/minecraft/world/entity/ai/targeting/TargetingConditions
	m	(Z)V	<init>	<init>
		p	1		attackable
	m	()Lbli;	a	forCombat
	m	(D)Lbli;	a	range
		p	1		baseMaxDistance
	m	(Lbbf;Lbbf;)Z	a	test
		p	1		baseEntity
		p	2		targetEntity
	m	(Ljava/util/function/Predicate;)Lbli;	a	selector
		p	1		predicate
	m	()Lbli;	b	forNonCombat
	m	()Lbli;	c	copy
	m	()Lbli;	d	ignoreLineOfSight
	m	()Lbli;	e	ignoreInvisibilityTesting
	f	Lbli;	a	DEFAULT
	f	D	b	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	f	Z	c	isCombat
	f	D	d	range
	f	Z	e	checkLineOfSight
	f	Z	f	testInvisible
	f	Ljava/util/function/Predicate;	g	selector
c	blj	net/minecraft/world/entity/ai/targeting/package-info
c	blk	net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	m	(Lbbo;IIIDDD)Ldvt;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
	m	(Lbbo;IIIDDDZ)Lgt;	a	generateRandomPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
		p	10		posTargetInRange
	m	(Lbbo;Lgt;)Z	a	lambda$generateRandomPos$1
		p	1		pos
	m	(Lbbo;IIIDDDZ)Lgt;	b	lambda$getPos$0
c	bll	net/minecraft/world/entity/ai/util/AirRandomPos
	m	(Lbbo;IIILdvt;D)Ldvt;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		direction
		p	5		angleRange
	m	(Lbbo;IIILdvt;DZ)Lgt;	a	lambda$getPosTowards$0
c	blm	net/minecraft/world/entity/ai/util/DefaultRandomPos
	m	(Lbbo;II)Ldvt;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbbo;IILdvt;)Ldvt;	a	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbbo;IILdvt;D)Ldvt;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
		p	4		angleRange
	m	(Lbbo;IILdvt;DZ)Lgt;	a	lambda$getPosTowards$1
	m	(Lbbo;IILdvt;Z)Lgt;	a	lambda$getPosAway$2
	m	(Lbbo;IIZ)Lgt;	a	lambda$getPos$0
	m	(Lbbo;IZLgt;)Lgt;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		fuzz
c	bln	net/minecraft/world/entity/ai/util/GoalUtils
	m	(Lbbh;)Z	a	hasGroundPathNavigation
		p	0		entity
	m	(Lbbo;I)Z	a	mobRestricted
		p	0		entity
		p	1		extraDistance
	m	(Lbbo;Lgt;)Z	a	isWater
		p	0		entity
		p	1		pos
	m	(Lbkf;Lgt;)Z	a	isNotStable
		p	0		navigation
		p	1		pos
	m	(Lgt;Lbbo;)Z	a	isOutsideLimits
		p	0		pos
		p	1		entity
	m	(ZLbbo;Lgt;)Z	a	isRestricted
		p	0		posTargetInRange
		p	1		entity
		p	2		pos
	m	(Lbbo;Lgt;)Z	b	hasMalus
		p	0		entity
		p	1		pos
	m	(Lbbo;Lgt;)Z	c	isSolid
		p	0		entity
		p	1		pos
c	blo	net/minecraft/world/entity/ai/util/HoverRandomPos
	m	(Lbbo;IIDDFII)Ldvt;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		x
		p	5		z
		p	7		angle
		p	8		maxAboveSolid
		p	9		minAboveSolid
	m	(Lbbo;IIDDFZII)Lgt;	a	lambda$getPos$1
	m	(Lbbo;Lgt;)Z	a	lambda$getPos$0
		p	1		pos
c	blp	net/minecraft/world/entity/ai/util/LandRandomPos
	m	(Lbbo;II)Ldvt;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbbo;IILdvt;)Ldvt;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
	m	(Lbbo;IILdvt;Z)Ldvt;	a	getPosInDirection
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		direction
		p	4		posTargetInRange
	m	(Lbbo;IILjava/util/function/ToDoubleFunction;)Ldvt;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		scorer
	m	(Lbbo;IIZ)Lgt;	a	lambda$getPos$0
	m	(Lbbo;IZLgt;)Lgt;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		relativeInRangePos
	m	(Lbbo;Lgt;)Lgt;	a	movePosUpOutOfSolid
		p	0		entity
		p	1		pos
	m	(Lbbo;IILdvt;)Ldvt;	b	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbbo;IILdvt;Z)Lgt;	b	lambda$getPosInDirection$1
	m	(Lbbo;Lgt;)Z	b	lambda$movePosUpOutOfSolid$2
		p	1		currentPos
c	blq	net/minecraft/world/entity/ai/util/RandomPos
	m	(Lalu;II)Lgt;	a	generateRandomDirection
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lalu;IIIDDD)Lgt;	a	generateRandomDirectionWithinRadians
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		angleRange
	m	(Lbbo;ILalu;Lgt;)Lgt;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		random
		p	3		fuzz
	m	(Lbbo;Ljava/util/function/Supplier;)Ldvt;	a	generateRandomPos
		p	0		entity
		p	1		factory
	m	(Lgt;IILjava/util/function/Predicate;)Lgt;	a	moveUpToAboveSolid
		p	0		pos
		p	1		extraAbove
		p	2		max
		p	3		condition
	m	(Lgt;ILjava/util/function/Predicate;)Lgt;	a	moveUpOutOfSolid
		p	0		pos
		p	1		maxY
		p	2		condition
	m	(Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Ldvt;	a	generateRandomPos
		p	0		factory
		p	1		scorer
	f	I	a	RANDOM_POS_ATTEMPTS
c	blr	net/minecraft/world/entity/ai/util/package-info
c	bls	net/minecraft/world/entity/ai/village/ReputationEventType
	m	(Ljava/lang/String;)Lbls;	a	register
		p	0		key
	f	Lbls;	a	ZOMBIE_VILLAGER_CURED
	f	Lbls;	b	GOLEM_KILLED
	f	Lbls;	c	VILLAGER_HURT
	f	Lbls;	d	VILLAGER_KILLED
	f	Lbls;	e	TRADE
c	bls$1	net/minecraft/world/entity/ai/village/ReputationEventType$1
	f	Ljava/lang/String;	f	val$name
c	blt	net/minecraft/world/entity/ai/village/VillageSiege
	m	(Lafo;)Z	a	tryToSetupSiege
		p	1		world
	m	(Lafo;Lgt;)Ldvt;	a	findRandomSpawnPos
		p	1		world
		p	2		pos
	m	(Lafo;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lafo;)V	b	trySpawn
		p	1		world
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	hasSetupSiege
	f	Lblt$a;	c	siegeState
	f	I	d	zombiesToSpawn
	f	I	e	nextSpawnTime
	f	I	f	spawnX
	f	I	g	spawnY
	f	I	h	spawnZ
c	blt$a	net/minecraft/world/entity/ai/village/VillageSiege$State
	m	()[Lblt$a;	a	$values
	f	Lblt$a;	a	SIEGE_CAN_ACTIVATE
	f	Lblt$a;	b	SIEGE_TONIGHT
	f	Lblt$a;	c	SIEGE_DONE
	f	[Lblt$a;	d	$VALUES
c	blu	net/minecraft/world/entity/ai/village/package-info
c	blv	net/minecraft/world/entity/ai/village/poi/PoiManager
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLhn;Lcgc;)V	<init>	<init>
		p	1		path
		p	2		dataFixer
		p	3		dsync
		p	4		registryManager
		p	5		world
	m	(J)V	a	setDirty
		p	1		pos
	m	(Laai;Lgt;)Z	a	existsAtPosition
		p	1		type
		p	2		pos
	m	(Laai;Lhc;)Z	a	lambda$existsAtPosition$1
		p	1		entry
	m	(Lblw;)Lgt;	a	lambda$take$15
		p	0		poi
	m	(Lblx;)Ljava/lang/Boolean;	a	lambda$isVillageCenter$23
		p	0		poiSet
	m	(Lcfh;Lcwx;)V	a	checkConsistencyWithBlocks
		p	1		chunkPos
		p	2		chunkSection
	m	(Lcfh;Ljava/lang/Integer;)Ljava/util/Optional;	a	lambda$getInChunk$5
	m	(Lcgd;Lcfh;)V	a	lambda$ensureLoadedAndValid$33
	m	(Lcgd;Lgt;I)V	a	ensureLoadedAndValid
		p	1		world
		p	2		pos
		p	3		radius
	m	(Lcom/mojang/datafixers/util/Pair;)Lcfh;	a	lambda$ensureLoadedAndValid$31
	m	(Lcwx;)Z	a	mayHavePoi
		p	0		chunkSection
	m	(Lcwx;Lhq;)V	a	lambda$checkConsistencyWithBlocks$26
	m	(Lcwx;Lhq;Lblx;)V	a	lambda$checkConsistencyWithBlocks$25
		p	3		poiSet
	m	(Lcwx;Lhq;Ljava/util/function/BiConsumer;)V	a	updateFromSection
		p	1		chunkSection
		p	2		sectionPos
	m	(Lcwx;Ljava/util/function/BiConsumer;Lgt;)V	a	lambda$updateFromSection$28
		p	2		pos
	m	(Lgt;)V	a	remove
		p	1		pos
	m	(Lgt;ILblw;)Z	a	lambda$getInRange$4
		p	2		poi
	m	(Lgt;Lblw;)D	a	lambda$findClosestWithType$11
		p	1		poi
	m	(Lgt;Lblx;)Ljava/lang/Integer;	a	lambda$getFreeTickets$21
		p	1		poiSet
	m	(Lgt;Lcom/mojang/datafixers/util/Pair;)D	a	lambda$findAllClosestFirstWithType$9
	m	(Lgt;Lgt;)D	a	lambda$findClosest$13
	m	(Lgt;Lhc;)V	a	add
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Lgt;Ljava/util/function/Predicate;Lblx;)Ljava/lang/Boolean;	a	lambda$exists$19
		p	2		poiSet
	m	(Lhc;)Z	a	lambda$isVillageCenter$22
		p	0		entry
	m	(Lhq;)I	a	sectionsToVillage
		p	1		pos
	m	(Ljava/util/function/BiConsumer;Lgt;Lhc;)V	a	lambda$updateFromSection$27
		p	2		poiType
	m	(Ljava/util/function/BiPredicate;Lblw;)Z	a	lambda$take$14
		p	1		poi
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;Lblv$b;Lcfh;)Ljava/util/stream/Stream;	a	lambda$getInSquare$2
		p	3		chunkPos
	m	(Ljava/util/function/Predicate;Lblv$b;Ljava/util/Optional;)Ljava/util/stream/Stream;	a	lambda$getInChunk$6
	m	(Ljava/util/function/Predicate;Lblw;)Z	a	lambda$getRandom$16
		p	1		poi
	m	(Ljava/util/function/Predicate;Lcfh;Lblv$b;)Ljava/util/stream/Stream;	a	getInChunk
		p	1		typePredicate
		p	2		chunkPos
		p	3		occupationStatus
	m	(Ljava/util/function/Predicate;Lgt;ILblv$b;)J	a	getCountInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lgt;I)Ljava/util/Optional;	a	take
		p	1		typePredicate
		p	3		pos
		p	4		radius
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lblv$b;Lgt;ILalu;)Ljava/util/Optional;	a	getRandom
		p	1		typePredicate
		p	2		positionPredicate
		p	3		occupationStatus
		p	4		pos
		p	5		radius
		p	6		random
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/stream/Stream;	a	findAll
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Lblw;)Lcom/mojang/datafixers/util/Pair;	b	lambda$findClosestWithType$12
		p	0		poi
	m	(Lcfh;)Z	b	lambda$ensureLoadedAndValid$32
		p	1		chunkPos
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$ensureLoadedAndValid$30
	m	(Lcwx;Lhq;Ljava/util/function/BiConsumer;)V	b	lambda$checkConsistencyWithBlocks$24
	m	(Lgt;)Z	b	release
		p	1		pos
	m	(Lgt;ILblw;)Z	b	lambda$getInSquare$3
		p	2		poi
	m	(Lgt;Lblx;)Ljava/util/Optional;	b	lambda$getType$20
		p	1		poiSet
	m	(Lgt;Lgt;)D	b	lambda$findClosest$10
	m	(Lhq;)Lcom/mojang/datafixers/util/Pair;	b	lambda$ensureLoadedAndValid$29
		p	1		sectionPos
	m	(Ljava/util/function/Predicate;Lblw;)Z	b	lambda$findAllWithType$7
		p	1		poi
	m	(Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/stream/Stream;	b	getInSquare
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/stream/Stream;	b	findAllWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lblw;)Lcom/mojang/datafixers/util/Pair;	c	lambda$findAllWithType$8
		p	0		poi
	m	(Lgt;)Ljava/util/Optional;	c	getType
		p	1		pos
	m	(Lgt;Lblx;)Ljava/lang/Boolean;	c	lambda$release$17
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/stream/Stream;	c	getInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/stream/Stream;	c	findAllClosestFirstWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lgt;)I	d	getFreeTickets
		p	1		pos
	m	(Lgt;Lblx;)V	d	lambda$remove$0
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/Optional;	d	findClosest
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/Optional;	d	find
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lgt;)Ljava/lang/IllegalStateException;	e	lambda$release$18
	m	(Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/Optional;	e	findClosestWithType
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILblv$b;)Ljava/util/Optional;	e	findClosest
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(J)Z	g	isVillageCenter
		p	1		pos
	f	I	a	MAX_VILLAGE_DISTANCE
	f	I	b	VILLAGE_SECTION_SIZE
	f	Lblv$a;	d	distanceTracker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	loadedChunks
c	blv$a	net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Lblv;	a	this$0
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	levels
c	blv$b	net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()Ljava/util/function/Predicate;	a	getTest
	m	(Lblw;)Z	a	lambda$static$0
	m	()[Lblv$b;	b	$values
	f	Lblv$b;	a	HAS_SPACE
	f	Lblv$b;	b	IS_OCCUPIED
	f	Lblv$b;	c	ANY
	f	Ljava/util/function/Predicate;	d	test
	f	[Lblv$b;	e	$VALUES
c	blw	net/minecraft/world/entity/ai/village/poi/PoiRecord
	m	(Lgt;Lhc;ILjava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	3		freeTickets
		p	4		updateListener
	m	(Lgt;Lhc;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	3		updateListener
	m	()I	a	getFreeTickets
	m	(Lblw;)Ljava/lang/Integer;	a	lambda$codec$2
		p	0		poi
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	()Z	b	acquireTicket
	m	(Lblw;)Lhc;	b	lambda$codec$1
		p	0		poi
	m	()Z	c	releaseTicket
	m	(Lblw;)Lgt;	c	lambda$codec$0
		p	0		poi
	m	()Z	d	hasSpace
	m	()Z	e	isOccupied
	m	()Lgt;	f	getPos
	m	()Lhc;	g	getPoiType
	f	Lgt;	a	pos
	f	Lhc;	b	poiType
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	setDirty
c	blx	net/minecraft/world/entity/ai/village/poi/PoiSection
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		updateListener
	m	(Ljava/lang/Runnable;ZLjava/util/List;)V	<init>	<init>
		p	1		updateListener
		p	2		valid
		p	3		pois
	m	()Z	a	isValid
	m	(Laai;)Ljava/lang/String;	a	lambda$add$6
	m	(Lblw;)Z	a	add
		p	1		poi
	m	(Lblx;)Ljava/util/List;	a	lambda$codec$1
		p	0		poiSet
	m	(Lgt;)V	a	remove
		p	1		pos
	m	(Lgt;Lhc;)V	a	add
		p	1		pos
	m	(Lgt;Lhc;S)Lblw;	a	lambda$refresh$8
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Lhc;)Ljava/util/Set;	a	lambda$add$7
	m	(Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lgt;Lhc;)V	a	lambda$refresh$9
		p	2		pos
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$getRecords$5
	m	(Ljava/util/function/Consumer;)V	a	refresh
	m	(Ljava/util/function/Predicate;Lblv$b;)Ljava/util/stream/Stream;	a	getRecords
		p	1		predicate
		p	2		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z	a	lambda$getRecords$4
	m	()V	b	clear
	m	(Lblx;)Ljava/lang/Boolean;	b	lambda$codec$0
		p	0		poiSet
	m	(Lgt;)I	b	getFreeTickets
		p	1		pos
	m	(Ljava/lang/Runnable;)Lblx;	b	lambda$codec$3
	m	(Lgt;)Z	c	release
		p	1		pos
	m	(Lgt;)Ljava/util/Optional;	d	getType
		p	1		pos
	m	(Lgt;)Ljava/util/Optional;	e	getPoiRecord
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	records
	f	Ljava/util/Map;	c	byType
	f	Ljava/lang/Runnable;	d	setDirty
	f	Z	e	isValid
c	bly	net/minecraft/world/entity/ai/village/poi/PoiType
	m	()Ljava/util/Set;	a	matchingStates
	m	(Lcur;)Z	a	is
		p	1		state
	m	(Lhc;)Z	a	lambda$static$0
		p	0		type
	m	()I	b	maxTickets
	m	()I	c	validRange
	f	Ljava/util/function/Predicate;	a	NONE
	f	Ljava/util/Set;	b	matchingStates
	f	I	c	maxTickets
	f	I	d	validRange
c	blz	net/minecraft/world/entity/ai/village/poi/PoiTypes
	m	(Lciw;)Ljava/util/Set;	a	getBlockStates
		p	0		block
	m	(Lcur;)Ljava/util/Optional;	a	forState
		p	0		state
	m	(Lhc;)V	a	registerBlockStates
		p	0		poiType
	m	(Lhc;Lcur;)V	a	lambda$registerBlockStates$3
		p	1		state
	m	(Lhm;)Lbly;	a	bootstrap
		p	0		registry
	m	(Lhm;Laai;Ljava/util/Set;II)Lbly;	a	register
		p	0		registry
		p	1		key
		p	2		states
		p	3		ticketCount
		p	4		searchDistance
	m	(Ljava/lang/String;)Laai;	a	createKey
		p	0		id
	m	(Lciw;)Ljava/util/stream/Stream;	b	lambda$static$2
	m	(Lcur;)Z	b	lambda$static$1
	m	(Lciw;)Ljava/util/stream/Stream;	c	lambda$static$0
	f	Laai;	a	ARMORER
	f	Laai;	b	BUTCHER
	f	Laai;	c	CARTOGRAPHER
	f	Laai;	d	CLERIC
	f	Laai;	e	FARMER
	f	Laai;	f	FISHERMAN
	f	Laai;	g	FLETCHER
	f	Laai;	h	LEATHERWORKER
	f	Laai;	i	LIBRARIAN
	f	Laai;	j	MASON
	f	Laai;	k	SHEPHERD
	f	Laai;	l	TOOLSMITH
	f	Laai;	m	WEAPONSMITH
	f	Laai;	n	HOME
	f	Laai;	o	MEETING
	f	Laai;	p	BEEHIVE
	f	Laai;	q	BEE_NEST
	f	Laai;	r	NETHER_PORTAL
	f	Laai;	s	LODESTONE
	f	Laai;	t	LIGHTNING_ROD
	f	Ljava/util/Set;	u	ALL_STATES
	f	Ljava/util/Set;	v	BEDS
	f	Ljava/util/Set;	w	CAULDRONS
	f	Ljava/util/Map;	x	TYPE_BY_STATE
c	bma	net/minecraft/world/entity/ai/village/poi/package-info
c	bmb	net/minecraft/world/entity/ambient/AmbientCreature
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
c	bmc	net/minecraft/world/entity/ambient/Bat
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbaq;)V	A	doPush
		p	1		entity
	m	()V	T	customServerAiStep
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aL	isFlapping
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkBatSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPushable
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Z	cn	isIgnoringBlockTriggers
	m	()F	eD	getSoundVolume
	m	()F	eE	getVoicePitch
	m	()V	eO	pushEntities
	m	()V	k	tick
	m	()Lbcf$a;	n	createAttributes
	m	()Z	q	isResting
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	isHalloween
	m	(Z)V	v	setResting
		p	1		roosting
	m	()Lajd;	x_	getDeathSound
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lbli;	bW	BAT_RESTING_TARGETING
	f	Lgt;	bX	targetPosition
	f	I	c	TICKS_PER_FLAP
	f	Lzr;	d	DATA_ID_FLAGS
	f	I	e	FLAG_RESTING
c	bmd	net/minecraft/world/entity/ambient/package-info
c	bme	net/minecraft/world/entity/animal/AbstractFish
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	P	requiresCustomPersistence
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lajd;	aG	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lpj;)V	c	loadFromBucketTag
		p	1		nbt
	m	()Z	fK	canRandomSwim
	m	()Lajd;	fL	getFlopSound
	m	()I	fp	getMaxSpawnClusterSize
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcaa;)V	m	saveToBucketTag
		p	1		stack
	m	()Lbcf$a;	n	createAttributes
	m	()Z	q	fromBucket
	m	()Lajd;	t	getPickupSound
	m	()V	u	registerGoals
	m	(Z)V	v	setFromBucket
		p	1		fromBucket
	m	()V	w_	aiStep
	f	Lzr;	b	FROM_BUCKET
c	bme$a	net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	m	(Lbme;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	f	Lbme;	l	fish
c	bme$b	net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	m	(Lbme;)V	<init>	<init>
		p	1		fish
	m	()Z	a	canUse
	f	Lbme;	i	fish
c	bmf	net/minecraft/world/entity/animal/AbstractGolem
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	J	getAmbientSoundInterval
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
c	bmg	net/minecraft/world/entity/animal/AbstractSchoolingFish
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbmg;)Lbmg;	a	startFollowing
		p	1		groupLeader
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/stream/Stream;)V	a	addFollowers
		p	1		fish
	m	(Lbmg;)V	b	lambda$addFollowers$1
		p	1		fish
	m	(Lbmg;)Z	c	lambda$addFollowers$0
		p	1		fish
	m	()Z	fK	canRandomSwim
	m	()I	fM	getMaxSchoolSize
	m	()Z	fN	isFollower
	m	()V	fO	stopFollowing
	m	()Z	fP	canBeFollowed
	m	()Z	fQ	hasFollowers
	m	()Z	fR	inRangeOfLeader
	m	()V	fS	pathToLeader
	m	()V	fT	addFollower
	m	()V	fU	removeFollower
	m	()I	fp	getMaxSpawnClusterSize
	m	()V	k	tick
	m	()V	u	registerGoals
	f	Lbmg;	b	leader
	f	I	c	schoolSize
c	bmg$a	net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	m	(Lbmg;)V	<init>	<init>
		p	1		leader
	f	Lbmg;	a	leader
c	bmh	net/minecraft/world/entity/animal/Animal
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	J	getAmbientSoundInterval
	m	()V	T	customServerAiStep
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lafo;Lbmh;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lbtf;Lazl;Lcaa;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcfd;Lgt;)Z	a	isBrightEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bt	getMyRidingOffset
	m	()I	dP	getExperienceReward
	m	(Lbtf;)V	f	setInLove
		p	1		player
	m	()Z	fN	canFallInLove
	m	()I	fO	getInLoveTime
	m	()Lafp;	fP	getLoveCause
	m	()Z	fQ	isInLove
	m	()V	fR	resetLove
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	(I)V	s	setInLoveTime
		p	1		loveTicks
	m	()V	w_	aiStep
	f	I	bX	inLove
	f	Ljava/util/UUID;	bY	loveCause
	f	I	bZ	PARENT_AGE_AFTER_BREEDING
c	bmi	net/minecraft/world/entity/animal/Bee
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbmi;)Lalu;	A	access$2600
	m	(Lbmi;)Lalu;	B	access$2700
	m	(Lbmi;)Lalu;	C	access$2800
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbmi;)Lbkf;	a	access$000
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcga;DDDDDLim;)V	a	spawnFluidParticle
		p	1		world
		p	2		lastX
		p	4		x
		p	6		lastZ
		p	8		z
		p	10		y
		p	12		effect
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aL	isFlapping
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lafo;Lban;)Lbmi;	b	getBreedOffspring
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbmi;)Lalu;	b	access$100
	m	(Lgt;I)Z	b	closerThan
		p	1		pos
		p	2		distance
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lakh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbmi;)Lbkf;	c	access$200
	m	()Ldvt;	cC	getLeashOffset
	m	(IZ)V	d	setFlag
		p	1		bit
		p	2		value
	m	(Lbmi;)Lbkf;	d	access$300
	m	(Lbmi;)Lbkf;	e	access$400
	m	()F	eD	getSoundVolume
	m	()Lbbk;	ez	getMobType
	m	(Lbmi;)Lbkf;	f	access$500
	m	()I	fK	getTravellingTicks
	m	()Ljava/util/List;	fL	getBlacklistedHives
	m	()V	fM	resetTicksWithoutNectarSinceExitingHive
	m	()Z	fS	hasHive
	m	()Lgt;	fT	getHivePos
	m	()Lbht;	fU	getGoalSelector
	m	()Z	fV	hasNectar
	m	()Z	fW	hasStung
	m	()Lbcf$a;	fX	createAttributes
	m	()Z	fY	isFlying
	m	()V	fZ	dropOffNectar
	m	(Lbmi;)Lbkf;	g	access$600
	m	(Lgt;)V	g	setSavedFlowerPos
		p	1		flowerPos
	m	()Z	ga	isTiredOfLookingForNectar
	m	()Z	gb	wantsToEnterHive
	m	()V	gc	updateRollAmount
	m	()Z	gd	isHiveNearFire
	m	()I	ge	getCropsGrownSincePollination
	m	()V	gf	resetNumCropsGrownSincePollination
	m	()V	gg	incrementNumCropsGrownSincePollination
	m	()Z	gh	isHiveValid
	m	()Z	gi	isRolling
	m	(Lbmi;)Lbkf;	h	access$700
	m	(Lgt;)V	h	pathfindRandomlyTowards
		p	1		pos
	m	(Lbmi;)Lbkf;	i	access$800
	m	(Lgt;)Z	i	doesHiveHaveSpace
		p	1		pos
	m	(Lbmi;)Lbkf;	j	access$900
	m	(Lgt;)Z	j	isTooFarAway
		p	1		pos
	m	()V	k	tick
	m	(Lbmi;)Lbkf;	k	access$1000
	m	(Lgt;)Z	k	isFlowerValid
		p	1		pos
	m	(Lbmi;)Lbkf;	l	access$1100
	m	(Lbmi;)Lbkf;	m	access$1200
	m	(Lbmi;)Lbkf;	n	access$1300
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	(Lbmi;)Lbkf;	o	access$1400
	m	(Lbmi;)Lbkf;	p	access$1500
	m	()Lgt;	q	getSavedFlowerPos
	m	(Lbmi;)Lbkf;	q	access$1600
	m	()Lajd;	r	getAmbientSound
	m	(Lbmi;)Lbkf;	r	access$1700
	m	(Lbmi;)Lbkf;	s	access$1800
	m	()Z	t	hasSavedFlowerPos
	m	(I)V	t	setStayOutOfHiveCountdown
		p	1		cannotEnterHiveTicks
	m	(Lbmi;)Lalu;	t	access$1900
	m	()V	u	registerGoals
	m	(I)Z	u	getFlag
		p	1		location
	m	(Lbmi;)Lalu;	u	access$2000
	m	(Lbmi;)Lbkf;	v	access$2100
	m	(Z)V	v	setHasNectar
		p	1		hasNectar
	m	(Lbmi;)Lalu;	w	access$2200
	m	(Z)V	w	setHasStung
		p	1		hasStung
	m	()V	w_	aiStep
	m	(Lbmi;)Lbkf;	x	access$2300
	m	(Z)V	x	setRolling
		p	1		nearTarget
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getRollAmount
		p	1		tickDelta
	m	(Lbmi;)Lalu;	y	access$2400
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	m	(Lbmi;)Lalu;	z	access$2500
	f	F	bX	FLAP_DEGREES_PER_TICK
	f	I	bY	TICKS_PER_FLAP
	f	F	cA	rollAmountO
	f	I	cB	timeSinceSting
	f	I	cC	ticksWithoutNectarSinceExitingHive
	f	I	cD	stayOutOfHiveCountdown
	f	I	cE	numCropsGrownSincePollination
	f	I	cF	COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	f	I	cG	remainingCooldownBeforeLocatingNewHive
	f	I	cH	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	f	I	cI	remainingCooldownBeforeLocatingNewFlower
	f	Lgt;	cJ	savedFlowerPos
	f	Lgt;	cK	hivePos
	f	Lbmi$k;	cL	beePollinateGoal
	f	Lbmi$e;	cM	goToHiveGoal
	f	Lbmi$f;	cN	goToKnownFlowerGoal
	f	I	cO	underWaterTicks
	f	Ljava/lang/String;	ca	TAG_CROPS_GROWN_SINCE_POLLINATION
	f	Ljava/lang/String;	cb	TAG_CANNOT_ENTER_HIVE_TICKS
	f	Ljava/lang/String;	cc	TAG_TICKS_SINCE_POLLINATION
	f	Ljava/lang/String;	cd	TAG_HAS_STUNG
	f	Ljava/lang/String;	ce	TAG_HAS_NECTAR
	f	Ljava/lang/String;	cf	TAG_FLOWER_POS
	f	Ljava/lang/String;	cg	TAG_HIVE_POS
	f	Lzr;	ch	DATA_FLAGS_ID
	f	Lzr;	ci	DATA_REMAINING_ANGER_TIME
	f	I	cj	FLAG_ROLL
	f	I	ck	FLAG_HAS_STUNG
	f	I	cl	FLAG_HAS_NECTAR
	f	I	cm	STING_DEATH_COUNTDOWN
	f	I	cn	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	f	I	co	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	f	I	cp	MIN_ATTACK_DIST
	f	I	cq	MAX_CROPS_GROWABLE
	f	I	cr	POISON_SECONDS_NORMAL
	f	I	cs	POISON_SECONDS_HARD
	f	I	ct	TOO_FAR_DISTANCE
	f	I	cu	HIVE_CLOSE_ENOUGH_DISTANCE
	f	I	cv	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	f	I	cw	HIVE_SEARCH_DISTANCE
	f	Layx;	cx	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cy	persistentAngerTarget
	f	F	cz	rollAmount
c	bmi$1	net/minecraft/world/entity/animal/Bee$1
	m	(Lbmi;Lbbh;Lcga;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	()V	c	tick
	f	Lbmi;	p	this$0
c	bmi$a	net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbmi;	a	this$0
c	bmi$b	net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	m	(Lbmi;Lbbo;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbmi;	b	this$0
c	bmi$c	net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	m	(Lbmi;)V	<init>	<init>
		p	1		bee
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	i	beeCanTarget
c	bmi$d	net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbmi;	b	this$0
c	bmi$e	net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	m	()Z	a	canUse
	m	(Lgt;)Z	a	pathfindDirectlyTowards
		p	1		pos
	m	()Z	b	canContinueToUse
	m	(Lgt;)Z	b	isTargetBlacklisted
		p	1		pos
	m	()V	c	start
	m	(Lgt;)V	c	blacklistTarget
		p	1		pos
	m	()V	d	stop
	m	(Lgt;)Z	d	hasReachedTarget
		p	1		pos
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	k	clearBlacklist
	m	()V	l	dropAndBlacklistHive
	m	()V	m	dropHive
	f	I	b	MAX_TRAVELLING_TICKS
	f	Lbmi;	c	this$0
	f	I	d	travellingTicks
	f	I	e	MAX_BLACKLISTED_TARGETS
	f	Ljava/util/List;	f	blacklistedTargets
	f	Ldpo;	g	lastPath
	f	I	h	TICKS_BEFORE_HIVE_DROP
	f	I	i	ticksStuck
c	bmi$f	net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	wantsToGoToKnownFlower
	f	Lbmi;	b	this$0
	f	I	c	MAX_TRAVELLING_TICKS
	f	I	d	travellingTicks
c	bmi$g	net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	I	b	GROW_CHANCE
	f	Lbmi;	c	this$0
c	bmi$h	net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	m	(Lbmi;Lbmi;)V	<init>	<init>
		p	2		bee
	m	(Lbbh;Lbbf;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	b	canContinueToUse
	f	Lbmi;	a	this$0
c	bmi$i	net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	m	(Lgt;Lgt;)D	a	lambda$findNearbyHivesWithSpace$1
	m	(Lhc;)Z	a	lambda$findNearbyHivesWithSpace$0
		p	0		poiType
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Ljava/util/List;	k	findNearbyHivesWithSpace
	f	Lbmi;	b	this$0
c	bmi$j	net/minecraft/world/entity/animal/Bee$BeeLookControl
	m	(Lbmi;Lbbh;)V	<init>	<init>
		p	2		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbmi;	h	this$0
c	bmi$k	net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	(Lcur;)Z	a	lambda$new$0
		p	0		state
	m	(Ljava/util/function/Predicate;D)Ljava/util/Optional;	a	findNearestBlock
		p	1		predicate
		p	2		searchDistance
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	hasPollinatedLongEnough
	m	()Z	l	isPollinating
	m	()V	m	stopPollinating
	m	()V	n	setWantedPos
	m	()F	o	getOffset
	m	()Ljava/util/Optional;	p	findNearbyFlower
	f	Lbmi;	b	this$0
	f	I	c	MIN_POLLINATION_TICKS
	f	I	d	MIN_FIND_FLOWER_RETRY_COOLDOWN
	f	I	e	MAX_FIND_FLOWER_RETRY_COOLDOWN
	f	Ljava/util/function/Predicate;	f	VALID_POLLINATION_BLOCKS
	f	D	g	ARRIVAL_THRESHOLD
	f	I	h	POSITION_CHANGE_CHANCE
	f	F	i	SPEED_MODIFIER
	f	F	j	HOVER_HEIGHT_WITHIN_FLOWER
	f	F	k	HOVER_POS_OFFSET
	f	I	l	successfulPollinatingTicks
	f	I	m	lastSoundPlayedTick
	f	Z	n	pollinating
	f	Ldvt;	o	hoverPos
	f	I	p	pollinatingTicks
	f	I	q	MAX_POLLINATING_TICKS
c	bmi$l	net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Ldvt;	h	findPos
	f	Lbmi;	a	this$0
	f	I	b	WANDER_THRESHOLD
c	bmj	net/minecraft/world/entity/animal/Bucketable
	m	(Lbbh;Lcaa;)V	a	saveDefaultDataToBucketTag
		p	0		entity
		p	1		stack
	m	(Lbbh;Lpj;)V	a	loadDefaultDataFromBucketTag
		p	0		entity
		p	1		nbt
	m	(Lbtf;Lazl;Lbbf;)Ljava/util/Optional;	a	bucketMobPickup
		p	0		player
		p	1		hand
		p	2		entity
	m	()Lcaa;	b	getBucketItemStack
	m	(Lpj;)V	c	loadFromBucketTag
		p	1		nbt
	m	(Lcaa;)V	m	saveToBucketTag
		p	1		stack
	m	()Z	q	fromBucket
	m	()Lajd;	t	getPickupSound
	m	(Z)V	v	setFromBucket
		p	1		fromBucket
c	bmk	net/minecraft/world/entity/animal/Cat
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	A	getRelaxStateOneAmount
		p	1		tickDelta
	m	(Z)V	A	setRelaxStateOne
		p	1		headDown
	m	()I	J	getAmbientSoundInterval
	m	()V	T	customServerAiStep
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lbml;)V	a	setCatVariant
		p	1		variant
	m	(Lbtf;Lazl;Lcaa;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lbyt;)V	a	setCollarColor
		p	1		color
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcgp;Lhe$c;)Ljava/util/Optional;	a	lambda$finalizeSpawn$0
		p	1		list
	m	(Lhc;)V	a	lambda$finalizeSpawn$1
		p	1		variant
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;Lban;)Lbmk;	b	getBreedOffspring
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bN	isSteppingCarefully
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Laaj;	fS	getResourceLocation
	m	()Lbml;	fT	getCatVariant
	m	()Z	fU	isLying
	m	()Z	fV	isRelaxStateOne
	m	()Lbyt;	fW	getCollarColor
	m	()V	fX	hiss
	m	()Lbcf$a;	fY	createAttributes
	m	()F	fZ	getAttackDamage
	m	()V	ga	handleLieDown
	m	()V	gb	updateLieDownAmount
	m	()V	gc	updateRelaxStateOneAmount
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	k	tick
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lajd;	r	getAmbientSound
	m	()V	t	reassessTameGoals
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getLieDownAmount
		p	1		tickDelta
	m	(F)F	z	getLieDownAmountTail
		p	1		tickDelta
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	m	(Z)V	z	setLying
		p	1		sleeping
	f	D	ca	TEMPT_SPEED_MOD
	f	D	cb	WALK_SPEED_MOD
	f	D	cc	SPRINT_SPEED_MOD
	f	Lccp;	cd	TEMPT_INGREDIENT
	f	Lzr;	ce	DATA_VARIANT_ID
	f	Lzr;	cf	IS_LYING
	f	Lzr;	cg	RELAX_STATE_ONE
	f	Lzr;	ch	DATA_COLLAR_COLOR
	f	Lbmk$a;	ci	avoidPlayersGoal
	f	Lbiz;	cj	temptGoal
	f	F	ck	lieDownAmount
	f	F	cl	lieDownAmountO
	f	F	cm	lieDownAmountTail
	f	F	cn	lieDownAmountOTail
	f	F	co	relaxStateOneAmount
	f	F	cp	relaxStateOneAmountO
c	bmk$a	net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	m	(Lbmk;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		cat
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbmk;	i	cat
c	bmk$b	net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	m	(Lbmk;)V	<init>	<init>
		p	1		cat
	m	()Z	a	canUse
	m	(Lgt;)Lgt;	a	lambda$canUse$1
	m	(Lgt;Lgy;)Lgt;	a	lambda$canUse$0
		p	1		direction
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	spaceIsOccupied
	m	()V	i	giveMorningGift
	f	Lbmk;	a	cat
	f	Lbtf;	b	ownerPlayer
	f	Lgt;	c	goalPos
	f	I	d	onBedTicks
c	bmk$c	net/minecraft/world/entity/animal/Cat$CatTemptGoal
	m	(Lbmk;DLccp;Z)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	a	canUse
	m	()V	e	tick
	m	()Z	h	canScare
	f	Lbtf;	c	selectedPlayer
	f	Lbmk;	d	cat
c	bml	net/minecraft/world/entity/animal/CatVariant
	m	()Laaj;	a	texture
	m	(Ljava/lang/String;Ljava/lang/String;)Lbml;	a	register
		p	0		id
		p	1		textureId
	f	Lbml;	a	TABBY
	f	Lbml;	b	BLACK
	f	Lbml;	c	RED
	f	Lbml;	d	SIAMESE
	f	Lbml;	e	BRITISH_SHORTHAIR
	f	Lbml;	f	CALICO
	f	Lbml;	g	PERSIAN
	f	Lbml;	h	RAGDOLL
	f	Lbml;	i	WHITE
	f	Lbml;	j	JELLIE
	f	Lbml;	k	ALL_BLACK
	f	Laaj;	l	texture
c	bmm	net/minecraft/world/entity/animal/Chicken
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aK	onFlap
	m	()Z	aL	isFlapping
	m	(Lafo;Lban;)Lbmm;	b	getBreedOffspring
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()I	dP	getExperienceReward
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbaq;)V	i	positionRider
		p	1		passenger
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	isChickenJockey
	m	()V	u	registerGoals
	m	(Z)V	v	setChickenJockey
		p	1		hasJockey
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	F	bX	flap
	f	F	bY	flapSpeed
	f	F	ca	oFlapSpeed
	f	F	cb	oFlap
	f	F	cc	flapping
	f	I	cd	eggTime
	f	Z	ce	isChickenJockey
	f	Lccp;	cf	FOOD_ITEMS
	f	F	cg	nextFlap
c	bmn	net/minecraft/world/entity/animal/Cod
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcaa;	b	getBucketItemStack
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lajd;	fL	getFlopSound
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
c	bmo	net/minecraft/world/entity/animal/Cow
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lafo;Lban;)Lbmo;	b	getBreedOffspring
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()F	eD	getSoundVolume
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
c	bmp	net/minecraft/world/entity/animal/Dolphin
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	U	getMaxHeadXRot
	m	()I	V	getMaxHeadYRot
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(I)V	a	handleAirSupply
		p	1		air
	m	(Lbmp;)Lalu;	a	access$000
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lim;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lajd;	aG	getSwimSound
	m	()Lajd;	aH	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(I)V	b	setMoisntessLevel
		p	1		moistness
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbmp;)Lalu;	b	access$100
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbmp;)Lalu;	c	access$200
	m	(Lbpy;)Z	c	lambda$static$0
		p	0		item
	m	()I	ca	getMaxAirSupply
	m	()Z	dC	canBreatheUnderwater
	m	()Lbcf$a;	fK	createAttributes
	m	()Z	fL	closeToNextPos
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(Lgt;)V	g	setTreasurePos
		p	1		treasurePos
	m	()V	k	tick
	m	(Lbaq;)Z	l	canRide
		p	1		entity
	m	()Lgt;	n	getTreasurePos
	m	(I)I	n	increaseAirSupply
		p	1		air
	m	()Z	q	gotFish
	m	()Lajd;	r	getAmbientSound
	m	()I	t	getMoistnessLevel
	m	()V	u	registerGoals
	m	(Z)V	v	setGotFish
		p	1		hasFish
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	I	b	TOTAL_AIR_SUPPLY
	f	Lzr;	bX	MOISTNESS_LEVEL
	f	Lbli;	bY	SWIM_WITH_PLAYER_TARGETING
	f	I	bZ	TOTAL_MOISTNESS_LEVEL
	f	Ljava/util/function/Predicate;	c	ALLOWED_ITEMS
	f	Lzr;	d	TREASURE_POS
	f	Lzr;	e	GOT_FISH
c	bmp$a	net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	m	(Lbmp;)V	<init>	<init>
		p	1		dolphin
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmp;	a	dolphin
	f	Z	b	stuck
c	bmp$b	net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	m	(Lbmp;D)V	<init>	<init>
		p	1		dolphin
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmp;	a	dolphin
	f	D	b	speedModifier
	f	Lbtf;	c	player
c	bmp$c	net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	m	()Z	a	canUse
	m	(Lcaa;)V	a	drop
		p	1		stack
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmp;	a	this$0
	f	I	b	cooldown
c	bmq	net/minecraft/world/entity/animal/FlyingAnimal
	m	()Z	fY	isFlying
c	bmr	net/minecraft/world/entity/animal/Fox
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setDefending
		p	1		aggressive
	m	(Z)V	B	setSleeping
		p	1		sleeping
	m	()V	K	playAmbientSound
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbaq;)Z	a	lambda$static$3
		p	0		entity
	m	(Lbmr$v;)V	a	setFoxType
		p	1		type
	m	(Lbmr;)Z	a	access$000
	m	(Lbmr;Lbbf;)Z	a	isPathClear
		p	0		fox
		p	1		chasedEntity
	m	(Lbtf;Lazl;Lcaa;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lbtf;Lbbh;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;Lban;)Lbmr;	b	getBreedOffspring
	m	(Lbaq;)Z	b	lambda$static$2
		p	0		entity
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbmr;)Lalu;	b	access$100
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Ljava/util/UUID;)V	b	addTrustedUUID
		p	1		uuid
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bR	isCrouching
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbaq;)Z	c	lambda$static$1
		p	0		entity
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkFoxSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbmr;)Lalu;	c	access$200
	m	(Lbpy;)Z	c	lambda$static$0
		p	0		item
	m	(Ljava/util/UUID;)Z	c	trusts
		p	1		uuid
	m	()Ldvt;	cC	getLeashOffset
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbmr;)Lalu;	d	access$300
	m	(Lbmr;)Z	e	access$400
	m	(Lcaa;)Lajd;	e	getEatingSound
		p	1		stack
	m	()Z	eF	isImmobile
	m	(Lazz;)V	f	dropAllDeathLoot
		p	1		source
	m	(Lbmr;)Z	f	access$500
	m	()Z	fK	isSitting
	m	()Z	fL	isFaceplanted
	m	()Z	fM	isPouncing
	m	()Z	fS	isJumping
	m	()Z	fT	isFullyCrouched
	m	()Z	fU	isInterested
	m	()V	fV	setTargetGoals
	m	()Ljava/util/List;	fW	getTrustedUUIDs
	m	()Z	fX	isDefending
	m	()V	fY	wakeUp
	m	()V	fZ	clearStates
	m	()Z	fk	isSleeping
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	()Z	ga	canMove
	m	(Lbbf;)V	h	setTarget
		p	1		target
	m	()V	k	tick
	m	(Lbbf;)Z	k	lambda$registerGoals$9
		p	1		entity
	m	(Lcaa;)Z	k	canHoldItem
		p	1		stack
	m	(Lbbf;)Z	l	lambda$registerGoals$8
		p	1		entity
	m	(Lbbf;)Z	m	lambda$registerGoals$7
		p	1		entity
	m	(Lcaa;)Z	m	canEat
		p	1		stack
	m	(Lbbf;)Z	n	lambda$registerGoals$6
		p	1		entity
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	(Lbbf;)Z	o	lambda$registerGoals$5
		p	0		entity
	m	(Lcaa;)V	o	spitOutItem
		p	1		stack
	m	(Lbbf;)Z	p	lambda$registerGoals$4
		p	0		entity
	m	(Lcaa;)V	p	dropItemStack
		p	1		stack
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Lbmr$v;	t	getFoxType
	m	(I)Z	t	getFlag
		p	1		bitmask
	m	()V	u	registerGoals
	m	(Z)V	v	setSitting
		p	1		sitting
	m	(Z)V	w	setIsPouncing
		p	1		chasing
	m	()V	w_	aiStep
	m	(Z)V	x	setIsCrouching
		p	1		crouching
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getHeadRollAngle
		p	1		tickDelta
	m	(Z)V	y	setIsInterested
		p	1		rollingHead
	m	(F)F	z	getCrouchAmount
		p	1		tickDelta
	m	(Z)V	z	setFaceplanted
		p	1		walking
	f	I	bX	FLAG_CROUCHING
	f	I	bY	FLAG_INTERESTED
	f	I	ca	FLAG_POUNCING
	f	Lzr;	cb	DATA_TYPE_ID
	f	Lzr;	cc	DATA_FLAGS_ID
	f	I	cd	FLAG_SITTING
	f	I	ce	FLAG_SLEEPING
	f	I	cf	FLAG_FACEPLANTED
	f	I	cg	FLAG_DEFENDING
	f	Lzr;	ch	DATA_TRUSTED_ID_0
	f	Lzr;	ci	DATA_TRUSTED_ID_1
	f	Ljava/util/function/Predicate;	cj	ALLOWED_ITEMS
	f	Ljava/util/function/Predicate;	ck	TRUSTED_TARGET_SELECTOR
	f	Ljava/util/function/Predicate;	cl	STALKABLE_PREY
	f	Ljava/util/function/Predicate;	cm	AVOID_PLAYERS
	f	I	cn	MIN_TICKS_BEFORE_EAT
	f	Lbhs;	co	landTargetGoal
	f	Lbhs;	cp	turtleEggTargetGoal
	f	Lbhs;	cq	fishTargetGoal
	f	F	cr	interestedAngle
	f	F	cs	interestedAngleO
	f	F	ct	crouchAmount
	f	F	cu	crouchAmountO
	f	I	cv	ticksSinceEaten
c	bmr$a	net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	m	(Lbmr;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V	<init>	<init>
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		checkCanNavigate
		p	5		targetPredicate
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbmr;	i	this$0
	f	Lbbf;	j	trustedLastHurtBy
	f	Lbbf;	k	trustedLastHurt
	f	I	l	timestamp
c	bmr$b	net/minecraft/world/entity/animal/Fox$FaceplantGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	countdown
	f	Lbmr;	b	this$0
c	bmr$c	net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	m	(Lbbf;)Z	a	test
	f	Lbmr;	a	this$0
c	bmr$d	net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	m	()Z	h	hasShelter
	m	()Z	i	alertable
	f	Lbmr;	a	this$0
	f	Lbli;	b	alertableTargeting
c	bmr$e	net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	m	(Lbmr;D)V	<init>	<init>
		p	2		chance
	m	()V	c	start
	m	()V	g	breed
	f	Lbmr;	d	this$0
c	bmr$f	net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	m	(Lbmr;DII)V	<init>	<init>
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Lcur;)V	a	pickGlowBerry
		p	1		state
	m	(Lcur;)V	b	pickSweetBerries
		p	1		state
	m	()V	c	start
	m	()V	e	tick
	m	()D	i	acceptedDistance
	m	()Z	l	shouldRecalculatePath
	m	()V	o	onReachedTarget
	f	I	g	ticksWaited
	f	Lbmr;	h	this$0
	f	I	i	WAIT_TICKS
c	bmr$g	net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	m	(Lbmr;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbmr;	a	this$0
c	bmr$h	net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	m	(Lbmr;Lbmr;D)V	<init>	<init>
		p	2		fox
		p	3		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbmr;	d	this$0
	f	Lbmr;	e	fox
c	bmr$i	net/minecraft/world/entity/animal/Fox$FoxGroupData
	m	(Lbmr$v;)V	<init>	<init>
		p	1		type
	f	Lbmr$v;	a	type
c	bmr$j	net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	m	(Lbmr;Lbbh;Ljava/lang/Class;F)V	<init>	<init>
		p	2		fox
		p	3		targetType
		p	4		range
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbmr;	h	this$0
c	bmr$k	net/minecraft/world/entity/animal/Fox$FoxLookControl
	m	(Lbmr;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbmr;	h	this$0
c	bmr$l	net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	m	(Lbmr;DZ)V	<init>	<init>
		p	2		speed
		p	4		pauseWhenIdle
	m	()Z	a	canUse
	m	(Lbbf;D)V	a	checkAndPerformAttack
		p	1		target
		p	2		squaredDistance
	m	()V	c	start
	f	Lbmr;	b	this$0
c	bmr$m	net/minecraft/world/entity/animal/Fox$FoxMoveControl
	m	(Lbmr;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lbmr;	l	this$0
c	bmr$n	net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	m	(Lbmr;D)V	<init>	<init>
		p	2		speed
	m	()Z	h	shouldPanic
	f	Lbmr;	h	this$0
c	bmr$o	net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmr;	a	this$0
c	bmr$p	net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbmr;	a	this$0
c	bmr$q	net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	m	(Lbmr;II)V	<init>	<init>
		p	2		unused
		p	3		searchRange
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	canFoxMove
	f	Lbmr;	a	this$0
c	bmr$r	net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	k	resetLook
	f	Lbmr;	b	this$0
	f	D	c	relX
	f	D	d	relZ
	f	I	e	lookTime
	f	I	f	looksRemaining
c	bmr$s	net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	m	(Lbmr;D)V	<init>	<init>
		p	2		speed
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbmr;	b	this$0
	f	I	c	interval
c	bmr$t	net/minecraft/world/entity/animal/Fox$SleepGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	k	canSleep
	f	Lbmr;	b	this$0
	f	I	c	WAIT_TIME_BEFORE_SLEEP
	f	I	d	countdown
c	bmr$u	net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmr;	a	this$0
c	bmr$v	net/minecraft/world/entity/animal/Fox$Type
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		key
	m	()Ljava/lang/String;	a	getName
	m	(I)Lbmr$v;	a	byId
		p	0		id
	m	(Lbmr$v;)Lbmr$v;	a	lambda$static$1
	m	(Lhc;)Lbmr$v;	a	byBiome
	m	(Ljava/lang/String;)Lbmr$v;	a	byName
		p	0		name
	m	()I	b	getId
	m	(I)[Lbmr$v;	b	lambda$static$0
	m	()[Lbmr$v;	c	$values
	f	Lbmr$v;	a	RED
	f	Lbmr$v;	b	SNOW
	f	[Lbmr$v;	c	BY_ID
	f	Ljava/util/Map;	d	BY_NAME
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	[Lbmr$v;	g	$VALUES
c	bms	net/minecraft/world/entity/animal/FrogVariant
	m	()Laaj;	a	texture
	m	(Ljava/lang/String;Ljava/lang/String;)Lbms;	a	register
		p	0		id
		p	1		textureId
	f	Lbms;	a	TEMPERATE
	f	Lbms;	b	WARM
	f	Lbms;	c	COLD
	f	Laaj;	d	texture
c	bmt	net/minecraft/world/entity/animal/IronGolem
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbaq;)V	A	doPush
		p	1		entity
	m	()I	a	getRemainingPersistentAngerTime
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbau;)Z	a	canAttackType
		p	1		type
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Ldvt;	cC	getLeashOffset
	m	()I	fK	getOfferFlowerTick
	m	()Z	fL	isPlayerCreated
	m	()F	fM	getAttackDamage
	m	(Lbbf;)Z	k	lambda$registerGoals$0
		p	0		entity
	m	(I)I	m	decreaseAirSupply
		p	1		air
	m	()Lbcf$a;	n	createAttributes
	m	()Lbmt$a;	q	getCrackiness
	m	()I	t	getAttackAnimationTick
	m	()V	u	registerGoals
	m	(Z)V	v	offerFlower
		p	1		lookingAtVillager
	m	(Z)V	w	setPlayerCreated
		p	1		playerCreated
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	I	bX	offerFlowerTick
	f	Layx;	bY	PERSISTENT_ANGER_TIME
	f	I	bZ	remainingPersistentAngerTime
	f	Lzr;	c	DATA_FLAGS_ID
	f	Ljava/util/UUID;	ca	persistentAngerTarget
	f	I	d	IRON_INGOT_HEAL_AMOUNT
	f	I	e	attackAnimationTick
c	bmt$a	net/minecraft/world/entity/animal/IronGolem$Crackiness
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3		maxHealthFraction
	m	()[Lbmt$a;	a	$values
	m	(F)Lbmt$a;	a	byFraction
		p	0		healthFraction
	m	(Lbmt$a;)D	a	lambda$static$0
	f	Lbmt$a;	a	NONE
	f	Lbmt$a;	b	LOW
	f	Lbmt$a;	c	MEDIUM
	f	Lbmt$a;	d	HIGH
	f	Ljava/util/List;	e	BY_DAMAGE
	f	F	f	fraction
	f	[Lbmt$a;	g	$VALUES
c	bmu	net/minecraft/world/entity/animal/MushroomCow
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lajf;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lazl;Lbtf;)V	a	lambda$mobInteract$0
		p	1		player
	m	(Lbmu$a;)V	a	setMushroomType
		p	1		type
	m	(Lbmu;)Lbmu$a;	a	getOffspringType
		p	1		mooshroom
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;Lban;)Lbmo;	b	getBreedOffspring
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lafo;Lban;)Lbmu;	c	getBreedOffspring
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkMushroomSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcaa;)Ljava/util/Optional;	m	getEffectFromItemStack
		p	1		flower
	m	()Lbmu$a;	t	getMushroomType
	f	Lzr;	bX	DATA_TYPE
	f	I	bY	MUTATE_CHANCE
	f	Lbah;	ca	effect
	f	I	cb	effectDuration
	f	Ljava/util/UUID;	cc	lastLightningBoltUUID
c	bmu$a	net/minecraft/world/entity/animal/MushroomCow$MushroomType
	m	(Ljava/lang/String;ILjava/lang/String;Lcur;)V	<init>	<init>
		p	3		name
		p	4		mushroom
	m	()Lcur;	a	getBlockState
	m	(Ljava/lang/String;)Lbmu$a;	a	byType
		p	0		name
	m	()[Lbmu$a;	b	$values
	f	Lbmu$a;	a	RED
	f	Lbmu$a;	b	BROWN
	f	Ljava/lang/String;	c	type
	f	Lcur;	d	blockState
	f	[Lbmu$a;	e	$VALUES
c	bmv	net/minecraft/world/entity/animal/Ocelot
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	J	getAmbientSoundInterval
	m	()V	T	customServerAiStep
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;Lban;)Lbmv;	b	getBreedOffspring
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bN	isSteppingCarefully
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkOcelotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Ldvt;	cC	getLeashOffset
	m	()Z	fK	isTrusting
	m	()F	fL	getAttackDamage
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	t	reassessTrustingGoals
	m	()V	u	registerGoals
	m	(Z)V	v	setTrusting
		p	1		trusting
	m	(Z)V	w	spawnTrustingParticles
		p	1		positive
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	D	bX	CROUCH_SPEED_MOD
	f	D	bY	WALK_SPEED_MOD
	f	D	ca	SPRINT_SPEED_MOD
	f	Lccp;	cb	TEMPT_INGREDIENT
	f	Lzr;	cc	DATA_TRUSTING
	f	Lbmv$a;	cd	ocelotAvoidPlayersGoal
	f	Lbmv$b;	ce	temptGoal
c	bmv$a	net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	m	(Lbmv;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		ocelot
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbmv;	i	ocelot
c	bmv$b	net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	m	(Lbmv;DLccp;Z)V	<init>	<init>
		p	1		ocelot
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	h	canScare
	f	Lbmv;	c	ocelot
c	bmw	net/minecraft/world/entity/animal/Panda
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	A	getRollAmount
		p	1		tickDelta
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbmw$a;)V	a	setMainGene
		p	1		gene
	m	(Lbmw;)Z	a	access$000
	m	(Lbmw;Lbmw;)V	a	setGeneFromParents
		p	1		mother
		p	2		father
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbmw$a;)V	b	setHiddenGene
		p	1		gene
	m	(Lbmw;)Lalu;	b	access$100
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbmw;)Lalu;	c	access$200
	m	(Lbpy;)Z	c	lambda$static$0
		p	0		item
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbmw;)Lalu;	d	access$300
	m	(Lbmw;)Lalu;	e	access$400
	m	(Lbmw;)Lalu;	f	access$500
	m	()Z	fD	isAggressive
	m	()Z	fK	isSitting
	m	()Z	fL	isOnBack
	m	()Z	fM	isEating
	m	()I	fS	getSneezeCounter
	m	()Lbmw$a;	fT	getMainGene
	m	()Lbmw$a;	fU	getHiddenGene
	m	()Z	fV	isRolling
	m	()Lbcf$a;	fW	createAttributes
	m	()Lbmw$a;	fX	getVariant
	m	()Z	fY	isLazy
	m	()Z	fZ	isWorried
	m	(Lbmw;)Lalu;	g	access$600
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	()Z	ga	isPlayful
	m	()Z	gb	isBrown
	m	()Z	gc	isWeak
	m	()Z	gd	isScared
	m	()V	ge	setAttributes
	m	()Z	gf	canPerformAction
	m	()I	gg	getEatCounter
	m	()V	gh	handleEating
	m	()V	gi	addEatingParticles
	m	()V	gj	updateSitAmount
	m	()V	gk	updateOnBackAnimation
	m	()V	gl	updateRollAmount
	m	()V	gm	handleRoll
	m	()V	gn	afterSneeze
	m	()Lbmw$a;	go	getOneOfGenesRandomly
	m	()V	gp	tryToSit
	m	(Lbmw;)Lalu;	h	access$700
	m	(Lbmw;)Lalu;	i	access$800
	m	(Lbmw;)Lalu;	j	access$900
	m	()V	k	tick
	m	(Lbmw;)Lalu;	k	access$1000
	m	(Lbmw;)Lalu;	l	access$1100
	m	(Lcaa;)Z	m	isFoodOrCake
		p	1		stack
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()I	q	getUnhappyCounter
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	isSneezing
	m	(I)V	t	setUnhappyCounter
		p	1		askForBambooTicks
	m	()V	u	registerGoals
	m	(I)V	u	setSneezeCounter
		p	1		sneezeProgress
	m	(I)V	v	setEatCounter
		p	1		eatingTicks
	m	(Z)V	v	sit
		p	1		sitting
	m	(I)Z	w	getFlag
		p	1		bitmask
	m	(Z)V	w	setOnBack
		p	1		lyingOnBack
	m	(Z)V	x	eat
		p	1		eating
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getSitAmount
		p	1		tickDelta
	m	(Z)V	y	sneeze
		p	1		sneezing
	m	(F)F	z	getLieOnBackAmount
		p	1		tickDelta
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	m	(Z)V	z	roll
		p	1		playing
	f	I	bX	TOTAL_ROLL_STEPS
	f	I	bY	rollCounter
	f	Lzr;	ca	UNHAPPY_COUNTER
	f	Lzr;	cb	SNEEZE_COUNTER
	f	Lzr;	cc	EAT_COUNTER
	f	Lzr;	cd	MAIN_GENE_ID
	f	Lzr;	ce	HIDDEN_GENE_ID
	f	Lzr;	cf	DATA_ID_FLAGS
	f	Lbli;	cg	BREED_TARGETING
	f	I	ch	FLAG_SNEEZE
	f	I	ci	FLAG_ROLL
	f	I	cj	FLAG_SIT
	f	I	ck	FLAG_ON_BACK
	f	I	cl	EAT_TICK_INTERVAL
	f	I	cm	TOTAL_UNHAPPY_TIME
	f	Z	cn	gotBamboo
	f	Z	co	didBite
	f	Ldvt;	cp	rollDelta
	f	F	cq	sitAmount
	f	F	cr	sitAmountO
	f	F	cs	onBackAmount
	f	F	ct	onBackAmountO
	f	F	cu	rollAmount
	f	F	cv	rollAmountO
	f	Lbmw$g;	cw	lookAtPlayerGoal
	f	Ljava/util/function/Predicate;	cx	PANDA_ITEMS
c	bmw$a	net/minecraft/world/entity/animal/Panda$Gene
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		recessive
	m	()I	a	getId
	m	(I)Lbmw$a;	a	byId
		p	0		id
	m	(Lalu;)Lbmw$a;	a	getRandom
		p	0		random
	m	(Lbmw$a;Lbmw$a;)Lbmw$a;	a	getVariantFromGenes
		p	0		mainGene
		p	1		hiddenGene
	m	(Ljava/lang/String;)Lbmw$a;	a	byName
		p	0		name
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbmw$a;	b	lambda$static$0
	m	()Z	c	isRecessive
	m	()[Lbmw$a;	d	$values
	f	Lbmw$a;	a	NORMAL
	f	Lbmw$a;	b	LAZY
	f	Lbmw$a;	c	WORRIED
	f	Lbmw$a;	d	PLAYFUL
	f	Lbmw$a;	e	BROWN
	f	Lbmw$a;	f	WEAK
	f	Lbmw$a;	g	AGGRESSIVE
	f	[Lbmw$a;	h	BY_ID
	f	I	i	MAX_GENE
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	Z	l	isRecessive
	f	[Lbmw$a;	m	$VALUES
c	bmw$b	net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	m	(Lbmw;DZ)V	<init>	<init>
		p	1		panda
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	a	canUse
	f	Lbmw;	b	panda
c	bmw$c	net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	m	(Lbmw;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		panda
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	f	Lbmw;	i	panda
c	bmw$d	net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	m	(Lbmw;D)V	<init>	<init>
		p	1		panda
		p	2		chance
	m	()Z	a	canUse
	m	()Z	h	canFindBamboo
	f	Lbmw;	d	panda
	f	I	e	unhappyCooldown
c	bmw$e	net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	m	(Lbmw;[Ljava/lang/Class;)V	<init>	<init>
		p	1		panda
		p	2		noRevengeTypes
	m	(Lbbh;Lbbf;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	b	canContinueToUse
	f	Lbmw;	a	panda
c	bmw$f	net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	m	(Lbmw;)V	<init>	<init>
		p	1		panda
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbmw;	a	panda
	f	I	b	cooldown
c	bmw$g	net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	m	(Lbmw;Ljava/lang/Class;F)V	<init>	<init>
		p	1		panda
		p	2		targetType
		p	3		range
	m	()Z	a	canUse
	m	(Lbbf;)V	a	setTarget
		p	1		target
	m	()Z	b	canContinueToUse
	m	(Lbbf;)Z	b	lambda$canUse$0
	m	()V	e	tick
	f	Lbmw;	h	panda
c	bmw$h	net/minecraft/world/entity/animal/Panda$PandaMoveControl
	m	(Lbmw;)V	<init>	<init>
		p	1		panda
	m	()V	a	tick
	f	Lbmw;	l	panda
c	bmw$i	net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	m	(Lbmw;D)V	<init>	<init>
		p	1		panda
		p	2		speed
	m	()Z	b	canContinueToUse
	m	()Z	h	shouldPanic
	f	Lbmw;	h	panda
c	bmw$j	net/minecraft/world/entity/animal/Panda$PandaRollGoal
	m	(Lbmw;)V	<init>	<init>
		p	1		panda
	m	()Z	D_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbmw;	a	panda
c	bmw$k	net/minecraft/world/entity/animal/Panda$PandaSitGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbmw;	a	this$0
	f	I	b	cooldown
c	bmw$l	net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	m	(Lbmw;)V	<init>	<init>
		p	1		panda
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbmw;	a	panda
c	bmx	net/minecraft/world/entity/animal/Parrot
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbaq;)V	A	doPush
		p	1		entity
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lalu;)F	a	getPitch
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcga;Lalu;)Lajd;	a	getAmbient
		p	0		world
		p	1		random
	m	(Lcga;Lbaq;)Z	a	imitateNearbyMobs
		p	0		world
		p	1		parrot
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aK	onFlap
	m	()Z	aL	isFlapping
	m	()V	a_	defineSynchedData
	m	(Lbau;)Lajd;	b	getImitatedSound
		p	0		imitate
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPushable
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkParrotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Ldvt;	cC	getLeashOffset
	m	()Lajf;	cS	getSoundSource
	m	()F	eE	getVoicePitch
	m	()Lbcf$a;	fS	createAttributes
	m	()Z	fT	isPartyParrot
	m	()I	fU	getVariant
	m	()V	fW	calculateFlapping
	m	()Z	fY	isFlying
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lajd;	r	getAmbientSound
	m	(I)V	t	setVariant
		p	1		variant
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	F	ca	flap
	f	F	cb	flapSpeed
	f	F	cc	oFlapSpeed
	f	F	cd	oFlap
	f	Lzr;	ce	DATA_VARIANT_ID
	f	Ljava/util/function/Predicate;	cf	NOT_PARROT_PREDICATE
	f	Lbzw;	cg	POISONOUS_FOOD
	f	Ljava/util/Set;	ch	TAME_FOOD
	f	I	ci	VARIANTS
	f	Ljava/util/Map;	cj	MOB_SOUND_MAP
	f	F	ck	flapping
	f	F	cl	nextFlap
	f	Z	cm	partyParrot
	f	Lgt;	cn	jukebox
c	bmx$1	net/minecraft/world/entity/animal/Parrot$1
	m	(Lbbh;)Z	a	test
c	bmx$a	net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Ldvt;	h	getPosition
	m	()Ldvt;	k	getTreePos
c	bmy	net/minecraft/world/entity/animal/Pig
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	boost
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lajf;)V	a	equipSaddle
		p	1		sound
	m	(Lbaq;)Z	a	canBeControlledBy
	m	(Ldvt;)V	a	travelWithInput
		p	1		movementInput
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	a_	defineSynchedData
	m	()F	b	getSteeringSpeed
	m	(Lafo;Lban;)Lbmy;	b	getBreedOffspring
	m	(Lbbf;)Ldvt;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	c	isSaddleable
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Ldvt;	cC	getLeashOffset
	m	()Lbaq;	cH	getControllingPassenger
	m	()Z	d	isSaddled
	m	()V	ej	dropEquipment
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	f	Lzr;	bX	DATA_SADDLE_ID
	f	Lzr;	bY	DATA_BOOST_TIME
	f	Lccp;	ca	FOOD_ITEMS
	f	Lbbb;	cb	steering
c	bmz	net/minecraft/world/entity/animal/PolarBear
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkPolarBearSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()F	eK	getWaterSlowDown
	m	()Z	fK	isStanding
	m	()V	k	tick
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	t	playWarningSound
	m	()V	u	registerGoals
	m	(Z)V	v	setStanding
		p	1		warning
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getStandingAnimationScale
		p	1		tickDelta
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	Lzr;	bX	DATA_STANDING_ID
	f	F	bY	STAND_ANIMATION_TICKS
	f	F	ca	clientSideStandAnimationO
	f	F	cb	clientSideStandAnimation
	f	I	cc	warningSoundTicks
	f	Layx;	cd	PERSISTENT_ANGER_TIME
	f	I	ce	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cf	persistentAngerTarget
c	bmz$a	net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	m	(Lbmz;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()D	l	getFollowDistance
	f	Lbmz;	i	this$0
c	bmz$b	net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	m	(Lbmz;)V	<init>	<init>
		p	1		mob
	m	(Lbbh;Lbbf;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()V	c	start
	f	Lbmz;	a	this$0
c	bmz$c	net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	m	(Lbmz;)V	<init>	<init>
		p	1		mob
	m	(Lbbf;)D	a	getAttackReachSqr
		p	1		entity
	m	(Lbbf;D)V	a	checkAndPerformAttack
		p	1		target
		p	2		squaredDistance
	m	()V	d	stop
	f	Lbmz;	b	this$0
c	bmz$d	net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	m	(Lbmz;)V	<init>	<init>
		p	1		mob
	m	()Z	h	shouldPanic
	f	Lbmz;	h	this$0
c	bna	net/minecraft/world/entity/animal/Pufferfish
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbbh;)V	a	touch
		p	1		mob
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	a_	defineSynchedData
	m	()Lcaa;	b	getBucketItemStack
	m	(I)V	b	setPuffState
		p	1		puffState
	m	(Lbbh;)Z	b	lambda$aiStep$1
		p	1		entity
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	b_	playerTouch
		p	1		player
	m	(I)F	c	getScale
		p	0		puffState
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lajd;	fL	getFlopSound
	m	()I	fM	getPuffState
	m	()V	k	tick
	m	(Lbbf;)Z	k	lambda$static$0
		p	0		entity
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	I	b	STATE_SMALL
	f	I	bX	inflateCounter
	f	I	bY	deflateTimer
	f	Ljava/util/function/Predicate;	bZ	SCARY_MOB
	f	I	c	STATE_MID
	f	Lbli;	ca	targetingConditions
	f	I	d	STATE_FULL
	f	Lzr;	e	PUFF_STATE
c	bna$a	net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	m	(Lbna;)V	<init>	<init>
		p	1		pufferfish
	m	()Z	a	canUse
	m	(Lbbf;)Z	a	lambda$canUse$0
	m	()V	c	start
	m	()V	d	stop
	f	Lbna;	a	fish
c	bnb	net/minecraft/world/entity/animal/Rabbit
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	customServerAiStep
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbnb;)Z	a	access$000
	m	(Lcgb;)I	a	getRandomRabbitType
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(DD)V	b	facePoint
		p	1		x
		p	3		z
	m	(Lafo;Lban;)Lbnb;	b	getBreedOffspring
	m	(Lbnb;)Z	b	access$100
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	be	canSpawnSprintParticle
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkRabbitSpawnRules
		p	0		entity
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbnb;)Lbgt;	c	access$200
	m	()Ldvt;	cC	getLeashOffset
	m	()Lajf;	cS	getSoundSource
	m	()F	eG	getJumpPower
	m	()V	eI	jumpFromGround
	m	()Lajd;	fK	getJumpSound
	m	()I	fL	getRabbitType
	m	()V	fM	enableJumpControl
	m	()V	fS	disableJumpControl
	m	()V	fT	setLandingDelay
	m	()V	fU	checkLandingDelay
	m	()Z	fV	wantsMoreFood
	m	(D)V	i	setSpeedModifier
		p	1		speed
	m	(Lcaa;)Z	m	isTemptingItem
		p	0		stack
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()V	q	startJumping
	m	(Z)V	q	setJumping
		p	1		jumping
	m	()Lajd;	r	getAmbientSound
	m	()Lbcf$a;	t	createAttributes
	m	(I)V	t	setRabbitType
		p	1		rabbitType
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getJumpCompletion
		p	1		delta
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	D	bX	STROLL_SPEED_MOD
	f	D	bY	BREED_SPEED_MOD
	f	D	ca	FOLLOW_SPEED_MOD
	f	D	cb	FLEE_SPEED_MOD
	f	D	cc	ATTACK_SPEED_MOD
	f	I	cd	TYPE_BROWN
	f	I	ce	TYPE_WHITE
	f	I	cf	TYPE_BLACK
	f	I	cg	TYPE_WHITE_SPLOTCHED
	f	I	ch	TYPE_GOLD
	f	I	ci	TYPE_SALT
	f	I	cj	TYPE_EVIL
	f	I	ck	EVIL_ATTACK_POWER
	f	I	cl	EVIL_ARMOR_VALUE
	f	Lzr;	cm	DATA_TYPE_ID
	f	Laaj;	cn	KILLER_BUNNY
	f	I	co	MORE_CARROTS_DELAY
	f	I	cp	jumpTicks
	f	I	cq	jumpDuration
	f	Z	cr	wasOnGround
	f	I	cs	jumpDelayTicks
	f	I	ct	moreCarrotTicks
c	bnb$a	net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	m	(Lbnb;)V	<init>	<init>
		p	1		rabbit
	m	(Lbbf;)D	a	getAttackReachSqr
		p	1		entity
c	bnb$b	net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	m	(Lbnb;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		rabbit
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	f	Lbnb;	i	rabbit
c	bnb$c	net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	m	(I)V	<init>	<init>
		p	1		type
	f	I	a	rabbitType
c	bnb$d	net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	m	(Lbnb;)V	<init>	<init>
		p	1		rabbit
	m	(Z)V	a	setCanJump
		p	1		canJump
	m	()V	b	tick
	m	()Z	c	wantJump
	m	()Z	d	canJump
	f	Lbnb;	b	rabbit
	f	Z	c	canJump
c	bnb$e	net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	m	(Lbnb;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	f	Lbnb;	l	rabbit
	f	D	m	nextJumpSpeed
c	bnb$f	net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	m	(Lbnb;D)V	<init>	<init>
		p	1		rabbit
		p	2		speed
	m	()V	e	tick
	f	Lbnb;	h	rabbit
c	bnb$g	net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	m	(Lbnb;)V	<init>	<init>
		p	1		rabbit
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbnb;	g	rabbit
	f	Z	h	wantsToRaid
	f	Z	i	canRaid
c	bnc	net/minecraft/world/entity/animal/Salmon
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcaa;	b	getBucketItemStack
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lajd;	fL	getFlopSound
	m	()I	fM	getMaxSchoolSize
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
c	bnd	net/minecraft/world/entity/animal/Sheep
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	I	ate
	m	()Laaj;	N	getDefaultLootTable
	m	()V	T	customServerAiStep
	m	()Z	a	readyForShearing
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lajf;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lalu;)Lbyt;	a	getRandomSheepColor
		p	0		random
	m	(Lazl;Lbtf;)V	a	lambda$mobInteract$2
		p	1		player
	m	(Lbmh;Lbmh;)Lbyt;	a	getOffspringColor
		p	1		firstParent
		p	2		secondParent
	m	(Lbwd;Lcck;)Lcaa;	a	lambda$getOffspringColor$3
		p	1		recipe
	m	(Lbyt;)[F	a	getColorArray
		p	0		dyeColor
	m	(Lbyt;Lbyt;)Lbwd;	a	makeContainer
		p	0		firstColor
		p	1		secondColor
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		map
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;Lban;)Lbnd;	b	getBreedOffspring
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbyt;)V	b	setColor
		p	1		color
	m	(Lbyt;Lbyt;)Lbyt;	b	lambda$getOffspringColor$4
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbyt;)[F	c	createSheepColor
		p	0		color
	m	(Lbyt;)Lbyt;	d	lambda$static$1
	m	()Z	fK	isSheared
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Lbyt;	t	getColor
	m	()V	u	registerGoals
	m	(Z)V	v	setSheared
		p	1		sheared
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getHeadEatPositionScale
		p	1		delta
	m	(F)F	z	getHeadEatAngleScale
		p	1		delta
	f	I	bX	EAT_ANIMATION_TICKS
	f	Lzr;	bY	DATA_WOOL_ID
	f	Ljava/util/Map;	ca	ITEM_BY_DYE
	f	Ljava/util/Map;	cb	COLORARRAY_BY_COLOR
	f	I	cc	eatAnimationTick
	f	Lbhk;	cd	eatBlockGoal
c	bnd$1	net/minecraft/world/entity/animal/Sheep$1
	m	(Lbwt;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
c	bnd$2	net/minecraft/world/entity/animal/Sheep$2
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	bne	net/minecraft/world/entity/animal/ShoulderRidingEntity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafp;)Z	b	setEntityOnShoulder
		p	1		player
	m	()Z	fV	canSitOnShoulder
	m	()V	k	tick
	f	I	ca	RIDE_COOLDOWN
	f	I	cb	rideCooldownCounter
c	bnf	net/minecraft/world/entity/animal/SnowGolem
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Lajf;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lazl;Lbtf;)V	a	lambda$mobInteract$1
		p	1		player
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Ldvt;	cC	getLeashOffset
	m	()Z	eM	isSensitiveToWater
	m	(Lbbf;)Z	k	lambda$registerGoals$0
		p	0		entity
	m	()Lbcf$a;	n	createAttributes
	m	()Z	q	hasPumpkin
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(Z)V	v	setPumpkin
		p	1		hasPumpkin
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	Lzr;	b	DATA_PUMPKIN_ID
	f	B	c	PUMPKIN_FLAG
	f	F	d	EYE_HEIGHT
c	bng	net/minecraft/world/entity/animal/Squid
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(FFF)V	a	setMovementVector
		p	1		x
		p	2		y
		p	3		z
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbng;)Z	a	access$000
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	()Lbaq$b;	aO	getMovementEmission
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()F	eD	getSoundVolume
	m	()Lbcf$a;	fK	createAttributes
	m	()Z	fL	hasMovementVector
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(Ldvt;)Ldvt;	i	rotateVector
		p	1		shootVector
	m	()Lim;	n	getInkParticle
	m	()Lajd;	q	getSquirtSound
	m	()Lajd;	r	getAmbientSound
	m	()V	t	spawnInk
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	F	b	xBodyRot
	f	F	bX	tentacleMovement
	f	F	bY	oldTentacleMovement
	f	F	bZ	tentacleAngle
	f	F	c	xBodyRotO
	f	F	ca	oldTentacleAngle
	f	F	cb	speed
	f	F	cc	tentacleSpeed
	f	F	cd	rotateSpeed
	f	F	ce	tx
	f	F	cf	ty
	f	F	cg	tz
	f	F	d	zBodyRot
	f	F	e	zBodyRotO
c	bng$a	net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbng;	a	this$0
	f	F	b	SQUID_FLEE_SPEED
	f	F	c	SQUID_FLEE_MIN_DISTANCE
	f	F	d	SQUID_FLEE_MAX_DISTANCE
	f	I	e	fleeTicks
c	bng$b	net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	m	(Lbng;Lbng;)V	<init>	<init>
		p	2		squid
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbng;	a	this$0
	f	Lbng;	b	squid
c	bnh	net/minecraft/world/entity/animal/TropicalFish
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbnh$a;Lbyt;Lbyt;)I	a	calculateVariant
		p	0		variety
		p	1		baseColor
		p	2		patternColor
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lcaa;	b	getBucketItemStack
	m	(I)Ljava/lang/String;	b	getPredefinedName
		p	0		variant
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkTropicalFishSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)Lbyt;	c	getBaseColor
		p	0		variant
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(I)Z	d	isMaxGroupSizeReached
		p	1		count
	m	()Lajd;	fL	getFlopSound
	m	()I	fT	getVariant
	m	()[F	fU	getBaseColor
	m	()[F	fV	getPatternColor
	m	()I	fW	getBaseVariant
	m	()Laaj;	fX	getPatternTextureLocation
	m	()Laaj;	fY	getBaseTextureLocation
	m	(Lcaa;)V	m	saveToBucketTag
		p	1		stack
	m	()Lajd;	r	getAmbientSound
	m	(I)Lbyt;	s	getPatternColor
		p	0		variant
	m	(I)Ljava/lang/String;	t	getFishTypeName
		p	0		variant
	m	(I)V	u	setVariant
		p	1		variant
	m	(I)I	v	getBaseVariant
		p	0		variant
	m	(I)I	w	getBaseColorIdx
		p	0		variant
	m	(I)I	x	getPatternColorIdx
		p	0		variant
	m	()Lajd;	x_	getDeathSound
	m	(I)I	y	getPatternVariant
		p	0		variant
	f	Ljava/lang/String;	b	BUCKET_VARIANT_TAG
	f	Lzr;	bX	DATA_ID_TYPE_VARIANT
	f	I	bY	BASES
	f	[Laaj;	bZ	BASE_TEXTURE_LOCATIONS
	f	I	c	BASE_SMALL
	f	[Laaj;	ca	PATTERN_A_TEXTURE_LOCATIONS
	f	[Laaj;	cb	PATTERN_B_TEXTURE_LOCATIONS
	f	I	cc	PATTERNS
	f	I	cd	COLORS
	f	Z	ce	isSchool
	f	I	d	BASE_LARGE
	f	[I	e	COMMON_VARIANTS
c	bnh$a	net/minecraft/world/entity/animal/TropicalFish$Pattern
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		shape
		p	4		pattern
	m	()I	a	getBase
	m	(II)Ljava/lang/String;	a	getPatternName
		p	0		shape
		p	1		pattern
	m	()I	b	getIndex
	m	()Ljava/lang/String;	c	getName
	m	()[Lbnh$a;	d	$values
	f	Lbnh$a;	a	KOB
	f	Lbnh$a;	b	SUNSTREAK
	f	Lbnh$a;	c	SNOOPER
	f	Lbnh$a;	d	DASHER
	f	Lbnh$a;	e	BRINELY
	f	Lbnh$a;	f	SPOTTY
	f	Lbnh$a;	g	FLOPPER
	f	Lbnh$a;	h	STRIPEY
	f	Lbnh$a;	i	GLITTER
	f	Lbnh$a;	j	BLOCKFISH
	f	Lbnh$a;	k	BETTY
	f	Lbnh$a;	l	CLAYFISH
	f	I	m	base
	f	I	n	index
	f	[Lbnh$a;	o	VALUES
	f	[Lbnh$a;	p	$VALUES
c	bnh$b	net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	m	(Lbnh;IIII)V	<init>	<init>
		p	1		leader
		p	2		shape
		p	3		pattern
		p	4		baseColor
		p	5		patternColor
	f	I	b	base
	f	I	c	pattern
	f	I	d	baseColor
	f	I	e	patternColor
c	bni	net/minecraft/world/entity/animal/Turtle
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	J	getAmbientSoundInterval
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbni;)Lalu;	a	access$000
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()F	aF	nextStep
	m	()Lajd;	aG	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Lbni;)Lalu;	b	access$100
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkTurtleSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbni;)Z	c	access$200
	m	()Z	cs	isPushedByFluid
	m	(F)V	d	playSwimSound
		p	1		volume
	m	()Z	dC	canBreatheUnderwater
	m	()F	dK	getScale
	m	()Lbbk;	ez	getMobType
	m	()Lbcf$a;	fK	createAttributes
	m	()Lgt;	fL	getHomePos
	m	()Lgt;	fM	getTravelPos
	m	()Z	fN	canFallInLove
	m	()Z	fS	isGoingHome
	m	()Z	fT	isTravelling
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(Lgt;)V	g	setHomePos
		p	1		pos
	m	(Lgt;)V	h	setTravelPos
		p	1		pos
	m	(Lbbf;)Z	k	lambda$static$0
		p	0		entity
	m	()V	n	ageBoundaryReached
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Z	q	hasEgg
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	isLayingEgg
	m	()V	u	registerGoals
	m	(Z)V	v	setHasEgg
		p	1		hasEgg
	m	(Z)V	w	setLayingEgg
		p	1		diggingSand
	m	()V	w_	aiStep
	m	(Z)V	x	setGoingHome
		p	1		landBound
	m	()Lajd;	x_	getDeathSound
	m	(Z)V	y	setTravelling
		p	1		traveling
	f	Lccp;	bX	FOOD_ITEMS
	f	Ljava/util/function/Predicate;	bY	BABY_ON_LAND_SELECTOR
	f	Lzr;	ca	HOME_POS
	f	Lzr;	cb	HAS_EGG
	f	Lzr;	cc	LAYING_EGG
	f	Lzr;	cd	TRAVEL_POS
	f	Lzr;	ce	GOING_HOME
	f	Lzr;	cf	TRAVELLING
	f	I	cg	layEggCounter
c	bni$a	net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	m	(Lbni;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()V	g	breed
	f	Lbni;	d	turtle
c	bni$b	net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	m	(Lbni;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbni;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
	f	I	d	closeToHomeTryTicks
	f	I	e	GIVE_UP_TICKS
c	bni$c	net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	m	(Lbni;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()Z	l	shouldRecalculatePath
	f	I	g	GIVE_UP_TICKS
	f	Lbni;	h	turtle
c	bni$d	net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	m	(Lbni;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbni;	g	turtle
c	bni$e	net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	m	(Lbni;)V	<init>	<init>
		p	1		turtle
	m	()V	a	tick
	m	()V	g	updateSpeed
	f	Lbni;	l	turtle
c	bni$f	net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	m	(Lbni;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
c	bni$g	net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	m	(Lbni;Lcga;)V	<init>	<init>
		p	1		owner
		p	2		world
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
c	bni$h	net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	m	(Lbni;DI)V	<init>	<init>
		p	1		turtle
		p	2		speed
		p	4		chance
	m	()Z	a	canUse
	f	Lbni;	i	turtle
c	bni$i	net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	m	(Lbni;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbni;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
c	bnj	net/minecraft/world/entity/animal/WaterAnimal
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	J	getAmbientSoundInterval
	m	(I)V	a	handleAirSupply
		p	1		air
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	()V	an	baseTick
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkSurfaceWaterAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cs	isPushedByFluid
	m	()Z	dC	canBreatheUnderwater
	m	()I	dP	getExperienceReward
	m	()Lbbk;	ez	getMobType
c	bnk	net/minecraft/world/entity/animal/Wolf
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	U	getMaxHeadXRot
	m	()I	a	getRemainingPersistentAngerTime
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbbf;Lbbf;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lbnk;)Lalu;	a	access$000
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lbyt;)V	a	setCollarColor
		p	1		color
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lafo;Lban;)Lbnk;	b	getBreedOffspring
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkWolfSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Ldvt;	cC	getLeashOffset
	m	()F	eD	getSoundVolume
	m	(FF)F	f	getBodyRollAngle
		p	1		tickDelta
	m	()Lbcf$a;	fS	createAttributes
	m	()Z	fT	isWet
	m	()F	fU	getTailAngle
	m	()Lbyt;	fV	getCollarColor
	m	()Z	fW	isInterested
	m	()V	fX	cancelShake
	m	()I	fp	getMaxSpawnClusterSize
	m	()V	k	tick
	m	(Lbbf;)Z	l	lambda$static$0
		p	0		entity
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(Z)V	w	setTame
		p	1		tamed
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getWetShade
		p	1		tickDelta
	m	(F)F	z	getHeadRollAngle
		p	1		tickDelta
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	m	(Z)V	z	setIsInterested
		p	1		begging
	f	Ljava/util/function/Predicate;	ca	PREY_SELECTOR
	f	Lzr;	cb	DATA_INTERESTED_ID
	f	Lzr;	cc	DATA_COLLAR_COLOR
	f	Lzr;	cd	DATA_REMAINING_ANGER_TIME
	f	F	ce	START_HEALTH
	f	F	cf	TAME_HEALTH
	f	F	cg	interestedAngle
	f	F	ch	interestedAngleO
	f	Z	ci	isWet
	f	Z	cj	isShaking
	f	F	ck	shakeAnim
	f	F	cl	shakeAnimO
	f	Layx;	cm	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cn	persistentAngerTarget
c	bnk$a	net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	m	(Lbnk;Lbnk;Ljava/lang/Class;FDD)V	<init>	<init>
		p	2		wolf
		p	3		fleeFromType
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
	m	()Z	a	canUse
	m	(Lbog;)Z	a	avoidLlama
		p	1		llama
	m	()V	c	start
	m	()V	e	tick
	f	Lbnk;	i	this$0
	f	Lbnk;	j	wolf
c	bnk$b	net/minecraft/world/entity/animal/Wolf$WolfPanicGoal
	m	(Lbnk;D)V	<init>	<init>
		p	2		speed
	m	()Z	h	shouldPanic
	f	Lbnk;	h	this$0
c	bnl	net/minecraft/world/entity/animal/allay/Allay
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lhs;	O	getPickupReach
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lafo;Lcza;Lgt;Lcyy;Lbaq;Lbaq;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Lafo;Lcza;Lgt;Lcyy;Lcyy$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lcze;)V	a	lambda$readAdditionalSaveData$1
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$0
	m	()Z	aL	isFlapping
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Ldvt;	cC	getLeashOffset
	m	()Lbca$b;	dA	brainProvider
	m	()Lbca;	dz	getBrain
	m	()F	eD	getSoundVolume
	m	()V	ej	dropEquipment
	m	()Ljava/lang/Iterable;	fG	iteratePathfindingStartNodeCandidatePositions
	m	()Z	fI	shouldStayCloseToLeashHolder
	m	()Z	fK	isFlying
	m	()Lakh;	fL	getListenableEvents
	m	()Z	fM	isOnPickupCooldown
	m	()Z	fr	canPickUpLoot
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	k	tick
	m	(Lcaa;)Z	l	wantsToPickUp
		p	1		stack
	m	()Lbcf$a;	n	createAttributes
	m	()Z	q	hasItemInHand
	m	()Lajd;	r	getAmbientSound
	m	()Lazr;	t	getInventory
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getHoldingItemAnimationProgress
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	I	bX	GAME_EVENT_LISTENER_RANGE
	f	Lhs;	bY	ITEM_PICKUP_REACH
	f	I	bZ	ANIMATION_DURATION
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	F	ca	PATHFINDING_BOUNDING_BOX_PADDING
	f	Lcyv;	cb	dynamicGameEventListener
	f	Lazr;	cc	inventory
	f	F	cd	holdingItemAnimationTicks
	f	F	ce	holdingItemAnimationTicks0
	f	Lcom/google/common/collect/ImmutableList;	d	THROW_SOUND_PITCHES
	f	Lorg/slf4j/Logger;	e	LOGGER
c	bnm	net/minecraft/world/entity/animal/allay/AllayAi
	m	(Lafp;)Lbef;	a	lambda$getLikedPlayerPositionTracker$2
		p	0		player
	m	(Lbbf;)Ljava/util/Optional;	a	getLikedPlayer
		p	0		allay
	m	(Lbbf;Lbca;Lhb;)Z	a	shouldDepositItemsAtLikedNoteblock
		p	0		allay
		p	1		brain
		p	2		pos
	m	(Lbbf;Lgt;)V	a	hearNoteblock
		p	0		allay
		p	1		pos
	m	(Lbca;)Lbca;	a	makeBrain
		p	0		brain
	m	(Lbnl;)V	a	updateActivity
		p	0		allay
	m	(Lbbf;)Ljava/util/Optional;	b	getItemDepositPosition
		p	0		allay
	m	(Lbca;)V	b	initCoreActivity
		p	0		brain
	m	(Lbnl;)Z	b	lambda$initIdleActivity$0
		p	0		allay
	m	(Lbbf;)Ljava/util/Optional;	c	getLikedPlayerPositionTracker
		p	0		allay
	m	(Lbca;)V	c	initIdleActivity
		p	0		brain
	m	(Lbbf;)Z	d	lambda$initIdleActivity$1
		p	0		allay
	f	F	a	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	b	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	f	F	c	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	f	F	d	SPEED_MULTIPLIER_WHEN_PANICKING
	f	I	e	CLOSE_ENOUGH_TO_TARGET
	f	I	f	TOO_FAR_FROM_TARGET
	f	I	g	MAX_LOOK_DISTANCE
	f	I	h	MIN_WAIT_DURATION
	f	I	i	MAX_WAIT_DURATION
	f	I	j	TIME_TO_FORGET_NOTEBLOCK
	f	I	k	DISTANCE_TO_WANTED_ITEM
c	bnn	net/minecraft/world/entity/animal/allay/package-info
c	bno	net/minecraft/world/entity/animal/axolotl/Axolotl
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	K	playAmbientSound
	m	()Z	P	requiresCustomPersistence
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	()I	U	getMaxHeadXRot
	m	()I	V	getMaxHeadYRot
	m	()Ljava/util/Map;	a	getModelRotationValues
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lalu;)Z	a	useRareVariant
		p	0		random
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	a	checkAxolotlSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lbno$d;)V	a	setVariant
		p	1		variant
	m	(Lbno;Lbbf;)V	a	onStopAttacking
		p	0		axolotl
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lbtf;Lazl;Lcaa;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lajd;	aG	getSwimSound
	m	()Lajd;	aH	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	()V	an	baseTick
	m	()Lcaa;	b	getBucketItemStack
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lpj;)V	c	loadFromBucketTag
		p	1		nbt
	m	()I	ca	getMaxAirSupply
	m	()Z	cs	isPushedByFluid
	m	()Lbca$b;	dA	brainProvider
	m	()Z	dC	canBreatheUnderwater
	m	()Z	dZ	canBeSeenAsEnemy
	m	()Lbca;	dz	getBrain
	m	(Lbtf;)V	e	applySupportingEffects
		p	1		player
	m	()Lbbk;	ez	getMobType
	m	()V	fK	rehydrate
	m	()Lbno$d;	fL	getVariant
	m	()Z	fM	isPlayingDead
	m	()Lbcf$a;	fS	createAttributes
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbbf;)D	i	getMeleeAttackRangeSqr
		p	1		target
	m	(Lcaa;)V	m	saveToBucketTag
		p	1		stack
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Z	q	fromBucket
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getPickupSound
	m	(I)V	t	handleAirSupply
		p	1		air
	m	(Z)V	v	setFromBucket
		p	1		fromBucket
	m	(Z)V	w	setPlayingDead
		p	1		playingDead
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	I	bX	TOTAL_PLAYDEAD_TIME
	f	Lcom/google/common/collect/ImmutableList;	bY	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	ca	MEMORY_TYPES
	f	D	cb	PLAYER_REGEN_DETECTION_RANGE
	f	I	cc	RARE_VARIANT_CHANCE
	f	Ljava/lang/String;	cd	VARIANT_TAG
	f	Lorg/slf4j/Logger;	ce	LOGGER
	f	Lzr;	cf	DATA_VARIANT
	f	Lzr;	cg	DATA_PLAYING_DEAD
	f	Lzr;	ch	FROM_BUCKET
	f	I	ci	AXOLOTL_TOTAL_AIR_SUPPLY
	f	I	cj	REHYDRATE_AIR_SUPPLY
	f	I	ck	REGEN_BUFF_MAX_DURATION
	f	Ljava/util/Map;	cl	modelRotationValues
	f	I	cm	REGEN_BUFF_BASE_DURATION
c	bno$a	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	m	([Lbno$d;)V	<init>	<init>
		p	1		variants
	m	(Lalu;)Lbno$d;	a	getVariant
		p	1		random
	f	[Lbno$d;	a	types
c	bno$b	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	m	(Lbno;Lbno;I)V	<init>	<init>
		p	2		axolotl
		p	3		yawAdjustThreshold
	m	()V	a	tick
	f	Lbno;	h	this$0
c	bno$c	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	m	(Lbno;)V	<init>	<init>
		p	1		axolotl
	m	()V	a	tick
	f	Lbno;	l	axolotl
c	bno$d	net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		natural
	m	()I	a	getId
	m	(I)[Lbno$d;	a	lambda$getSpawnVariant$2
	m	(Lalu;)Lbno$d;	a	getCommonSpawnVariant
		p	0		random
	m	(Lalu;Z)Lbno$d;	a	getSpawnVariant
		p	0		random
		p	1		natural
	m	(ZLbno$d;)Z	a	lambda$getSpawnVariant$1
		p	1		variant
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbno$d;	b	lambda$static$0
	m	(Lalu;)Lbno$d;	b	getRareSpawnVariant
		p	0		random
	m	()[Lbno$d;	c	$values
	f	Lbno$d;	a	LUCY
	f	Lbno$d;	b	WILD
	f	Lbno$d;	c	GOLD
	f	Lbno$d;	d	CYAN
	f	Lbno$d;	e	BLUE
	f	[Lbno$d;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	Z	i	common
	f	[Lbno$d;	j	$VALUES
c	bnp	net/minecraft/world/entity/animal/axolotl/AxolotlAi
	m	()Lccp;	a	getTemptations
	m	(Lbbf;)Z	a	canSetWalkTargetFromLookTarget
		p	0		entity
	m	(Lbca;)Lbca;	a	makeBrain
		p	0		brain
	m	(Lbno;)V	a	updateActivity
		p	0		axolotl
	m	(Lbbf;)F	b	getSpeedModifierChasing
		p	0		entity
	m	(Lbca;)V	b	initPlayDeadActivity
		p	0		brain
	m	(Lbno;)Ljava/util/Optional;	b	findNearestValidAttackTarget
		p	0		axolotl
	m	(Lbbf;)F	c	getSpeedModifierFollowingAdult
		p	0		entity
	m	(Lbca;)V	c	initFightActivity
		p	0		brain
	m	(Lbbf;)F	d	getSpeedModifier
		p	0		entity
	m	(Lbca;)V	d	initCoreActivity
		p	0		brain
	m	(Lbca;)V	e	initIdleActivity
		p	0		brain
	f	Layx;	a	ADULT_FOLLOW_RANGE
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	e	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f	F	f	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
c	bnq	net/minecraft/world/entity/animal/axolotl/PlayDead
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbno;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbno;J)Z	a	canStillUse
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbno;J)V	b	start
c	bnr	net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbno;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bns	net/minecraft/world/entity/animal/axolotl/package-info
c	bnt	net/minecraft/world/entity/animal/frog/Frog
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	()I	V	getMaxHeadYRot
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lafo;Lbmh;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lbaq;)V	a	setTongueTarget
		p	1		entity
	m	(Lbms;)V	a	setVariant
		p	1		variant
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Ldpk;)Z	b	canCutCorner
		p	1		type
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkFrogSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cs	isPushedByFluid
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	()Lbca$b;	dA	brainProvider
	m	()Z	dC	canBreatheUnderwater
	m	()Lbca;	dz	getBrain
	m	()Lbms;	fK	getVariant
	m	()Lbcf$a;	fL	createAttributes
	m	()Z	fM	isMovingOnLand
	m	()Z	fS	isMovingInWater
	m	()I	fo	getHeadRotSpeed
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	()V	k	tick
	m	(Lbbf;)Z	k	canEat
		p	0		entity
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()V	q	eraseTongueTarget
	m	()Lajd;	r	getAmbientSound
	m	()Ljava/util/Optional;	t	getTongueTarget
	m	()Lajd;	x_	getDeathSound
	m	()Z	y_	isBaby
	f	Lccp;	bX	TEMPTATION_ITEM
	f	Lcom/google/common/collect/ImmutableList;	bY	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	ca	MEMORY_TYPES
	f	Ljava/lang/String;	cb	VARIANT_KEY
	f	Lbao;	cc	jumpAnimationState
	f	Lbao;	cd	croakAnimationState
	f	Lbao;	ce	tongueAnimationState
	f	Lbao;	cf	walkAnimationState
	f	Lbao;	cg	swimAnimationState
	f	Lbao;	ch	swimIdleAnimationState
	f	Lzr;	ci	DATA_VARIANT_ID
	f	Lzr;	cj	DATA_TONGUE_TARGET_ID
	f	I	ck	FROG_FALL_DAMAGE_REDUCTION
c	bnt$a	net/minecraft/world/entity/animal/frog/Frog$FrogLookControl
	m	(Lbnt;Lbbh;)V	<init>	<init>
		p	2		entity
	m	()Z	c	resetXRotOnTick
	f	Lbnt;	h	this$0
c	bnt$b	net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Ldpm;	a	getStart
	m	(Lcfg;III)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	f	Lgt$a;	l	belowPos
c	bnt$c	net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation
	m	(Lbnt;Lcga;)V	<init>	<init>
		p	1		frog
		p	2		world
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
c	bnu	net/minecraft/world/entity/animal/frog/FrogAi
	m	()Lccp;	a	getTemptations
	m	(Lbbf;)Ljava/lang/Float;	a	lambda$initSwimActivity$2
		p	0		frog
	m	(Lbca;)Lbca;	a	makeBrain
		p	0		brain
	m	(Lbnt;)V	a	updateActivity
		p	0		frog
	m	(Lbnt;Lalu;)V	a	initMemories
		p	0		frog
		p	1		random
	m	(Lcur;)Z	a	lambda$initJumpActivity$6
		p	0		state
	m	(Lbbf;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
		p	0		frog
	m	(Lbca;)V	b	initCoreActivity
		p	0		brain
	m	(Lbnt;)Z	b	canAttack
		p	0		frog
	m	(Lbca;)V	c	initIdleActivity
		p	0		brain
	m	(Lbnt;)Lajd;	c	lambda$initJumpActivity$5
		p	0		frog
	m	(Lbca;)V	d	initSwimActivity
		p	0		brain
	m	(Lbnt;)Ljava/util/Optional;	d	lambda$initLaySpawnActivity$4
		p	0		frog
	m	(Lbca;)V	e	initLaySpawnActivity
		p	0		brain
	m	(Lbnt;)Ljava/util/Optional;	e	lambda$initSwimActivity$3
		p	0		frog
	m	(Lbca;)V	f	initJumpActivity
		p	0		brain
	m	(Lbnt;)Ljava/util/Optional;	f	lambda$initIdleActivity$1
		p	0		frog
	m	(Lbca;)V	g	initTongueActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	d	SPEED_MULTIPLIER_ON_LAND
	f	F	e	SPEED_MULTIPLIER_IN_WATER
	f	Layx;	f	TIME_BETWEEN_LONG_JUMPS
	f	I	g	MAX_LONG_JUMP_HEIGHT
	f	I	h	MAX_LONG_JUMP_WIDTH
	f	F	i	MAX_JUMP_VELOCITY
	f	F	j	SPEED_MULTIPLIER_WHEN_TEMPTED
c	bnv	net/minecraft/world/entity/animal/frog/ShootTongue
	m	(Lajd;Lajd;)V	<init>	<init>
		p	1		tongueSound
		p	2		eatSound
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbnt;J)Z	a	canStillUse
	m	(Lbnt;Lbbf;)Z	a	canPathfindToTarget
		p	1		entity
		p	2		target
	m	(Lafo;Lbbf;J)Z	b	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;)V	b	eatEntity
		p	1		world
		p	2		frog
	m	(Lafo;Lbnt;J)V	b	start
	m	(Lbnt;Lbbf;)V	b	addUnreachableTargetToMemory
		p	1		entity
		p	2		target
	m	(Lafo;Lbbf;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;J)V	c	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbbf;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbnt;J)V	d	tick
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	TIME_OUT_DURATION
	f	I	d	CATCH_ANIMATION_DURATION
	f	I	e	TONGUE_ANIMATION_DURATION
	f	I	f	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	f	I	g	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	f	F	h	EATING_DISTANCE
	f	F	i	EATING_MOVEMENT_FACTOR
	f	I	j	eatAnimationTimer
	f	I	k	calculatePathCounter
	f	Lajd;	l	tongueSound
	f	Lajd;	m	eatSound
	f	Ldvt;	n	itemSpawnPos
	f	Lbnv$a;	o	state
c	bnv$1	net/minecraft/world/entity/animal/frog/ShootTongue$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$animal$frog$ShootTongue$State
c	bnv$a	net/minecraft/world/entity/animal/frog/ShootTongue$State
	m	()[Lbnv$a;	a	$values
	f	Lbnv$a;	a	MOVE_TO_TARGET
	f	Lbnv$a;	b	CATCH_ANIMATION
	f	Lbnv$a;	c	EAT_ANIMATION
	f	Lbnv$a;	d	DONE
	f	[Lbnv$a;	e	$VALUES
c	bnw	net/minecraft/world/entity/animal/frog/Tadpole
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	(Lbtf;Lcaa;)V	a	feed
		p	1		player
		p	2		stack
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcaa;	b	getBucketItemStack
	m	(I)V	b	ageUp
		p	1		seconds
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbtf;Lcaa;)V	b	usePlayerItem
		p	1		player
		p	2		stack
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	setAge
		p	1		tadpoleAge
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lpj;)V	c	loadFromBucketTag
		p	1		nbt
	m	()Lbca$b;	dA	brainProvider
	m	()Z	dN	shouldDropExperience
	m	()Lbca;	dz	getBrain
	m	()Lajd;	fL	getFlopSound
	m	()Lbcf$a;	fM	createAttributes
	m	()I	fN	getAge
	m	()V	fO	ageUp
	m	()I	fP	getTicksLeftUntilAdult
	m	(Lcaa;)V	m	saveToBucketTag
		p	1		stack
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Z	q	fromBucket
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getPickupSound
	m	(Z)V	v	setFromBucket
		p	1		fromBucket
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	I	b	ticksToBeFrog
	f	Lcom/google/common/collect/ImmutableList;	bX	MEMORY_TYPES
	f	I	bY	age
	f	F	c	HITBOX_WIDTH
	f	F	d	HITBOX_HEIGHT
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	bnx	net/minecraft/world/entity/animal/frog/TadpoleAi
	m	(Lbbf;)Ljava/lang/Float;	a	lambda$initIdleActivity$0
	m	(Lbca;)Lbca;	a	makeBrain
		p	0		brain
	m	(Lbnw;)V	a	updateActivity
		p	0		tadpole
	m	(Lbca;)V	b	initCoreActivity
		p	0		brain
	m	(Lbca;)V	c	initIdleActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
c	bny	net/minecraft/world/entity/animal/frog/package-info
c	bnz	net/minecraft/world/entity/animal/goat/Goat
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	()I	V	getMaxHeadYRot
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;Lban;)Lbnz;	b	getBreedOffspring
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkGoatSpawnRules
		p	0		entityType
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	()Lbca$b;	dA	brainProvider
	m	()Lbca;	dz	getBrain
	m	(Lcaa;)Lajd;	e	getEatingSound
		p	1		stack
	m	()Lajd;	fK	getMilkingSound
	m	()Z	fL	hasLeftHorn
	m	()Z	fM	hasRightHorn
	m	()Z	fS	dropHorn
	m	()V	fT	addHorns
	m	()V	fU	removeHorns
	m	()Z	fV	isScreamingGoat
	m	()F	fW	getRammingXHeadRot
	m	(F)V	l	setYHeadRot
		p	1		headYaw
	m	()V	n	ageBoundaryReached
	m	()Lcaa;	q	createHorn
	m	()Lajd;	r	getAmbientSound
	m	()Lbcf$a;	t	createAttributes
	m	(Z)V	v	setScreamingGoat
		p	1		screaming
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	Lbar;	bX	LONG_JUMPING_DIMENSIONS
	f	Lcom/google/common/collect/ImmutableList;	bY	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	ca	MEMORY_TYPES
	f	I	cb	GOAT_FALL_DAMAGE_REDUCTION
	f	D	cc	GOAT_SCREAMING_CHANCE
	f	D	cd	UNIHORN_CHANCE
	f	I	ce	ADULT_ATTACK_DAMAGE
	f	I	cf	BABY_ATTACK_DAMAGE
	f	Lzr;	cg	DATA_IS_SCREAMING_GOAT
	f	Lzr;	ch	DATA_HAS_LEFT_HORN
	f	Lzr;	ci	DATA_HAS_RIGHT_HORN
	f	Z	cj	isLoweringHead
	f	I	ck	lowerHeadTick
c	boa	net/minecraft/world/entity/animal/goat/GoatAi
	m	()Lccp;	a	getTemptations
	m	(Lbbf;)Ljava/lang/Float;	a	lambda$initIdleActivity$1
		p	0		goat
	m	(Lbca;)Lbca;	a	makeBrain
		p	0		brain
	m	(Lbnz;)V	a	updateActivity
		p	0		goat
	m	(Lbnz;Lalu;)V	a	initMemories
		p	0		goat
		p	1		random
	m	(Lbbf;)Z	b	lambda$static$0
		p	0		entity
	m	(Lbca;)V	b	initCoreActivity
		p	0		brain
	m	(Lbnz;)Lajd;	b	lambda$initRamActivity$8
		p	0		goat
	m	(Lbca;)V	c	initIdleActivity
		p	0		brain
	m	(Lbnz;)I	c	lambda$initRamActivity$7
		p	0		goat
	m	(Lbca;)V	d	initLongJumpActivity
		p	0		brain
	m	(Lbnz;)Lajd;	d	lambda$initRamActivity$6
		p	0		goat
	m	(Lbca;)V	e	initRamActivity
		p	0		brain
	m	(Lbnz;)Lajd;	e	lambda$initRamActivity$5
		p	0		goat
	m	(Lbnz;)D	f	lambda$initRamActivity$4
		p	0		goat
	m	(Lbnz;)Layx;	g	lambda$initRamActivity$3
		p	0		goat
	m	(Lbnz;)Lajd;	h	lambda$initLongJumpActivity$2
		p	0		goat
	f	I	a	RAM_PREPARE_TIME
	f	I	b	RAM_MAX_DISTANCE
	f	I	c	MAX_LONG_JUMP_HEIGHT
	f	I	d	MAX_LONG_JUMP_WIDTH
	f	F	e	MAX_JUMP_VELOCITY
	f	I	f	RAM_MIN_DISTANCE
	f	F	g	ADULT_RAM_KNOCKBACK_FORCE
	f	F	h	BABY_RAM_KNOCKBACK_FORCE
	f	Layx;	i	ADULT_FOLLOW_RANGE
	f	F	j	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	k	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	l	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	m	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	n	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	o	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	f	Layx;	p	TIME_BETWEEN_LONG_JUMPS
	f	Layx;	q	TIME_BETWEEN_RAMS
	f	Layx;	r	TIME_BETWEEN_RAMS_SCREAMER
	f	Lbli;	s	RAM_TARGET_CONDITIONS
	f	F	t	SPEED_MULTIPLIER_WHEN_RAMMING
c	bob	net/minecraft/world/entity/animal/goat/package-info
c	boc	net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lalu;)V	a	randomizeAttributes
		p	1		random
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getPassengersRidingOffset
	m	()V	ej	dropEquipment
	m	()I	fK	getInventorySize
	m	()V	fL	playChestEquipsSound
	m	()I	fM	getInventoryColumns
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	()Lbcf$a;	q	createBaseChestedHorseAttributes
	m	()Z	t	hasChest
	m	(Z)V	v	setChest
		p	1		hasChest
	f	I	bX	INV_CHEST_COUNT
	f	Lzr;	cn	DATA_ID_CHEST
c	boc$1	net/minecraft/world/entity/animal/horse/AbstractChestedHorse$1
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
	f	Lboc;	b	this$0
c	bod	net/minecraft/world/entity/animal/horse/AbstractHorse
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	A	getMouthAnim
		p	1		tickDelta
	m	(Z)V	A	setStanding
		p	1		angry
	m	(Z)V	B	spawnTamingParticles
		p	1		positive
	m	()I	J	getAmbientSoundInterval
	m	()Z	a	canJump
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(I)V	a	onPlayerJump
		p	1		strength
	m	(ILjava/util/function/Predicate;)Lbbw;	a	createEquipmentSlotAccess
		p	1		slot
		p	2		predicate
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lajf;)V	a	equipSaddle
		p	1		sound
	m	(Lalu;)V	a	randomizeAttributes
		p	1		random
	m	(Lazf;)V	a	containerChanged
		p	1		sender
	m	(Lban;Lbod;)V	a	setOffspringAttributes
		p	1		mate
		p	2		child
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lbtf;Lcaa;)Lazm;	a	fedFood
		p	1		player
		p	2		stack
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcpz;)V	a	playGallopSound
		p	1		group
	m	(Ldvt;Lbbf;)Ldvt;	a	getDismountLocationInDirection
		p	1		offset
		p	2		passenger
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()V	b	handleStopJump
	m	(I)V	b	handleStartJump
		p	1		height
	m	(Lalu;)F	b	generateRandomMaxHealth
		p	1		random
	m	(Lazf;)Z	b	hasInventoryChanged
		p	1		inventory
	m	(Lbbf;)Ldvt;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lbtf;Lcaa;)Z	b	handleEating
		p	1		player
		p	2		item
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		uuid
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	b_	onClimbable
	m	()Z	bm	isPushable
	m	()Z	c	isSaddleable
	m	(Lalu;)D	c	generateRandomJumpStrength
		p	1		random
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbaq;	cH	getControllingPassenger
	m	()Z	d	isSaddled
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(IZ)V	d	setFlag
		p	1		bitmask
		p	2		flag
	m	(Lalu;)D	d	generateRandomSpeed
		p	1		random
	m	(Lbtf;)V	e	doPlayerRide
		p	1		player
	m	()F	eD	getSoundVolume
	m	()Z	eF	isImmobile
	m	()V	ej	dropEquipment
	m	()I	fK	getInventorySize
	m	()V	fL	openMouth
	m	()V	fM	stand
	m	()V	fS	addBehaviourGoals
	m	()Z	fT	isTamed
	m	()Ljava/util/UUID;	fU	getOwnerUUID
	m	()Z	fV	isJumping
	m	()Z	fW	isEating
	m	()Z	fX	isStanding
	m	()Z	fY	isBred
	m	()I	fZ	getTemper
	m	()I	fp	getMaxSpawnClusterSize
	m	(Lbtf;)Z	g	tameWithName
		p	1		player
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	()V	ga	createInventory
	m	()V	gb	updateContainerEquipment
	m	()D	gc	getCustomJump
	m	()Lajd;	gd	getEatingSound
	m	()Lajd;	ge	getAngrySound
	m	()Lbcf$a;	gf	createBaseHorseAttributes
	m	()I	gg	getMaxTemper
	m	()V	gh	followMommy
	m	()Z	gi	canEatGrass
	m	()V	gj	makeMad
	m	()V	gk	playJumpSound
	m	()Z	gl	canParent
	m	()Z	gm	canWearArmor
	m	()Z	gn	isWearingArmor
	m	()Lbbf;	go	getControllingPassenger
	m	(Lbaq;)V	i	positionRider
		p	1		passenger
	m	()V	k	tick
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	(Lbbf;)Z	k	lambda$static$0
		p	0		entity
	m	(Lcaa;)Z	m	isArmor
		p	1		item
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	(Lcaa;)Z	o	lambda$getSlot$2
		p	1		stack
	m	(Lcaa;)Z	p	lambda$getSlot$1
		p	0		stack
	m	()V	q	eating
	m	()Lajd;	r	getAmbientSound
	m	()V	t	moveTail
	m	(I)Z	t	getFlag
		p	1		bitmask
	m	()V	u	registerGoals
	m	(I)V	u	setTemper
		p	1		temper
	m	(I)I	v	modifyTemper
		p	1		difference
	m	(Z)V	w	setTamed
		p	1		tame
	m	()V	w_	aiStep
	m	(F)V	x	onLeashDistance
		p	1		leashLength
	m	(Z)V	x	setIsJumping
		p	1		inAir
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getEatAnim
		p	1		tickDelta
	m	(Z)V	y	setBred
		p	1		bred
	m	(F)F	z	getStandAnim
		p	1		tickDelta
	m	(Z)V	z	setEating
		p	1		eatingGrass
	f	Ljava/util/function/Predicate;	bX	PARENT_HORSE_SELECTOR
	f	I	bY	EQUIPMENT_SLOT_OFFSET
	f	Z	cA	allowStandSliding
	f	F	cB	eatAnim
	f	F	cC	eatAnimO
	f	F	cD	standAnim
	f	F	cE	standAnimO
	f	F	cF	mouthAnim
	f	F	cG	mouthAnimO
	f	I	ca	CHEST_SLOT_OFFSET
	f	I	cb	INVENTORY_SLOT_OFFSET
	f	I	cc	INV_SLOT_SADDLE
	f	I	cd	INV_SLOT_ARMOR
	f	I	ce	INV_BASE_COUNT
	f	I	cf	tailCounter
	f	I	cg	sprintCounter
	f	Z	ch	isJumping
	f	Lazr;	ci	inventory
	f	I	cj	temper
	f	F	ck	playerJumpPendingScale
	f	Z	cl	canGallop
	f	I	cm	gallopSoundCounter
	f	Lbli;	cn	MOMMY_TARGETING
	f	Lccp;	co	FOOD_ITEMS
	f	Lzr;	cp	DATA_ID_FLAGS
	f	Lzr;	cq	DATA_ID_OWNER_UUID
	f	I	cr	FLAG_TAME
	f	I	cs	FLAG_SADDLE
	f	I	ct	FLAG_BRED
	f	I	cu	FLAG_EATING
	f	I	cv	FLAG_STANDING
	f	I	cw	FLAG_OPEN_MOUTH
	f	I	cx	eatingCounter
	f	I	cy	mouthCounter
	f	I	cz	standCounter
c	bod$1	net/minecraft/world/entity/animal/horse/AbstractHorse$1
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
	f	I	b	val$slot
	f	Ljava/util/function/Predicate;	c	val$check
	f	Lbod;	d	this$0
c	boe	net/minecraft/world/entity/animal/horse/Donkey
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lajd;	gd	getEatingSound
	m	()Lajd;	ge	getAngrySound
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
c	bof	net/minecraft/world/entity/animal/horse/Horse
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lalu;)V	a	randomizeAttributes
		p	1		random
	m	(Lazf;)V	a	containerChanged
		p	1		sender
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lbom;Lboh;)V	a	setVariantAndMarkings
		p	1		color
		p	2		marking
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcpz;)V	a	playGallopSound
		p	1		group
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lboh;	fL	getMarkings
	m	()I	fM	getTypeVariant
	m	()V	gb	updateContainerEquipment
	m	()Lajd;	gd	getEatingSound
	m	()Lajd;	ge	getAngrySound
	m	()Z	gm	canWearArmor
	m	(Lcaa;)Z	m	isArmor
		p	1		item
	m	(Lcaa;)V	o	setArmor
		p	1		stack
	m	(Lcaa;)V	p	setArmorEquipment
		p	1		stack
	m	()Lcaa;	q	getArmor
	m	()Lajd;	r	getAmbientSound
	m	()Lbom;	t	getVariant
	m	(I)V	w	setTypeVariant
		p	1		variant
	m	()Lajd;	x_	getDeathSound
	f	Ljava/util/UUID;	bX	ARMOR_MODIFIER_UUID
	f	Lzr;	cn	DATA_ID_TYPE_VARIANT
c	bof$a	net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	m	(Lbom;)V	<init>	<init>
		p	1		color
	f	Lbom;	a	variant
c	bog	net/minecraft/world/entity/animal/horse/Llama
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	C	setDidSpit
		p	1		spit
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lazf;)V	a	containerChanged
		p	1		sender
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbmh;)Z	a	canMate
		p	1		other
	m	(Lbog;)V	a	joinCaravan
		p	1		llama
	m	(Lbyt;)V	a	setSwag
		p	1		color
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;Lban;)Lbog;	b	getBreedOffspring
	m	(Lbtf;Lcaa;)Z	b	handleEating
		p	1		player
		p	2		item
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getPassengersRidingOffset
	m	()Z	c	isSaddleable
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Ldvt;	cC	getLeashOffset
	m	()Lbaq;	cH	getControllingPassenger
	m	(Lalu;)V	e	setRandomStrength
		p	1		random
	m	()Z	eF	isImmobile
	m	()D	fJ	followLeashSpeed
	m	()I	fK	getInventorySize
	m	()V	fL	playChestEquipsSound
	m	()I	fM	getInventoryColumns
	m	()V	gb	updateContainerEquipment
	m	()Lajd;	gd	getEatingSound
	m	()Lajd;	ge	getAngrySound
	m	()I	gg	getMaxTemper
	m	()V	gh	followMommy
	m	()Z	gi	canEatGrass
	m	()V	gj	makeMad
	m	()Z	gm	canWearArmor
	m	()Z	gn	isWearingArmor
	m	()Lbbf;	go	getControllingPassenger
	m	()Z	gp	isTraderLlama
	m	()I	gq	getStrength
	m	()Lbcf$a;	gr	createAttributes
	m	()I	gs	getVariant
	m	()Lbyt;	gt	getSwag
	m	()Lbog;	gu	makeBabyLlama
	m	()V	gv	leaveCaravan
	m	()Z	gw	hasCaravanTail
	m	()Z	gx	inCaravan
	m	()Lbog;	gy	getCaravanHead
	m	(Lbaq;)V	i	positionRider
		p	1		passenger
	m	(Lbbf;)V	k	spit
		p	1		target
	m	(Lcaa;)Z	m	isArmor
		p	1		item
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	(Lcaa;)Lbyt;	o	getDyeColor
		p	0		color
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(I)V	w	setVariant
		p	1		variant
	m	(I)V	x	setStrength
		p	1		strength
	m	()Lajd;	x_	getDeathSound
	f	I	cn	MAX_STRENGTH
	f	I	co	VARIANTS
	f	Lccp;	cp	FOOD_ITEMS
	f	Lzr;	cq	DATA_STRENGTH_ID
	f	Lzr;	cr	DATA_SWAG_ID
	f	Lzr;	cs	DATA_VARIANT_ID
	f	Z	ct	didSpit
	f	Lbog;	cu	caravanHead
	f	Lbog;	cv	caravanTail
c	bog$a	net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	m	(Lbog;)V	<init>	<init>
		p	1		llama
	m	(Lbbf;)Z	b	lambda$new$0
		p	0		wolf
	m	()D	l	getFollowDistance
c	bog$b	net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	m	(I)V	<init>	<init>
		p	1		variant
	f	I	a	variant
c	bog$c	net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	m	(Lbog;)V	<init>	<init>
		p	1		llama
	m	()Z	b	canContinueToUse
c	boh	net/minecraft/world/entity/animal/horse/Markings
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	getId
	m	(I)Lboh;	a	byId
		p	0		index
	m	()[Lboh;	b	$values
	m	(I)[Lboh;	b	lambda$static$0
	f	Lboh;	a	NONE
	f	Lboh;	b	WHITE
	f	Lboh;	c	WHITE_FIELD
	f	Lboh;	d	WHITE_DOTS
	f	Lboh;	e	BLACK_DOTS
	f	[Lboh;	f	BY_ID
	f	I	g	id
	f	[Lboh;	h	$VALUES
c	boi	net/minecraft/world/entity/animal/horse/Mule
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()V	fL	playChestEquipsSound
	m	()Lajd;	gd	getEatingSound
	m	()Lajd;	ge	getAngrySound
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
c	boj	net/minecraft/world/entity/animal/horse/SkeletonHorse
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lalu;)V	a	randomizeAttributes
		p	1		random
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lajd;	aG	getSwimSound
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bL	rideableUnderWater
	m	()D	bu	getPassengersRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(F)V	d	playSwimSound
		p	1		volume
	m	()F	eK	getWaterSlowDown
	m	()Lbbk;	ez	getMobType
	m	()V	fS	addBehaviourGoals
	m	()V	gk	playJumpSound
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	isTrap
	m	(Z)V	v	setTrap
		p	1		trapped
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	Lbok;	bX	skeletonTrapGoal
	f	I	cn	TRAP_MAX_LIFE
	f	Z	co	isTrap
	f	I	cp	trapTime
c	bok	net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	m	(Lboj;)V	<init>	<init>
		p	1		skeletonHorse
	m	()Z	a	canUse
	m	(Lazk;)Lbod;	a	createHorse
		p	1		localDifficulty
	m	(Lazk;Lbod;)Lbrb;	a	createSkeleton
		p	1		localDifficulty
		p	2		vehicle
	m	(Lcaa;)Lcaa;	a	disenchant
		p	1		stack
	m	()V	e	tick
	f	Lboj;	a	horse
c	bol	net/minecraft/world/entity/animal/horse/TraderLlama
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	e	doPlayerRide
		p	1		player
	m	()Z	gA	canDespawn
	m	()Z	gB	isLeashedToWanderingTrader
	m	()Z	gC	isLeashedToSomethingOtherThanTheWanderingTrader
	m	()Z	gp	isTraderLlama
	m	()Lbog;	gu	makeBabyLlama
	m	()V	gz	maybeDespawn
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	(I)V	x	setDespawnDelay
		p	1		despawnDelay
	f	I	cn	despawnDelay
c	bol$a	net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	m	(Lbog;)V	<init>	<init>
		p	1		llama
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbog;	a	llama
	f	Lbbf;	b	ownerLastHurtBy
	f	I	c	timestamp
c	bom	net/minecraft/world/entity/animal/horse/Variant
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	getId
	m	(I)Lbom;	a	byId
		p	0		index
	m	()[Lbom;	b	$values
	m	(I)[Lbom;	b	lambda$static$0
	f	Lbom;	a	WHITE
	f	Lbom;	b	CREAMY
	f	Lbom;	c	CHESTNUT
	f	Lbom;	d	BROWN
	f	Lbom;	e	BLACK
	f	Lbom;	f	GRAY
	f	Lbom;	g	DARKBROWN
	f	[Lbom;	h	BY_ID
	f	I	i	id
	f	[Lbom;	j	$VALUES
c	bon	net/minecraft/world/entity/animal/horse/ZombieHorse
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lalu;)V	a	randomizeAttributes
		p	1		random
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbbk;	ez	getMobType
	m	()V	fS	addBehaviourGoals
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
c	boo	net/minecraft/world/entity/animal/horse/package-info
c	bop	net/minecraft/world/entity/animal/package-info
c	boq	net/minecraft/world/entity/boss/EnderDragonPart
	m	(Lbos;Ljava/lang/String;FF)V	<init>	<init>
		p	1		owner
		p	2		name
		p	3		width
		p	4		height
	m	()Lso;	S	getAddEntityPacket
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bl	isPickable
	m	()Z	dx	shouldBeSaved
	m	(Lbaq;)Z	q	is
		p	1		entity
	f	Lbos;	b	parentMob
	f	Ljava/lang/String;	c	name
	f	Lbar;	d	size
c	bor	net/minecraft/world/entity/boss/enderdragon/EndCrystal
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lso;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lazz;)V	a	onDestroyedBy
		p	1		source
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lgt;)V	a	setBeamTarget
		p	1		beamTarget
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setShowBottom
		p	1		showBottom
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bl	isPickable
	m	()Lcaa;	do	getPickResult
	m	()Lgt;	h	getBeamTarget
	m	()Z	i	showsBottom
	m	()V	k	tick
	f	I	b	time
	f	Lzr;	c	DATA_BEAM_TARGET
	f	Lzr;	d	DATA_SHOW_BOTTOM
c	bos	net/minecraft/world/entity/boss/enderdragon/EnderDragon
	m	(Lbau;Lcga;)V	<init>	<init>
		p	2		world
	m	(IF)[D	a	getLatencyPos
		p	1		segmentNumber
		p	2		tickDelta
	m	(IILdpm;)Ldpo;	a	findPath
		p	1		from
		p	2		to
		p	3		pathNode
	m	(I[D[D)F	a	getHeadPartYOffset
		p	1		segmentOffset
		p	2		segment1
		p	3		segment2
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lboq;DDD)V	a	tickPart
		p	1		enderDragonPart
		p	2		dx
		p	4		dy
		p	6		dz
	m	(Lboq;Lazz;F)Z	a	hurt
		p	1		part
		p	2		source
		p	3		amount
	m	(Lbor;Lgt;Lazz;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
	m	(Ldpm;Ldpm;)Ldpo;	a	reconstructPath
		p	1		unused
		p	2		node
	m	(Ljava/util/List;)V	a	knockBack
		p	1		entities
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	aK	onFlap
	m	()Z	aL	isFlapping
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(Lbaj;Lbaq;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Ldvo;)Z	b	checkWalls
		p	1		box
	m	(Ljava/util/List;)V	b	hurt
		p	1		entities
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bl	isPickable
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbbf;)Z	c	canAttack
		p	1		target
	m	()Lajf;	cS	getSoundSource
	m	()Z	cl	canChangeDimensions
	m	()V	dM	tickDeath
	m	()V	dn	checkDespawn
	m	()F	eD	getSoundVolume
	m	()Lbpj;	fH	getPhaseManager
	m	()Lcya;	fI	getDragonFight
	m	()F	fJ	getHeadYOffset
	m	()V	fK	checkCrystals
	m	(Lazz;F)Z	g	reallyHurt
		p	1		source
		p	2		amount
	m	(D)F	i	rotWrap
		p	1		yawDegrees
	m	(Lbaq;)Z	l	canRide
		p	1		entity
	m	()Lbcf$a;	n	createAttributes
	m	()I	q	findClosestNode
	m	(DDD)I	q	findClosestNode
		p	1		x
		p	3		y
		p	5		z
	m	()Lajd;	r	getAmbientSound
	m	()[Lboq;	t	getSubEntities
	m	()V	w_	aiStep
	m	(F)Ldvt;	x	getHeadLookVector
		p	1		tickDelta
	f	Lzr;	b	DATA_PHASE
	f	F	bW	oFlapTime
	f	F	bX	flapTime
	f	Z	bY	inWall
	f	I	bZ	dragonDeathTime
	f	[[D	c	positions
	f	F	ca	yRotA
	f	Lbor;	cb	nearestCrystal
	f	Lorg/slf4j/Logger;	cc	LOGGER
	f	Lbli;	cd	CRYSTAL_DESTROY_TARGETING
	f	I	ce	GROWL_INTERVAL_MIN
	f	I	cf	GROWL_INTERVAL_MAX
	f	F	cg	SITTING_ALLOWED_DAMAGE_PERCENTAGE
	f	Ljava/lang/String;	ch	DRAGON_DEATH_TIME_KEY
	f	Ljava/lang/String;	ci	DRAGON_PHASE_KEY
	f	[Lboq;	cj	subEntities
	f	Lboq;	ck	neck
	f	Lboq;	cl	body
	f	Lboq;	cm	tail1
	f	Lboq;	cn	tail2
	f	Lboq;	co	tail3
	f	Lboq;	cp	wing1
	f	Lboq;	cq	wing2
	f	Lcya;	cr	dragonFight
	f	Lbpj;	cs	phaseManager
	f	I	ct	growlTime
	f	F	cu	sittingDamageReceived
	f	[Ldpm;	cv	nodes
	f	[I	cw	nodeAdjacency
	f	Ldpj;	cx	openSet
	f	I	d	posPointer
	f	Lboq;	e	head
c	bot	net/minecraft/world/entity/boss/enderdragon/package-info
c	bou	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lazz;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lbor;Lgt;Lazz;Lbtf;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Ldvt;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	f	Lbos;	a	dragon
c	bov	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lazz;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
c	bow	net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	(Ldvt;)V	a	setTarget
		p	1		pathTarget
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldvt;	g	getFlyTargetLocation
	m	()Lbpi;	i	getPhase
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	CHARGE_RECOVERY_TIME
	f	Ldvt;	d	targetLocation
	f	I	e	timeSinceCharge
c	box	net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldvt;	g	getFlyTargetLocation
	m	()Lbpi;	i	getPhase
	f	Ldvt;	b	targetLocation
	f	I	c	time
c	boy	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	(Lbor;Lgt;Lazz;Lbtf;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	(Lbtf;)V	a	strafePlayer
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldvt;	g	getFlyTargetLocation
	m	()Lbpi;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbli;	b	NEW_TARGET_TARGETING
	f	Ldpo;	c	currentPath
	f	Ldvt;	d	targetLocation
	f	Z	e	clockwise
c	boz	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldvt;	g	getFlyTargetLocation
	m	()Lbpi;	i	getPhase
	f	Ldvt;	b	targetLocation
c	bpa	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldvt;	g	getFlyTargetLocation
	m	()Lbpi;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbli;	b	NEAR_EGG_TARGETING
	f	Ldpo;	c	currentPath
	f	Ldvt;	d	targetLocation
c	bpb	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Ldvt;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbpi;	i	getPhase
	f	Ldvt;	b	targetLocation
c	bpc	net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	m	()Z	a	isSitting
	m	(Lazz;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lbor;Lgt;Lazz;Lbtf;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Ldvt;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbpi;	i	getPhase
c	bpd	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbpi;	i	getPhase
	f	I	b	ROAR_DURATION
	f	I	c	attackingTicks
c	bpe	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()Lbpi;	i	getPhase
	m	()V	j	resetFlameCount
	f	I	b	FLAME_DURATION
	f	I	c	SITTING_FLAME_ATTACKS_COUNT
	f	I	d	WARMUP_TIME
	f	I	e	flameTicks
	f	I	f	flameCount
	f	Lbap;	g	flame
c	bpf	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	(Lbos;Lbbf;)Z	a	lambda$new$0
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbpi;	i	getPhase
	f	I	b	SITTING_SCANNING_IDLE_TICKS
	f	I	c	SITTING_ATTACK_Y_VIEW_RANGE
	f	I	d	SITTING_ATTACK_VIEW_RANGE
	f	I	e	SITTING_CHARGE_VIEW_RANGE
	f	Lbli;	f	CHARGE_TARGETING
	f	Lbli;	g	scanTargeting
	f	I	h	scanningTime
c	bpg	net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	(Lbbf;)V	a	setTarget
		p	1		targetEntity
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldvt;	g	getFlyTargetLocation
	m	()Lbpi;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	FIREBALL_CHARGE_AMOUNT
	f	I	d	fireballCharge
	f	Ldpo;	e	currentPath
	f	Ldvt;	f	targetLocation
	f	Lbbf;	g	attackTarget
	f	Z	h	holdingPatternClockwise
c	bph	net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Ldvt;	g	getFlyTargetLocation
	m	()Lbpi;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Z	b	firstTick
	f	Ldpo;	c	currentPath
	f	Ldvt;	d	targetLocation
c	bpi	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	m	(ILjava/lang/Class;Ljava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		phaseClass
		p	3		name
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	(I)Lbpi;	a	getById
		p	0		id
	m	(Lbos;)Lbpc;	a	createInstance
		p	1		dragon
	m	(Ljava/lang/Class;Ljava/lang/String;)Lbpi;	a	create
		p	0		phaseClass
		p	1		name
	m	()I	b	getId
	m	()I	c	getCount
	f	Lbpi;	a	HOLDING_PATTERN
	f	Lbpi;	b	STRAFE_PLAYER
	f	Lbpi;	c	LANDING_APPROACH
	f	Lbpi;	d	LANDING
	f	Lbpi;	e	TAKEOFF
	f	Lbpi;	f	SITTING_FLAMING
	f	Lbpi;	g	SITTING_SCANNING
	f	Lbpi;	h	SITTING_ATTACKING
	f	Lbpi;	i	CHARGING_PLAYER
	f	Lbpi;	j	DYING
	f	Lbpi;	k	HOVERING
	f	[Lbpi;	l	phases
	f	Ljava/lang/Class;	m	instanceClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
c	bpj	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	m	(Lbos;)V	<init>	<init>
		p	1		dragon
	m	()Lbpc;	a	getCurrentPhase
	m	(Lbpi;)V	a	setPhase
		p	1		type
	m	(Lbpi;)Lbpc;	b	getPhase
		p	1		type
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbos;	b	dragon
	f	[Lbpc;	c	phases
	f	Lbpc;	d	currentPhase
c	bpk	net/minecraft/world/entity/boss/enderdragon/phases/package-info
c	bpl	net/minecraft/world/entity/boss/package-info
c	bpm	net/minecraft/world/entity/boss/wither/WitherBoss
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	customServerAiStep
	m	()Z	a	isPowered
	m	(FFF)F	a	rotlerp
		p	1		prevAngle
		p	2		desiredAngle
		p	3		maxDifference
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(I)F	a	getHeadYRot
		p	1		headIndex
	m	(IDDDZ)V	a	performRangedAttack
		p	1		headIndex
		p	2		targetX
		p	4		targetY
		p	6		targetZ
		p	8		charged
	m	(II)V	a	setAlternativeTarget
		p	1		headIndex
		p	2		id
	m	(ILbbf;)V	a	performRangedAttack
		p	1		headIndex
		p	2		target
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcur;Ldvt;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)F	b	getHeadXRot
		p	1		headIndex
	m	(Lbaj;Lbaq;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lrm;)V	b	setCustomName
		p	1		name
	m	(I)V	c	setInvulnerableTicks
		p	1		ticks
	m	(Lafp;)V	c	startSeenByPlayer
		p	1		player
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbaj;)Z	c	canBeAffected
		p	1		effect
	m	(Lcur;)Z	c	canDestroy
		p	0		block
	m	()Z	cl	canChangeDimensions
	m	(Lafp;)V	d	stopSeenByPlayer
		p	1		player
	m	()V	dn	checkDespawn
	m	()Lbbk;	ez	getMobType
	m	(Lbbf;)Z	k	lambda$static$0
		p	0		entity
	m	(Lbaq;)Z	l	canRide
		p	1		entity
	m	()V	n	makeInvulnerable
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	(I)I	s	getAlternativeTarget
		p	1		headIndex
	m	()I	t	getInvulnerableTicks
	m	(I)D	t	getHeadX
		p	1		headIndex
	m	()V	u	registerGoals
	m	(I)D	u	getHeadY
		p	1		headIndex
	m	(I)D	v	getHeadZ
		p	1		headIndex
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	Lzr;	b	DATA_TARGET_A
	f	Lzr;	bX	DATA_ID_INV
	f	I	bY	INVULNERABLE_TICKS
	f	[F	bZ	xRotHeads
	f	Lzr;	c	DATA_TARGET_B
	f	[F	ca	yRotHeads
	f	[F	cb	xRotOHeads
	f	[F	cc	yRotOHeads
	f	[I	cd	nextHeadUpdate
	f	[I	ce	idleHeadUpdates
	f	I	cf	destroyBlocksTick
	f	Lafl;	cg	bossEvent
	f	Ljava/util/function/Predicate;	ch	LIVING_ENTITY_SELECTOR
	f	Lbli;	ci	TARGETING_CONDITIONS
	f	Lzr;	d	DATA_TARGET_C
	f	Ljava/util/List;	e	DATA_TARGETS
c	bpm$a	net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	m	()Z	a	canUse
	f	Lbpm;	a	this$0
c	bpn	net/minecraft/world/entity/boss/wither/package-info
c	bpo	net/minecraft/world/entity/decoration/ArmorStand
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lhp;	A	getRightLegPose
	m	(Lbaq;)V	A	doPush
		p	1		entity
	m	()Z	C	hasPhysics
	m	()Lpj;	D	writePose
	m	()V	E	showBreakingParticles
	m	()V	F	updateInvisibilityStatus
	m	()V	G	playBrokenSound
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(BIZ)B	a	setBit
		p	1		value
		p	2		bitField
		p	3		set
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq;)Z	a	lambda$static$0
		p	0		entity
	m	(Lbav;Lcaa;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lbtf;Lbav;Lcaa;Lazl;)Z	a	swapItem
		p	1		player
		p	2		slot
		p	3		stack
		p	4		hand
	m	(Lbtf;Ldvt;Lazl;)Lazm;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Lhp;)V	a	setHeadPose
		p	1		angle
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Z)V	a	setSmall
		p	1		small
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lhp;)V	b	setBodyPose
		p	1		angle
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bF	getHandSlots
	m	()Ljava/lang/Iterable;	bG	getArmorSlots
	m	()Z	bl	isPickable
	m	()Z	bm	isPushable
	m	()D	bt	getMyRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbav;)Lcaa;	c	getItemBySlot
		p	1		slot
	m	(Lhp;)V	c	setLeftArmPose
		p	1		angle
	m	(Lpj;)V	c	readPose
		p	1		nbt
	m	()Z	cF	ignoreExplosion
	m	()Ldpe;	c_	getPistonPushReaction
	m	(Lhp;)V	d	setRightArmPose
		p	1		angle
	m	()Lcaa;	do	getPickResult
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbav;)Z	e	isDisabled
		p	1		slot
	m	(Lhp;)V	e	setLeftLegPose
		p	1		angle
	m	()V	eO	pushEntities
	m	()Z	eQ	isEffectiveAi
	m	()Lbba;	eT	getMainArm
	m	()Z	ea	canBeSeenByAnyone
	m	()Lbbf$a;	eo	getFallSounds
	m	(Lhp;)V	f	setRightLegPose
		p	1		angle
	m	()Z	ff	isAffectedByPotions
	m	()Z	fg	attackable
	m	(Lazz;)V	g	brokenByPlayer
		p	1		damageSource
	m	(Lazz;F)V	g	causeDamage
		p	1		damageSource
		p	2		amount
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(Lazz;)V	h	brokenByAnything
		p	1		damageSource
	m	(Ldvt;)Lbav;	i	getClickedSlot
		p	1		hitPos
	m	(F)Ldvt;	j	getLightProbePosition
		p	1		tickDelta
	m	(Z)V	j	setInvisible
		p	1		invisible
	m	()V	k	tick
	m	(F)V	l	setYHeadRot
		p	1		headYaw
	m	(F)V	m	setYBodyRot
		p	1		bodyYaw
	m	()Z	n	isSmall
	m	()Z	q	isShowArms
	m	()Z	r	isNoBasePlate
	m	(Lbaq;)Z	r	skipAttackInteraction
		p	1		attacker
	m	(Z)V	r	setShowArms
		p	1		showArms
	m	(Z)V	s	setNoBasePlate
		p	1		hideBasePlate
	m	()Z	t	isMarker
	m	(Z)V	t	setMarker
		p	1		marker
	m	()Lhp;	u	getHeadPose
	m	(Z)Lbar;	u	getDimensionsMarker
		p	1		marker
	m	()Lhp;	w	getBodyPose
	m	()Lhp;	x	getLeftArmPose
	m	()Lajd;	x_	getDeathSound
	m	()Lhp;	y	getRightArmPose
	m	()Z	y_	isBaby
	m	()Lhp;	z	getLeftLegPose
	m	()V	z_	refreshDimensions
	f	I	bE	CLIENT_FLAG_NO_BASEPLATE
	f	I	bF	CLIENT_FLAG_MARKER
	f	Lzr;	bG	DATA_CLIENT_FLAGS
	f	Lzr;	bH	DATA_HEAD_POSE
	f	I	b	WOBBLE_TIME
	f	Lzr;	bI	DATA_BODY_POSE
	f	Lzr;	bJ	DATA_LEFT_ARM_POSE
	f	Lzr;	bK	DATA_RIGHT_ARM_POSE
	f	Lzr;	bL	DATA_LEFT_LEG_POSE
	f	Lzr;	bM	DATA_RIGHT_LEG_POSE
	f	J	bN	lastHit
	f	Z	bO	ENABLE_ARMS
	f	Lhp;	bP	DEFAULT_HEAD_POSE
	f	Lhp;	bQ	DEFAULT_BODY_POSE
	f	Lhp;	bR	DEFAULT_LEFT_ARM_POSE
	f	Lhp;	bS	DEFAULT_RIGHT_ARM_POSE
	f	Lhp;	bT	DEFAULT_LEFT_LEG_POSE
	f	Lhp;	bU	DEFAULT_RIGHT_LEG_POSE
	f	Lbar;	bV	MARKER_DIMENSIONS
	f	Lbar;	bW	BABY_DIMENSIONS
	f	D	bX	FEET_OFFSET
	f	D	bY	CHEST_OFFSET
	f	D	bZ	LEGS_OFFSET
	f	I	c	DISABLE_TAKING_OFFSET
	f	D	ca	HEAD_OFFSET
	f	Ljava/util/function/Predicate;	cb	RIDABLE_MINECARTS
	f	Lhi;	cc	handItems
	f	Lhi;	cd	armorItems
	f	Z	ce	invisible
	f	I	cf	disabledSlots
	f	Lhp;	cg	headPose
	f	Lhp;	ch	bodyPose
	f	Lhp;	ci	leftArmPose
	f	Lhp;	cj	rightArmPose
	f	Lhp;	ck	leftLegPose
	f	Lhp;	cl	rightLegPose
	f	I	d	DISABLE_PUTTING_OFFSET
	f	I	e	CLIENT_FLAG_SMALL
	f	I	f	CLIENT_FLAG_SHOW_ARMS
c	bpo$1	net/minecraft/world/entity/decoration/ArmorStand$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
c	bpp	net/minecraft/world/entity/decoration/GlowItemFrame
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lgt;Lgy;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()Lajd;	h	getRemoveItemSound
	m	()Lajd;	i	getBreakSound
	m	()Lajd;	j	getPlaceSound
	m	()Lajd;	l	getAddItemSound
	m	()Lajd;	n	getRotateItemSound
	m	()Lcaa;	o	getFrameItemStack
c	bpq	net/minecraft/world/entity/decoration/HangingEntity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbau;Lcga;Lgt;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
	m	(I)D	a	offs
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq;)V	a	dropItem
		p	1		entity
	m	(Lbbl;Ldvt;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lcaa;F)Lbpy;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Lcnk;)F	a	mirror
		p	1		mirror
	m	(Lcoz;)F	a	rotate
		p	1		rotation
	m	(Lgy;)V	a	setDirection
		p	1		facing
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbaq;)Z	b	lambda$static$0
		p	0		entity
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bl	isPickable
	m	()Z	bn	repositionEntityAfterLoad
	m	()Lgy;	cw	getDirection
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(DDD)V	i	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()V	k	tick
	m	()V	q	recalculateBoundingBox
	m	()Z	r	survives
	m	(Lbaq;)Z	r	skipAttackInteraction
		p	1		attacker
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	m	()Lgt;	w	getPos
	m	()V	z_	refreshDimensions
	f	Ljava/util/function/Predicate;	b	HANGING_ENTITY
	f	Lgt;	c	pos
	f	Lgy;	d	direction
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	I	f	checkInterval
c	bpq$1	net/minecraft/world/entity/decoration/HangingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	bpr	net/minecraft/world/entity/decoration/ItemFrame
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbau;Lcga;Lgt;Lgy;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
		p	4		facing
	m	(Lcga;Lgt;Lgy;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()I	A	getRotation
	m	()I	C	getAnalogOutput
	m	()Lso;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(I)V	a	setRotation
		p	1		value
	m	(IZ)V	a	setRotation
		p	1		value
		p	2		updateComparators
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq;)V	a	dropItem
		p	1		entity
	m	(Lbbl;Ldvt;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbbr;Lbar;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lcaa;)V	a	setItem
		p	1		stack
	m	(Lcaa;Z)V	a	setItem
		p	1		value
		p	2		update
	m	(Lgy;)V	a	setDirection
		p	1		facing
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	a_	defineSynchedData
	m	()V	ag	kill
	m	(I)V	b	lambda$removeFramedMap$0
	m	(Lbaq;Z)V	b	dropItem
		p	1		entity
		p	2		alwaysDrop
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	by	getPickRadius
	m	(Lcaa;)V	c	removeFramedMap
	m	(Lcaa;)V	d	onItemChanged
		p	1		stack
	m	()Lcaa;	do	getPickResult
	m	()F	ds	getVisualRotationYInDegrees
	m	()Lajd;	h	getRemoveItemSound
	m	()Lajd;	i	getBreakSound
	m	(DDD)V	i	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()Lajd;	j	getPlaceSound
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	()Lajd;	l	getAddItemSound
	m	()Lajd;	n	getRotateItemSound
	m	()Lcaa;	o	getFrameItemStack
	m	()V	q	recalculateBoundingBox
	m	()Z	r	survives
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	m	()Lcaa;	x	getItem
	m	()Ljava/util/OptionalInt;	y	getFramedMapId
	m	()Z	z	hasFramedMap
	f	Lzr;	ao	DATA_ITEM
	f	Lzr;	ap	DATA_ROTATION
	f	F	aq	dropChance
	f	Z	ar	fixed
	f	I	e	NUM_ROTATIONS
	f	Lorg/slf4j/Logger;	f	LOGGER
c	bpr$1	net/minecraft/world/entity/decoration/ItemFrame$1
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
	f	Lbpr;	b	this$0
c	bpr$2	net/minecraft/world/entity/decoration/ItemFrame$2
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	bps	net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	()Lso;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbaq;)V	a	dropItem
		p	1		entity
	m	(Lbbr;Lbar;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lgy;)V	a	setDirection
		p	1		facing
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcga;Lgt;)Lbps;	b	getOrCreateKnot
		p	0		world
		p	1		pos
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcaa;	do	getPickResult
	m	(F)Ldvt;	n	getRopeHoldPosition
		p	1		delta
	m	()V	q	recalculateBoundingBox
	m	()Z	r	survives
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	f	D	e	OFFSET_Y
c	bpt	net/minecraft/world/entity/decoration/Painting
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lgy;Lhc;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		direction
		p	4		variant
	m	()Lso;	S	getAddEntityPacket
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(ILhc;)Z	a	lambda$create$1
		p	1		variant
	m	(Lbaq;)V	a	dropItem
		p	1		entity
	m	(Lbpt;Lhc;)Z	a	lambda$create$0
		p	1		variant
	m	(Lcga;Lgt;Lgy;)Ljava/util/Optional;	a	create
		p	0		world
		p	1		pos
		p	2		facing
	m	(Lhc;)V	a	setVariant
		p	1		variant
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	a_	defineSynchedData
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(Lhc;)I	b	variantArea
		p	0		variant
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ldvt;	da	trackingPosition
	m	()Lcaa;	do	getPickResult
	m	()Lhc;	h	getVariant
	m	()Lhc;	i	getDefaultVariant
	m	()I	s	getWidth
	m	()I	t	getHeight
	m	()V	u	playPlacementSound
	f	Lzr;	e	DATA_PAINTING_VARIANT_ID
	f	Laai;	f	DEFAULT_VARIANT
c	bpu	net/minecraft/world/entity/decoration/PaintingVariant
	m	(II)V	<init>	<init>
		p	1		width
		p	2		height
	m	()I	a	getWidth
	m	()I	b	getHeight
	f	I	a	width
	f	I	b	height
c	bpv	net/minecraft/world/entity/decoration/PaintingVariants
	m	(Lhm;)Lbpu;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laai;	a	create
		p	0		id
	f	Laai;	A	EARTH
	f	Laai;	B	WIND
	f	Laai;	C	WATER
	f	Laai;	D	FIRE
	f	Laai;	a	KEBAB
	f	Laai;	b	AZTEC
	f	Laai;	c	ALBAN
	f	Laai;	d	AZTEC2
	f	Laai;	e	BOMB
	f	Laai;	f	PLANT
	f	Laai;	g	WASTELAND
	f	Laai;	h	POOL
	f	Laai;	i	COURBET
	f	Laai;	j	SEA
	f	Laai;	k	SUNSET
	f	Laai;	l	CREEBET
	f	Laai;	m	WANDERER
	f	Laai;	n	GRAHAM
	f	Laai;	o	MATCH
	f	Laai;	p	BUST
	f	Laai;	q	STAGE
	f	Laai;	r	VOID
	f	Laai;	s	SKULL_AND_ROSES
	f	Laai;	t	WITHER
	f	Laai;	u	FIGHTERS
	f	Laai;	v	POINTER
	f	Laai;	w	PIGSCENE
	f	Laai;	x	BURNING_SKULL
	f	Laai;	y	SKELETON
	f	Laai;	z	DONKEY_KONG
c	bpw	net/minecraft/world/entity/decoration/package-info
c	bpx	net/minecraft/world/entity/item/FallingBlockEntity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDDLcur;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		block
	m	()Lso;	S	getAddEntityPacket
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lazz;FLbaq;)V	a	lambda$causeFallDamage$0
		p	2		entity
	m	(Lcga;Lgt;Lcur;)Lbpx;	a	fall
		p	0		world
		p	1		pos
		p	2		state
	m	(Lciw;Lgt;)V	a	callOnBrokenAfterFall
		p	1		block
		p	2		pos
	m	(Lgt;)V	a	setStartPos
		p	1		pos
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lr;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(FI)V	b	setHurtsEntities
		p	1		fallHurtAmount
		p	2		fallHurtMax
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bl	isPickable
	m	()Z	cG	onlyOpCanSetNbt
	m	()Z	ci	isAttackable
	m	()Z	co	displayFireAnimation
	m	()Lgt;	h	getStartPos
	m	()Lcur;	i	getBlockState
	m	()V	k	tick
	f	Lcur;	ao	blockState
	f	Z	ap	cancelDrop
	f	Z	aq	hurtEntities
	f	I	ar	fallDamageMax
	f	F	as	fallDamagePerDistance
	f	I	b	time
	f	Z	c	dropItem
	f	Lpj;	d	blockData
	f	Lzr;	e	DATA_START_POS
	f	Lorg/slf4j/Logger;	f	LOGGER
c	bpy	net/minecraft/world/entity/item/ItemEntity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbpy;)V	<init>	<init>
		p	1		entity
	m	(Lcga;DDDLcaa;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Lcga;DDDLcaa;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	()Z	A	isMergable
	m	()Lso;	S	getAddEntityPacket
	m	()Lrm;	X	getName
	m	(F)F	a	getSpin
		p	1		tickDelta
	m	(I)V	a	setPickUpDelay
		p	1		pickupDelay
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbpy;)V	a	tryToMerge
		p	1		other
	m	(Lbpy;Lcaa;Lbpy;Lcaa;)V	a	merge
		p	0		targetEntity
		p	1		targetStack
		p	2		sourceEntity
		p	3		sourceStack
	m	(Lbpy;Lcaa;Lcaa;)V	a	merge
		p	0		targetEntity
		p	1		stack1
		p	2		stack2
	m	(Lcaa;)V	a	setItem
		p	1		stack
	m	(Lcaa;Lcaa;)Z	a	areMergable
		p	0		stack1
		p	1		stack2
	m	(Lcaa;Lcaa;I)Lcaa;	a	merge
		p	0		stack1
		p	1		stack2
		p	2		maxCount
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()Lbaq$b;	aO	getMovementEmission
	m	()Z	aP	dampensVibrations
	m	()Lbaq;	aQ	getResponsibleEntity
	m	()Z	aR	fireImmune
	m	()V	a_	defineSynchedData
	m	(Lafo;)Lbaq;	b	changeDimension
		p	1		destination
	m	(Lbpy;)Z	b	lambda$mergeWithNeighbours$0
		p	1		otherItemEntity
	m	(Ljava/util/UUID;)V	b	setOwner
		p	1		owner
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	b_	playerTouch
		p	1		player
	m	(Ljava/util/UUID;)V	c	setThrower
		p	1		thrower
	m	()Lajf;	cS	getSoundSource
	m	()Z	ci	isAttackable
	m	()F	ds	getVisualRotationYInDegrees
	m	()Lcaa;	h	getItem
	m	()Ljava/util/UUID;	i	getOwner
	m	()Ljava/util/UUID;	j	getThrower
	m	()V	k	tick
	m	()I	l	getAge
	m	()V	n	setDefaultPickUpDelay
	m	()V	o	setNoPickUpDelay
	m	()V	q	setNeverPickUp
	m	()Z	r	hasPickUpDelay
	m	()V	s	setUnlimitedLifetime
	m	()V	t	setExtendedLifetime
	m	()V	u	makeFakeItem
	m	()Lbpy;	w	copy
	m	()V	x	setUnderwaterMovement
	m	()V	y	setUnderLavaMovement
	m	()V	z	mergeWithNeighbours
	f	I	ao	age
	f	I	ap	pickupDelay
	f	I	aq	health
	f	Ljava/util/UUID;	ar	thrower
	f	Ljava/util/UUID;	as	owner
	f	F	b	bobOffs
	f	Lzr;	c	DATA_ITEM
	f	I	d	LIFETIME
	f	I	e	INFINITE_PICKUP_DELAY
	f	I	f	INFINITE_LIFETIME
c	bpz	net/minecraft/world/entity/item/PrimedTnt
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDDLbbf;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		igniter
	m	()Lso;	S	getAddEntityPacket
	m	(I)V	a	setFuse
		p	1		fuse
	m	(Lbbr;Lbar;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bl	isPickable
	m	()Lbbf;	h	getOwner
	m	()I	i	getFuse
	m	()V	j	explode
	m	()V	k	tick
	f	Lzr;	b	DATA_FUSE_ID
	f	I	c	DEFAULT_FUSE_TIME
	f	Lbbf;	d	owner
c	bqa	net/minecraft/world/entity/item/package-info
c	bqb	net/minecraft/world/entity/monster/AbstractIllager
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbbf;)Z	c	canAttack
		p	1		target
	m	()Lbbk;	ez	getMobType
	m	()Lbqb$a;	n	getArmPose
	m	()V	u	registerGoals
c	bqb$a	net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	m	()[Lbqb$a;	a	$values
	f	Lbqb$a;	a	CROSSED
	f	Lbqb$a;	b	ATTACKING
	f	Lbqb$a;	c	SPELLCASTING
	f	Lbqb$a;	d	BOW_AND_ARROW
	f	Lbqb$a;	e	CROSSBOW_HOLD
	f	Lbqb$a;	f	CROSSBOW_CHARGE
	f	Lbqb$a;	g	CELEBRATING
	f	Lbqb$a;	h	NEUTRAL
	f	[Lbqb$a;	i	$VALUES
c	bqb$b	net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	m	(Lbqb;Lbun;)V	<init>	<init>
		p	2		raider
	m	()Z	a	canUse
	f	Lbqb;	a	this$0
c	bqc	net/minecraft/world/entity/monster/AbstractSkeleton
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbav;Lcaa;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcap;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcaa;F)Lbtl;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()V	bs	rideTick
	m	()D	bt	getMyRidingOffset
	m	()Lbbk;	ez	getMobType
	m	()Z	fK	isShaking
	m	()Lbcf$a;	n	createAttributes
	m	()Lajd;	q	getStepSound
	m	()V	t	reassessWeaponGoal
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	f	Lbir;	b	bowGoal
	f	Lbic;	c	meleeGoal
c	bqc$1	net/minecraft/world/entity/monster/AbstractSkeleton$1
	m	(Lbqc;Lbbo;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()V	c	start
	m	()V	d	stop
	f	Lbqc;	b	this$0
c	bqd	net/minecraft/world/entity/monster/Blaze
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	customServerAiStep
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	()V	a_	defineSynchedData
	m	()Z	bI	isOnFire
	m	()F	bh	getLightLevelDependentMagicValue
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Z	eM	isSensitiveToWater
	m	()Lbcf$a;	n	createAttributes
	m	()Z	q	isCharged
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(Z)V	v	setCharged
		p	1		fireActive
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	F	b	allowedHeightOffset
	f	I	c	nextHeightOffsetChangeTick
	f	Lzr;	d	DATA_FLAGS_ID
c	bqd$a	net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	m	(Lbqd;)V	<init>	<init>
		p	1		blaze
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()D	h	getFollowDistance
	f	Lbqd;	a	blaze
	f	I	b	attackStep
	f	I	c	attackTime
	f	I	d	lastSeen
c	bqe	net/minecraft/world/entity/monster/CaveSpider
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()Lbcf$a;	n	createCaveSpider
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
c	bqf	net/minecraft/world/entity/monster/Creeper
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	isPowered
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(I)V	a	setSwellDir
		p	1		fuseSpeed
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lazl;Lbtf;)V	a	lambda$mobInteract$0
		p	1		player
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()I	cm	getMaxFallDistance
	m	()V	fK	ignite
	m	()Z	fL	canDropMobsSkull
	m	()V	fM	increaseDroppedSkulls
	m	()V	fN	explodeCreeper
	m	()V	fQ	spawnLingeringCloud
	m	(Lbbf;)V	h	setTarget
		p	1		target
	m	()V	k	tick
	m	()Lbcf$a;	n	createAttributes
	m	()I	q	getSwellDir
	m	()Z	t	isIgnited
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getSwelling
		p	1		timeDelta
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	Lzr;	b	DATA_SWELL_DIR
	f	I	bX	swell
	f	I	bY	maxSwell
	f	I	bZ	explosionRadius
	f	Lzr;	c	DATA_IS_POWERED
	f	I	ca	droppedSkulls
	f	Lzr;	d	DATA_IS_IGNITED
	f	I	e	oldSwell
c	bqg	net/minecraft/world/entity/monster/CrossbowAttackMob
	m	()Lbbf;	G	getTarget
	m	()V	a	onCrossbowAttackPerformed
	m	(Lbbf;Lbbf;Lbtx;FF)V	a	shootCrossbowProjectile
		p	1		entity
		p	2		target
		p	3		projectile
		p	4		multishotSpray
		p	5		speed
	m	(Lbbf;Lcaa;Lbtx;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lbbf;Ldvt;F)Lk;	a	getProjectileShotVector
		p	1		entity
		p	2		positionDelta
		p	3		multishotSpray
	m	(Lbbf;F)V	b	performCrossbowAttack
		p	1		entity
		p	2		speed
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
c	bqh	net/minecraft/world/entity/monster/Drowned
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	a	checkDrownedSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbqh;)Z	a	access$100
	m	(Lbqh;Lbkf;)Lbkf;	a	access$002
	m	(Lcaa;Lcaa;)Z	a	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Lcgb;Lgt;)Z	a	isDeepEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	()Lajd;	aG	getSwimSound
	m	()V	aY	updateSwimming
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Z	cs	isPushedByFluid
	m	()Lcaa;	fK	getSkull
	m	()Z	fL	convertsInWater
	m	()Z	fM	closeToNextPos
	m	()Z	fU	wantsToSwim
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	(Lbbf;)Z	k	okTarget
		p	1		target
	m	()V	n	addBehaviourGoals
	m	()Z	q	supportsBreakDoorGoal
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getStepSound
	m	(Z)V	v	setSearchingForLand
		p	1		targetingUnderwater
	m	()Lajd;	x_	getDeathSound
	f	F	b	NAUTILUS_SHELL_CHANCE
	f	Lbkh;	c	waterNavigation
	f	Z	ca	searchingForLand
	f	Lbke;	d	groundNavigation
c	bqh$a	net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	m	(Lbqh;DZ)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbqh;	b	drowned
c	bqh$b	net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	m	(Lbqh;D)V	<init>	<init>
		p	1		drowned
		p	2		speed
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbqh;	g	drowned
c	bqh$c	net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	m	(Lbbo;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Ldvt;	h	getWaterPos
	f	Lbbo;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcga;	f	level
c	bqh$d	net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	m	(Lbqh;)V	<init>	<init>
		p	1		drowned
	m	()V	a	tick
	f	Lbqh;	l	drowned
c	bqh$e	net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	m	(Lbqh;DI)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		minY
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqh;	a	drowned
	f	D	b	speedModifier
	f	I	c	seaLevel
	f	Z	d	stuck
c	bqh$f	net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	m	(Lbqx;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbqh;	a	drowned
c	bqi	net/minecraft/world/entity/monster/ElderGuardian
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	customServerAiStep
	m	(Lafp;)V	b	lambda$customServerAiStep$0
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbcf$a;	n	createAttributes
	m	()I	q	getAttackDuration
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getFlopSound
	m	()Lajd;	x_	getDeathSound
	f	F	b	ELDER_SIZE_SCALE
	f	I	bX	EFFECT_RADIUS
	f	I	bY	EFFECT_DURATION
	f	I	bZ	EFFECT_AMPLIFIER
	f	I	ca	EFFECT_DISPLAY_LIMIT
	f	I	e	EFFECT_INTERVAL
c	bqj	net/minecraft/world/entity/monster/EnderMan
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	P	requiresCustomPersistence
	m	()V	T	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lazz;Lbui;F)Z	a	hurtWithCleanWater
		p	1		source
		p	2		potion
		p	3		amount
	m	(Lbaq;)Z	a	teleportTowards
		p	1		entity
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lcur;)V	c	setCarriedBlock
		p	1		state
	m	()Z	eM	isSensitiveToWater
	m	(Lbtf;)Z	f	isLookingAtMe
		p	1		player
	m	()Lcur;	fK	getCarriedBlock
	m	()Z	fL	isCreepy
	m	()Z	fM	hasBeenStaredAt
	m	()V	fN	setBeingStaredAt
	m	(Lbbf;)V	h	setTarget
		p	1		target
	m	()Lbcf$a;	n	createAttributes
	m	()V	q	playStareSound
	m	(DDD)Z	q	teleport
		p	1		x
		p	3		y
		p	5		z
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	teleport
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	I	bX	MIN_DEAGGRESSION_TIME
	f	Lzr;	bY	DATA_CARRY_STATE
	f	Lzr;	bZ	DATA_CREEPY
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	Lzr;	ca	DATA_STARED_AT
	f	I	cb	lastStareSound
	f	I	cc	targetChangeTime
	f	Layx;	cd	PERSISTENT_ANGER_TIME
	f	I	ce	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cf	persistentAngerTarget
	f	Lbce;	d	SPEED_MODIFIER_ATTACKING
	f	I	e	DELAY_BETWEEN_CREEPY_STARE_SOUND
c	bqj$a	net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	m	(Lbqj;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbqj;	a	enderman
	f	Lbbf;	b	target
c	bqj$b	net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	m	(Lbqj;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	(Lcga;Lgt;Lcur;Lcur;Lcur;Lgt;)Z	a	canPlaceBlock
		p	1		world
		p	2		posAbove
		p	3		carriedState
		p	4		stateAbove
		p	5		state
		p	6		pos
	m	()V	e	tick
	f	Lbqj;	a	enderman
c	bqj$c	net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	m	(Lbqj;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		enderman
		p	2		targetPredicate
	m	()Z	a	canUse
	m	(Lbqj;Lbbf;)Z	a	lambda$new$0
		p	1		playerEntity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqj;	i	enderman
	f	Lbtf;	j	pendingTarget
	f	I	k	aggroTime
	f	I	l	teleportTime
	f	Lbli;	m	startAggroTargetConditions
	f	Lbli;	n	continueAggroTargetConditions
c	bqj$d	net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	m	(Lbqj;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbqj;	a	enderman
c	bqk	net/minecraft/world/entity/monster/Endermite
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbaq$b;	aO	getMovementEmission
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkEndermiteSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bt	getMyRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbbk;	ez	getMobType
	m	()V	k	tick
	m	(F)V	m	setYBodyRot
		p	1		bodyYaw
	m	()Lbcf$a;	n	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	I	b	MAX_LIFE
	f	I	c	life
c	bql	net/minecraft/world/entity/monster/Enemy
	f	I	c_	XP_REWARD_NONE
	f	I	d_	XP_REWARD_SMALL
	f	I	e_	XP_REWARD_MEDIUM
	f	I	f_	XP_REWARD_LARGE
	f	I	g_	XP_REWARD_HUGE
	f	I	h_	XP_REWARD_BOSS
c	bqm	net/minecraft/world/entity/monster/Evoker
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lajd;	M_	getCelebrateSound
	m	()V	T	customServerAiStep
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbnd;)V	a	setWololoTarget
		p	1		wololoTarget
	m	(Lbqm;)Lalu;	a	access$000
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbqm;)Lalu;	b	access$100
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbqm;)Lalu;	c	access$200
	m	(Lbqm;)Lalu;	d	access$300
	m	(Lbqm;)Lalu;	e	access$400
	m	()Lajd;	fK	getCastingSoundEvent
	m	()Lbnd;	gd	getWololoTarget
	m	(Lbaq;)Z	p	isAlliedTo
		p	1		other
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	f	Lbnd;	e	wololoTarget
c	bqm$a	net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	m	(DDDDFI)V	a	createSpellEntity
		p	1		x
		p	3		z
		p	5		maxY
		p	7		y
		p	9		yaw
		p	10		warmup
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lajd;	l	getSpellPrepareSound
	m	()Lbrd$a;	m	getSpell
	f	Lbqm;	a	this$0
c	bqm$b	net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	m	()V	e	tick
	f	Lbqm;	a	this$0
c	bqm$c	net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lajd;	l	getSpellPrepareSound
	m	()Lbrd$a;	m	getSpell
	f	Lbqm;	a	this$0
	f	Lbli;	e	vexCountTargeting
c	bqm$d	net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	m	()Z	a	canUse
	m	(Lbbf;)Z	a	lambda$new$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lajd;	l	getSpellPrepareSound
	m	()Lbrd$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	Lbqm;	a	this$0
	f	Lbli;	e	wololoTargeting
c	bqn	net/minecraft/world/entity/monster/Ghast
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Q	shouldDespawnInPeaceful
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lazz;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkGhastSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lajf;	cS	getSoundSource
	m	()F	eD	getSoundVolume
	m	()I	fp	getMaxSpawnClusterSize
	m	(Lazz;)Z	g	isReflectedFireball
		p	0		damageSource
	m	(Lbbf;)Z	k	lambda$registerGoals$0
		p	1		entity
	m	()Z	n	isCharging
	m	()I	q	getExplosionPower
	m	()Lajd;	r	getAmbientSound
	m	()Lbcf$a;	t	createAttributes
	m	()V	u	registerGoals
	m	(Z)V	v	setCharging
		p	1		shooting
	m	()Lajd;	x_	getDeathSound
	f	Lzr;	b	DATA_IS_CHARGING
	f	I	c	explosionPower
c	bqn$a	net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	m	(Lbqn;)V	<init>	<init>
		p	1		ghast
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbqn;	a	ghast
c	bqn$b	net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	m	(Lbqn;)V	<init>	<init>
		p	1		ghast
	m	()V	a	tick
	m	(Ldvt;I)Z	a	canReach
		p	1		direction
		p	2		steps
	f	Lbqn;	l	ghast
	f	I	m	floatDuration
c	bqn$c	net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	m	(Lbqn;)V	<init>	<init>
		p	1		ghast
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	chargeTime
	f	Lbqn;	b	ghast
c	bqn$d	net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	m	(Lbqn;)V	<init>	<init>
		p	1		ghast
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbqn;	a	ghast
c	bqo	net/minecraft/world/entity/monster/Giant
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()Lbcf$a;	n	createAttributes
c	bqp	net/minecraft/world/entity/monster/Guardian
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	A	getAttackAnimationScale
		p	1		tickDelta
	m	()I	J	getAmbientSoundInterval
	m	()I	U	getMaxHeadXRot
	m	(I)V	a	setActiveAttackTarget
		p	1		entityId
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkGuardianSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Z	dC	canBreatheUnderwater
	m	()Lbbk;	ez	getMobType
	m	()Lbcf$a;	fK	createAttributes
	m	()Z	fL	isMoving
	m	()Z	fM	hasActiveAttackTarget
	m	()Lbbf;	fN	getActiveAttackTarget
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	()I	q	getAttackDuration
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getFlopSound
	m	()V	u	registerGoals
	m	(Z)V	v	setMoving
		p	1		retracted
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getTailAnimation
		p	1		tickDelta
	m	(F)F	z	getSpikesAnimation
		p	1		tickDelta
	f	Lzr;	b	DATA_ID_MOVING
	f	F	bX	clientSideTailAnimation
	f	F	bY	clientSideTailAnimationO
	f	F	bZ	clientSideTailAnimationSpeed
	f	I	c	ATTACK_TIME
	f	F	ca	clientSideSpikesAnimation
	f	F	cb	clientSideSpikesAnimationO
	f	Lbbf;	cc	clientSideCachedAttackTarget
	f	I	cd	clientSideAttackTime
	f	Z	ce	clientSideTouchedGround
	f	Lbio;	d	randomStrollGoal
	f	Lzr;	e	DATA_ID_ATTACK_TARGET
c	bqp$a	net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	m	(Lbqp;)V	<init>	<init>
		p	1		guardian
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqp;	a	guardian
	f	I	b	attackTime
	f	Z	c	elder
c	bqp$b	net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	m	(Lbqp;)V	<init>	<init>
		p	1		owner
	m	(Lbbf;)Z	a	test
	f	Lbqp;	a	guardian
c	bqp$c	net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	m	(Lbqp;)V	<init>	<init>
		p	1		guardian
	m	()V	a	tick
	f	Lbqp;	l	guardian
c	bqq	net/minecraft/world/entity/monster/Husk
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	L_	isSunSensitive
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	a	checkHuskSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lcaa;	fK	getSkull
	m	()Z	fL	convertsInWater
	m	()V	fN	doUnderWaterConversion
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getStepSound
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
c	bqr	net/minecraft/world/entity/monster/Illusioner
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lajd;	M_	getCelebrateSound
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	()V	a_	defineSynchedData
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Ldvo;	cA	getBoundingBoxForCulling
	m	()Lajd;	fK	getCastingSoundEvent
	m	()Lbqb$a;	n	getArmPose
	m	(Lbaq;)Z	p	isAlliedTo
		p	1		other
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(F)[Ldvt;	y	getIllusionOffsets
	f	I	bX	ILLUSION_TRANSITION_TICKS
	f	I	bY	ILLUSION_SPREAD
	f	I	bZ	clientSideIllusionTicks
	f	[[Ldvt;	ca	clientSideIllusionOffsets
	f	I	e	NUM_ILLUSIONS
c	bqr$a	net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lajd;	l	getSpellPrepareSound
	m	()Lbrd$a;	m	getSpell
	f	Lbqr;	a	this$0
	f	I	e	lastTargetId
c	bqr$b	net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lajd;	l	getSpellPrepareSound
	m	()Lbrd$a;	m	getSpell
	f	Lbqr;	a	this$0
c	bqs	net/minecraft/world/entity/monster/MagmaCube
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkMagmaCubeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Z	bI	isOnFire
	m	()F	bh	getLightLevelDependentMagicValue
	m	(Lakh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()V	eI	jumpFromGround
	m	()V	fH	decreaseSquish
	m	()Z	fI	isDealsDamage
	m	()F	fJ	getAttackDamage
	m	()Lajd;	fK	getSquishSound
	m	()Lajd;	fL	getJumpSound
	m	()Lbcf$a;	n	createAttributes
	m	()Lim;	q	getParticleType
	m	()I	t	getJumpDelay
	m	()Lajd;	x_	getDeathSound
c	bqt	net/minecraft/world/entity/monster/Monster
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Q	shouldDespawnInPeaceful
	m	(Lcgp;Lgt;Lalu;)Z	a	isDarkEnoughToSpawn
		p	0		world
		p	1		pos
		p	2		random
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lajd;	aG	getSwimSound
	m	()Lajd;	aH	getSwimSplashSound
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	b	checkMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkAnyLightMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lajf;	cS	getSoundSource
	m	()Z	dN	shouldDropExperience
	m	()Z	dO	shouldDropLoot
	m	(Lbtf;)Z	e	isPreventingPlayerRest
		p	1		player
	m	()Lbbf$a;	eo	getFallSounds
	m	()V	fO	updateNoActionTime
	m	()Lbcf$a;	fP	createMonsterAttributes
	m	(Lcaa;)Lcaa;	h	getProjectile
		p	1		stack
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
c	bqu	net/minecraft/world/entity/monster/PatrollingMonster
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkPatrollingMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bt	getMyRidingOffset
	m	()Z	fL	canBeLeader
	m	()Lgt;	fM	getPatrolTarget
	m	()Z	fN	hasPatrolTarget
	m	()Z	fQ	isPatrolLeader
	m	()Z	fR	canJoinPatrol
	m	()V	fS	findPatrolTarget
	m	()Z	fT	isPatrolling
	m	(Lgt;)V	g	setPatrolTarget
		p	1		targetPos
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	u	registerGoals
	m	(Z)V	v	setPatrolLeader
		p	1		patrolLeader
	m	(Z)V	w	setPatrolling
		p	1		patrolling
	f	Lgt;	b	patrolTarget
	f	Z	c	patrolLeader
	f	Z	d	patrolling
c	bqu$a	net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	m	(Lbqu;DD)V	<init>	<init>
		p	1		entity
		p	2		leaderSpeed
		p	4		followSpeed
	m	()Z	a	canUse
	m	(Lbqu;)Z	a	lambda$findPatrolCompanions$0
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/List;	h	findPatrolCompanions
	m	()Z	i	moveRandomly
	f	I	a	NAVIGATION_FAILED_COOLDOWN
	f	Lbqu;	b	mob
	f	D	c	speedModifier
	f	D	d	leaderSpeedModifier
	f	J	e	cooldownUntil
c	bqv	net/minecraft/world/entity/monster/Phantom
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Q	shouldDespawnInPeaceful
	m	()V	T	customServerAiStep
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(I)V	a	setPhantomSize
		p	1		size
	m	(Lbau;)Z	a	canAttackType
		p	1		type
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lbqv;)Lalu;	a	access$000
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()Z	aL	isFlapping
	m	()V	a_	defineSynchedData
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbqv;)Lalu;	b	access$100
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbqv;)Lalu;	c	access$200
	m	()Lajf;	cS	getSoundSource
	m	(Lbqv;)Lalu;	d	access$300
	m	(Lbqv;)Lalu;	e	access$400
	m	()F	eD	getSoundVolume
	m	()Lbbk;	ez	getMobType
	m	(Lbqv;)Lalu;	f	access$500
	m	(Lbqv;)Lalu;	g	access$600
	m	(Lbqv;)Lalu;	h	access$700
	m	(Lbqv;)Lalu;	i	access$800
	m	(Lbqv;)Lalu;	j	access$900
	m	()V	k	tick
	m	(Lbqv;)Lalu;	k	access$1000
	m	(Lbqv;)Lalu;	l	access$1100
	m	()I	n	getPhantomSize
	m	()I	q	getUniqueFlapTickOffset
	m	()Lajd;	r	getAmbientSound
	m	()V	t	updatePhantomSizeInfo
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	()Lbgq;	y	createBodyControl
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lgt;	bW	anchorPoint
	f	Lbqv$a;	bX	attackPhase
	f	I	c	TICKS_PER_FLAP
	f	Lzr;	d	ID_SIZE
	f	Ldvt;	e	moveTargetPoint
c	bqv$a	net/minecraft/world/entity/monster/Phantom$AttackPhase
	m	()[Lbqv$a;	a	$values
	f	Lbqv$a;	a	CIRCLE
	f	Lbqv$a;	b	SWOOP
	f	[Lbqv$a;	c	$VALUES
c	bqv$b	net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbqv;	a	this$0
	f	Lbli;	b	attackTargeting
	f	I	c	nextScanTick
c	bqv$c	net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	setAnchorAboveTarget
	f	Lbqv;	a	this$0
	f	I	b	nextSweepTick
c	bqv$d	net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	m	(Lbqv;Lbbh;)V	<init>	<init>
		p	2		entity
	m	()V	a	clientTick
	f	Lbqv;	a	this$0
c	bqv$e	net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	i	selectNext
	f	Lbqv;	a	this$0
	f	F	c	angle
	f	F	d	distance
	f	F	e	height
	f	F	f	clockwise
c	bqv$f	net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	m	(Lbqv;Lbbh;)V	<init>	<init>
		p	2		entity
	m	()V	a	tick
	f	Lbqv;	h	this$0
c	bqv$g	net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	m	(Lbqv;Lbbh;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lbqv;	l	this$0
	f	F	m	speed
c	bqv$h	net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	m	()Z	h	touchingTarget
	f	Lbqv;	b	this$0
c	bqv$i	net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqv;	a	this$0
	f	I	c	CAT_SEARCH_TICK_DELAY
	f	Z	d	isScaredOfCat
	f	I	e	catSearchTick
c	bqw	net/minecraft/world/entity/monster/Pillager
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lajd;	M_	getCelebrateSound
	m	()V	a	onCrossbowAttackPerformed
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lalu;F)V	a	enchantSpawnedWeapon
		p	1		random
		p	2		power
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbbf;Lcaa;Lbtx;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lcap;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Z	fK	isChargingCrossbow
	m	()I	fp	getMaxSpawnClusterSize
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	(Lcaa;)Z	m	wantsItem
		p	1		stack
	m	()Lbqb$a;	n	getArmPose
	m	(Lbaq;)Z	p	isAlliedTo
		p	1		other
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Lazr;	t	getInventory
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	f	Lzr;	b	IS_CHARGING_CROSSBOW
	f	I	bX	SLOT_OFFSET
	f	F	bY	CROSSBOW_POWER
	f	Lazr;	bZ	inventory
	f	I	e	INVENTORY_SIZE
c	bqx	net/minecraft/world/entity/monster/RangedAttackMob
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
c	bqy	net/minecraft/world/entity/monster/Ravager
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbaq;)Z	B	hasLineOfSight
		p	1		entity
	m	()V	M	updateControlFlags
	m	()Lajd;	M_	getCelebrateSound
	m	()I	V	getMaxHeadYRot
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbaq;)Z	a	canBeControlledBy
		p	1		entity
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbaq;)V	b	strongKnockback
		p	1		entity
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getPassengersRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbaq;)Z	c	lambda$static$0
		p	0		entity
	m	()Lbaq;	cH	getControllingPassenger
	m	(Lbbf;)V	e	blockedByShield
		p	1		target
	m	()Z	eF	isImmobile
	m	()I	fK	getStunnedTick
	m	()Z	fL	canBeLeader
	m	()I	fU	getRoarTick
	m	()V	fV	stunEffect
	m	()V	fW	roar
	m	(Lbbf;)Z	k	lambda$registerGoals$1
		p	0		entity
	m	()Lbcf$a;	n	createAttributes
	m	()I	q	getAttackTick
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	I	b	STUN_DURATION
	f	D	bX	BASE_MOVEMENT_SPEED
	f	D	bY	ATTACK_MOVEMENT_SPEED
	f	I	bZ	STUNNED_COLOR
	f	D	ca	STUNNED_COLOR_BLUE
	f	D	cb	STUNNED_COLOR_GREEN
	f	D	cc	STUNNED_COLOR_RED
	f	I	cd	ATTACK_DURATION
	f	I	ce	attackTick
	f	I	cf	stunnedTick
	f	I	cg	roarTick
	f	Ljava/util/function/Predicate;	e	NO_RAVAGER_AND_ALIVE
c	bqy$a	net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	m	(Lbqy;)V	<init>	<init>
		p	1		mob
	m	(Lbbf;)D	a	getAttackReachSqr
		p	1		entity
	f	Lbqy;	b	this$0
c	bqy$b	net/minecraft/world/entity/monster/Ravager$RavagerNavigation
	m	(Lbbh;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
c	bqy$c	net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator
	m	(Lcfg;ZZLgt;Ldpk;)Ldpk;	a	evaluateBlockPathType
		p	1		world
		p	2		canOpenDoors
		p	3		canEnterOpenDoors
		p	4		pos
		p	5		type
c	bqz	net/minecraft/world/entity/monster/Shulker
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	A	getPhysicalPeek
		p	0		openProgress
	m	()V	K	playAmbientSound
	m	()I	U	getMaxHeadXRot
	m	()I	V	getMaxHeadYRot
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(I)V	a	setRawPeekAmount
		p	1		peekAmount
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq;)Z	a	lambda$onPeekAmountChange$1
	m	(Lbaq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbbl;Ldvt;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbqz;)Lalu;	a	access$000
	m	(Lbyt;)V	a	setColor
		p	1		color
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Lgy;)Z	a	canStayAt
		p	1		pos
		p	2		direction
	m	(Lgy;)V	a	setAttachFace
		p	1		face
	m	(Lgy;F)Ldvo;	a	getProgressAabb
		p	0		direction
		p	1		extraLength
	m	(Lgy;FF)Ldvo;	a	getProgressDeltaAabb
		p	0		direction
		p	1		prevExtraLength
		p	2		extraLength
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()Ldvo;	al	makeBoundingBox
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbqz;)Lalu;	b	access$100
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	canBeCollidedWith
	m	()D	bt	getMyRidingOffset
	m	()F	by	getPickRadius
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbqz;)Lalu;	c	access$200
	m	()Lajf;	cS	getSoundSource
	m	(Lbqz;)Lalu;	d	access$300
	m	()Ldvt;	de	getDeltaMovement
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(Lbqz;)Lalu;	e	access$400
	m	(Ldvt;)V	f	setDeltaMovement
		p	1		velocity
	m	()Lbyt;	fK	getColor
	m	()V	fL	findNewAttachment
	m	()Z	fM	updatePeekAmount
	m	()V	fN	onPeekAmountChange
	m	()Z	fO	isClosed
	m	()V	fP	hitByShulkerBullet
	m	()I	fQ	getRawPeekAmount
	m	()Lk;	fR	lambda$static$0
	m	(Lbaq;)V	g	push
		p	1		entity
	m	(Lgt;)Lgy;	g	findAttachableSurface
		p	1		pos
	m	(Lgt;)Z	h	isPositionBlocked
		p	1		pos
	m	()V	k	tick
	m	()Lbcf$a;	n	createAttributes
	m	()V	p	stopRiding
	m	()Z	q	teleportSomewhere
	m	()Lajd;	r	getAmbientSound
	m	()Lgy;	t	getAttachFace
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	m	()Lbgq;	y	createBodyControl
	m	(F)F	y	getClientPeekAmount
		p	1		delta
	m	(F)Ljava/util/Optional;	z	getRenderPosition
	f	Lzr;	b	DATA_ATTACH_FACE_ID
	f	Lbce;	bX	COVERED_ARMOR_MODIFIER
	f	I	bY	TELEPORT_STEPS
	f	B	bZ	NO_COLOR
	f	Lzr;	c	DATA_PEEK_ID
	f	B	ca	DEFAULT_COLOR
	f	I	cb	MAX_TELEPORT_DISTANCE
	f	I	cc	OTHER_SHULKER_SCAN_RADIUS
	f	I	cd	OTHER_SHULKER_LIMIT
	f	F	ce	PEEK_PER_TICK
	f	Lk;	cf	FORWARD
	f	F	cg	currentPeekAmountO
	f	F	ch	currentPeekAmount
	f	Lgt;	ci	clientOldAttachPosition
	f	I	cj	clientSideTeleportInterpolation
	f	F	ck	MAX_LID_OPEN
	f	Lzr;	d	DATA_COLOR_ID
	f	Ljava/util/UUID;	e	COVERED_ARMOR_MODIFIER_UUID
c	bqz$a	net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqz;	a	this$0
	f	I	b	attackTime
c	bqz$b	net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	m	(Lbbh;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
c	bqz$c	net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	m	(Lbqz;)V	<init>	<init>
		p	1		shulker
	m	()Z	a	canUse
	m	(D)Ldvo;	a	getTargetSearchArea
		p	1		distance
	m	(Lbbf;)Z	b	lambda$new$0
		p	0		entity
c	bqz$d	net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	m	(Lbqz;Lbbh;)V	<init>	<init>
		p	2		entity
	m	()V	b	clampHeadRotationToBody
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbqz;	h	this$0
c	bqz$e	net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	m	(Lbqz;Lbqz;)V	<init>	<init>
		p	2		shulker
	m	()Z	a	canUse
	m	(D)Ldvo;	a	getTargetSearchArea
		p	1		distance
	f	Lbqz;	i	this$0
c	bqz$f	net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqz;	a	this$0
	f	I	b	peekTime
c	bra	net/minecraft/world/entity/monster/Silverfish
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lbaq$b;	aO	getMovementEmission
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkSilverfishSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()D	bt	getMyRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbbk;	ez	getMobType
	m	()V	k	tick
	m	(F)V	m	setYBodyRot
		p	1		bodyYaw
	m	()Lbcf$a;	n	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	f	Lbra$b;	b	friendsGoal
c	bra$a	net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	m	(Lbra;)V	<init>	<init>
		p	1		silverfish
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lgy;	i	selectedDirection
	f	Z	j	doMerge
c	bra$b	net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	m	(Lbra;)V	<init>	<init>
		p	1		silverfish
	m	()Z	a	canUse
	m	()V	e	tick
	m	()V	h	notifyHurt
	f	Lbra;	a	silverfish
	f	I	b	lookForFriends
c	brb	net/minecraft/world/entity/monster/Skeleton
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(I)V	a	startFreezeConversion
		p	1		time
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Z	dp	canFreeze
	m	()Z	fK	isShaking
	m	()Z	fL	isFreezeConverting
	m	()V	fM	doFreezeConversion
	m	()V	k	tick
	m	()Lajd;	q	getStepSound
	m	()Lajd;	r	getAmbientSound
	m	(Z)V	v	setFreezeConverting
		p	1		converting
	m	()Lajd;	x_	getDeathSound
	f	Ljava/lang/String;	b	CONVERSION_TAG
	f	Lzr;	c	DATA_STRAY_CONVERSION_ID
	f	I	d	inPowderSnowTime
	f	I	e	conversionTime
c	brc	net/minecraft/world/entity/monster/Slime
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Q	shouldDespawnInPeaceful
	m	()I	U	getMaxHeadXRot
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Lbaq$c;)V	a	remove
		p	1		reason
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lbrc;)Z	a	access$000
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	a_	defineSynchedData
	m	()Lbau;	ad	getType
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	b_	playerTouch
		p	1		player
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkSlimeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()F	eD	getSoundVolume
	m	()V	eI	jumpFromGround
	m	()V	fH	decreaseSquish
	m	()Z	fI	isDealsDamage
	m	()F	fJ	getAttackDamage
	m	()Lajd;	fK	getSquishSound
	m	()Lajd;	fL	getJumpSound
	m	()I	fM	getSize
	m	()Z	fN	isTiny
	m	()Z	fO	doPlayJumpSound
	m	(Lbaq;)V	g	push
		p	1		entity
	m	()V	k	tick
	m	(Lbbf;)V	k	dealDamage
		p	1		target
	m	(Lbbf;)Z	l	lambda$registerGoals$0
	m	()F	n	getSoundPitch
	m	()Lim;	q	getParticleType
	m	()I	t	getJumpDelay
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	m	()V	z_	refreshDimensions
	f	I	b	MIN_SIZE
	f	F	bW	oSquish
	f	Lzr;	bX	ID_SIZE
	f	Z	bY	wasOnGround
	f	I	c	MAX_SIZE
	f	F	d	targetSquish
	f	F	e	squish
c	brc$a	net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	m	(Lbrc;)V	<init>	<init>
		p	1		slime
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbrc;	a	slime
	f	I	b	growTiredTimer
c	brc$b	net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	m	(Lbrc;)V	<init>	<init>
		p	1		slime
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbrc;	a	slime
c	brc$c	net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	m	(Lbrc;)V	<init>	<init>
		p	1		slime
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbrc;	a	slime
c	brc$d	net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	m	(Lbrc;)V	<init>	<init>
		p	1		slime
	m	()V	a	tick
	m	(D)V	a	setWantedMovement
		p	1		speed
	m	(FZ)V	a	setDirection
		p	1		targetYaw
		p	2		jumpOften
	f	F	l	yRot
	f	I	m	jumpDelay
	f	Lbrc;	n	slime
	f	Z	o	isAggressive
c	brc$e	net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	m	(Lbrc;)V	<init>	<init>
		p	1		slime
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbrc;	a	slime
	f	F	b	chosenDegrees
	f	I	c	nextRandomizeTime
c	brd	net/minecraft/world/entity/monster/SpellcasterIllager
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	customServerAiStep
	m	(Lbrd$a;)V	a	setIsCastingSpell
		p	1		spell
	m	(Lbrd;)Lbkf;	a	access$000
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lajd;	fK	getCastingSoundEvent
	m	()Z	fU	isCastingSpell
	m	()Lbrd$a;	fV	getCurrentSpell
	m	()I	fW	getSpellCastingTime
	m	()V	k	tick
	m	()Lbqb$a;	n	getArmPose
	f	I	b	spellCastingTickCount
	f	Lbrd$a;	bX	currentSpell
	f	Lzr;	e	DATA_SPELL_CASTING_ID
c	brd$a	net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	m	(Ljava/lang/String;IIDDD)V	<init>	<init>
		p	3		id
		p	4		particleVelocityX
		p	6		particleVelocityY
		p	8		particleVelocityZ
	m	()[Lbrd$a;	a	$values
	m	(I)Lbrd$a;	a	byId
		p	0		id
	f	Lbrd$a;	a	NONE
	f	Lbrd$a;	b	SUMMON_VEX
	f	Lbrd$a;	c	FANGS
	f	Lbrd$a;	d	WOLOLO
	f	Lbrd$a;	e	DISAPPEAR
	f	Lbrd$a;	f	BLINDNESS
	f	I	g	id
	f	[D	h	spellColor
	f	[Lbrd$a;	i	$VALUES
c	brd$b	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrd;	b	this$0
c	brd$c	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lajd;	l	getSpellPrepareSound
	m	()Lbrd$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	I	b	attackWarmupDelay
	f	I	c	nextAttackTickCount
	f	Lbrd;	d	this$0
c	bre	net/minecraft/world/entity/monster/Spider
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcur;Ldvt;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	()V	a_	defineSynchedData
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()Z	b_	onClimbable
	m	()D	bu	getPassengersRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbaj;)Z	c	canBeAffected
		p	1		effect
	m	()Lbbk;	ez	getMobType
	m	()V	k	tick
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	isClimbing
	m	()V	u	registerGoals
	m	(Z)V	v	setClimbing
		p	1		climbing
	m	()Lajd;	x_	getDeathSound
	f	Lzr;	b	DATA_FLAGS_ID
	f	F	c	SPIDER_SPECIAL_EFFECT_CHANCE
c	bre$a	net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	m	(Lbre;)V	<init>	<init>
		p	1		spider
	m	()Z	a	canUse
	m	(Lbbf;)D	a	getAttackReachSqr
		p	1		entity
	m	()Z	b	canContinueToUse
c	bre$b	net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	m	(Lalu;)V	a	setRandomEffect
		p	1		random
	f	Lbah;	a	effect
c	bre$c	net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	m	(Lbre;Ljava/lang/Class;)V	<init>	<init>
		p	1		spider
		p	2		targetEntityClass
	m	()Z	a	canUse
c	brf	net/minecraft/world/entity/monster/Stray
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbau;Lcgp;Lbbj;Lgt;Lalu;)Z	a	checkStraySpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcaa;F)Lbtl;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lajd;	q	getStepSound
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
c	brg	net/minecraft/world/entity/monster/Strider
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	boost
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lajf;)V	a	equipSaddle
		p	1		sound
	m	(Lbaq;)Z	a	canBeControlledBy
		p	1		entity
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcgp;Lazk;Lbbh;Lbbx;)Lbbx;	a	spawnJockey
		p	1		world
		p	2		difficulty
		p	3		rider
		p	4		entityData
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldoy;)Z	a	canStandOnFluid
		p	1		state
	m	(Ldvt;)V	a	travelWithInput
		p	1		movementInput
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()F	aF	nextStep
	m	()V	a_	defineSynchedData
	m	()F	b	getSteeringSpeed
	m	(Lafo;Lban;)Lbrg;	b	getBreedOffspring
	m	(Lbbf;)Ldvt;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bI	isOnFire
	m	()D	bu	getPassengersRidingOffset
	m	()Z	c	isSaddleable
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkStriderSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Ldvt;	cC	getLeashOffset
	m	()Lbaq;	cH	getControllingPassenger
	m	()Z	d	isSaddled
	m	()Z	eM	isSensitiveToWater
	m	()V	ej	dropEquipment
	m	()Lbcf$a;	fK	createAttributes
	m	()Z	fL	isPanicking
	m	()Z	fM	isBeingTempted
	m	()V	fS	floatStrider
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	()V	k	tick
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	(Lbaq;)Z	o	canAddPassenger
		p	1		passenger
	m	()Z	q	isSuffocating
	m	()Lajd;	r	getAmbientSound
	m	()F	t	getMoveSpeed
	m	()V	u	registerGoals
	m	(Z)V	v	setSuffocating
		p	1		cold
	m	()Z	x	shouldPassengersInheritMalus
	m	()Lajd;	x_	getDeathSound
	f	F	bX	SUFFOCATE_STEERING_MODIFIER
	f	F	bY	SUFFOCATE_SPEED_MODIFIER
	f	F	ca	STEERING_MODIFIER
	f	Lccp;	cb	FOOD_ITEMS
	f	Lccp;	cc	TEMPT_ITEMS
	f	Lzr;	cd	DATA_BOOST_TIME
	f	Lzr;	ce	DATA_SUFFOCATING
	f	Lzr;	cf	DATA_SADDLE_ID
	f	Lbbb;	cg	steering
	f	Lbiz;	ch	temptGoal
	f	Lbil;	ci	panicGoal
c	brg$a	net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	m	(Lbrg;D)V	<init>	<init>
		p	1		strider
		p	2		speed
	m	()Z	a	canUse
	m	(Lcgd;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()Lgt;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	f	Lbrg;	g	strider
c	brg$b	net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	m	(Lbrg;Lcga;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
	m	(Ldpk;)Z	a	hasValidPathType
		p	1		pathType
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
c	brh	net/minecraft/world/entity/monster/Vex
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(I)V	a	setLimitedLife
		p	1		lifeTicks
	m	(IZ)V	a	setVexFlag
		p	1		mask
		p	2		value
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbbh;)V	a	setOwner
		p	1		owner
	m	(Lbbl;Ldvt;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbrh;)Lalu;	a	access$000
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aL	isFlapping
	m	()V	a_	defineSynchedData
	m	(I)Z	b	getVexFlag
		p	1		mask
	m	(Lbrh;)Lbgv;	b	access$100
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bh	getLightLevelDependentMagicValue
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbrh;)Lbgv;	c	access$200
	m	(Lbrh;)Lalu;	d	access$300
	m	(Lbrh;)Lalu;	e	access$400
	m	(Lbrh;)Lalu;	f	access$500
	m	()Z	fK	isCharging
	m	(Lbrh;)Lalu;	g	access$600
	m	(Lgt;)V	g	setBoundOrigin
		p	1		bounds
	m	(Lbrh;)Lbgv;	h	access$700
	m	()V	k	tick
	m	()Lbcf$a;	n	createAttributes
	m	()Lbbh;	q	getOwner
	m	()Lajd;	r	getAmbientSound
	m	()Lgt;	t	getBoundOrigin
	m	()V	u	registerGoals
	m	(Z)V	v	setIsCharging
		p	1		charging
	m	()Lajd;	x_	getDeathSound
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lbbh;	bX	owner
	f	Lgt;	bY	boundOrigin
	f	Z	bZ	hasLimitedLife
	f	I	c	TICKS_PER_FLAP
	f	I	ca	limitedLifeTicks
	f	Lzr;	d	DATA_FLAGS_ID
	f	I	e	FLAG_IS_CHARGING
c	brh$a	net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrh;	a	this$0
c	brh$b	net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	m	(Lbrh;Lbbo;)V	<init>	<init>
		p	2		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbrh;	a	this$0
	f	Lbli;	b	copyOwnerTargeting
c	brh$c	net/minecraft/world/entity/monster/Vex$VexMoveControl
	m	(Lbrh;Lbrh;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lbrh;	l	this$0
c	brh$d	net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbrh;	a	this$0
c	bri	net/minecraft/world/entity/monster/Vindicator
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lajd;	M_	getCelebrateSound
	m	()V	T	customServerAiStep
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lazj;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lbri;)Lalu;	a	access$000
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lrm;)V	b	setCustomName
		p	1		name
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbqb$a;	n	getArmPose
	m	(Lbaq;)Z	p	isAlliedTo
		p	1		other
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	f	Ljava/lang/String;	b	TAG_JOHNNY
	f	Z	bX	isJohnny
	f	Ljava/util/function/Predicate;	e	DOOR_BREAKING_PREDICATE
c	bri$a	net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	m	(Lbbh;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
c	bri$b	net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	m	(Lbri;)V	<init>	<init>
		p	1		vindicator
	m	()Z	a	canUse
	m	()V	c	start
c	bri$c	net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	m	(Lbri;Lbri;)V	<init>	<init>
		p	2		vindicator
	m	(Lbbf;)D	a	getAttackReachSqr
		p	1		entity
	f	Lbri;	b	this$0
c	brj	net/minecraft/world/entity/monster/Witch
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lajd;	M_	getCelebrateSound
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	()V	a_	defineSynchedData
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lazz;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	()Z	fL	canBeLeader
	m	(Lbbf;)Z	k	lambda$registerGoals$0
		p	1		entity
	m	()Z	n	isDrinkingPotion
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	(Z)V	x	setUsingItem
		p	1		drinking
	m	()Lajd;	x_	getDeathSound
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_DRINKING_UUID
	f	Lzr;	bX	DATA_USING_ITEM
	f	I	bY	usingTime
	f	Lbjm;	bZ	healRaidersGoal
	f	Lbjl;	ca	attackPlayersGoal
	f	Lbce;	e	SPEED_MODIFIER_DRINKING
c	brk	net/minecraft/world/entity/monster/WitherSkeleton
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lalu;Lazk;)V	b	populateDefaultEquipmentEnchantments
		p	1		random
		p	2		localDifficulty
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcaa;F)Lbtl;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbaj;)Z	c	canBeAffected
		p	1		effect
	m	()Lajd;	q	getStepSound
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
c	brl	net/minecraft/world/entity/monster/Zoglin
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbca;)V	a	initCoreActivity
		p	0		brain
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lbca;)V	b	initIdleActivity
		p	0		brain
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getPassengersRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbca;)V	c	initFightActivity
		p	0		brain
	m	()Lbca$b;	dA	brainProvider
	m	()Lbca;	dz	getBrain
	m	(Lbbf;)V	e	blockedByShield
		p	1		target
	m	()Lbbk;	ez	getMobType
	m	()I	fK	getAttackAnimationRemainingTicks
	m	()V	fL	playAngrySound
	m	()Ljava/util/Optional;	fM	findNearestValidAttackTarget
	m	(Lbbf;)Z	k	isTargetable
		p	1		entity
	m	(Lbbf;)V	l	setAttackTarget
		p	1		entity
	m	()Lbcf$a;	n	createAttributes
	m	()Z	q	isAdult
	m	()Lajd;	r	getAmbientSound
	m	()V	t	updateActivity
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	I	bX	ATTACK_KNOCKBACK
	f	F	bY	KNOCKBACK_RESISTANCE
	f	I	bZ	ATTACK_DAMAGE
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	F	ca	BABY_ATTACK_DAMAGE
	f	I	cb	ATTACK_INTERVAL
	f	I	cc	BABY_ATTACK_INTERVAL
	f	I	cd	ATTACK_DURATION
	f	F	ce	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	cf	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	cg	attackAnimationRemainingTicks
	f	Lzr;	d	DATA_BABY_ID
	f	I	e	MAX_HEALTH
c	brm	net/minecraft/world/entity/monster/Zombie
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;)V	<init>	<init>
		p	1		world
	m	()Z	L_	isSunSensitive
	m	(I)V	a	startUnderWaterConversion
		p	1		ticksUntilWaterConversion
	m	(Lafo;Lbbf;)Z	a	wasKilled
		p	1		world
		p	2		other
	m	(Lalu;)Z	a	getSpawnAsBabyOdds
		p	0		random
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lazj;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbrm;)Lalu;	a	access$000
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lbau;)V	b	convertToZombieType
		p	1		entityType
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bt	getMyRidingOffset
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()I	dP	getExperienceReward
	m	()Lbbk;	ez	getMobType
	m	()Lcaa;	fK	getSkull
	m	()Z	fL	convertsInWater
	m	()V	fN	doUnderWaterConversion
	m	()Lbcf$a;	fQ	createAttributes
	m	()Z	fR	isUnderWaterConverting
	m	()Z	fS	canBreakDoors
	m	()V	fT	randomizeReinforcementsChance
	m	()V	k	tick
	m	(Lcaa;)Z	k	canHoldItem
		p	1		stack
	m	(Lcaa;)Z	l	wantsToPickUp
		p	1		stack
	m	()V	n	addBehaviourGoals
	m	()Z	q	supportsBreakDoorGoal
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getStepSound
	m	()V	u	registerGoals
	m	(Z)V	w	setCanBreakDoors
		p	1		canBreakDoors
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(F)V	y	handleAttributes
		p	1		chanceMultiplier
	m	()Z	y_	isBaby
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_BABY_UUID
	f	I	bX	REINFORCEMENT_ATTEMPTS
	f	I	bY	REINFORCEMENT_RANGE_MAX
	f	I	bZ	REINFORCEMENT_RANGE_MIN
	f	Lbce;	c	SPEED_MODIFIER_BABY
	f	Lzr;	ca	DATA_SPECIAL_TYPE_ID
	f	Lzr;	cb	DATA_DROWNED_CONVERSION_ID
	f	F	cc	BREAK_DOOR_CHANCE
	f	Ljava/util/function/Predicate;	cd	DOOR_BREAKING_PREDICATE
	f	Lbhc;	ce	breakDoorGoal
	f	Z	cf	canBreakDoors
	f	I	cg	inWaterTime
	f	I	ch	conversionTime
	f	Lzr;	d	DATA_BABY_ID
	f	F	e	ZOMBIE_LEADER_CHANCE
c	brm$a	net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	m	(Lbrm;Lbbo;DI)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	(Lcga;Lgt;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	()D	i	acceptedDistance
	f	Lbrm;	g	this$0
c	brm$b	net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	m	(ZZ)V	<init>	<init>
		p	1		baby
		p	2		tryChickenJockey
	f	Z	a	isBaby
	f	Z	b	canSpawnJockey
c	brn	net/minecraft/world/entity/monster/ZombieVillager
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(I)V	a	setVillagerXp
		p	1		xp
	m	(Lbst;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lhc;)V	a	lambda$new$0
	m	(Ljava/util/UUID;I)V	a	startConverting
		p	1		uuid
		p	2		delay
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$1
	m	(Lqc;)V	a	setGossips
		p	1		gossipData
	m	()V	a_	defineSynchedData
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lafo;)V	c	finishConversion
		p	1		world
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lpj;)V	c	setTradeOffers
		p	1		offerData
	m	()F	eE	getVoicePitch
	m	()Lcaa;	fK	getSkull
	m	()Z	fL	convertsInWater
	m	()Z	fU	isConverting
	m	()Lbst;	fV	getVillagerData
	m	()I	fW	getVillagerXp
	m	()I	fX	getConversionProgress
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	k	tick
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	t	getStepSound
	m	()Lajd;	x_	getDeathSound
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lzr;	c	DATA_CONVERTING_ID
	f	I	ca	VILLAGER_CONVERSION_WAIT_MIN
	f	I	cb	VILLAGER_CONVERSION_WAIT_MAX
	f	I	cc	MAX_SPECIAL_BLOCKS_COUNT
	f	I	cd	SPECIAL_BLOCK_RADIUS
	f	I	ce	villagerConversionTime
	f	Ljava/util/UUID;	cf	conversionStarter
	f	Lqc;	cg	gossips
	f	Lpj;	ch	tradeOffers
	f	I	ci	villagerXp
	f	Lzr;	d	DATA_VILLAGER_DATA
c	bro	net/minecraft/world/entity/monster/ZombifiedPiglin
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbro;)V	a	lambda$alertOthers$3
		p	1		zombifiedPiglin
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkZombifiedPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbro;)Z	b	lambda$alertOthers$2
		p	1		zombifiedPiglin
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bt	getMyRidingOffset
	m	()V	c	startPersistentAngerTimer
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbro;)Z	c	lambda$alertOthers$1
		p	0		zombifiedPiglin
	m	(Lbro;)Z	d	lambda$alertOthers$0
		p	1		zombifiedPiglin
	m	(Lbtf;)Z	e	isPreventingPlayerRest
		p	1		player
	m	()Lcaa;	fK	getSkull
	m	()Z	fL	convertsInWater
	m	()V	fT	randomizeReinforcementsChance
	m	()Lbcf$a;	fU	createAttributes
	m	()V	fV	maybePlayFirstAngerSound
	m	()V	fW	maybeAlertOthers
	m	()V	fX	alertOthers
	m	()V	fY	playAngerSound
	m	(Lbbf;)V	h	setTarget
		p	1		target
	m	(Lcaa;)Z	l	wantsToPickUp
		p	1		stack
	m	()V	n	addBehaviourGoals
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	Layx;	ca	FIRST_ANGER_SOUND_DELAY
	f	I	cb	playFirstAngerSoundIn
	f	Layx;	cc	PERSISTENT_ANGER_TIME
	f	I	cd	remainingPersistentAngerTime
	f	Ljava/util/UUID;	ce	persistentAngerTarget
	f	I	cf	ALERT_RANGE_Y
	f	Layx;	cg	ALERT_INTERVAL
	f	I	ch	ticksUntilNextAlert
	f	Lbce;	d	SPEED_MODIFIER_ATTACKING
c	brp	net/minecraft/world/entity/monster/hoglin/Hoglin
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lajd;	aG	getSwimSound
	m	()Lajd;	aH	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(Lajd;)V	b	playSoundEvent
		p	1		sound
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getPassengersRidingOffset
	m	(Lafo;)V	c	finishConversion
		p	1		word
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	c	checkHoglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lajf;	cS	getSoundSource
	m	()Lbca$b;	dA	brainProvider
	m	()Z	dN	shouldDropExperience
	m	()I	dP	getExperienceReward
	m	()Lbca;	dz	getBrain
	m	(Lbbf;)V	e	blockedByShield
		p	1		target
	m	()I	fK	getAttackAnimationRemainingTicks
	m	()Z	fL	isConverting
	m	()Z	fM	canBeHunted
	m	()Z	fN	canFallInLove
	m	()Z	fS	isImmuneToZombification
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	n	ageBoundaryReached
	m	(Lcaa;)Z	n	isFood
		p	1		stack
	m	()Lbcf$a;	q	createAttributes
	m	()Lajd;	r	getAmbientSound
	m	()Z	t	isAdult
	m	(Z)V	v	setImmuneToZombification
		p	1		immuneToZombification
	m	(Z)V	w	setCannotBeHunted
		p	1		cannotBeHunted
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	Lcom/google/common/collect/ImmutableList;	bX	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bY	MEMORY_TYPES
	f	Lzr;	ca	DATA_IMMUNE_TO_ZOMBIFICATION
	f	F	cb	PROBABILITY_OF_SPAWNING_AS_BABY
	f	I	cc	MAX_HEALTH
	f	F	cd	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	ce	ATTACK_KNOCKBACK
	f	F	cf	KNOCKBACK_RESISTANCE
	f	I	cg	ATTACK_DAMAGE
	f	F	ch	BABY_ATTACK_DAMAGE
	f	I	ci	CONVERSION_TIME
	f	I	cj	attackAnimationRemainingTicks
	f	I	ck	timeInOverworld
	f	Z	cl	cannotBeHunted
c	brq	net/minecraft/world/entity/monster/hoglin/HoglinAi
	m	()Lbep;	a	createIdleMovementBehaviors
	m	(Lbbf;Lbrp;)V	a	lambda$broadcastAttackTarget$1
		p	1		hoglin
	m	(Lbca;)Lbca;	a	makeBrain
		p	0		brain
	m	(Lbrp;)V	a	updateActivity
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	a	onHitTarget
		p	0		hoglin
		p	1		target
	m	(Lbrp;Lbuq;)Lajd;	a	getSoundForActivity
		p	0		hoglin
		p	1		activity
	m	(Lbrp;Lgt;)Z	a	isPosNearNearestRepellent
		p	0		hoglin
		p	1		pos
	m	(Lbbf;Lbrp;)V	b	lambda$broadcastRetreat$0
		p	1		hoglin
	m	(Lbca;)V	b	initCoreActivity
		p	0		brain
	m	(Lbrp;)Ljava/util/Optional;	b	getSoundForCurrentActivity
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	b	wasHurtBy
		p	0		hoglin
		p	1		attacker
	m	(Lbrp;Lbuq;)Lajd;	b	lambda$getSoundForCurrentActivity$2
		p	1		activity
	m	(Lbca;)V	c	initIdleActivity
		p	0		brain
	m	(Lbrp;)Z	c	isPacified
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	c	broadcastRetreat
		p	0		hoglin
		p	1		target
	m	(Lbca;)V	d	initFightActivity
		p	0		brain
	m	(Lbrp;)Ljava/util/Optional;	d	findNearestValidAttackTarget
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	d	retreatFromNearestTarget
		p	0		hoglin
		p	1		target
	m	(Lbca;)V	e	initRetreatActivity
		p	0		brain
	m	(Lbrp;)Z	e	wantsToStopFleeing
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	e	setAvoidTarget
		p	0		hoglin
		p	1		target
	m	(Lbrp;)Z	f	piglinsOutnumberHoglins
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	f	maybeRetaliate
		p	0		hoglin
		p	1		target
	m	(Lbrp;)Ljava/util/List;	g	getVisibleAdultHoglins
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	g	setAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lbrp;)Z	h	isNearRepellent
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	h	broadcastAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lbrp;)Z	i	isBreeding
		p	0		hoglin
	m	(Lbrp;Lbbf;)V	i	setAttackTargetIfCloserThanCurrent
		p	0		hoglin
		p	1		targetCandidate
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Layx;	c	RETREAT_DURATION
	f	I	d	ATTACK_DURATION
	f	I	e	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f	I	f	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	f	I	g	ATTACK_INTERVAL
	f	I	h	BABY_ATTACK_INTERVAL
	f	I	i	REPELLENT_PACIFY_TIME
	f	Layx;	j	ADULT_FOLLOW_RANGE
	f	F	k	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	f	F	l	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	m	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	n	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	o	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
c	brr	net/minecraft/world/entity/monster/hoglin/HoglinBase
	m	(Lbbf;Lbbf;)Z	a	hurtAndThrowTarget
		p	0		attacker
		p	1		target
	m	(Lbbf;Lbbf;)V	b	throwTarget
		p	0		attacker
		p	1		target
	m	()I	fK	getAttackAnimationRemainingTicks
	f	I	i_	ATTACK_ANIMATION_DURATION
c	brs	net/minecraft/world/entity/monster/hoglin/package-info
c	brt	net/minecraft/world/entity/monster/package-info
c	bru	net/minecraft/world/entity/monster/piglin/AbstractPiglin
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbbf;	G	getTarget
	m	()V	K	playAmbientSound
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bt	getMyRidingOffset
	m	(Lafo;)V	c	finishConversion
		p	1		world
	m	()Z	fK	isConverting
	m	()Z	fL	isAdult
	m	()Lbrx;	fM	getArmPose
	m	()Z	fN	isHoldingMeleeWeapon
	m	()V	fQ	playConvertedSound
	m	()Z	n	canHunt
	m	()Z	q	isImmuneToZombification
	m	()V	t	applyOpenDoorsAbility
	m	(Z)V	v	setImmuneToZombification
		p	1		immuneToZombification
	f	Lzr;	b	DATA_IMMUNE_TO_ZOMBIFICATION
	f	I	c	CONVERSION_TIME
	f	I	d	timeInOverworld
c	brv	net/minecraft/world/entity/monster/piglin/Piglin
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Q	shouldDespawnInPeaceful
	m	()V	T	customServerAiStep
	m	()V	a	onCrossbowAttackPerformed
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lazz;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbaq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbav;Lcaa;Lalu;)V	a	maybeWearArmor
		p	1		slot
		p	2		stack
		p	3		random
	m	(Lbbf;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbbf;Lcaa;Lbtx;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lcaa;Lcaa;)Z	a	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Lcap;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lajd;)V	b	playSoundEvent
		p	1		sound
	m	(Lbaq;I)Lbaq;	b	getTopPassenger
		p	1		entity
		p	2		maxLevel
	m	(Lbau;Lcgb;Lbbj;Lgt;Lalu;)Z	b	checkPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	()D	bu	getPassengersRidingOffset
	m	(Lafo;)V	c	finishConversion
		p	1		world
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbca$b;	dA	brainProvider
	m	()I	dP	getExperienceReward
	m	()Lbca;	dz	getBrain
	m	()Lbrx;	fM	getArmPose
	m	()V	fQ	playConvertedSound
	m	()Lbcf$a;	fR	createAttributes
	m	()Z	fS	isDancing
	m	()Lcaa;	fT	createSpawnWeapon
	m	()Z	fU	isChargingCrossbow
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcaa;)Z	l	wantsToPickUp
		p	1		stack
	m	(Lcaa;)Lcaa;	m	addToInventory
		p	1		stack
	m	()Z	n	canHunt
	m	(Lcaa;)Z	n	canAddToInventory
		p	1		stack
	m	(Lcaa;)V	o	holdInMainHand
		p	1		stack
	m	(Lcaa;)V	p	holdInOffHand
		p	1		stack
	m	(Lcaa;)Z	q	canReplaceCurrentItem
		p	1		stack
	m	()Lajd;	r	getAmbientSound
	m	()Lazr;	t	getInventory
	m	(Z)V	w	setDancing
		p	1		dancing
	m	(Z)V	x	setCannotHunt
		p	1		cannotHunt
	m	()Lajd;	x_	getDeathSound
	m	()Z	y_	isBaby
	f	Lcom/google/common/collect/ImmutableList;	bX	MEMORY_TYPES
	f	Lzr;	bY	DATA_BABY_ID
	f	Lzr;	bZ	DATA_IS_CHARGING_CROSSBOW
	f	Lzr;	ca	DATA_IS_DANCING
	f	Ljava/util/UUID;	cb	SPEED_MODIFIER_BABY_UUID
	f	Lbce;	cc	SPEED_MODIFIER_BABY
	f	I	cd	MAX_HEALTH
	f	F	ce	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cf	ATTACK_DAMAGE
	f	F	cg	CROSSBOW_POWER
	f	F	ch	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	f	I	ci	MAX_PASSENGERS_ON_ONE_HOGLIN
	f	F	cj	PROBABILITY_OF_SPAWNING_AS_BABY
	f	F	ck	BABY_EYE_HEIGHT_ADJUSTMENT
	f	D	cl	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	f	Lazr;	cm	inventory
	f	Z	cn	cannotHunt
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	brw	net/minecraft/world/entity/monster/piglin/PiglinAi
	m	()Lbep;	a	createIdleLookBehaviors
	m	(Lbau;)Z	a	isZombified
		p	0		entityType
	m	(Lbbf;)Z	a	isWearingGold
		p	0		entity
	m	(Lbbf;Lbbf;)Z	a	wantsToDance
		p	0		piglin
		p	1		target
	m	(Lbbf;Lbca;Lbbf;)V	a	lambda$wasHurtBy$5
		p	2		avoiding
	m	(Lbbf;Lbru;)V	a	lambda$broadcastRetreat$12
		p	1		piglin
	m	(Lbca;)V	a	initCoreActivity
		p	0		piglin
	m	(Lbpy;)Lcaa;	a	removeOneItemFromItemEntity
		p	0		stack
	m	(Lbru;)V	a	broadcastUniversalAnger
		p	0		piglin
	m	(Lbru;Lbbf;)V	a	maybeRetaliate
		p	0		piglin
		p	1		target
	m	(Lbru;Lbtf;)V	a	lambda$broadcastUniversalAnger$9
		p	1		player
	m	(Lbrv;)V	a	updateActivity
		p	0		piglin
	m	(Lbrv;Lalu;)V	a	initMemories
		p	0		piglin
		p	1		random
	m	(Lbrv;Lbaq;)Z	a	wantsToStopRiding
		p	0		piglin
		p	1		ridden
	m	(Lbrv;Lbbf;)V	a	wasHurtBy
		p	0		piglin
		p	1		attacker
	m	(Lbrv;Lbca;)Lbca;	a	makeBrain
		p	0		piglin
		p	1		brain
	m	(Lbrv;Lbpy;)V	a	pickUpItem
		p	0		piglin
		p	1		drop
	m	(Lbrv;Lbtf;Lazl;)Lazm;	a	mobInteract
		p	0		piglin
		p	1		player
		p	2		hand
	m	(Lbrv;Lbtf;Ljava/util/List;)V	a	throwItemsTowardPlayer
		p	0		piglin
		p	1		player
		p	2		items
	m	(Lbrv;Lbuq;)Lajd;	a	getSoundForActivity
		p	0		piglin
		p	1		activity
	m	(Lbrv;Lcaa;)Z	a	wantsToPickup
		p	0		piglin
		p	1		stack
	m	(Lbrv;Ljava/util/List;)V	a	throwItems
		p	0		piglin
		p	1		items
	m	(Lbrv;Ljava/util/List;Ldvt;)V	a	throwItemsTowardPos
		p	0		piglin
		p	1		items
		p	2		pos
	m	(Lbrv;Z)V	a	stopHoldingOffHandItem
		p	0		piglin
		p	1		barter
	m	(Lbtf;Lbrv;)V	a	lambda$angerNearbyPiglins$4
		p	1		piglin
	m	(Lbtf;Z)V	a	angerNearbyPiglins
		p	0		player
		p	1		blockOpen
	m	(Lcaa;)Z	a	isLovedItem
		p	0		stack
	m	(ZLbtf;Lbrv;)Z	a	lambda$angerNearbyPiglins$3
		p	2		piglin
	m	()Lbep;	b	createIdleMovementBehaviors
	m	(Lbbf;)Z	b	isPlayerHoldingLovedItem
		p	0		target
	m	(Lbbf;Lbbf;)Z	b	lambda$isNearestValidAttackTarget$2
		p	1		preferredTarget
	m	(Lbbf;Lbru;)V	b	lambda$broadcastAngerTarget$8
		p	1		nearbyPiglin
	m	(Lbca;)V	b	initIdleActivity
		p	0		piglin
	m	(Lbru;)Ljava/util/Optional;	b	getNearestVisibleTargetablePlayer
		p	0		piglin
	m	(Lbru;Lbbf;)V	b	broadcastAngerTarget
		p	0		piglin
		p	1		target
	m	(Lbrv;)V	b	cancelAdmiring
		p	0		piglin
	m	(Lbrv;Lbbf;)Z	b	isNearestValidAttackTarget
		p	0		piglin
		p	1		target
	m	(Lbrv;Lbca;)V	b	initFightActivity
		p	0		piglin
		p	1		brain
	m	(Lbrv;Lbuq;)Lajd;	b	lambda$getSoundForCurrentActivity$6
		p	1		activity
	m	(Lbrv;Lcaa;)Z	b	canAdmire
		p	0		piglin
		p	1		nearbyItems
	m	(Lbrv;Ljava/util/List;)V	b	throwItemsTowardRandomPos
		p	0		piglin
		p	1		items
	m	(Lcaa;)Z	b	isBarterCurrency
		p	0		stack
	m	()Lbew;	c	avoidRepellent
	m	(Lbbf;)Z	c	hasCrossbow
		p	0		piglin
	m	(Lbca;)V	c	initCelebrateActivity
		p	0		brain
	m	(Lbru;)V	c	dontKillAnyMoreHoglinsForAWhile
		p	0		piglin
	m	(Lbru;Lbbf;)V	c	setAngerTarget
		p	0		piglin
		p	1		target
	m	(Lbrv;)Ljava/util/Optional;	c	getSoundForCurrentActivity
		p	0		piglin
	m	(Lbrv;Lbbf;)V	c	broadcastRetreat
		p	0		piglin
		p	1		target
	m	(Lbrv;Lcaa;)V	c	holdInOffhand
		p	0		piglin
		p	1		stack
	m	(Lcaa;)Z	c	isFood
		p	0		stack
	m	()Lbcv;	d	babyAvoidNemesis
	m	(Lbbf;)V	d	admireGoldItem
		p	0		entity
	m	(Lbca;)V	d	initAdmireItemActivity
		p	0		brain
	m	(Lbru;)Z	d	isIdle
		p	0		piglin
	m	(Lbru;Lbbf;)V	d	setAngerTargetToNearestTargetablePlayerIfFound
		p	0		piglin
		p	1		player
	m	(Lbrv;)Z	d	hasAnyoneNearbyHuntedRecently
		p	0		piglin
	m	(Lbrv;Lbbf;)V	d	retreatFromNearestTarget
		p	0		piglin
		p	1		target
	m	(Lbrv;Lcaa;)V	d	putInInventory
		p	0		piglin
		p	1		stack
	m	()Lbcv;	e	avoidZombified
	m	(Lbbf;)Z	e	seesPlayerHoldingLovedItem
		p	0		entity
	m	(Lbca;)V	e	initRetreatActivity
		p	0		brain
	m	(Lbru;)Ljava/util/List;	e	getAdultPiglins
		p	0		piglin
	m	(Lbru;Lbbf;)V	e	setAngerTargetIfCloserThanCurrent
		p	0		piglin
		p	1		target
	m	(Lbrv;)V	e	broadcastDontKillAnyMoreHoglinsForAWhile
		p	0		piglin
	m	(Lbrv;Lbbf;)V	e	setAvoidTargetAndDontHuntForAWhile
		p	0		piglin
		p	1		target
	m	()Lbeq;	f	babySometimesRideBabyHoglin
	m	(Lbbf;)Z	f	doesntSeeAnyPlayerHoldingLovedItem
		p	0		piglin
	m	(Lbca;)V	f	initRideHoglinActivity
		p	0		brain
	m	(Lbru;)Ljava/util/Optional;	f	getAngerTarget
		p	0		piglin
	m	(Lbrv;)Ljava/util/Optional;	f	getAvoidTarget
		p	0		piglin
	m	(Lbrv;Lbbf;)Z	f	lambda$initFightActivity$0
		p	1		target
	m	(Lbbf;)Z	g	wasHurtRecently
		p	0		piglin
	m	(Lbru;)Z	g	lambda$broadcastRetreat$11
		p	0		nearbyVisiblePiglin
	m	(Lbrv;)Z	g	isBabyRidingBaby
		p	0		piglin
	m	(Lbru;)V	h	lambda$broadcastUniversalAnger$10
		p	0		nearbyPiglin
	m	(Lbrv;)Ljava/util/List;	h	getBarterResponseItems
		p	0		piglin
	m	(Lbru;)Z	i	lambda$hasAnyoneNearbyHuntedRecently$7
	m	(Lbrv;)Z	i	isNearZombified
		p	0		piglin
	m	(Lbrv;)Ljava/util/Optional;	j	findNearestValidAttackTarget
		p	0		piglin
	m	(Lbrv;)Z	k	isNearAvoidTarget
		p	0		piglin
	m	(Lbrv;)Ljava/util/List;	l	getVisibleAdultPiglins
		p	0		piglin
	m	(Lbrv;)V	m	stopWalking
		p	0		piglin
	m	(Lbrv;)Z	n	wantsToStopFleeing
		p	0		piglin
	m	(Lbrv;)Z	o	piglinsEqualOrOutnumberHoglins
		p	0		piglin
	m	(Lbrv;)Z	p	hoglinsOutnumberPiglins
		p	0		piglins
	m	(Lbrv;)Z	q	seesPlayerHoldingWantedItem
		p	0		piglin
	m	(Lbrv;)V	r	eat
		p	0		piglin
	m	(Lbrv;)Ldvt;	s	getRandomNearbyPos
		p	0		piglin
	m	(Lbrv;)Z	t	hasEatenRecently
		p	0		piglin
	m	(Lbrv;)Z	u	isAdmiringItem
		p	0		entity
	m	(Lbrv;)Z	v	isNearRepellent
		p	0		piglin
	m	(Lbrv;)Z	w	isAdmiringDisabled
		p	0		piglin
	m	(Lbrv;)Z	x	isHoldingItemInOffHand
		p	0		piglin
	m	(Lbrv;)Z	y	isNotHoldingLovedItemInOffHand
		p	0		piglin
	m	(Lbrv;)Z	z	lambda$initCelebrateActivity$1
	f	Layx;	A	AVOID_ZOMBIFIED_DURATION
	f	Layx;	B	BABY_AVOID_NEMESIS_DURATION
	f	F	C	PROBABILITY_OF_CELEBRATION_DANCE
	f	F	D	SPEED_MULTIPLIER_WHEN_AVOIDING
	f	F	E	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	F	SPEED_MULTIPLIER_WHEN_MOUNTING
	f	F	G	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	f	F	H	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	f	F	I	SPEED_MULTIPLIER_WHEN_DANCING
	f	F	J	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lbzw;	c	BARTERING_ITEM
	f	I	d	PLAYER_ANGER_RANGE
	f	I	e	ANGER_DURATION
	f	I	f	ADMIRE_DURATION
	f	I	g	MAX_DISTANCE_TO_WALK_TO_ITEM
	f	I	h	MAX_TIME_TO_WALK_TO_ITEM
	f	I	i	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	f	I	j	CELEBRATION_TIME
	f	Layx;	k	TIME_BETWEEN_HUNTS
	f	I	l	BABY_FLEE_DURATION_AFTER_GETTING_HIT
	f	I	m	HIT_BY_PLAYER_MEMORY_TIMEOUT
	f	I	n	MAX_WALK_DISTANCE_TO_START_RIDING
	f	Layx;	o	RIDE_START_INTERVAL
	f	Layx;	p	RIDE_DURATION
	f	Layx;	q	RETREAT_DURATION
	f	I	r	MELEE_ATTACK_COOLDOWN
	f	I	s	EAT_COOLDOWN
	f	I	t	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	f	I	u	MAX_LOOK_DIST
	f	I	v	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	f	I	w	INTERACTION_RANGE
	f	I	x	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	f	F	y	SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	f	I	z	DESIRED_DISTANCE_FROM_ZOMBIFIED
c	brx	net/minecraft/world/entity/monster/piglin/PiglinArmPose
	m	()[Lbrx;	a	$values
	f	Lbrx;	a	ATTACKING_WITH_MELEE_WEAPON
	f	Lbrx;	b	CROSSBOW_HOLD
	f	Lbrx;	c	CROSSBOW_CHARGE
	f	Lbrx;	d	ADMIRING_ITEM
	f	Lbrx;	e	DANCING
	f	Lbrx;	f	DEFAULT
	f	[Lbrx;	g	$VALUES
c	bry	net/minecraft/world/entity/monster/piglin/PiglinBrute
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	customServerAiStep
	m	(Lalu;Lazk;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	()Lbca$b;	dA	brainProvider
	m	()Lbca;	dz	getBrain
	m	()Lbrx;	fM	getArmPose
	m	()V	fQ	playConvertedSound
	m	()V	fR	playAngrySound
	m	(Lcaa;)Z	l	wantsToPickUp
		p	1		stack
	m	()Z	n	canHunt
	m	()Lajd;	r	getAmbientSound
	m	()Lbcf$a;	t	createAttributes
	m	()Lajd;	x_	getDeathSound
	f	Lcom/google/common/collect/ImmutableList;	bX	MEMORY_TYPES
	f	I	bY	MAX_HEALTH
	f	F	bZ	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	ca	ATTACK_DAMAGE
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	brz	net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	m	()Lbep;	a	createIdleLookBehaviors
	m	(Lbbf;Lbbf;)Z	a	lambda$isNearestValidAttackTarget$1
	m	(Lbru;)Ljava/util/Optional;	a	findNearestValidAttackTarget
		p	0		piglin
	m	(Lbru;Lbbf;)Z	a	isNearestValidAttackTarget
		p	0		piglin
		p	1		entity
	m	(Lbru;Lbjx;)Ljava/util/Optional;	a	getTargetIfWithinRange
		p	0		piglin
		p	1		targetMemoryModule
	m	(Lbry;)V	a	initMemories
		p	0		piglinBrute
	m	(Lbry;Lbbf;)V	a	wasHurtBy
		p	0		piglinBrute
		p	1		target
	m	(Lbry;Lbca;)Lbca;	a	makeBrain
		p	0		piglinBrute
		p	1		brain
	m	(Lbry;Lbuq;)V	a	lambda$playActivitySound$3
		p	1		activity
	m	()Lbep;	b	createIdleMovementBehaviors
	m	(Lbru;Lbbf;)Z	b	lambda$getTargetIfWithinRange$2
		p	1		target
	m	(Lbry;)V	b	updateActivity
		p	0		piglinBrute
	m	(Lbry;Lbbf;)V	b	setAngerTarget
		p	0		piglinBrute
		p	1		target
	m	(Lbry;Lbca;)V	b	initCoreActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lbry;)V	c	maybePlayActivitySound
		p	0		piglinBrute
	m	(Lbry;Lbbf;)Z	c	lambda$initFightActivity$0
	m	(Lbry;Lbca;)V	c	initIdleActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lbry;)V	d	playActivitySound
		p	0		piglinBrute
	m	(Lbry;Lbca;)V	d	initFightActivity
		p	0		piglinBrute
		p	1		brain
	f	I	a	ANGER_DURATION
	f	I	b	MELEE_ATTACK_COOLDOWN
	f	D	c	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	f	I	d	MAX_LOOK_DIST
	f	I	e	INTERACTION_RANGE
	f	D	f	TARGETING_RANGE
	f	F	g	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	h	HOME_CLOSE_ENOUGH_DISTANCE
	f	I	i	HOME_TOO_FAR_DISTANCE
	f	I	j	HOME_STROLL_AROUND_DISTANCE
c	bsa	net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbrv;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbrv;)Z	a	isAttackTargetDeadHoglin
		p	1		piglin
c	bsb	net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbrv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbrv;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	admireDuration
c	bsc	net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbrv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbrv;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bsd	net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	m	(I)V	<init>	<init>
		p	1		range
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbrv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbrv;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	maxDistanceToItem
c	bse	net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	m	(II)V	<init>	<init>
		p	1		timeLimit
		p	2		cooldown
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbrv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbrv;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	maxTimeToReachItem
	f	I	d	disableTime
c	bsf	net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	m	(Lafo;Lbbf;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbrv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lafo;Lbrv;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bsg	net/minecraft/world/entity/monster/piglin/package-info
c	bsh	net/minecraft/world/entity/monster/warden/AngerLevel
	m	(Ljava/lang/String;IILajd;Lajd;)V	<init>	<init>
		p	3		threshold
		p	4		sound
		p	5		listeningSound
	m	()I	a	getMinimumAnger
	m	(I)Lbsh;	a	byAnger
		p	0		anger
	m	(Lbsh;Lbsh;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	([Lbsh;)V	a	lambda$static$1
		p	0		values
	m	()Lajd;	b	getAmbientSound
	m	()Lajd;	c	getListeningSound
	m	()Z	d	isAngry
	m	()[Lbsh;	e	$values
	f	Lbsh;	a	CALM
	f	Lbsh;	b	AGITATED
	f	Lbsh;	c	ANGRY
	f	[Lbsh;	d	SORTED_LEVELS
	f	I	e	minimumAnger
	f	Lajd;	f	ambientSound
	f	Lajd;	g	listeningSound
	f	[Lbsh;	h	$VALUES
c	bsi	net/minecraft/world/entity/monster/warden/AngerManagement
	m	(Ljava/util/function/Predicate;Ljava/util/List;)V	<init>	<init>
		p	1		suspectPredicate
		p	2		suspectUuidsToAngerLevel
	m	()Ljava/util/Optional;	a	getActiveEntity
	m	(ILbaq;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$increaseAnger$6
		p	1		suspect
		p	2		anger
	m	(Lafo;)V	a	convertFromUuids
		p	1		world
	m	(Lafo;Ljava/util/function/Predicate;)V	a	tick
		p	1		world
		p	2		suspectPredicate
	m	(Lbaq;)V	a	clearAnger
		p	1		entity
	m	(Lbaq;I)I	a	increaseAnger
		p	1		entity
		p	2		amount
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$3
		p	1		suspect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$createUuidAngerPairs$5
		p	0		suspect
	m	(Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		suspectPredicate
	m	(Ljava/util/function/Predicate;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/function/Predicate;Ljava/util/List;)Lbsi;	a	lambda$codec$1
		p	1		suspectUuidsToAngerLevel
	m	()Ljava/util/List;	b	createUuidAngerPairs
	m	(Lbaq;)I	b	getActiveAnger
		p	1		entity
	m	()V	c	sortAndUpdateHighestAnger
	m	(Lbaq;)Lbbf;	c	lambda$getActiveEntity$8
		p	0		suspect
	m	()Lbaq;	d	getTopSuspect
	m	(Lbaq;)Z	d	lambda$getActiveEntity$7
		p	0		suspect
	m	(Lbaq;)Lcom/mojang/datafixers/util/Pair;	e	lambda$createUuidAngerPairs$4
		p	1		suspect
	f	I	a	CONVERSION_DELAY
	f	I	b	MAX_ANGER
	f	Ljava/util/ArrayList;	c	suspects
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	angerBySuspect
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	angerByUuid
	f	I	f	DEFAULT_ANGER_DECREASE
	f	I	g	conversionDelay
	f	I	h	highestAnger
	f	Lcom/mojang/serialization/Codec;	i	SUSPECT_ANGER_PAIR
	f	Ljava/util/function/Predicate;	j	filter
	f	Lbsi$a;	k	suspectSorter
c	bsi$1	net/minecraft/world/entity/monster/warden/AngerManagement$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Entity$RemovalReason
c	bsi$a	net/minecraft/world/entity/monster/warden/AngerManagement$Sorter
	m	()Lbsi;	a	angerManagement
	m	(Lbaq;Lbaq;)I	a	compare
	f	Lbsi;	a	angerManagement
c	bsj	net/minecraft/world/entity/monster/warden/Warden
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbaq;)V	A	doPush
		p	1		entity
	m	()Lbbf;	G	getTarget
	m	()Z	K_	canTriggerAvoidVibration
	m	()V	R	sendDebugPackets
	m	()Lso;	S	getAddEntityPacket
	m	()V	T	customServerAiStep
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lafo;Lcza;Lgt;Lcyy;Lbaq;Lbaq;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Lafo;Lcza;Lgt;Lcyy;Lcyy$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Lafo;Ldvt;Lbaq;I)V	a	applyDarknessAround
		p	0		world
		p	1		pos
		p	2		entity
		p	3		range
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbao;)V	a	clientDiggingParticles
		p	1		animationState
	m	(Lbaq;)Z	a	canTargetEntity
		p	1		entity
	m	(Lbaq;IZ)V	a	increaseAngerAt
		p	1		entity
		p	2		amount
		p	3		listening
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lbsi;)V	a	lambda$readAdditionalSaveData$2
		p	1		angerManager
	m	(Lcga;)Lbkf;	a	createNavigation
		p	1		world
	m	(Lcgd;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lcze;)V	a	lambda$readAdditionalSaveData$3
	m	(Lgt;Lcgd;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$1
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()F	aF	nextStep
	m	()Z	aP	dampensVibrations
	m	()V	a_	defineSynchedData
	m	(Lazz;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbaq;)V	b	clearAnger
		p	1		entity
	m	(Lgt;Lcur;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lqc;)V	b	lambda$addAdditionalSaveData$0
		p	1		angerNbt
	m	()Z	bm	isPushable
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbaq;)V	c	increaseAngerAt
		p	1		entity
	m	()Z	cF	ignoreExplosion
	m	()Lbca;	dz	getBrain
	m	()F	eD	getSoundVolume
	m	()Lbsh;	fK	getAngerLevel
	m	()Lakh;	fL	getListenableEvents
	m	()Ljava/util/Optional;	fM	getEntityAngryAt
	m	()Lbsi;	fN	getAngerManagement
	m	()Z	fQ	isDiggingOrEmerging
	m	()V	fR	syncClientAngerLevel
	m	()I	fS	getHeartBeatDelay
	m	()V	fT	playListeningSound
	m	()I	fU	getActiveAnger
	m	()Z	fn	canDisableShield
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	k	tick
	m	(Lbbf;)V	k	setAttackTarget
		p	1		target
	m	(Lbaq;)Z	l	canRide
		p	1		entity
	m	()Lbcf$a;	n	createAttributes
	m	()I	q	getClientAngerLevel
	m	()Lajd;	r	getAmbientSound
	m	()Lajd;	x_	getDeathSound
	m	(F)F	y	getTendrilAnimation
		p	1		tickDelta
	m	(F)F	z	getHeartAnimation
		p	1		tickDelta
	m	(Lbaq;)Z	z	doHurtTarget
		p	1		target
	f	Lbao;	b	roarAnimationState
	f	Lbao;	bX	attackAnimationState
	f	Lbao;	bY	sonicBoomAnimationState
	f	Lorg/slf4j/Logger;	bZ	LOGGER
	f	I	cA	heartAnimationO
	f	Lcyv;	cB	dynamicGameEventListener
	f	Lbsi;	cC	angerManagement
	f	Lbao;	c	sniffAnimationState
	f	I	ca	GAME_EVENT_LISTENER_RANGE
	f	I	cb	VIBRATION_COOLDOWN_TICKS
	f	I	cc	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	f	I	cd	MAX_HEALTH
	f	F	ce	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	cf	KNOCKBACK_RESISTANCE
	f	F	cg	ATTACK_KNOCKBACK
	f	I	ch	ATTACK_DAMAGE
	f	Lzr;	ci	CLIENT_ANGER_LEVEL
	f	I	cj	DARKNESS_DISPLAY_LIMIT
	f	I	ck	DARKNESS_DURATION
	f	I	cl	DARKNESS_RADIUS
	f	I	cm	DARKNESS_INTERVAL
	f	I	cn	ANGERMANAGEMENT_TICK_DELAY
	f	I	co	DEFAULT_ANGER
	f	I	cp	PROJECTILE_ANGER
	f	I	cq	ON_HURT_ANGER_BOOST
	f	I	cr	RECENT_PROJECTILE_TICK_THRESHOLD
	f	I	cs	TOUCH_COOLDOWN_TICKS
	f	I	ct	DIGGING_PARTICLES_AMOUNT
	f	F	cu	DIGGING_PARTICLES_DURATION
	f	F	cv	DIGGING_PARTICLES_OFFSET
	f	I	cw	PROJECTILE_ANGER_DISTANCE
	f	I	cx	tendrilAnimation
	f	I	cy	tendrilAnimationO
	f	I	cz	heartAnimation
	f	Lbao;	d	emergeAnimationState
	f	Lbao;	e	diggingAnimationState
c	bsj$1	net/minecraft/world/entity/monster/warden/Warden$1
	m	(Lbsj;Lbbh;Lcga;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(I)Ldpq;	a	createPathFinder
		p	1		range
	f	Lbsj;	p	this$0
c	bsj$1$1	net/minecraft/world/entity/monster/warden/Warden$1$1
	m	(Lbsj$1;Ldpn;I)V	<init>	<init>
		p	2		pathNodeMaker
		p	3		range
	m	(Ldpm;Ldpm;)F	a	distance
		p	1		a
		p	2		b
	f	Lbsj$1;	a	this$1
c	bsj$2	net/minecraft/world/entity/monster/warden/Warden$2
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	bsk	net/minecraft/world/entity/monster/warden/WardenAi
	m	(Lbbf;)V	a	setDigCooldown
		p	0		warden
	m	(Lbbf;Lbbf;)Z	a	lambda$isTarget$2
		p	1		entity
	m	(Lbca;)V	a	initCoreActivity
		p	0		brain
	m	(Lbsj;)V	a	updateActivity
		p	0		warden
	m	(Lbsj;Lbbf;)Z	a	isTarget
		p	0		warden
		p	1		entity
	m	(Lbsj;Lbca;)V	a	initFightActivity
		p	0		warden
		p	1		brain
	m	(Lbsj;Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	0		warden
	m	(Lbsj;Lgt;)V	a	setDisturbanceLocation
		p	0		warden
		p	1		pos
	m	(Lbca;)V	b	initEmergeActivity
		p	0		brain
	m	(Lbsj;Lbbf;)V	b	onTargetInvalid
		p	0		warden
		p	1		suspect
	m	(Lbca;)V	c	initDiggingActivity
		p	0		brain
	m	(Lbsj;Lbbf;)Z	c	lambda$initFightActivity$1
		p	1		entity
	m	(Lbca;)V	d	initIdleActivity
		p	0		brain
	m	(Lbsj;Lbbf;)Z	d	lambda$initFightActivity$0
		p	1		entity
	m	(Lbca;)V	e	initInvestigateActivity
		p	0		brain
	m	(Lbca;)V	f	initSniffingActivity
		p	0		brain
	m	(Lbca;)V	g	initRoarActivity
		p	0		brain
	f	I	a	EMERGE_DURATION
	f	I	b	ROAR_DURATION
	f	I	c	DIGGING_COOLDOWN
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	e	SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f	F	f	SPEED_MULTIPLIER_WHEN_FIGHTING
	f	I	g	MELEE_ATTACK_COOLDOWN
	f	I	h	DIGGING_DURATION
	f	I	i	SNIFFING_DURATION
	f	I	j	DISTURBANCE_LOCATION_EXPIRY_TIME
	f	Ljava/util/List;	k	SENSOR_TYPES
	f	Ljava/util/List;	l	MEMORY_TYPES
	f	Lbcr;	m	DIG_COOLDOWN_SETTER
c	bsk$1	net/minecraft/world/entity/monster/warden/WardenAi$1
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		requiredMemoryState
	m	(Lafo;Lbbf;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lafo;Lbsj;J)V	a	start
		p	1		world
		p	2		entity
		p	3		time
c	bsl	net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	m	(III)V	<init>	<init>
		p	1		ticksSinceLastWarning
		p	2		warningLevel
		p	3		cooldownTicks
	m	()V	a	tick
	m	(I)V	a	setWarningLevel
		p	1		warningLevel
	m	(Lafo;Lgt;)Z	a	hasNearbyWarden
	m	(Lafo;Lgt;Lafp;)Ljava/util/OptionalInt;	a	tryWarn
	m	(Lafp;)Z	a	lambda$tryWarn$4
	m	(Lbsl;)V	a	copyData
		p	1		other
	m	(Lbsl;Lafp;)V	a	lambda$tryWarn$6
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldvt;Lafp;)Z	a	lambda$getNearbyPlayers$7
		p	1		player
	m	()V	b	reset
	m	(Lafo;Lgt;)Ljava/util/List;	b	getNearbyPlayers
		p	0		world
		p	1		pos
	m	(Lbsl;)I	b	lambda$tryWarn$5
		p	0		manager
	m	()I	c	getWarningLevel
	m	(Lbsl;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		manager
	m	()Z	d	onCooldown
	m	(Lbsl;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		manager
	m	()V	e	increaseWarningLevel
	m	(Lbsl;)Ljava/lang/Integer;	e	lambda$static$0
		p	0		manager
	m	()V	f	decreaseWarningLevel
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WARNING_LEVEL
	f	D	c	PLAYER_SEARCH_RADIUS
	f	I	d	WARNING_CHECK_DIAMETER
	f	I	e	DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f	I	f	WARNING_LEVEL_INCREASE_COOLDOWN
	f	I	g	ticksSinceLastWarning
	f	I	h	warningLevel
	f	I	i	cooldownTicks
c	bsm	net/minecraft/world/entity/monster/warden/package-info
c	bsn	net/minecraft/world/entity/npc/AbstractVillager
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lbtf;)Z	a	canBeLeashed
		p	1		player
	m	(Lcey;)V	a	notifyTrade
		p	1		offer
	m	(Lcez;)V	a	overrideOffers
		p	1		offers
	m	(Lcez;[Lbsw$f;I)V	a	addOffersFromItemListings
		p	1		recipeList
		p	2		pool
		p	3		count
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lim;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lafo;)Lbaq;	b	changeDimension
		p	1		destination
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcey;)V	b	rewardTradeXp
		p	1		offer
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	e	setTradingPlayer
		p	1		customer
	m	()I	fK	getVillagerXp
	m	()Lbtf;	fL	getTradingPlayer
	m	()Z	fM	isTrading
	m	()Lcez;	fN	getOffers
	m	()Z	fO	showProgressBar
	m	()Lajd;	fP	getNotifyTradeSound
	m	()V	fQ	playCelebrateSound
	m	()V	fR	stopTrading
	m	()V	fS	updateTrades
	m	()Z	fT	isClientSide
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	(Lcaa;)V	m	notifyTradeUpdated
		p	1		stack
	m	(F)Ldvt;	n	getRopeHoldPosition
		p	1		delta
	m	()I	q	getUnhappyCounter
	m	(I)V	s	setUnhappyCounter
		p	1		ticks
	m	()Lazr;	t	getInventory
	m	(I)V	t	overrideXp
		p	1		experience
	m	(Z)Lajd;	v	getTradeUpdatedSound
		p	1		sold
	f	I	bX	VILLAGER_SLOT_OFFSET
	f	Lcez;	bY	offers
	f	Lzr;	bZ	DATA_UNHAPPY_COUNTER
	f	I	ca	VILLAGER_INVENTORY_SIZE
	f	Lbtf;	cb	tradingPlayer
	f	Lazr;	cc	inventory
c	bso	net/minecraft/world/entity/npc/CatSpawner
	m	(Lafo;Lgt;)I	a	spawnInVillage
		p	1		world
		p	2		pos
	m	(Lafo;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lgt;Lafo;)I	a	spawnCat
		p	1		pos
		p	2		world
	m	(Lhc;)Z	a	lambda$spawnInVillage$0
	m	(Lafo;Lgt;)I	b	spawnInHut
		p	1		world
		p	2		pos
	f	I	a	TICK_DELAY
	f	I	b	nextTick
c	bsp	net/minecraft/world/entity/npc/ClientSideMerchant
	m	(Lbtf;)V	<init>	<init>
		p	1		player
	m	(Lcey;)V	a	notifyTrade
		p	1		offer
	m	(Lcez;)V	a	overrideOffers
		p	1		offers
	m	(Lbtf;)V	e	setTradingPlayer
		p	1		customer
	m	()I	fK	getVillagerXp
	m	()Lbtf;	fL	getTradingPlayer
	m	()Lcez;	fN	getOffers
	m	()Z	fO	showProgressBar
	m	()Lajd;	fP	getNotifyTradeSound
	m	()Z	fT	isClientSide
	m	(Lcaa;)V	m	notifyTradeUpdated
		p	1		stack
	m	(I)V	t	overrideXp
		p	1		experience
	f	Lbtf;	a	source
	f	Lcez;	b	offers
	f	I	c	xp
c	bsq	net/minecraft/world/entity/npc/InventoryCarrier
	m	(Lbbh;Lbsq;Lbpy;)V	a	pickUpItem
		p	0		entity
		p	1		inventoryOwner
		p	2		item
	m	()Lazr;	t	getInventory
c	bsr	net/minecraft/world/entity/npc/Npc
c	bss	net/minecraft/world/entity/npc/Villager
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		entityType
		p	2		world
	m	(Lbau;Lcga;Lbsx;)V	<init>	<init>
		p	1		entityType
		p	2		world
		p	3		type
	m	()V	R	sendDebugPackets
	m	()V	T	customServerAiStep
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(J)Z	a	wantsToSpawnGolem
		p	1		time
	m	(JLbss;)Z	a	lambda$spawnGolemIfNeeded$9
		p	2		villager
	m	(Lafo;JI)V	a	spawnGolemIfNeeded
		p	1		world
		p	2		time
		p	4		requiredCount
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lafo;Lbaq;Lbbf;)V	a	lambda$tellWitnessesThatIWasMurdered$5
	m	(Lafo;Lbbe;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lafo;Lbss;J)V	a	gossip
		p	1		world
		p	2		villager
		p	3		time
	m	(Lazr;Ljava/util/Map$Entry;)I	a	lambda$countFoodPointsInInventory$8
		p	1		item
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lbaq;)V	a	tellWitnessesThatIWasMurdered
		p	1		killer
	m	(Lbbf;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbca;)V	a	registerBrainGoals
		p	1		brain
	m	(Lbju;)Z	a	lambda$getPlayerReputation$7
		p	0		gossipType
	m	(Lbjx;)V	a	releasePoi
	m	(Lbls;Lbaq;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
	m	(Lbss;Lhc;)Z	a	lambda$static$3
		p	0		villager
	m	(Lbst;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbca;	a	makeBrain
		p	1		dynamic
	m	(Lnet/minecraft/server/MinecraftServer;Lbjx;Lhb;)V	a	lambda$releasePoi$6
		p	3		pos
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$4
	m	(Lqc;)V	a	setGossips
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(J)Z	b	golemSpawnConditionsMet
		p	1		worldTime
	m	(Lafo;Lban;)Lbss;	b	getBreedOffspring
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lbss;Lhc;)Z	b	lambda$static$2
		p	0		villager
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcey;)V	b	rewardTradeXp
		p	1		offer
	m	(Lcez;)V	b	setOffers
		p	1		offers
	m	(Lgt;)V	b	startSleeping
		p	1		pos
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lafo;)V	c	refreshBrain
		p	1		world
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbss;Lhc;)Z	c	lambda$static$1
		p	0		villager
	m	()Lrm;	cg	getTypeName
	m	(Lbss;Lhc;)Z	d	lambda$static$0
		p	0		villager
	m	()Lbca$b;	dA	brainProvider
	m	()Lbca;	dz	getBrain
	m	(Lbtf;)V	e	setTradingPlayer
		p	1		customer
	m	(Lbtf;)I	f	getPlayerReputation
		p	1		player
	m	()I	fK	getVillagerXp
	m	()V	fR	stopTrading
	m	()V	fS	updateTrades
	m	()Z	fT	isClientSide
	m	()Lbcf$a;	fU	createAttributes
	m	()Lbst;	fV	getVillagerData
	m	()Z	fW	assignProfessionWhenSpawned
	m	()Z	fX	canRestock
	m	()V	fY	restock
	m	()Z	fZ	shouldRestock
	m	()V	fl	stopSleeping
	m	()Z	g	canBreed
	m	(Lbtf;)V	g	startTrading
		p	1		customer
	m	()V	ga	playWorkSound
	m	()Z	gb	isChasing
	m	()V	gc	eatAndDigestFood
	m	()Z	gd	hasExcessFood
	m	()Z	ge	wantsMoreFood
	m	()Z	gf	hasFarmSeeds
	m	()Lbjt;	gg	getGossips
	m	()V	gh	setUnhappy
	m	()V	gi	resetSpecialPrices
	m	()Z	gj	needsToRestock
	m	()Z	gk	allowedToRestock
	m	()V	gl	catchUpDemand
	m	()V	gm	updateDemand
	m	()V	gn	releaseAllPois
	m	()Z	go	hungry
	m	()V	gp	eatUntilFull
	m	()Z	gq	shouldIncreaseLevel
	m	()V	gr	increaseMerchantCareer
	m	()I	gs	countFoodPointsInInventory
	m	()V	gt	maybeDecayGossip
	m	()V	gu	resetNumberOfRestocks
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbtf;)V	h	updateSpecialPrices
		p	1		player
	m	()V	k	tick
	m	(Lcaa;)Z	l	wantsToPickUp
		p	1		stack
	m	()V	n	ageBoundaryReached
	m	()Lajd;	r	getAmbientSound
	m	(I)V	u	setVillagerXp
		p	1		experience
	m	(I)V	v	digestFood
		p	1		amount
	m	(Z)V	w	setChasing
	m	()Lajd;	x_	getDeathSound
	f	I	bZ	BREEDING_FOOD_THRESHOLD
	f	Z	cA	assignProfessionWhenSpawned
	f	Lcom/google/common/collect/ImmutableList;	cB	MEMORY_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cC	SENSOR_TYPES
	f	Ljava/util/Map;	ca	FOOD_POINTS
	f	F	cb	SPEED_MODIFIER
	f	Ljava/util/Map;	cc	POI_MEMORIES
	f	Lorg/slf4j/Logger;	cd	LOGGER
	f	Lzr;	ce	DATA_VILLAGER_DATA
	f	I	cf	TRADES_PER_LEVEL
	f	Ljava/util/Set;	cg	WANTED_ITEMS
	f	I	ch	MAX_GOSSIP_TOPICS
	f	I	ci	GOSSIP_COOLDOWN
	f	I	cj	GOSSIP_DECAY_INTERVAL
	f	I	ck	REPUTATION_CHANGE_PER_EVENT
	f	I	cl	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	f	I	cm	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	f	J	cn	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	f	I	co	updateMerchantTimer
	f	Z	cp	increaseProfessionLevelOnUpdate
	f	Lbtf;	cq	lastTradedPlayer
	f	Z	cr	chasing
	f	I	cs	foodLevel
	f	Lbjt;	ct	gossips
	f	J	cu	lastGossipTime
	f	J	cv	lastGossipDecayTime
	f	I	cw	villagerXp
	f	J	cx	lastRestockGameTime
	f	I	cy	numberOfRestocksToday
	f	J	cz	lastRestockCheckDayTime
c	bst	net/minecraft/world/entity/npc/VillagerData
	m	(Lbsx;Lbsv;I)V	<init>	<init>
		p	1		type
		p	2		profession
		p	3		level
	m	()Lbsx;	a	getType
	m	(I)Lbst;	a	setLevel
		p	1		level
	m	(Lbst;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lbsv;)Lbst;	a	setProfession
		p	1		profession
	m	(Lbsx;)Lbst;	a	setType
		p	1		type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	()Lbsv;	b	getProfession
	m	(I)I	b	getMinXpPerLevel
		p	0		level
	m	(Lbst;)Lbsv;	b	lambda$static$3
	m	()I	c	getLevel
	m	(I)I	c	getMaxXpPerLevel
		p	0		level
	m	(Lbst;)Lbsx;	c	lambda$static$1
	m	()Lbsv;	d	lambda$static$2
	m	(I)Z	d	canLevelUp
		p	0		level
	m	()Lbsx;	e	lambda$static$0
	f	I	a	MIN_VILLAGER_LEVEL
	f	I	b	MAX_VILLAGER_LEVEL
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[I	d	NEXT_LEVEL_XP_THRESHOLDS
	f	Lbsx;	e	type
	f	Lbsv;	f	profession
	f	I	g	level
c	bsu	net/minecraft/world/entity/npc/VillagerDataHolder
	m	(Lbst;)V	a	setVillagerData
		p	1		villagerData
	m	()Lbst;	fV	getVillagerData
c	bsv	net/minecraft/world/entity/npc/VillagerProfession
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lajd;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	name
	m	(Laai;Lhc;)Z	a	lambda$register$4
		p	1		entry
	m	(Lhc;)Z	a	lambda$static$0
		p	0		poiType
	m	(Ljava/lang/String;Laai;Lajd;)Lbsv;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		workSound
	m	(Ljava/lang/String;Laai;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lajd;)Lbsv;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		gatherableItems
		p	3		secondaryJobSites
		p	4		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lajd;)Lbsv;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lajd;)Lbsv;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		gatherableItems
		p	4		secondaryJobSites
		p	5		workSound
	m	()Ljava/util/function/Predicate;	b	heldJobSite
	m	(Laai;Lhc;)Z	b	lambda$register$3
		p	1		entry
	m	()Ljava/util/function/Predicate;	c	acquirableJobSite
	m	(Laai;Lhc;)Z	c	lambda$register$2
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	d	requestedItems
	m	(Laai;Lhc;)Z	d	lambda$register$1
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	e	secondaryPoi
	m	()Lajd;	f	workSound
	f	Ljava/util/function/Predicate;	a	ALL_ACQUIRABLE_JOBS
	f	Lbsv;	b	NONE
	f	Lbsv;	c	ARMORER
	f	Lbsv;	d	BUTCHER
	f	Lbsv;	e	CARTOGRAPHER
	f	Lbsv;	f	CLERIC
	f	Lbsv;	g	FARMER
	f	Lbsv;	h	FISHERMAN
	f	Lbsv;	i	FLETCHER
	f	Lbsv;	j	LEATHERWORKER
	f	Lbsv;	k	LIBRARIAN
	f	Lbsv;	l	MASON
	f	Lbsv;	m	NITWIT
	f	Lbsv;	n	SHEPHERD
	f	Lbsv;	o	TOOLSMITH
	f	Lbsv;	p	WEAPONSMITH
	f	Ljava/lang/String;	q	name
	f	Ljava/util/function/Predicate;	r	heldJobSite
	f	Ljava/util/function/Predicate;	s	acquirableJobSite
	f	Lcom/google/common/collect/ImmutableSet;	t	requestedItems
	f	Lcom/google/common/collect/ImmutableSet;	u	secondaryPoi
	f	Lajd;	v	workSound
c	bsw	net/minecraft/world/entity/npc/VillagerTrades
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	toIntMap
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	TRADES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	WANDERING_TRADER_TRADES
	f	I	c	DEFAULT_SUPPLY
	f	I	d	COMMON_ITEMS_SUPPLY
	f	I	e	UNCOMMON_ITEMS_SUPPLY
	f	I	f	XP_LEVEL_1_SELL
	f	I	g	XP_LEVEL_1_BUY
	f	I	h	XP_LEVEL_2_SELL
	f	I	i	XP_LEVEL_2_BUY
	f	I	j	XP_LEVEL_3_SELL
	f	I	k	XP_LEVEL_3_BUY
	f	I	l	XP_LEVEL_4_SELL
	f	I	m	XP_LEVEL_4_BUY
	f	I	n	XP_LEVEL_5_TRADE
	f	F	o	LOW_TIER_PRICE_MULTIPLIER
	f	F	p	HIGH_TIER_PRICE_MULTIPLIER
c	bsw$a	net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	m	(Lbzw;I)V	<init>	<init>
		p	1		item
		p	2		price
	m	(Lbzw;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		maxUses
		p	4		experience
	m	(Lalu;)Lbyu;	a	getRandomDye
		p	0		random
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	Lbzw;	a	item
	f	I	b	value
	f	I	c	maxUses
	f	I	d	villagerXp
c	bsw$b	net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	m	(Lcfz;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		maxUses
		p	4		experience
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	Lbzw;	a	item
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	bsw$c	net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	m	(IIILjava/util/Map;)V	<init>	<init>
		p	1		count
		p	2		maxUses
		p	3		experience
		p	4		map
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lbsx;)V	a	lambda$new$1
		p	0		villagerType
	m	(Ljava/util/Map;Lbsx;)Z	a	lambda$new$0
		p	1		villagerType
	f	Ljava/util/Map;	a	trades
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
c	bsw$d	net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	m	(I)V	<init>	<init>
		p	1		experience
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	villagerXp
c	bsw$e	net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	m	(Lbzw;III)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
	m	(Lbzw;IIIF)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
		p	5		multiplier
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcaa;	a	itemStack
	f	I	b	baseEmeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	bsw$f	net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
c	bsw$g	net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	m	(Lcfz;IILbzw;III)V	<init>	<init>
		p	1		item
		p	2		secondCount
		p	3		price
		p	4		sellItem
		p	5		sellCount
		p	6		maxUses
		p	7		experience
	m	(Lcfz;ILbzw;III)V	<init>	<init>
		p	1		item
		p	2		secondCount
		p	3		sellItem
		p	4		sellCount
		p	5		maxUses
		p	6		experience
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcaa;	a	fromItem
	f	I	b	fromCount
	f	I	c	emeraldCost
	f	Lcaa;	d	toItem
	f	I	e	toCount
	f	I	f	maxUses
	f	I	g	villagerXp
	f	F	h	priceMultiplier
c	bsw$h	net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	m	(Lbzw;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		experience
	m	(Lbzw;IIII)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcaa;IIII)V	<init>	<init>
		p	1		stack
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcaa;IIIIF)V	<init>	<init>
		p	1		stack
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
	m	(Lciw;IIII)V	<init>	<init>
		p	1		block
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcaa;	a	itemStack
	f	I	b	emeraldCost
	f	I	c	numberOfItems
	f	I	d	maxUses
	f	I	e	villagerXp
	f	F	f	priceMultiplier
c	bsw$i	net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	m	(Lbah;II)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		experience
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	Lbah;	a	effect
	f	I	b	duration
	f	I	c	xp
	f	F	d	priceMultiplier
c	bsw$j	net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	m	(Lbzw;ILbzw;IIII)V	<init>	<init>
		p	1		arrow
		p	2		secondCount
		p	3		tippedArrow
		p	4		sellCount
		p	5		price
		p	6		maxUses
		p	7		experience
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lcbv;)Z	a	lambda$getOffer$0
		p	0		potion
	f	Lcaa;	a	toItem
	f	I	b	toCount
	f	I	c	emeraldCost
	f	I	d	maxUses
	f	I	e	villagerXp
	f	Lbzw;	f	fromItem
	f	I	g	fromCount
	f	F	h	priceMultiplier
c	bsw$k	net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	m	(ILakh;Ljava/lang/String;Ldqg$a;II)V	<init>	<init>
		p	1		price
		p	2		structure
		p	3		nameKey
		p	4		iconType
		p	5		maxUses
		p	6		experience
	m	(Lbaq;Lalu;)Lcey;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	emeraldCost
	f	Lakh;	b	destination
	f	Ljava/lang/String;	c	displayName
	f	Ldqg$a;	d	destinationType
	f	I	e	maxUses
	f	I	f	villagerXp
c	bsx	net/minecraft/world/entity/npc/VillagerType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Lhc;)Lbsx;	a	byBiome
		p	0		biomeEntry
	m	(Ljava/lang/String;)Lbsx;	a	register
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Lbsx;	a	DESERT
	f	Lbsx;	b	JUNGLE
	f	Lbsx;	c	PLAINS
	f	Lbsx;	d	SAVANNA
	f	Lbsx;	e	SNOW
	f	Lbsx;	f	SWAMP
	f	Lbsx;	g	TAIGA
	f	Ljava/lang/String;	h	name
	f	Ljava/util/Map;	i	BY_BIOME
c	bsy	net/minecraft/world/entity/npc/WanderingTrader
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lafo;Lban;)Lban;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbsy;)Lbkf;	a	access$000
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbsy;)Lbkf;	b	access$100
	m	(Lbtf;Lazl;)Lazm;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcey;)V	b	rewardTradeXp
		p	1		offer
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lbsy;)Lbkf;	c	access$200
	m	(Lbsy;)Lbkf;	d	access$300
	m	(Lcaa;)Lajd;	d	getDrinkingSound
		p	1		stack
	m	(Lbsy;)Z	e	lambda$registerGoals$1
		p	1		wanderingTrader
	m	(Lbsy;)Z	f	lambda$registerGoals$0
		p	1		wanderingTrader
	m	()Z	fO	showProgressBar
	m	()Lajd;	fP	getNotifyTradeSound
	m	()V	fS	updateTrades
	m	()I	fU	getDespawnDelay
	m	()V	fV	maybeDespawn
	m	()Lgt;	fW	getWanderTarget
	m	(Lgt;)V	g	setWanderTarget
		p	1		wanderTarget
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lajd;	r	getAmbientSound
	m	()V	u	registerGoals
	m	(I)V	u	setDespawnDelay
		p	1		despawnDelay
	m	(Z)Lajd;	v	getTradeUpdatedSound
		p	1		sold
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	I	bZ	NUMBER_OF_TRADE_OFFERS
	f	Lgt;	ca	wanderTarget
	f	I	cb	despawnDelay
c	bsy$a	net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	m	(Lbsy;Lbsy;DD)V	<init>	<init>
		p	2		trader
		p	3		proximityDistance
		p	5		speed
	m	()Z	a	canUse
	m	(Lgt;D)Z	a	isTooFarAway
		p	1		pos
		p	2		proximityDistance
	m	()V	d	stop
	m	()V	e	tick
	f	Lbsy;	a	trader
	f	D	b	stopDistance
	f	D	c	speedModifier
	f	Lbsy;	d	this$0
c	bsz	net/minecraft/world/entity/npc/WanderingTraderSpawner
	m	(Ldqy;)V	<init>	<init>
		p	1		properties
	m	(Lafo;)Z	a	spawn
		p	1		world
	m	(Lafo;Lbsy;I)V	a	tryToSpawnLlamaFor
		p	1		world
		p	2		wanderingTrader
		p	3		range
	m	(Lafo;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lcfg;Lgt;)Z	a	hasEnoughSpace
		p	1		world
		p	2		pos
	m	(Lcgd;Lgt;I)Lgt;	a	findSpawnPositionNear
		p	1		world
		p	2		pos
		p	3		range
	m	(Lgt;)Z	a	lambda$spawn$1
		p	0		pos
	m	(Lhc;)Z	a	lambda$spawn$0
	f	I	a	DEFAULT_SPAWN_DELAY
	f	I	b	DEFAULT_TICK_DELAY
	f	I	c	MIN_SPAWN_CHANCE
	f	I	d	MAX_SPAWN_CHANCE
	f	I	e	SPAWN_CHANCE_INCREASE
	f	I	f	SPAWN_ONE_IN_X_CHANCE
	f	I	g	NUMBER_OF_SPAWN_ATTEMPTS
	f	Lalu;	h	random
	f	Ldqy;	i	serverLevelData
	f	I	j	tickDelay
	f	I	k	spawnDelay
	f	I	l	spawnChance
c	bta	net/minecraft/world/entity/npc/package-info
c	btb	net/minecraft/world/entity/package-info
c	btc	net/minecraft/world/entity/player/Abilities
	m	()F	a	getFlyingSpeed
	m	(F)V	a	setFlyingSpeed
		p	1		flySpeed
	m	(Lpj;)V	a	addSaveData
		p	1		nbt
	m	()F	b	getWalkingSpeed
	m	(F)V	b	setWalkingSpeed
		p	1		walkSpeed
	m	(Lpj;)V	b	loadSaveData
		p	1		nbt
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	mayfly
	f	Z	d	instabuild
	f	Z	e	mayBuild
	f	F	f	flyingSpeed
	f	F	g	walkingSpeed
c	btd	net/minecraft/world/entity/player/ChatVisiblity
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		translationKey
	m	()I	a	getId
	m	(I)Lbtd;	a	byId
		p	0		id
	m	()Ljava/lang/String;	b	getKey
	m	(I)[Lbtd;	b	lambda$static$0
	m	()[Lbtd;	d	$values
	f	Lbtd;	a	FULL
	f	Lbtd;	b	SYSTEM
	f	Lbtd;	c	HIDDEN
	f	[Lbtd;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	[Lbtd;	g	$VALUES
c	bte	net/minecraft/world/entity/player/Inventory
	m	(Lbtf;)V	<init>	<init>
		p	1		player
	m	()Lrm;	X	getName
	m	()V	a	clearContent
	m	(D)V	a	swapPaint
		p	1		scrollAmount
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbtf;)V	a	lambda$hurtArmor$1
		p	1		player
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lakh;)Z	a	contains
		p	1		tag
	m	(Lazz;F[I)V	a	hurtArmor
		p	1		damageSource
		p	2		amount
		p	3		slots
	m	(Lbte;)V	a	replaceWith
		p	1		other
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtj;)V	a	fillStackedContents
		p	1		finder
	m	(Lcaa;)V	a	setPickedItem
		p	1		stack
	m	(Lcaa;Lcaa;)Z	a	hasRemainingSpaceForItem
		p	1		existingStack
		p	2		stack
	m	(Lcaa;Z)V	a	placeItemBackInInventory
		p	1		stack
		p	2		notifiesClient
	m	(Lcur;)F	a	getDestroySpeed
		p	1		block
	m	(Ljava/util/function/Predicate;ILazf;)I	a	clearOrCountMatchingItems
		p	1		shouldRemove
		p	2		maxCount
		p	3		craftingInventory
	m	(Lpp;)Lpp;	a	save
		p	1		nbtList
	m	(Z)Lcaa;	a	removeFromSelected
		p	1		entireStack
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcaa;)I	b	findSlotMatchingItem
		p	1		stack
	m	(Lpp;)V	b	load
		p	1		nbtList
	m	()Z	c	isEmpty
	m	(I)V	c	pickSlot
		p	1		slot
	m	(ILcaa;)Z	c	add
		p	1		slot
		p	2		stack
	m	(Lcaa;)I	c	findSlotMatchingUnusedItem
		p	1		stack
	m	(I)Z	d	isHotbarSlot
		p	0		slot
	m	(ILcaa;)I	d	addResource
		p	1		slot
		p	2		stack
	m	(Lcaa;)I	d	getSlotWithRemainingSpace
		p	1		stack
	m	()V	e	setChanged
	m	(I)Lcaa;	e	getArmor
		p	1		slot
	m	(Lcaa;)Z	e	add
		p	1		stack
	m	()Lcaa;	f	getSelected
	m	(Lcaa;)V	f	placeItemBackInInventory
		p	1		stack
	m	()I	g	getSelectionSize
	m	(Lcaa;)V	g	removeItem
		p	1		stack
	m	()I	h	getFreeSlot
	m	(Lcaa;)Z	h	contains
		p	1		stack
	m	()I	i	getSuitableHotbarSlot
	m	(Lcaa;)I	i	addResource
		p	1		stack
	m	()V	j	tick
	m	(Lcaa;)Ljava/lang/String;	j	lambda$add$0
	m	()V	k	dropAll
	m	()I	l	getTimesChanged
	f	I	b	POP_TIME_DURATION
	f	I	c	INVENTORY_SIZE
	f	I	d	SLOT_OFFHAND
	f	I	e	NOT_FOUND_INDEX
	f	[I	f	ALL_ARMOR_SLOTS
	f	[I	g	HELMET_SLOT_ONLY
	f	Lhi;	h	items
	f	Lhi;	i	armor
	f	Lhi;	j	offhand
	f	I	k	selected
	f	Lbtf;	l	player
	f	I	m	SELECTION_SIZE
	f	Ljava/util/List;	n	compartments
	f	I	o	timesChanged
c	btf	net/minecraft/world/entity/player/Player
	m	(Lcga;Lgt;FLcom/mojang/authlib/GameProfile;Lbti;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		yaw
		p	4		gameProfile
		p	5		publicKey
	m	()Z	B_	isSpectator
	m	(Lbaq;)V	C	lambda$respawnEntityOnShoulder$7
		p	1		entity
	m	()Lrm;	C_	getDisplayName
	m	()Lrm;	X	getName
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(ILcez;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Laaj;)V	a	awardStat
		p	1		stat
	m	(Laaj;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lafo;Lbbf;)Z	a	wasKilled
		p	1		world
		p	2		other
	m	(Lafo;Lgt;FZZ)Ljava/util/Optional;	a	findRespawnPositionAndUseSpawnBlock
		p	0		world
		p	1		pos
		p	2		angle
		p	3		forced
		p	4		alive
	m	(Lajd;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Lajd;Lajf;FF)V	a	playNotifySound
		p	1		event
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lajl;)V	a	resetStat
		p	1		stat
	m	(Lajl;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lazl;Lbtf;)V	a	lambda$hurtCurrentlyUsedShield$6
		p	1		player
	m	(Lazp;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq$c;)V	a	remove
		p	1		reason
	m	(Lbaq;)V	a	crit
		p	1		target
	m	(Lbaq;Lazl;)Lazm;	a	interactOn
		p	1		entity
		p	2		hand
	m	(Lbav;)Z	a	doesEmitEquipEvent
		p	1		slot
	m	(Lbav;Lcaa;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbba;)V	a	setMainArm
		p	1		arm
	m	(Lbbr;)Lbar;	a	getDimensions
		p	1		pose
	m	(Lbod;Lazf;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lbsl;)V	a	lambda$readAdditionalSaveData$2
	m	(Lbtf;)Z	a	canHarmPlayer
		p	1		player
	m	(Lbtg;)Z	a	isModelPartShown
		p	1		modelPart
	m	(Lcaa;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcaa;Lazl;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcaa;Lcaa;Lbvx;)V	a	updateTutorialInventoryAction
		p	1		cursorStack
		p	2		slotStack
		p	3		clickType
	m	(Lcaa;Z)Lbpy;	a	drop
		p	1		stack
		p	2		retainOwnership
	m	(Lcaa;ZZ)Lbpy;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lcfb;)V	a	openMinecartCommandBlock
		p	1		commandBlockExecutor
	m	(Lcga;Lcaa;)Lcaa;	a	eat
		p	1		world
		p	2		stack
	m	(Lcga;Lgt;Lcfx;)Z	a	blockActionRestricted
		p	1		world
		p	2		pos
		p	3		gameMode
	m	(Lcss;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Lcte;)V	a	openJigsawBlock
		p	1		jigsaw
	m	(Lctn;)V	a	openTextEdit
		p	1		sign
	m	(Lctr;)V	a	openStructureBlock
		p	1		structureBlock
	m	(Lcur;Ldvt;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Ldvt;Lbbl;)Ldvt;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Lgt;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Lgt;Lgy;Lcaa;)Z	a	mayUseItemAt
		p	1		pos
		p	2		facing
		p	3		stack
	m	(Lhb;)Ljava/util/Optional;	a	lambda$addAdditionalSaveData$4
	m	(Lim;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Ljava/lang/String;Lrv;)Lrv;	a	lambda$decorateDisplayNameComponent$8
		p	2		style
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Ljava/util/Optional;)V	a	setLastDeathLocation
		p	1		lastDeathPos
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$5
	m	(Lrm;Z)V	a	displayClientMessage
		p	1		message
		p	2		actionBar
	m	(Lrt;)Lrt;	a	decorateDisplayNameComponent
		p	1		component
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	([Laaj;)V	a	awardRecipesByKey
		p	1		ids
	m	()F	aD	getBlockSpeedFactor
	m	()Lajd;	aG	getSwimSound
	m	()Lajd;	aH	getSwimSplashSound
	m	()Lajd;	aI	getSwimHighSpeedSplashSound
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	aY	updateSwimming
	m	()V	a_	defineSynchedData
	m	()I	ar	getPortalWaitTime
	m	(Lajl;)V	b	awardStat
		p	1		stat
	m	(Lazz;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lazz;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbaq;)V	b	magicCrit
		p	1		target
	m	(Lbau;)V	b	lambda$playShoulderEntityAmbientSound$1
	m	(Lbbr;Lbar;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcur;)Z	b	shouldRemoveSoulSpeed
		p	1		landingState
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lpj;Lqc;)V	b	lambda$addAdditionalSaveData$3
	m	()I	bD	getDimensionChangingDelay
	m	()Ljava/lang/Iterable;	bF	getHandSlots
	m	()Ljava/lang/Iterable;	bG	getArmorSlots
	m	()Z	bT	isSwimming
	m	()V	bb	doWaterSplashEffect
	m	()V	bs	rideTick
	m	()D	bt	getMyRidingOffset
	m	()V	bx	removeVehicle
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Lazz;)Lajd;	c	getHurtSound
		p	1		source
	m	(Lazz;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbaq;)V	c	touch
		p	1		entity
	m	(Lbau;)Z	c	lambda$playShoulderEntityAmbientSound$0
		p	0		entityType
	m	(Lbav;)Lcaa;	c	getItemBySlot
		p	1		slot
	m	(Lcur;)F	c	getDestroySpeed
		p	1		block
	m	(Lpj;)V	c	playShoulderEntityAmbientSound
		p	1		entityNbt
	m	()Lajf;	cS	getSoundSource
	m	()I	cT	getFireImmuneTicks
	m	()Ljava/lang/String;	cr	getScoreboardName
	m	()Z	cs	isPushedByFluid
	m	()Z	cv	shouldShowName
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Lbaq;)V	d	attack
		p	1		target
	m	(Lbbf;)V	d	blockUsingShield
		p	1		attacker
	m	(Lcur;)Z	d	hasCorrectToolForDrops
		p	1		state
	m	()Z	dF	onSoulSpeedBlock
	m	()Z	dL	isAffectedByFluids
	m	()I	dP	getExperienceReward
	m	()Z	dQ	isAlwaysExperienceDropper
	m	()Z	dZ	canBeSeenAsEnemy
	m	()Z	dx	shouldBeSaved
	m	()Z	dy	isAlwaysTicking
	m	()Z	eF	isImmobile
	m	()V	eI	jumpFromGround
	m	()F	eL	getSpeed
	m	()V	eN	serverAiStep
	m	()F	eR	getAbsorptionAmount
	m	()Lbba;	eT	getMainArm
	m	()V	ej	dropEquipment
	m	()Lbbf$a;	eo	getFallSounds
	m	()Z	f	isCreative
	m	(Lazz;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lgt;)Z	f	freeAt
		p	1		pos
	m	()Lbti;	fA	getProfilePublicKey
	m	()Lbte;	fB	getInventory
	m	()Lbtc;	fC	getAbilities
	m	()Z	fD	isSleepingLongEnough
	m	()I	fE	getSleepTimer
	m	()Z	fF	tryToStartFallFlying
	m	()V	fG	startFallFlying
	m	()V	fH	stopFallFlying
	m	()I	fI	getEnchantmentSeed
	m	()I	fJ	getXpNeededForNextLevel
	m	()Lbsl;	fK	getWardenSpawnTracker
	m	()Lbvl;	fL	getFoodData
	m	()Z	fM	isHurt
	m	()Z	fN	mayBuild
	m	()Lbwx;	fO	getEnderChestInventory
	m	()V	fP	removeEntitiesOnShoulder
	m	()Ldwr;	fQ	getScoreboard
	m	()Z	fR	isReducedDebugInfo
	m	()Lpj;	fS	getShoulderEntityLeft
	m	()Lpj;	fT	getShoulderEntityRight
	m	()F	fU	getCurrentItemAttackStrengthDelay
	m	()V	fV	resetAttackStrengthTicker
	m	()Lbzx;	fW	getCooldowns
	m	()F	fX	getLuck
	m	()Z	fY	canUseGameMasterBlocks
	m	()Z	fZ	isScoping
	m	()Lcom/google/common/collect/ImmutableList;	fh	getDismountPoses
	m	()V	fl	stopSleeping
	m	()Lbcf$a;	fo	createAttributes
	m	()Z	fp	isSecondaryUseActive
	m	()Z	fq	wantsToStopRiding
	m	()Z	fr	isStayingOnGroundSurface
	m	()Z	fs	updateIsUnderwater
	m	()V	ft	updatePlayerPose
	m	()I	fu	getScore
	m	()V	fv	destroyVanishingCursedItems
	m	()V	fw	sweepAttack
	m	()V	fx	respawn
	m	()Z	fy	isLocalPlayer
	m	()Lcom/mojang/authlib/GameProfile;	fz	getGameProfile
	m	(I)V	g	setRemainingFireTicks
		p	1		fireTicks
	m	(Lbbf;)V	g	doAutoAttackOnTouch
		p	1		target
	m	(Lcaa;)Z	g	canTakeItem
		p	1		stack
	m	(Ldvt;)V	g	travel
		p	1		movementInput
	m	()Ljava/util/Optional;	ga	getLastDeathLocation
	m	(Lcaa;)Lcaa;	h	getProjectile
		p	1		stack
	m	(Lpj;)Z	h	setEntityOnShoulder
		p	1		entityNbt
	m	(Lpj;)V	i	setShoulderEntityLeft
		p	1		entityNbt
	m	()Lbzx;	j	createItemCooldowns
	m	(Lcaa;)Z	j	addItem
		p	1		stack
	m	(Lpj;)V	j	setShoulderEntityRight
		p	1		entityNbt
	m	()V	k	tick
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	(Lpj;)V	k	respawnEntityOnShoulder
		p	1		entityNbt
	m	()V	n	turtleHelmetTick
	m	(F)Ldvt;	n	getRopeHoldPosition
		p	1		delta
	m	()V	q	closeContainer
	m	(DDD)V	q	checkMovementStatistics
		p	1		dx
		p	3		dy
		p	5		dz
	m	(F)V	q	hurtCurrentlyUsedShield
		p	1		amount
	m	()V	r	moveCloak
	m	(DDD)V	r	checkRidingStatistics
		p	1		dx
		p	3		dy
		p	5		dz
	m	(I)V	r	setScore
		p	1		score
	m	(Z)V	r	disableShield
		p	1		sprinting
	m	(I)V	s	increaseScore
		p	1		score
	m	(Z)Z	s	canEat
		p	1		ignoreHunger
	m	()Z	t	isAboveGround
	m	(F)V	t	setAbsorptionAmount
		p	1		amount
	m	(I)V	t	startAutoSpinAttack
		p	1		riptideTicks
	m	(Z)V	t	setReducedDebugInfo
		p	1		reducedDebugInfo
	m	(F)V	u	causeFoodExhaustion
		p	1		exhaustion
	m	(F)F	v	getAttackStrengthScale
		p	1		baseTime
	m	()V	w	onUpdateAbilities
	m	()V	w_	aiStep
	m	()Lajd;	x_	getDeathSound
	f	I	bE	MAX_NAME_LENGTH
	f	I	bF	MAX_HEALTH
	f	I	bG	SLEEP_DURATION
	f	I	bH	WAKE_UP_DURATION
	f	I	bI	ENDER_SLOT_OFFSET
	f	F	bJ	CROUCH_BB_HEIGHT
	f	F	bK	SWIMMING_BB_WIDTH
	f	F	bL	SWIMMING_BB_HEIGHT
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	F	bM	DEFAULT_EYE_HEIGHT
	f	Lbar;	bN	STANDING_DIMENSIONS
	f	Lzr;	bO	DATA_PLAYER_MODE_CUSTOMISATION
	f	Lzr;	bP	DATA_PLAYER_MAIN_HAND
	f	Lzr;	bQ	DATA_SHOULDER_LEFT
	f	Lzr;	bR	DATA_SHOULDER_RIGHT
	f	Lbwx;	bS	enderChestInventory
	f	Lbwo;	bT	inventoryMenu
	f	Lbvp;	bU	containerMenu
	f	Lbvl;	bV	foodData
	f	Lbsl;	bW	wardenSpawnTracker
	f	I	bX	jumpTriggerTime
	f	F	bY	oBob
	f	F	bZ	bob
	f	Ljava/util/Map;	c	POSES
	f	I	ca	takeXpDelay
	f	D	cb	xCloakO
	f	D	cc	yCloakO
	f	D	cd	zCloakO
	f	D	ce	xCloak
	f	D	cf	yCloak
	f	D	cg	zCloak
	f	Z	ch	wasUnderwater
	f	I	ci	experienceLevel
	f	I	cj	totalExperience
	f	F	ck	experienceProgress
	f	I	cl	enchantmentSeed
	f	F	cm	defaultFlySpeed
	f	Lbtt;	cn	fishing
	f	J	co	timeEntitySatOnShoulder
	f	Lbte;	cp	inventory
	f	I	cq	sleepCounter
	f	Lbtc;	cr	abilities
	f	I	cs	lastLevelUpTime
	f	Lcom/mojang/authlib/GameProfile;	ct	gameProfile
	f	Lbti;	cu	profilePublicKey
	f	Z	cv	reducedDebugInfo
	f	Lcaa;	cw	lastItemInMainHand
	f	Lbzx;	cx	cooldowns
	f	Ljava/util/Optional;	cy	lastDeathLocation
	f	I	d	FLY_ACHIEVEMENT_SPEED
	f	Lzr;	e	DATA_PLAYER_ABSORPTION_ID
	f	Lzr;	f	DATA_SCORE_ID
c	btf$1	net/minecraft/world/entity/player/Player$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	btf$a	net/minecraft/world/entity/player/Player$BedSleepingProblem
	m	(Ljava/lang/String;ILrm;)V	<init>	<init>
		p	3		message
	m	()Lrm;	a	getMessage
	m	()[Lbtf$a;	b	$values
	f	Lbtf$a;	a	NOT_POSSIBLE_HERE
	f	Lbtf$a;	b	NOT_POSSIBLE_NOW
	f	Lbtf$a;	c	TOO_FAR_AWAY
	f	Lbtf$a;	d	OBSTRUCTED
	f	Lbtf$a;	e	OTHER_PROBLEM
	f	Lbtf$a;	f	NOT_SAFE
	f	Lrm;	g	message
	f	[Lbtf$a;	h	$VALUES
c	btg	net/minecraft/world/entity/player/PlayerModelPart
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getMask
	m	()I	b	getBit
	m	()Ljava/lang/String;	c	getId
	m	()Lrm;	d	getName
	m	()[Lbtg;	e	$values
	f	Lbtg;	a	CAPE
	f	Lbtg;	b	JACKET
	f	Lbtg;	c	LEFT_SLEEVE
	f	Lbtg;	d	RIGHT_SLEEVE
	f	Lbtg;	e	LEFT_PANTS_LEG
	f	Lbtg;	f	RIGHT_PANTS_LEG
	f	Lbtg;	g	HAT
	f	I	h	bit
	f	I	i	mask
	f	Ljava/lang/String;	j	id
	f	Lrm;	k	name
	f	[Lbtg;	l	$VALUES
c	bth	net/minecraft/world/entity/player/ProfileKeyPair
	m	()Z	a	dueRefresh
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/security/PrivateKey;	b	privateKey
	m	()Lbti;	c	publicKey
	m	()Ljava/time/Instant;	d	refreshedAfter
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/security/PrivateKey;	b	privateKey
	f	Lbti;	c	publicKey
	f	Ljava/time/Instant;	d	refreshedAfter
c	bti	net/minecraft/world/entity/player/ProfilePublicKey
	m	()Lalw;	a	createSignatureValidator
	m	(Lalw;Lbti$a;)Lbti;	a	createValidated
		p	0		servicesSignatureVerifier
		p	1		publicKeyData
	m	(Lbti$a;)Lbti;	a	createTrusted
		p	0		publicKeyData
	m	()Lbti$a;	b	data
	m	(Lbti$a;)Lcom/mojang/serialization/DataResult;	b	lambda$static$0
		p	0		publicKeyData
	f	Lcom/mojang/serialization/Codec;	a	TRUSTED_CODEC
	f	Lbti$a;	b	data
c	bti$a	net/minecraft/world/entity/player/ProfilePublicKey$Data
	m	(Lqx;)V	<init>	<init>
		p	1		buf
	m	()Z	a	hasExpired
	m	(Lalw;)Z	a	validateSignature
		p	1		servicesSignatureVerifier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lqx;)V	a	write
		p	1		buf
	m	()Ljava/time/Instant;	b	expiresAt
	m	()Ljava/security/PublicKey;	c	key
	m	()[B	d	keySignature
	m	()Ljava/lang/String;	e	signedPayload
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/time/Instant;	b	expiresAt
	f	Ljava/security/PublicKey;	c	key
	f	[B	d	keySignature
	f	I	e	MAX_KEY_SIGNATURE_SIZE
c	btj	net/minecraft/world/entity/player/StackedContents
	m	()V	a	clear
	m	(I)Lcaa;	a	fromStackingIndex
		p	0		itemId
	m	(II)I	a	take
		p	1		itemId
		p	2		count
	m	(Lcaa;)V	a	accountSimpleStack
		p	1		stack
	m	(Lcaa;I)V	a	accountStack
		p	1		stack
		p	2		maxCount
	m	(Lccs;ILit/unimi/dsi/fastutil/ints/IntList;)I	a	getBiggestCraftableStack
		p	1		recipe
		p	2		limit
		p	3		output
	m	(Lccs;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	canCraft
		p	1		recipe
		p	2		output
	m	(Lccs;Lit/unimi/dsi/fastutil/ints/IntList;I)Z	a	canCraft
		p	1		recipe
		p	2		output
		p	3		multiplier
	m	(I)Z	b	has
		p	1		itemId
	m	(II)V	b	put
		p	1		itemId
		p	2		count
	m	(Lcaa;)V	b	accountStack
		p	1		stack
	m	(Lccs;Lit/unimi/dsi/fastutil/ints/IntList;)I	b	getBiggestCraftableStack
		p	1		recipe
		p	2		output
	m	(Lcaa;)I	c	getStackingIndex
		p	0		stack
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	a	contents
	f	I	b	EMPTY
c	btj$a	net/minecraft/world/entity/player/StackedContents$RecipePicker
	m	(Lbtj;Lccs;)V	<init>	<init>
		p	2		recipe
	m	()[I	a	getUniqueAvailableIngredientItems
	m	(I)Z	a	dfs
		p	1		multiplier
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)Z	a	tryPick
		p	1		multiplier
		p	2		output
	m	(ZI)V	a	visit
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	a	hasConnection
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	()I	b	getMinIngredientCount
	m	(I)Z	b	isSatisfied
		p	1		itemId
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)I	b	tryPickAll
		p	1		minimum
		p	2		output
	m	(ZI)Z	b	hasVisited
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	b	hasResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)V	c	setSatisfied
		p	1		itemId
	m	(ZI)I	c	getVisitedIndex
		p	1		reversed
		p	2		itemId
	m	(ZII)V	c	toggleResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)I	d	getSatisfiedIndex
		p	1		itemId
	m	(ZII)I	d	getIndex
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	f	Lbtj;	a	this$0
	f	Lccs;	b	recipe
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	f	[I	e	items
	f	I	f	itemCount
	f	Ljava/util/BitSet;	g	data
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	path
c	btk	net/minecraft/world/entity/player/package-info
c	btl	net/minecraft/world/entity/projectile/AbstractArrow
	m	(Lbau;DDDLcga;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbau;Lbbf;Lcga;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	A	startFalling
	m	()V	C	resetPiercedEntities
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(I)V	a	setKnockback
		p	1		punch
	m	(IZ)V	a	setFlag
		p	1		index
		p	2		flag
	m	(Lbaq;)Z	a	canHitEntity
		p	1		entity
	m	(Lbbf;)V	a	doPostHurtEffects
		p	1		target
	m	(Lbbf;F)V	a	setEnchantmentEffectsFromEntity
		p	1		entity
		p	2		damageModifier
	m	(Lbbl;Ldvt;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbbr;Lbar;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;)Z	a	tryPickup
		p	1		player
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvt;Ldvt;)Ldvq;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCritArrow
		p	1		critical
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(B)V	b	setPierceLevel
		p	1		level
	m	(Lajd;)V	b	setSoundEvent
		p	1		sound
	m	(Lbaq;)V	b	setOwner
		p	1		entity
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	b_	playerTouch
		p	1		player
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
		p	8		divergence
	m	()Z	ci	isAttackable
	m	()V	h	tickDespawn
	m	(D)V	h	setBaseDamage
		p	1		damage
	m	()Lajd;	i	getDefaultHitGroundSoundEvent
	m	()Lajd;	j	getHitGroundSoundEvent
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Lcaa;	l	getPickupItem
	m	()D	n	getBaseDamage
	m	()I	o	getKnockback
	m	(Z)V	p	setNoPhysics
		p	1		noClip
	m	()Z	q	isCritArrow
	m	(Z)V	q	setShotFromCrossbow
		p	1		shotFromCrossbow
	m	()Z	r	shotFromCrossbow
	m	()B	s	getPierceLevel
	m	()F	t	getWaterInertia
	m	()Z	u	isNoPhysics
	m	()Z	w	shouldFall
	f	Lzr;	ao	ID_FLAGS
	f	Lzr;	ap	PIERCE_LEVEL
	f	I	aq	FLAG_CRIT
	f	I	ar	FLAG_NOPHYSICS
	f	I	as	FLAG_CROSSBOW
	f	Lcur;	at	lastState
	f	I	au	life
	f	D	av	baseDamage
	f	I	aw	knockback
	f	Lajd;	ax	soundEvent
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	ay	piercingIgnoreEntityIds
	f	Ljava/util/List;	az	piercedAndKilledEntities
	f	Z	b	inGround
	f	I	c	inGroundTime
	f	Lbtl$a;	d	pickup
	f	I	e	shakeTime
	f	D	f	ARROW_BASE_DAMAGE
c	btl$1	net/minecraft/world/entity/projectile/AbstractArrow$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$AbstractArrow$Pickup
c	btl$a	net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	m	()[Lbtl$a;	a	$values
	m	(I)Lbtl$a;	a	byOrdinal
		p	0		ordinal
	f	Lbtl$a;	a	DISALLOWED
	f	Lbtl$a;	b	ALLOWED
	f	Lbtl$a;	c	CREATIVE_ONLY
	f	[Lbtl$a;	d	$VALUES
c	btm	net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	m	(Lbau;DDDDDDLcga;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		directionX
		p	10		directionY
		p	12		directionZ
		p	14		world
	m	(Lbau;Lbbf;DDDLcga;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
		p	9		world
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	N_	shouldBurn
	m	()Lso;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq;)Z	a	canHitEntity
		p	1		entity
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bh	getLightLevelDependentMagicValue
	m	()Z	bl	isPickable
	m	()F	by	getPickRadius
	m	()Lim;	i	getTrailParticle
	m	()F	j	getInertia
	m	()V	k	tick
	f	D	b	xPower
	f	D	c	yPower
	f	D	d	zPower
c	btn	net/minecraft/world/entity/projectile/Arrow
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcga;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	()V	A	updateColor
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lbaj;)V	a	addEffect
		p	1		effect
	m	(Lbbf;)V	a	doPostHurtEffects
		p	1		target
	m	(Lcaa;)V	a	setEffectsFromItem
		p	1		stack
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	makeParticle
		p	1		amount
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	setFixedColor
		p	1		color
	m	(Lcaa;)I	c	getCustomColor
		p	0		stack
	m	()V	k	tick
	m	()Lcaa;	l	getPickupItem
	m	()I	w	getColor
	f	I	ao	NO_EFFECT_COLOR
	f	Lzr;	ap	ID_EFFECT_COLOR
	f	B	aq	EVENT_POTION_PUFF
	f	Lcbv;	ar	potion
	f	Ljava/util/Set;	as	effects
	f	Z	at	fixedColor
	f	I	f	EXPOSED_POTION_DECAY_TIME
c	bto	net/minecraft/world/entity/projectile/DragonFireball
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lbbf;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
	m	()Z	N_	shouldBurn
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	()Z	bl	isPickable
	m	()Lim;	i	getTrailParticle
	f	F	e	SPLASH_RANGE
c	btp	net/minecraft/world/entity/projectile/EvokerFangs
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDDFILbbf;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		warmup
		p	10		owner
	m	()Lso;	S	getAddEntityPacket
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(F)F	a	getAnimationProgress
		p	1		tickDelta
	m	(Lbbf;)V	a	setOwner
		p	1		owner
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbbf;)V	c	dealDamageTo
		p	1		target
	m	()Lbbf;	h	getOwner
	m	()V	k	tick
	f	I	ao	lifeTicks
	f	Z	ap	clientSideAttackStarted
	f	Lbbf;	aq	owner
	f	Ljava/util/UUID;	ar	ownerUUID
	f	I	b	ATTACK_DURATION
	f	I	c	LIFE_OFFSET
	f	I	d	ATTACK_TRIGGER_TICKS
	f	I	e	warmupDelayTicks
	f	Z	f	sentSpikeEvent
c	btq	net/minecraft/world/entity/projectile/EyeOfEnder
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lso;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lcaa;)V	a	setItem
		p	1		stack
	m	(Lgt;)V	a	signalTo
		p	1		pos
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bh	getLightLevelDependentMagicValue
	m	(Lcaa;)V	c	lambda$setItem$0
		p	0		stack
	m	()Z	ci	isAttackable
	m	()Lcaa;	h	getItem
	m	()Lcaa;	i	getItemRaw
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	f	Z	ao	surviveAfterDeath
	f	Lzr;	b	DATA_ITEM_STACK
	f	D	c	tx
	f	D	d	ty
	f	D	e	tz
	f	I	f	life
c	btr	net/minecraft/world/entity/projectile/Fireball
	m	(Lbau;DDDDDDLcga;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		directionX
		p	10		directionY
		p	12		directionZ
		p	14		world
	m	(Lbau;Lbbf;DDDLcga;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
		p	9		world
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcaa;)V	a	setItem
		p	1		stack
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcaa;)V	c	lambda$setItem$0
		p	0		stack
	m	()Lcaa;	h	getItem
	m	()Lcaa;	l	getItemRaw
	f	Lzr;	e	DATA_ITEM_STACK
c	bts	net/minecraft/world/entity/projectile/FireworkRocketEntity
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDDLcaa;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Lcga;Lbaq;DDDLcaa;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		stack
	m	(Lcga;Lcaa;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		x
		p	5		y
		p	7		z
		p	9		shotAtAngle
	m	(Lcga;Lcaa;Lbaq;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		shotAtAngle
	m	(Lcga;Lcaa;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		shooter
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(I)V	a	lambda$tick$0
		p	1		id
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	ci	isAttackable
	m	()Lcaa;	h	getItem
	m	()Z	i	isShotAtAngle
	m	()V	j	explode
	m	(DDD)Z	j	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	k	tick
	m	()Z	l	hasExplosion
	m	()V	n	dealExplosionDamage
	m	()Z	o	isAttachedToEntity
	f	Lbbf;	ao	attachedToEntity
	f	Lzr;	b	DATA_ID_FIREWORKS_ITEM
	f	Lzr;	c	DATA_ATTACHED_TO_TARGET
	f	Lzr;	d	DATA_SHOT_AT_ANGLE
	f	I	e	life
	f	I	f	lifetime
c	btt	net/minecraft/world/entity/projectile/FishingHook
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbau;Lcga;II)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		luckOfTheSeaLevel
		p	4		lureLevel
	m	(Lbtf;Lcga;II)V	<init>	<init>
		p	1		thrower
		p	2		world
		p	3		luckOfTheSeaLevel
		p	4		lureLevel
	m	()Lso;	S	getAddEntityPacket
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(Lbaq$c;)V	a	remove
		p	1		reason
	m	(Lbaq;)Z	a	canHitEntity
		p	1		entity
	m	(Lbtf;)Z	a	shouldStopFishing
		p	1		player
	m	(Lbtt$b;Lbtt$b;)Lbtt$b;	a	lambda$getOpenWaterTypeForArea$0
	m	(Lbtt;)V	a	updateOwnerInfo
		p	1		fishingBobber
	m	(Lcaa;)I	a	retrieve
		p	1		usedItem
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lgt;)V	a	catchingFish
		p	1		pos
	m	(Lgt;Lgt;)Lbtt$b;	a	getOpenWaterTypeForArea
		p	1		start
		p	2		end
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	aj	onClientRemoval
	m	(Lbaq;)V	b	setOwner
		p	1		entity
	m	(Lgt;)Z	b	calculateOpenWater
		p	1		pos
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbaq;)V	c	pullEntity
		p	1		entity
	m	(Lgt;)Lbtt$b;	c	getOpenWaterTypeForBlock
		p	1		pos
	m	()Z	cl	canChangeDimensions
	m	()Z	h	isOpenWaterFishing
	m	()Lbtf;	i	getPlayerOwner
	m	()Lbaq;	j	getHookedIn
	m	()V	k	tick
	m	()V	l	checkCollision
	m	(Lbaq;)V	x	setHookedEntity
		p	1		entity
	f	Lzr;	ao	DATA_HOOKED_ENTITY
	f	Lzr;	ap	DATA_BITING
	f	I	aq	life
	f	I	ar	nibble
	f	I	as	timeUntilLured
	f	I	at	timeUntilHooked
	f	F	au	fishAngle
	f	Z	av	openWater
	f	Lbaq;	aw	hookedIn
	f	Lbtt$a;	ax	currentState
	f	I	ay	luck
	f	I	az	lureSpeed
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lalu;	c	syncronizedRandom
	f	Z	d	biting
	f	I	e	outOfWaterTime
	f	I	f	MAX_OUT_OF_WATER_TIME
c	btt$1	net/minecraft/world/entity/projectile/FishingHook$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType
c	btt$a	net/minecraft/world/entity/projectile/FishingHook$FishHookState
	m	()[Lbtt$a;	a	$values
	f	Lbtt$a;	a	FLYING
	f	Lbtt$a;	b	HOOKED_IN_ENTITY
	f	Lbtt$a;	c	BOBBING
	f	[Lbtt$a;	d	$VALUES
c	btt$b	net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	m	()[Lbtt$b;	a	$values
	f	Lbtt$b;	a	ABOVE_WATER
	f	Lbtt$b;	b	INSIDE_WATER
	f	Lbtt$b;	c	INVALID
	f	[Lbtt$b;	d	$VALUES
c	btu	net/minecraft/world/entity/projectile/ItemSupplier
	m	()Lcaa;	h	getItem
c	btv	net/minecraft/world/entity/projectile/LargeFireball
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lbbf;DDDI)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocityX
		p	5		velocityY
		p	7		velocityZ
		p	9		explosionPower
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	f	I	e	explosionPower
c	btw	net/minecraft/world/entity/projectile/LlamaSpit
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lbog;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	()V	k	tick
c	btx	net/minecraft/world/entity/projectile/Projectile
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lso;	S	getAddEntityPacket
	m	(Lbaq;)Z	a	canHitEntity
		p	1		entity
	m	(Lbaq;FFFFF)V	a	shootFromRotation
		p	1		shooter
		p	2		pitch
		p	3		yaw
		p	4		roll
		p	5		speed
		p	6		divergence
	m	(Lcga;Lgt;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	(Lbaq;)V	b	setOwner
		p	1		entity
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
		p	8		divergence
	m	(Lbaq;)Z	c	lambda$checkLeftOwner$0
		p	0		entity
	m	(FF)F	d	lerpRotation
		p	0		prevRot
		p	1		newRot
	m	(Lbaq;)Z	d	ownedBy
		p	1		entity
	m	()Z	i	checkLeftOwner
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Lbaq;	x	getOwner
	m	()Lbaq;	y	getEffectSource
	m	()V	z	updateRotation
	f	Ljava/util/UUID;	b	ownerUUID
	f	Lbaq;	c	cachedOwner
	f	Z	d	leftOwner
	f	Z	e	hasBeenShot
c	bty	net/minecraft/world/entity/projectile/ProjectileUtil
	m	(Lbaq;F)V	a	rotateTowardsMovement
		p	0		entity
		p	1		delta
	m	(Lbaq;Ldvt;Ldvt;Ldvo;Ljava/util/function/Predicate;D)Ldvq;	a	getEntityHitResult
		p	0		entity
		p	1		min
		p	2		max
		p	3		box
		p	4		predicate
	m	(Lbaq;Ljava/util/function/Predicate;)Ldvr;	a	getHitResult
		p	0		entity
		p	1		predicate
	m	(Lbbf;Lbzw;)Lazl;	a	getWeaponHoldingHand
		p	0		entity
		p	1		item
	m	(Lbbf;Lcaa;F)Lbtl;	a	getMobArrow
		p	0		entity
		p	1		stack
		p	2		damageModifier
	m	(Lcga;Lbaq;Ldvt;Ldvt;Ldvo;Ljava/util/function/Predicate;)Ldvq;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
	m	(Lcga;Lbaq;Ldvt;Ldvt;Ldvo;Ljava/util/function/Predicate;F)Ldvq;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
c	btz	net/minecraft/world/entity/projectile/ShulkerBullet
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lbbf;Lbaq;Lgy$a;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		target
		p	4		axis
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq;)Z	a	canHitEntity
		p	1		entity
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	(Lgy$a;)V	a	selectNextMoveDirection
		p	1		axis
	m	(Lgy;)V	a	setMoveDirection
		p	1		direction
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lss;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bI	isOnFire
	m	()F	bh	getLightLevelDependentMagicValue
	m	()Z	bl	isPickable
	m	()Lajf;	cS	getSoundSource
	m	()V	dn	checkDespawn
	m	()Lgy;	h	getMoveDirection
	m	()V	k	tick
	f	D	ao	targetDeltaY
	f	D	ap	targetDeltaZ
	f	Ljava/util/UUID;	aq	targetId
	f	D	b	SPEED
	f	Lbaq;	c	finalTarget
	f	Lgy;	d	currentMoveDirection
	f	I	e	flightSteps
	f	D	f	targetDeltaX
c	bua	net/minecraft/world/entity/projectile/SmallFireball
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDDDDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lcga;Lbbf;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocityX
		p	5		velocityY
		p	7		velocityZ
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	()Z	bl	isPickable
c	bub	net/minecraft/world/entity/projectile/Snowball
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcga;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	()Lbzw;	i	getDefaultItem
	m	()Lim;	n	getParticle
c	buc	net/minecraft/world/entity/projectile/SpectralArrow
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcga;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lbbf;)V	a	doPostHurtEffects
		p	1		target
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	k	tick
	m	()Lcaa;	l	getPickupItem
	f	I	f	duration
c	bud	net/minecraft/world/entity/projectile/ThrowableItemProjectile
	m	(Lbau;DDDLcga;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbau;Lbbf;Lcga;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcaa;)V	a	setItem
		p	1		item
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcaa;)V	c	lambda$setItem$0
		p	0		stack
	m	()Lcaa;	h	getItem
	m	()Lbzw;	i	getDefaultItem
	m	()Lcaa;	j	getItemRaw
	f	Lzr;	b	DATA_ITEM_STACK
c	bue	net/minecraft/world/entity/projectile/ThrowableProjectile
	m	(Lbau;DDDLcga;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbau;Lbbf;Lcga;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	()V	k	tick
	m	()F	l	getGravity
c	buf	net/minecraft/world/entity/projectile/ThrownEgg
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcga;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	()Lbzw;	i	getDefaultItem
c	bug	net/minecraft/world/entity/projectile/ThrownEnderpearl
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	(Lafo;)Lbaq;	b	changeDimension
		p	1		destination
	m	()Lbzw;	i	getDefaultItem
	m	()V	k	tick
c	buh	net/minecraft/world/entity/projectile/ThrownExperienceBottle
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcga;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	()Lbzw;	i	getDefaultItem
	m	()F	l	getGravity
c	bui	net/minecraft/world/entity/projectile/ThrownPotion
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcga;Lbbf;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lcaa;Lcbv;)V	a	makeAreaOfEffectCloud
		p	1		stack
		p	2		potion
	m	(Ldvp;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	(Lgt;)V	a	dowseFire
		p	1		pos
	m	(Ljava/util/List;Lbaq;)V	a	applySplash
		p	1		statusEffects
		p	2		entity
	m	()Lbzw;	i	getDefaultItem
	m	()F	l	getGravity
	m	()V	n	applyWater
	m	()Z	o	isLingering
	f	D	b	SPLASH_RANGE
	f	Ljava/util/function/Predicate;	c	WATER_SENSITIVE
	f	D	d	SPLASH_RANGE_SQ
c	buj	net/minecraft/world/entity/projectile/ThrownTrident
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lbbf;Lcaa;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		stack
	m	()Z	A	isChanneling
	m	()Z	C	isAcceptibleReturnOwner
	m	(Lbtf;)Z	a	tryPickup
		p	1		player
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvt;Ldvt;)Ldvq;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtf;)V	b_	playerTouch
		p	1		player
	m	()V	h	tickDespawn
	m	()Lajd;	i	getDefaultHitGroundSoundEvent
	m	(DDD)Z	j	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	k	tick
	m	()Lcaa;	l	getPickupItem
	m	()F	t	getWaterInertia
	m	()Z	w	isFoil
	f	Lzr;	ao	ID_LOYALTY
	f	Lzr;	ap	ID_FOIL
	f	Lcaa;	aq	tridentItem
	f	Z	ar	dealtDamage
	f	I	f	clientSideReturnTridentTickCount
c	buk	net/minecraft/world/entity/projectile/WitherSkull
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;Lbbf;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
	m	()Z	N_	shouldBurn
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcfs;Lcfg;Lgt;Lcur;Ldoy;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Ldvq;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ldvr;)V	a	onHit
		p	1		hitResult
	m	(Z)V	a	setDangerous
		p	1		charged
	m	()V	a_	defineSynchedData
	m	()Z	bI	isOnFire
	m	()Z	bl	isPickable
	m	()F	j	getInertia
	m	()Z	l	isDangerous
	f	Lzr;	e	DATA_DANGEROUS
c	bul	net/minecraft/world/entity/projectile/package-info
c	bum	net/minecraft/world/entity/raid/Raid
	m	(ILafo;Lgt;)V	<init>	<init>
		p	1		id
		p	2		world
		p	3		pos
	m	(Lafo;Lpj;)V	<init>	<init>
		p	1		world
		p	2		nbt
	m	()Z	A	hasMoreWaves
	m	()Z	B	isFinalWave
	m	()Z	C	hasBonusWave
	m	()Z	D	hasSpawnedBonusWave
	m	()Z	E	shouldSpawnBonusGroup
	m	()V	F	updateRaiders
	m	()Z	G	shouldSpawnGroup
	m	()V	H	setDirty
	m	()Z	a	isOver
	m	(I)V	a	setBadOmenLevel
		p	1		badOmenLevel
	m	(II)Lgt;	a	findRandomSpawnPos
		p	1		proximity
		p	2		tries
	m	(ILbun;)V	a	setLeader
		p	1		wave
		p	2		entity
	m	(ILbun;Lgt;Z)V	a	joinRaid
		p	1		wave
		p	2		raider
		p	3		pos
		p	4		existing
	m	(ILbun;Z)Z	a	addWaveMob
		p	1		wave
		p	2		entity
		p	3		countHealth
	m	(Lafp;)Z	a	lambda$validPlayer$0
		p	1		player
	m	(Lazj;)I	a	getNumGroups
		p	1		difficulty
	m	(Lbaq;)V	a	addHeroOfTheVillage
		p	1		entity
	m	(Lbtf;)V	a	absorbBadOmen
		p	1		player
	m	(Lbum$b;IZ)I	a	getDefaultNumSpawns
		p	1		member
		p	2		wave
		p	3		extra
	m	(Lbum$b;Lalu;ILazk;Z)I	a	getPotentialBonusSpawns
		p	1		member
		p	2		random
		p	3		wave
		p	4		localDifficulty
		p	5		extra
	m	(Lbun;Z)V	a	removeFromRaid
		p	1		entity
		p	2		countHealth
	m	(Lgt;)V	a	playSound
		p	1		pos
	m	(Ljava/lang/Integer;)Ljava/util/Set;	a	lambda$addWaveMob$2
		p	0		wave
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	()Z	b	isBetweenWaves
	m	(I)Lbun;	b	getLeader
		p	1		wave
	m	(ILbun;)Z	b	addWaveMob
		p	1		wave
		p	2		entity
	m	(Lgt;)V	b	spawnGroup
		p	1		pos
	m	()Z	c	hasFirstWaveSpawned
	m	(I)V	c	removeLeader
		p	1		wave
	m	(Lgt;)V	c	setCenter
		p	1		center
	m	()Z	d	isStopped
	m	(I)Ljava/util/Optional;	d	getValidSpawnPos
		p	1		proximity
	m	(Lgt;)D	d	lambda$moveRaidCenterToNearbyVillageSection$1
		p	1		pos
	m	()Z	e	isVictory
	m	()Z	f	isLoss
	m	()F	g	getTotalHealth
	m	()Ljava/util/Set;	h	getAllRaiders
	m	()Lcga;	i	getLevel
	m	()Z	j	isStarted
	m	()I	k	getGroupsSpawned
	m	()I	l	getMaxBadOmenLevel
	m	()I	m	getBadOmenLevel
	m	()V	n	stop
	m	()V	o	tick
	m	()V	p	updateBossbar
	m	()F	q	getHealthOfLivingRaiders
	m	()I	r	getTotalRaidersAlive
	m	()Lcaa;	s	getLeaderBannerInstance
	m	()Lgt;	t	getCenter
	m	()I	u	getId
	m	()Z	v	isActive
	m	()F	w	getEnchantOdds
	m	()Ljava/util/function/Predicate;	x	validPlayer
	m	()V	y	updatePlayers
	m	()V	z	moveRaidCenterToNearbyVillageSection
	f	Ljava/util/Map;	A	groupToLeaderMap
	f	Ljava/util/Map;	B	groupRaiderMap
	f	Ljava/util/Set;	C	heroesOfTheVillage
	f	J	D	ticksActive
	f	Lgt;	E	center
	f	Lafo;	F	level
	f	Z	G	started
	f	I	H	id
	f	F	I	totalHealth
	f	I	J	badOmenLevel
	f	Z	K	active
	f	I	L	groupsSpawned
	f	Lafl;	M	raidEvent
	f	I	N	postRaidTicks
	f	I	O	raidCooldownTicks
	f	Lalu;	P	random
	f	I	Q	numGroups
	f	Lbum$a;	R	status
	f	I	S	celebrationTicks
	f	Ljava/util/Optional;	T	waveSpawnPos
	f	I	a	VILLAGE_RADIUS_BUFFER
	f	I	b	MAX_NO_ACTION_TIME
	f	I	c	MAX_CELEBRATION_TICKS
	f	I	d	TICKS_PER_DAY
	f	I	e	DEFAULT_MAX_BAD_OMEN_LEVEL
	f	I	f	VALID_RAID_RADIUS_SQR
	f	I	g	RAID_REMOVAL_THRESHOLD_SQR
	f	I	h	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	f	I	i	ATTEMPT_RAID_FARTHEST
	f	I	j	ATTEMPT_RAID_CLOSE
	f	I	k	ATTEMPT_RAID_INSIDE
	f	I	l	VILLAGE_SEARCH_RADIUS
	f	I	m	RAID_TIMEOUT_TICKS
	f	I	n	NUM_SPAWN_ATTEMPTS
	f	Ljava/lang/String;	o	OMINOUS_BANNER_PATTERN_NAME
	f	Ljava/lang/String;	p	RAIDERS_REMAINING
	f	I	q	POST_RAID_TICK_LIMIT
	f	I	r	DEFAULT_PRE_RAID_TICKS
	f	I	s	OUTSIDE_RAID_BOUNDS_TIMEOUT
	f	I	t	LOW_MOB_THRESHOLD
	f	Lrm;	u	RAID_NAME_COMPONENT
	f	Lrm;	v	VICTORY
	f	Lrm;	w	DEFEAT
	f	Lrm;	x	RAID_BAR_VICTORY_COMPONENT
	f	Lrm;	y	RAID_BAR_DEFEAT_COMPONENT
	f	I	z	HERO_OF_THE_VILLAGE_DURATION
c	bum$1	net/minecraft/world/entity/raid/Raid$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	f	[I	b	$SwitchMap$net$minecraft$world$Difficulty
c	bum$a	net/minecraft/world/entity/raid/Raid$RaidStatus
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbum$a;	a	getByName
		p	0		name
	m	()[Lbum$a;	b	$values
	f	Lbum$a;	a	ONGOING
	f	Lbum$a;	b	VICTORY
	f	Lbum$a;	c	LOSS
	f	Lbum$a;	d	STOPPED
	f	[Lbum$a;	e	VALUES
	f	[Lbum$a;	f	$VALUES
c	bum$b	net/minecraft/world/entity/raid/Raid$RaiderType
	m	(Ljava/lang/String;ILbau;[I)V	<init>	<init>
		p	3		type
		p	4		countInWave
	m	()[Lbum$b;	a	$values
	f	Lbum$b;	a	VINDICATOR
	f	Lbum$b;	b	EVOKER
	f	Lbum$b;	c	PILLAGER
	f	Lbum$b;	d	WITCH
	f	Lbum$b;	e	RAVAGER
	f	[Lbum$b;	f	VALUES
	f	Lbau;	g	entityType
	f	[I	h	spawnsPerWaveBeforeBonus
	f	[Lbum$b;	i	$VALUES
c	bun	net/minecraft/world/entity/raid/Raider
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lajd;	M_	getCelebrateSound
	m	()Z	P	requiresCustomPersistence
	m	(I)V	a	setWave
		p	1		wave
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lazz;)V	a	die
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbum;)V	a	setCurrentRaid
		p	1		raid
	m	(Lbun;)Lalu;	a	access$000
	m	(Lcgp;Lazk;Lbbj;Lbbx;Lpj;)Lbbx;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	setTicksOutsideRaid
		p	1		outOfRaidCounter
	m	(Lbpy;)V	b	pickUpItem
		p	1		item
	m	(Lbun;)F	b	access$100
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbpy;)Z	c	lambda$static$0
		p	0		itemEntity
	m	(Lbun;)Lalu;	c	access$200
	m	(Lbun;)Z	d	access$300
	m	(Lbun;)Lalu;	e	access$400
	m	(Lbun;)Lalu;	f	access$500
	m	()V	fO	updateNoActionTime
	m	()Z	fR	canJoinPatrol
	m	()Z	fX	canJoinRaid
	m	()Lbum;	fY	getCurrentRaid
	m	()Z	fZ	hasActiveRaid
	m	()I	ga	getWave
	m	()Z	gb	isCelebrating
	m	()I	gc	getTicksOutsideRaid
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	u	registerGoals
	m	()V	w_	aiStep
	m	(Z)V	y	setCanJoinRaid
		p	1		ableToJoinRaid
	m	(Z)V	z	setCelebrating
		p	1		celebrating
	f	Ljava/util/function/Predicate;	b	ALLOWED_ITEMS
	f	Z	bX	canJoinRaid
	f	I	bY	ticksOutsideRaid
	f	Lzr;	c	IS_CELEBRATING
	f	Lbum;	d	raid
	f	I	e	wave
c	bun$a	net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	m	(Lbun;Lbqb;F)V	<init>	<init>
		p	2		illager
		p	3		distance
	m	()Z	E_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbli;	a	shoutTargeting
	f	Lbun;	b	this$0
	f	Lbun;	c	mob
	f	F	d	hostileRadiusSqr
c	bun$b	net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	m	(Lbun;Lbun;)V	<init>	<init>
		p	2		actor
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbun;	a	this$0
	f	Lbun;	b	mob
c	bun$c	net/minecraft/world/entity/raid/Raider$RaiderCelebration
	m	(Lbun;Lbun;)V	<init>	<init>
		p	2		raider
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbun;	a	this$0
	f	Lbun;	b	mob
c	bun$d	net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	m	(Lbun;DI)V	<init>	<init>
		p	1		raider
		p	2		speed
		p	4		distance
	m	()Z	a	canUse
	m	(Lgt;)Z	a	hasNotVisited
		p	1		pos
	m	(Lhc;)Z	a	lambda$hasSuitablePoi$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isValidRaid
	m	()Z	i	hasSuitablePoi
	m	()V	k	updateVisited
	f	Lbun;	a	raider
	f	D	b	speedModifier
	f	Lgt;	c	poiPos
	f	Ljava/util/List;	d	visited
	f	I	e	distanceToPoi
	f	Z	f	stuck
c	buo	net/minecraft/world/entity/raid/Raids
	m	(Lafo;)V	<init>	<init>
		p	1		world
	m	()V	a	tick
	m	(I)Lbum;	a	get
		p	1		id
	m	(Lafo;Lgt;)Lbum;	a	getOrCreateRaid
		p	1		world
		p	2		pos
	m	(Lafo;Lpj;)Lbuo;	a	load
		p	0		world
		p	1		nbt
	m	(Lafp;)Lbum;	a	createOrExtendRaid
		p	1		player
	m	(Lbun;Lbum;)Z	a	canJoinRaid
		p	0		raider
		p	1		raid
	m	(Lgt;I)Lbum;	a	getNearbyRaid
		p	1		pos
		p	2		searchDistance
	m	(Lhc;)Ljava/lang/String;	a	getFileId
		p	0		dimensionTypeEntry
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lhc;)Z	b	lambda$createOrExtendRaid$0
		p	0		poiType
	m	()I	d	getUniqueId
	f	Ljava/lang/String;	a	RAID_FILE_ID
	f	Ljava/util/Map;	b	raidMap
	f	Lafo;	c	level
	f	I	d	nextAvailableID
	f	I	e	tick
c	bup	net/minecraft/world/entity/raid/package-info
c	buq	net/minecraft/world/entity/schedule/Activity
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbuq;	a	register
		p	0		id
	f	Ljava/lang/String;	A	name
	f	I	B	hashCode
	f	Lbuq;	a	CORE
	f	Lbuq;	b	IDLE
	f	Lbuq;	c	WORK
	f	Lbuq;	d	PLAY
	f	Lbuq;	e	REST
	f	Lbuq;	f	MEET
	f	Lbuq;	g	PANIC
	f	Lbuq;	h	RAID
	f	Lbuq;	i	PRE_RAID
	f	Lbuq;	j	HIDE
	f	Lbuq;	k	FIGHT
	f	Lbuq;	l	CELEBRATE
	f	Lbuq;	m	ADMIRE_ITEM
	f	Lbuq;	n	AVOID
	f	Lbuq;	o	RIDE
	f	Lbuq;	p	PLAY_DEAD
	f	Lbuq;	q	LONG_JUMP
	f	Lbuq;	r	RAM
	f	Lbuq;	s	TONGUE
	f	Lbuq;	t	SWIM
	f	Lbuq;	u	LAY_SPAWN
	f	Lbuq;	v	SNIFF
	f	Lbuq;	w	INVESTIGATE
	f	Lbuq;	x	ROAR
	f	Lbuq;	y	EMERGE
	f	Lbuq;	z	DIG
c	bur	net/minecraft/world/entity/schedule/Keyframe
	m	(IF)V	<init>	<init>
		p	1		startTime
		p	2		priority
	m	()I	a	getTimeStamp
	m	()F	b	getValue
	f	I	a	timeStamp
	f	F	b	value
c	bus	net/minecraft/world/entity/schedule/Schedule
	m	(I)Lbuq;	a	getActivityAt
		p	1		time
	m	(ILjava/util/Map$Entry;)D	a	lambda$getActivityAt$1
	m	(Lbuq;)V	a	ensureTimelineExistsFor
		p	1		activity
	m	(Lbuq;Ljava/util/Map$Entry;)Z	a	lambda$getAllTimelinesExceptFor$0
	m	(Ljava/lang/String;)Lbut;	a	register
		p	0		id
	m	(Lbuq;)Lbuu;	b	getTimelineFor
		p	1		activity
	m	(Lbuq;)Ljava/util/List;	c	getAllTimelinesExceptFor
		p	1		activity
	f	I	a	WORK_START_TIME
	f	I	b	TOTAL_WORK_TIME
	f	Lbus;	c	EMPTY
	f	Lbus;	d	SIMPLE
	f	Lbus;	e	VILLAGER_BABY
	f	Lbus;	f	VILLAGER_DEFAULT
	f	Ljava/util/Map;	g	timelines
c	but	net/minecraft/world/entity/schedule/ScheduleBuilder
	m	(Lbus;)V	<init>	<init>
		p	1		schedule
	m	()Lbus;	a	build
	m	(ILbuq;)Lbut;	a	changeActivityAt
		p	1		startTime
		p	2		activity
	m	(Lbut$a;)V	a	lambda$build$1
		p	1		activity
	m	(Lbut$a;Lbuu;)V	a	lambda$build$0
	f	Lbus;	a	schedule
	f	Ljava/util/List;	b	transitions
c	but$a	net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	m	(ILbuq;)V	<init>	<init>
		p	1		startTime
		p	2		activity
	m	()I	a	getTime
	m	()Lbuq;	b	getActivity
	f	I	a	time
	f	Lbuq;	b	activity
c	buu	net/minecraft/world/entity/schedule/Timeline
	m	()Lcom/google/common/collect/ImmutableList;	a	getKeyframes
	m	(I)F	a	getValueAt
		p	1		time
	m	(IF)Lbuu;	a	addKeyframe
		p	1		startTime
		p	2		priority
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lbur;)V	a	lambda$sortAndDeduplicateKeyframes$0
	m	(Ljava/util/Collection;)Lbuu;	a	addKeyframes
		p	1		entries
	m	()V	b	sortAndDeduplicateKeyframes
	f	Ljava/util/List;	a	keyframes
	f	I	b	previousIndex
c	buv	net/minecraft/world/entity/schedule/package-info
c	buw	net/minecraft/world/entity/vehicle/AbstractMinecart
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbau;Lcga;DDD)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		x
		p	5		y
		p	7		z
	m	()Lso;	S	getAddEntityPacket
	m	(DDDD)Ldvt;	a	getPosOffs
		p	1		x
		p	3		y
		p	5		z
		p	7		offset
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(F)V	a	setDamage
		p	1		damageWobbleStrength
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lazz;)V	a	destroy
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcga;DDDLbuw$a;)Lbuw;	a	createMinecart
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		type
	m	(Lcvv;)Lcom/mojang/datafixers/util/Pair;	a	exits
		p	0		shape
	m	(Lgt$a;)Ldwm;	a	lambda$getDismountLocationForPassenger$0
	m	(Lgt;)Z	a	isRedstoneConductor
		p	1		pos
	m	(Lgy$a;Ln$a;)Ldvt;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/util/EnumMap;)V	a	lambda$static$2
		p	0		map
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCustomDisplay
		p	1		present
	m	()F	aD	getBlockSpeedFactor
	m	()Lbaq$b;	aO	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lbbf;)Ldvt;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lcur;)V	b	setDisplayBlockState
		p	1		state
	m	(Lgt;)Ldwm;	b	lambda$getDismountLocationForPassenger$1
		p	1		pos
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	bE	animateHurt
	m	()Z	bl	isPickable
	m	()Z	bm	isPushable
	m	()D	bu	getPassengersRidingOffset
	m	(I)V	c	setHurtTime
		p	1		wobbleTicks
	m	(Lgt;Lcur;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()Ldvo;	cA	getBoundingBoxForCulling
	m	()Lgy;	cx	getMotionDirection
	m	(I)V	d	setHurtDir
		p	1		wobbleSide
	m	()Lcaa;	do	getPickResult
	m	(Lbaq;)V	g	push
		p	1		entity
	m	()Lbzw;	h	getDropItem
	m	(Lbaq;)Z	h	canCollideWith
		p	1		other
	m	()D	i	getMaxSpeed
	m	()V	j	comeOffTrack
	m	()V	k	tick
	m	(DDD)V	k	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()V	l	applyNaturalSlowdown
	m	(I)V	m	setDisplayOffset
		p	1		offset
	m	()F	n	getDamage
	m	()I	o	getHurtTime
	m	(DDD)Ldvt;	p	getPos
		p	1		x
		p	3		y
		p	5		z
	m	()I	q	getHurtDir
	m	()Lbuw$a;	r	getMinecartType
	m	()Lcur;	s	getDisplayBlockState
	m	()Lcur;	t	getDefaultDisplayBlockState
	m	()I	u	getDisplayOffset
	m	()I	w	getDefaultDisplayOffset
	m	()Z	x	hasCustomDisplay
	f	D	aA	lyd
	f	D	aB	lzd
	f	Lzr;	ao	DATA_ID_DISPLAY_OFFSET
	f	Lzr;	ap	DATA_ID_CUSTOM_DISPLAY
	f	Lcom/google/common/collect/ImmutableMap;	aq	POSE_DISMOUNT_HEIGHTS
	f	Z	ar	flipped
	f	Ljava/util/Map;	as	EXITS
	f	I	at	lSteps
	f	D	au	lx
	f	D	av	ly
	f	D	aw	lz
	f	D	ax	lyr
	f	D	ay	lxr
	f	D	az	lxd
	f	F	b	WATER_SLOWDOWN_FACTOR
	f	Lzr;	c	DATA_ID_HURT
	f	Lzr;	d	DATA_ID_HURTDIR
	f	Lzr;	e	DATA_ID_DAMAGE
	f	Lzr;	f	DATA_ID_DISPLAY_BLOCK
c	buw$1	net/minecraft/world/entity/vehicle/AbstractMinecart$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
c	buw$a	net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	m	()[Lbuw$a;	a	$values
	f	Lbuw$a;	a	RIDEABLE
	f	Lbuw$a;	b	CHEST
	f	Lbuw$a;	c	FURNACE
	f	Lbuw$a;	d	TNT
	f	Lbuw$a;	e	SPAWNER
	f	Lbuw$a;	f	HOPPER
	f	Lbuw$a;	g	COMMAND_BLOCK
	f	[Lbuw$a;	h	$VALUES
c	bux	net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	m	(Lbau;DDDLcga;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lhi;	A	getItemStacks
	m	()V	C	clearItemStacks
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Laaj;)V	a	setLootTable
		p	1		lootTableId
	m	(Laaj;J)V	a	setLootTable
		p	1		id
		p	2		lootSeed
	m	(Lazz;)V	a	destroy
		p	1		damageSource
	m	(Lbaq$c;)V	a	remove
		p	1		reason
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	m	()V	e	setChanged
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	()V	l	applyNaturalSlowdown
	m	()Laaj;	y	getLootTable
	m	()J	z	getLootTableSeed
	f	Lhi;	c	itemStacks
	f	Laaj;	d	lootTable
	f	J	e	lootTableSeed
c	buy	net/minecraft/world/entity/vehicle/Boat
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()V	A	floatBoat
	m	()V	C	controlBoat
	m	()I	D	getBubbleTime
	m	()Lso;	S	getAddEntityPacket
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(DZLcur;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(F)V	a	setDamage
		p	1		wobbleStrength
	m	(I)V	a	setBubbleTime
		p	1		wobbleTicks
	m	(IF)F	a	getRowingTime
		p	1		paddle
		p	2		tickDelta
	m	(Lazz;)V	a	destroy
		p	1		source
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbaq;)V	a	clampRotation
		p	1		entity
	m	(Lbaq;Lbaq;)Z	a	canVehicleCollide
		p	0		entity
		p	1		other
	m	(Lbbr;Lbar;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lbuy$b;)V	a	setType
		p	1		type
	m	(Lgy$a;Ln$a;)Ldvt;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZZ)V	a	setPaddleState
		p	1		leftMoving
		p	2		rightMoving
	m	(ZZZZ)V	a	setInput
		p	1		pressingLeft
		p	2		pressingRight
		p	3		pressingForward
		p	4		pressingBack
	m	()Lbaq$b;	aO	getMovementEmission
	m	()Z	aW	isUnderWater
	m	()V	a_	defineSynchedData
	m	(F)F	b	getBubbleAngle
		p	1		tickDelta
	m	(Lbaq;)Z	b	lambda$tickBubbleColumn$0
		p	0		entity
	m	(Lbbf;)Ldvt;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	bE	animateHurt
	m	()Z	bl	isPickable
	m	()Z	bm	isPushable
	m	()Z	br	canBeCollidedWith
	m	()D	bu	getPassengersRidingOffset
	m	(I)Z	c	getPaddleState
		p	1		paddle
	m	()Lbaq;	cH	getControllingPassenger
	m	()Lgy;	cx	getMotionDirection
	m	(I)V	d	setHurtTime
		p	1		wobbleTicks
	m	()Lcaa;	do	getPickResult
	m	(Lbaq;)V	g	push
		p	1		entity
	m	()Lbzw;	h	getDropItem
	m	(Lbaq;)Z	h	canCollideWith
		p	1		other
	m	()Lajd;	i	getPaddleSound
	m	(Lbaq;)V	i	positionRider
		p	1		passenger
	m	()F	j	getWaterLevelAbove
	m	(Lbaq;)V	j	onPassengerTurned
		p	1		passenger
	m	()V	k	tick
	m	(Z)V	k	onAboveBubbleCol
		p	1		drag
	m	()F	l	getGroundFriction
	m	(I)V	m	setHurtDir
		p	1		side
	m	()F	n	getSinglePassengerXOffset
	m	()F	o	getDamage
	m	(Lbaq;)Z	o	canAddPassenger
		p	1		passenger
	m	()I	q	getHurtTime
	m	()I	r	getHurtDir
	m	()Lbuy$b;	s	getBoatType
	m	()I	t	getMaxPassengers
	m	()V	u	tickBubbleColumn
	m	()V	w	tickLerp
	m	()Lbuy$a;	x	getStatus
	m	()Z	y	checkInWater
	m	()Lbuy$a;	z	isUnderwater
	f	I	aA	lerpSteps
	f	D	aB	lerpX
	f	D	aC	lerpY
	f	D	aD	lerpZ
	f	D	aE	lerpYRot
	f	D	aF	lerpXRot
	f	Z	aG	inputLeft
	f	Z	aH	inputRight
	f	Z	aI	inputUp
	f	Z	aJ	inputDown
	f	D	aK	waterLevel
	f	F	aL	landFriction
	f	Lbuy$a;	aM	status
	f	Lbuy$a;	aN	oldStatus
	f	D	aO	lastYd
	f	Z	aP	isAboveBubbleColumn
	f	Z	aQ	bubbleColumnDirectionIsDown
	f	F	aR	bubbleMultiplier
	f	F	aS	bubbleAngle
	f	F	aT	bubbleAngleO
	f	Lzr;	ao	DATA_ID_HURTDIR
	f	Lzr;	ap	DATA_ID_DAMAGE
	f	Lzr;	aq	DATA_ID_TYPE
	f	Lzr;	ar	DATA_ID_PADDLE_LEFT
	f	Lzr;	as	DATA_ID_PADDLE_RIGHT
	f	Lzr;	at	DATA_ID_BUBBLE_TIME
	f	I	au	TIME_TO_EJECT
	f	F	av	PADDLE_SPEED
	f	[F	aw	paddlePositions
	f	F	ax	invFriction
	f	F	ay	outOfControlTicks
	f	F	az	deltaRotation
	f	I	b	PADDLE_LEFT
	f	I	c	PADDLE_RIGHT
	f	D	d	PADDLE_SOUND_TIME
	f	I	e	BUBBLE_TIME
	f	Lzr;	f	DATA_ID_HURT
c	buy$1	net/minecraft/world/entity/vehicle/Boat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
c	buy$a	net/minecraft/world/entity/vehicle/Boat$Status
	m	()[Lbuy$a;	a	$values
	f	Lbuy$a;	a	IN_WATER
	f	Lbuy$a;	b	UNDER_WATER
	f	Lbuy$a;	c	UNDER_FLOWING_WATER
	f	Lbuy$a;	d	ON_LAND
	f	Lbuy$a;	e	IN_AIR
	f	[Lbuy$a;	f	$VALUES
c	buy$b	net/minecraft/world/entity/vehicle/Boat$Type
	m	(Ljava/lang/String;ILciw;Ljava/lang/String;)V	<init>	<init>
		p	3		baseBlock
		p	4		name
	m	()Ljava/lang/String;	a	getName
	m	(I)Lbuy$b;	a	byId
		p	0		type
	m	(Ljava/lang/String;)Lbuy$b;	a	byName
		p	0		name
	m	()Lciw;	b	getPlanks
	m	()[Lbuy$b;	c	$values
	f	Lbuy$b;	a	OAK
	f	Lbuy$b;	b	SPRUCE
	f	Lbuy$b;	c	BIRCH
	f	Lbuy$b;	d	JUNGLE
	f	Lbuy$b;	e	ACACIA
	f	Lbuy$b;	f	DARK_OAK
	f	Lbuy$b;	g	MANGROVE
	f	Ljava/lang/String;	h	name
	f	Lciw;	i	planks
	f	[Lbuy$b;	j	$VALUES
c	buz	net/minecraft/world/entity/vehicle/ChestBoat
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
	m	()Lhi;	A	getItemStacks
	m	()V	C	clearItemStacks
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Laaj;)V	a	setLootTable
		p	1		lootTableId
	m	(Lazz;)V	a	destroy
		p	1		source
	m	(Lbaq$c;)V	a	remove
		p	1		reason
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(Lbtf;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	m	(Lbtf;)V	d	unpackLootTable
		p	1		player
	m	()V	e	setChanged
	m	()Lbzw;	h	getDropItem
	m	(I)Lbbw;	k	getSlot
		p	1		mappedIndex
	m	()F	n	getSinglePassengerXOffset
	m	()I	t	getMaxPassengers
	m	()Laaj;	y	getLootTable
	m	()J	z	getLootTableSeed
	f	Lhi;	ao	itemStacks
	f	Laaj;	ap	lootTable
	f	J	aq	lootTableSeed
	f	I	f	CONTAINER_SIZE
c	buz$1	net/minecraft/world/entity/vehicle/ChestBoat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
c	bva	net/minecraft/world/entity/vehicle/ContainerEntity
	m	()Lhi;	A	getItemStacks
	m	()V	C	clearItemStacks
	m	()Lcga;	W	getLevel
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Laaj;)V	a	setLootTable
		p	1		lootTableId
	m	(Lazz;Lcga;Lbaq;)V	a	chestVehicleDestroyed
		p	1		source
		p	2		world
		p	3		vehicle
	m	(Ljava/util/function/BiConsumer;Lbtf;)Lazm;	a	interactWithChestVehicle
		p	1		gameEventEmitter
		p	2		player
	m	(Lpj;)V	a_	readChestVehicleSaveData
		p	1		nbt
	m	(II)Lcaa;	b	removeChestVehicleItem
		p	1		slot
		p	2		amount
	m	()Z	c	isEmpty
	m	(ILcaa;)V	c	setChestVehicleItem
		p	1		slot
		p	2		stack
	m	(Lpj;)V	c	addChestVehicleSaveData
		p	1		nbt
	m	()Ldvt;	cZ	position
	m	(I)Lcaa;	c_	removeChestVehicleItemNoUpdate
		p	1		slot
	m	(I)Lcaa;	d_	getChestVehicleItem
		p	1		slot
	m	()Z	du	isRemoved
	m	(Lbtf;)V	e	unpackChestVehicleLootTable
		p	1		player
	m	(I)Lbbw;	e_	getChestVehicleSlot
		p	1		slot
	m	()V	f	clearChestVehicleContent
	m	(Lbtf;)Z	f	isChestVehicleStillValid
		p	1		player
	m	()Z	g	isChestVehicleEmpty
	m	()Laaj;	y	getLootTable
	m	()J	z	getLootTableSeed
c	bva$1	net/minecraft/world/entity/vehicle/ContainerEntity$1
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
	f	I	b	val$slot
	f	Lbva;	c	this$0
c	bvb	net/minecraft/world/entity/vehicle/DismountHelper
	m	(D)Z	a	isBlockFloorValid
		p	0		height
	m	(Lbau;Lcfk;Lgt;Z)Ldvt;	a	findSafeDismountLocation
		p	0		entityType
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Lcfg;Lgt;)Ldwm;	a	nonClimbableShape
		p	0		world
		p	1		pos
	m	(Lcfk;Lbbf;Ldvo;)Z	a	canDismountTo
		p	0		world
		p	1		entity
		p	2		targetBox
	m	(Lcfk;Ldvt;Lbbf;Lbbr;)Z	a	canDismountTo
		p	0		world
		p	1		offset
		p	2		entity
		p	3		pose
	m	(Lcfk;Lgt;)Ldwm;	a	lambda$findSafeDismountLocation$0
	m	(Lgt;ILjava/util/function/Function;)D	a	findCeilingFrom
		p	0		pos
		p	1		maxDistance
		p	2		collisionShapeGetter
	m	(Lgy;)[[I	a	offsetsForDirection
		p	0		movementDirection
c	bvc	net/minecraft/world/entity/vehicle/Minecart
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	()Lbzw;	h	getDropItem
	m	()Lbuw$a;	r	getMinecartType
c	bvd	net/minecraft/world/entity/vehicle/MinecartChest
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	()I	b	getContainerSize
	m	()Lbzw;	h	getDropItem
	m	()Lbuw$a;	r	getMinecartType
	m	()Lcur;	t	getDefaultDisplayBlockState
	m	()I	w	getDefaultDisplayOffset
c	bve	net/minecraft/world/entity/vehicle/MinecartCommandBlock
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lzr;)V	a	onSyncedDataUpdated
		p	1		data
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cG	onlyOpCanSetNbt
	m	()Lbzw;	h	getDropItem
	m	()Lbuw$a;	r	getMinecartType
	m	()Lcur;	t	getDefaultDisplayBlockState
	m	()Lcfb;	y	getCommandBlock
	f	I	ao	lastActivated
	f	Lzr;	c	DATA_ID_COMMAND_NAME
	f	Lzr;	d	DATA_ID_LAST_OUTPUT
	f	Lcfb;	e	commandBlock
	f	I	f	ACTIVATION_DELAY
c	bve$a	net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	m	()Lafo;	e	getLevel
	m	()V	f	onUpdated
	m	()Ldvt;	g	getPosition
	m	()Lbve;	h	getMinecart
	m	()Ldr;	i	createCommandSourceStack
	f	Lbve;	b	this$0
c	bvf	net/minecraft/world/entity/vehicle/MinecartFurnace
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lbtf;Lazl;)Lazm;	a	interact
		p	1		player
		p	2		hand
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lgt;Lcur;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()Lbzw;	h	getDropItem
	m	()D	i	getMaxSpeed
	m	()V	k	tick
	m	()V	l	applyNaturalSlowdown
	m	(Z)V	p	setHasFuel
		p	1		lit
	m	()Lbuw$a;	r	getMinecartType
	m	()Lcur;	t	getDefaultDisplayBlockState
	m	()Z	y	hasFuel
	f	Lccp;	ao	INGREDIENT
	f	D	c	xPush
	f	D	d	zPush
	f	Lzr;	e	DATA_ID_FUEL
	f	I	f	fuel
c	bvg	net/minecraft/world/entity/vehicle/MinecartHopper
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Z	D	isEnabled
	m	()D	E	getLevelX
	m	()D	F	getLevelY
	m	()D	G	getLevelZ
	m	()Z	I	suckInItems
	m	()Z	J	isOnCooldown
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lbzw;	h	getDropItem
	m	()V	k	tick
	m	(I)V	n	setCooldown
		p	1		transferCooldown
	m	(Z)V	p	setEnabled
		p	1		enabled
	m	()Lbuw$a;	r	getMinecartType
	m	()Lcur;	t	getDefaultDisplayBlockState
	m	()I	w	getDefaultDisplayOffset
	f	I	ao	cooldownTime
	f	Lgt;	ap	lastPosition
	f	I	c	MOVE_ITEM_SPEED
	f	Z	f	enabled
c	bvh	net/minecraft/world/entity/vehicle/MinecartSpawner
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(Lcga;)Ljava/lang/Runnable;	a	createTicker
		p	1		world
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcga;)V	b	lambda$createTicker$1
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcga;)V	c	lambda$createTicker$0
	m	()Z	cG	onlyOpCanSetNbt
	m	()Lbzw;	h	getDropItem
	m	()V	k	tick
	m	()Lbuw$a;	r	getMinecartType
	m	()Lcur;	t	getDefaultDisplayBlockState
	m	()Lcfc;	y	getSpawner
	f	Lcfc;	c	spawner
	f	Ljava/lang/Runnable;	d	ticker
c	bvh$1	net/minecraft/world/entity/vehicle/MinecartSpawner$1
	m	(Lcga;Lgt;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	f	Lbvh;	a	this$0
c	bvi	net/minecraft/world/entity/vehicle/MinecartTNT
	m	(Lbau;Lcga;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcga;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Z	A	isPrimed
	m	(B)V	a	handleEntityEvent
		p	1		status
	m	(FFLazz;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lazz;)V	a	destroy
		p	1		damageSource
	m	(Lazz;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcfs;Lcfg;Lgt;Lcur;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Lcfs;Lcfg;Lgt;Lcur;Ldoy;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lbzw;	h	getDropItem
	m	(D)V	h	explode
		p	1		velocity
	m	()V	k	tick
	m	()Lbuw$a;	r	getMinecartType
	m	()Lcur;	t	getDefaultDisplayBlockState
	m	()V	y	primeFuse
	m	()I	z	getFuse
	f	B	c	EVENT_PRIME
	f	I	d	fuse
c	bvj	net/minecraft/world/entity/vehicle/package-info
c	bvk	net/minecraft/world/food/FoodConstants
	f	I	a	MAX_FOOD
	f	F	b	MAX_SATURATION
	f	F	c	START_SATURATION
	f	F	d	SATURATION_FLOOR
	f	F	e	EXHAUSTION_DROP
	f	I	f	HEALTH_TICK_COUNT
	f	I	g	HEALTH_TICK_COUNT_SATURATED
	f	I	h	HEAL_LEVEL
	f	I	i	SPRINT_LEVEL
	f	I	j	STARVE_LEVEL
	f	F	k	FOOD_SATURATION_POOR
	f	F	l	FOOD_SATURATION_LOW
	f	F	m	FOOD_SATURATION_NORMAL
	f	F	n	FOOD_SATURATION_GOOD
	f	F	o	FOOD_SATURATION_MAX
	f	F	p	FOOD_SATURATION_SUPERNATURAL
	f	F	q	EXHAUSTION_HEAL
	f	F	r	EXHAUSTION_JUMP
	f	F	s	EXHAUSTION_SPRINT_JUMP
	f	F	t	EXHAUSTION_MINE
	f	F	u	EXHAUSTION_ATTACK
	f	F	v	EXHAUSTION_DAMAGE
	f	F	w	EXHAUSTION_WALK
	f	F	x	EXHAUSTION_CROUCH
	f	F	y	EXHAUSTION_SPRINT
	f	F	z	EXHAUSTION_SWIM
c	bvl	net/minecraft/world/food/FoodData
	m	()I	a	getFoodLevel
	m	(F)V	a	addExhaustion
		p	1		exhaustion
	m	(I)V	a	setFoodLevel
		p	1		foodLevel
	m	(IF)V	a	eat
		p	1		food
		p	2		saturationModifier
	m	(Lbtf;)V	a	tick
		p	1		player
	m	(Lbzw;Lcaa;)V	a	eat
		p	1		item
		p	2		stack
	m	(Lpj;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getLastFoodLevel
	m	(F)V	b	setSaturation
		p	1		saturationLevel
	m	(Lpj;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	c	needsFood
	m	(F)V	c	setExhaustion
		p	1		exhaustion
	m	()F	d	getExhaustionLevel
	m	()F	e	getSaturationLevel
	f	I	a	foodLevel
	f	F	b	saturationLevel
	f	F	c	exhaustionLevel
	f	I	d	tickTimer
	f	I	e	lastFoodLevel
c	bvm	net/minecraft/world/food/FoodProperties
	m	(IFZZZLjava/util/List;)V	<init>	<init>
		p	1		hunger
		p	2		saturationModifier
		p	3		meat
		p	4		alwaysEdible
		p	5		snack
		p	6		statusEffects
	m	()I	a	getNutrition
	m	()F	b	getSaturationModifier
	m	()Z	c	isMeat
	m	()Z	d	canAlwaysEat
	m	()Z	e	isFastFood
	m	()Ljava/util/List;	f	getEffects
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	bvm$a	net/minecraft/world/food/FoodProperties$Builder
	m	()Lbvm$a;	a	meat
	m	(F)Lbvm$a;	a	saturationMod
		p	1		saturationModifier
	m	(I)Lbvm$a;	a	nutrition
		p	1		hunger
	m	(Lbaj;F)Lbvm$a;	a	effect
		p	1		effect
		p	2		chance
	m	()Lbvm$a;	b	alwaysEat
	m	()Lbvm$a;	c	fast
	m	()Lbvm;	d	build
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	bvn	net/minecraft/world/food/Foods
	m	(I)Lbvm$a;	a	stew
		p	0		hunger
	f	Lbvm;	A	POISONOUS_POTATO
	f	Lbvm;	B	PORKCHOP
	f	Lbvm;	C	POTATO
	f	Lbvm;	D	PUFFERFISH
	f	Lbvm;	E	PUMPKIN_PIE
	f	Lbvm;	F	RABBIT
	f	Lbvm;	G	RABBIT_STEW
	f	Lbvm;	H	ROTTEN_FLESH
	f	Lbvm;	I	SALMON
	f	Lbvm;	J	SPIDER_EYE
	f	Lbvm;	K	SUSPICIOUS_STEW
	f	Lbvm;	L	SWEET_BERRIES
	f	Lbvm;	M	GLOW_BERRIES
	f	Lbvm;	N	TROPICAL_FISH
	f	Lbvm;	a	APPLE
	f	Lbvm;	b	BAKED_POTATO
	f	Lbvm;	c	BEEF
	f	Lbvm;	d	BEETROOT
	f	Lbvm;	e	BEETROOT_SOUP
	f	Lbvm;	f	BREAD
	f	Lbvm;	g	CARROT
	f	Lbvm;	h	CHICKEN
	f	Lbvm;	i	CHORUS_FRUIT
	f	Lbvm;	j	COD
	f	Lbvm;	k	COOKED_BEEF
	f	Lbvm;	l	COOKED_CHICKEN
	f	Lbvm;	m	COOKED_COD
	f	Lbvm;	n	COOKED_MUTTON
	f	Lbvm;	o	COOKED_PORKCHOP
	f	Lbvm;	p	COOKED_RABBIT
	f	Lbvm;	q	COOKED_SALMON
	f	Lbvm;	r	COOKIE
	f	Lbvm;	s	DRIED_KELP
	f	Lbvm;	t	ENCHANTED_GOLDEN_APPLE
	f	Lbvm;	u	GOLDEN_APPLE
	f	Lbvm;	v	GOLDEN_CARROT
	f	Lbvm;	w	HONEY_BOTTLE
	f	Lbvm;	x	MELON_SLICE
	f	Lbvm;	y	MUSHROOM_STEW
	f	Lbvm;	z	MUTTON
c	bvo	net/minecraft/world/food/package-info
c	bvp	net/minecraft/world/inventory/AbstractContainerMenu
	m	(Lbwt;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	()Lbwt;	a	getType
	m	(I)Z	a	isValidSlotIndex
		p	1		slot
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(IILbvy;Lbtf;)V	a	clicked
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(IILcaa;)V	a	setItem
		p	1		slot
		p	2		revision
		p	3		stack
	m	(ILbtf;)Z	a	isValidQuickcraftType
		p	0		stage
		p	1		player
	m	(ILcaa;)V	a	setRemoteSlot
		p	1		slot
		p	2		stack
	m	(ILcaa;Ljava/util/function/Supplier;)V	a	triggerSlotListeners
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(ILjava/util/List;Lcaa;)V	a	initializeContents
		p	1		revision
		p	2		stacks
		p	3		cursorStack
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lazf;I)V	a	checkContainerSize
		p	0		inventory
		p	1		expectedSize
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lazf;)V	a	clearContainer
		p	1		player
		p	2		inventory
	m	(Lbvp;)V	a	transferState
		p	1		handler
	m	(Lbvz;)V	a	addDataSlots
		p	1		propertyDelegate
	m	(Lbvz;I)V	a	checkContainerDataCount
		p	0		data
		p	1		expectedCount
	m	(Lbwa;Lbtf;Lciw;)Z	a	stillValid
		p	0		context
		p	1		player
		p	2		block
	m	(Lbwb;)V	a	addSlotListener
		p	1		listener
	m	(Lbwc;)V	a	setSynchronizer
		p	1		handler
	m	(Lbwf;)Lbwf;	a	addDataSlot
		p	1		property
	m	(Lbxg;)Lbxg;	a	addSlot
		p	1		slot
	m	(Lbxg;Lbtf;Lcaa;)V	a	lambda$doClick$3
		p	3		stack
	m	(Lbxg;Lcaa;Z)Z	a	canItemQuickReplace
		p	0		slot
		p	1		stack
		p	2		allowOverflow
	m	(Lcaa;)V	a	setRemoteCarried
		p	1		stack
	m	(Lcaa;IIZ)Z	a	moveItemStackTo
		p	1		stack
		p	2		startIndex
		p	3		endIndex
		p	4		fromLast
	m	(Lcaa;Lbxg;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcaa;Lbxg;Lbtf;Lcaa;)V	a	lambda$doClick$4
		p	3		stack
	m	(Lciw;Lbtf;Lcga;Lgt;)Ljava/lang/Boolean;	a	lambda$stillValid$0
		p	2		world
		p	3		pos
	m	(Lcsl;)I	a	getRedstoneSignalFromBlockEntity
		p	0		entity
	m	(Ljava/util/Set;ILcaa;I)V	a	getQuickCraftSlotCount
		p	0		slots
		p	1		mode
		p	2		stack
		p	3		stackSize
	m	()V	b	sendAllDataToRemote
	m	(I)Lbxg;	b	getSlot
		p	1		index
	m	(II)I	b	getQuickcraftMask
		p	0		quickCraftStage
		p	1		buttonId
	m	(IILbvy;Lbtf;)V	b	doClick
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(ILcaa;)V	b	setRemoteSlotNoCopy
		p	1		slot
		p	2		stack
	m	(ILcaa;Ljava/util/function/Supplier;)V	b	synchronizeSlotToRemote
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(Lazf;)I	b	getRedstoneSignalFromContainer
		p	0		inventory
	m	(Lazf;I)Ljava/util/OptionalInt;	b	findSlot
		p	1		inventory
		p	2		index
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(Lbtf;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(Lbwb;)V	b	removeSlotListener
		p	1		listener
	m	(Lbxg;)Z	b	canDragTo
		p	1		slot
	m	(Lcaa;)V	b	setCarried
		p	1		stack
	m	()Lhi;	c	getItems
	m	(I)I	c	getQuickcraftType
		p	0		quickCraftData
	m	(II)V	c	updateDataSlotListeners
		p	1		index
		p	2		value
	m	()V	d	broadcastChanges
	m	(I)I	d	getQuickcraftHeader
		p	0		quickCraftData
	m	(II)V	d	synchronizeDataSlotToRemote
		p	1		id
		p	2		value
	m	()V	e	broadcastFullState
	m	()V	f	resetQuickCraft
	m	()Lcaa;	g	getCarried
	m	()V	h	suppressRemoteUpdates
	m	()V	i	resumeRemoteUpdates
	m	()I	j	getStateId
	m	()I	k	incrementStateId
	m	()V	l	synchronizeCarriedToRemote
	m	()Lbbw;	m	createCarriedSlotAccess
	m	()Ljava/lang/String;	n	lambda$clicked$2
	m	()Ljava/lang/String;	o	lambda$clicked$1
	f	I	a	SLOT_CLICKED_OUTSIDE
	f	I	b	QUICKCRAFT_TYPE_CHARITABLE
	f	I	c	QUICKCRAFT_TYPE_GREEDY
	f	I	d	QUICKCRAFT_TYPE_CLONE
	f	I	e	QUICKCRAFT_HEADER_START
	f	I	f	QUICKCRAFT_HEADER_CONTINUE
	f	I	g	QUICKCRAFT_HEADER_END
	f	I	h	CARRIED_SLOT_SIZE
	f	Lhi;	i	slots
	f	I	j	containerId
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	Lhi;	l	lastSlots
	f	Ljava/util/List;	m	dataSlots
	f	Lcaa;	n	carried
	f	Lhi;	o	remoteSlots
	f	Lit/unimi/dsi/fastutil/ints/IntList;	p	remoteDataSlots
	f	Lcaa;	q	remoteCarried
	f	I	r	stateId
	f	Lbwt;	s	menuType
	f	I	t	quickcraftType
	f	I	u	quickcraftStatus
	f	Ljava/util/Set;	v	quickcraftSlots
	f	Ljava/util/List;	w	containerListeners
	f	Lbwc;	x	synchronizer
	f	Z	y	suppressRemoteUpdates
c	bvp$1	net/minecraft/world/inventory/AbstractContainerMenu$1
	m	()Lcaa;	a	get
	m	(Lcaa;)Z	a	set
		p	1		stack
	f	Lbvp;	b	this$0
c	bvq	net/minecraft/world/inventory/AbstractFurnaceMenu
	m	(Lbwt;Lccv;Lbwz;ILbte;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
	m	(Lbwt;Lccv;Lbwz;ILbte;Lazf;Lbvz;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
		p	6		inventory
		p	7		propertyDelegate
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtj;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lccs;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcaa;)Z	c	canSmelt
		p	1		itemStack
	m	(Lcaa;)Z	d	isFuel
		p	1		itemStack
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()I	q	getBurnProgress
	m	()I	r	getLitProgress
	m	()Z	s	isLit
	m	()Lbwz;	t	getRecipeBookType
	f	I	k	INGREDIENT_SLOT
	f	I	l	FUEL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	SLOT_COUNT
	f	I	o	DATA_COUNT
	f	Lcga;	p	level
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lazf;	u	container
	f	Lbvz;	v	data
	f	Lccv;	w	recipeType
	f	Lbwz;	x	recipeBookType
c	bvr	net/minecraft/world/inventory/AnvilMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lbtf;Lcga;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	m	(Lbtf;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcur;)Z	a	isValidBlock
		p	1		state
	m	(Ljava/lang/String;)V	a	setItemName
		p	1		newItemName
	m	(I)I	e	calculateIncreasedRepairCost
		p	0		cost
	m	()V	l	createResult
	m	()I	m	getCost
	f	I	A	COST_REPAIR_MATERIAL
	f	I	B	COST_REPAIR_SACRIFICE
	f	I	C	COST_INCOMPATIBLE_PENALTY
	f	I	D	COST_RENAME
	f	I	k	MAX_NAME_LENGTH
	f	Lorg/slf4j/Logger;	s	LOGGER
	f	Z	t	DEBUG_COST
	f	I	u	repairItemCountCost
	f	Ljava/lang/String;	v	itemName
	f	Lbwf;	w	cost
	f	I	x	COST_FAIL
	f	I	y	COST_BASE
	f	I	z	COST_ADDED_BASE
c	bvr$1	net/minecraft/world/inventory/AnvilMenu$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
c	bvs	net/minecraft/world/inventory/BeaconMenu
	m	(ILazf;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILazf;Lbvz;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
		p	4		context
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	a	updateEffects
		p	1		primary
		p	2		secondary
	m	(Lbtf;)V	b	removed
		p	1		player
	m	()I	l	getLevels
	m	()Lbah;	m	getPrimaryEffect
	m	()Lbah;	n	getSecondaryEffect
	m	()Z	o	hasPayment
	f	I	k	PAYMENT_SLOT
	f	I	l	SLOT_COUNT
	f	I	m	DATA_COUNT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lazf;	r	beacon
	f	Lbvs$a;	s	paymentSlot
	f	Lbwa;	t	access
	f	Lbvz;	u	beaconData
c	bvs$1	net/minecraft/world/inventory/BeaconMenu$1
	m	(Lbvs;I)V	<init>	<init>
		p	2		size
	m	()I	P_	getMaxStackSize
	m	(ILcaa;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	f	Lbvs;	b	this$0
c	bvs$a	net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	m	(Lbvs;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbvs;	a	this$0
c	bvt	net/minecraft/world/inventory/BlastFurnaceMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lazf;Lbvz;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	bvu	net/minecraft/world/inventory/BrewingStandMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lazf;Lbvz;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	()I	l	getFuel
	m	()I	m	getBrewingTicks
	f	I	k	BOTTLE_SLOT_START
	f	I	l	BOTTLE_SLOT_END
	f	I	m	INGREDIENT_SLOT
	f	I	n	FUEL_SLOT
	f	I	o	SLOT_COUNT
	f	I	p	DATA_COUNT
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lazf;	u	brewingStand
	f	Lbvz;	v	brewingStandData
	f	Lbxg;	w	ingredientSlot
c	bvu$a	net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	m	(Lazf;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcaa;)Z	b	mayPlaceItem
		p	0		stack
c	bvu$b	net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	m	(Lazf;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
c	bvu$c	net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	m	(Lazf;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcaa;)Z	b	mayPlaceItem
		p	0		stack
c	bvv	net/minecraft/world/inventory/CartographyTableMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lcga;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcaa;Lbxg;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcaa;Lcaa;Lcaa;)V	a	setupResultSlot
		p	1		map
		p	2		item
		p	3		oldResult
	m	(Lcaa;Lcaa;Lcaa;Lcga;Lgt;)V	a	lambda$setupResultSlot$0
		p	4		world
		p	5		pos
	m	(Lbtf;)V	b	removed
		p	1		player
	f	I	k	MAP_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	Lazf;	n	container
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lbwa;	s	access
	f	J	t	lastSoundTime
	f	Lbxb;	u	resultContainer
c	bvv$1	net/minecraft/world/inventory/CartographyTableMenu$1
	m	(Lbvv;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lbvv;	b	this$0
c	bvv$2	net/minecraft/world/inventory/CartographyTableMenu$2
	m	()V	e	setChanged
	f	Lbvv;	b	this$0
c	bvv$3	net/minecraft/world/inventory/CartographyTableMenu$3
	m	(Lbvv;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbvv;	a	this$0
c	bvv$4	net/minecraft/world/inventory/CartographyTableMenu$4
	m	(Lbvv;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbvv;	a	this$0
c	bvv$5	net/minecraft/world/inventory/CartographyTableMenu$5
	m	(Lbvv;Lazf;IIILbwa;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcga;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lbwa;	a	val$access
	f	Lbvv;	b	this$0
c	bvw	net/minecraft/world/inventory/ChestMenu
	m	(Lbwt;ILbte;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		rows
	m	(Lbwt;ILbte;Lazf;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		inventory
		p	5		rows
	m	(ILbte;)Lbvw;	a	oneRow
		p	0		syncId
		p	1		playerInventory
	m	(ILbte;Lazf;)Lbvw;	a	threeRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(ILbte;)Lbvw;	b	twoRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbte;Lazf;)Lbvw;	b	sixRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(ILbte;)Lbvw;	c	threeRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbte;)Lbvw;	d	fourRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbte;)Lbvw;	e	fiveRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbte;)Lbvw;	f	sixRows
		p	0		syncId
		p	1		playerInventory
	m	()Lazf;	l	getContainer
	m	()I	m	getRowCount
	f	I	k	SLOTS_PER_ROW
	f	Lazf;	l	container
	f	I	m	containerRows
c	bvx	net/minecraft/world/inventory/ClickAction
	m	()[Lbvx;	a	$values
	f	Lbvx;	a	PRIMARY
	f	Lbvx;	b	SECONDARY
	f	[Lbvx;	c	$VALUES
c	bvy	net/minecraft/world/inventory/ClickType
	m	()[Lbvy;	a	$values
	f	Lbvy;	a	PICKUP
	f	Lbvy;	b	QUICK_MOVE
	f	Lbvy;	c	SWAP
	f	Lbvy;	d	CLONE
	f	Lbvy;	e	THROW
	f	Lbvy;	f	QUICK_CRAFT
	f	Lbvy;	g	PICKUP_ALL
	f	[Lbvy;	h	$VALUES
c	bvz	net/minecraft/world/inventory/ContainerData
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
c	bwa	net/minecraft/world/inventory/ContainerLevelAccess
	m	(Lcga;Lgt;)Lbwa;	a	create
		p	0		world
		p	1		pos
	m	(Ljava/util/function/BiConsumer;)V	a	execute
		p	1		function
	m	(Ljava/util/function/BiConsumer;Lcga;Lgt;)Ljava/util/Optional;	a	lambda$execute$0
		p	1		world
		p	2		pos
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	evaluate
		p	1		getter
		p	2		defaultValue
	f	Lbwa;	a	NULL
c	bwa$1	net/minecraft/world/inventory/ContainerLevelAccess$1
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
c	bwa$2	net/minecraft/world/inventory/ContainerLevelAccess$2
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	f	Lcga;	b	val$level
	f	Lgt;	c	val$pos
c	bwb	net/minecraft/world/inventory/ContainerListener
	m	(Lbvp;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lbvp;ILcaa;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
c	bwc	net/minecraft/world/inventory/ContainerSynchronizer
	m	(Lbvp;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lbvp;ILcaa;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lbvp;Lcaa;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lbvp;Lhi;Lcaa;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
c	bwd	net/minecraft/world/inventory/CraftingContainer
	m	(Lbvp;II)V	<init>	<init>
		p	1		handler
		p	2		width
		p	3		height
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtj;)V	a	fillStackedContents
		p	1		finder
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	()V	e	setChanged
	m	()I	f	getHeight
	m	()I	g	getWidth
	f	Lhi;	b	items
	f	I	c	width
	f	I	d	height
	f	Lbvp;	e	menu
c	bwe	net/minecraft/world/inventory/CraftingMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lcga;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lbtj;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lbvp;Lcga;Lbtf;Lbwd;Lbxb;)V	a	slotChangedCraftingGrid
		p	0		handler
		p	1		world
		p	2		player
		p	3		craftingInventory
		p	4		resultInventory
	m	(Lcaa;Lbtf;Lcga;Lgt;)V	a	lambda$quickMoveStack$2
		p	2		world
		p	3		pos
	m	(Lcaa;Lbxg;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lccs;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcga;Lgt;)V	a	lambda$slotsChanged$0
		p	1		world
		p	2		pos
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lbwz;	t	getRecipeBookType
	f	I	k	RESULT_SLOT
	f	I	l	CRAFT_SLOT_START
	f	I	m	CRAFT_SLOT_END
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lbwd;	r	craftSlots
	f	Lbxb;	s	resultSlots
	f	Lbwa;	t	access
	f	Lbtf;	u	player
c	bwf	net/minecraft/world/inventory/DataSlot
	m	()Lbwf;	a	standalone
	m	(I)V	a	set
		p	1		value
	m	(Lbvz;I)Lbwf;	a	forContainer
		p	0		delegate
		p	1		index
	m	([II)Lbwf;	a	shared
		p	0		array
		p	1		index
	m	()I	b	get
	m	()Z	c	checkAndClearUpdateFlag
	f	I	a	prevValue
c	bwf$1	net/minecraft/world/inventory/DataSlot$1
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	Lbvz;	a	val$container
	f	I	b	val$dataId
c	bwf$2	net/minecraft/world/inventory/DataSlot$2
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	[I	a	val$storage
	f	I	b	val$index
c	bwf$3	net/minecraft/world/inventory/DataSlot$3
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	I	a	value
c	bwg	net/minecraft/world/inventory/DispenserMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lazf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;)V	b	removed
		p	1		player
	f	I	k	SLOT_COUNT
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lazf;	p	dispenser
c	bwh	net/minecraft/world/inventory/EnchantmentMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lcga;Lgt;)V	a	lambda$removed$2
		p	2		world
		p	3		pos
	m	(Lcaa;II)Ljava/util/List;	a	getEnchantmentList
		p	1		stack
		p	2		slot
		p	3		level
	m	(Lcaa;ILbtf;ILcaa;Lcga;Lgt;)V	a	lambda$clickMenuButton$1
		p	6		world
		p	7		pos
	m	(Lcaa;Lcga;Lgt;)V	a	lambda$slotsChanged$0
		p	2		world
		p	3		pos
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(Lbtf;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	()I	l	getGoldCount
	m	()I	m	getEnchantmentSeed
	f	[I	k	costs
	f	[I	l	enchantClue
	f	[I	m	levelClue
	f	Lazf;	n	enchantSlots
	f	Lbwa;	o	access
	f	Lalu;	p	random
	f	Lbwf;	q	enchantmentSeed
c	bwh$1	net/minecraft/world/inventory/EnchantmentMenu$1
	m	(Lbwh;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lbwh;	b	this$0
c	bwh$2	net/minecraft/world/inventory/EnchantmentMenu$2
	m	(Lbwh;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwh;	a	this$0
c	bwh$3	net/minecraft/world/inventory/EnchantmentMenu$3
	m	(Lbwh;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwh;	a	this$0
c	bwi	net/minecraft/world/inventory/FurnaceFuelSlot
	m	(Lbvq;Lazf;III)V	<init>	<init>
		p	1		handler
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcaa;)I	a_	getMaxStackSize
		p	1		stack
	m	(Lcaa;)Z	c	isBucket
		p	0		stack
	f	Lbvq;	a	menu
c	bwj	net/minecraft/world/inventory/FurnaceMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lazf;Lbvz;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	bwk	net/minecraft/world/inventory/FurnaceResultSlot
	m	(Lbtf;Lazf;III)V	<init>	<init>
		p	1		player
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(I)Lcaa;	a	remove
		p	1		amount
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcaa;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcaa;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lbtf;	a	player
	f	I	b	removeCount
c	bwl	net/minecraft/world/inventory/GrindstoneMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lcga;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcaa;II)Lcaa;	a	removeNonCurses
		p	1		item
		p	2		damage
		p	3		amount
	m	(Lcaa;Lcaa;)Lcaa;	a	mergeEnchants
		p	1		target
		p	2		source
	m	(Ljava/util/Map$Entry;)Z	a	lambda$removeNonCurses$0
	m	(Lbtf;)V	b	removed
		p	1		player
	m	()V	l	createResult
	f	I	k	MAX_NAME_LENGTH
	f	I	l	INPUT_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lazf;	s	resultSlots
	f	Lazf;	t	repairSlots
	f	Lbwa;	u	access
c	bwl$1	net/minecraft/world/inventory/GrindstoneMenu$1
	m	(Lbwl;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lbwl;	b	this$0
c	bwl$2	net/minecraft/world/inventory/GrindstoneMenu$2
	m	(Lbwl;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwl;	a	this$0
c	bwl$3	net/minecraft/world/inventory/GrindstoneMenu$3
	m	(Lbwl;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwl;	a	this$0
c	bwl$4	net/minecraft/world/inventory/GrindstoneMenu$4
	m	(Lbwl;Lazf;IIILbwa;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcga;)I	a	getExperienceAmount
		p	1		world
	m	(Lcga;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	m	(Lcaa;)I	g	getExperienceFromItem
		p	1		stack
	f	Lbwa;	a	val$access
	f	Lbwl;	b	this$0
c	bwm	net/minecraft/world/inventory/HopperMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lazf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;)V	b	removed
		p	1		player
	f	I	k	CONTAINER_SIZE
	f	Lazf;	l	hopper
c	bwn	net/minecraft/world/inventory/HorseInventoryMenu
	m	(ILbte;Lazf;Lbod;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		entity
	m	(Lbod;)Z	a	hasChest
		p	1		horse
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;)V	b	removed
		p	1		player
	f	Lazf;	k	horseContainer
	f	Lbod;	l	horse
c	bwn$1	net/minecraft/world/inventory/HorseInventoryMenu$1
	m	(Lbwn;Lazf;IIILbod;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	()Z	b	isActive
	f	Lbod;	a	val$horse
	f	Lbwn;	b	this$0
c	bwn$2	net/minecraft/world/inventory/HorseInventoryMenu$2
	m	(Lbwn;Lazf;IIILbod;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	()Z	b	isActive
	f	Lbod;	a	val$horse
	f	Lbwn;	b	this$0
c	bwo	net/minecraft/world/inventory/InventoryMenu
	m	(Lbte;ZLbtf;)V	<init>	<init>
		p	1		inventory
		p	2		onServer
		p	3		owner
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtj;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcaa;Lbxg;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lccs;)Z	a	recipeMatches
		p	1		recipe
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	(I)Z	f	isHotbarSlot
		p	0		slot
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lbwd;	q	getCraftSlots
	m	()Lbwz;	t	getRecipeBookType
	f	Laaj;	A	EMPTY_ARMOR_SLOT_SHIELD
	f	Z	B	active
	f	[Laaj;	C	TEXTURE_EMPTY_SLOTS
	f	[Lbav;	D	SLOT_IDS
	f	Lbwd;	E	craftSlots
	f	Lbxb;	F	resultSlots
	f	Lbtf;	G	owner
	f	I	k	CONTAINER_ID
	f	I	l	RESULT_SLOT
	f	I	m	CRAFT_SLOT_START
	f	I	n	CRAFT_SLOT_END
	f	I	o	ARMOR_SLOT_START
	f	I	p	ARMOR_SLOT_END
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	I	u	SHIELD_SLOT
	f	Laaj;	v	BLOCK_ATLAS
	f	Laaj;	w	EMPTY_ARMOR_SLOT_HELMET
	f	Laaj;	x	EMPTY_ARMOR_SLOT_CHESTPLATE
	f	Laaj;	y	EMPTY_ARMOR_SLOT_LEGGINGS
	f	Laaj;	z	EMPTY_ARMOR_SLOT_BOOTS
c	bwo$1	net/minecraft/world/inventory/InventoryMenu$1
	m	(Lbwo;Lazf;IIILbtf;Lbav;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lbtf;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	m	(Lcaa;)V	d	set
		p	1		stack
	f	Lbtf;	a	val$owner
	f	Lbav;	b	val$slot
	f	Lbwo;	c	this$0
c	bwo$2	net/minecraft/world/inventory/InventoryMenu$2
	m	(Lbwo;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	f	Lbwo;	a	this$0
c	bwp	net/minecraft/world/inventory/ItemCombinerMenu
	m	(Lbwt;ILbte;Lbwa;)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		context
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lbtf;Lcga;Lgt;)Ljava/lang/Boolean;	a	lambda$stillValid$1
		p	2		world
		p	3		pos
	m	(Lbtf;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcur;)Z	a	isValidBlock
		p	1		state
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(Lbtf;Lcga;Lgt;)V	b	lambda$removed$0
		p	2		world
		p	3		pos
	m	(Lcaa;)Z	c	shouldQuickMoveToAdditionalSlot
		p	1		stack
	m	()V	l	createResult
	f	I	k	INV_SLOT_START
	f	I	l	INPUT_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	Lbxb;	o	resultSlots
	f	Lazf;	p	inputSlots
	f	Lbwa;	q	access
	f	Lbtf;	r	player
	f	I	s	INV_SLOT_END
	f	I	t	USE_ROW_SLOT_START
	f	I	u	USE_ROW_SLOT_END
c	bwp$1	net/minecraft/world/inventory/ItemCombinerMenu$1
	m	(Lbwp;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lbwp;	b	this$0
c	bwp$2	net/minecraft/world/inventory/ItemCombinerMenu$2
	m	(Lbwp;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbtf;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwp;	a	this$0
c	bwq	net/minecraft/world/inventory/LecternMenu
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(ILazf;Lbvz;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	()Lcaa;	l	getBook
	m	()I	m	getPage
	f	I	k	BUTTON_PREV_PAGE
	f	I	l	BUTTON_NEXT_PAGE
	f	I	m	BUTTON_TAKE_BOOK
	f	I	n	BUTTON_PAGE_JUMP_RANGE_START
	f	I	o	DATA_COUNT
	f	I	p	SLOT_COUNT
	f	Lazf;	q	lectern
	f	Lbvz;	r	lecternData
c	bwq$1	net/minecraft/world/inventory/LecternMenu$1
	m	(Lbwq;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()V	d	setChanged
	f	Lbwq;	a	this$0
c	bwr	net/minecraft/world/inventory/LoomMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lcga;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lhc;)V	a	setupResultSlot
		p	1		pattern
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		inventoryChangeListener
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(Lbtf;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcaa;)Ljava/util/List;	c	getSelectablePatterns
		p	1		stack
	m	()Ljava/util/List;	l	getSelectablePatterns
	m	()I	m	getSelectedBannerPatternIndex
	m	()Lbxg;	n	getBannerSlot
	m	()Lbxg;	o	getDyeSlot
	m	()Lbxg;	p	getPatternSlot
	m	()Lbxg;	q	getResultSlot
	m	()V	r	lambda$new$0
	f	I	k	PATTERN_NOT_SET
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lbwa;	p	access
	f	Lbwf;	q	selectedBannerPatternIndex
	f	Ljava/util/List;	r	selectablePatterns
	f	Ljava/lang/Runnable;	s	slotUpdateListener
	f	Lbxg;	t	bannerSlot
	f	Lbxg;	u	dyeSlot
	f	Lbxg;	v	patternSlot
	f	Lbxg;	w	resultSlot
	f	J	x	lastSoundTime
	f	Lazf;	y	inputContainer
	f	Lazf;	z	outputContainer
c	bwr$1	net/minecraft/world/inventory/LoomMenu$1
	m	(Lbwr;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lbwr;	b	this$0
c	bwr$2	net/minecraft/world/inventory/LoomMenu$2
	m	(Lbwr;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lbwr;	b	this$0
c	bwr$3	net/minecraft/world/inventory/LoomMenu$3
	m	(Lbwr;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwr;	a	this$0
c	bwr$4	net/minecraft/world/inventory/LoomMenu$4
	m	(Lbwr;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwr;	a	this$0
c	bwr$5	net/minecraft/world/inventory/LoomMenu$5
	m	(Lbwr;Lazf;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	f	Lbwr;	a	this$0
c	bwr$6	net/minecraft/world/inventory/LoomMenu$6
	m	(Lbwr;Lazf;IIILbwa;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcga;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lbwa;	a	val$access
	f	Lbwr;	b	this$0
c	bws	net/minecraft/world/inventory/MenuConstructor
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
c	bwt	net/minecraft/world/inventory/MenuType
	m	(Lbwt$a;)V	<init>	<init>
		p	1		factory
	m	(ILbte;)Lbvp;	a	create
		p	1		syncId
		p	2		playerInventory
	m	(Ljava/lang/String;Lbwt$a;)Lbwt;	a	register
		p	0		id
		p	1		factory
	m	(ILbte;)Lbwq;	b	lambda$static$0
		p	0		syncId
		p	1		playerInventory
	f	Lbwt;	a	GENERIC_9x1
	f	Lbwt;	b	GENERIC_9x2
	f	Lbwt;	c	GENERIC_9x3
	f	Lbwt;	d	GENERIC_9x4
	f	Lbwt;	e	GENERIC_9x5
	f	Lbwt;	f	GENERIC_9x6
	f	Lbwt;	g	GENERIC_3x3
	f	Lbwt;	h	ANVIL
	f	Lbwt;	i	BEACON
	f	Lbwt;	j	BLAST_FURNACE
	f	Lbwt;	k	BREWING_STAND
	f	Lbwt;	l	CRAFTING
	f	Lbwt;	m	ENCHANTMENT
	f	Lbwt;	n	FURNACE
	f	Lbwt;	o	GRINDSTONE
	f	Lbwt;	p	HOPPER
	f	Lbwt;	q	LECTERN
	f	Lbwt;	r	LOOM
	f	Lbwt;	s	MERCHANT
	f	Lbwt;	t	SHULKER_BOX
	f	Lbwt;	u	SMITHING
	f	Lbwt;	v	SMOKER
	f	Lbwt;	w	CARTOGRAPHY_TABLE
	f	Lbwt;	x	STONECUTTER
	f	Lbwt$a;	y	constructor
c	bwt$a	net/minecraft/world/inventory/MenuType$MenuSupplier
	m	(ILbte;)Lbvp;	create	create
		p	1		syncId
		p	2		playerInventory
c	bwu	net/minecraft/world/inventory/MerchantContainer
	m	(Lcex;)V	<init>	<init>
		p	1		merchant
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	(I)V	c	setSelectionHint
		p	1		index
	m	(I)Z	d	isPaymentSlot
		p	1		slot
	m	()V	e	setChanged
	m	()V	f	updateSellItem
	m	()Lcey;	g	getActiveOffer
	m	()I	h	getFutureXp
	f	Lcex;	b	merchant
	f	Lhi;	c	itemStacks
	f	Lcey;	d	activeOffer
	f	I	e	selectionHint
	f	I	f	futureXp
c	bwv	net/minecraft/world/inventory/MerchantMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lcex;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		merchant
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lcaa;Lbxg;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcez;)V	a	setOffers
		p	1		offers
	m	(Z)V	a	setShowProgressBar
		p	1		leveled
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(Z)V	b	setCanRestock
		p	1		canRefreshTrades
	m	(ILcaa;)V	c	moveFromInventoryToPaymentSlot
		p	1		slot
		p	2		stack
	m	(I)V	e	setSelectionHint
		p	1		index
	m	(I)V	f	setXp
		p	1		experience
	m	(I)V	g	setMerchantLevel
		p	1		levelProgress
	m	(I)V	h	tryMoveItems
		p	1		recipeIndex
	m	()I	l	getTraderXp
	m	()I	m	getFutureTraderXp
	m	()I	n	getTraderLevel
	m	()Z	o	canRestock
	m	()Lcez;	p	getOffers
	m	()Z	q	showProgressBar
	m	()V	r	playTradeSound
	f	I	k	PAYMENT1_SLOT
	f	I	l	PAYMENT2_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	I	r	SELLSLOT1_X
	f	I	s	SELLSLOT2_X
	f	I	t	BUYSLOT_X
	f	I	u	ROW_Y
	f	Lcex;	v	trader
	f	Lbwu;	w	tradeContainer
	f	I	x	merchantLevel
	f	Z	y	showProgressBar
	f	Z	z	canRestock
c	bww	net/minecraft/world/inventory/MerchantResultSlot
	m	(Lbtf;Lcex;Lbwu;III)V	<init>	<init>
		p	1		player
		p	2		merchant
		p	3		merchantInventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcaa;	a	remove
		p	1		amount
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcaa;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcaa;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lbwu;	a	slots
	f	Lbtf;	b	player
	f	I	c	removeCount
	f	Lcex;	h	merchant
c	bwx	net/minecraft/world/inventory/PlayerEnderChestContainer
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lcta;)V	a	setActiveChest
		p	1		blockEntity
	m	(Lpp;)V	a	fromTag
		p	1		nbtList
	m	(Lcta;)Z	b	isActiveChest
		p	1		blockEntity
	m	(Lbtf;)V	c_	stopOpen
		p	1		player
	m	(Lbtf;)V	d_	startOpen
		p	1		player
	m	()Lpp;	g	createTag
	f	Lcta;	b	activeChest
c	bwy	net/minecraft/world/inventory/RecipeBookMenu
	m	(Lbwt;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	(Lbtj;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lccs;)Z	a	recipeMatches
		p	1		recipe
	m	(ZLccs;Lafp;)V	a	handlePlacement
		p	1		craftAll
		p	2		recipe
		p	3		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lbwz;	t	getRecipeBookType
c	bwz	net/minecraft/world/inventory/RecipeBookType
	m	()[Lbwz;	a	$values
	f	Lbwz;	a	CRAFTING
	f	Lbwz;	b	FURNACE
	f	Lbwz;	c	BLAST_FURNACE
	f	Lbwz;	d	SMOKER
	f	[Lbwz;	e	$VALUES
c	bxa	net/minecraft/world/inventory/RecipeHolder
	m	(Lccs;)V	a	setRecipeUsed
		p	1		recipe
	m	(Lcga;Lafp;Lccs;)Z	a	setRecipeUsed
		p	1		world
		p	2		player
		p	3		recipe
	m	(Lbtf;)V	b	awardUsedRecipes
		p	1		player
	m	()Lccs;	d	getRecipeUsed
c	bxb	net/minecraft/world/inventory/ResultContainer
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lccs;)V	a	setRecipeUsed
		p	1		recipe
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	()Lccs;	d	getRecipeUsed
	m	()V	e	setChanged
	f	Lhi;	b	itemStacks
	f	Lccs;	c	recipeUsed
c	bxc	net/minecraft/world/inventory/ResultSlot
	m	(Lbtf;Lbwd;Lazf;III)V	<init>	<init>
		p	1		player
		p	2		input
		p	3		inventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcaa;	a	remove
		p	1		amount
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcaa;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(Lcaa;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lbwd;	a	craftSlots
	f	Lbtf;	b	player
	f	I	c	removeCount
c	bxd	net/minecraft/world/inventory/ShulkerBoxMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lazf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;)V	b	removed
		p	1		player
	f	I	k	CONTAINER_SIZE
	f	Lazf;	l	container
c	bxe	net/minecraft/world/inventory/ShulkerBoxSlot
	m	(Lazf;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
c	bxf	net/minecraft/world/inventory/SimpleContainerData
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	[I	a	ints
c	bxg	net/minecraft/world/inventory/Slot
	m	(Lazf;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(I)Lcaa;	a	remove
		p	1		amount
	m	(IILbtf;)Ljava/util/Optional;	a	tryRemove
		p	1		min
		p	2		max
		p	3		player
	m	(Lbtf;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcaa;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcaa;Lcaa;)V	a	onQuickCraft
		p	1		newItem
		p	2		original
	m	(Lcaa;)I	a_	getMaxStackSize
		p	1		stack
	m	()Z	b	isActive
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(IILbtf;)Lcaa;	b	safeTake
		p	1		min
		p	2		max
		p	3		player
	m	(Lbtf;)Z	b	allowModification
		p	1		player
	m	(Lbtf;Lcaa;)V	b	lambda$safeTake$0
		p	2		stack
	m	(Lcaa;I)Lcaa;	b	safeInsert
		p	1		stack
		p	2		count
	m	(Lcaa;)V	b_	checkTakeAchievements
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	m	()V	d	setChanged
	m	(Lcaa;)V	d	set
		p	1		stack
	m	()Lcaa;	e	getItem
	m	(Lcaa;)V	e	initialize
		p	1		stack
	m	()Z	f	hasItem
	m	(Lcaa;)Lcaa;	f	safeInsert
		p	1		stack
	m	()I	g	getContainerSlot
	f	I	a	slot
	f	Lazf;	d	container
	f	I	e	index
	f	I	f	x
	f	I	g	y
c	bxh	net/minecraft/world/inventory/SmithingMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lbtf;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcaa;Lbxg;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcaa;Lcdj;)Z	a	lambda$shouldQuickMoveToAdditionalSlot$1
		p	1		recipe
	m	(Lcga;Lgt;)V	a	lambda$onTake$0
		p	0		world
		p	1		pos
	m	(Lcur;)Z	a	isValidBlock
		p	1		state
	m	(Lcaa;)Z	c	shouldQuickMoveToAdditionalSlot
		p	1		stack
	m	(I)V	e	shrinkStackInSlot
		p	1		slot
	m	()V	l	createResult
	f	Lcga;	k	level
	f	Lcdj;	s	selectedRecipe
	f	Ljava/util/List;	t	recipes
c	bxi	net/minecraft/world/inventory/SmokerMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lazf;Lbvz;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	bxj	net/minecraft/world/inventory/StackedContentsCompatible
	m	(Lbtj;)V	a	fillStackedContents
		p	1		finder
c	bxk	net/minecraft/world/inventory/StonecutterMenu
	m	(ILbte;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbte;Lbwa;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	()Lbwt;	a	getType
	m	(Lazf;)V	a	slotsChanged
		p	1		inventory
	m	(Lazf;Lcaa;)V	a	setupRecipeList
		p	1		input
		p	2		stack
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtf;I)Lcaa;	a	quickMoveStack
		p	1		player
		p	2		index
	m	(Lbtf;Lcga;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcaa;Lbxg;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		contentsChangedListener
	m	(Lbtf;)V	b	removed
		p	1		player
	m	(Lbtf;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(I)Z	e	isValidRecipeIndex
		p	1		id
	m	()I	l	getSelectedRecipeIndex
	m	()Ljava/util/List;	m	getRecipes
	m	()I	n	getNumRecipes
	m	()Z	o	hasInputItem
	m	()V	p	setupResultSlot
	m	()V	q	lambda$new$0
	f	Lbxb;	A	resultContainer
	f	I	k	INPUT_SLOT
	f	I	l	RESULT_SLOT
	f	Lbxg;	m	inputSlot
	f	Lbxg;	n	resultSlot
	f	Lazf;	o	container
	f	I	p	INV_SLOT_START
	f	I	q	INV_SLOT_END
	f	I	r	USE_ROW_SLOT_START
	f	I	s	USE_ROW_SLOT_END
	f	Lbwa;	t	access
	f	Lbwf;	u	selectedRecipeIndex
	f	Lcga;	v	level
	f	Ljava/util/List;	w	recipes
	f	Lcaa;	x	input
	f	J	y	lastSoundTime
	f	Ljava/lang/Runnable;	z	slotUpdateListener
c	bxk$1	net/minecraft/world/inventory/StonecutterMenu$1
	m	(Lbxk;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lbxk;	b	this$0
c	bxk$2	net/minecraft/world/inventory/StonecutterMenu$2
	m	(Lbxk;Lazf;IIILbwa;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbtf;Lcaa;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcaa;)Z	a	mayPlace
		p	1		stack
	m	(Lcga;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lbwa;	a	val$access
	f	Lbxk;	b	this$0
c	bxl	net/minecraft/world/inventory/package-info
c	bxm	net/minecraft/world/inventory/tooltip/BundleTooltip
	m	(Lhi;I)V	<init>	<init>
		p	1		inventory
		p	2		bundleOccupancy
	m	()Lhi;	a	getItems
	m	()I	b	getWeight
	f	Lhi;	a	items
	f	I	b	weight
c	bxn	net/minecraft/world/inventory/tooltip/TooltipComponent
c	bxo	net/minecraft/world/inventory/tooltip/package-info
c	bxp	net/minecraft/world/item/AdventureModeCheck
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	(Lcaa;Lhm;Lcuv;)Z	a	test
		p	1		stack
		p	2		blockRegistry
		p	3		pos
	m	(Lcuv;Lcuv;Z)Z	a	areSameBlocks
		p	0		pos
		p	1		cachedPos
		p	2		nbtAware
	f	Ljava/lang/String;	a	tagName
	f	Lcuv;	b	lastCheckedBlock
	f	Z	c	lastResult
	f	Z	d	checksBlockEntity
c	bxq	net/minecraft/world/item/AirItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	f	Lciw;	a	block
c	bxr	net/minecraft/world/item/ArmorItem
	m	(Lbxs;Lbav;Lbzw$a;)V	<init>	<init>
		p	1		material
		p	2		slot
		p	3		settings
	m	(Lbav;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lcaa;Lcaa;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lgu;Lcaa;)Z	a	dispenseArmor
		p	0		pointer
		p	1		armor
	m	()Lbav;	b	getSlot
	m	()I	c	getEnchantmentValue
	m	()Lbxs;	d	getMaterial
	m	()I	e	getDefense
	m	()F	f	getToughness
	m	()Lajd;	g	getEquipSound
	f	Lhz;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lbav;	b	slot
	f	F	c	knockbackResistance
	f	Lbxs;	d	material
	f	[Ljava/util/UUID;	e	ARMOR_MODIFIER_UUID_PER_SLOT
	f	I	f	defense
	f	F	g	toughness
	f	Lcom/google/common/collect/Multimap;	h	defaultModifiers
c	bxr$1	net/minecraft/world/item/ArmorItem$1
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
c	bxs	net/minecraft/world/item/ArmorMaterial
	m	()I	a	getEnchantmentValue
	m	(Lbav;)I	a	getDurabilityForSlot
		p	1		slot
	m	()Lajd;	b	getEquipSound
	m	(Lbav;)I	b	getDefenseForSlot
		p	1		slot
	m	()Lccp;	c	getRepairIngredient
	m	()Ljava/lang/String;	d	getName
	m	()F	e	getToughness
	m	()F	f	getKnockbackResistance
c	bxt	net/minecraft/world/item/ArmorMaterials
	m	(Ljava/lang/String;ILjava/lang/String;I[IILajd;FFLjava/util/function/Supplier;)V	<init>	<init>
		p	3		name
		p	4		durabilityMultiplier
		p	5		protectionAmounts
		p	6		enchantability
		p	7		equipSound
		p	8		toughness
		p	9		knockbackResistance
		p	10		repairIngredientSupplier
	m	()I	a	getEnchantmentValue
	m	(Lbav;)I	a	getDurabilityForSlot
		p	1		slot
	m	()Lajd;	b	getEquipSound
	m	(Lbav;)I	b	getDefenseForSlot
		p	1		slot
	m	()Lccp;	c	getRepairIngredient
	m	()Ljava/lang/String;	d	getName
	m	()F	e	getToughness
	m	()F	f	getKnockbackResistance
	m	()Lccp;	g	lambda$static$6
	m	()Lccp;	h	lambda$static$5
	m	()Lccp;	i	lambda$static$4
	m	()Lccp;	j	lambda$static$3
	m	()Lccp;	k	lambda$static$2
	m	()Lccp;	l	lambda$static$1
	m	()Lccp;	m	lambda$static$0
	m	()[Lbxt;	n	$values
	f	Lbxt;	a	LEATHER
	f	Lbxt;	b	CHAIN
	f	Lbxt;	c	IRON
	f	Lbxt;	d	GOLD
	f	Lbxt;	e	DIAMOND
	f	Lbxt;	f	TURTLE
	f	Lbxt;	g	NETHERITE
	f	[I	h	HEALTH_PER_SLOT
	f	Ljava/lang/String;	i	name
	f	I	j	durabilityMultiplier
	f	[I	k	slotProtections
	f	I	l	enchantmentValue
	f	Lajd;	m	sound
	f	F	n	toughness
	f	F	o	knockbackResistance
	f	Lalk;	p	repairIngredient
	f	[Lbxt;	q	$VALUES
c	bxu	net/minecraft/world/item/ArmorStandItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbpo;Lalu;)V	a	randomizePose
		p	1		stand
		p	2		random
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
c	bxv	net/minecraft/world/item/ArrowItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcaa;Lbbf;)Lbtl;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
c	bxw	net/minecraft/world/item/AxeItem
	m	(Lcbk;FFLbzw$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lccc;Lbtf;)V	a	lambda$useOn$1
		p	1		p
	m	(Lcur;Lciw;)Lcur;	a	lambda$getStripped$2
		p	1		block
	m	(Lcur;)Ljava/util/Optional;	b	getStripped
		p	1		state
	m	(Lcur;Lciw;)Lcur;	b	lambda$useOn$0
		p	1		block
	f	Ljava/util/Map;	a	STRIPPABLES
c	bxx	net/minecraft/world/item/BannerItem
	m	(Lciw;Lciw;Lbzw$a;)V	<init>	<init>
		p	1		standingBlock
		p	2		wallBlock
		p	3		settings
	m	(Laai;)Ljava/lang/String;	a	lambda$appendHoverTextFromBannerBlockEntityTag$0
		p	0		key
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;Ljava/util/List;)V	a	appendHoverTextFromBannerBlockEntityTag
		p	0		stack
		p	1		tooltip
	m	(Ljava/util/List;Lbyt;Ljava/lang/String;)V	a	lambda$appendHoverTextFromBannerBlockEntityTag$1
		p	2		translationKey
	m	()Lbyt;	b	getColor
	f	Ljava/lang/String;	b	PATTERN_PREFIX
c	bxy	net/minecraft/world/item/BannerPatternItem
	m	(Lakh;Lbzw$a;)V	<init>	<init>
		p	1		patternItemTag
		p	2		settings
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lakh;	b	getBannerPattern
	m	()Lrt;	d	getDisplayName
	f	Lakh;	a	bannerPattern
c	bxz	net/minecraft/world/item/BedItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcca;Lcur;)Z	a	placeBlock
		p	1		context
		p	2		state
c	bya	net/minecraft/world/item/BlockItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Z	T_	canFitInsideContainerItems
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbpy;)V	a	onDestroyed
		p	1		entity
	m	(Lbym;Lhi;)V	a	fillItemCategory
		p	1		group
		p	2		stacks
	m	(Lcaa;)Lpj;	a	getBlockEntityData
		p	0		stack
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;Lcsn;Lpj;)V	a	setBlockEntityData
		p	0		stack
		p	1		blockEntityType
		p	2		tag
	m	(Lcca;)Lazm;	a	place
		p	1		context
	m	(Lcca;Lcur;)Z	a	placeBlock
		p	1		context
		p	2		state
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lgt;Lcaa;)Z	a	updateCustomBlockEntityTag
		p	0		world
		p	1		player
		p	2		pos
		p	3		stack
	m	(Lcur;)Lajd;	a	getPlaceSound
		p	1		state
	m	(Lcur;Lcvu;Ljava/lang/Comparable;)Lcur;	a	lambda$updateState$0
		p	2		value
	m	(Lcur;Lcvu;Ljava/lang/String;)Lcur;	a	updateState
		p	0		state
		p	1		property
		p	2		name
	m	(Lgt;Lcga;Lbtf;Lcaa;Lcur;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
	m	(Lgt;Lcga;Lcaa;Lcur;)Lcur;	a	updateBlockStateFromTag
		p	1		pos
		p	2		world
		p	3		stack
		p	4		state
	m	(Ljava/util/Map;Lbzw;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	(Lcca;)Lcca;	b	updatePlacementContext
		p	1		context
	m	(Lcca;Lcur;)Z	b	canPlace
		p	1		context
		p	2		state
	m	(Lcca;)Lcur;	c	getPlacementState
		p	1		context
	m	()Z	d	mustSurvive
	m	()Lciw;	e	getBlock
	f	Ljava/lang/String;	a	BLOCK_STATE_TAG
	f	Ljava/lang/String;	b	BLOCK_ENTITY_TAG
	f	Lciw;	c	block
c	byb	net/minecraft/world/item/BoatItem
	m	(ZLbuy$b;Lbzw$a;)V	<init>	<init>
		p	1		chest
		p	2		type
		p	3		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcga;Ldvr;)Lbuy;	a	getBoat
		p	1		world
		p	2		hitResult
	f	Ljava/util/function/Predicate;	a	ENTITY_PREDICATE
	f	Lbuy$b;	b	type
	f	Z	c	hasChest
c	byc	net/minecraft/world/item/BoneMealItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcga;Lgt;)Z	a	growCrop
		p	0		stack
		p	1		world
		p	2		pos
	m	(Lcaa;Lcga;Lgt;Lgy;)Z	a	growWaterPlant
		p	0		stack
		p	1		world
		p	2		blockPos
		p	3		facing
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lhe$c;)Ljava/util/Optional;	a	lambda$growWaterPlant$2
		p	1		blocks
	m	(Lcgb;Lgt;I)V	a	addGrowthParticles
		p	0		world
		p	1		pos
		p	2		count
	m	(Lcuq$a;)Z	a	lambda$growWaterPlant$4
		p	0		state
	m	(Lhc;)Lcur;	a	lambda$growWaterPlant$3
		p	0		blockEntry
	m	(Lcga;Lhe$c;)Ljava/util/Optional;	b	lambda$growWaterPlant$0
		p	1		blocks
	m	(Lhc;)Lcur;	b	lambda$growWaterPlant$1
		p	0		blockEntry
	f	I	a	GRASS_SPREAD_WIDTH
	f	I	b	GRASS_SPREAD_HEIGHT
	f	I	c	GRASS_COUNT_MULTIPLIER
c	byd	net/minecraft/world/item/BookItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	()I	c	getEnchantmentValue
	m	(Lcaa;)Z	c_	isEnchantable
		p	1		stack
c	bye	net/minecraft/world/item/BottleItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbap;)Z	a	lambda$use$0
		p	0		entity
	m	(Lcaa;Lbtf;Lcaa;)Lcaa;	a	turnBottleIntoItem
		p	1		stack
		p	2		player
		p	3		outputStack
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	byf	net/minecraft/world/item/BowItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(I)F	a	getPowerForTime
		p	0		useTicks
	m	(Lbtf;Lbtf;)V	a	lambda$releaseUsing$0
		p	1		p
	m	(Lcaa;Lcga;Lbbf;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	m	()I	d	getDefaultProjectileRange
	f	I	a	MAX_DRAW_DURATION
	f	I	b	DEFAULT_RANGE
c	byg	net/minecraft/world/item/BowlFoodItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
c	byh	net/minecraft/world/item/BucketItem
	m	(Ldox;Lbzw$a;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	(Lbtf;Lajd;)V	a	lambda$use$0
		p	1		sound
	m	(Lbtf;Lcga;Lcaa;Lgt;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbtf;Lcga;Lgt;Ldvp;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lbtf;Lcgb;Lgt;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcaa;Lbtf;)Lcaa;	a	getEmptySuccessItem
		p	0		stack
		p	1		player
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Ldox;	a	content
c	byi	net/minecraft/world/item/BundleItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;)V	a	playRemoveOneSound
		p	1		entity
	m	(Lbpy;)V	a	onDestroyed
		p	1		entity
	m	(Lbtf;Lbbw;Lcaa;)V	a	lambda$overrideOtherStackedOnMe$1
	m	(Lcaa;Lbtf;)Z	a	dropContents
		p	0		stack
		p	1		player
	m	(Lcaa;Lbxg;Lbvx;Lbtf;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcaa;Lbxg;Lcaa;)V	a	lambda$overrideStackedOnOther$0
		p	2		removedStack
	m	(Lcaa;Lcaa;Lbxg;Lbvx;Lbtf;Lbbw;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;Lpj;)Z	a	lambda$getMatchingItem$2
		p	1		item
	m	(Lcaa;Lpp;)Ljava/util/Optional;	a	getMatchingItem
		p	0		stack
		p	1		items
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lbaq;)V	b	playInsertSound
		p	1		entity
	m	(Lcaa;Lcaa;)I	b	add
		p	0		bundle
		p	1		stack
	m	(Lbaq;)V	c	playDropContentsSound
		p	1		entity
	m	(Lcaa;)F	d	getFullnessDisplay
		p	0		stack
	m	(Lcaa;)Z	e	isBarVisible
		p	1		stack
	m	(Lcaa;)I	f	getBarWidth
		p	1		stack
	m	(Lcaa;)I	g	getBarColor
		p	1		stack
	m	(Lcaa;)Ljava/util/Optional;	h	getTooltipImage
		p	1		stack
	m	(Lcaa;)I	k	getWeight
		p	0		stack
	m	(Lcaa;)I	o	getContentWeight
		p	0		stack
	m	(Lcaa;)Ljava/util/Optional;	p	removeOne
		p	0		stack
	m	(Lcaa;)Ljava/util/stream/Stream;	q	getContents
		p	0		stack
	m	(Lcaa;)I	r	lambda$getContentWeight$3
	f	I	a	MAX_WEIGHT
	f	Ljava/lang/String;	b	TAG_ITEMS
	f	I	c	BUNDLE_IN_BUNDLE_WEIGHT
	f	I	d	BAR_COLOR
c	byj	net/minecraft/world/item/ChorusFruitItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
c	byk	net/minecraft/world/item/CompassItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Laai;Lgt;Lpj;)V	a	addLodestoneTags
		p	1		worldKey
		p	2		pos
		p	3		nbt
	m	(Lcaa;Lcga;Lbaq;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;)Lhb;	a	getSpawnPosition
		p	0		world
	m	(Lpj;)Lhb;	a	getLodestonePosition
		p	0		nbt
	m	(Lpj;Lqc;)V	a	lambda$addLodestoneTags$0
	m	(Lpj;)Ljava/util/Optional;	c	getLodestoneDimension
		p	0		nbt
	m	(Lcaa;)Z	d	isLodestoneCompass
		p	0		stack
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
	m	(Lcaa;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	Ljava/lang/String;	a	TAG_LODESTONE_POS
	f	Ljava/lang/String;	b	TAG_LODESTONE_DIMENSION
	f	Ljava/lang/String;	c	TAG_LODESTONE_TRACKED
	f	Lorg/slf4j/Logger;	d	LOGGER
c	byl	net/minecraft/world/item/ComplexItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	()Z	Q_	isComplex
	m	(Lcaa;Lcga;Lbtf;)Lso;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
c	bym	net/minecraft/world/item/CreativeModeTab
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()I	a	getId
	m	(Lcdv;)Z	a	hasEnchantmentCategory
		p	1		target
	m	(Lhi;)V	a	fillItemList
		p	1		stacks
	m	(Ljava/lang/String;)Lbym;	a	setBackgroundSuffix
		p	1		texture
	m	([Lcdv;)Lbym;	a	setEnchantmentCategories
		p	1		targets
	m	()Ljava/lang/String;	b	getRecipeFolderName
	m	(Ljava/lang/String;)Lbym;	b	setRecipeFolderName
		p	1		name
	m	()Lrm;	c	getDisplayName
	m	()Lcaa;	d	getIconItem
	m	()Lcaa;	e	makeIcon
	m	()Ljava/lang/String;	f	getBackgroundSuffix
	m	()Z	g	showTitle
	m	()Lbym;	h	hideTitle
	m	()Z	i	canScroll
	m	()Lbym;	j	hideScroll
	m	()I	k	getColumn
	m	()Z	l	isTopRow
	m	()Z	m	isAlignedRight
	m	()[Lcdv;	n	getEnchantmentCategories
	f	[Lbym;	a	TABS
	f	Lbym;	b	TAB_BUILDING_BLOCKS
	f	Lbym;	c	TAB_DECORATIONS
	f	Lbym;	d	TAB_REDSTONE
	f	Lbym;	e	TAB_TRANSPORTATION
	f	Lbym;	f	TAB_MISC
	f	Lbym;	g	TAB_SEARCH
	f	Lbym;	h	TAB_FOOD
	f	Lbym;	i	TAB_TOOLS
	f	Lbym;	j	TAB_COMBAT
	f	Lbym;	k	TAB_BREWING
	f	Lbym;	l	TAB_MATERIALS
	f	Lbym;	m	TAB_HOTBAR
	f	Lbym;	n	TAB_INVENTORY
	f	I	o	id
	f	Ljava/lang/String;	p	langId
	f	Lrm;	q	displayName
	f	Ljava/lang/String;	r	recipeFolderName
	f	Ljava/lang/String;	s	backgroundSuffix
	f	Z	t	canScroll
	f	Z	u	showTitle
	f	[Lcdv;	v	enchantmentCategories
	f	Lcaa;	w	iconItemStack
c	bym$1	net/minecraft/world/item/CreativeModeTab$1
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$2	net/minecraft/world/item/CreativeModeTab$10
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$3	net/minecraft/world/item/CreativeModeTab$11
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	(Lhi;)V	a	fillItemList
		p	1		stacks
	m	()Lcaa;	e	makeIcon
	m	()Z	m	isAlignedRight
c	bym$4	net/minecraft/world/item/CreativeModeTab$12
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$5	net/minecraft/world/item/CreativeModeTab$2
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$6	net/minecraft/world/item/CreativeModeTab$3
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$7	net/minecraft/world/item/CreativeModeTab$4
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$8	net/minecraft/world/item/CreativeModeTab$5
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$9	net/minecraft/world/item/CreativeModeTab$6
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$10	net/minecraft/world/item/CreativeModeTab$7
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$11	net/minecraft/world/item/CreativeModeTab$8
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	bym$12	net/minecraft/world/item/CreativeModeTab$9
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		index
		p	2		id
	m	()Lcaa;	e	makeIcon
c	byn	net/minecraft/world/item/CrossbowItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(I)Lajd;	a	getStartSound
		p	1		stage
	m	(ILcaa;)F	a	getPowerForTime
		p	0		useTicks
		p	1		stack
	m	(Lalu;)[F	a	getShotPitches
		p	0		random
	m	(Lazl;Lbbf;)V	a	lambda$shootProjectile$1
		p	1		e
	m	(Lbbf;Lcaa;)Z	a	tryLoadProjectiles
		p	0		shooter
		p	1		projectile
	m	(Lbbf;Lcaa;Lcaa;ZZ)Z	a	loadProjectile
		p	0		shooter
		p	1		crossbow
		p	2		projectile
		p	3		simulated
		p	4		creative
	m	(Lbzw;Lcaa;)Z	a	lambda$containsChargedProjectile$0
		p	1		s
	m	(Lcaa;Lbzw;)Z	a	containsChargedProjectile
		p	0		crossbow
		p	1		projectile
	m	(Lcaa;Lcga;Lbbf;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;Z)V	a	setCharged
		p	0		stack
		p	1		charged
	m	(Lcga;Lbbf;Lazl;Lcaa;FF)V	a	performShooting
		p	0		world
		p	1		entity
		p	2		hand
		p	3		stack
		p	4		speed
		p	5		divergence
	m	(Lcga;Lbbf;Lazl;Lcaa;Lcaa;FZFFF)V	a	shootProjectile
		p	0		world
		p	1		shooter
		p	2		hand
		p	3		crossbow
		p	4		projectile
		p	5		soundPitch
		p	6		creative
		p	7		speed
		p	8		divergence
		p	9		simulated
	m	(Lcga;Lbbf;Lcaa;)V	a	onCrossbowShot
		p	0		world
		p	1		entity
		p	2		stack
	m	(Lcga;Lbbf;Lcaa;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcga;Lbbf;Lcaa;Lcaa;)Lbtl;	a	getArrow
		p	0		world
		p	1		entity
		p	2		crossbow
		p	3		arrow
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(ZLalu;)F	a	getRandomShotPitch
		p	0		flag
		p	1		random
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;Lcaa;)V	b	addChargedProjectile
		p	0		crossbow
		p	1		projectile
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	m	()I	d	getDefaultProjectileRange
	m	(Lcaa;)Z	d	isCharged
		p	0		stack
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lcaa;)I	k	getChargeDuration
		p	0		stack
	m	(Lcaa;)Z	l	useOnRelease
		p	1		stack
	m	(Lcaa;)F	o	getShootingPower
		p	0		stack
	m	(Lcaa;)Ljava/util/List;	p	getChargedProjectiles
		p	0		crossbow
	m	(Lcaa;)V	q	clearChargedProjectiles
		p	0		crossbow
	f	I	a	DEFAULT_RANGE
	f	Ljava/lang/String;	b	TAG_CHARGED
	f	Ljava/lang/String;	e	TAG_CHARGED_PROJECTILES
	f	I	f	MAX_CHARGE_DURATION
	f	Z	g	startSoundPlayed
	f	Z	h	midLoadSoundPlayed
	f	F	i	START_SOUND_PERCENT
	f	F	j	MID_SOUND_PERCENT
	f	F	r	ARROW_POWER
	f	F	s	FIREWORK_POWER
c	byo	net/minecraft/world/item/DebugStickItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbtf;Lcur;Lcgb;Lgt;ZLcaa;)Z	a	handleInteraction
		p	1		player
		p	2		state
		p	3		world
		p	4		pos
		p	5		update
		p	6		stack
	m	(Lbtf;Lrm;)V	a	message
		p	0		player
		p	1		message
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcur;Lcga;Lgt;Lbtf;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lcur;Lcvu;)Ljava/lang/String;	a	getNameHelper
		p	0		state
		p	1		property
	m	(Lcur;Lcvu;Z)Lcur;	a	cycleState
		p	0		state
		p	1		property
		p	2		inverse
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	getRelative
		p	0		elements
		p	1		current
		p	2		inverse
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
c	byp	net/minecraft/world/item/DiggerItem
	m	(FFLcbk;Lakh;Lbzw$a;)V	<init>	<init>
		p	1		attackDamage
		p	2		attackSpeed
		p	3		material
		p	4		effectiveBlocks
		p	5		settings
	m	(Lbav;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbbf;)V	a	lambda$mineBlock$1
		p	0		e
	m	(Lcaa;Lbbf;Lbbf;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcaa;Lcga;Lcur;Lgt;Lbbf;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcaa;Lcur;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lcur;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	(Lbbf;)V	b	lambda$hurtEnemy$0
		p	0		e
	m	()F	d	getAttackDamage
	f	Lakh;	a	blocks
	f	F	b	speed
	f	F	c	attackDamageBaseline
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	byq	net/minecraft/world/item/DiscFragmentItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lrt;	d	getDisplayName
c	byr	net/minecraft/world/item/DispensibleContainerItem
	m	(Lbtf;Lcga;Lcaa;Lgt;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbtf;Lcga;Lgt;Ldvp;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
c	bys	net/minecraft/world/item/DoubleHighBlockItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcca;Lcur;)Z	a	placeBlock
		p	1		context
		p	2		state
c	byt	net/minecraft/world/item/DyeColor
	m	(Ljava/lang/String;IILjava/lang/String;ILdpd;II)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		color
		p	6		mapColor
		p	7		fireworkColor
		p	8		signColor
	m	()I	a	getId
	m	(I)Lbyt;	a	byId
		p	0		id
	m	(Lbyt;)Lbyt;	a	lambda$static$2
	m	(Ljava/lang/String;Lbyt;)Lbyt;	a	byName
		p	0		name
		p	1		defaultColor
	m	()Ljava/lang/String;	b	getName
	m	(I)Lbyt;	b	byFireworkColor
		p	0		color
	m	(Lbyt;)Ljava/lang/Integer;	b	lambda$static$1
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)[Lbyt;	c	lambda$static$0
	m	()[F	d	getTextureDiffuseColors
	m	()Ldpd;	e	getMaterialColor
	m	()I	f	getFireworkColor
	m	()I	g	getTextColor
	m	()[Lbyt;	h	$values
	f	Lbyt;	a	WHITE
	f	Lbyt;	b	ORANGE
	f	Lbyt;	c	MAGENTA
	f	Lbyt;	d	LIGHT_BLUE
	f	Lbyt;	e	YELLOW
	f	Lbyt;	f	LIME
	f	Lbyt;	g	PINK
	f	Lbyt;	h	GRAY
	f	Lbyt;	i	LIGHT_GRAY
	f	Lbyt;	j	CYAN
	f	Lbyt;	k	PURPLE
	f	Lbyt;	l	BLUE
	f	Lbyt;	m	BROWN
	f	Lbyt;	n	GREEN
	f	Lbyt;	o	RED
	f	Lbyt;	p	BLACK
	f	[Lbyt;	q	BY_ID
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	r	BY_FIREWORK_COLOR
	f	I	s	id
	f	Ljava/lang/String;	t	name
	f	Ldpd;	u	color
	f	[F	v	textureDiffuseColors
	f	I	w	fireworkColor
	f	I	x	textColor
	f	[Lbyt;	y	$VALUES
c	byu	net/minecraft/world/item/DyeItem
	m	(Lbyt;Lbzw$a;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lbyt;)Lbyu;	a	byColor
		p	0		color
	m	(Lcaa;Lbtf;Lbbf;Lazl;)Lazm;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	()Lbyt;	d	getDyeColor
	f	Ljava/util/Map;	a	ITEM_BY_COLOR
	f	Lbyt;	b	dyeColor
c	byv	net/minecraft/world/item/DyeableArmorItem
	m	(Lbxs;Lbav;Lbzw$a;)V	<init>	<init>
		p	1		material
		p	2		slot
		p	3		settings
c	byw	net/minecraft/world/item/DyeableHorseArmorItem
	m	(ILjava/lang/String;Lbzw$a;)V	<init>	<init>
		p	1		bonus
		p	2		name
		p	3		settings
c	byx	net/minecraft/world/item/DyeableLeatherItem
	m	(Lcaa;)Z	a	hasCustomColor
		p	1		stack
	m	(Lcaa;I)V	a	setColor
		p	1		stack
		p	2		color
	m	(Lcaa;Ljava/util/List;)Lcaa;	a	dyeArmor
		p	0		stack
		p	1		colors
	m	(Lcaa;)I	d_	getColor
		p	1		stack
	m	(Lcaa;)V	e_	clearColor
		p	1		stack
	f	Ljava/lang/String;	l_	TAG_COLOR
	f	Ljava/lang/String;	m_	TAG_DISPLAY
	f	I	n_	DEFAULT_LEATHER_COLOR
c	byy	net/minecraft/world/item/EggItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	byz	net/minecraft/world/item/ElytraItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcaa;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcaa;)Z	d	isFlyEnabled
		p	0		stack
	m	()Lajd;	g	getEquipSound
c	bza	net/minecraft/world/item/EmptyMapItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	bzb	net/minecraft/world/item/EnchantedBookItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbym;Lhi;)V	a	fillItemCategory
		p	1		group
		p	2		stacks
	m	(Lcaa;Lcdx;)V	a	addEnchantment
		p	0		stack
		p	1		entry
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcdx;)Lcaa;	a	createForEnchantment
		p	0		info
	m	(Lcaa;)Z	c_	isEnchantable
		p	1		stack
	m	(Lcaa;)Lpp;	d	getEnchantments
		p	0		stack
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
	f	Ljava/lang/String;	a	TAG_STORED_ENCHANTMENTS
c	bzc	net/minecraft/world/item/EnchantedGoldenAppleItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
c	bzd	net/minecraft/world/item/EndCrystalItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
c	bze	net/minecraft/world/item/EnderEyeItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	bzf	net/minecraft/world/item/EnderpearlItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	bzg	net/minecraft/world/item/ExperienceBottleItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
c	bzh	net/minecraft/world/item/FireChargeItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lgt;)V	a	playSound
		p	1		world
		p	2		pos
c	bzi	net/minecraft/world/item/FireworkRocketItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	()Lcaa;	R_	getDefaultInstance
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Ljava/lang/String;	a	TAG_FIREWORKS
	f	Ljava/lang/String;	b	TAG_EXPLOSION
	f	Ljava/lang/String;	c	TAG_EXPLOSIONS
	f	Ljava/lang/String;	d	TAG_FLIGHT
	f	Ljava/lang/String;	e	TAG_EXPLOSION_TYPE
	f	Ljava/lang/String;	f	TAG_EXPLOSION_TRAIL
	f	Ljava/lang/String;	g	TAG_EXPLOSION_FLICKER
	f	Ljava/lang/String;	h	TAG_EXPLOSION_COLORS
	f	Ljava/lang/String;	i	TAG_EXPLOSION_FADECOLORS
	f	D	j	ROCKET_PLACEMENT_OFFSET
c	bzi$a	net/minecraft/world/item/FireworkRocketItem$Shape
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbzi$a;	a	byId
		p	0		id
	m	(Lbzi$a;)I	a	lambda$static$0
		p	0		type
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbzi$a;	b	lambda$static$1
	m	()[Lbzi$a;	c	$values
	f	Lbzi$a;	a	SMALL_BALL
	f	Lbzi$a;	b	LARGE_BALL
	f	Lbzi$a;	c	STAR
	f	Lbzi$a;	d	CREEPER
	f	Lbzi$a;	e	BURST
	f	[Lbzi$a;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbzi$a;	i	$VALUES
c	bzj	net/minecraft/world/item/FireworkStarItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(I)Lrm;	a	getColorName
		p	0		color
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lpj;Ljava/util/List;)V	a	appendHoverText
		p	0		nbt
		p	1		tooltip
	m	(Lrt;[I)Lrm;	a	appendColors
		p	0		line
		p	1		colors
c	bzk	net/minecraft/world/item/FishingRodItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lazl;Lbtf;)V	a	lambda$use$0
		p	1		p
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()I	c	getEnchantmentValue
c	bzl	net/minecraft/world/item/FlintAndSteelItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lccc;Lbtf;)V	a	lambda$useOn$1
		p	1		p
	m	(Lccc;Lbtf;)V	b	lambda$useOn$0
		p	1		p
c	bzm	net/minecraft/world/item/FoodOnAStickItem
	m	(Lbzw$a;Lbau;I)V	<init>	<init>
		p	1		settings
		p	2		target
		p	3		damagePerUse
	m	(Lazl;Lbtf;)V	a	lambda$use$0
		p	1		p
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Lbau;	a	canInteractWith
	f	I	b	consumeItemDamage
c	bzn	net/minecraft/world/item/GameMasterBlockItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcca;)Lcur;	c	getPlacementState
		p	1		context
c	bzo	net/minecraft/world/item/HangingEntityItem
	m	(Lbau;Lbzw$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lbtf;Lgy;Lcaa;Lgt;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	f	Lbau;	a	type
c	bzp	net/minecraft/world/item/HoeItem
	m	(Lcbk;IFLbzw$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lccc;Lbtf;)V	a	lambda$useOn$1
		p	1		p
	m	(Lcur;Lccc;)V	a	lambda$changeIntoState$2
		p	1		context
	m	(Lcur;Lcfz;)Ljava/util/function/Consumer;	a	changeIntoStateAndDropItem
		p	0		result
		p	1		droppedItem
	m	(Lcur;Lcfz;Lccc;)V	a	lambda$changeIntoStateAndDropItem$3
		p	2		context
	m	(Lccc;)Z	b	onlyIfAirAbove
		p	0		context
	m	(Lcur;)Ljava/util/function/Consumer;	b	changeIntoState
		p	0		result
	m	(Lccc;)Z	c	lambda$static$0
	f	Ljava/util/Map;	a	TILLABLES
c	bzq	net/minecraft/world/item/HoneyBottleItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	()Lajd;	S_	getDrinkingSound
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	m	()Lajd;	h	getEatingSound
	f	I	a	DRINK_DURATION
c	bzr	net/minecraft/world/item/HoneycombItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lccc;Lgt;Lcga;Lcur;)Lazm;	a	lambda$useOn$2
		p	3		state
	m	(Lcur;Lciw;)Lcur;	a	lambda$getWaxed$3
		p	1		block
	m	(Lcur;)Ljava/util/Optional;	b	getWaxed
		p	0		state
	m	()Lcom/google/common/collect/BiMap;	i	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	j	lambda$static$0
	f	Ljava/util/function/Supplier;	a	WAXABLES
	f	Ljava/util/function/Supplier;	b	WAX_OFF_BY_BLOCK
c	bzs	net/minecraft/world/item/HorseArmorItem
	m	(ILjava/lang/String;Lbzw$a;)V	<init>	<init>
		p	1		bonus
		p	2		name
		p	3		settings
	m	()Laaj;	i	getTexture
	m	()I	j	getProtection
	f	Ljava/lang/String;	a	TEX_FOLDER
	f	I	b	protection
	f	Ljava/lang/String;	c	texture
c	bzt	net/minecraft/world/item/Instrument
	m	()Lajd;	a	soundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	useDuration
	m	()F	c	range
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lajd;	b	soundEvent
	f	I	c	useDuration
	f	F	d	range
c	bzu	net/minecraft/world/item/InstrumentItem
	m	(Lbzw$a;Lakh;)V	<init>	<init>
		p	1		settings
		p	2		instrumentTag
	m	(Lalu;Lhe$c;)Ljava/util/Optional;	a	lambda$setRandom$0
		p	1		entryList
	m	(Lbym;Lhi;)V	a	fillItemCategory
		p	1		group
		p	2		stacks
	m	(Lbzw;Lhc;)Lcaa;	a	create
		p	0		item
		p	1		instrument
	m	(Lcaa;Lakh;Lalu;)V	a	setRandom
		p	0		stack
		p	1		instrumentTag
		p	2		random
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;Lhc;)V	a	setSoundVariantId
		p	0		stack
		p	1		instrument
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcga;Lbtf;Lbzt;)V	a	play
		p	0		world
		p	1		player
		p	2		instrument
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	m	(Lcaa;)Ljava/util/Optional;	d	getInstrument
		p	1		stack
	m	()Ljava/lang/IllegalStateException;	i	lambda$setSoundVariantId$1
	f	Ljava/lang/String;	a	TAG_INSTRUMENT
	f	Lakh;	b	instruments
c	bzv	net/minecraft/world/item/Instruments
	m	(Lhm;)Lbzt;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laai;	a	create
		p	0		id
	f	I	a	GOAT_HORN_RANGE_BLOCKS
	f	I	b	GOAT_HORN_DURATION
	f	Laai;	c	PONDER_GOAT_HORN
	f	Laai;	d	SING_GOAT_HORN
	f	Laai;	e	SEEK_GOAT_HORN
	f	Laai;	f	FEEL_GOAT_HORN
	f	Laai;	g	ADMIRE_GOAT_HORN
	f	Laai;	h	CALL_GOAT_HORN
	f	Laai;	i	YEARN_GOAT_HORN
	f	Laai;	j	DREAM_GOAT_HORN
c	bzw	net/minecraft/world/item/Item
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	()Z	Q_	isComplex
	m	()Lcaa;	R_	getDefaultInstance
	m	()Lajd;	S_	getDrinkingSound
	m	()Z	T_	canFitInsideContainerItems
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lazz;)Z	a	canBeHurtBy
		p	1		source
	m	(Lbav;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbpy;)V	a	onDestroyed
		p	1		entity
	m	(Lbym;)Z	a	allowedIn
		p	1		group
	m	(Lbym;Lhi;)V	a	fillItemCategory
		p	1		group
		p	2		stacks
	m	(Lbzw;)I	a	getId
		p	0		item
	m	(Lcaa;Lbbf;Lbbf;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcaa;Lbtf;Lbbf;Lazl;)Lazm;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	(Lcaa;Lbxg;Lbvx;Lbtf;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcaa;Lcaa;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcaa;Lcaa;Lbxg;Lbvx;Lbtf;Lbbw;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Lcaa;Lcga;Lbaq;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcaa;Lcga;Lbbf;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcaa;Lcga;Lcur;Lgt;Lbbf;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;Lcur;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbbf;Lcaa;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcga;Lbtf;Lcfj$b;)Ldvp;	a	getPlayerPOVHitResult
		p	0		world
		p	1		player
		p	2		fluidHandling
	m	(Lciw;)Lbzw;	a	byBlock
		p	0		block
	m	(Lcur;Lcga;Lgt;Lbtf;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lcur;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	(I)Lbzw;	b	byId
		p	0		id
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;Lcga;Lbtf;)V	b	onCraftedBy
		p	1		stack
		p	2		world
		p	3		player
	m	(Lpj;)V	b	verifyTagAfterLoad
		p	1		nbt
	m	()I	c	getEnchantmentValue
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	m	(Lcaa;)Z	c_	isEnchantable
		p	1		stack
	m	(Lcaa;)Z	e	isBarVisible
		p	1		stack
	m	(Lcaa;)I	f	getBarWidth
		p	1		stack
	m	()Lajd;	g	getEquipSound
	m	(Lcaa;)I	g	getBarColor
		p	1		stack
	m	()Lajd;	h	getEatingSound
	m	(Lcaa;)Ljava/util/Optional;	h	getTooltipImage
		p	1		stack
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
	m	(Lcaa;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	m	()Lhc$c;	k	builtInRegistryHolder
	m	()Lbzw;	l	asItem
	m	(Lcaa;)Z	l	useOnRelease
		p	1		stack
	m	()I	m	getMaxStackSize
	m	(Lcaa;)Lrm;	m	getName
		p	1		stack
	m	()I	n	getMaxDamage
	m	(Lcaa;)Lcaq;	n	getRarity
		p	1		stack
	m	()Z	o	canBeDepleted
	m	()Lrm;	p	getDescription
	m	()Ljava/lang/String;	q	getOrCreateDescriptionId
	m	()Z	r	shouldOverrideMultiplayerNbt
	m	()Lbzw;	s	getCraftingRemainingItem
	m	()Z	t	hasCraftingRemainingItem
	m	()Lbym;	u	getItemCategory
	m	()Z	v	isEdible
	m	()Lbvm;	w	getFoodProperties
	m	()Z	x	isFireResistant
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhc$c;	b	builtInRegistryHolder
	f	Lcaq;	c	rarity
	f	I	d	maxStackSize
	f	I	e	maxDamage
	f	Z	f	isFireResistant
	f	Lbzw;	g	craftingRemainingItem
	f	Ljava/lang/String;	h	descriptionId
	f	Lbvm;	i	foodProperties
	f	Ljava/util/Map;	k	BY_BLOCK
	f	Ljava/util/UUID;	l	BASE_ATTACK_DAMAGE_UUID
	f	Ljava/util/UUID;	m	BASE_ATTACK_SPEED_UUID
	f	I	n	MAX_STACK_SIZE
	f	I	o	EAT_DURATION
	f	I	p	MAX_BAR_WIDTH
	f	Lbym;	q	category
c	bzw$1	net/minecraft/world/item/Item$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$Rarity
c	bzw$a	net/minecraft/world/item/Item$Properties
	m	()Lbzw$a;	a	fireResistant
	m	(I)Lbzw$a;	a	stacksTo
		p	1		maxCount
	m	(Lbvm;)Lbzw$a;	a	food
		p	1		foodComponent
	m	(Lbym;)Lbzw$a;	a	tab
		p	1		group
	m	(Lbzw;)Lbzw$a;	a	craftRemainder
		p	1		recipeRemainder
	m	(Lcaq;)Lbzw$a;	a	rarity
		p	1		rarity
	m	(I)Lbzw$a;	b	defaultDurability
		p	1		maxDamage
	m	(I)Lbzw$a;	c	durability
		p	1		maxDamage
	f	I	a	maxStackSize
	f	I	b	maxDamage
	f	Lbzw;	c	craftingRemainingItem
	f	Lbym;	d	category
	f	Lcaq;	e	rarity
	f	Lbvm;	f	foodProperties
	f	Z	g	isFireResistant
c	bzx	net/minecraft/world/item/ItemCooldowns
	m	()V	a	tick
	m	(Lbzw;)Z	a	isOnCooldown
		p	1		item
	m	(Lbzw;F)F	a	getCooldownPercent
		p	1		item
		p	2		tickDelta
	m	(Lbzw;I)V	a	addCooldown
		p	1		item
		p	2		duration
	m	(Lbzw;)V	b	removeCooldown
		p	1		item
	m	(Lbzw;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lbzw;)V	c	onCooldownEnded
		p	1		item
	f	Ljava/util/Map;	a	cooldowns
	f	I	b	tickCount
c	bzx$a	net/minecraft/world/item/ItemCooldowns$CooldownInstance
	m	(II)V	<init>	<init>
		p	1		startTick
		p	2		endTick
	f	I	a	startTime
	f	I	b	endTime
c	bzy	net/minecraft/world/item/ItemFrameItem
	m	(Lbau;Lbzw$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lbtf;Lgy;Lcaa;Lgt;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
c	bzz	net/minecraft/world/item/ItemNameBlockItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
c	caa	net/minecraft/world/item/ItemStack
	m	(Lcfz;)V	<init>	<init>
		p	1		item
	m	(Lcfz;I)V	<init>	<init>
		p	1		item
		p	2		count
	m	(Lcfz;ILjava/util/Optional;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		nbt
	m	(Lhc;)V	<init>	<init>
		p	1		entry
	m	(Lhc;I)V	<init>	<init>
		p	1		itemEntry
		p	2		count
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	()Z	A	hasFoil
	m	()Lcaq;	B	getRarity
	m	()Z	C	isEnchantable
	m	()Z	D	isEnchanted
	m	()Z	E	isFramed
	m	()Lbpr;	F	getFrame
	m	()Lbaq;	G	getEntityRepresentation
	m	()I	H	getBaseRepairCost
	m	()Lrm;	I	getDisplayName
	m	()I	J	getPopTime
	m	()I	K	getCount
	m	()Z	L	isEdible
	m	()Lajd;	M	getDrinkingSound
	m	()Lajd;	N	getEatingSound
	m	()Lajd;	O	getEquipSound
	m	()V	P	updateEmptyCacheFlag
	m	()I	Q	getHideFlags
	m	()Ljava/util/Optional;	a	getTooltipImage
	m	(I)Lcaa;	a	split
		p	1		amount
	m	(ILalu;Lafp;)Z	a	hurt
		p	1		amount
		p	2		random
		p	3		player
	m	(ILbbf;Ljava/util/function/Consumer;)V	a	hurtAndBreak
		p	1		amount
		p	2		entity
		p	3		breakCallback
	m	(ILcaa$a;)Z	a	shouldShowInTooltip
		p	0		flags
		p	1		tooltipSection
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lbaq;)V	a	setEntityRepresentation
		p	1		holder
	m	(Lbav;)Lcom/google/common/collect/Multimap;	a	getAttributeModifiers
		p	1		slot
	m	(Lbbf;Lbtf;)V	a	hurtEnemy
		p	1		target
		p	2		attacker
	m	(Lbcb;Lbce;Lbav;)V	a	addAttributeModifier
		p	1		attribute
		p	2		modifier
		p	3		slot
	m	(Lbpy;)V	a	onDestroyed
		p	1		entity
	m	(Lbtf;Lbbf;Lazl;)Lazm;	a	interactLivingEntity
		p	1		user
		p	2		entity
		p	3		hand
	m	(Lbtf;Lcbo;)Ljava/util/List;	a	getTooltipLines
		p	1		player
		p	2		context
	m	(Lbxg;Lbvx;Lbtf;)Z	a	overrideStackedOnOther
		p	1		slot
		p	2		clickType
		p	3		player
	m	(Lbzw;)Z	a	is
		p	1		item
	m	(Lcaa$a;)V	a	hideTooltipPart
		p	1		tooltipSection
	m	(Lcaa;)Z	a	sameItem
		p	1		stack
	m	(Lcaa;Lbxg;Lbvx;Lbtf;Lbbw;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
		p	5		cursorStackReference
	m	(Lcaa;Lcaa;)Z	a	tagMatches
		p	0		left
		p	1		right
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcdu;I)V	a	enchant
		p	1		enchantment
		p	2		level
	m	(Lcga;Lbaq;IZ)V	a	inventoryTick
		p	1		world
		p	2		entity
		p	3		slot
		p	4		selected
	m	(Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		world
		p	2		user
	m	(Lcga;Lbbf;I)V	a	releaseUsing
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Lcga;Lbtf;I)V	a	onCraftedBy
		p	1		world
		p	2		player
		p	3		amount
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcga;Lcur;Lgt;Lbtf;)V	a	mineBlock
		p	1		world
		p	2		state
		p	3		pos
		p	4		miner
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcur;)F	a	getDestroySpeed
		p	1		state
	m	(Lff$a;)Ljava/util/List;	a	lambda$expandBlockState$6
	m	(Lff$b;)Ljava/util/List;	a	lambda$expandBlockState$8
	m	(Lhc;)Z	a	is
		p	1		itemEntry
	m	(Lhm;Lcuv;)Z	a	hasAdventureModePlaceTagForBlock
		p	1		blockRegistry
		p	2		pos
	m	(Ljava/lang/String;)Lpj;	a	getOrCreateTagElement
		p	1		key
	m	(Ljava/lang/String;Lqc;)V	a	addTagElement
		p	1		key
		p	2		element
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$4
		p	0		decimalFormat
	m	(Ljava/util/List;Lpj;Lcdu;)V	a	lambda$appendEnchantmentNames$5
		p	2		e
	m	(Ljava/util/List;Lpp;)V	a	appendEnchantmentNames
		p	0		tooltip
		p	1		enchantments
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	(Lpj;)Lcaa;	a	of
		p	0		nbt
	m	(Lrm;)Lcaa;	a	setHoverName
		p	1		name
	m	(Lrv;)Lrv;	a	lambda$getDisplayName$9
		p	1		style
	m	()Z	b	isEmpty
	m	(I)V	b	setDamageValue
		p	1		damage
	m	(Lcaa;)Z	b	sameItemStackIgnoreDurability
		p	1		stack
	m	(Lcaa;Lcaa;)Z	b	matches
		p	0		left
		p	1		right
	m	(Lcga;Lbbf;I)V	b	onUseTick
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Lcur;)Z	b	isCorrectToolForDrops
		p	1		state
	m	(Lhc;)Lrt;	b	lambda$expandBlockState$7
	m	(Lhm;Lcuv;)Z	b	hasAdventureModeBreakTagForBlock
		p	1		blockRegistry
		p	2		pos
	m	(Ljava/lang/String;)Lpj;	b	getTagElement
		p	1		key
	m	(Lpj;)Lpj;	b	save
		p	1		nbt
	m	()Lbzw;	c	getItem
	m	(I)V	c	setRepairCost
		p	1		repairCost
	m	(Lcaa;)Z	c	matches
		p	1		stack
	m	(Lcaa;Lcaa;)Z	c	isSame
		p	0		left
		p	1		right
	m	(Ljava/lang/String;)V	c	removeTagKey
		p	1		key
	m	(Lpj;)V	c	setTag
		p	1		nbt
	m	()Lhc;	d	getItemHolder
	m	(I)V	d	setPopTime
		p	1		bobbingAnimationTime
	m	(Lcaa;)Ljava/util/Optional;	d	lambda$static$2
		p	0		stack
	m	(Lcaa;Lcaa;)Z	d	isSameIgnoreDurability
		p	0		left
		p	1		right
	m	(Ljava/lang/String;)Ljava/util/Collection;	d	expandBlockState
		p	0		tag
	m	()Ljava/util/stream/Stream;	e	getTags
	m	(I)V	e	setCount
		p	1		count
	m	(Lcaa;)Ljava/lang/Integer;	e	lambda$static$1
		p	0		stack
	m	(Lcaa;Lcaa;)Z	e	isSameItemSameTags
		p	0		stack
		p	1		otherStack
	m	()I	f	getMaxStackSize
	m	(I)V	f	grow
		p	1		amount
	m	(Lcaa;)Lbzw;	f	lambda$static$0
		p	0		stack
	m	()Z	g	isStackable
	m	(I)V	g	shrink
		p	1		amount
	m	()Z	h	isDamageableItem
	m	()Z	i	isDamaged
	m	()I	j	getDamageValue
	m	()I	k	getMaxDamage
	m	()Z	l	isBarVisible
	m	()I	m	getBarWidth
	m	()I	n	getBarColor
	m	()Lcaa;	o	copy
	m	()Ljava/lang/String;	p	getDescriptionId
	m	()I	q	getUseDuration
	m	()Lcbq;	r	getUseAnimation
	m	()Z	s	useOnRelease
	m	()Z	t	hasTag
	m	()Lpj;	u	getTag
	m	()Lpj;	v	getOrCreateTag
	m	()Lpp;	w	getEnchantmentTags
	m	()Lrm;	x	getHoverName
	m	()V	y	resetHoverName
	m	()Z	z	hasCustomHoverName
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcaa;	b	EMPTY
	f	Ljava/text/DecimalFormat;	c	ATTRIBUTE_MODIFIER_FORMAT
	f	Ljava/lang/String;	d	TAG_ENCH
	f	Ljava/lang/String;	e	TAG_DISPLAY
	f	Ljava/lang/String;	f	TAG_DISPLAY_NAME
	f	Ljava/lang/String;	g	TAG_LORE
	f	Ljava/lang/String;	h	TAG_DAMAGE
	f	Ljava/lang/String;	i	TAG_COLOR
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Ljava/lang/String;	k	TAG_UNBREAKABLE
	f	Ljava/lang/String;	l	TAG_REPAIR_COST
	f	Ljava/lang/String;	m	TAG_CAN_DESTROY_BLOCK_LIST
	f	Ljava/lang/String;	n	TAG_CAN_PLACE_ON_BLOCK_LIST
	f	Ljava/lang/String;	o	TAG_HIDE_FLAGS
	f	I	p	DONT_HIDE_TOOLTIP
	f	Lrv;	q	LORE_STYLE
	f	I	r	count
	f	I	s	popTime
	f	Lbzw;	t	item
	f	Lpj;	u	tag
	f	Z	v	emptyCacheFlag
	f	Lbaq;	w	entityRepresentation
	f	Lbxp;	x	adventureBreakCheck
	f	Lbxp;	y	adventurePlaceCheck
c	caa$a	net/minecraft/world/item/ItemStack$TooltipPart
	m	()I	a	getMask
	m	()[Lcaa$a;	b	$values
	f	Lcaa$a;	a	ENCHANTMENTS
	f	Lcaa$a;	b	MODIFIERS
	f	Lcaa$a;	c	UNBREAKABLE
	f	Lcaa$a;	d	CAN_DESTROY
	f	Lcaa$a;	e	CAN_PLACE
	f	Lcaa$a;	f	ADDITIONAL
	f	Lcaa$a;	g	DYE
	f	I	h	mask
	f	[Lcaa$a;	i	$VALUES
c	cab	net/minecraft/world/item/ItemUtils
	m	(Lbpy;Ljava/util/stream/Stream;)V	a	onContainerDestroyed
		p	0		itemEntity
		p	1		contents
	m	(Lcaa;Lbtf;Lcaa;)Lcaa;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
	m	(Lcaa;Lbtf;Lcaa;Z)Lcaa;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
		p	3		creativeOverride
	m	(Lcga;Lbpy;Lcaa;)V	a	lambda$onContainerDestroyed$0
		p	2		stack
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	startUsingInstantly
		p	0		world
		p	1		player
		p	2		hand
c	cac	net/minecraft/world/item/Items
	m	(Laaj;Lbzw;)Lbzw;	a	registerItem
		p	0		id
		p	1		item
	m	(Lbya;)Lbzw;	a	registerBlock
		p	0		item
	m	(Lciw;)Lbzw;	a	registerBlock
		p	0		block
	m	(Lciw;Lbym;)Lbzw;	a	registerBlock
		p	0		block
		p	1		group
	m	(Lciw;Lbym;[Lciw;)Lbzw;	a	registerBlock
		p	0		block
		p	1		group
		p	2		blocks
	m	(Lciw;Lbzw;)Lbzw;	a	registerBlock
		p	0		block
		p	1		item
	m	(Lciw;Ljava/util/Optional;)Lbzw;	a	registerBlock
		p	0		block
		p	1		group
	m	(Ljava/lang/Object;)Ljava/util/Optional;	a	ifPart2
		p	0		of
	m	(Ljava/lang/String;Lbzw;)Lbzw;	a	registerItem
		p	0		id
		p	1		item
	m	(Lciw;)Lbzw;	b	lambda$registerBlock$1
	m	(Lciw;Lbym;)Lbzw;	b	lambda$registerBlock$0
		p	1		group
	f	Lbzw;	A	JUNGLE_PLANKS
	f	Lbzw;	B	ACACIA_PLANKS
	f	Lbzw;	C	DARK_OAK_PLANKS
	f	Lbzw;	D	MANGROVE_PLANKS
	f	Lbzw;	E	CRIMSON_PLANKS
	f	Lbzw;	F	WARPED_PLANKS
	f	Lbzw;	G	OAK_SAPLING
	f	Lbzw;	H	SPRUCE_SAPLING
	f	Lbzw;	I	BIRCH_SAPLING
	f	Lbzw;	J	JUNGLE_SAPLING
	f	Lbzw;	K	ACACIA_SAPLING
	f	Lbzw;	L	DARK_OAK_SAPLING
	f	Lbzw;	M	MANGROVE_PROPAGULE
	f	Lbzw;	N	BEDROCK
	f	Lbzw;	O	SAND
	f	Lbzw;	P	RED_SAND
	f	Lbzw;	Q	GRAVEL
	f	Lbzw;	R	COAL_ORE
	f	Lbzw;	S	DEEPSLATE_COAL_ORE
	f	Lbzw;	T	IRON_ORE
	f	Lbzw;	U	DEEPSLATE_IRON_ORE
	f	Lbzw;	V	COPPER_ORE
	f	Lbzw;	W	DEEPSLATE_COPPER_ORE
	f	Lbzw;	X	GOLD_ORE
	f	Lbzw;	Y	DEEPSLATE_GOLD_ORE
	f	Lbzw;	Z	REDSTONE_ORE
	f	Lbzw;	aA	WEATHERED_CUT_COPPER
	f	Lbzw;	aB	OXIDIZED_CUT_COPPER
	f	Lbzw;	aC	CUT_COPPER_STAIRS
	f	Lbzw;	aD	EXPOSED_CUT_COPPER_STAIRS
	f	Lbzw;	aE	WEATHERED_CUT_COPPER_STAIRS
	f	Lbzw;	aF	OXIDIZED_CUT_COPPER_STAIRS
	f	Lbzw;	aG	CUT_COPPER_SLAB
	f	Lbzw;	aH	EXPOSED_CUT_COPPER_SLAB
	f	Lbzw;	aI	WEATHERED_CUT_COPPER_SLAB
	f	Lbzw;	aJ	OXIDIZED_CUT_COPPER_SLAB
	f	Lbzw;	aK	WAXED_COPPER_BLOCK
	f	Lbzw;	aL	WAXED_EXPOSED_COPPER
	f	Lbzw;	a	AIR
	f	Lbzw;	aM	WAXED_WEATHERED_COPPER
	f	Lbzw;	aN	WAXED_OXIDIZED_COPPER
	f	Lbzw;	aO	WAXED_CUT_COPPER
	f	Lbzw;	aP	WAXED_EXPOSED_CUT_COPPER
	f	Lbzw;	aQ	WAXED_WEATHERED_CUT_COPPER
	f	Lbzw;	aR	WAXED_OXIDIZED_CUT_COPPER
	f	Lbzw;	aS	WAXED_CUT_COPPER_STAIRS
	f	Lbzw;	aT	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lbzw;	aU	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lbzw;	aV	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lbzw;	aW	WAXED_CUT_COPPER_SLAB
	f	Lbzw;	aX	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lbzw;	aY	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lbzw;	aZ	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lbzw;	aa	DEEPSLATE_REDSTONE_ORE
	f	Lbzw;	ab	EMERALD_ORE
	f	Lbzw;	ac	DEEPSLATE_EMERALD_ORE
	f	Lbzw;	ad	LAPIS_ORE
	f	Lbzw;	ae	DEEPSLATE_LAPIS_ORE
	f	Lbzw;	af	DIAMOND_ORE
	f	Lbzw;	ag	DEEPSLATE_DIAMOND_ORE
	f	Lbzw;	ah	NETHER_GOLD_ORE
	f	Lbzw;	ai	NETHER_QUARTZ_ORE
	f	Lbzw;	aj	ANCIENT_DEBRIS
	f	Lbzw;	ak	COAL_BLOCK
	f	Lbzw;	al	RAW_IRON_BLOCK
	f	Lbzw;	am	RAW_COPPER_BLOCK
	f	Lbzw;	an	RAW_GOLD_BLOCK
	f	Lbzw;	ao	AMETHYST_BLOCK
	f	Lbzw;	ap	BUDDING_AMETHYST
	f	Lbzw;	aq	IRON_BLOCK
	f	Lbzw;	ar	COPPER_BLOCK
	f	Lbzw;	as	GOLD_BLOCK
	f	Lbzw;	at	DIAMOND_BLOCK
	f	Lbzw;	au	NETHERITE_BLOCK
	f	Lbzw;	av	EXPOSED_COPPER
	f	Lbzw;	aw	WEATHERED_COPPER
	f	Lbzw;	ax	OXIDIZED_COPPER
	f	Lbzw;	ay	CUT_COPPER
	f	Lbzw;	az	EXPOSED_CUT_COPPER
	f	Lbzw;	bA	STRIPPED_MANGROVE_WOOD
	f	Lbzw;	bB	STRIPPED_CRIMSON_HYPHAE
	f	Lbzw;	bC	STRIPPED_WARPED_HYPHAE
	f	Lbzw;	bD	OAK_WOOD
	f	Lbzw;	bE	SPRUCE_WOOD
	f	Lbzw;	bF	BIRCH_WOOD
	f	Lbzw;	bG	JUNGLE_WOOD
	f	Lbzw;	bH	ACACIA_WOOD
	f	Lbzw;	bI	DARK_OAK_WOOD
	f	Lbzw;	bJ	MANGROVE_WOOD
	f	Lbzw;	bK	CRIMSON_HYPHAE
	f	Lbzw;	bL	WARPED_HYPHAE
	f	Lbzw;	b	STONE
	f	Lbzw;	bM	OAK_LEAVES
	f	Lbzw;	bN	SPRUCE_LEAVES
	f	Lbzw;	bO	BIRCH_LEAVES
	f	Lbzw;	bP	JUNGLE_LEAVES
	f	Lbzw;	bQ	ACACIA_LEAVES
	f	Lbzw;	bR	DARK_OAK_LEAVES
	f	Lbzw;	bS	MANGROVE_LEAVES
	f	Lbzw;	bT	AZALEA_LEAVES
	f	Lbzw;	bU	FLOWERING_AZALEA_LEAVES
	f	Lbzw;	bV	SPONGE
	f	Lbzw;	bW	WET_SPONGE
	f	Lbzw;	bX	GLASS
	f	Lbzw;	bY	TINTED_GLASS
	f	Lbzw;	bZ	LAPIS_BLOCK
	f	Lbzw;	ba	OAK_LOG
	f	Lbzw;	bb	SPRUCE_LOG
	f	Lbzw;	bc	BIRCH_LOG
	f	Lbzw;	bd	JUNGLE_LOG
	f	Lbzw;	be	ACACIA_LOG
	f	Lbzw;	bf	DARK_OAK_LOG
	f	Lbzw;	bg	MANGROVE_LOG
	f	Lbzw;	bh	MANGROVE_ROOTS
	f	Lbzw;	bi	MUDDY_MANGROVE_ROOTS
	f	Lbzw;	bj	CRIMSON_STEM
	f	Lbzw;	bk	WARPED_STEM
	f	Lbzw;	bl	STRIPPED_OAK_LOG
	f	Lbzw;	bm	STRIPPED_SPRUCE_LOG
	f	Lbzw;	bn	STRIPPED_BIRCH_LOG
	f	Lbzw;	bo	STRIPPED_JUNGLE_LOG
	f	Lbzw;	bp	STRIPPED_ACACIA_LOG
	f	Lbzw;	bq	STRIPPED_DARK_OAK_LOG
	f	Lbzw;	br	STRIPPED_MANGROVE_LOG
	f	Lbzw;	bs	STRIPPED_CRIMSON_STEM
	f	Lbzw;	bt	STRIPPED_WARPED_STEM
	f	Lbzw;	bu	STRIPPED_OAK_WOOD
	f	Lbzw;	bv	STRIPPED_SPRUCE_WOOD
	f	Lbzw;	bw	STRIPPED_BIRCH_WOOD
	f	Lbzw;	bx	STRIPPED_JUNGLE_WOOD
	f	Lbzw;	by	STRIPPED_ACACIA_WOOD
	f	Lbzw;	bz	STRIPPED_DARK_OAK_WOOD
	f	Lbzw;	cA	BLACK_WOOL
	f	Lbzw;	cB	DANDELION
	f	Lbzw;	cC	POPPY
	f	Lbzw;	cD	BLUE_ORCHID
	f	Lbzw;	cE	ALLIUM
	f	Lbzw;	cF	AZURE_BLUET
	f	Lbzw;	cG	RED_TULIP
	f	Lbzw;	cH	ORANGE_TULIP
	f	Lbzw;	cI	WHITE_TULIP
	f	Lbzw;	cJ	PINK_TULIP
	f	Lbzw;	cK	OXEYE_DAISY
	f	Lbzw;	cL	CORNFLOWER
	f	Lbzw;	c	GRANITE
	f	Lbzw;	cM	LILY_OF_THE_VALLEY
	f	Lbzw;	cN	WITHER_ROSE
	f	Lbzw;	cO	SPORE_BLOSSOM
	f	Lbzw;	cP	BROWN_MUSHROOM
	f	Lbzw;	cQ	RED_MUSHROOM
	f	Lbzw;	cR	CRIMSON_FUNGUS
	f	Lbzw;	cS	WARPED_FUNGUS
	f	Lbzw;	cT	CRIMSON_ROOTS
	f	Lbzw;	cU	WARPED_ROOTS
	f	Lbzw;	cV	NETHER_SPROUTS
	f	Lbzw;	cW	WEEPING_VINES
	f	Lbzw;	cX	TWISTING_VINES
	f	Lbzw;	cY	SUGAR_CANE
	f	Lbzw;	cZ	KELP
	f	Lbzw;	ca	SANDSTONE
	f	Lbzw;	cb	CHISELED_SANDSTONE
	f	Lbzw;	cc	CUT_SANDSTONE
	f	Lbzw;	cd	COBWEB
	f	Lbzw;	ce	GRASS
	f	Lbzw;	cf	FERN
	f	Lbzw;	cg	AZALEA
	f	Lbzw;	ch	FLOWERING_AZALEA
	f	Lbzw;	ci	DEAD_BUSH
	f	Lbzw;	cj	SEAGRASS
	f	Lbzw;	ck	SEA_PICKLE
	f	Lbzw;	cl	WHITE_WOOL
	f	Lbzw;	cm	ORANGE_WOOL
	f	Lbzw;	cn	MAGENTA_WOOL
	f	Lbzw;	co	LIGHT_BLUE_WOOL
	f	Lbzw;	cp	YELLOW_WOOL
	f	Lbzw;	cq	LIME_WOOL
	f	Lbzw;	cr	PINK_WOOL
	f	Lbzw;	cs	GRAY_WOOL
	f	Lbzw;	ct	LIGHT_GRAY_WOOL
	f	Lbzw;	cu	CYAN_WOOL
	f	Lbzw;	cv	PURPLE_WOOL
	f	Lbzw;	cw	BLUE_WOOL
	f	Lbzw;	cx	BROWN_WOOL
	f	Lbzw;	cy	GREEN_WOOL
	f	Lbzw;	cz	RED_WOOL
	f	Lbzw;	dA	RED_SANDSTONE_SLAB
	f	Lbzw;	dB	CUT_RED_SANDSTONE_SLAB
	f	Lbzw;	dC	PURPUR_SLAB
	f	Lbzw;	dD	PRISMARINE_SLAB
	f	Lbzw;	dE	PRISMARINE_BRICK_SLAB
	f	Lbzw;	dF	DARK_PRISMARINE_SLAB
	f	Lbzw;	dG	SMOOTH_QUARTZ
	f	Lbzw;	dH	SMOOTH_RED_SANDSTONE
	f	Lbzw;	dI	SMOOTH_SANDSTONE
	f	Lbzw;	dJ	SMOOTH_STONE
	f	Lbzw;	dK	BRICKS
	f	Lbzw;	dL	BOOKSHELF
	f	Lbzw;	d	POLISHED_GRANITE
	f	Lbzw;	dM	MOSSY_COBBLESTONE
	f	Lbzw;	dN	OBSIDIAN
	f	Lbzw;	dO	TORCH
	f	Lbzw;	dP	END_ROD
	f	Lbzw;	dQ	CHORUS_PLANT
	f	Lbzw;	dR	CHORUS_FLOWER
	f	Lbzw;	dS	PURPUR_BLOCK
	f	Lbzw;	dT	PURPUR_PILLAR
	f	Lbzw;	dU	PURPUR_STAIRS
	f	Lbzw;	dV	SPAWNER
	f	Lbzw;	dW	CHEST
	f	Lbzw;	dX	CRAFTING_TABLE
	f	Lbzw;	dY	FARMLAND
	f	Lbzw;	dZ	FURNACE
	f	Lbzw;	da	MOSS_CARPET
	f	Lbzw;	db	MOSS_BLOCK
	f	Lbzw;	dc	HANGING_ROOTS
	f	Lbzw;	dd	BIG_DRIPLEAF
	f	Lbzw;	de	SMALL_DRIPLEAF
	f	Lbzw;	df	BAMBOO
	f	Lbzw;	dg	OAK_SLAB
	f	Lbzw;	dh	SPRUCE_SLAB
	f	Lbzw;	di	BIRCH_SLAB
	f	Lbzw;	dj	JUNGLE_SLAB
	f	Lbzw;	dk	ACACIA_SLAB
	f	Lbzw;	dl	DARK_OAK_SLAB
	f	Lbzw;	dm	MANGROVE_SLAB
	f	Lbzw;	dn	CRIMSON_SLAB
	f	Lbzw;	do	WARPED_SLAB
	f	Lbzw;	dp	STONE_SLAB
	f	Lbzw;	dq	SMOOTH_STONE_SLAB
	f	Lbzw;	dr	SANDSTONE_SLAB
	f	Lbzw;	ds	CUT_STANDSTONE_SLAB
	f	Lbzw;	dt	PETRIFIED_OAK_SLAB
	f	Lbzw;	du	COBBLESTONE_SLAB
	f	Lbzw;	dv	BRICK_SLAB
	f	Lbzw;	dw	STONE_BRICK_SLAB
	f	Lbzw;	dx	MUD_BRICK_SLAB
	f	Lbzw;	dy	NETHER_BRICK_SLAB
	f	Lbzw;	dz	QUARTZ_SLAB
	f	Lbzw;	eA	SOUL_TORCH
	f	Lbzw;	eB	GLOWSTONE
	f	Lbzw;	eC	INFESTED_STONE
	f	Lbzw;	eD	INFESTED_COBBLESTONE
	f	Lbzw;	eE	INFESTED_STONE_BRICKS
	f	Lbzw;	eF	INFESTED_MOSSY_STONE_BRICKS
	f	Lbzw;	eG	INFESTED_CRACKED_STONE_BRICKS
	f	Lbzw;	eH	INFESTED_CHISELED_STONE_BRICKS
	f	Lbzw;	eI	INFESTED_DEEPSLATE
	f	Lbzw;	eJ	STONE_BRICKS
	f	Lbzw;	eK	MOSSY_STONE_BRICKS
	f	Lbzw;	eL	CRACKED_STONE_BRICKS
	f	Lbzw;	e	DIORITE
	f	Lbzw;	eM	CHISELED_STONE_BRICKS
	f	Lbzw;	eN	PACKED_MUD
	f	Lbzw;	eO	MUD_BRICKS
	f	Lbzw;	eP	DEEPSLATE_BRICKS
	f	Lbzw;	eQ	CRACKED_DEEPSLATE_BRICKS
	f	Lbzw;	eR	DEEPSLATE_TILES
	f	Lbzw;	eS	CRACKED_DEEPSLATE_TILES
	f	Lbzw;	eT	CHISELED_DEEPSLATE
	f	Lbzw;	eU	REINFORCED_DEEPSLATE
	f	Lbzw;	eV	BROWN_MUSHROOM_BLOCK
	f	Lbzw;	eW	RED_MUSHROOM_BLOCK
	f	Lbzw;	eX	MUSHROOM_STEM
	f	Lbzw;	eY	IRON_BARS
	f	Lbzw;	eZ	CHAIN
	f	Lbzw;	ea	LADDER
	f	Lbzw;	eb	COBBLESTONE_STAIRS
	f	Lbzw;	ec	SNOW
	f	Lbzw;	ed	ICE
	f	Lbzw;	ee	SNOW_BLOCK
	f	Lbzw;	ef	CACTUS
	f	Lbzw;	eg	CLAY
	f	Lbzw;	eh	JUKEBOX
	f	Lbzw;	ei	OAK_FENCE
	f	Lbzw;	ej	SPRUCE_FENCE
	f	Lbzw;	ek	BIRCH_FENCE
	f	Lbzw;	el	JUNGLE_FENCE
	f	Lbzw;	em	ACACIA_FENCE
	f	Lbzw;	en	DARK_OAK_FENCE
	f	Lbzw;	eo	MANGROVE_FENCE
	f	Lbzw;	ep	CRIMSON_FENCE
	f	Lbzw;	eq	WARPED_FENCE
	f	Lbzw;	er	PUMPKIN
	f	Lbzw;	es	CARVED_PUMPKIN
	f	Lbzw;	et	JACK_O_LANTERN
	f	Lbzw;	eu	NETHERRACK
	f	Lbzw;	ev	SOUL_SAND
	f	Lbzw;	ew	SOUL_SOIL
	f	Lbzw;	ex	BASALT
	f	Lbzw;	ey	POLISHED_BASALT
	f	Lbzw;	ez	SMOOTH_BASALT
	f	Lbzw;	fA	OAK_STAIRS
	f	Lbzw;	fB	SPRUCE_STAIRS
	f	Lbzw;	fC	BIRCH_STAIRS
	f	Lbzw;	fD	JUNGLE_STAIRS
	f	Lbzw;	fE	ACACIA_STAIRS
	f	Lbzw;	fF	DARK_OAK_STAIRS
	f	Lbzw;	fG	MANGROVE_STAIRS
	f	Lbzw;	fH	CRIMSON_STAIRS
	f	Lbzw;	fI	WARPED_STAIRS
	f	Lbzw;	fJ	COMMAND_BLOCK
	f	Lbzw;	fK	BEACON
	f	Lbzw;	fL	COBBLESTONE_WALL
	f	Lbzw;	f	POLISHED_DIORITE
	f	Lbzw;	fM	MOSSY_COBBLESTONE_WALL
	f	Lbzw;	fN	BRICK_WALL
	f	Lbzw;	fO	PRISMARINE_WALL
	f	Lbzw;	fP	RED_SANDSTONE_WALL
	f	Lbzw;	fQ	MOSSY_STONE_BRICK_WALL
	f	Lbzw;	fR	GRANITE_WALL
	f	Lbzw;	fS	STONE_BRICK_WALL
	f	Lbzw;	fT	MUD_BRICK_WALL
	f	Lbzw;	fU	NETHER_BRICK_WALL
	f	Lbzw;	fV	ANDESITE_WALL
	f	Lbzw;	fW	RED_NETHER_BRICK_WALL
	f	Lbzw;	fX	SANDSTONE_WALL
	f	Lbzw;	fY	END_STONE_BRICK_WALL
	f	Lbzw;	fZ	DIORITE_WALL
	f	Lbzw;	fa	GLASS_PANE
	f	Lbzw;	fb	MELON
	f	Lbzw;	fc	VINE
	f	Lbzw;	fd	GLOW_LICHEN
	f	Lbzw;	fe	BRICK_STAIRS
	f	Lbzw;	ff	STONE_BRICK_STAIRS
	f	Lbzw;	fg	MUD_BRICK_STAIRS
	f	Lbzw;	fh	MYCELIUM
	f	Lbzw;	fi	LILY_PAD
	f	Lbzw;	fj	NETHER_BRICKS
	f	Lbzw;	fk	CRACKED_NETHER_BRICKS
	f	Lbzw;	fl	CHISELED_NETHER_BRICKS
	f	Lbzw;	fm	NETHER_BRICK_FENCE
	f	Lbzw;	fn	NETHER_BRICK_STAIRS
	f	Lbzw;	fo	SCULK
	f	Lbzw;	fp	SCULK_VEIN
	f	Lbzw;	fq	SCULK_CATALYST
	f	Lbzw;	fr	SCULK_SHRIEKER
	f	Lbzw;	fs	ENCHANTING_TABLE
	f	Lbzw;	ft	END_PORTAL_FRAME
	f	Lbzw;	fu	END_STONE
	f	Lbzw;	fv	END_STONE_BRICKS
	f	Lbzw;	fw	DRAGON_EGG
	f	Lbzw;	fx	SANDSTONE_STAIRS
	f	Lbzw;	fy	ENDER_CHEST
	f	Lbzw;	fz	EMERALD_BLOCK
	f	Lbzw;	gA	BLUE_TERRACOTTA
	f	Lbzw;	gB	BROWN_TERRACOTTA
	f	Lbzw;	gC	GREEN_TERRACOTTA
	f	Lbzw;	gD	RED_TERRACOTTA
	f	Lbzw;	gE	BLACK_TERRACOTTA
	f	Lbzw;	gF	BARRIER
	f	Lbzw;	gG	LIGHT
	f	Lbzw;	gH	HAY_BLOCK
	f	Lbzw;	gI	WHITE_CARPET
	f	Lbzw;	gJ	ORANGE_CARPET
	f	Lbzw;	gK	MAGENTA_CARPET
	f	Lbzw;	gL	LIGHT_BLUE_CARPET
	f	Lbzw;	g	ANDESITE
	f	Lbzw;	gM	YELLOW_CARPET
	f	Lbzw;	gN	LIME_CARPET
	f	Lbzw;	gO	PINK_CARPET
	f	Lbzw;	gP	GRAY_CARPET
	f	Lbzw;	gQ	LIGHT_GRAY_CARPET
	f	Lbzw;	gR	CYAN_CARPET
	f	Lbzw;	gS	PURPLE_CARPET
	f	Lbzw;	gT	BLUE_CARPET
	f	Lbzw;	gU	BROWN_CARPET
	f	Lbzw;	gV	GREEN_CARPET
	f	Lbzw;	gW	RED_CARPET
	f	Lbzw;	gX	BLACK_CARPET
	f	Lbzw;	gY	TERRACOTTA
	f	Lbzw;	gZ	PACKED_ICE
	f	Lbzw;	ga	BLACKSTONE_WALL
	f	Lbzw;	gb	POLISHED_BLACKSTONE_WALL
	f	Lbzw;	gc	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lbzw;	gd	COBBLED_DEEPSLATE_WALL
	f	Lbzw;	ge	POLISHED_DEEPSLATE_WALL
	f	Lbzw;	gf	DEEPSLATE_BRICK_WALL
	f	Lbzw;	gg	DEEPSLATE_TILE_WALL
	f	Lbzw;	gh	ANVIL
	f	Lbzw;	gi	CHIPPED_ANVIL
	f	Lbzw;	gj	DAMAGED_ANVIL
	f	Lbzw;	gk	CHISELED_QUARTZ_BLOCK
	f	Lbzw;	gl	QUARTZ_BLOCK
	f	Lbzw;	gm	QUARTZ_BRICKS
	f	Lbzw;	gn	QUARTZ_PILLAR
	f	Lbzw;	go	QUARTZ_STAIRS
	f	Lbzw;	gp	WHITE_TERRACOTTA
	f	Lbzw;	gq	ORANGE_TERRACOTTA
	f	Lbzw;	gr	MAGENTA_TERRACOTTA
	f	Lbzw;	gs	LIGHT_BLUE_TERRACOTTA
	f	Lbzw;	gt	YELLOW_TERRACOTTA
	f	Lbzw;	gu	LIME_TERRACOTTA
	f	Lbzw;	gv	PINK_TERRACOTTA
	f	Lbzw;	gw	GRAY_TERRACOTTA
	f	Lbzw;	gx	LIGHT_GRAY_TERRACOTTA
	f	Lbzw;	gy	CYAN_TERRACOTTA
	f	Lbzw;	gz	PURPLE_TERRACOTTA
	f	Lbzw;	hA	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lbzw;	hB	YELLOW_STAINED_GLASS_PANE
	f	Lbzw;	hC	LIME_STAINED_GLASS_PANE
	f	Lbzw;	hD	PINK_STAINED_GLASS_PANE
	f	Lbzw;	hE	GRAY_STAINED_GLASS_PANE
	f	Lbzw;	hF	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lbzw;	hG	CYAN_STAINED_GLASS_PANE
	f	Lbzw;	hH	PURPLE_STAINED_GLASS_PANE
	f	Lbzw;	hI	BLUE_STAINED_GLASS_PANE
	f	Lbzw;	hJ	BROWN_STAINED_GLASS_PANE
	f	Lbzw;	hK	GREEN_STAINED_GLASS_PANE
	f	Lbzw;	hL	RED_STAINED_GLASS_PANE
	f	Lbzw;	h	POLISHED_ANDESITE
	f	Lbzw;	hM	BLACK_STAINED_GLASS_PANE
	f	Lbzw;	hN	PRISMARINE
	f	Lbzw;	hO	PRISMARINE_BRICKS
	f	Lbzw;	hP	DARK_PRISMARINE
	f	Lbzw;	hQ	PRISMARINE_STAIRS
	f	Lbzw;	hR	PRISMARINE_BRICK_STAIRS
	f	Lbzw;	hS	DARK_PRISMARINE_STAIRS
	f	Lbzw;	hT	SEA_LANTERN
	f	Lbzw;	hU	RED_SANDSTONE
	f	Lbzw;	hV	CHISELED_RED_SANDSTONE
	f	Lbzw;	hW	CUT_RED_SANDSTONE
	f	Lbzw;	hX	RED_SANDSTONE_STAIRS
	f	Lbzw;	hY	REPEATING_COMMAND_BLOCK
	f	Lbzw;	hZ	CHAIN_COMMAND_BLOCK
	f	Lbzw;	ha	DIRT_PATH
	f	Lbzw;	hb	SUNFLOWER
	f	Lbzw;	hc	LILAC
	f	Lbzw;	hd	ROSE_BUSH
	f	Lbzw;	he	PEONY
	f	Lbzw;	hf	TALL_GRASS
	f	Lbzw;	hg	LARGE_FERN
	f	Lbzw;	hh	WHITE_STAINED_GLASS
	f	Lbzw;	hi	ORANGE_STAINED_GLASS
	f	Lbzw;	hj	MAGENTA_STAINED_GLASS
	f	Lbzw;	hk	LIGHT_BLUE_STAINED_GLASS
	f	Lbzw;	hl	YELLOW_STAINED_GLASS
	f	Lbzw;	hm	LIME_STAINED_GLASS
	f	Lbzw;	hn	PINK_STAINED_GLASS
	f	Lbzw;	ho	GRAY_STAINED_GLASS
	f	Lbzw;	hp	LIGHT_GRAY_STAINED_GLASS
	f	Lbzw;	hq	CYAN_STAINED_GLASS
	f	Lbzw;	hr	PURPLE_STAINED_GLASS
	f	Lbzw;	hs	BLUE_STAINED_GLASS
	f	Lbzw;	ht	BROWN_STAINED_GLASS
	f	Lbzw;	hu	GREEN_STAINED_GLASS
	f	Lbzw;	hv	RED_STAINED_GLASS
	f	Lbzw;	hw	BLACK_STAINED_GLASS
	f	Lbzw;	hx	WHITE_STAINED_GLASS_PANE
	f	Lbzw;	hy	ORANGE_STAINED_GLASS_PANE
	f	Lbzw;	hz	MAGENTA_STAINED_GLASS_PANE
	f	Lbzw;	iA	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lbzw;	iB	YELLOW_GLAZED_TERRACOTTA
	f	Lbzw;	iC	LIME_GLAZED_TERRACOTTA
	f	Lbzw;	iD	PINK_GLAZED_TERRACOTTA
	f	Lbzw;	iE	GRAY_GLAZED_TERRACOTTA
	f	Lbzw;	iF	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lbzw;	iG	CYAN_GLAZED_TERRACOTTA
	f	Lbzw;	iH	PURPLE_GLAZED_TERRACOTTA
	f	Lbzw;	iI	BLUE_GLAZED_TERRACOTTA
	f	Lbzw;	iJ	BROWN_GLAZED_TERRACOTTA
	f	Lbzw;	iK	GREEN_GLAZED_TERRACOTTA
	f	Lbzw;	iL	RED_GLAZED_TERRACOTTA
	f	Lbzw;	i	DEEPSLATE
	f	Lbzw;	iM	BLACK_GLAZED_TERRACOTTA
	f	Lbzw;	iN	WHITE_CONCRETE
	f	Lbzw;	iO	ORANGE_CONCRETE
	f	Lbzw;	iP	MAGENTA_CONCRETE
	f	Lbzw;	iQ	LIGHT_BLUE_CONCRETE
	f	Lbzw;	iR	YELLOW_CONCRETE
	f	Lbzw;	iS	LIME_CONCRETE
	f	Lbzw;	iT	PINK_CONCRETE
	f	Lbzw;	iU	GRAY_CONCRETE
	f	Lbzw;	iV	LIGHT_GRAY_CONCRETE
	f	Lbzw;	iW	CYAN_CONCRETE
	f	Lbzw;	iX	PURPLE_CONCRETE
	f	Lbzw;	iY	BLUE_CONCRETE
	f	Lbzw;	iZ	BROWN_CONCRETE
	f	Lbzw;	ia	MAGMA_BLOCK
	f	Lbzw;	ib	NETHER_WART_BLOCK
	f	Lbzw;	ic	WARPED_WART_BLOCK
	f	Lbzw;	id	RED_NETHER_BRICKS
	f	Lbzw;	ie	BONE_BLOCK
	f	Lbzw;	if	STRUCTURE_VOID
	f	Lbzw;	ig	SHULKER_BOX
	f	Lbzw;	ih	WHITE_SHULKER_BOX
	f	Lbzw;	ii	ORANGE_SHULKER_BOX
	f	Lbzw;	ij	MAGENTA_SHULKER_BOX
	f	Lbzw;	ik	LIGHT_BLUE_SHULKER_BOX
	f	Lbzw;	il	YELLOW_SHULKER_BOX
	f	Lbzw;	im	LIME_SHULKER_BOX
	f	Lbzw;	in	PINK_SHULKER_BOX
	f	Lbzw;	io	GRAY_SHULKER_BOX
	f	Lbzw;	ip	LIGHT_GRAY_SHULKER_BOX
	f	Lbzw;	iq	CYAN_SHULKER_BOX
	f	Lbzw;	ir	PURPLE_SHULKER_BOX
	f	Lbzw;	is	BLUE_SHULKER_BOX
	f	Lbzw;	it	BROWN_SHULKER_BOX
	f	Lbzw;	iu	GREEN_SHULKER_BOX
	f	Lbzw;	iv	RED_SHULKER_BOX
	f	Lbzw;	iw	BLACK_SHULKER_BOX
	f	Lbzw;	ix	WHITE_GLAZED_TERRACOTTA
	f	Lbzw;	iy	ORANGE_GLAZED_TERRACOTTA
	f	Lbzw;	iz	MAGENTA_GLAZED_TERRACOTTA
	f	Lbzw;	jA	BRAIN_CORAL_BLOCK
	f	Lbzw;	jB	BUBBLE_CORAL_BLOCK
	f	Lbzw;	jC	FIRE_CORAL_BLOCK
	f	Lbzw;	jD	HORN_CORAL_BLOCK
	f	Lbzw;	jE	TUBE_CORAL
	f	Lbzw;	jF	BRAIN_CORAL
	f	Lbzw;	jG	BUBBLE_CORAL
	f	Lbzw;	jH	FIRE_CORAL
	f	Lbzw;	jI	HORN_CORAL
	f	Lbzw;	jJ	DEAD_BRAIN_CORAL
	f	Lbzw;	jK	DEAD_BUBBLE_CORAL
	f	Lbzw;	jL	DEAD_FIRE_CORAL
	f	Lbzw;	j	COBBLED_DEEPSLATE
	f	Lbzw;	jM	DEAD_HORN_CORAL
	f	Lbzw;	jN	DEAD_TUBE_CORAL
	f	Lbzw;	jO	TUBE_CORAL_FAN
	f	Lbzw;	jP	BRAIN_CORAL_FAN
	f	Lbzw;	jQ	BUBBLE_CORAL_FAN
	f	Lbzw;	jR	FIRE_CORAL_FAN
	f	Lbzw;	jS	HORN_CORAL_FAN
	f	Lbzw;	jT	DEAD_TUBE_CORAL_FAN
	f	Lbzw;	jU	DEAD_BRAIN_CORAL_FAN
	f	Lbzw;	jV	DEAD_BUBBLE_CORAL_FAN
	f	Lbzw;	jW	DEAD_FIRE_CORAL_FAN
	f	Lbzw;	jX	DEAD_HORN_CORAL_FAN
	f	Lbzw;	jY	BLUE_ICE
	f	Lbzw;	jZ	CONDUIT
	f	Lbzw;	ja	GREEN_CONCRETE
	f	Lbzw;	jb	RED_CONCRETE
	f	Lbzw;	jc	BLACK_CONCRETE
	f	Lbzw;	jd	WHITE_CONCRETE_POWDER
	f	Lbzw;	je	ORANGE_CONCRETE_POWDER
	f	Lbzw;	jf	MAGENTA_CONCRETE_POWDER
	f	Lbzw;	jg	LIGHT_BLUE_CONCRETE_POWDER
	f	Lbzw;	jh	YELLOW_CONCRETE_POWDER
	f	Lbzw;	ji	LIME_CONCRETE_POWDER
	f	Lbzw;	jj	PINK_CONCRETE_POWDER
	f	Lbzw;	jk	GRAY_CONCRETE_POWDER
	f	Lbzw;	jl	LIGHT_GRAY_CONCRETE_POWDER
	f	Lbzw;	jm	CYAN_CONCRETE_POWDER
	f	Lbzw;	jn	PURPLE_CONCRETE_POWDER
	f	Lbzw;	jo	BLUE_CONCRETE_POWDER
	f	Lbzw;	jp	BROWN_CONCRETE_POWDER
	f	Lbzw;	jq	GREEN_CONCRETE_POWDER
	f	Lbzw;	jr	RED_CONCRETE_POWDER
	f	Lbzw;	js	BLACK_CONCRETE_POWDER
	f	Lbzw;	jt	TURTLE_EGG
	f	Lbzw;	ju	DEAD_TUBE_CORAL_BLOCK
	f	Lbzw;	jv	DEAD_BRAIN_CORAL_BLOCK
	f	Lbzw;	jw	DEAD_BUBBLE_CORAL_BLOCK
	f	Lbzw;	jx	DEAD_FIRE_CORAL_BLOCK
	f	Lbzw;	jy	DEAD_HORN_CORAL_BLOCK
	f	Lbzw;	jz	TUBE_CORAL_BLOCK
	f	Lbzw;	kA	GRANITE_SLAB
	f	Lbzw;	kB	ANDESITE_SLAB
	f	Lbzw;	kC	RED_NETHER_BRICK_SLAB
	f	Lbzw;	kD	POLISHED_ANDESITE_SLAB
	f	Lbzw;	kE	DIORITE_SLAB
	f	Lbzw;	kF	COBBLED_DEEPSLATE_SLAB
	f	Lbzw;	kG	POLISHED_DEEPSLATE_SLAB
	f	Lbzw;	kH	DEEPSLATE_BRICK_SLAB
	f	Lbzw;	kI	DEEPSLATE_TILE_SLAB
	f	Lbzw;	kJ	SCAFFOLDING
	f	Lbzw;	kK	REDSTONE
	f	Lbzw;	kL	REDSTONE_TORCH
	f	Lbzw;	k	POLISHED_DEEPSLATE
	f	Lbzw;	kM	REDSTONE_BLOCK
	f	Lbzw;	kN	REPEATER
	f	Lbzw;	kO	COMPARATOR
	f	Lbzw;	kP	PISTON
	f	Lbzw;	kQ	STICKY_PISTON
	f	Lbzw;	kR	SLIME_BLOCK
	f	Lbzw;	kS	HONEY_BLOCK
	f	Lbzw;	kT	OBSERVER
	f	Lbzw;	kU	HOPPER
	f	Lbzw;	kV	DISPENSER
	f	Lbzw;	kW	DROPPER
	f	Lbzw;	kX	LECTERN
	f	Lbzw;	kY	TARGET
	f	Lbzw;	kZ	LEVER
	f	Lbzw;	ka	POLISHED_GRANITE_STAIRS
	f	Lbzw;	kb	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lbzw;	kc	MOSSY_STONE_BRICK_STAIRS
	f	Lbzw;	kd	POLISHED_DIORITE_STAIRS
	f	Lbzw;	ke	MOSSY_COBBLESTONE_STAIRS
	f	Lbzw;	kf	END_STONE_BRICK_STAIRS
	f	Lbzw;	kg	STONE_STAIRS
	f	Lbzw;	kh	SMOOTH_SANDSTONE_STAIRS
	f	Lbzw;	ki	SMOOTH_QUARTZ_STAIRS
	f	Lbzw;	kj	GRANITE_STAIRS
	f	Lbzw;	kk	ANDESITE_STAIRS
	f	Lbzw;	kl	RED_NETHER_BRICK_STAIRS
	f	Lbzw;	km	POLISHED_ANDESITE_STAIRS
	f	Lbzw;	kn	DIORITE_STAIRS
	f	Lbzw;	ko	COBBLED_DEEPSLATE_STAIRS
	f	Lbzw;	kp	POLISHED_DEEPSLATE_STAIRS
	f	Lbzw;	kq	DEEPSLATE_BRICK_STAIRS
	f	Lbzw;	kr	DEEPSLATE_TILE_STAIRS
	f	Lbzw;	ks	POLISHED_GRANITE_SLAB
	f	Lbzw;	kt	SMOOTH_RED_SANDSTONE_SLAB
	f	Lbzw;	ku	MOSSY_STONE_BRICK_SLAB
	f	Lbzw;	kv	POLISHED_DIORITE_SLAB
	f	Lbzw;	kw	MOSSY_COBBLESTONE_SLAB
	f	Lbzw;	kx	END_STONE_BRICK_SLAB
	f	Lbzw;	ky	SMOOTH_SANDSTONE_SLAB
	f	Lbzw;	kz	SMOOTH_QUARTZ_SLAB
	f	Lbzw;	lA	JUNGLE_PRESSURE_PLATE
	f	Lbzw;	lB	ACACIA_PRESSURE_PLATE
	f	Lbzw;	lC	DARK_OAK_PRESSURE_PLATE
	f	Lbzw;	lD	MANGROVE_PRESSURE_PLATE
	f	Lbzw;	lE	CRIMSON_PRESSURE_PLATE
	f	Lbzw;	lF	WARPED_PRESSURE_PLATE
	f	Lbzw;	lG	IRON_DOOR
	f	Lbzw;	lH	OAK_DOOR
	f	Lbzw;	lI	SPRUCE_DOOR
	f	Lbzw;	lJ	BIRCH_DOOR
	f	Lbzw;	lK	JUNGLE_DOOR
	f	Lbzw;	lL	ACACIA_DOOR
	f	Lbzw;	l	CALCITE
	f	Lbzw;	lM	DARK_OAK_DOOR
	f	Lbzw;	lN	MANGROVE_DOOR
	f	Lbzw;	lO	CRIMSON_DOOR
	f	Lbzw;	lP	WARPED_DOOR
	f	Lbzw;	lQ	IRON_TRAPDOOR
	f	Lbzw;	lR	OAK_TRAPDOOR
	f	Lbzw;	lS	SPRUCE_TRAPDOOR
	f	Lbzw;	lT	BIRCH_TRAPDOOR
	f	Lbzw;	lU	JUNGLE_TRAPDOOR
	f	Lbzw;	lV	ACACIA_TRAPDOOR
	f	Lbzw;	lW	DARK_OAK_TRAPDOOR
	f	Lbzw;	lX	MANGROVE_TRAPDOOR
	f	Lbzw;	lY	CRIMSON_TRAPDOOR
	f	Lbzw;	lZ	WARPED_TRAPDOOR
	f	Lbzw;	la	LIGHTNING_ROD
	f	Lbzw;	lb	DAYLIGHT_DETECTOR
	f	Lbzw;	lc	SCULK_SENSOR
	f	Lbzw;	ld	TRIPWIRE_HOOK
	f	Lbzw;	le	TRAPPED_CHEST
	f	Lbzw;	lf	TNT
	f	Lbzw;	lg	REDSTONE_LAMP
	f	Lbzw;	lh	NOTE_BLOCK
	f	Lbzw;	li	STONE_BUTTON
	f	Lbzw;	lj	POLISHED_BLACKSTONE_BUTTON
	f	Lbzw;	lk	OAK_BUTTON
	f	Lbzw;	ll	SPRUCE_BUTTON
	f	Lbzw;	lm	BIRCH_BUTTON
	f	Lbzw;	ln	JUNGLE_BUTTON
	f	Lbzw;	lo	ACACIA_BUTTON
	f	Lbzw;	lp	DARK_OAK_BUTTON
	f	Lbzw;	lq	MANGROVE_BUTTON
	f	Lbzw;	lr	CRIMSON_BUTTON
	f	Lbzw;	ls	WARPED_BUTTON
	f	Lbzw;	lt	STONE_PRESSURE_PLATE
	f	Lbzw;	lu	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lbzw;	lv	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lbzw;	lw	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lbzw;	lx	OAK_PRESSURE_PLATE
	f	Lbzw;	ly	SPRUCE_PRESSURE_PLATE
	f	Lbzw;	lz	BIRCH_PRESSURE_PLATE
	f	Lbzw;	mA	BIRCH_BOAT
	f	Lbzw;	mB	BIRCH_CHEST_BOAT
	f	Lbzw;	mC	JUNGLE_BOAT
	f	Lbzw;	mD	JUNGLE_CHEST_BOAT
	f	Lbzw;	mE	ACACIA_BOAT
	f	Lbzw;	mF	ACACIA_CHEST_BOAT
	f	Lbzw;	mG	DARK_OAK_BOAT
	f	Lbzw;	mH	DARK_OAK_CHEST_BOAT
	f	Lbzw;	mI	MANGROVE_BOAT
	f	Lbzw;	mJ	MANGROVE_CHEST_BOAT
	f	Lbzw;	mK	STRUCTURE_BLOCK
	f	Lbzw;	mL	JIGSAW
	f	Lbzw;	m	TUFF
	f	Lbzw;	mM	TURTLE_HELMET
	f	Lbzw;	mN	SCUTE
	f	Lbzw;	mO	FLINT_AND_STEEL
	f	Lbzw;	mP	APPLE
	f	Lbzw;	mQ	BOW
	f	Lbzw;	mR	ARROW
	f	Lbzw;	mS	COAL
	f	Lbzw;	mT	CHARCOAL
	f	Lbzw;	mU	DIAMOND
	f	Lbzw;	mV	EMERALD
	f	Lbzw;	mW	LAPIS_LAZULI
	f	Lbzw;	mX	QUARTZ
	f	Lbzw;	mY	AMETHYST_SHARD
	f	Lbzw;	mZ	RAW_IRON
	f	Lbzw;	ma	OAK_FENCE_GATE
	f	Lbzw;	mb	SPRUCE_FENCE_GATE
	f	Lbzw;	mc	BIRCH_FENCE_GATE
	f	Lbzw;	md	JUNGLE_FENCE_GATE
	f	Lbzw;	me	ACACIA_FENCE_GATE
	f	Lbzw;	mf	DARK_OAK_FENCE_GATE
	f	Lbzw;	mg	MANGROVE_FENCE_GATE
	f	Lbzw;	mh	CRIMSON_FENCE_GATE
	f	Lbzw;	mi	WARPED_FENCE_GATE
	f	Lbzw;	mj	POWERED_RAIL
	f	Lbzw;	mk	DETECTOR_RAIL
	f	Lbzw;	ml	RAIL
	f	Lbzw;	mm	ACTIVATOR_RAIL
	f	Lbzw;	mn	SADDLE
	f	Lbzw;	mo	MINECART
	f	Lbzw;	mp	CHEST_MINECART
	f	Lbzw;	mq	FURNACE_MINECART
	f	Lbzw;	mr	TNT_MINECART
	f	Lbzw;	ms	HOPPER_MINECART
	f	Lbzw;	mt	CARROT_ON_A_STICK
	f	Lbzw;	mu	WARPED_FUNGUS_ON_A_STICK
	f	Lbzw;	mv	ELYTRA
	f	Lbzw;	mw	OAK_BOAT
	f	Lbzw;	mx	OAK_CHEST_BOAT
	f	Lbzw;	my	SPRUCE_BOAT
	f	Lbzw;	mz	SPRUCE_CHEST_BOAT
	f	Lbzw;	nA	IRON_HOE
	f	Lbzw;	nB	DIAMOND_SWORD
	f	Lbzw;	nC	DIAMOND_SHOVEL
	f	Lbzw;	nD	DIAMOND_PICKAXE
	f	Lbzw;	nE	DIAMOND_AXE
	f	Lbzw;	nF	DIAMOND_HOE
	f	Lbzw;	nG	NETHERITE_SWORD
	f	Lbzw;	nH	NETHERITE_SHOVEL
	f	Lbzw;	nI	NETHERITE_PICKAXE
	f	Lbzw;	nJ	NETHERITE_AXE
	f	Lbzw;	nK	NETHERITE_HOE
	f	Lbzw;	nL	STICK
	f	Lbzw;	n	DRIPSTONE_BLOCK
	f	Lbzw;	nM	BOWL
	f	Lbzw;	nN	MUSHROOM_STEW
	f	Lbzw;	nO	STRING
	f	Lbzw;	nP	FEATHER
	f	Lbzw;	nQ	GUNPOWDER
	f	Lbzw;	nR	WHEAT_SEEDS
	f	Lbzw;	nS	WHEAT
	f	Lbzw;	nT	BREAD
	f	Lbzw;	nU	LEATHER_HELMET
	f	Lbzw;	nV	LEATHER_CHESTPLATE
	f	Lbzw;	nW	LEATHER_LEGGINGS
	f	Lbzw;	nX	LEATHER_BOOTS
	f	Lbzw;	nY	CHAINMAIL_HELMET
	f	Lbzw;	nZ	CHAINMAIL_CHESTPLATE
	f	Lbzw;	na	IRON_INGOT
	f	Lbzw;	nb	RAW_COPPER
	f	Lbzw;	nc	COPPER_INGOT
	f	Lbzw;	nd	RAW_GOLD
	f	Lbzw;	ne	GOLD_INGOT
	f	Lbzw;	nf	NETHERITE_INGOT
	f	Lbzw;	ng	NETHERITE_SCRAP
	f	Lbzw;	nh	WOODEN_SWORD
	f	Lbzw;	ni	WOODEN_SHOVEL
	f	Lbzw;	nj	WOODEN_PICKAXE
	f	Lbzw;	nk	WOODEN_AXE
	f	Lbzw;	nl	WOODEN_HOE
	f	Lbzw;	nm	STONE_SWORD
	f	Lbzw;	nn	STONE_SHOVEL
	f	Lbzw;	no	STONE_PICKAXE
	f	Lbzw;	np	STONE_AXE
	f	Lbzw;	nq	STONE_HOE
	f	Lbzw;	nr	GOLDEN_SWORD
	f	Lbzw;	ns	GOLDEN_SHOVEL
	f	Lbzw;	nt	GOLDEN_PICKAXE
	f	Lbzw;	nu	GOLDEN_AXE
	f	Lbzw;	nv	GOLDEN_HOE
	f	Lbzw;	nw	IRON_SWORD
	f	Lbzw;	nx	IRON_SHOVEL
	f	Lbzw;	ny	IRON_PICKAXE
	f	Lbzw;	nz	IRON_AXE
	f	Lbzw;	oA	BIRCH_SIGN
	f	Lbzw;	oB	JUNGLE_SIGN
	f	Lbzw;	oC	ACACIA_SIGN
	f	Lbzw;	oD	DARK_OAK_SIGN
	f	Lbzw;	oE	MANGROVE_SIGN
	f	Lbzw;	oF	CRIMSON_SIGN
	f	Lbzw;	oG	WARPED_SIGN
	f	Lbzw;	oH	BUCKET
	f	Lbzw;	oI	WATER_BUCKET
	f	Lbzw;	oJ	LAVA_BUCKET
	f	Lbzw;	oK	POWDER_SNOW_BUCKET
	f	Lbzw;	oL	SNOWBALL
	f	Lbzw;	o	GRASS_BLOCK
	f	Lbzw;	oM	LEATHER
	f	Lbzw;	oN	MILK_BUCKET
	f	Lbzw;	oO	PUFFERFISH_BUCKET
	f	Lbzw;	oP	SALMON_BUCKET
	f	Lbzw;	oQ	COD_BUCKET
	f	Lbzw;	oR	TROPICAL_FISH_BUCKET
	f	Lbzw;	oS	AXOLOTL_BUCKET
	f	Lbzw;	oT	TADPOLE_BUCKET
	f	Lbzw;	oU	BRICK
	f	Lbzw;	oV	CLAY_BALL
	f	Lbzw;	oW	DRIED_KELP_BLOCK
	f	Lbzw;	oX	PAPER
	f	Lbzw;	oY	BOOK
	f	Lbzw;	oZ	SLIME_BALL
	f	Lbzw;	oa	CHAINMAIL_LEGGINGS
	f	Lbzw;	ob	CHAINMAIL_BOOTS
	f	Lbzw;	oc	IRON_HELMET
	f	Lbzw;	od	IRON_CHESTPLATE
	f	Lbzw;	oe	IRON_LEGGINGS
	f	Lbzw;	of	IRON_BOOTS
	f	Lbzw;	og	DIAMOND_HELMET
	f	Lbzw;	oh	DIAMOND_CHESTPLATE
	f	Lbzw;	oi	DIAMOND_LEGGINGS
	f	Lbzw;	oj	DIAMOND_BOOTS
	f	Lbzw;	ok	GOLDEN_HELMET
	f	Lbzw;	ol	GOLDEN_CHESTPLATE
	f	Lbzw;	om	GOLDEN_LEGGINGS
	f	Lbzw;	on	GOLDEN_BOOTS
	f	Lbzw;	oo	NETHERITE_HELMET
	f	Lbzw;	op	NETHERITE_CHESTPLATE
	f	Lbzw;	oq	NETHERITE_LEGGINGS
	f	Lbzw;	or	NETHERITE_BOOTS
	f	Lbzw;	os	FLINT
	f	Lbzw;	ot	PORKCHOP
	f	Lbzw;	ou	COOKED_PORKCHOP
	f	Lbzw;	ov	PAINTING
	f	Lbzw;	ow	GOLDEN_APPLE
	f	Lbzw;	ox	ENCHANTED_GOLDEN_APPLE
	f	Lbzw;	oy	OAK_SIGN
	f	Lbzw;	oz	SPRUCE_SIGN
	f	Lbzw;	pA	CYAN_DYE
	f	Lbzw;	pB	PURPLE_DYE
	f	Lbzw;	pC	BLUE_DYE
	f	Lbzw;	pD	BROWN_DYE
	f	Lbzw;	pE	GREEN_DYE
	f	Lbzw;	pF	RED_DYE
	f	Lbzw;	pG	BLACK_DYE
	f	Lbzw;	pH	BONE_MEAL
	f	Lbzw;	pI	BONE
	f	Lbzw;	pJ	SUGAR
	f	Lbzw;	pK	CAKE
	f	Lbzw;	pL	WHITE_BED
	f	Lbzw;	p	DIRT
	f	Lbzw;	pM	ORANGE_BED
	f	Lbzw;	pN	MAGENTA_BED
	f	Lbzw;	pO	LIGHT_BLUE_BED
	f	Lbzw;	pP	YELLOW_BED
	f	Lbzw;	pQ	LIME_BED
	f	Lbzw;	pR	PINK_BED
	f	Lbzw;	pS	GRAY_BED
	f	Lbzw;	pT	LIGHT_GRAY_BED
	f	Lbzw;	pU	CYAN_BED
	f	Lbzw;	pV	PURPLE_BED
	f	Lbzw;	pW	BLUE_BED
	f	Lbzw;	pX	BROWN_BED
	f	Lbzw;	pY	GREEN_BED
	f	Lbzw;	pZ	RED_BED
	f	Lbzw;	pa	EGG
	f	Lbzw;	pb	COMPASS
	f	Lbzw;	pc	RECOVERY_COMPASS
	f	Lbzw;	pd	BUNDLE
	f	Lbzw;	pe	FISHING_ROD
	f	Lbzw;	pf	CLOCK
	f	Lbzw;	pg	SPYGLASS
	f	Lbzw;	ph	GLOWSTONE_DUST
	f	Lbzw;	pi	COD
	f	Lbzw;	pj	SALMON
	f	Lbzw;	pk	TROPICAL_FISH
	f	Lbzw;	pl	PUFFERFISH
	f	Lbzw;	pm	COOKED_COD
	f	Lbzw;	pn	COOKED_SALMON
	f	Lbzw;	po	INK_SAC
	f	Lbzw;	pp	GLOW_INK_SAC
	f	Lbzw;	pq	COCOA_BEANS
	f	Lbzw;	pr	WHITE_DYE
	f	Lbzw;	ps	ORANGE_DYE
	f	Lbzw;	pt	MAGENTA_DYE
	f	Lbzw;	pu	LIGHT_BLUE_DYE
	f	Lbzw;	pv	YELLOW_DYE
	f	Lbzw;	pw	LIME_DYE
	f	Lbzw;	px	PINK_DYE
	f	Lbzw;	py	GRAY_DYE
	f	Lbzw;	pz	LIGHT_GRAY_DYE
	f	Lbzw;	qA	ENDER_EYE
	f	Lbzw;	qB	GLISTERING_MELON_SLICE
	f	Lbzw;	qC	ALLAY_SPAWN_EGG
	f	Lbzw;	qD	AXOLOTL_SPAWN_EGG
	f	Lbzw;	qE	BAT_SPAWN_EGG
	f	Lbzw;	qF	BEE_SPAWN_EGG
	f	Lbzw;	qG	BLAZE_SPAWN_EGG
	f	Lbzw;	qH	CAT_SPAWN_EGG
	f	Lbzw;	qI	CAVE_SPIDER_SPAWN_EGG
	f	Lbzw;	qJ	CHICKEN_SPAWN_EGG
	f	Lbzw;	qK	COD_SPAWN_EGG
	f	Lbzw;	qL	COW_SPAWN_EGG
	f	Lbzw;	q	COARSE_DIRT
	f	Lbzw;	qM	CREEPER_SPAWN_EGG
	f	Lbzw;	qN	DOLPHIN_SPAWN_EGG
	f	Lbzw;	qO	DONKEY_SPAWN_EGG
	f	Lbzw;	qP	DROWNED_SPAWN_EGG
	f	Lbzw;	qQ	ELDER_GUARDIAN_SPAWN_EGG
	f	Lbzw;	qR	ENDERMAN_SPAWN_EGG
	f	Lbzw;	qS	ENDERMITE_SPAWN_EGG
	f	Lbzw;	qT	EVOKER_SPAWN_EGG
	f	Lbzw;	qU	FOX_SPAWN_EGG
	f	Lbzw;	qV	FROG_SPAWN_EGG
	f	Lbzw;	qW	GHAST_SPAWN_EGG
	f	Lbzw;	qX	GLOW_SQUID_SPAWN_EGG
	f	Lbzw;	qY	GOAT_SPAWN_EGG
	f	Lbzw;	qZ	GUARDIAN_SPAWN_EGG
	f	Lbzw;	qa	BLACK_BED
	f	Lbzw;	qb	COOKIE
	f	Lbzw;	qc	FILLED_MAP
	f	Lbzw;	qd	SHEARS
	f	Lbzw;	qe	MELON_SLICE
	f	Lbzw;	qf	DRIED_KELP
	f	Lbzw;	qg	PUMPKIN_SEEDS
	f	Lbzw;	qh	MELON_SEEDS
	f	Lbzw;	qi	BEEF
	f	Lbzw;	qj	COOKED_BEEF
	f	Lbzw;	qk	CHICKEN
	f	Lbzw;	ql	COOKED_CHICKEN
	f	Lbzw;	qm	ROTTEN_FLESH
	f	Lbzw;	qn	ENDER_PEARL
	f	Lbzw;	qo	BLAZE_ROD
	f	Lbzw;	qp	GHAST_TEAR
	f	Lbzw;	qq	GOLD_NUGGET
	f	Lbzw;	qr	NETHER_WART
	f	Lbzw;	qs	POTION
	f	Lbzw;	qt	GLASS_BOTTLE
	f	Lbzw;	qu	SPIDER_EYE
	f	Lbzw;	qv	FERMENTED_SPIDER_EYE
	f	Lbzw;	qw	BLAZE_POWDER
	f	Lbzw;	qx	MAGMA_CREAM
	f	Lbzw;	qy	BREWING_STAND
	f	Lbzw;	qz	CAULDRON
	f	Lbzw;	rA	SPIDER_SPAWN_EGG
	f	Lbzw;	rB	SQUID_SPAWN_EGG
	f	Lbzw;	rC	STRAY_SPAWN_EGG
	f	Lbzw;	rD	STRIDER_SPAWN_EGG
	f	Lbzw;	rE	TADPOLE_SPAWN_EGG
	f	Lbzw;	rF	TRADER_LLAMA_SPAWN_EGG
	f	Lbzw;	rG	TROPICAL_FISH_SPAWN_EGG
	f	Lbzw;	rH	TURTLE_SPAWN_EGG
	f	Lbzw;	rI	VEX_SPAWN_EGG
	f	Lbzw;	rJ	VILLAGER_SPAWN_EGG
	f	Lbzw;	rK	VINDICATOR_SPAWN_EGG
	f	Lbzw;	rL	WANDERING_TRADER_SPAWN_EGG
	f	Lbzw;	r	PODZOL
	f	Lbzw;	rM	WARDEN_SPAWN_EGG
	f	Lbzw;	rN	WITCH_SPAWN_EGG
	f	Lbzw;	rO	WITHER_SKELETON_SPAWN_EGG
	f	Lbzw;	rP	WOLF_SPAWN_EGG
	f	Lbzw;	rQ	ZOGLIN_SPAWN_EGG
	f	Lbzw;	rR	ZOMBIE_SPAWN_EGG
	f	Lbzw;	rS	ZOMBIE_HORSE_SPAWN_EGG
	f	Lbzw;	rT	ZOMBIE_VILLAGER_SPAWN_EGG
	f	Lbzw;	rU	ZOMBIFIED_PIGLIN_SPAWN_EGG
	f	Lbzw;	rV	EXPERIENCE_BOTTLE
	f	Lbzw;	rW	FIRE_CHARGE
	f	Lbzw;	rX	WRITABLE_BOOK
	f	Lbzw;	rY	WRITTEN_BOOK
	f	Lbzw;	rZ	ITEM_FRAME
	f	Lbzw;	ra	HOGLIN_SPAWN_EGG
	f	Lbzw;	rb	HORSE_SPAWN_EGG
	f	Lbzw;	rc	HUSK_SPAWN_EGG
	f	Lbzw;	rd	LLAMA_SPAWN_EGG
	f	Lbzw;	re	MAGMA_CUBE_SPAWN_EGG
	f	Lbzw;	rf	MOOSHROOM_SPAWN_EGG
	f	Lbzw;	rg	MULE_SPAWN_EGG
	f	Lbzw;	rh	OCELOT_SPAWN_EGG
	f	Lbzw;	ri	PANDA_SPAWN_EGG
	f	Lbzw;	rj	PARROT_SPAWN_EGG
	f	Lbzw;	rk	PHANTOM_SPAWN_EGG
	f	Lbzw;	rl	PIG_SPAWN_EGG
	f	Lbzw;	rm	PIGLIN_SPAWN_EGG
	f	Lbzw;	rn	PIGLIN_BRUTE_SPAWN_EGG
	f	Lbzw;	ro	PILLAGER_SPAWN_EGG
	f	Lbzw;	rp	POLAR_BEAR_SPAWN_EGG
	f	Lbzw;	rq	PUFFERFISH_SPAWN_EGG
	f	Lbzw;	rr	RABBIT_SPAWN_EGG
	f	Lbzw;	rs	RAVAGER_SPAWN_EGG
	f	Lbzw;	rt	SALMON_SPAWN_EGG
	f	Lbzw;	ru	SHEEP_SPAWN_EGG
	f	Lbzw;	rv	SHULKER_SPAWN_EGG
	f	Lbzw;	rw	SILVERFISH_SPAWN_EGG
	f	Lbzw;	rx	SKELETON_SPAWN_EGG
	f	Lbzw;	ry	SKELETON_HORSE_SPAWN_EGG
	f	Lbzw;	rz	SLIME_SPAWN_EGG
	f	Lbzw;	sA	RABBIT_HIDE
	f	Lbzw;	sB	ARMOR_STAND
	f	Lbzw;	sC	IRON_HORSE_ARMOR
	f	Lbzw;	sD	GOLDEN_HORSE_ARMOR
	f	Lbzw;	sE	DIAMOND_HORSE_ARMOR
	f	Lbzw;	sF	LEATHER_HORSE_ARMOR
	f	Lbzw;	sG	LEAD
	f	Lbzw;	sH	NAME_TAG
	f	Lbzw;	sI	COMMAND_BLOCK_MINECART
	f	Lbzw;	sJ	MUTTON
	f	Lbzw;	sK	COOKED_MUTTON
	f	Lbzw;	sL	WHITE_BANNER
	f	Lbzw;	s	ROOTED_DIRT
	f	Lbzw;	sM	ORANGE_BANNER
	f	Lbzw;	sN	MAGENTA_BANNER
	f	Lbzw;	sO	LIGHT_BLUE_BANNER
	f	Lbzw;	sP	YELLOW_BANNER
	f	Lbzw;	sQ	LIME_BANNER
	f	Lbzw;	sR	PINK_BANNER
	f	Lbzw;	sS	GRAY_BANNER
	f	Lbzw;	sT	LIGHT_GRAY_BANNER
	f	Lbzw;	sU	CYAN_BANNER
	f	Lbzw;	sV	PURPLE_BANNER
	f	Lbzw;	sW	BLUE_BANNER
	f	Lbzw;	sX	BROWN_BANNER
	f	Lbzw;	sY	GREEN_BANNER
	f	Lbzw;	sZ	RED_BANNER
	f	Lbzw;	sa	GLOW_ITEM_FRAME
	f	Lbzw;	sb	FLOWER_POT
	f	Lbzw;	sc	CARROT
	f	Lbzw;	sd	POTATO
	f	Lbzw;	se	BAKED_POTATO
	f	Lbzw;	sf	POISONOUS_POTATO
	f	Lbzw;	sg	MAP
	f	Lbzw;	sh	GOLDEN_CARROT
	f	Lbzw;	si	SKELETON_SKULL
	f	Lbzw;	sj	WITHER_SKELETON_SKULL
	f	Lbzw;	sk	PLAYER_HEAD
	f	Lbzw;	sl	ZOMBIE_HEAD
	f	Lbzw;	sm	CREEPER_HEAD
	f	Lbzw;	sn	DRAGON_HEAD
	f	Lbzw;	so	NETHER_STAR
	f	Lbzw;	sp	PUMPKIN_PIE
	f	Lbzw;	sq	FIREWORK_ROCKET
	f	Lbzw;	sr	FIREWORK_STAR
	f	Lbzw;	ss	ENCHANTED_BOOK
	f	Lbzw;	st	NETHER_BRICK
	f	Lbzw;	su	PRISMARINE_SHARD
	f	Lbzw;	sv	PRISMARINE_CRYSTALS
	f	Lbzw;	sw	RABBIT
	f	Lbzw;	sx	COOKED_RABBIT
	f	Lbzw;	sy	RABBIT_STEW
	f	Lbzw;	sz	RABBIT_FOOT
	f	Lbzw;	tA	MUSIC_DISC_STRAD
	f	Lbzw;	tB	MUSIC_DISC_WARD
	f	Lbzw;	tC	MUSIC_DISC_11
	f	Lbzw;	tD	MUSIC_DISC_WAIT
	f	Lbzw;	tE	MUSIC_DISC_OTHERSIDE
	f	Lbzw;	tF	MUSIC_DISC_5
	f	Lbzw;	tG	MUSIC_DISC_PIGSTEP
	f	Lbzw;	tH	DISC_FRAGMENT_5
	f	Lbzw;	tI	TRIDENT
	f	Lbzw;	tJ	PHANTOM_MEMBRANE
	f	Lbzw;	tK	NAUTILUS_SHELL
	f	Lbzw;	tL	HEART_OF_THE_SEA
	f	Lbzw;	t	MUD
	f	Lbzw;	tM	CROSSBOW
	f	Lbzw;	tN	SUSPICIOUS_STEW
	f	Lbzw;	tO	LOOM
	f	Lbzw;	tP	FLOWER_BANNER_PATTERN
	f	Lbzw;	tQ	CREEPER_BANNER_PATTERN
	f	Lbzw;	tR	SKULL_BANNER_PATTERN
	f	Lbzw;	tS	MOJANG_BANNER_PATTERN
	f	Lbzw;	tT	GLOBE_BANNER_PATTERN
	f	Lbzw;	tU	PIGLIN_BANNER_PATTERN
	f	Lbzw;	tV	GOAT_HORN
	f	Lbzw;	tW	COMPOSTER
	f	Lbzw;	tX	BARREL
	f	Lbzw;	tY	SMOKER
	f	Lbzw;	tZ	BLAST_FURNACE
	f	Lbzw;	ta	BLACK_BANNER
	f	Lbzw;	tb	END_CRYSTAL
	f	Lbzw;	tc	CHORUS_FRUIT
	f	Lbzw;	td	POPPED_CHORUS_FRUIT
	f	Lbzw;	te	BEETROOT
	f	Lbzw;	tf	BEETROOT_SEEDS
	f	Lbzw;	tg	BEETROOT_SOUP
	f	Lbzw;	th	DRAGON_BREATH
	f	Lbzw;	ti	SPLASH_POTION
	f	Lbzw;	tj	SPECTRAL_ARROW
	f	Lbzw;	tk	TIPPED_ARROW
	f	Lbzw;	tl	LINGERING_POTION
	f	Lbzw;	tm	SHIELD
	f	Lbzw;	tn	TOTEM_OF_UNDYING
	f	Lbzw;	to	SHULKER_SHELL
	f	Lbzw;	tp	IRON_NUGGET
	f	Lbzw;	tq	KNOWLEDGE_BOOK
	f	Lbzw;	tr	DEBUG_STICK
	f	Lbzw;	ts	MUSIC_DISC_13
	f	Lbzw;	tt	MUSIC_DISC_CAT
	f	Lbzw;	tu	MUSIC_DISC_BLOCKS
	f	Lbzw;	tv	MUSIC_DISC_CHIRP
	f	Lbzw;	tw	MUSIC_DISC_FAR
	f	Lbzw;	tx	MUSIC_DISC_MALL
	f	Lbzw;	ty	MUSIC_DISC_MELLOHI
	f	Lbzw;	tz	MUSIC_DISC_STAL
	f	Lbzw;	uA	POLISHED_BLACKSTONE_STAIRS
	f	Lbzw;	uB	CHISELED_POLISHED_BLACKSTONE
	f	Lbzw;	uC	POLISHED_BLACKSTONE_BRICKS
	f	Lbzw;	uD	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lbzw;	uE	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lbzw;	uF	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lbzw;	uG	RESPAWN_ANCHOR
	f	Lbzw;	uH	CANDLE
	f	Lbzw;	uI	WHITE_CANDLE
	f	Lbzw;	uJ	ORANGE_CANDLE
	f	Lbzw;	uK	MAGENTA_CANDLE
	f	Lbzw;	uL	LIGHT_BLUE_CANDLE
	f	Lbzw;	u	CRIMSON_NYLIUM
	f	Lbzw;	uM	YELLOW_CANDLE
	f	Lbzw;	uN	LIME_CANDLE
	f	Lbzw;	uO	PINK_CANDLE
	f	Lbzw;	uP	GRAY_CANDLE
	f	Lbzw;	uQ	LIGHT_GRAY_CANDLE
	f	Lbzw;	uR	CYAN_CANDLE
	f	Lbzw;	uS	PURPLE_CANDLE
	f	Lbzw;	uT	BLUE_CANDLE
	f	Lbzw;	uU	BROWN_CANDLE
	f	Lbzw;	uV	GREEN_CANDLE
	f	Lbzw;	uW	RED_CANDLE
	f	Lbzw;	uX	BLACK_CANDLE
	f	Lbzw;	uY	SMALL_AMETHYST_BUD
	f	Lbzw;	uZ	MEDIUM_AMETHYST_BUD
	f	Lbzw;	ua	CARTOGRAPHY_TABLE
	f	Lbzw;	ub	FLETCHING_TABLE
	f	Lbzw;	uc	GRINDSTONE
	f	Lbzw;	ud	SMITHING_TABLE
	f	Lbzw;	ue	STONECUTTER
	f	Lbzw;	uf	BELL
	f	Lbzw;	ug	LANTERN
	f	Lbzw;	uh	SOUL_LANTERN
	f	Lbzw;	ui	SWEET_BERRIES
	f	Lbzw;	uj	GLOW_BERRIES
	f	Lbzw;	uk	CAMPFIRE
	f	Lbzw;	ul	SOUL_CAMPFIRE
	f	Lbzw;	um	SHROOMLIGHT
	f	Lbzw;	un	HONEYCOMB
	f	Lbzw;	uo	BEE_NEST
	f	Lbzw;	up	BEEHIVE
	f	Lbzw;	uq	HONEY_BOTTLE
	f	Lbzw;	ur	HONEYCOMB_BLOCK
	f	Lbzw;	us	LODESTONE
	f	Lbzw;	ut	CRYING_OBSIDIAN
	f	Lbzw;	uu	BLACKSTONE
	f	Lbzw;	uv	BLACKSTONE_SLAB
	f	Lbzw;	uw	BLACKSTONE_STAIRS
	f	Lbzw;	ux	GILDED_BLACKSTONE
	f	Lbzw;	uy	POLISHED_BLACKSTONE
	f	Lbzw;	uz	POLISHED_BLACKSTONE_SLAB
	f	Lbzw;	v	WARPED_NYLIUM
	f	Lbzw;	va	LARGE_AMETHYST_BUD
	f	Lbzw;	vb	AMETHYST_CLUSTER
	f	Lbzw;	vc	POINTED_DRIPSTONE
	f	Lbzw;	vd	OCHRE_FROGLIGHT
	f	Lbzw;	ve	VERDANT_FROGLIGHT
	f	Lbzw;	vf	PEARLESCENT_FROGLIGHT
	f	Lbzw;	vg	FROGSPAWN
	f	Lbzw;	vh	ECHO_SHARD
	f	Lbzw;	w	COBBLESTONE
	f	Lbzw;	x	OAK_PLANKS
	f	Lbzw;	y	SPRUCE_PLANKS
	f	Lbzw;	z	BIRCH_PLANKS
c	cad	net/minecraft/world/item/KnowledgeBookItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Ljava/lang/String;	a	RECIPE_TAG
	f	Lorg/slf4j/Logger;	b	LOGGER
c	cae	net/minecraft/world/item/LeadItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbtf;Lcga;Lgt;)Lazm;	a	bindPlayerMobs
		p	0		player
		p	1		world
		p	2		pos
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
c	caf	net/minecraft/world/item/LingeringPotionItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cag	net/minecraft/world/item/MapItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(I)Ljava/lang/String;	a	makeKey
		p	0		mapId
	m	(Lafo;Lcaa;)V	a	renderBiomePreviewMap
		p	0		world
		p	1		map
	m	(Lcaa;I)V	a	storeMapData
		p	0		stack
		p	1		id
	m	(Lcaa;Lcga;)Ldqj;	a	getSavedData
		p	0		map
		p	1		world
	m	(Lcaa;Lcga;I)V	a	scaleMap
		p	0		map
		p	1		world
		p	2		amount
	m	(Lcaa;Lcga;IIIZZLaai;)V	a	createAndStoreSavedData
		p	0		stack
		p	1		world
		p	2		x
		p	3		z
		p	4		scale
		p	5		showIcons
		p	6		unlimitedTracking
		p	7		dimension
	m	(Lcaa;Lcga;Lbaq;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcaa;Lcga;Lbtf;)Lso;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;IIBZZ)Lcaa;	a	create
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
	m	(Lcga;IIIZZLaai;)I	a	createNewSavedData
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
		p	6		dimension
	m	(Lcga;Lbaq;Ldqj;)V	a	update
		p	1		world
		p	2		entity
		p	3		state
	m	(Lcga;Lcaa;)V	a	lockMap
		p	0		world
		p	1		stack
	m	(Lcga;Lcur;Lgt;)Lcur;	a	getCorrectStateForFluidBlock
		p	1		world
		p	2		state
		p	3		pos
	m	(Ljava/lang/Integer;Lcga;)Ldqj;	a	getSavedData
		p	0		id
		p	1		world
	m	([ZII)Z	a	isBiomeWatery
		p	0		biomes
		p	1		x
		p	2		z
	m	(Lcaa;Lcga;Lbtf;)V	b	onCraftedBy
		p	1		stack
		p	2		world
		p	3		player
	m	(Lcaa;)Ljava/lang/Integer;	d	getMapId
		p	0		stack
	m	(Lcaa;)I	k	getColor
		p	0		stack
	f	I	a	IMAGE_WIDTH
	f	I	b	IMAGE_HEIGHT
	f	I	c	DEFAULT_MAP_COLOR
	f	Ljava/lang/String;	d	TAG_MAP
c	cah	net/minecraft/world/item/MilkBucketItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	f	I	a	DRINK_DURATION
c	cai	net/minecraft/world/item/MinecartItem
	m	(Lbuw$a;Lbzw$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	f	Lhz;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lbuw$a;	b	type
c	cai$1	net/minecraft/world/item/MinecartItem$1
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcaa;)Lcaa;	a	execute
		p	1		pointer
		p	2		stack
	f	Lhy;	c	defaultDispenseItemBehavior
c	caj	net/minecraft/world/item/MobBucketItem
	m	(Lbau;Ldox;Lajd;Lbzw$a;)V	<init>	<init>
		p	1		type
		p	2		fluid
		p	3		emptyingSound
		p	4		settings
	m	(Lafo;Lcaa;Lgt;)V	a	spawn
		p	1		world
		p	2		stack
		p	3		pos
	m	(Lbtf;Lcga;Lcaa;Lgt;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbtf;Lcgb;Lgt;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	f	Lbau;	a	type
	f	Lajd;	b	emptySound
c	cak	net/minecraft/world/item/NameTagItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lbtf;Lbbf;Lazl;)Lazm;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cal	net/minecraft/world/item/PickaxeItem
	m	(Lcbk;IFLbzw$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
c	cam	net/minecraft/world/item/PlaceOnWaterBlockItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	can	net/minecraft/world/item/PlayerHeadItem
	m	(Lciw;Lciw;Lbzw$a;)V	<init>	<init>
		p	1		standingBlock
		p	2		wallBlock
		p	3		settings
	m	(Lpj;Lcom/mojang/authlib/GameProfile;)V	a	lambda$verifyTagAfterLoad$0
		p	1		profile
	m	(Lpj;)V	b	verifyTagAfterLoad
		p	1		nbt
	m	(Lcaa;)Lrm;	m	getName
		p	1		stack
	f	Ljava/lang/String;	b	TAG_SKULL_OWNER
c	cao	net/minecraft/world/item/PotionItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	()Lcaa;	R_	getDefaultInstance
	m	(Lbym;Lhi;)V	a	fillItemCategory
		p	1		group
		p	2		stacks
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
	m	(Lcaa;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	I	a	DRINK_DURATION
c	cap	net/minecraft/world/item/ProjectileWeaponItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbbf;Ljava/util/function/Predicate;)Lcaa;	a	getHeldProjectile
		p	0		entity
		p	1		predicate
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	()I	c	getEnchantmentValue
	m	()I	d	getDefaultProjectileRange
	m	(Lcaa;)Z	d	lambda$static$1
		p	0		stack
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lcaa;)Z	k	lambda$static$0
		p	0		stack
	f	Ljava/util/function/Predicate;	c	ARROW_ONLY
	f	Ljava/util/function/Predicate;	d	ARROW_OR_FIREWORK
c	caq	net/minecraft/world/item/Rarity
	m	(Ljava/lang/String;ILp;)V	<init>	<init>
		p	3		formatting
	m	()[Lcaq;	a	$values
	f	Lcaq;	a	COMMON
	f	Lcaq;	b	UNCOMMON
	f	Lcaq;	c	RARE
	f	Lcaq;	d	EPIC
	f	Lp;	e	color
	f	[Lcaq;	f	$VALUES
c	car	net/minecraft/world/item/RecordItem
	m	(ILajd;Lbzw$a;)V	<init>	<init>
		p	1		comparatorOutput
		p	2		sound
		p	3		settings
	m	(Lajd;)Lcar;	a	getBySound
		p	0		sound
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	()I	i	getAnalogOutput
	m	()Lrt;	j	getDisplayName
	m	()Lajd;	y	getSound
	f	Ljava/util/Map;	a	BY_NAME
	f	I	b	analogOutput
	f	Lajd;	c	sound
c	cas	net/minecraft/world/item/SaddleItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lbtf;Lbbf;Lazl;)Lazm;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cat	net/minecraft/world/item/ScaffoldingBlockItem
	m	(Lciw;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcca;)Lcca;	b	updatePlacementContext
		p	1		context
	m	()Z	d	mustSurvive
c	cau	net/minecraft/world/item/ServerItemCooldowns
	m	(Lafp;)V	<init>	<init>
		p	1		player
	m	(Lbzw;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lbzw;)V	c	onCooldownEnded
		p	1		item
	f	Lafp;	a	player
c	cav	net/minecraft/world/item/ShearsItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbbf;)V	a	lambda$mineBlock$0
		p	0		e
	m	(Lcaa;Lcga;Lcur;Lgt;Lbbf;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcaa;Lcur;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lccc;Lbtf;)V	a	lambda$useOn$1
		p	1		player
	m	(Lcur;)Z	a_	isCorrectToolForDrops
		p	1		state
c	caw	net/minecraft/world/item/ShieldItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcaa;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	m	(Lcaa;)Lbyt;	d	getColor
		p	0		stack
	m	(Lcaa;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	I	a	EFFECTIVE_BLOCK_DELAY
	f	F	b	MINIMUM_DURABILITY_DAMAGE
	f	Ljava/lang/String;	c	TAG_BASE_COLOR
c	cax	net/minecraft/world/item/ShovelItem
	m	(Lcbk;FFLbzw$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lccc;Lbtf;)V	a	lambda$useOn$0
		p	1		p
	f	Ljava/util/Map;	a	FLATTENABLES
c	cay	net/minecraft/world/item/SignItem
	m	(Lbzw$a;Lciw;Lciw;)V	<init>	<init>
		p	1		settings
		p	2		standingBlock
		p	3		wallBlock
	m	(Lgt;Lcga;Lbtf;Lcaa;Lcur;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
c	caz	net/minecraft/world/item/SimpleFoiledItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
c	cba	net/minecraft/world/item/SnowballItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cbb	net/minecraft/world/item/SolidBucketItem
	m	(Lciw;Lajd;Lbzw$a;)V	<init>	<init>
		p	1		block
		p	2		placeSound
		p	3		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbtf;Lcga;Lgt;Ldvp;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcur;)Lajd;	a	getPlaceSound
		p	1		state
	f	Lajd;	b	placeSound
c	cbc	net/minecraft/world/item/SpawnEggItem
	m	(Lbau;IILbzw$a;)V	<init>	<init>
		p	1		type
		p	2		primaryColor
		p	3		secondaryColor
		p	4		settings
	m	(I)I	a	getColor
		p	1		tintIndex
	m	(Lbau;)Lcbc;	a	byId
		p	0		type
	m	(Lbtf;Lbbh;Lbau;Lafo;Ldvt;Lcaa;)Ljava/util/Optional;	a	spawnOffspringFromSpawnEgg
		p	1		user
		p	2		entity
		p	3		entityType
		p	4		world
		p	5		pos
		p	6		stack
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lpj;)Lbau;	a	getType
		p	1		nbt
	m	(Lpj;Lbau;)Z	a	spawnsEntity
		p	1		nbt
		p	2		type
	m	()Ljava/lang/Iterable;	i	eggs
	f	Ljava/util/Map;	a	BY_ID
	f	I	b	backgroundColor
	f	I	c	highlightColor
	f	Lbau;	d	defaultType
c	cbd	net/minecraft/world/item/SpectralArrowItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcaa;Lbbf;)Lbtl;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
c	cbe	net/minecraft/world/item/SplashPotionItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cbf	net/minecraft/world/item/SpyglassItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbbf;)V	a	stopUsing
		p	1		user
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcaa;Lcga;Lbbf;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	f	I	a	USE_DURATION
	f	F	b	ZOOM_FOV_MODIFIER
c	cbg	net/minecraft/world/item/StandingAndWallBlockItem
	m	(Lciw;Lciw;Lbzw$a;)V	<init>	<init>
		p	1		standingBlock
		p	2		wallBlock
		p	3		settings
	m	(Ljava/util/Map;Lbzw;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	(Lcca;)Lcur;	c	getPlacementState
		p	1		context
	f	Lciw;	c	wallBlock
c	cbh	net/minecraft/world/item/SuspiciousStewItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lbah;I)V	a	saveMobEffect
		p	0		stew
		p	1		effect
		p	2		duration
	m	(Lcaa;Lcga;Lbbf;)Lcaa;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	f	Ljava/lang/String;	a	EFFECTS_TAG
	f	Ljava/lang/String;	b	EFFECT_ID_TAG
	f	Ljava/lang/String;	c	EFFECT_DURATION_TAG
c	cbi	net/minecraft/world/item/SwordItem
	m	(Lcbk;IFLbzw$a;)V	<init>	<init>
		p	1		toolMaterial
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lbav;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbbf;)V	a	lambda$mineBlock$1
		p	0		e
	m	(Lcaa;Lbbf;Lbbf;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcaa;Lcga;Lcur;Lgt;Lbbf;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcaa;Lcur;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lcur;Lcga;Lgt;Lbtf;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lcur;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	(Lbbf;)V	b	lambda$hurtEnemy$0
		p	0		e
	m	()F	i	getDamage
	f	F	a	attackDamage
	f	Lcom/google/common/collect/Multimap;	b	defaultModifiers
c	cbj	net/minecraft/world/item/ThrowablePotionItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cbk	net/minecraft/world/item/Tier
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lccp;	f	getRepairIngredient
c	cbl	net/minecraft/world/item/TieredItem
	m	(Lcbk;Lbzw$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcaa;Lcaa;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	()I	c	getEnchantmentValue
	m	()Lcbk;	j	getTier
	f	Lcbk;	a	tier
c	cbm	net/minecraft/world/item/Tiers
	m	(Ljava/lang/String;IIIFFILjava/util/function/Supplier;)V	<init>	<init>
		p	3		miningLevel
		p	4		itemDurability
		p	5		miningSpeed
		p	6		attackDamage
		p	7		enchantability
		p	8		repairIngredient
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lccp;	f	getRepairIngredient
	m	()Lccp;	g	lambda$static$5
	m	()Lccp;	h	lambda$static$4
	m	()Lccp;	i	lambda$static$3
	m	()Lccp;	j	lambda$static$2
	m	()Lccp;	k	lambda$static$1
	m	()Lccp;	l	lambda$static$0
	m	()[Lcbm;	m	$values
	f	Lcbm;	a	WOOD
	f	Lcbm;	b	STONE
	f	Lcbm;	c	IRON
	f	Lcbm;	d	DIAMOND
	f	Lcbm;	e	GOLD
	f	Lcbm;	f	NETHERITE
	f	I	g	level
	f	I	h	uses
	f	F	i	speed
	f	F	j	damage
	f	I	k	enchantmentValue
	f	Lalk;	l	repairIngredient
	f	[Lcbm;	m	$VALUES
c	cbn	net/minecraft/world/item/TippedArrowItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	()Lcaa;	R_	getDefaultInstance
	m	(Lbym;Lhi;)V	a	fillItemCategory
		p	1		group
		p	2		stacks
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
c	cbo	net/minecraft/world/item/TooltipFlag
	m	()Z	a	isAdvanced
c	cbo$a	net/minecraft/world/item/TooltipFlag$Default
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3		advanced
	m	()Z	a	isAdvanced
	m	()[Lcbo$a;	b	$values
	f	Lcbo$a;	a	NORMAL
	f	Lcbo$a;	b	ADVANCED
	f	Z	c	advanced
	f	[Lcbo$a;	d	$VALUES
c	cbp	net/minecraft/world/item/TridentItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lbav;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbbf;)V	a	lambda$mineBlock$2
		p	0		e
	m	(Lbbf;Lbtf;)V	a	lambda$releaseUsing$0
		p	1		p
	m	(Lcaa;Lbbf;Lbbf;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcaa;Lcga;Lbbf;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcaa;Lcga;Lcur;Lgt;Lbbf;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcur;Lcga;Lgt;Lbtf;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lbbf;)V	b	lambda$hurtEnemy$1
		p	0		e
	m	(Lcaa;)I	b	getUseDuration
		p	1		stack
	m	()I	c	getEnchantmentValue
	m	(Lcaa;)Lcbq;	c	getUseAnimation
		p	1		stack
	f	I	a	THROW_THRESHOLD_TIME
	f	F	b	BASE_DAMAGE
	f	F	c	SHOOT_POWER
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	cbq	net/minecraft/world/item/UseAnim
	m	()[Lcbq;	a	$values
	f	Lcbq;	a	NONE
	f	Lcbq;	b	EAT
	f	Lcbq;	c	DRINK
	f	Lcbq;	d	BLOCK
	f	Lcbq;	e	BOW
	f	Lcbq;	f	SPEAR
	f	Lcbq;	g	CROSSBOW
	f	Lcbq;	h	SPYGLASS
	f	Lcbq;	i	TOOT_HORN
	f	[Lcbq;	j	$VALUES
c	cbr	net/minecraft/world/item/Vanishable
c	cbs	net/minecraft/world/item/Wearable
c	cbt	net/minecraft/world/item/WritableBookItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lpj;)Z	a	makeSureTagIsValid
		p	0		nbt
c	cbu	net/minecraft/world/item/WrittenBookItem
	m	(Lbzw$a;)V	<init>	<init>
		p	1		settings
	m	(Lcaa;Lcga;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcaa;Ldr;Lbtf;)Z	a	resolveBookComponents
		p	0		book
		p	1		commandSource
		p	2		player
	m	(Lccc;)Lazm;	a	useOn
		p	1		context
	m	(Lcga;Lbtf;Lazl;)Lazn;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldr;Lbtf;Ljava/lang/String;)Ljava/lang/String;	a	resolvePage
		p	0		commandSource
		p	1		player
		p	2		text
	m	(Lpj;)Z	a	makeSureTagIsValid
		p	0		nbt
	m	(Lcaa;)I	d	getGeneration
		p	0		stack
	m	(Lcaa;)Z	i	isFoil
		p	1		stack
	m	(Lcaa;)I	k	getPageCount
		p	0		stack
	m	(Lcaa;)Lrm;	m	getName
		p	1		stack
	f	I	a	TITLE_LENGTH
	f	I	b	TITLE_MAX_LENGTH
	f	I	c	PAGE_EDIT_LENGTH
	f	I	d	PAGE_LENGTH
	f	I	e	MAX_PAGES
	f	I	f	MAX_GENERATION
	f	Ljava/lang/String;	g	TAG_TITLE
	f	Ljava/lang/String;	h	TAG_FILTERED_TITLE
	f	Ljava/lang/String;	i	TAG_AUTHOR
	f	Ljava/lang/String;	j	TAG_PAGES
	f	Ljava/lang/String;	r	TAG_FILTERED_PAGES
	f	Ljava/lang/String;	s	TAG_GENERATION
	f	Ljava/lang/String;	t	TAG_RESOLVED
c	cbv	net/minecraft/world/item/alchemy/Potion
	m	(Ljava/lang/String;[Lbaj;)V	<init>	<init>
		p	1		baseName
		p	2		effects
	m	([Lbaj;)V	<init>	<init>
		p	1		effects
	m	()Ljava/util/List;	a	getEffects
	m	(Ljava/lang/String;)Lcbv;	a	byName
		p	0		id
	m	()Z	b	hasInstantEffects
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getName
		p	1		prefix
	f	Ljava/lang/String;	a	name
	f	Lcom/google/common/collect/ImmutableList;	b	effects
c	cbw	net/minecraft/world/item/alchemy/PotionBrewing
	m	()V	a	bootStrap
	m	(Lbzw;)V	a	addContainer
		p	0		item
	m	(Lbzw;Lbzw;Lbzw;)V	a	addContainerRecipe
		p	0		input
		p	1		ingredient
		p	2		output
	m	(Lcaa;)Z	a	isIngredient
		p	0		stack
	m	(Lcaa;Lcaa;)Z	a	hasMix
		p	0		input
		p	1		ingredient
	m	(Lcbv;)Z	a	isBrewablePotion
		p	0		potion
	m	(Lcbv;Lbzw;Lcbv;)V	a	addMix
		p	0		input
		p	1		item
		p	2		output
	m	(Lcaa;)Z	b	isContainerIngredient
		p	0		stack
	m	(Lcaa;Lcaa;)Z	b	hasContainerMix
		p	0		input
		p	1		ingredient
	m	(Lcaa;)Z	c	isPotionIngredient
		p	0		stack
	m	(Lcaa;Lcaa;)Z	c	hasPotionMix
		p	0		input
		p	1		ingredient
	m	(Lcaa;)Z	d	lambda$static$0
		p	0		stack
	m	(Lcaa;Lcaa;)Lcaa;	d	mix
		p	0		ingredient
		p	1		input
	f	I	a	BREWING_TIME_SECONDS
	f	Ljava/util/List;	b	POTION_MIXES
	f	Ljava/util/List;	c	CONTAINER_MIXES
	f	Ljava/util/List;	d	ALLOWED_CONTAINERS
	f	Ljava/util/function/Predicate;	e	ALLOWED_CONTAINER
c	cbw$a	net/minecraft/world/item/alchemy/PotionBrewing$Mix
	m	(Ljava/lang/Object;Lccp;Ljava/lang/Object;)V	<init>	<init>
		p	1		input
		p	2		ingredient
		p	3		output
	f	Ljava/lang/Object;	a	from
	f	Lccp;	b	ingredient
	f	Ljava/lang/Object;	c	to
c	cbx	net/minecraft/world/item/alchemy/PotionUtils
	m	(Lcaa;)Ljava/util/List;	a	getMobEffects
		p	0		stack
	m	(Lcaa;Lcbv;)Lcaa;	a	setPotion
		p	0		stack
		p	1		potion
	m	(Lcaa;Ljava/util/Collection;)Lcaa;	a	setCustomEffects
		p	0		stack
		p	1		effects
	m	(Lcaa;Ljava/util/List;F)V	a	addPotionTooltip
		p	0		stack
		p	1		list
		p	2		durationMultiplier
	m	(Lcbv;)I	a	getColor
		p	0		potion
	m	(Lcbv;Ljava/util/Collection;)Ljava/util/List;	a	getAllEffects
		p	0		potion
		p	1		custom
	m	(Ljava/util/Collection;)I	a	getColor
		p	0		effects
	m	(Lpj;)Ljava/util/List;	a	getAllEffects
		p	0		nbt
	m	(Lpj;Ljava/util/List;)V	a	getCustomEffects
		p	0		nbt
		p	1		list
	m	(Lcaa;)Ljava/util/List;	b	getCustomEffects
		p	0		stack
	m	(Lpj;)Ljava/util/List;	b	getCustomEffects
		p	0		nbt
	m	(Lcaa;)I	c	getColor
		p	0		stack
	m	(Lpj;)Lcbv;	c	getPotion
		p	0		compound
	m	(Lcaa;)Lcbv;	d	getPotion
		p	0		stack
	f	Ljava/lang/String;	a	TAG_CUSTOM_POTION_EFFECTS
	f	Ljava/lang/String;	b	TAG_CUSTOM_POTION_COLOR
	f	Ljava/lang/String;	c	TAG_POTION
	f	I	d	EMPTY_COLOR
	f	Lrm;	e	NO_EFFECT
c	cby	net/minecraft/world/item/alchemy/Potions
	m	(Ljava/lang/String;Lcbv;)Lcbv;	a	register
		p	0		name
		p	1		potion
	f	Lcbv;	A	STRONG_HEALING
	f	Lcbv;	B	HARMING
	f	Lcbv;	C	STRONG_HARMING
	f	Lcbv;	D	POISON
	f	Lcbv;	E	LONG_POISON
	f	Lcbv;	F	STRONG_POISON
	f	Lcbv;	G	REGENERATION
	f	Lcbv;	H	LONG_REGENERATION
	f	Lcbv;	I	STRONG_REGENERATION
	f	Lcbv;	J	STRENGTH
	f	Lcbv;	K	LONG_STRENGTH
	f	Lcbv;	L	STRONG_STRENGTH
	f	Lcbv;	M	WEAKNESS
	f	Lcbv;	N	LONG_WEAKNESS
	f	Lcbv;	O	LUCK
	f	Lcbv;	P	SLOW_FALLING
	f	Lcbv;	Q	LONG_SLOW_FALLING
	f	Lcbv;	a	EMPTY
	f	Lcbv;	b	WATER
	f	Lcbv;	c	MUNDANE
	f	Lcbv;	d	THICK
	f	Lcbv;	e	AWKWARD
	f	Lcbv;	f	NIGHT_VISION
	f	Lcbv;	g	LONG_NIGHT_VISION
	f	Lcbv;	h	INVISIBILITY
	f	Lcbv;	i	LONG_INVISIBILITY
	f	Lcbv;	j	LEAPING
	f	Lcbv;	k	LONG_LEAPING
	f	Lcbv;	l	STRONG_LEAPING
	f	Lcbv;	m	FIRE_RESISTANCE
	f	Lcbv;	n	LONG_FIRE_RESISTANCE
	f	Lcbv;	o	SWIFTNESS
	f	Lcbv;	p	LONG_SWIFTNESS
	f	Lcbv;	q	STRONG_SWIFTNESS
	f	Lcbv;	r	SLOWNESS
	f	Lcbv;	s	LONG_SLOWNESS
	f	Lcbv;	t	STRONG_SLOWNESS
	f	Lcbv;	u	TURTLE_MASTER
	f	Lcbv;	v	LONG_TURTLE_MASTER
	f	Lcbv;	w	STRONG_TURTLE_MASTER
	f	Lcbv;	x	WATER_BREATHING
	f	Lcbv;	y	LONG_WATER_BREATHING
	f	Lcbv;	z	HEALING
c	cbz	net/minecraft/world/item/alchemy/package-info
c	cca	net/minecraft/world/item/context/BlockPlaceContext
	m	(Lbtf;Lazl;Lcaa;Ldvp;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		stack
		p	4		hitResult
	m	(Lccc;)V	<init>	<init>
		p	1		context
	m	(Lcga;Lbtf;Lazl;Lcaa;Ldvp;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Lgt;	a	getClickedPos
	m	(Lcca;Lgt;Lgy;)Lcca;	a	at
		p	0		context
		p	1		pos
		p	2		side
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lgy;	d	getNearestLookingDirection
	m	()Lgy;	e	getNearestLookingVerticalDirection
	m	()[Lgy;	f	getNearestLookingDirections
	f	Z	a	replaceClicked
	f	Lgt;	b	relativePos
c	ccb	net/minecraft/world/item/context/DirectionalPlaceContext
	m	(Lcga;Lgt;Lgy;Lcaa;Lgy;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
		p	4		stack
		p	5		side
	m	()Lgt;	a	getClickedPos
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lgy;	d	getNearestLookingDirection
	m	()[Lgy;	f	getNearestLookingDirections
	m	()Lgy;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	f	Lgy;	b	direction
c	ccb$1	net/minecraft/world/item/context/DirectionalPlaceContext$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ccc	net/minecraft/world/item/context/UseOnContext
	m	(Lbtf;Lazl;Ldvp;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		hit
	m	(Lcga;Lbtf;Lazl;Lcaa;Ldvp;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Lgt;	a	getClickedPos
	m	()Lgy;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	m	()Ldvp;	j	getHitResult
	m	()Lgy;	k	getClickedFace
	m	()Ldvt;	l	getClickLocation
	m	()Z	m	isInside
	m	()Lcaa;	n	getItemInHand
	m	()Lbtf;	o	getPlayer
	m	()Lazl;	p	getHand
	m	()Lcga;	q	getLevel
	f	Lbtf;	a	player
	f	Lazl;	b	hand
	f	Ldvp;	c	hitResult
	f	Lcga;	d	level
	f	Lcaa;	e	itemStack
c	ccd	net/minecraft/world/item/context/package-info
c	cce	net/minecraft/world/item/crafting/AbstractCookingRecipe
	m	(Lccv;Laaj;Ljava/lang/String;Lccp;Lcaa;FI)V	<init>	<init>
		p	1		type
		p	2		id
		p	3		group
		p	4		input
		p	5		output
		p	6		experience
		p	7		cookTime
	m	()Lhi;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	()F	b	getExperience
	m	()Lcaa;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()I	e	getCookingTime
	m	()Laaj;	f	getId
	m	()Lccv;	g	getType
	f	Lccv;	a	type
	f	Laaj;	b	id
	f	Ljava/lang/String;	c	group
	f	Lccp;	d	ingredient
	f	Lcaa;	e	result
	f	F	f	experience
	f	I	g	cookingTime
c	ccf	net/minecraft/world/item/crafting/ArmorDyeRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
c	ccg	net/minecraft/world/item/crafting/BannerDuplicateRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lazf;)Lhi;	b	getRemainingItems
		p	1		inventory
	m	(Lbwd;)Lhi;	b	getRemainingItems
		p	1		inventory
c	cch	net/minecraft/world/item/crafting/BlastingRecipe
	m	(Laaj;Ljava/lang/String;Lccp;Lcaa;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		input
		p	4		output
		p	5		experience
		p	6		cookTime
	m	()Lccu;	V_	getSerializer
	m	()Lcaa;	h	getToastSymbol
c	cci	net/minecraft/world/item/crafting/BookCloningRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lazf;)Lhi;	b	getRemainingItems
		p	1		inventory
	m	(Lbwd;)Lhi;	b	getRemainingItems
		p	1		inventory
c	ccj	net/minecraft/world/item/crafting/CampfireCookingRecipe
	m	(Laaj;Ljava/lang/String;Lccp;Lcaa;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		input
		p	4		output
		p	5		experience
		p	6		cookTime
	m	()Lccu;	V_	getSerializer
	m	()Lcaa;	h	getToastSymbol
c	cck	net/minecraft/world/item/crafting/CraftingRecipe
	m	()Lccv;	g	getType
c	ccl	net/minecraft/world/item/crafting/CustomRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Z	U_	isSpecial
	m	()Lcaa;	c	getResultItem
	m	()Laaj;	f	getId
	f	Laaj;	a	id
c	ccm	net/minecraft/world/item/crafting/FireworkRocketRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	()Lcaa;	c	getResultItem
	f	Lccp;	a	PAPER_INGREDIENT
	f	Lccp;	b	GUNPOWDER_INGREDIENT
	f	Lccp;	c	STAR_INGREDIENT
c	ccn	net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	f	Lccp;	a	STAR_INGREDIENT
c	cco	net/minecraft/world/item/crafting/FireworkStarRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()Lcaa;	c	getResultItem
	f	Lccp;	a	SHAPE_INGREDIENT
	f	Lccp;	b	TRAIL_INGREDIENT
	f	Lccp;	c	FLICKER_INGREDIENT
	f	Ljava/util/Map;	d	SHAPE_BY_ITEM
	f	Lccp;	e	GUNPOWDER_INGREDIENT
c	ccp	net/minecraft/world/item/crafting/Ingredient
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		entries
	m	()[Lcaa;	a	getItems
	m	(I)[Lcaa;	a	lambda$dissolve$2
	m	(Lakh;)Lccp;	a	of
		p	0		tag
	m	(Lcaa;)Z	a	test
	m	(Lccp$c;)Ljava/util/stream/Stream;	a	lambda$dissolve$1
		p	0		entry
	m	(Lcom/google/gson/JsonElement;)Lccp;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;)Lccp$c;	a	valueFromJson
		p	0		json
	m	(Ljava/util/stream/Stream;)Lccp;	a	of
		p	0		stacks
	m	(Lqx;)V	a	toNetwork
		p	1		buf
	m	([Lcaa;)Lccp;	a	of
		p	0		stacks
	m	([Lcfz;)Lccp;	a	of
		p	0		items
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getStackingIds
	m	(I)[Lccp$c;	b	lambda$new$0
	m	(Lcaa;)Z	b	lambda$of$3
		p	0		stack
	m	(Lcom/google/gson/JsonElement;)Lccp$c;	b	lambda$fromJson$4
		p	0		jsonElement
	m	(Ljava/util/stream/Stream;)Lccp;	b	fromValues
		p	0		entries
	m	(Lqx;)Lccp;	b	fromNetwork
		p	0		buf
	m	()Lcom/google/gson/JsonElement;	c	toJson
	m	()Z	d	isEmpty
	m	()Lccp;	e	of
	m	()V	f	dissolve
	f	Lccp;	a	EMPTY
	f	[Lccp$c;	b	values
	f	[Lcaa;	c	itemStacks
	f	Lit/unimi/dsi/fastutil/ints/IntList;	d	stackingIds
c	ccp$a	net/minecraft/world/item/crafting/Ingredient$ItemValue
	m	(Lcaa;)V	<init>	<init>
		p	1		stack
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lcaa;	a	item
c	ccp$b	net/minecraft/world/item/crafting/Ingredient$TagValue
	m	(Lakh;)V	<init>	<init>
		p	1		tag
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lakh;	a	tag
c	ccp$c	net/minecraft/world/item/crafting/Ingredient$Value
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
c	ccq	net/minecraft/world/item/crafting/MapCloningRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
c	ccr	net/minecraft/world/item/crafting/MapExtendingRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Z	U_	isSpecial
	m	()Lccu;	V_	getSerializer
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
c	ccs	net/minecraft/world/item/crafting/Recipe
	m	()Z	U_	isSpecial
	m	()Lccu;	V_	getSerializer
	m	()Lhi;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lccp;)Z	a	lambda$isIncomplete$0
		p	0		ingredient
	m	(Lazf;)Lhi;	b	getRemainingItems
		p	1		inventory
	m	()Lcaa;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()Laaj;	f	getId
	m	()Lccv;	g	getType
	m	()Lcaa;	h	getToastSymbol
	m	()Z	i	isIncomplete
c	cct	net/minecraft/world/item/crafting/RecipeManager
	m	()Z	a	hadErrorsLoading
	m	(Laaj;)Ljava/util/Optional;	a	byKey
		p	1		id
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	0		id
		p	1		json
	m	(Lazf;Lcga;Lccs;)Z	a	lambda$getRecipesFor$5
		p	2		recipe
	m	(Lazf;Lcga;Ljava/util/Map$Entry;)Z	a	lambda$getRecipeFor$3
		p	2		entry
	m	(Lccs;)Ljava/lang/String;	a	lambda$getRecipesFor$6
		p	0		recipe
	m	(Lccv;)Ljava/util/List;	a	getAllRecipesFor
		p	1		type
	m	(Lccv;Lazf;Lcga;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		inventory
		p	3		world
	m	(Lccv;Lazf;Lcga;Laaj;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		inventory
		p	3		world
		p	4		id
	m	(Ljava/lang/Iterable;)V	a	replaceRecipes
		p	1		recipes
	m	(Ljava/lang/Object;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$9
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getRecipeFor$4
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	a	lambda$getRecipeIds$8
		p	0		map
	m	(Ljava/util/Map;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Lcom/google/common/collect/ImmutableMap$Builder;Lccs;)V	a	lambda$replaceRecipes$11
		p	2		recipe
	m	()Ljava/util/Collection;	b	getRecipes
	m	(Lazf;Lcga;Lccs;)Z	b	lambda$getRecipeFor$2
		p	2		recipe
	m	(Lccv;)Lcct$a;	b	createCheck
		p	0		type
	m	(Lccv;Lazf;Lcga;)Ljava/util/List;	b	getRecipesFor
		p	1		type
		p	2		inventory
		p	3		world
	m	(Ljava/util/Map$Entry;)Ljava/util/Map;	b	lambda$apply$1
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	b	lambda$getRecipes$7
		p	0		map
	m	(Lccv;)Ljava/util/Map;	c	byType
		p	1		type
	m	(Lccv;Lazf;Lcga;)Lhi;	c	getRemainingItemsFor
		p	1		type
		p	2		inventory
		p	3		world
	m	()Ljava/util/stream/Stream;	d	getRecipeIds
	m	(Lccv;)Ljava/util/Map;	d	lambda$replaceRecipes$10
		p	0		t
	m	(Lccv;)Lcom/google/common/collect/ImmutableMap$Builder;	e	lambda$apply$0
		p	0		recipeType
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	recipes
	f	Ljava/util/Map;	d	byName
	f	Z	e	hasErrors
c	cct$1	net/minecraft/world/item/crafting/RecipeManager$1
	m	(Lazf;Lcga;)Ljava/util/Optional;	a	getRecipeFor
		p	1		inventory
		p	2		world
	f	Lccv;	a	val$type
	f	Laaj;	b	lastRecipe
c	cct$a	net/minecraft/world/item/crafting/RecipeManager$CachedCheck
	m	(Lazf;Lcga;)Ljava/util/Optional;	a	getRecipeFor
		p	1		inventory
		p	2		world
c	ccu	net/minecraft/world/item/crafting/RecipeSerializer
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	1		id
		p	2		json
	m	(Laaj;Lqx;)Lccs;	a	fromNetwork
		p	1		id
		p	2		buf
	m	(Ljava/lang/String;Lccu;)Lccu;	a	register
		p	0		id
		p	1		serializer
	m	(Lqx;Lccs;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	f	Lccu;	a	SHAPED_RECIPE
	f	Lccu;	b	SHAPELESS_RECIPE
	f	Lcdc;	c	ARMOR_DYE
	f	Lcdc;	d	BOOK_CLONING
	f	Lcdc;	e	MAP_CLONING
	f	Lcdc;	f	MAP_EXTENDING
	f	Lcdc;	g	FIREWORK_ROCKET
	f	Lcdc;	h	FIREWORK_STAR
	f	Lcdc;	i	FIREWORK_STAR_FADE
	f	Lcdc;	j	TIPPED_ARROW
	f	Lcdc;	k	BANNER_DUPLICATE
	f	Lcdc;	l	SHIELD_DECORATION
	f	Lcdc;	m	SHULKER_BOX_COLORING
	f	Lcdc;	n	SUSPICIOUS_STEW
	f	Lcdc;	o	REPAIR_ITEM
	f	Lcdb;	p	SMELTING_RECIPE
	f	Lcdb;	q	BLASTING_RECIPE
	f	Lcdb;	r	SMOKING_RECIPE
	f	Lcdb;	s	CAMPFIRE_COOKING_RECIPE
	f	Lccu;	t	STONECUTTER
	f	Lccu;	u	SMITHING
c	ccv	net/minecraft/world/item/crafting/RecipeType
	m	(Ljava/lang/String;)Lccv;	a	register
		p	0		id
	f	Lccv;	a	CRAFTING
	f	Lccv;	b	SMELTING
	f	Lccv;	c	BLASTING
	f	Lccv;	d	SMOKING
	f	Lccv;	e	CAMPFIRE_COOKING
	f	Lccv;	f	STONECUTTING
	f	Lccv;	g	SMITHING
c	ccv$1	net/minecraft/world/item/crafting/RecipeType$1
	f	Ljava/lang/String;	h	val$name
c	ccw	net/minecraft/world/item/crafting/RepairItemRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lcdu;)V	a	lambda$assemble$0
		p	3		enchantment
c	ccx	net/minecraft/world/item/crafting/ShapedRecipe
	m	(Laaj;Ljava/lang/String;IILhi;Lcaa;)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		width
		p	4		height
		p	5		input
		p	6		output
	m	()Lccu;	V_	getSerializer
	m	()Lhi;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;IIZ)Z	a	matches
		p	1		inv
		p	2		offsetX
		p	3		offsetY
		p	4		flipped
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lccp;)Z	a	lambda$isIncomplete$1
		p	0		ingredient
	m	(Lcom/google/gson/JsonArray;)[Ljava/lang/String;	a	patternFromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;)Lcaa;	a	itemStackFromJson
		p	0		json
	m	(Ljava/lang/String;)I	a	firstNonSpace
		p	0		line
	m	([Ljava/lang/String;)[Ljava/lang/String;	a	shrink
		p	0		pattern
	m	([Ljava/lang/String;Ljava/util/Map;II)Lhi;	a	dissolvePattern
		p	0		pattern
		p	1		symbols
		p	2		width
		p	3		height
	m	(Lccp;)Z	b	lambda$isIncomplete$0
		p	0		ingredient
	m	(Lcom/google/gson/JsonObject;)Lbzw;	b	itemFromJson
		p	0		json
	m	(Ljava/lang/String;)I	b	lastNonSpace
		p	0		pattern
	m	()Lcaa;	c	getResultItem
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	c	keyFromJson
		p	0		json
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	c	lambda$itemFromJson$2
	m	()Ljava/lang/String;	d	getGroup
	m	()Laaj;	f	getId
	m	()Z	i	isIncomplete
	m	()I	j	getWidth
	m	()I	k	getHeight
	f	I	a	width
	f	I	b	height
	f	Lhi;	c	recipeItems
	f	Lcaa;	d	result
	f	Laaj;	e	id
	f	Ljava/lang/String;	f	group
c	ccx$a	net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	1		id
		p	2		json
	m	(Laaj;Lqx;)Lccs;	a	fromNetwork
		p	1		id
		p	2		buf
	m	(Lqx;Lccs;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lqx;Lccx;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccx;	b	fromJson
	m	(Laaj;Lqx;)Lccx;	b	fromNetwork
c	ccy	net/minecraft/world/item/crafting/ShapelessRecipe
	m	(Laaj;Ljava/lang/String;Lcaa;Lhi;)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		output
		p	4		input
	m	()Lccu;	V_	getSerializer
	m	()Lhi;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	()Lcaa;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()Laaj;	f	getId
	f	Laaj;	a	id
	f	Ljava/lang/String;	b	group
	f	Lcaa;	c	result
	f	Lhi;	d	ingredients
c	ccy$a	net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	1		id
		p	2		json
	m	(Laaj;Lqx;)Lccs;	a	fromNetwork
		p	1		id
		p	2		buf
	m	(Lcom/google/gson/JsonArray;)Lhi;	a	itemsFromJson
		p	0		json
	m	(Lqx;Lccs;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lqx;Lccy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccy;	b	fromJson
	m	(Laaj;Lqx;)Lccy;	b	fromNetwork
c	ccz	net/minecraft/world/item/crafting/ShieldDecorationRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
c	cda	net/minecraft/world/item/crafting/ShulkerBoxColoring
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
c	cdb	net/minecraft/world/item/crafting/SimpleCookingSerializer
	m	(Lcdb$a;I)V	<init>	<init>
		p	1		recipeFactory
		p	2		cookingTime
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	1		id
		p	2		json
	m	(Laaj;Lqx;)Lccs;	a	fromNetwork
		p	1		id
		p	2		buf
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$fromJson$0
	m	(Lqx;Lcce;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lqx;Lccs;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Laaj;Lcom/google/gson/JsonObject;)Lcce;	b	fromJson
	m	(Laaj;Lqx;)Lcce;	b	fromNetwork
	f	I	v	defaultCookingTime
	f	Lcdb$a;	w	factory
c	cdb$a	net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
	m	(Laaj;Ljava/lang/String;Lccp;Lcaa;FI)Lcce;	create	create
		p	1		id
		p	2		group
		p	3		input
		p	4		output
		p	5		experience
		p	6		cookTime
c	cdc	net/minecraft/world/item/crafting/SimpleRecipeSerializer
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		factory
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	1		id
		p	2		json
	m	(Laaj;Lqx;)Lccs;	a	fromNetwork
		p	1		id
		p	2		buf
	m	(Lqx;Lccs;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	f	Ljava/util/function/Function;	v	constructor
c	cdd	net/minecraft/world/item/crafting/SingleItemRecipe
	m	(Lccv;Lccu;Laaj;Ljava/lang/String;Lccp;Lcaa;)V	<init>	<init>
		p	1		type
		p	2		serializer
		p	3		id
		p	4		group
		p	5		input
		p	6		output
	m	()Lccu;	V_	getSerializer
	m	()Lhi;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	()Lcaa;	c	getResultItem
	m	()Ljava/lang/String;	d	getGroup
	m	()Laaj;	f	getId
	m	()Lccv;	g	getType
	f	Lccp;	a	ingredient
	f	Lcaa;	b	result
	f	Laaj;	c	id
	f	Ljava/lang/String;	d	group
	f	Lccv;	e	type
	f	Lccu;	f	serializer
c	cdd$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	m	(Lcdd$a$a;)V	<init>	<init>
		p	1		recipeFactory
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	1		id
		p	2		json
	m	(Laaj;Lqx;)Lccs;	a	fromNetwork
		p	1		id
		p	2		buf
	m	(Lqx;Lccs;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lqx;Lcdd;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Laaj;Lcom/google/gson/JsonObject;)Lcdd;	b	fromJson
	m	(Laaj;Lqx;)Lcdd;	b	fromNetwork
	f	Lcdd$a$a;	v	factory
c	cdd$a$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
	m	(Laaj;Ljava/lang/String;Lccp;Lcaa;)Lcdd;	create	create
		p	1		id
		p	2		group
		p	3		input
		p	4		output
c	cde	net/minecraft/world/item/crafting/SmeltingRecipe
	m	(Laaj;Ljava/lang/String;Lccp;Lcaa;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		input
		p	4		output
		p	5		experience
		p	6		cookTime
	m	()Lccu;	V_	getSerializer
	m	()Lcaa;	h	getToastSymbol
c	cdf	net/minecraft/world/item/crafting/SmokingRecipe
	m	(Laaj;Ljava/lang/String;Lccp;Lcaa;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		input
		p	4		output
		p	5		experience
		p	6		cookTime
	m	()Lccu;	V_	getSerializer
	m	()Lcaa;	h	getToastSymbol
c	cdg	net/minecraft/world/item/crafting/StonecutterRecipe
	m	(Laaj;Ljava/lang/String;Lccp;Lcaa;)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		input
		p	4		output
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	()Lcaa;	h	getToastSymbol
c	cdh	net/minecraft/world/item/crafting/SuspiciousStewRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
c	cdi	net/minecraft/world/item/crafting/TippedArrowRecipe
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbwd;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lbwd;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
c	cdj	net/minecraft/world/item/crafting/UpgradeRecipe
	m	(Laaj;Lccp;Lccp;Lcaa;)V	<init>	<init>
		p	1		id
		p	2		base
		p	3		addition
		p	4		result
	m	()Lccu;	V_	getSerializer
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lazf;)Lcaa;	a	assemble
		p	1		inventory
	m	(Lazf;Lcga;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcaa;)Z	a	isAdditionIngredient
		p	1		stack
	m	(Lccp;)Z	a	lambda$isIncomplete$0
		p	0		ingredient
	m	()Lcaa;	c	getResultItem
	m	()Laaj;	f	getId
	m	()Lccv;	g	getType
	m	()Lcaa;	h	getToastSymbol
	m	()Z	i	isIncomplete
	f	Lccp;	a	base
	f	Lccp;	b	addition
	f	Lcaa;	c	result
	f	Laaj;	d	id
c	cdj$a	net/minecraft/world/item/crafting/UpgradeRecipe$Serializer
	m	(Laaj;Lcom/google/gson/JsonObject;)Lccs;	a	fromJson
		p	1		id
		p	2		json
	m	(Laaj;Lqx;)Lccs;	a	fromNetwork
		p	1		id
		p	2		buf
	m	(Lqx;Lccs;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lqx;Lcdj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Laaj;Lcom/google/gson/JsonObject;)Lcdj;	b	fromJson
	m	(Laaj;Lqx;)Lcdj;	b	fromNetwork
c	cdk	net/minecraft/world/item/crafting/package-info
c	cdl	net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cdm	net/minecraft/world/item/enchantment/ArrowFireEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cdn	net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cdo	net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cdp	net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cdq	net/minecraft/world/item/enchantment/BindingCurseEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	c	isCurse
c	cdr	net/minecraft/world/item/enchantment/DamageEnchantment
	m	(Lcdu$a;I[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		typeIndex
		p	3		slots
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbbk;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(Lbbf;Lbaq;I)V	a	doPostAttack
		p	1		user
		p	2		target
		p	3		level
	m	(Lcaa;)Z	a	canEnchant
		p	1		stack
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
	f	I	a	ALL
	f	I	b	UNDEAD
	f	I	c	ARTHROPODS
	f	I	d	type
	f	[Ljava/lang/String;	g	NAMES
	f	[I	h	MIN_COST
	f	[I	i	LEVEL_COST
	f	[I	j	LEVEL_COST_SPAN
c	cds	net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcaa;)Z	a	canEnchant
		p	1		stack
	m	(Lcaa;ILalu;)Z	a	shouldIgnoreDurabilityDrop
		p	0		item
		p	1		level
		p	2		random
	m	(I)I	b	getMaxCost
		p	1		level
c	cdt	net/minecraft/world/item/enchantment/DiggingEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcaa;)Z	a	canEnchant
		p	1		stack
	m	(I)I	b	getMaxCost
		p	1		level
c	cdu	net/minecraft/world/item/enchantment/Enchantment
	m	(Lcdu$a;Lcdv;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		type
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILazz;)I	a	getDamageProtection
		p	1		level
		p	2		source
	m	(ILbbk;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(Lbbf;)Ljava/util/Map;	a	getSlotItems
		p	1		entity
	m	(Lbbf;Lbaq;I)V	a	doPostAttack
		p	1		user
		p	2		target
		p	3		level
	m	(Lcaa;)Z	a	canEnchant
		p	1		stack
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	(Lbbf;Lbaq;I)V	b	doPostHurt
		p	1		user
		p	2		attacker
		p	3		level
	m	(Lcdu;)Z	b	isCompatibleWith
		p	1		other
	m	()Z	c	isCurse
	m	(I)Lcdu;	c	byId
		p	0		id
	m	()Lcdu$a;	d	getRarity
	m	(I)Lrm;	d	getFullname
		p	1		level
	m	()I	e	getMinLevel
	m	()Ljava/lang/String;	f	getOrCreateDescriptionId
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
	f	[Lbav;	a	slots
	f	Lcdu$a;	b	rarity
	f	Lcdv;	e	category
	f	Ljava/lang/String;	f	descriptionId
c	cdu$a	net/minecraft/world/item/enchantment/Enchantment$Rarity
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		weight
	m	()I	a	getWeight
	m	()[Lcdu$a;	b	$values
	f	Lcdu$a;	a	COMMON
	f	Lcdu$a;	b	UNCOMMON
	f	Lcdu$a;	c	RARE
	f	Lcdu$a;	d	VERY_RARE
	f	I	e	weight
	f	[Lcdu$a;	f	$VALUES
c	cdv	net/minecraft/world/item/enchantment/EnchantmentCategory
	m	()[Lcdv;	a	$values
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
	f	Lcdv;	a	ARMOR
	f	Lcdv;	b	ARMOR_FEET
	f	Lcdv;	c	ARMOR_LEGS
	f	Lcdv;	d	ARMOR_CHEST
	f	Lcdv;	e	ARMOR_HEAD
	f	Lcdv;	f	WEAPON
	f	Lcdv;	g	DIGGER
	f	Lcdv;	h	FISHING_ROD
	f	Lcdv;	i	TRIDENT
	f	Lcdv;	j	BREAKABLE
	f	Lcdv;	k	BOW
	f	Lcdv;	l	WEARABLE
	f	Lcdv;	m	CROSSBOW
	f	Lcdv;	n	VANISHABLE
	f	[Lcdv;	o	$VALUES
c	cdv$1	net/minecraft/world/item/enchantment/EnchantmentCategory$1
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$2	net/minecraft/world/item/enchantment/EnchantmentCategory$10
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$3	net/minecraft/world/item/enchantment/EnchantmentCategory$11
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$4	net/minecraft/world/item/enchantment/EnchantmentCategory$12
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$5	net/minecraft/world/item/enchantment/EnchantmentCategory$13
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$6	net/minecraft/world/item/enchantment/EnchantmentCategory$14
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$7	net/minecraft/world/item/enchantment/EnchantmentCategory$2
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$8	net/minecraft/world/item/enchantment/EnchantmentCategory$3
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$9	net/minecraft/world/item/enchantment/EnchantmentCategory$4
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$10	net/minecraft/world/item/enchantment/EnchantmentCategory$5
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$11	net/minecraft/world/item/enchantment/EnchantmentCategory$6
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$12	net/minecraft/world/item/enchantment/EnchantmentCategory$7
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$13	net/minecraft/world/item/enchantment/EnchantmentCategory$8
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdv$14	net/minecraft/world/item/enchantment/EnchantmentCategory$9
	m	(Lbzw;)Z	a	canEnchant
		p	1		item
c	cdw	net/minecraft/world/item/enchantment/EnchantmentHelper
	m	(ILcaa;Z)Ljava/util/List;	a	getAvailableEnchantmentResults
		p	0		power
		p	1		stack
		p	2		treasureAllowed
	m	(Laaj;I)Lpj;	a	storeEnchantment
		p	0		id
		p	1		lvl
	m	(Lalu;IILcaa;)I	a	getEnchantmentCost
		p	0		random
		p	1		slotIndex
		p	2		bookshelfCount
		p	3		stack
	m	(Lalu;Lcaa;IZ)Lcaa;	a	enchantItem
		p	0		random
		p	1		target
		p	2		level
		p	3		treasureAllowed
	m	(Lbbf;)F	a	getSweepingDamageRatio
		p	0		entity
	m	(Lbbf;Lbaq;)V	a	doPostHurtEffects
		p	0		user
		p	1		attacker
	m	(Lbbf;Lbaq;Lcdu;I)V	a	lambda$doPostDamageEffects$5
		p	2		enchantment
		p	3		level
	m	(Lcaa;)Ljava/util/Map;	a	getEnchantments
		p	0		stack
	m	(Lcaa;Lbbk;)F	a	getDamageBonus
		p	0		stack
		p	1		group
	m	(Lcdu;)Laaj;	a	getEnchantmentId
		p	0		enchantment
	m	(Lcdu;Lbbf;)I	a	getEnchantmentLevel
		p	0		enchantment
		p	1		entity
	m	(Lcdu;Lbbf;Ljava/util/function/Predicate;)Ljava/util/Map$Entry;	a	getRandomItemWith
		p	0		enchantment
		p	1		entity
		p	2		condition
	m	(Lcdu;Lcaa;)I	a	getItemEnchantmentLevel
		p	0		enchantment
		p	1		stack
	m	(Lcdw$a;Lcaa;)V	a	runIterationOnItem
		p	0		consumer
		p	1		stack
	m	(Lcdw$a;Ljava/lang/Iterable;)V	a	runIterationOnInventory
		p	0		consumer
		p	1		stacks
	m	(Lcdw$a;Lpj;Lcdu;)V	a	lambda$runIterationOnItem$1
		p	2		enchantment
	m	(Ljava/lang/Iterable;Lazz;)I	a	getDamageProtection
		p	0		equipment
		p	1		source
	m	(Ljava/util/Collection;Lcdu;)Z	a	isEnchantmentCompatible
		p	0		existing
		p	1		candidate
	m	(Ljava/util/List;Lcdx;)V	a	filterCompatibleEnchantments
		p	0		possibleEntries
		p	1		pickedEntry
	m	(Ljava/util/Map;Lcaa;)V	a	setEnchantments
		p	0		enchantments
		p	1		stack
	m	(Ljava/util/Map;Lpj;Lcdu;)V	a	lambda$deserializeEnchantments$0
		p	2		enchantment
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;Lbbk;Lcdu;I)V	a	lambda$getDamageBonus$3
		p	2		enchantment
		p	3		level
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lazz;Lcdu;I)V	a	lambda$getDamageProtection$2
		p	2		enchantment
		p	3		level
	m	(Lpj;)I	a	getEnchantmentLevel
		p	0		nbt
	m	(Lpj;I)V	a	setEnchantmentLevel
		p	0		nbt
		p	1		lvl
	m	(Lpp;)Ljava/util/Map;	a	deserializeEnchantments
		p	0		list
	m	(Lalu;Lcaa;IZ)Ljava/util/List;	b	selectEnchantment
		p	0		random
		p	1		stack
		p	2		level
		p	3		treasureAllowed
	m	(Lbbf;)F	b	getSneakingSpeedBonus
	m	(Lbbf;Lbaq;)V	b	doPostDamageEffects
		p	0		user
		p	1		target
	m	(Lbbf;Lbaq;Lcdu;I)V	b	lambda$doPostHurtEffects$4
		p	2		enchantment
		p	3		level
	m	(Lcaa;)I	b	getFishingLuckBonus
		p	0		stack
	m	(Lcdu;Lbbf;)Ljava/util/Map$Entry;	b	getRandomItemWith
		p	0		enchantment
		p	1		entity
	m	(Lpj;)Laaj;	b	getEnchantmentId
		p	0		nbt
	m	(Lbbf;)I	c	getKnockbackBonus
		p	0		entity
	m	(Lcaa;)I	c	getFishingSpeedBonus
		p	0		stack
	m	(Lbbf;)I	d	getFireAspect
		p	0		entity
	m	(Lcaa;)Z	d	hasBindingCurse
		p	0		stack
	m	(Lbbf;)I	e	getRespiration
		p	0		entity
	m	(Lcaa;)Z	e	hasVanishingCurse
		p	0		stack
	m	(Lbbf;)I	f	getDepthStrider
		p	0		entity
	m	(Lcaa;)I	f	getLoyalty
		p	0		stack
	m	(Lbbf;)I	g	getBlockEfficiency
		p	0		entity
	m	(Lcaa;)I	g	getRiptide
		p	0		stack
	m	(Lbbf;)I	h	getMobLooting
		p	0		entity
	m	(Lcaa;)Z	h	hasChanneling
		p	0		stack
	m	(Lbbf;)Z	i	hasAquaAffinity
		p	0		entity
	m	(Lcaa;)Z	i	lambda$getRandomItemWith$6
		p	0		stack
	m	(Lbbf;)Z	j	hasFrostWalker
		p	0		entity
	m	(Lbbf;)Z	k	hasSoulSpeed
		p	0		entity
	f	Ljava/lang/String;	a	TAG_ENCH_ID
	f	Ljava/lang/String;	b	TAG_ENCH_LEVEL
	f	F	c	SWIFT_SNEAK_EXTRA_FACTOR
c	cdw$a	net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
	m	(Lcdu;I)V	accept	accept
		p	1		enchantment
		p	2		level
c	cdx	net/minecraft/world/item/enchantment/EnchantmentInstance
	m	(Lcdu;I)V	<init>	<init>
		p	1		enchantment
		p	2		level
	f	Lcdu;	a	enchantment
	f	I	b	level
c	cdy	net/minecraft/world/item/enchantment/Enchantments
	m	(Ljava/lang/String;Lcdu;)Lcdu;	a	register
		p	0		name
		p	1		enchantment
	f	Lcdu;	A	FLAMING_ARROWS
	f	Lcdu;	B	INFINITY_ARROWS
	f	Lcdu;	C	FISHING_LUCK
	f	Lcdu;	D	FISHING_SPEED
	f	Lcdu;	E	LOYALTY
	f	Lcdu;	F	IMPALING
	f	Lcdu;	G	RIPTIDE
	f	Lcdu;	H	CHANNELING
	f	Lcdu;	I	MULTISHOT
	f	Lcdu;	J	QUICK_CHARGE
	f	Lcdu;	K	PIERCING
	f	Lcdu;	L	MENDING
	f	Lcdu;	M	VANISHING_CURSE
	f	[Lbav;	N	ARMOR_SLOTS
	f	Lcdu;	a	ALL_DAMAGE_PROTECTION
	f	Lcdu;	b	FIRE_PROTECTION
	f	Lcdu;	c	FALL_PROTECTION
	f	Lcdu;	d	BLAST_PROTECTION
	f	Lcdu;	e	PROJECTILE_PROTECTION
	f	Lcdu;	f	RESPIRATION
	f	Lcdu;	g	AQUA_AFFINITY
	f	Lcdu;	h	THORNS
	f	Lcdu;	i	DEPTH_STRIDER
	f	Lcdu;	j	FROST_WALKER
	f	Lcdu;	k	BINDING_CURSE
	f	Lcdu;	l	SOUL_SPEED
	f	Lcdu;	m	SWIFT_SNEAK
	f	Lcdu;	n	SHARPNESS
	f	Lcdu;	o	SMITE
	f	Lcdu;	p	BANE_OF_ARTHROPODS
	f	Lcdu;	q	KNOCKBACK
	f	Lcdu;	r	FIRE_ASPECT
	f	Lcdu;	s	MOB_LOOTING
	f	Lcdu;	t	SWEEPING_EDGE
	f	Lcdu;	u	BLOCK_EFFICIENCY
	f	Lcdu;	v	SILK_TOUCH
	f	Lcdu;	w	UNBREAKING
	f	Lcdu;	x	BLOCK_FORTUNE
	f	Lcdu;	y	POWER_ARROWS
	f	Lcdu;	z	PUNCH_ARROWS
c	cdz	net/minecraft/world/item/enchantment/FireAspectEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cea	net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	m	(Lcdu$a;Lcdv;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		type
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ceb	net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lbbf;Lcga;Lgt;I)V	a	onEntityMoved
		p	0		entity
		p	1		world
		p	2		blockPos
		p	3		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
c	cec	net/minecraft/world/item/enchantment/KnockbackEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slot
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ced	net/minecraft/world/item/enchantment/LootBonusEnchantment
	m	(Lcdu$a;Lcdv;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		type
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cee	net/minecraft/world/item/enchantment/MendingEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
c	cef	net/minecraft/world/item/enchantment/MultiShotEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	ceg	net/minecraft/world/item/enchantment/OxygenEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ceh	net/minecraft/world/item/enchantment/ProtectionEnchantment
	m	(Lcdu$a;Lceh$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		protectionType
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILazz;)I	a	getDamageProtection
		p	1		level
		p	2		source
	m	(Lbbf;D)D	a	getExplosionKnockbackAfterDampener
		p	0		entity
		p	1		velocity
	m	(Lbbf;I)I	a	getFireAfterDampener
		p	0		entity
		p	1		duration
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
	f	Lceh$a;	a	type
c	ceh$a	net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		basePower
		p	4		powerPerLevel
	m	()I	a	getMinCost
	m	()I	b	getLevelCost
	m	()[Lceh$a;	c	$values
	f	Lceh$a;	a	ALL
	f	Lceh$a;	b	FIRE
	f	Lceh$a;	c	FALL
	f	Lceh$a;	d	EXPLOSION
	f	Lceh$a;	e	PROJECTILE
	f	I	f	minCost
	f	I	g	levelCost
	f	[Lceh$a;	h	$VALUES
c	cei	net/minecraft/world/item/enchantment/QuickChargeEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slot
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cej	net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
c	cek	net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
	m	(I)F	e	getSweepingDamageRatio
		p	0		level
c	cel	net/minecraft/world/item/enchantment/SwiftSneakEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		rarity
		p	2		slots
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
c	cem	net/minecraft/world/item/enchantment/ThornsEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILalu;)Z	a	shouldHit
		p	0		level
		p	1		random
	m	(Lcaa;)Z	a	canEnchant
		p	1		stack
	m	(Ljava/util/Map$Entry;Lbbf;)V	a	lambda$doPostHurt$0
		p	1		entity
	m	(I)I	b	getMaxCost
		p	1		level
	m	(ILalu;)I	b	getDamage
		p	0		level
		p	1		random
	m	(Lbbf;Lbaq;I)V	b	doPostHurt
		p	1		user
		p	2		attacker
		p	3		level
	f	F	a	CHANCE_PER_LEVEL
c	cen	net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ceo	net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbbk;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(I)I	b	getMaxCost
		p	1		level
c	cep	net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ceq	net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cer	net/minecraft/world/item/enchantment/UntouchingEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	ces	net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	c	isCurse
c	cet	net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcdu;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	ceu	net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	m	(Lcdu$a;[Lbav;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cev	net/minecraft/world/item/enchantment/package-info
c	cew	net/minecraft/world/item/package-info
c	cex	net/minecraft/world/item/trading/Merchant
	m	(ILbte;Lbtf;)Lbvp;	a	lambda$openTradingScreen$0
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lbtf;Lrm;I)V	a	openTradingScreen
		p	1		player
		p	2		test
		p	3		levelProgress
	m	(Lcey;)V	a	notifyTrade
		p	1		offer
	m	(Lcez;)V	a	overrideOffers
		p	1		offers
	m	(Lbtf;)V	e	setTradingPlayer
		p	1		customer
	m	()I	fK	getVillagerXp
	m	()Lbtf;	fL	getTradingPlayer
	m	()Lcez;	fN	getOffers
	m	()Z	fO	showProgressBar
	m	()Lajd;	fP	getNotifyTradeSound
	m	()Z	fT	isClientSide
	m	()Z	fX	canRestock
	m	(Lcaa;)V	m	notifyTradeUpdated
		p	1		stack
	m	(I)V	t	overrideXp
		p	1		experience
c	cey	net/minecraft/world/item/trading/MerchantOffer
	m	(Lcaa;Lcaa;IIF)V	<init>	<init>
		p	1		buyItem
		p	2		sellItem
		p	3		maxUses
		p	4		merchantExperience
		p	5		priceMultiplier
	m	(Lcaa;Lcaa;Lcaa;IIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		maxUses
		p	5		merchantExperience
		p	6		priceMultiplier
	m	(Lcaa;Lcaa;Lcaa;IIIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
	m	(Lcaa;Lcaa;Lcaa;IIIFI)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
		p	8		demandBonus
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	()Lcaa;	a	getBaseCostA
	m	(I)V	a	addToSpecialPriceDiff
		p	1		increment
	m	(Lcaa;Lcaa;)Z	a	satisfiedBy
		p	1		first
		p	2		second
	m	()Lcaa;	b	getCostA
	m	(I)V	b	setSpecialPriceDiff
		p	1		specialPrice
	m	(Lcaa;Lcaa;)Z	b	take
		p	1		firstBuyStack
		p	2		secondBuyStack
	m	()Lcaa;	c	getCostB
	m	(Lcaa;Lcaa;)Z	c	isRequiredItem
		p	1		given
		p	2		sample
	m	()Lcaa;	d	getResult
	m	()V	e	updateDemand
	m	()Lcaa;	f	assemble
	m	()I	g	getUses
	m	()V	h	resetUses
	m	()I	i	getMaxUses
	m	()V	j	increaseUses
	m	()I	k	getDemand
	m	()V	l	resetSpecialPriceDiff
	m	()I	m	getSpecialPriceDiff
	m	()F	n	getPriceMultiplier
	m	()I	o	getXp
	m	()Z	p	isOutOfStock
	m	()V	q	setToOutOfStock
	m	()Z	r	needsRestock
	m	()Z	s	shouldRewardExp
	m	()Lpj;	t	createTag
	f	Lcaa;	a	baseCostA
	f	Lcaa;	b	costB
	f	Lcaa;	c	result
	f	I	d	uses
	f	I	e	maxUses
	f	Z	f	rewardExp
	f	I	g	specialPriceDiff
	f	I	h	demand
	f	F	i	priceMultiplier
	f	I	j	xp
c	cez	net/minecraft/world/item/trading/MerchantOffers
	m	(I)V	<init>	<init>
		p	1		size
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	()Lpj;	a	createTag
	m	(Lcaa;Lcaa;I)Lcey;	a	getRecipeFor
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		index
	m	(Lqx;)V	a	writeToStream
		p	1		buf
	m	(Lqx;Lcey;)V	a	lambda$writeToStream$0
		p	0		buf2
		p	1		offer
	m	(Lqx;)Lcez;	b	createFromStream
		p	0		buf
	m	(Lqx;)Lcey;	c	lambda$createFromStream$1
		p	0		buf2
c	cfa	net/minecraft/world/item/trading/package-info
c	cfb	net/minecraft/world/level/BaseCommandBlock
	m	()Z	G_	shouldInformAdmins
	m	(I)V	a	setSuccessCount
		p	1		successCount
	m	(Lbtf;)Lazm;	a	usedBy
		p	1		player
	m	(Lcga;)Z	a	performCommand
		p	1		world
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$performCommand$0
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	(Z)V	a	setTrackOutput
		p	1		trackOutput
	m	(Lpj;)V	b	load
		p	1		nbt
	m	(Lrm;)V	b	setName
		p	1		name
	m	(Lrm;)V	c	setLastOutput
		p	1		lastOutput
	m	()Lafo;	e	getLevel
	m	()V	f	onUpdated
	m	()Ldvt;	g	getPosition
	m	()Ljava/lang/String;	h	lambda$performCommand$1
	m	()Ldr;	i	createCommandSourceStack
	m	()Z	i_	acceptsSuccess
	m	()I	j	getSuccessCount
	m	()Z	j_	acceptsFailure
	m	()Lrm;	k	getLastOutput
	m	()Ljava/lang/String;	l	getCommand
	m	()Lrm;	m	getName
	m	()Z	n	isTrackOutput
	f	Ljava/text/SimpleDateFormat;	b	TIME_FORMAT
	f	Lrm;	c	DEFAULT_NAME
	f	J	d	lastExecution
	f	Z	e	updateLastExecution
	f	I	f	successCount
	f	Z	g	trackOutput
	f	Lrm;	h	lastOutput
	f	Ljava/lang/String;	i	command
	f	Lrm;	j	name
c	cfc	net/minecraft/world/level/BaseSpawner
	m	()D	a	getSpin
	m	(DDDLbaq;)Lbaq;	a	lambda$serverTick$0
		p	6		entity
	m	(Lafo;Lgt;)V	a	serverTick
		p	1		world
		p	2		pos
	m	(Lbau;)V	a	setEntityId
		p	1		type
	m	(Lcga;)Lbaq;	a	getOrCreateDisplayEntity
		p	1		world
	m	(Lcga;I)Z	a	onEventTriggered
		p	1		world
		p	2		status
	m	(Lcga;Lgt;)V	a	clientTick
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Lcga;Lgt;Laxy$b;)V	a	lambda$load$5
	m	(Lcga;Lgt;Lcgq;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
	m	(Lcga;Lgt;Lpj;)V	a	load
		p	1		world
		p	2		pos
		p	3		nbt
	m	(Ljava/lang/String;)V	a	lambda$load$4
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	()D	b	getoSpin
	m	(Lcga;Lgt;)Z	b	isNearPlayer
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Laxy$b;)V	b	lambda$delay$1
	m	(Ljava/lang/String;)V	b	lambda$load$3
	m	()Ljava/lang/IllegalStateException;	c	lambda$save$6
	m	(Lcga;Lgt;)V	c	delay
		p	1		world
		p	2		pos
	m	(Ljava/lang/String;)V	c	lambda$load$2
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	EVENT_SPAWN
	f	I	c	spawnDelay
	f	Laxw;	d	spawnPotentials
	f	Lcgq;	e	nextSpawnData
	f	D	f	spin
	f	D	g	oSpin
	f	I	h	minSpawnDelay
	f	I	i	maxSpawnDelay
	f	I	j	spawnCount
	f	Lbaq;	k	displayEntity
	f	I	l	maxNearbyEntities
	f	I	m	requiredPlayerRange
	f	I	n	spawnRange
c	cfd	net/minecraft/world/level/BlockAndTintGetter
	m	(Lcgj;Lgt;)I	a	getBrightness
		p	1		type
		p	2		pos
	m	(Lgt;Lcfl;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Lgy;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lgt;I)I	b	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lgt;)Z	g	canSeeSky
		p	1		pos
	m	()Ldop;	l_	getLightEngine
c	cfe	net/minecraft/world/level/BlockCollisions
	m	(Lcfk;Lbaq;Ldvo;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		box
	m	(Lcfk;Lbaq;Ldvo;Z)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		box
		p	4		forEntity
	m	()Ldwm;	a	computeNext
	m	(II)Lcfg;	a	getChunk
		p	1		x
		p	2		z
	f	Ldvo;	a	box
	f	Ldvy;	b	context
	f	Lgw;	c	cursor
	f	Lgt$a;	d	pos
	f	Ldwm;	e	entityShape
	f	Lcfk;	f	collisionGetter
	f	Z	g	onlySuffocatingBlocks
	f	Lcfg;	h	cachedBlockGetter
	f	J	i	cachedBlockGetterPos
c	cff	net/minecraft/world/level/BlockEventData
	m	(Lgt;Lciw;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	()Lgt;	a	pos
	m	()Lciw;	b	block
	m	()I	c	paramA
	m	()I	d	paramB
	f	Lgt;	a	pos
	f	Lciw;	b	block
	f	I	c	paramA
	f	I	d	paramB
c	cfg	net/minecraft/world/level/BlockGetter
	m	()I	L	getMaxLightLevel
	m	(Lcfi;)Ldvp;	a	isBlockInLine
		p	1		context
	m	(Lcfi;Lgt;)Ldvp;	a	lambda$isBlockInLine$0
		p	1		context
		p	2		pos
	m	(Lcfj;)Ldvp;	a	clip
		p	1		context
	m	(Lcfj;Lgt;)Ldvp;	a	lambda$clip$2
		p	1		context
		p	2		pos
	m	(Ldvo;)Ljava/util/stream/Stream;	a	getBlockStates
		p	1		box
	m	(Ldvt;Ldvt;Lgt;Ldwm;Lcur;)Ldvp;	a	clipWithInteractionOverride
		p	1		start
		p	2		end
		p	3		pos
		p	4		shape
		p	5		state
	m	(Ldvt;Ldvt;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	traverseBlocks
		p	0		start
		p	1		end
		p	2		context
		p	3		blockHitFactory
		p	4		missFactory
	m	(Ldwm;Ljava/util/function/Supplier;)D	a	getBlockFloorHeight
		p	1		blockCollisionShape
		p	2		belowBlockCollisionShapeGetter
	m	(Lgt;Lcsn;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(Lcfi;)Ldvp;	b	lambda$isBlockInLine$1
		p	0		context
	m	(Lcfj;)Ldvp;	b	lambda$clip$3
		p	0		context
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)Ldwm;	f	lambda$getBlockFloorHeight$4
	m	(Lgt;)I	h	getLightEmission
		p	1		pos
	m	(Lgt;)D	i	getBlockFloorHeight
		p	1		pos
c	cfh	net/minecraft/world/level/ChunkPos
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(J)V	<init>	<init>
		p	1		pos
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	()J	a	toLong
	m	(I)I	a	getBlockX
		p	1		offset
	m	(II)Lcfh;	a	minFromRegion
		p	0		x
		p	1		z
	m	(III)Lgt;	a	getBlockAt
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(J)I	a	getX
		p	0		pos
	m	(Lcfh;)I	a	getChessboardDistance
		p	1		pos
	m	(Lcfh;I)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		center
		p	1		radius
	m	(Lcfh;Lcfh;)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		pos1
		p	1		pos2
	m	(Lgt;)J	a	asLong
		p	0		pos
	m	()I	b	getMiddleBlockX
	m	(I)I	b	getBlockZ
		p	1		offset
	m	(II)Lcfh;	b	maxFromRegion
		p	0		x
		p	1		z
	m	(J)I	b	getZ
		p	0		pos
	m	()I	c	getMiddleBlockZ
	m	(I)Lgt;	c	getMiddleBlockPosition
		p	1		y
	m	(II)J	c	asLong
		p	0		chunkX
		p	1		chunkZ
	m	()I	d	getMinBlockX
	m	(II)I	d	hash
		p	0		x
		p	1		z
	m	()I	e	getMinBlockZ
	m	()I	f	getMaxBlockX
	m	()I	g	getMaxBlockZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionLocalX
	m	()I	k	getRegionLocalZ
	m	()Lgt;	l	getWorldPosition
	f	J	a	INVALID_CHUNK_POS
	f	Lcfh;	b	ZERO
	f	I	c	REGION_SIZE
	f	I	d	REGION_MAX_INDEX
	f	I	e	x
	f	I	f	z
	f	I	g	SAFETY_MARGIN
	f	J	h	COORD_BITS
	f	J	i	COORD_MASK
	f	I	j	REGION_BITS
	f	I	k	REGION_MASK
	f	I	l	HASH_A
	f	I	m	HASH_C
	f	I	n	HASH_Z_XOR
c	cfh$1	net/minecraft/world/level/ChunkPos$1
	f	Lcfh;	a	val$from
	f	Lcfh;	b	val$to
	f	I	c	val$zDiff
	f	I	d	val$xDiff
	f	Lcfh;	e	pos
c	cfi	net/minecraft/world/level/ClipBlockStateContext
	m	(Ldvt;Ldvt;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		statePredicate
	m	()Ldvt;	a	getTo
	m	()Ldvt;	b	getFrom
	m	()Ljava/util/function/Predicate;	c	isTargetBlock
	f	Ldvt;	a	from
	f	Ldvt;	b	to
	f	Ljava/util/function/Predicate;	c	block
c	cfj	net/minecraft/world/level/ClipContext
	m	(Ldvt;Ldvt;Lcfj$a;Lcfj$b;Lbaq;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		shapeType
		p	4		fluidHandling
		p	5		entity
	m	()Ldvt;	a	getTo
	m	(Lcur;Lcfg;Lgt;)Ldwm;	a	getBlockShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldoy;Lcfg;Lgt;)Ldwm;	a	getFluidShape
		p	1		state
		p	2		world
		p	3		pos
	m	()Ldvt;	b	getFrom
	f	Ldvt;	a	from
	f	Ldvt;	b	to
	f	Lcfj$a;	c	block
	f	Lcfj$b;	d	fluid
	f	Ldvy;	e	collisionContext
c	cfj$a	net/minecraft/world/level/ClipContext$Block
	m	(Ljava/lang/String;ILcfj$c;)V	<init>	<init>
		p	3		provider
	m	()[Lcfj$a;	a	$values
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		context
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcfj$a;	a	COLLIDER
	f	Lcfj$a;	b	OUTLINE
	f	Lcfj$a;	c	VISUAL
	f	Lcfj$a;	d	FALLDAMAGE_RESETTING
	f	Lcfj$c;	e	shapeGetter
	f	[Lcfj$a;	f	$VALUES
c	cfj$b	net/minecraft/world/level/ClipContext$Fluid
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()[Lcfj$b;	a	$values
	m	(Ldoy;)Z	a	canPick
		p	1		state
	m	(Ldoy;)Z	b	lambda$static$2
		p	0		state
	m	(Ldoy;)Z	c	lambda$static$1
		p	0		state
	m	(Ldoy;)Z	d	lambda$static$0
		p	0		state
	f	Lcfj$b;	a	NONE
	f	Lcfj$b;	b	SOURCE_ONLY
	f	Lcfj$b;	c	ANY
	f	Lcfj$b;	d	WATER
	f	Ljava/util/function/Predicate;	e	canPick
	f	[Lcfj$b;	f	$VALUES
c	cfj$c	net/minecraft/world/level/ClipContext$ShapeGetter
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
c	cfk	net/minecraft/world/level/CollisionGetter
	m	(DDDLdvo;)Ldvo;	a	lambda$findFreePosition$3
	m	(Lbaq;Ldvo;)Z	a	noCollision
		p	1		entity
		p	2		box
	m	(Lbaq;Ldwm;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbaq;Ldwm;Ldvt;DDD)Ljava/util/Optional;	a	findFreePosition
		p	1		entity
		p	2		shape
		p	3		target
		p	4		x
		p	6		y
		p	8		z
	m	(Lcur;Lgt;Ldvy;)Z	a	isUnobstructed
		p	1		state
		p	2		pos
		p	3		context
	m	(Ldwm;)Ljava/util/stream/Stream;	a	lambda$findFreePosition$2
	m	(Lbaq;Ldvo;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Ldvo;)Z	b	noCollision
		p	1		box
	m	(Ldwm;)Z	b	lambda$findFreePosition$1
	m	(II)Lcfg;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lbaq;Ldvo;)Ljava/lang/Iterable;	c	getCollisions
		p	1		entity
		p	2		box
	m	(Lbaq;Ldvo;)Ljava/lang/Iterable;	d	getBlockCollisions
		p	1		entity
		p	2		box
	m	(Lbaq;Ldvo;)Z	e	collidesWithSuffocatingBlock
		p	1		entity
		p	2		box
	m	(Lbaq;)Z	f	isUnobstructed
		p	1		entity
	m	(Lbaq;Ldvo;)Ldwm;	f	borderCollision
		p	1		entity
		p	2		box
	m	(Lbaq;)Z	g	noCollision
		p	1		entity
	m	(Lbaq;Ldvo;)Ljava/util/Iterator;	g	lambda$getBlockCollisions$0
	m	()Lcwh;	p_	getWorldBorder
c	cfl	net/minecraft/world/level/ColorResolver
	m	(Lcgw;DD)I	getColor	getColor
		p	1		biome
		p	2		x
		p	4		z
c	cfm	net/minecraft/world/level/CommonLevelAccessor
	m	(Lbaq;Ldwm;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lczu$a;Lgt;)Lgt;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgt;Lcsn;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lbaq;Ldvo;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
	m	()Lhn;	s	registryAccess
c	cfn	net/minecraft/world/level/CustomSpawner
	m	(Lafo;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
c	cfo	net/minecraft/world/level/DataPackConfig
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		enabled
		p	2		disabled
	m	()Ljava/util/List;	a	getEnabled
	m	(Lcfo;)Ljava/util/List;	a	lambda$static$1
		p	0		settings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()Ljava/util/List;	b	getDisabled
	m	(Lcfo;)Ljava/util/List;	b	lambda$static$0
		p	0		settings
	f	Lcfo;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	enabled
	f	Ljava/util/List;	d	disabled
c	cfp	net/minecraft/world/level/EmptyBlockGetter
	m	()[Lcfp;	a	$values
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	f	Lcfp;	a	INSTANCE
	f	[Lcfp;	b	$VALUES
c	cfq	net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lcfs;Lcfg;Lgt;Lcur;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Lcfs;Lcfg;Lgt;Lcur;Ldoy;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	m	(Lcfs;Lcfg;Lgt;Lcur;Ldoy;Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$getBlockExplosionResistance$0
		p	6		max
	f	Lbaq;	a	source
c	cfr	net/minecraft/world/level/EntityGetter
	m	(DDDD)Z	a	hasNearbyAlivePlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		range
	m	(DDDDLjava/util/function/Predicate;)Lbtf;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(DDDDZ)Lbtf;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		ignoreCreative
	m	(Lbaq;D)Lbtf;	a	getNearestPlayer
		p	1		entity
		p	2		maxDistance
	m	(Lbaq;Ldvo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbaq;Ldwm;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbbf;)Z	a	lambda$getNearbyEntities$1
	m	(Lbli;DDD)Lbtf;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		x
		p	4		y
		p	6		z
	m	(Lbli;Lbbf;)Lbtf;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
	m	(Lbli;Lbbf;DDD)Lbtf;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
	m	(Lbli;Lbbf;Ldvo;)Ljava/util/List;	a	getNearbyPlayers
		p	1		targetPredicate
		p	2		entity
		p	3		box
	m	(Lcym;Ldvo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ljava/lang/Class;Lbli;Lbbf;DDDLdvo;)Lbbf;	a	getNearestEntity
		p	1		entityClass
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		box
	m	(Ljava/lang/Class;Lbli;Lbbf;Ldvo;)Ljava/util/List;	a	getNearbyEntities
		p	1		entityClass
		p	2		targetPredicate
		p	3		targetingEntity
		p	4		box
	m	(Ljava/lang/Class;Ldvo;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
	m	(Ljava/lang/Class;Ldvo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
		p	3		predicate
	m	(Ljava/util/List;Lbli;Lbbf;DDD)Lbbf;	a	getNearestEntity
		p	1		entityList
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
	m	(Lbaq;Ldvo;)Ljava/util/List;	a_	getEntities
		p	1		except
		p	2		box
	m	(Lbaq;Ldvo;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Lbbf;)Z	b	lambda$getNearestEntity$0
	m	(Ljava/util/UUID;)Lbtf;	b	getPlayerByUUID
		p	1		uuid
	m	()Ljava/util/List;	w	players
c	cfs	net/minecraft/world/level/Explosion
	m	(Lcga;Lbaq;DDDF)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
	m	(Lcga;Lbaq;DDDFLjava/util/List;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		affectedBlocks
	m	(Lcga;Lbaq;DDDFZLcfs$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
	m	(Lcga;Lbaq;DDDFZLcfs$a;Ljava/util/List;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
		p	12		affectedBlocks
	m	(Lcga;Lbaq;Lazz;Lcft;DDDFZLcfs$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		damageSource
		p	4		behavior
		p	5		x
		p	7		y
		p	9		z
		p	11		power
		p	12		createFire
		p	13		destructionType
	m	()V	a	explode
	m	(Lbaq;)Lcft;	a	makeDamageCalculator
		p	1		entity
	m	(Ldvt;Lbaq;)F	a	getSeenPercent
		p	0		source
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lcaa;Lgt;)V	a	addBlockDrops
		p	0		stacks
		p	1		stack
		p	2		pos
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lgt;Lcaa;)V	a	lambda$finalizeExplosion$0
		p	2		stack
	m	(Z)V	a	finalizeExplosion
		p	1		particles
	m	()Lazz;	b	getDamageSource
	m	()Ljava/util/Map;	c	getHitPlayers
	m	()Lbbf;	d	getSourceMob
	m	()V	e	clearToBlow
	m	()Ljava/util/List;	f	getToBlow
	f	Lcft;	a	EXPLOSION_DAMAGE_CALCULATOR
	f	I	b	MAX_DROPS_PER_COMBINED_STACK
	f	Z	c	fire
	f	Lcfs$a;	d	blockInteraction
	f	Lalu;	e	random
	f	Lcga;	f	level
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	Lbaq;	j	source
	f	F	k	radius
	f	Lazz;	l	damageSource
	f	Lcft;	m	damageCalculator
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	n	toBlow
	f	Ljava/util/Map;	o	hitPlayers
c	cfs$a	net/minecraft/world/level/Explosion$BlockInteraction
	m	()[Lcfs$a;	a	$values
	f	Lcfs$a;	a	NONE
	f	Lcfs$a;	b	BREAK
	f	Lcfs$a;	c	DESTROY
	f	[Lcfs$a;	d	$VALUES
c	cft	net/minecraft/world/level/ExplosionDamageCalculator
	m	(Lcfs;Lcfg;Lgt;Lcur;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Lcfs;Lcfg;Lgt;Lcur;Ldoy;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
c	cfu	net/minecraft/world/level/FoliageColor
	m	()I	a	getEvergreenColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		pixels
	m	()I	b	getBirchColor
	m	()I	c	getDefaultColor
	m	()I	d	getMangroveColor
	f	[I	a	pixels
c	cfv	net/minecraft/world/level/ForcedChunksSavedData
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		chunks
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getChunks
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lpj;)Lcfv;	b	load
		p	0		nbt
	f	Ljava/lang/String;	a	FILE_ID
	f	Ljava/lang/String;	b	TAG_FORCED
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	chunks
c	cfw	net/minecraft/world/level/GameRules
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		rules
	m	()Lpj;	a	createTag
	m	(Lcfw$c;)V	a	visitGameRuleTypes
		p	0		visitor
	m	(Lcfw$c;Lcfw$e;Lcfw$f;)V	a	callVisitorCap
		p	0		consumer
		p	1		key
		p	2		type
	m	(Lcfw$e;)Lcfw$g;	a	getRule
		p	1		key
	m	(Lcfw$e;Lcfw;Lnet/minecraft/server/MinecraftServer;)V	a	assignCap
		p	1		key
		p	2		rules
		p	3		server
	m	(Lcfw;Lnet/minecraft/server/MinecraftServer;)V	a	assignFrom
		p	1		rules
		p	2		server
	m	(Lcfw;Lnet/minecraft/server/MinecraftServer;Lcfw$e;)V	a	lambda$assignFrom$8
		p	3		key
	m	(Lcom/mojang/serialization/DynamicLike;)V	a	loadFromTag
	m	(Lcom/mojang/serialization/DynamicLike;Lcfw$e;Lcfw$g;)V	a	lambda$loadFromTag$5
		p	1		key
		p	2		rule
	m	(Ljava/lang/String;Lcfw$b;Lcfw$f;)Lcfw$e;	a	register
		p	0		name
		p	1		category
		p	2		type
	m	(Ljava/util/Map$Entry;)Lcfw$g;	a	lambda$copy$6
	m	(Lnet/minecraft/server/MinecraftServer;Lcfw$a;)V	a	lambda$static$2
		p	0		server
		p	1		rule
	m	(Lpj;Lcfw$e;Lcfw$g;)V	a	lambda$createTag$4
		p	1		key
		p	2		rule
	m	()Lcfw;	b	copy
	m	(Lcfw$c;Lcfw$e;Lcfw$f;)V	b	lambda$visitGameRuleTypes$7
		p	1		key
		p	2		type
	m	(Lcfw$e;)Z	b	getBoolean
		p	1		rule
	m	(Ljava/util/Map$Entry;)Lcfw$g;	b	lambda$new$3
		p	0		e
	m	(Lnet/minecraft/server/MinecraftServer;Lcfw$a;)V	b	lambda$static$1
		p	0		server
		p	1		rule
	m	(Lcfw$e;)I	c	getInt
		p	1		rule
	m	(Lcfw$e;)Ljava/lang/String;	d	lambda$static$0
		p	0		key
	f	Lcfw$e;	A	RULE_DO_IMMEDIATE_RESPAWN
	f	Lcfw$e;	B	RULE_DROWNING_DAMAGE
	f	Lcfw$e;	C	RULE_FALL_DAMAGE
	f	Lcfw$e;	D	RULE_FIRE_DAMAGE
	f	Lcfw$e;	E	RULE_FREEZE_DAMAGE
	f	Lcfw$e;	F	RULE_DO_PATROL_SPAWNING
	f	Lcfw$e;	G	RULE_DO_TRADER_SPAWNING
	f	Lcfw$e;	H	RULE_DO_WARDEN_SPAWNING
	f	Lcfw$e;	I	RULE_FORGIVE_DEAD_PLAYERS
	f	Lcfw$e;	J	RULE_UNIVERSAL_ANGER
	f	Lcfw$e;	K	RULE_PLAYERS_SLEEPING_PERCENTAGE
	f	Lorg/slf4j/Logger;	L	LOGGER
	f	Ljava/util/Map;	M	GAME_RULE_TYPES
	f	Ljava/util/Map;	N	rules
	f	I	a	DEFAULT_RANDOM_TICK_SPEED
	f	Lcfw$e;	b	RULE_DOFIRETICK
	f	Lcfw$e;	c	RULE_MOBGRIEFING
	f	Lcfw$e;	d	RULE_KEEPINVENTORY
	f	Lcfw$e;	e	RULE_DOMOBSPAWNING
	f	Lcfw$e;	f	RULE_DOMOBLOOT
	f	Lcfw$e;	g	RULE_DOBLOCKDROPS
	f	Lcfw$e;	h	RULE_DOENTITYDROPS
	f	Lcfw$e;	i	RULE_COMMANDBLOCKOUTPUT
	f	Lcfw$e;	j	RULE_NATURAL_REGENERATION
	f	Lcfw$e;	k	RULE_DAYLIGHT
	f	Lcfw$e;	l	RULE_LOGADMINCOMMANDS
	f	Lcfw$e;	m	RULE_SHOWDEATHMESSAGES
	f	Lcfw$e;	n	RULE_RANDOMTICKING
	f	Lcfw$e;	o	RULE_SENDCOMMANDFEEDBACK
	f	Lcfw$e;	p	RULE_REDUCEDDEBUGINFO
	f	Lcfw$e;	q	RULE_SPECTATORSGENERATECHUNKS
	f	Lcfw$e;	r	RULE_SPAWN_RADIUS
	f	Lcfw$e;	s	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	f	Lcfw$e;	t	RULE_MAX_ENTITY_CRAMMING
	f	Lcfw$e;	u	RULE_WEATHER_CYCLE
	f	Lcfw$e;	v	RULE_LIMITED_CRAFTING
	f	Lcfw$e;	w	RULE_MAX_COMMAND_CHAIN_LENGTH
	f	Lcfw$e;	x	RULE_ANNOUNCE_ADVANCEMENTS
	f	Lcfw$e;	y	RULE_DISABLE_RAIDS
	f	Lcfw$e;	z	RULE_DOINSOMNIA
c	cfw$a	net/minecraft/world/level/GameRules$BooleanValue
	m	(Lcfw$f;Z)V	<init>	<init>
		p	1		type
		p	2		initialValue
	m	()Z	a	get
	m	(Lcfw$a;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcfw$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Lcfw$a;)V	a	lambda$create$1
		p	0		server
		p	1		rule
	m	(Z)Lcfw$f;	a	create
		p	0		initialValue
	m	(ZLcfw$f;)Lcfw$a;	a	lambda$create$0
		p	1		type
	m	(ZLjava/util/function/BiConsumer;)Lcfw$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	()Ljava/lang/String;	b	serialize
	m	()I	c	getCommandResult
	m	()Lcfw$a;	d	getSelf
	m	()Lcfw$a;	e	copy
	m	()Lcfw$g;	f	copy
	m	()Lcfw$g;	g	getSelf
	f	Z	b	value
c	cfw$b	net/minecraft/world/level/GameRules$Category
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		category
	m	()Ljava/lang/String;	a	getDescriptionId
	m	()[Lcfw$b;	b	$values
	f	Lcfw$b;	a	PLAYER
	f	Lcfw$b;	b	MOBS
	f	Lcfw$b;	c	SPAWNING
	f	Lcfw$b;	d	DROPS
	f	Lcfw$b;	e	UPDATES
	f	Lcfw$b;	f	CHAT
	f	Lcfw$b;	g	MISC
	f	Ljava/lang/String;	h	descriptionId
	f	[Lcfw$b;	i	$VALUES
c	cfw$c	net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	m	(Lcfw$e;Lcfw$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Lcfw$e;Lcfw$f;)V	b	visitBoolean
		p	1		key
		p	2		type
	m	(Lcfw$e;Lcfw$f;)V	c	visitInteger
		p	1		key
		p	2		type
c	cfw$d	net/minecraft/world/level/GameRules$IntegerValue
	m	(Lcfw$f;I)V	<init>	<init>
		p	1		rule
		p	2		initialValue
	m	()I	a	get
	m	(I)Lcfw$f;	a	create
		p	0		initialValue
	m	(ILcfw$f;)Lcfw$d;	a	lambda$create$0
		p	1		type
	m	(ILjava/util/function/BiConsumer;)Lcfw$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ILnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	(Lcfw$d;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcfw$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Lcfw$d;)V	a	lambda$create$1
		p	0		server
		p	1		rule
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Z	b	tryDeserialize
		p	1		input
	m	()I	c	getCommandResult
	m	(Ljava/lang/String;)I	c	safeParse
		p	0		input
	m	()Lcfw$d;	d	getSelf
	m	()Lcfw$d;	e	copy
	m	()Lcfw$g;	f	copy
	m	()Lcfw$g;	g	getSelf
	f	I	b	value
c	cfw$e	net/minecraft/world/level/GameRules$Key
	m	(Ljava/lang/String;Lcfw$b;)V	<init>	<init>
		p	1		name
		p	2		category
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	b	getDescriptionId
	m	()Lcfw$b;	c	getCategory
	f	Ljava/lang/String;	a	id
	f	Lcfw$b;	b	category
c	cfw$f	net/minecraft/world/level/GameRules$Type
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lcfw$h;)V	<init>	<init>
		p	1		argumentType
		p	2		ruleFactory
		p	3		changeCallback
		p	4		ruleAcceptor
	m	()Lcfw$g;	a	createRule
	m	(Lcfw$c;Lcfw$e;)V	a	callVisitor
		p	1		consumer
		p	2		key
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	createArgument
		p	1		name
	f	Ljava/util/function/Supplier;	a	argument
	f	Ljava/util/function/Function;	b	constructor
	f	Ljava/util/function/BiConsumer;	c	callback
	f	Lcfw$h;	d	visitorCaller
c	cfw$g	net/minecraft/world/level/GameRules$Value
	m	(Lcfw$f;)V	<init>	<init>
		p	1		type
	m	(Lcfw$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	onChanged
		p	1		server
	m	()Ljava/lang/String;	b	serialize
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	setFromArgument
		p	1		context
		p	2		name
	m	()I	c	getCommandResult
	m	()Lcfw$g;	f	copy
	m	()Lcfw$g;	g	getSelf
	f	Lcfw$f;	a	type
c	cfw$h	net/minecraft/world/level/GameRules$VisitorCaller
	m	(Lcfw$c;Lcfw$e;Lcfw$f;)V	call	call
		p	1		consumer
		p	2		key
		p	3		type
c	cfx	net/minecraft/world/level/GameType
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lcfx;	a	byId
		p	0		id
	m	(ILcfx;)Lcfx;	a	byId
		p	0		id
		p	1		defaultMode
	m	(Lbtc;)V	a	updatePlayerAbilities
		p	1		abilities
	m	(Lcfx;)I	a	getNullableId
		p	0		gameMode
	m	(Ljava/lang/String;)Lcfx;	a	byName
		p	0		name
	m	(Ljava/lang/String;Lcfx;)Lcfx;	a	byName
		p	0		name
		p	1		defaultMode
	m	()Ljava/lang/String;	b	getName
	m	(I)Lcfx;	b	byNullableId
		p	0		id
	m	()Lrm;	c	getLongDisplayName
	m	()Lrm;	d	getShortDisplayName
	m	()Z	e	isBlockPlacingRestricted
	m	()Z	f	isCreative
	m	()Z	g	isSurvival
	m	()[Lcfx;	h	$values
	f	Lcfx;	a	SURVIVAL
	f	Lcfx;	b	CREATIVE
	f	Lcfx;	c	ADVENTURE
	f	Lcfx;	d	SPECTATOR
	f	Lcfx;	e	DEFAULT_MODE
	f	I	f	NOT_SET
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	Lrm;	i	shortName
	f	Lrm;	j	longName
	f	[Lcfx;	k	$VALUES
c	cfy	net/minecraft/world/level/GrassColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		map
	f	[I	a	pixels
c	cfz	net/minecraft/world/level/ItemLike
	m	()Lbzw;	l	asItem
c	cga	net/minecraft/world/level/Level
	m	(Ldra;Laai;Lhc;Ljava/util/function/Supplier;ZZJI)V	<init>	<init>
		p	1		properties
		p	2		registryRef
		p	3		dimension
		p	4		profiler
		p	5		isClient
		p	6		debugWorld
		p	7		seed
		p	9		maxChainedNeighborUpdates
	m	()Lcyo;	F	getEntities
	m	(Lgt;)Z	F	isInWorldBoundsHorizontal
		p	0		pos
	m	()Ljava/lang/String;	G	gatherChunkSourceStats
	m	()Ldwr;	H	getScoreboard
	m	()Z	M	isDay
	m	()Z	N	isNight
	m	()V	O	tickBlockEntities
	m	()V	P	updateSkyBrightness
	m	()Lgt;	Q	getSharedSpawnPos
	m	()F	R	getSharedSpawnAngle
	m	()V	S	prepareWeather
	m	()V	T	disconnect
	m	()J	U	getGameTime
	m	()J	V	getDayTime
	m	()Lcfw;	W	getGameRules
	m	()Z	X	isThundering
	m	()Z	Y	isRaining
	m	()Laai;	Z	dimensionTypeId
	m	()Ljava/lang/String;	a	lambda$fillReportDetails$4
	m	(DDDDDDLpj;)V	a	createFireworks
		p	1		x
		p	3		y
		p	5		z
		p	7		velocityX
		p	9		velocityY
		p	11		velocityZ
		p	13		nbt
	m	(DDDLajd;Lajf;FFZ)V	a	playLocalSound
		p	1		x
		p	3		y
		p	5		z
		p	7		sound
		p	8		category
		p	9		volume
		p	10		pitch
		p	11		useDistance
	m	(F)F	a	getSunAngle
		p	1		tickDelta
	m	(I)Lbaq;	a	getEntity
		p	1		id
	m	(II)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Lgt;	a	getBlockRandomPos
		p	1		x
		p	2		y
		p	3		z
	m	(IILcwq;Z)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(ILgt;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Lbaq;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbaq;DDDFLcfs$a;)Lcfs;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		destructionType
	m	(Lbaq;DDDFZLcfs$a;)Lcfs;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		createFire
		p	10		destructionType
	m	(Lbaq;Lazz;Lcft;DDDFZLcfs$a;)Lcfs;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		destructionType
	m	(Lbaq;Ldvo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbaq;Ljava/util/function/Predicate;Ljava/util/List;Lbaq;)V	a	lambda$getEntities$1
		p	3		entity
	m	(Lbtf;DDDLajd;Lajf;FF)V	a	playSound
		p	1		player
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
	m	(Lbtf;DDDLajd;Lajf;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lbtf;Lbaq;Lajd;Lajf;FF)V	a	playSound
		p	1		player
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lbtf;Lbaq;Lajd;Lajf;FFJ)V	a	playSeededSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lbtf;Lgt;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Lbtf;Lgt;Lajd;Lajf;FF)V	a	playSound
		p	1		player
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcsl;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lctu;)V	a	addBlockEntityTicker
		p	1		ticker
	m	(Lcur;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcym;Ldvo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Lczu$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgt;Lbaq;)Z	a	loadedAndEntityCanStandOn
		p	1		pos
		p	2		entity
	m	(Lgt;Lbaq;Lgy;)Z	a	loadedAndEntityCanStandOnFace
		p	1		pos
		p	2		entity
		p	3		direction
	m	(Lgt;Lciw;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Lgt;Lciw;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lgt;Lciw;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lciw;Lgy;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Lgt;Lcur;)V	a	addDestroyBlockEffect
		p	1		pos
		p	2		state
	m	(Lgt;Lcur;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Lgt;Lcur;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgt;Lcur;Lcur;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Lgt;Lcur;Lcur;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Lgt;Lgy;)Z	a	hasSignal
		p	1		pos
		p	2		direction
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgt;ZLbaq;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lgy;Lcur;Lgt;Lgt;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lhc;)Ljava/lang/IllegalArgumentException;	a	lambda$new$0
	m	(Lim;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lim;ZDDDDDD)V	a	addParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(Ljava/lang/String;)Ldqj;	a	getMapData
		p	1		id
	m	(Ljava/lang/String;Ldqj;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Ljava/util/function/Consumer;Lbaq;)V	a	guardEntityTick
		p	1		tickConsumer
		p	2		entity
	m	(Ljava/util/function/Predicate;Ljava/util/List;Lcym;Lbaq;)V	a	lambda$getEntities$2
		p	3		entity
	m	(Lq;)Lr;	a	fillReportDetails
		p	1		report
	m	(Lso;)V	a	sendPacketToServer
		p	1		packet
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	()Lhc;	aa	dimensionTypeRegistration
	m	()Laai;	ab	dimension
	m	()Lawc;	ac	getProfiler
	m	()Ljava/util/function/Supplier;	ad	getProfilerSupplier
	m	()Z	ae	isDebug
	m	(F)F	b	getThunderLevel
		p	1		delta
	m	(I)Z	b	isOutsideSpawnableHeight
		p	0		y
	m	(ILgt;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Lgt;Lcur;)Z	b	setBlockAndUpdate
		p	1		pos
		p	2		state
	m	(Lgt;Lcur;Lcur;)V	b	setBlocksDirty
		p	1		pos
		p	2		old
		p	3		updated
	m	(Lgt;Lgy;)I	b	getSignal
		p	1		pos
		p	2		direction
	m	(Lgt;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Lim;DDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lim;ZDDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(ZZ)V	b	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(F)V	c	setThunderLevel
		p	1		thunderGradient
	m	(I)V	c	setSkyFlashTime
		p	1		lightningTicksLeft
	m	(II)Lcfg;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lgt;Lciw;)V	c	updateNeighbourForOutputSignal
		p	1		pos
		p	2		block
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	(F)F	d	getRainLevel
		p	1		delta
	m	(II)Lcww;	d	getChunk
	m	(Lgt;)Lazk;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(F)V	e	setRainLevel
		p	1		rainGradient
	m	(Lbaq;)Z	h	shouldTickDeath
		p	1		entity
	m	(Lgt;)Z	j	isInWorldBounds
		p	1		pos
	m	(Lgt;)Z	k	isInSpawnableBounds
		p	0		pos
	m	()Z	k_	isClientSide
	m	(Lgt;)Lcww;	l	getChunkAt
		p	1		pos
	m	()Ldop;	l_	getLightEngine
	m	(Lgt;)Z	m	shouldTickBlocksAt
		p	1		pos
	m	()I	m_	getSeaLevel
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	(Lgt;)V	n	removeBlockEntity
		p	1		pos
	m	()Ldqq;	n_	getLevelData
	m	()Ljava/lang/String;	o	lambda$fillReportDetails$3
	m	(Lgt;)Z	o	isLoaded
		p	1		pos
	m	()I	o_	getSkyDarken
	m	(Lgt;)V	p	blockEntityChanged
		p	1		pos
	m	()Lcwh;	p_	getWorldBorder
	m	()Lcct;	q	getRecipeManager
	m	(Lgt;)I	q	getDirectSignalTo
		p	1		pos
	m	()Lcxx;	q_	dimensionType
	m	()Z	r	noSave
	m	(Lgt;)Z	r	hasNeighborSignal
		p	1		pos
	m	()Lalu;	r_	getRandom
	m	(Lgt;)I	s	getBestNeighborSignal
		p	1		pos
	m	()Lcgy;	s_	getBiomeManager
	m	(Lgt;)Z	t	isRainingAt
		p	1		pos
	m	()J	t_	nextSubTickCount
	m	()I	u	getFreeMapId
	m	(Lgt;)Z	u	isHumidAt
		p	1		pos
	f	Z	A	isDebug
	f	I	B	skyDarken
	f	Lalu;	C	threadSafeRandom
	f	Laai;	D	dimensionTypeId
	f	Lhc;	E	dimensionTypeRegistration
	f	Ljava/util/function/Supplier;	F	profiler
	f	Lcwh;	G	worldBorder
	f	Lcgy;	H	biomeManager
	f	Laai;	I	dimension
	f	J	J	subTickCount
	f	[Lgy;	a	DIRECTIONS
	f	Ljava/util/List;	b	pendingBlockEntityTickers
	f	Z	c	tickingBlockEntities
	f	Lcom/mojang/serialization/Codec;	d	RESOURCE_KEY_CODEC
	f	Laai;	e	OVERWORLD
	f	Laai;	f	NETHER
	f	Laai;	g	END
	f	I	h	MAX_LEVEL_SIZE
	f	I	i	LONG_PARTICLE_CLIP_RANGE
	f	I	j	SHORT_PARTICLE_CLIP_RANGE
	f	I	k	MAX_BRIGHTNESS
	f	I	l	TICKS_PER_DAY
	f	I	m	MAX_ENTITY_SPAWN_Y
	f	I	n	MIN_ENTITY_SPAWN_Y
	f	Ljava/util/List;	o	blockEntityTickers
	f	Ldqb;	p	neighborUpdater
	f	I	q	randValue
	f	I	r	addend
	f	F	s	oRainLevel
	f	F	t	rainLevel
	f	F	u	oThunderLevel
	f	F	v	thunderLevel
	f	Lalu;	w	random
	f	Ldra;	x	levelData
	f	Z	y	isClientSide
	f	Ljava/lang/Thread;	z	thread
c	cga$1	net/minecraft/world/level/Level$1
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
	f	Lcxx;	a	val$dimensionType
	f	Lcga;	b	this$0
c	cgb	net/minecraft/world/level/LevelAccessor
	m	()Lcwp;	I	getChunkSource
	m	()Ldwz;	J	getFluidTicks
	m	()Ldwz;	K	getBlockTicks
	m	(Lbaq;Lcyy;Ldvt;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lbaq;Lcyy;Lgt;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lbtf;ILgt;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lbtf;Lgt;Lajd;Lajf;FF)V	a	playSound
		p	1		player
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcyy;Ldvt;Lcyy$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Lcyy;Lgt;Lcyy$a;)V	a	gameEvent
		p	1		event
		p	2		pos
		p	3		emitter
	m	(Lgt;Lciw;I)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
	m	(Lgt;Lciw;ILdxh;)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
		p	4		priority
	m	(Lgt;Ldox;I)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
	m	(Lgt;Ldox;ILdxh;)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
		p	4		priority
	m	(Lgt;Ljava/lang/Object;I)Ldxd;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
	m	(Lgt;Ljava/lang/Object;ILdxh;)Ldxd;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
		p	4		priority
	m	(Lgy;Lcur;Lgt;Lgt;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lim;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	()J	af	dayTime
	m	()Lazj;	ag	getDifficulty
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lgt;Lciw;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(ILgt;I)V	c	levelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Lgt;)Lazk;	d_	getCurrentDifficultyAt
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldqq;	n_	getLevelData
	m	()Lalu;	r_	getRandom
	m	()J	t_	nextSubTickCount
c	cgc	net/minecraft/world/level/LevelHeightAccessor
	m	()I	ah	getMaxBuildHeight
	m	()I	ai	getSectionsCount
	m	()I	aj	getMinSection
	m	()I	ak	getMaxSection
	m	(I)Z	d	isOutsideBuildHeight
		p	1		y
	m	(I)I	e	getSectionIndex
		p	1		y
	m	(II)Lcgc;	e	create
		p	0		bottomY
		p	1		height
	m	(I)I	f	getSectionIndexFromSectionY
		p	1		coord
	m	(I)I	g	getSectionYFromSectionIndex
		p	1		index
	m	()I	u_	getMinBuildHeight
	m	(Lgt;)Z	v	isOutsideBuildHeight
		p	1		pos
	m	()I	v_	getHeight
c	cgc$1	net/minecraft/world/level/LevelHeightAccessor$1
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	f	I	a	val$height
	f	I	b	val$minBuildHeight
c	cgd	net/minecraft/world/level/LevelReader
	m	(Lgt;)F	A	getLightLevelDependentMagicValue
		p	1		pos
	m	(Lgt;)Lcwm;	B	getChunk
		p	1		pos
	m	(Lgt;)Z	C	isWaterAt
		p	1		pos
	m	(Lgt;)I	D	getMaxLocalRawBrightness
		p	1		pos
	m	(Lgt;)Z	E	hasChunkAt
		p	1		pos
	m	(II)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Lhc;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIIIII)Z	a	hasChunksAt
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(IILcwq;)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		status
	m	(IILcwq;Z)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Lczu$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lczu$a;Lgt;)Lgt;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgt;Lcfl;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Lgt;Lgt;)Z	a	hasChunksAt
		p	1		min
		p	2		max
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Z	b	hasChunksAt
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(II)Lcfg;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Ldvo;)Ljava/util/stream/Stream;	c	getBlockStatesIfLoaded
		p	1		box
	m	(Lgt;I)I	c	getMaxLocalRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lgt;Lgy;)I	c	getDirectSignal
		p	1		pos
		p	2		direction
	m	(Ldvo;)Z	d	containsAnyLiquid
		p	1		box
	m	(II)Z	f	hasChunkAt
		p	1		x
		p	2		z
	m	(III)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Z	k_	isClientSide
	m	()I	m_	getSeaLevel
	m	()I	o_	getSkyDarken
	m	()Lcxx;	q_	dimensionType
	m	()Lcgy;	s_	getBiomeManager
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	m	(Lgt;)Lhc;	w	getBiome
		p	1		pos
	m	(Lgt;)Z	x	isEmptyBlock
		p	1		pos
	m	(Lgt;)Z	y	canSeeSkyFromBelowWater
		p	1		pos
	m	(Lgt;)F	z	getPathfindingCostFromLightLevels
		p	1		pos
c	cge	net/minecraft/world/level/LevelSettings
	m	(Ljava/lang/String;Lcfx;ZLazj;ZLcfw;Lcfo;)V	<init>	<init>
		p	1		name
		p	2		gameMode
		p	3		hardcore
		p	4		difficulty
		p	5		allowCommands
		p	6		gameRules
		p	7		dataPackSettings
	m	()Ljava/lang/String;	a	levelName
	m	(Lazj;)Lcge;	a	withDifficulty
		p	1		difficulty
	m	(Lcfo;)Lcge;	a	withDataPackConfig
		p	1		dataPackSettings
	m	(Lcfx;)Lcge;	a	withGameType
		p	1		mode
	m	(Lcom/mojang/serialization/Dynamic;Lcfo;)Lcge;	a	parse
		p	0		dynamic
		p	1		dataPackSettings
	m	(Ljava/lang/Number;)Lazj;	a	lambda$parse$0
	m	()Lcfx;	b	gameType
	m	()Z	c	hardcore
	m	()Lazj;	d	difficulty
	m	()Z	e	allowCommands
	m	()Lcfw;	f	gameRules
	m	()Lcfo;	g	getDataPackConfig
	m	()Lcge;	h	copy
	f	Ljava/lang/String;	a	levelName
	f	Lcfx;	b	gameType
	f	Z	c	hardcore
	f	Lazj;	d	difficulty
	f	Z	e	allowCommands
	f	Lcfw;	f	gameRules
	f	Lcfo;	g	dataPackConfig
c	cgf	net/minecraft/world/level/LevelSimulatedRW
c	cgg	net/minecraft/world/level/LevelSimulatedReader
	m	(Lczu$a;Lgt;)Lgt;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgt;Lcsn;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
c	cgh	net/minecraft/world/level/LevelTimeAccess
	m	()J	af	dayTime
	m	()F	al	getMoonBrightness
	m	()I	am	getMoonPhase
	m	(F)F	f	getTimeOfDay
		p	1		tickDelta
c	cgi	net/minecraft/world/level/LevelWriter
	m	(Lgt;Lcur;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Lgt;Lcur;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgt;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgt;ZLbaq;)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
	m	(Lgt;ZLbaq;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lbaq;)Z	b	addFreshEntity
		p	1		entity
	m	(Lgt;Z)Z	b	destroyBlock
		p	1		pos
		p	2		drop
c	cgj	net/minecraft/world/level/LightLayer
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		value
	m	()[Lcgj;	a	$values
	f	Lcgj;	a	SKY
	f	Lcgj;	b	BLOCK
	f	I	c	surrounding
	f	[Lcgj;	d	$VALUES
c	cgk	net/minecraft/world/level/LocalMobCapCalculator
	m	(Lafb;)V	<init>	<init>
		p	1		threadedAnvilChunkStorage
	m	(Lafp;)Lcgk$a;	a	lambda$addMob$1
		p	0		player
	m	(Lbbi;Lcfh;)Z	a	canSpawn
		p	1		spawnGroup
		p	2		chunkPos
	m	(Lcfh;)Ljava/util/List;	a	getPlayersNear
		p	1		chunkPos
	m	(Lcfh;J)Ljava/util/List;	a	lambda$getPlayersNear$0
		p	2		pos
	m	(Lcfh;Lbbi;)V	a	addMob
		p	1		chunkPos
		p	2		spawnGroup
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	playersNearChunk
	f	Ljava/util/Map;	b	playerMobCounts
	f	Lafb;	c	chunkMap
c	cgk$a	net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	m	(Lbbi;)V	a	add
		p	1		spawnGroup
	m	(Lbbi;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$add$0
		p	0		group
		p	1		density
	m	(Lbbi;)Z	b	canSpawn
		p	1		spawnGroup
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	counts
c	cgl	net/minecraft/world/level/NaturalSpawner
	m	(I)[Lbbi;	a	lambda$static$1
	m	(ILjava/lang/Iterable;Lcgl$b;Lcgk;)Lcgl$d;	a	createState
		p	0		spawningChunkCount
		p	1		entities
		p	2		chunkSource
	m	(Lafo;Lbau;)Lbbh;	a	getMobForSpawn
		p	0		world
		p	1		type
	m	(Lafo;Lbbh;D)Z	a	isValidPositionForMob
		p	0		world
		p	1		entity
		p	2		squaredDistance
	m	(Lafo;Lbbi;Lcgr;Lcwn;Lchi$c;Lgt$a;D)Z	a	isValidSpawnPostitionForType
		p	0		world
		p	1		group
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		spawnEntry
		p	5		pos
		p	6		squaredDistance
	m	(Lafo;Lcgr;Lcwn;Lbbi;Lalu;Lgt;)Ljava/util/Optional;	a	getRandomSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		random
		p	5		pos
	m	(Lafo;Lcgr;Lcwn;Lbbi;Lchi$c;Lgt;)Z	a	canSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		spawnEntry
		p	5		pos
	m	(Lafo;Lcgr;Lcwn;Lbbi;Lgt;Lhc;)Laya;	a	mobsAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		pos
		p	5		biomeEntry
	m	(Lafo;Lcwm;Lgt$a;D)Z	a	isRightDistanceToPlayerAndSpawnPoint
		p	0		world
		p	1		chunk
		p	2		pos
		p	3		squaredDistance
	m	(Lafo;Lcww;Lcgl$d;ZZZ)V	a	spawnForChunk
		p	0		world
		p	1		chunk
		p	2		info
		p	3		spawnAnimals
		p	4		spawnMonsters
		p	5		rareSpawn
	m	(Lbau;Lgt;Lcwm;)Z	a	lambda$spawnCategoryForPosition$3
		p	0		type
		p	1		pos
		p	2		chunk
	m	(Lbbh;Lcwm;)V	a	lambda$spawnCategoryForPosition$4
		p	0		entity
		p	1		chunk
	m	(Lbbi;)Z	a	lambda$static$0
		p	0		spawnGroup
	m	(Lbbi;Lafo;Lcwm;Lgt;Lcgl$c;Lcgl$a;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		chunk
		p	3		pos
		p	4		checker
		p	5		runner
	m	(Lbbi;Lafo;Lcww;Lcgl$c;Lcgl$a;)V	a	spawnCategoryForChunk
		p	0		group
		p	1		world
		p	2		chunk
		p	3		checker
		p	4		runner
	m	(Lbbi;Lafo;Lgt;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		pos
	m	(Lbby$c;Lcgd;Lgt;Lbau;)Z	a	isSpawnPositionOk
		p	0		location
		p	1		world
		p	2		pos
		p	3		entityType
	m	(Lcfg;Lgt;Lcur;Ldoy;Lbau;)Z	a	isValidEmptySpawnBlock
		p	0		blockView
		p	1		pos
		p	2		state
		p	3		fluidState
		p	4		entityType
	m	(Lcga;Lcww;)Lgt;	a	getRandomPosWithin
		p	0		world
		p	1		chunk
	m	(Lcgd;Lbau;II)Lgt;	a	getTopNonCollidingPos
		p	0		world
		p	1		entityType
		p	2		x
		p	3		z
	m	(Lcgp;Lhc;Lcfh;Lalu;)V	a	spawnMobsForChunkGeneration
		p	0		world
		p	2		chunkPos
		p	3		random
	m	(Lgt;Lafo;Lbbi;Lcgr;)Z	a	isInNetherFortressBounds
		p	0		pos
		p	1		world
		p	2		spawnGroup
		p	3		structureAccessor
	m	(Lgt;Lbaq;Lcgo;Lcgk;Lbbi;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lcww;)V	a	lambda$createState$2
	m	(Lgt;Lcwm;)Lcgw;	a	getRoughBiome
		p	0		pos
		p	1		chunk
	f	I	a	SPAWN_DISTANCE_CHUNK
	f	I	b	SPAWN_DISTANCE_BLOCK
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MIN_SPAWN_DISTANCE
	f	I	e	MAGIC_NUMBER
	f	[Lbbi;	f	SPAWNING_CATEGORIES
c	cgl$1	net/minecraft/world/level/NaturalSpawner$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
c	cgl$a	net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
	m	(Lbbh;Lcwm;)V	run	run
		p	1		entity
		p	2		chunk
c	cgl$b	net/minecraft/world/level/NaturalSpawner$ChunkGetter
	m	(JLjava/util/function/Consumer;)V	query	query
		p	1		pos
		p	3		chunkConsumer
c	cgl$c	net/minecraft/world/level/NaturalSpawner$SpawnPredicate
	m	(Lbau;Lgt;Lcwm;)Z	test	test
		p	1		type
		p	2		pos
		p	3		chunk
c	cgl$d	net/minecraft/world/level/NaturalSpawner$SpawnState
	m	(ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lcgo;Lcgk;)V	<init>	<init>
		p	1		spawningChunkCount
		p	2		groupToCount
		p	3		densityField
		p	4		densityCapper
	m	()I	a	getSpawnableChunkCount
	m	(Lbau;Lgt;Lcwm;)Z	a	canSpawn
		p	1		type
		p	2		pos
		p	3		chunk
	m	(Lbbh;Lcwm;)V	a	afterSpawn
		p	1		entity
		p	2		chunk
	m	(Lbbi;Lcfh;)Z	a	canSpawnForCategory
		p	1		group
		p	2		chunkPos
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getMobCategoryCounts
	f	I	a	spawnableChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	mobCategoryCounts
	f	Lcgo;	c	spawnPotential
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	unmodifiableMobCategoryCounts
	f	Lcgk;	e	localMobCapCalculator
	f	Lgt;	f	lastCheckedPos
	f	Lbau;	g	lastCheckedType
	f	D	h	lastCharge
c	cgm	net/minecraft/world/level/NoiseColumn
	m	(I[Lcur;)V	<init>	<init>
		p	1		startY
		p	2		states
	m	(I)Lcur;	a	getBlock
		p	1		y
	m	(ILcur;)V	a	setBlock
		p	1		y
		p	2		state
	f	I	a	minY
	f	[Lcur;	b	column
c	cgn	net/minecraft/world/level/PathNavigationRegion
	m	(Lcga;Lgt;Lgt;)V	<init>	<init>
		p	1		world
		p	2		minPos
		p	3		maxPos
	m	()Lawc;	a	getProfiler
	m	(II)Lcwm;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lcga;)Lhc;	a	lambda$new$0
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(Lbaq;Ldvo;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(II)Lcfg;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)Lcwm;	d	getChunk
		p	1		pos
	m	()Lcwh;	p_	getWorldBorder
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
	f	I	a	centerX
	f	I	b	centerZ
	f	[[Lcwm;	c	chunks
	f	Z	d	allEmpty
	f	Lcga;	e	level
	f	Ljava/util/function/Supplier;	f	plains
c	cgo	net/minecraft/world/level/PotentialCalculator
	m	(Lgt;D)V	a	addCharge
		p	1		pos
		p	2		mass
	m	(Lgt;D)D	b	getPotentialEnergyChange
		p	1		pos
		p	2		mass
	f	Ljava/util/List;	a	charges
c	cgo$a	net/minecraft/world/level/PotentialCalculator$PointCharge
	m	(Lgt;D)V	<init>	<init>
		p	1		pos
		p	2		mass
	m	(Lgt;)D	a	getPotentialChange
		p	1		pos
	f	Lgt;	a	pos
	f	D	b	charge
c	cgp	net/minecraft/world/level/ServerLevelAccessor
	m	()Lafo;	D	getLevel
	m	(Lbaq;)V	a_	addFreshEntityWithPassengers
		p	1		entity
c	cgq	net/minecraft/world/level/SpawnData
	m	()Lpj;	a	getEntityToSpawn
	m	(Lcgq;)Ljava/util/Optional;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lpj;)V	a	lambda$new$3
		p	0		nbt
	m	()Ljava/util/Optional;	b	getCustomSpawnRules
	m	(Lcgq;)Lpj;	b	lambda$static$0
		p	0		entry
	m	()Lpj;	c	entityToSpawn
	m	()Ljava/util/Optional;	d	customSpawnRules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Ljava/lang/String;	c	DEFAULT_TYPE
	f	Lpj;	d	entityToSpawn
	f	Ljava/util/Optional;	e	customSpawnRules
c	cgq$a	net/minecraft/world/level/SpawnData$CustomSpawnRules
	m	()Lali;	a	blockLightLimit
	m	(Lali;)Lcom/mojang/serialization/DataResult;	a	checkLightBoundaries
		p	0		provider
	m	(Lcgq$a;)Lali;	a	lambda$static$1
		p	0		rules
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()Lali;	b	skyLightLimit
	m	(Lcgq$a;)Lali;	b	lambda$static$0
		p	0		rules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lali;	b	blockLightLimit
	f	Lali;	c	skyLightLimit
	f	Lali;	d	LIGHT_RANGE
c	cgr	net/minecraft/world/level/StructureManager
	m	(Lcgb;Ldap;Ldkf;)V	<init>	<init>
		p	1		world
		p	2		options
		p	3		locator
	m	()Z	a	shouldGenerateStructures
	m	(Lafv;)Lcgr;	a	forWorldGenRegion
		p	1		region
	m	(Lakh;Lhc;)Ljava/lang/Boolean;	a	lambda$getStructureWithPieceAt$0
	m	(Lcfh;Ldke;Z)Ldkg;	a	checkStructurePresence
		p	1		chunkPos
		p	2		structure
		p	3		skipExistingChunk
	m	(Lcfh;Ljava/util/function/Predicate;)Ljava/util/List;	a	startsForStructure
	m	(Ldke;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V	a	fillStartsForStructure
	m	(Ldkm;)V	a	addReference
		p	1		structureStart
	m	(Lgt;)Z	a	hasAnyStructureAt
		p	1		pos
	m	(Lgt;Laai;)Ldkm;	a	getStructureWithPieceAt
		p	1		pos
		p	2		structure
	m	(Lgt;Lakh;)Ldkm;	a	getStructureWithPieceAt
		p	1		pos
		p	2		structureTag
	m	(Lgt;Ldke;)Ldkm;	a	getStructureAt
		p	1		pos
		p	2		structure
	m	(Lgt;Ldkm;)Z	a	structureHasPieceAt
		p	1		pos
		p	2		structureStart
	m	(Lhm;Lakh;Ldke;)Z	a	lambda$getStructureWithPieceAt$1
	m	(Lhq;Ldke;)Ljava/util/List;	a	startsForStructure
		p	1		sectionPos
		p	2		structure
	m	(Lhq;Ldke;JLcxh;)V	a	addReferenceForStructure
		p	1		pos
		p	2		structure
		p	3		reference
		p	5		holder
	m	(Lhq;Ldke;Lcxh;)Ldkm;	a	getStartForStructure
		p	1		pos
		p	2		structure
		p	3		holder
	m	(Lhq;Ldke;Ldkm;Lcxh;)V	a	setStartForStructure
		p	1		pos
		p	2		structure
		p	3		structureStart
		p	4		holder
	m	()Lhn;	b	registryAccess
	m	(Lgt;)Ljava/util/Map;	b	getAllStructuresAt
		p	1		pos
	m	(Lgt;Ldke;)Ldkm;	b	getStructureWithPieceAt
		p	1		pos
		p	2		structure
	f	Lcgb;	a	level
	f	Ldap;	b	worldGenSettings
	f	Ldkf;	c	structureCheck
c	cgs	net/minecraft/world/level/WorldGenLevel
	m	()J	B	getSeed
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Lgt;)Z	e_	ensureCanWrite
		p	1		pos
c	cgt	net/minecraft/world/level/biome/AmbientAdditionsSettings
	m	(Lajd;D)V	<init>	<init>
		p	1		sound
		p	2		chance
	m	()Lajd;	a	getSoundEvent
	m	(Lcgt;)Ljava/lang/Double;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()D	b	getTickChance
	m	(Lcgt;)Lajd;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lajd;	b	soundEvent
	f	D	c	tickChance
c	cgu	net/minecraft/world/level/biome/AmbientMoodSettings
	m	(Lajd;IID)V	<init>	<init>
		p	1		sound
		p	2		cultivationTicks
		p	3		spawnRange
		p	4		extraDistance
	m	()Lajd;	a	getSoundEvent
	m	(Lcgu;)Ljava/lang/Double;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getTickDelay
	m	(Lcgu;)Ljava/lang/Integer;	b	lambda$static$2
	m	()I	c	getBlockSearchExtent
	m	(Lcgu;)Ljava/lang/Integer;	c	lambda$static$1
	m	()D	d	getSoundPositionOffset
	m	(Lcgu;)Lajd;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcgu;	b	LEGACY_CAVE_SETTINGS
	f	Lajd;	c	soundEvent
	f	I	d	tickDelay
	f	I	e	blockSearchExtent
	f	D	f	soundPositionOffset
c	cgv	net/minecraft/world/level/biome/AmbientParticleSettings
	m	(Lim;F)V	<init>	<init>
		p	1		particle
		p	2		probability
	m	()Lim;	a	getOptions
	m	(Lalu;)Z	a	canSpawn
		p	1		random
	m	(Lcgv;)Ljava/lang/Float;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcgv;)Lim;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lim;	b	options
	f	F	c	probability
c	cgw	net/minecraft/world/level/biome/Biome
	m	(Lcgw$b;Lchc;Lcgx;Lchi;)V	<init>	<init>
		p	1		weather
		p	2		effects
		p	3		generationSettings
		p	4		spawnSettings
	m	()I	a	getSkyColor
	m	(DD)I	a	getGrassColor
		p	1		x
		p	3		z
	m	(Lcgd;Lgt;)Z	a	shouldFreeze
		p	1		world
		p	2		blockPos
	m	(Lcgd;Lgt;Z)Z	a	shouldFreeze
		p	1		world
		p	2		pos
		p	3		doWaterCheck
	m	(Lcgw$b;Lchc;)Lcgw;	a	lambda$static$7
		p	0		weather
		p	1		effects
	m	(Lcgw;)Lchc;	a	lambda$static$6
		p	0		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Lgt;)Z	a	coldEnoughToSnow
		p	1		pos
	m	()Lchi;	b	getMobSettings
	m	(Lcgd;Lgt;)Z	b	shouldSnow
		p	1		world
		p	2		pos
	m	(Lcgw;)Lcgw$b;	b	lambda$static$5
		p	0		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
		p	0		instance
	m	(Lgt;)Z	b	warmEnoughToRain
		p	1		pos
	m	()Lcgw$c;	c	getPrecipitation
	m	(Lcgw;)Lchi;	c	lambda$static$3
		p	0		biome
	m	(Lgt;)Z	c	shouldMeltFrozenOceanIcebergSlightly
		p	1		pos
	m	()Z	d	isHumid
	m	(Lcgw;)Lcgx;	d	lambda$static$2
		p	0		biome
	m	(Lgt;)Z	d	shouldSnowGolemBurn
		p	1		pos
	m	()Lcgx;	e	getGenerationSettings
	m	(Lcgw;)Lchc;	e	lambda$static$1
		p	0		biome
	m	(Lgt;)F	e	getHeightAdjustedTemperature
		p	1		pos
	m	()I	f	getFogColor
	m	(Lcgw;)Lcgw$b;	f	lambda$static$0
		p	0		biome
	m	(Lgt;)F	f	getTemperature
		p	1		blockPos
	m	()I	g	getFoliageColor
	m	()F	h	getDownfall
	m	()F	i	getBaseTemperature
	m	()Lchc;	j	getSpecialEffects
	m	()I	k	getWaterColor
	m	()I	l	getWaterFogColor
	m	()Ljava/util/Optional;	m	getAmbientParticle
	m	()Ljava/util/Optional;	n	getAmbientLoop
	m	()Ljava/util/Optional;	o	getAmbientMood
	m	()Ljava/util/Optional;	p	getAmbientAdditions
	m	()Ljava/util/Optional;	q	getBackgroundMusic
	m	()I	r	getGrassColorFromTexture
	m	()I	s	getFoliageColorFromTexture
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	t	lambda$new$10
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	u	lambda$new$9
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Ldof;	e	BIOME_INFO_NOISE
	f	Ldof;	f	TEMPERATURE_NOISE
	f	Ldof;	g	FROZEN_TEMPERATURE_NOISE
	f	I	h	TEMPERATURE_CACHE_SIZE
	f	Lcgw$b;	i	climateSettings
	f	Lcgx;	j	generationSettings
	f	Lchi;	k	mobSettings
	f	Lchc;	l	specialEffects
	f	Ljava/lang/ThreadLocal;	m	temperatureCache
c	cgw$1	net/minecraft/world/level/biome/Biome$1
	f	Lcgw;	a	this$0
c	cgw$a	net/minecraft/world/level/biome/Biome$BiomeBuilder
	m	()Lcgw;	a	build
	m	(F)Lcgw$a;	a	temperature
		p	1		temperature
	m	(Lcgw$c;)Lcgw$a;	a	precipitation
		p	1		precipitation
	m	(Lcgw$d;)Lcgw$a;	a	temperatureAdjustment
		p	1		temperatureModifier
	m	(Lcgx;)Lcgw$a;	a	generationSettings
		p	1		generationSettings
	m	(Lchc;)Lcgw$a;	a	specialEffects
		p	1		effects
	m	(Lchi;)Lcgw$a;	a	mobSpawnSettings
		p	1		spawnSettings
	m	(F)Lcgw$a;	b	downfall
		p	1		downfall
	f	Lcgw$c;	a	precipitation
	f	Ljava/lang/Float;	b	temperature
	f	Lcgw$d;	c	temperatureModifier
	f	Ljava/lang/Float;	d	downfall
	f	Lchc;	e	specialEffects
	f	Lchi;	f	mobSpawnSettings
	f	Lcgx;	g	generationSettings
c	cgw$b	net/minecraft/world/level/biome/Biome$ClimateSettings
	m	(Lcgw$c;FLcgw$d;F)V	<init>	<init>
		p	1		precipitation
		p	2		temperature
		p	3		temperatureModifier
		p	4		downfall
	m	()Lcgw$c;	a	precipitation
	m	(Lcgw$b;)Ljava/lang/Float;	a	lambda$static$3
		p	0		weather
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()F	b	temperature
	m	(Lcgw$b;)Lcgw$d;	b	lambda$static$2
		p	0		weather
	m	()Lcgw$d;	c	temperatureModifier
	m	(Lcgw$b;)Ljava/lang/Float;	c	lambda$static$1
		p	0		weather
	m	()F	d	downfall
	m	(Lcgw$b;)Lcgw$c;	d	lambda$static$0
		p	0		weather
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcgw$c;	b	precipitation
	f	F	c	temperature
	f	Lcgw$d;	d	temperatureModifier
	f	F	e	downfall
c	cgw$c	net/minecraft/world/level/biome/Biome$Precipitation
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lcgw$c;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcgw$c;	a	NONE
	f	Lcgw$c;	b	RAIN
	f	Lcgw$c;	c	SNOW
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lcgw$c;	f	$VALUES
c	cgw$d	net/minecraft/world/level/biome/Biome$TemperatureModifier
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Lgt;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
	m	()[Lcgw$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcgw$d;	a	NONE
	f	Lcgw$d;	b	FROZEN
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lcgw$d;	e	$VALUES
c	cgw$d$1	net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lgt;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	cgw$d$2	net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lgt;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	cgx	net/minecraft/world/level/biome/BiomeGenerationSettings
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		carvers
		p	2		features
	m	()Ljava/util/List;	a	getFlowerFeatures
	m	(Lcgx;)Ljava/util/List;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lczq$a;)Ljava/lang/Iterable;	a	getCarvers
		p	1		carverStep
	m	(Ldcj;)Z	a	lambda$new$3
	m	(Ldjj;)Z	a	hasFeature
		p	1		feature
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$new$5
	m	()Ljava/util/List;	b	features
	m	(Lcgx;)Ljava/util/Map;	b	lambda$static$0
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$new$4
	f	Lcgx;	a	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	carvers
	f	Ljava/util/List;	e	features
	f	Ljava/util/function/Supplier;	f	flowerFeatures
	f	Ljava/util/function/Supplier;	g	featureSet
c	cgx$a	net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	m	()Lcgx;	a	build
	m	(I)V	a	addFeatureStepsUpTo
		p	1		stepIndex
	m	(ILhc;)Lcgx$a;	a	addFeature
		p	1		stepIndex
		p	2		featureEntry
	m	(Lczq$a;)Ljava/util/List;	a	lambda$addCarver$0
	m	(Lczq$a;Lhc;)Lcgx$a;	a	addCarver
		p	1		carverStep
		p	2		carver
	m	(Lczq$b;Lhc;)Lcgx$a;	a	addFeature
		p	1		featureStep
		p	2		feature
	m	(Ljava/util/Map$Entry;)Lhe;	a	lambda$build$1
	f	Ljava/util/Map;	a	carvers
	f	Ljava/util/List;	b	features
c	cgy	net/minecraft/world/level/biome/BiomeManager
	m	(Lcgy$a;J)V	<init>	<init>
		p	1		storage
		p	2		seed
	m	(DDD)Lhc;	a	getNoiseBiomeAtPosition
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lhc;	a	getNoiseBiomeAtQuart
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(J)J	a	obfuscateSeed
		p	0		seed
	m	(JIIIDDD)D	a	getFiddledDistance
	m	(Lcgy$a;)Lcgy;	a	withDifferentSource
		p	1		storage
	m	(Lgt;)Lhc;	a	getBiome
		p	1		pos
	m	(J)D	b	getFiddle
	m	(Lgt;)Lhc;	b	getNoiseBiomeAtPosition
		p	1		pos
	f	I	a	CHUNK_CENTER_QUART
	f	I	b	ZOOM_BITS
	f	I	c	ZOOM
	f	I	d	ZOOM_MASK
	f	Lcgy$a;	e	noiseBiomeSource
	f	J	f	biomeZoomSeed
c	cgy$a	net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	m	(III)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
c	cgz	net/minecraft/world/level/biome/BiomeResolver
	m	(IIILchf$f;)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
c	cha	net/minecraft/world/level/biome/BiomeSource
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		biomes
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		biomeStream
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Lalu;ZLchf$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILchf$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(IIIILjava/util/function/Predicate;Lalu;Lchf$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		predicate
		p	6		random
		p	7		noiseSampler
	m	(Lgt;IIILjava/util/function/Predicate;Lchf$f;Lcgd;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	(Ljava/util/List;Lgt;Lchf$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	()Ljava/util/Set;	b	possibleBiomes
	m	(IIILchf$f;)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Set;	b	possibleBiomes
c	chb	net/minecraft/world/level/biome/BiomeSources
	m	(Lhm;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
c	chc	net/minecraft/world/level/biome/BiomeSpecialEffects
	m	(IIIILjava/util/Optional;Ljava/util/Optional;Lchc$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		fogColor
		p	2		waterColor
		p	3		waterFogColor
		p	4		skyColor
		p	5		foliageColor
		p	6		grassColor
		p	7		grassColorModifier
		p	8		particleConfig
		p	9		loopSound
		p	10		moodSound
		p	11		additionsSound
		p	12		music
	m	()I	a	getFogColor
	m	(Lchc;)Ljava/util/Optional;	a	lambda$static$11
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$12
		p	0		instance
	m	()I	b	getWaterColor
	m	(Lchc;)Ljava/util/Optional;	b	lambda$static$10
	m	()I	c	getWaterFogColor
	m	(Lchc;)Ljava/util/Optional;	c	lambda$static$9
	m	()I	d	getSkyColor
	m	(Lchc;)Ljava/util/Optional;	d	lambda$static$8
	m	()Ljava/util/Optional;	e	getFoliageColorOverride
	m	(Lchc;)Ljava/util/Optional;	e	lambda$static$7
	m	()Ljava/util/Optional;	f	getGrassColorOverride
	m	(Lchc;)Lchc$b;	f	lambda$static$6
	m	()Lchc$b;	g	getGrassColorModifier
	m	(Lchc;)Ljava/util/Optional;	g	lambda$static$5
	m	()Ljava/util/Optional;	h	getAmbientParticleSettings
	m	(Lchc;)Ljava/util/Optional;	h	lambda$static$4
	m	()Ljava/util/Optional;	i	getAmbientLoopSoundEvent
	m	(Lchc;)Ljava/lang/Integer;	i	lambda$static$3
	m	()Ljava/util/Optional;	j	getAmbientMoodSettings
	m	(Lchc;)Ljava/lang/Integer;	j	lambda$static$2
	m	()Ljava/util/Optional;	k	getAmbientAdditionsSettings
	m	(Lchc;)Ljava/lang/Integer;	k	lambda$static$1
	m	()Ljava/util/Optional;	l	getBackgroundMusic
	m	(Lchc;)Ljava/lang/Integer;	l	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	fogColor
	f	I	c	waterColor
	f	I	d	waterFogColor
	f	I	e	skyColor
	f	Ljava/util/Optional;	f	foliageColorOverride
	f	Ljava/util/Optional;	g	grassColorOverride
	f	Lchc$b;	h	grassColorModifier
	f	Ljava/util/Optional;	i	ambientParticleSettings
	f	Ljava/util/Optional;	j	ambientLoopSoundEvent
	f	Ljava/util/Optional;	k	ambientMoodSettings
	f	Ljava/util/Optional;	l	ambientAdditionsSettings
	f	Ljava/util/Optional;	m	backgroundMusic
c	chc$a	net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	m	()Lchc;	a	build
	m	(I)Lchc$a;	a	fogColor
		p	1		fogColor
	m	(Lajb;)Lchc$a;	a	backgroundMusic
		p	1		music
	m	(Lajd;)Lchc$a;	a	ambientLoopSound
		p	1		sound
	m	(Lcgt;)Lchc$a;	a	ambientAdditionsSound
		p	1		additionsSound
	m	(Lcgu;)Lchc$a;	a	ambientMoodSound
		p	1		moodSound
	m	(Lcgv;)Lchc$a;	a	ambientParticle
		p	1		particleConfig
	m	(Lchc$b;)Lchc$a;	a	grassColorModifier
		p	1		grassColorModifier
	m	()Ljava/lang/IllegalStateException;	b	lambda$build$3
	m	(I)Lchc$a;	b	waterColor
		p	1		waterColor
	m	()Ljava/lang/IllegalStateException;	c	lambda$build$2
	m	(I)Lchc$a;	c	waterFogColor
		p	1		waterFogColor
	m	()Ljava/lang/IllegalStateException;	d	lambda$build$1
	m	(I)Lchc$a;	d	skyColor
		p	1		skyColor
	m	()Ljava/lang/IllegalStateException;	e	lambda$build$0
	m	(I)Lchc$a;	e	foliageColorOverride
		p	1		foliageColor
	m	(I)Lchc$a;	f	grassColorOverride
		p	1		grassColor
	f	Ljava/util/OptionalInt;	a	fogColor
	f	Ljava/util/OptionalInt;	b	waterColor
	f	Ljava/util/OptionalInt;	c	waterFogColor
	f	Ljava/util/OptionalInt;	d	skyColor
	f	Ljava/util/Optional;	e	foliageColorOverride
	f	Ljava/util/Optional;	f	grassColorOverride
	f	Lchc$b;	g	grassColorModifier
	f	Ljava/util/Optional;	h	ambientParticle
	f	Ljava/util/Optional;	i	ambientLoopSoundEvent
	f	Ljava/util/Optional;	j	ambientMoodSettings
	f	Ljava/util/Optional;	k	ambientAdditionsSettings
	f	Ljava/util/Optional;	l	backgroundMusic
c	chc$b	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
	m	()[Lchc$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lchc$b;	a	NONE
	f	Lchc$b;	b	DARK_FOREST
	f	Lchc$b;	c	SWAMP
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lchc$b;	f	$VALUES
c	chc$b$1	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	chc$b$2	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	chc$b$3	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	chd	net/minecraft/world/level/biome/Biomes
	m	(Ljava/lang/String;)Laai;	a	register
		p	0		name
	f	Laai;	A	BADLANDS
	f	Laai;	B	ERODED_BADLANDS
	f	Laai;	C	WOODED_BADLANDS
	f	Laai;	D	MEADOW
	f	Laai;	E	GROVE
	f	Laai;	F	SNOWY_SLOPES
	f	Laai;	G	FROZEN_PEAKS
	f	Laai;	H	JAGGED_PEAKS
	f	Laai;	I	STONY_PEAKS
	f	Laai;	J	RIVER
	f	Laai;	K	FROZEN_RIVER
	f	Laai;	L	BEACH
	f	Laai;	M	SNOWY_BEACH
	f	Laai;	N	STONY_SHORE
	f	Laai;	O	WARM_OCEAN
	f	Laai;	P	LUKEWARM_OCEAN
	f	Laai;	Q	DEEP_LUKEWARM_OCEAN
	f	Laai;	R	OCEAN
	f	Laai;	S	DEEP_OCEAN
	f	Laai;	T	COLD_OCEAN
	f	Laai;	U	DEEP_COLD_OCEAN
	f	Laai;	V	FROZEN_OCEAN
	f	Laai;	W	DEEP_FROZEN_OCEAN
	f	Laai;	X	MUSHROOM_FIELDS
	f	Laai;	Y	DRIPSTONE_CAVES
	f	Laai;	Z	LUSH_CAVES
	f	Laai;	a	THE_VOID
	f	Laai;	aa	DEEP_DARK
	f	Laai;	ab	NETHER_WASTES
	f	Laai;	ac	WARPED_FOREST
	f	Laai;	ad	CRIMSON_FOREST
	f	Laai;	ae	SOUL_SAND_VALLEY
	f	Laai;	af	BASALT_DELTAS
	f	Laai;	ag	THE_END
	f	Laai;	ah	END_HIGHLANDS
	f	Laai;	ai	END_MIDLANDS
	f	Laai;	aj	SMALL_END_ISLANDS
	f	Laai;	ak	END_BARRENS
	f	Laai;	b	PLAINS
	f	Laai;	c	SUNFLOWER_PLAINS
	f	Laai;	d	SNOWY_PLAINS
	f	Laai;	e	ICE_SPIKES
	f	Laai;	f	DESERT
	f	Laai;	g	SWAMP
	f	Laai;	h	MANGROVE_SWAMP
	f	Laai;	i	FOREST
	f	Laai;	j	FLOWER_FOREST
	f	Laai;	k	BIRCH_FOREST
	f	Laai;	l	DARK_FOREST
	f	Laai;	m	OLD_GROWTH_BIRCH_FOREST
	f	Laai;	n	OLD_GROWTH_PINE_TAIGA
	f	Laai;	o	OLD_GROWTH_SPRUCE_TAIGA
	f	Laai;	p	TAIGA
	f	Laai;	q	SNOWY_TAIGA
	f	Laai;	r	SAVANNA
	f	Laai;	s	SAVANNA_PLATEAU
	f	Laai;	t	WINDSWEPT_HILLS
	f	Laai;	u	WINDSWEPT_GRAVELLY_HILLS
	f	Laai;	v	WINDSWEPT_FOREST
	f	Laai;	w	WINDSWEPT_SAVANNA
	f	Laai;	x	JUNGLE
	f	Laai;	y	SPARSE_JUNGLE
	f	Laai;	z	BAMBOO_JUNGLE
c	che	net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	m	(Lhe;I)V	<init>	<init>
		p	1		biomes
		p	2		size
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lche;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lche;)Lhe;	b	lambda$static$0
	m	(IIILchf$f;)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhe;	c	allowedBiomes
	f	I	d	bitShift
	f	I	e	size
c	chf	net/minecraft/world/level/biome/Climate
	m	()Lchf$f;	a	empty
	m	(F)J	a	quantizeCoord
	m	(FFFFFF)Lchf$h;	a	target
		p	0		temperatureNoise
		p	1		humidityNoise
		p	2		continentalnessNoise
		p	3		erosionNoise
		p	4		depth
		p	5		weirdnessNoise
	m	(FFFFFFF)Lchf$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(J)F	a	unquantizeCoord
	m	(Lchf$b;Lchf$b;Lchf$b;Lchf$b;Lchf$b;Lchf$b;F)Lchf$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(Ljava/util/List;Lchf$f;)Lgt;	a	findSpawnPosition
		p	0		noises
		p	1		sampler
	f	I	a	PARAMETER_COUNT
	f	Z	b	DEBUG_SLOW_BIOME_SEARCH
	f	F	c	QUANTIZATION_FACTOR
c	chf$a	net/minecraft/world/level/biome/Climate$DistanceMetric
	m	(Lchf$e$b;[J)J	distance	distance
		p	1		node
c	chf$b	net/minecraft/world/level/biome/Climate$Parameter
	m	()J	a	min
	m	(F)Lchf$b;	a	point
		p	0		point
	m	(FF)Lchf$b;	a	span
		p	0		min
		p	1		max
	m	(J)J	a	distance
		p	1		noise
	m	(Lchf$b;)J	a	distance
		p	1		other
	m	(Lchf$b;Lchf$b;)Lchf$b;	a	span
		p	0		min
		p	1		max
	m	(Ljava/lang/Float;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
		p	0		min
		p	1		max
	m	()J	b	max
	m	(Lchf$b;)Lchf$b;	b	span
		p	1		other
	m	(Lchf$b;)Ljava/lang/Float;	c	lambda$static$2
	m	(Lchf$b;)Ljava/lang/Float;	d	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	min
	f	J	c	max
c	chf$c	net/minecraft/world/level/biome/Climate$ParameterList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Ljava/util/List;	a	values
	m	(Lchf$h;)Ljava/lang/Object;	a	findValue
	m	(Lchf$h;Lchf$a;)Ljava/lang/Object;	a	findValueIndex
	m	(Lchf$h;)Ljava/lang/Object;	b	findValueBruteForce
	m	(Lchf$h;)Ljava/lang/Object;	c	findValueIndex
	f	Ljava/util/List;	a	values
	f	Lchf$e;	b	index
c	chf$d	net/minecraft/world/level/biome/Climate$ParameterPoint
	m	(Lchf$b;Lchf$b;Lchf$b;Lchf$b;Lchf$b;Lchf$b;J)V	<init>	<init>
		p	1		temperature
		p	2		humidity
		p	3		continentalness
		p	4		erosion
		p	5		depth
		p	6		weirdness
	m	()Ljava/util/List;	a	parameterSpace
	m	(Lchf$d;)Ljava/lang/Long;	a	lambda$static$6
	m	(Lchf$h;)J	a	fitness
		p	1		point
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	()Lchf$b;	b	temperature
	m	(Lchf$d;)Lchf$b;	b	lambda$static$5
	m	()Lchf$b;	c	humidity
	m	(Lchf$d;)Lchf$b;	c	lambda$static$4
	m	()Lchf$b;	d	continentalness
	m	(Lchf$d;)Lchf$b;	d	lambda$static$3
	m	()Lchf$b;	e	erosion
	m	(Lchf$d;)Lchf$b;	e	lambda$static$2
	m	()Lchf$b;	f	depth
	m	(Lchf$d;)Lchf$b;	f	lambda$static$1
	m	()Lchf$b;	g	weirdness
	m	(Lchf$d;)Lchf$b;	g	lambda$static$0
	m	()J	h	offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lchf$b;	b	temperature
	f	Lchf$b;	c	humidity
	f	Lchf$b;	d	continentalness
	f	Lchf$b;	e	erosion
	f	Lchf$b;	f	depth
	f	Lchf$b;	g	weirdness
	f	J	h	offset
c	chf$e	net/minecraft/world/level/biome/Climate$RTree
	m	(Lchf$e$b;)V	<init>	<init>
		p	1		firstNode
	m	(ILchf$e$b;)J	a	lambda$build$1
		p	1		node
	m	(ILchf$e$c;)Lchf$e$b;	a	lambda$build$2
		p	1		node
	m	(ILjava/util/List;)Lchf$e$b;	a	build
		p	0		parameterNumber
		p	1		subTree
	m	(IZ)Ljava/util/Comparator;	a	comparator
		p	0		currentParameter
		p	1		abs
	m	(IZLchf$e$b;)J	a	lambda$comparator$3
	m	(Lchf$h;Lchf$a;)Ljava/lang/Object;	a	search
		p	1		point
		p	2		distanceFunction
	m	(Lcom/mojang/datafixers/util/Pair;)Lchf$e$a;	a	lambda$create$0
		p	0		entry
	m	(Ljava/util/List;)Lchf$e;	a	create
		p	0		entries
	m	(Ljava/util/List;IIZ)V	a	sort
		p	0		subTree
		p	1		parameterNumber
		p	2		currentParameter
		p	3		abs
	m	([Lchf$b;)J	a	cost
		p	0		parameters
	m	(Ljava/util/List;)Ljava/util/List;	b	bucketize
		p	0		nodes
	m	(Ljava/util/List;)Ljava/util/List;	c	buildParameterSpace
		p	0		subTree
	f	I	a	CHILDREN_PER_NODE
	f	Lchf$e$b;	b	root
	f	Ljava/lang/ThreadLocal;	c	lastResult
c	chf$e$a	net/minecraft/world/level/biome/Climate$RTree$Leaf
	m	(Lchf$d;Ljava/lang/Object;)V	<init>	<init>
		p	1		parameters
		p	2		value
	m	([JLchf$e$a;Lchf$a;)Lchf$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	Ljava/lang/Object;	b	value
c	chf$e$b	net/minecraft/world/level/biome/Climate$RTree$Node
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		parameters
	m	([J)J	a	distance
		p	1		otherParameters
	m	([JLchf$e$a;Lchf$a;)Lchf$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Lchf$b;	a	parameterSpace
c	chf$e$c	net/minecraft/world/level/biome/Climate$RTree$SubTree
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		subTree
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		parameters
		p	2		subTree
	m	([JLchf$e$a;Lchf$a;)Lchf$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Lchf$e$b;	b	children
c	chf$f	net/minecraft/world/level/biome/Climate$Sampler
	m	()Lgt;	a	findSpawnPosition
	m	(III)Lchf$h;	a	sample
		p	1		x
		p	2		y
		p	3		z
	m	()Lczn;	b	temperature
	m	()Lczn;	c	humidity
	m	()Lczn;	d	continentalness
	m	()Lczn;	e	erosion
	m	()Lczn;	f	depth
	m	()Lczn;	g	weirdness
	m	()Ljava/util/List;	h	spawnTarget
	f	Lczn;	a	temperature
	f	Lczn;	b	humidity
	f	Lczn;	c	continentalness
	f	Lczn;	d	erosion
	f	Lczn;	e	depth
	f	Lczn;	f	weirdness
	f	Ljava/util/List;	g	spawnTarget
c	chf$g	net/minecraft/world/level/biome/Climate$SpawnFinder
	m	(Ljava/util/List;Lchf$f;)V	<init>	<init>
		p	1		noises
		p	2		sampler
	m	(Ljava/util/List;Lchf$f;FF)V	a	radialSearch
		p	1		noises
		p	2		sampler
		p	3		maxDistance
		p	4		step
	m	(Ljava/util/List;Lchf$f;II)Lchf$g$a;	a	getSpawnPositionAndFitness
		p	0		noises
		p	1		sampler
		p	2		x
		p	3		z
	f	Lchf$g$a;	a	result
c	chf$g$a	net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	m	()Lgt;	a	location
	m	()J	b	fitness
	f	Lgt;	a	location
	f	J	b	fitness
c	chf$h	net/minecraft/world/level/biome/Climate$TargetPoint
	m	()[J	a	toParameterArray
	m	()J	b	temperature
	m	()J	c	humidity
	m	()J	d	continentalness
	m	()J	e	erosion
	m	()J	f	depth
	m	()J	g	weirdness
	f	J	a	temperature
	f	J	b	humidity
	f	J	c	continentalness
	f	J	d	erosion
	f	J	e	depth
	f	J	f	weirdness
c	chg	net/minecraft/world/level/biome/FeatureSorter
	m	(ILchg$a;)Z	a	lambda$buildFeaturesPerStep$2
		p	1		feature
	m	(Ljava/util/Comparator;Lchg$a;)Ljava/util/Set;	a	lambda$buildFeaturesPerStep$1
		p	1		feature
	m	(Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List;	a	buildFeaturesPerStep
		p	0		biomes
		p	1		biomesToPlacedFeaturesList
		p	2		listInvolvedBiomesOnFailure
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/Object;)I	a	lambda$buildFeaturesPerStep$0
		p	1		feature
c	chg$a	net/minecraft/world/level/biome/FeatureSorter$1FeatureData
	m	()I	a	featureIndex
	m	()I	b	step
	m	()Ldjj;	c	feature
	f	I	a	featureIndex
	f	I	b	step
	f	Ldjj;	c	feature
c	chg$b	net/minecraft/world/level/biome/FeatureSorter$StepFeatureData
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		features
	m	()Ljava/util/List;	a	features
	m	(I)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$new$0
		p	0		size
	m	()Ljava/util/function/ToIntFunction;	b	indexMapping
	f	Ljava/util/List;	a	features
	f	Ljava/util/function/ToIntFunction;	b	indexMapping
c	chh	net/minecraft/world/level/biome/FixedBiomeSource
	m	(Lhc;)V	<init>	<init>
		p	1		biome
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Lalu;ZLchf$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILchf$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(Lchh;)Lhc;	a	lambda$static$0
	m	(Lgt;IIILjava/util/function/Predicate;Lchf$f;Lcgd;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	(III)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIILchf$f;)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhc;	c	biome
c	chi	net/minecraft/world/level/biome/MobSpawnSettings
	m	(FLjava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1		creatureSpawnProbability
		p	2		spawners
		p	3		spawnCosts
	m	()F	a	getCreatureProbability
	m	(Lbau;)Lchi$b;	a	getMobSpawnCost
		p	1		entityType
	m	(Lbbi;)Laya;	a	getMobs
		p	1		spawnGroup
	m	(Lchi;)Ljava/util/Map;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lchi;)Ljava/util/Map;	b	lambda$static$1
	m	(Lchi;)Ljava/lang/Float;	c	lambda$static$0
	f	Laya;	a	EMPTY_MOB_LIST
	f	Lchi;	b	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	F	e	DEFAULT_CREATURE_SPAWN_PROBABILITY
	f	F	f	creatureGenerationProbability
	f	Ljava/util/Map;	g	spawners
	f	Ljava/util/Map;	h	mobSpawnCosts
c	chi$a	net/minecraft/world/level/biome/MobSpawnSettings$Builder
	m	()Lchi;	a	build
	m	(F)Lchi$a;	a	creatureGenerationProbability
		p	1		probability
	m	(Lbau;DD)Lchi$a;	a	addMobCharge
		p	1		entityType
		p	2		mass
		p	4		gravityLimit
	m	(Lbbi;)Ljava/util/List;	a	lambda$new$1
	m	(Lbbi;Lchi$c;)Lchi$a;	a	addSpawn
		p	1		spawnGroup
		p	2		spawnEntry
	m	(Ljava/util/Map$Entry;)Laya;	a	lambda$build$2
	m	(Lbbi;)Lbbi;	b	lambda$new$0
	f	Ljava/util/Map;	a	spawners
	f	Ljava/util/Map;	b	mobSpawnCosts
	f	F	c	creatureGenerationProbability
c	chi$b	net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	m	(DD)V	<init>	<init>
		p	1		gravityLimit
		p	3		mass
	m	()D	a	getEnergyBudget
	m	(Lchi$b;)Ljava/lang/Double;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()D	b	getCharge
	m	(Lchi$b;)Ljava/lang/Double;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	energyBudget
	f	D	c	charge
c	chi$c	net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	m	(Lbau;III)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lbau;Laxx;II)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lchi$c;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lchi$c;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lchi$c;)Lbau;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbau;	b	type
	f	I	c	minCount
	f	I	d	maxCount
c	chj	net/minecraft/world/level/biome/MultiNoiseBiomeSource
	m	(Lchf$c;)V	<init>	<init>
		p	1		entries
	m	(Lchf$c;Ljava/util/Optional;)V	<init>	<init>
		p	1		biomeEntries
		p	2		instance
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lchf$h;)Lhc;	a	getNoiseBiome
		p	1		point
	m	(Lchj$a;)Z	a	stable
		p	1		instance
	m	(Lchj;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$5
		p	0		biomeSource
	m	(Lcom/mojang/datafixers/util/Either;)Lchj;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ljava/util/List;Lgt;Lchf$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	(Lchj;)Lcom/mojang/datafixers/util/Either;	b	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance2
	m	()Ljava/util/Optional;	c	preset
	m	(Lchj;)Lchf$c;	c	lambda$static$1
		p	0		biomeSource
	m	(IIILchf$f;)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/MapCodec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lchf$c;	d	parameters
	f	Ljava/util/Optional;	e	preset
c	chj$a	net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset
	m	(Laaj;Ljava/util/function/Function;)V	<init>	<init>
		p	1		id
		p	2		biomeSourceFunction
	m	()Ljava/util/stream/Stream;	a	getPresets
	m	(Lchj$b;Z)Lchj;	a	biomeSource
		p	1		instance
		p	2		useInstance
	m	(Lcom/google/common/collect/ImmutableList$Builder;Lhm;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$static$1
		p	2		pair
	m	(Lhc;)Ljava/util/stream/Stream;	a	lambda$possibleBiomes$4
		p	0		entry
	m	(Lhm;)Lchj;	a	biomeSource
		p	1		biomeRegistry
	m	(Lhm;Z)Lchj;	a	biomeSource
		p	1		biomeRegistry
		p	2		useInstance
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getPresets$3
		p	0		entry
	m	()Ljava/util/stream/Stream;	b	possibleBiomes
	m	(Lhm;)Lchf$c;	b	lambda$static$2
		p	0		biomeRegistry
	m	(Lhm;)Lchf$c;	c	lambda$static$0
		p	0		biomeRegistry
	f	Lchj$a;	a	NETHER
	f	Lchj$a;	b	OVERWORLD
	f	Ljava/util/Map;	c	BY_NAME
	f	Laaj;	d	name
	f	Ljava/util/function/Function;	e	parameterSource
c	chj$b	net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance
	m	(Lchj$a;Lhm;)V	<init>	<init>
		p	1		preset
		p	2		biomeRegistry
	m	()Lchj;	a	biomeSource
	m	(Laaj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		id
	m	(Lchj$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		preset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()Lchj$a;	b	preset
	m	(Laaj;)Lcom/mojang/serialization/DataResult;	b	lambda$static$0
	m	()Lhm;	c	biomes
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lchj$a;	b	preset
	f	Lhm;	c	biomes
c	chk	net/minecraft/world/level/biome/OverworldBiomeBuilder
	m	()Ljava/util/List;	a	spawnTarget
	m	(D)Ljava/lang/String;	a	getDebugStringForPeaksAndValleys
		p	0		weirdness
	m	(DD)Z	a	isDeepDarkRegion
	m	(D[Lchf$b;)Ljava/lang/String;	a	getDebugStringForNoiseValue
		p	0		noisePoint
		p	2		noiseRanges
	m	(II)Laai;	a	pickBeachBiome
		p	1		temperature
		p	2		humidity
	m	(IILchf$b;)Laai;	a	pickMiddleBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILchf$b;Laai;)Laai;	a	maybePickWindsweptSavannaBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
		p	4		biomeKey
	m	(ILchf$b;)Laai;	a	pickBadlandsBiome
		p	1		humidity
		p	2		weirdness
	m	(Ljava/util/function/Consumer;)V	a	addBiomes
	m	(Ljava/util/function/Consumer;Lchf$b;)V	a	addPeaks
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lchf$b;Lchf$b;Lchf$b;Lchf$b;Lchf$b;FLaai;)V	a	addSurfaceBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lchf$b;	b	getTemperatureThresholds
	m	(D)Ljava/lang/String;	b	getDebugStringForContinentalness
		p	1		continentalness
	m	(IILchf$b;)Laai;	b	pickMiddleBiomeOrBadlandsIfHot
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	b	addOffCoastBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lchf$b;)V	b	addHighSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lchf$b;Lchf$b;Lchf$b;Lchf$b;Lchf$b;FLaai;)V	b	addUndergroundBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lchf$b;	c	getHumidityThresholds
	m	(D)Ljava/lang/String;	c	getDebugStringForErosion
		p	1		erosion
	m	(IILchf$b;)Laai;	c	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	c	addInlandBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lchf$b;)V	c	addMidSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lchf$b;Lchf$b;Lchf$b;Lchf$b;Lchf$b;FLaai;)V	c	addBottomBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lchf$b;	d	getErosionThresholds
	m	(D)Ljava/lang/String;	d	getDebugStringForTemperature
		p	1		temperature
	m	(IILchf$b;)Laai;	d	pickShatteredCoastBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	d	addUndergroundBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lchf$b;)V	d	addLowSlice
		p	1		parameters
		p	2		weirdness
	m	()[Lchf$b;	e	getContinentalnessThresholds
	m	(D)Ljava/lang/String;	e	getDebugStringForHumidity
		p	1		humidity
	m	(IILchf$b;)Laai;	e	pickPlateauBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;Lchf$b;)V	e	addValleys
		p	1		parameters
		p	2		weirdness
	m	()[Lchf$b;	f	getPeaksAndValleysThresholds
	m	(IILchf$b;)Laai;	f	pickPeakBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	()[Lchf$b;	g	getWeirdnessThresholds
	m	(IILchf$b;)Laai;	g	pickSlopeBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILchf$b;)Laai;	h	pickShatteredBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	f	Lchf$b;	A	midInlandContinentalness
	f	Lchf$b;	B	farInlandContinentalness
	f	[[Laai;	C	OCEANS
	f	[[Laai;	D	MIDDLE_BIOMES
	f	[[Laai;	E	MIDDLE_BIOMES_VARIANT
	f	[[Laai;	F	PLATEAU_BIOMES
	f	[[Laai;	G	PLATEAU_BIOMES_VARIANT
	f	[[Laai;	H	SHATTERED_BIOMES
	f	F	a	HIGH_START
	f	F	b	PEAK_START
	f	F	c	NEAR_INLAND_START
	f	F	d	MID_INLAND_START
	f	F	e	FAR_INLAND_START
	f	F	f	EROSION_INDEX_1_START
	f	F	g	EROSION_INDEX_2_START
	f	F	h	VALLEY_SIZE
	f	F	i	LOW_START
	f	F	j	HIGH_END
	f	F	k	PEAK_SIZE
	f	F	l	PEAK_END
	f	F	m	EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	f	F	n	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	f	Lchf$b;	o	FULL_RANGE
	f	[Lchf$b;	p	temperatures
	f	[Lchf$b;	q	humidities
	f	[Lchf$b;	r	erosions
	f	Lchf$b;	s	FROZEN_RANGE
	f	Lchf$b;	t	UNFROZEN_RANGE
	f	Lchf$b;	u	mushroomFieldsContinentalness
	f	Lchf$b;	v	deepOceanContinentalness
	f	Lchf$b;	w	oceanContinentalness
	f	Lchf$b;	x	coastContinentalness
	f	Lchf$b;	y	inlandContinentalness
	f	Lchf$b;	z	nearInlandContinentalness
c	chl	net/minecraft/world/level/biome/TheEndBiomeSource
	m	(Lhc;Lhc;Lhc;Lhc;Lhc;)V	<init>	<init>
		p	1		centerBiome
		p	2		highlandsBiome
		p	3		midlandsBiome
		p	4		smallIslandsBiome
		p	5		barrensBiome
	m	(Lhm;)V	<init>	<init>
		p	1		biomeRegistry
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lchl;)Lhm;	a	lambda$static$0
		p	0		biomeSource
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(IIILchf$f;)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhc;	c	end
	f	Lhc;	d	highlands
	f	Lhc;	e	midlands
	f	Lhc;	f	islands
	f	Lhc;	g	barrens
c	chm	net/minecraft/world/level/biome/package-info
c	chn	net/minecraft/world/level/block/AbstractBannerBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Z	Z_	isPossibleToRespawnInThis
	m	(Lcaa;Lcsb;)V	a	lambda$setPlacedBy$1
		p	1		blockEntity
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lbyt;	b	getColor
	m	(Lcaa;Lcsb;)V	b	lambda$setPlacedBy$0
		p	1		blockEntity
	f	Lbyt;	a	color
c	cho	net/minecraft/world/level/block/AbstractCandleBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbtf;Lcur;Lcgb;Lgt;)V	a	extinguish
		p	0		player
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Ldvt;Lalu;)V	a	addParticlesAndSound
		p	0		world
		p	1		vec3d
		p	2		random
	m	(Lcga;Lgt;Lalu;Ldvt;)V	a	lambda$animateTick$0
		p	3		offset
	m	(Lcgb;Lcur;Lgt;Z)V	a	setLit
		p	0		world
		p	1		state
		p	2		pos
		p	3		lit
	m	(Lcgb;Lgt;Ldvt;)V	a	lambda$extinguish$1
		p	2		offset
	m	(Lcur;)Ljava/lang/Iterable;	a	getParticleOffsets
		p	1		state
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Z	b	isLit
		p	0		state
	m	(Lcur;)Z	c	canBeLit
		p	1		state
	f	I	a	LIGHT_PER_CANDLE
	f	Lcvi;	b	LIT
c	chp	net/minecraft/world/level/block/AbstractCauldronBlock
	m	(Lcuq$c;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		behaviorMap
	m	(Lcur;)D	a	getContentHeight
		p	1		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)Ldwm;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Ldox;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Lcur;Lgt;Lbaq;)Z	a	isEntityInsideContent
		p	1		state
		p	2		pos
		p	3		entity
	m	(Ldox;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Lcur;)Z	c	isFull
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	FLOOR_LEVEL
	f	Ldwm;	b	SHAPE
	f	I	c	SIDE_THICKNESS
	f	I	d	LEG_WIDTH
	f	I	e	LEG_HEIGHT
	f	I	f	LEG_DEPTH
	f	Ldwm;	g	INSIDE
	f	Ljava/util/Map;	h	interactions
c	chq	net/minecraft/world/level/block/AbstractChestBlock
	m	(Lcuq$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	(Lcur;Lcga;Lgt;Z)Lckt$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	f	Ljava/util/function/Supplier;	a	blockEntityType
c	chr	net/minecraft/world/level/block/AbstractFurnaceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcsn;Lcsn;)Lcsm;	a	createFurnaceTicker
		p	0		world
		p	1		givenType
		p	2		expectedType
	m	(Lcga;Lgt;Lbtf;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	LIT
c	chs	net/minecraft/world/level/block/AbstractGlassBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
c	cht	net/minecraft/world/level/block/AbstractSkullBlock
	m	(Lcpp$a;Lcuq$c;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lcpp$a;	b	getType
	f	Lcpp$a;	a	type
c	chu	net/minecraft/world/level/block/AirBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
c	chv	net/minecraft/world/level/block/AmethystBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
c	chw	net/minecraft/world/level/block/AmethystClusterBlock
	m	(IILcuq$c;)V	<init>	<init>
		p	1		height
		p	2		xzOffset
		p	3		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	f	Lcvi;	a	WATERLOGGED
	f	Lcvl;	b	FACING
	f	Ldwm;	c	northAabb
	f	Ldwm;	d	southAabb
	f	Ldwm;	e	eastAabb
	f	Ldwm;	f	westAabb
	f	Ldwm;	g	upAabb
	f	Ldwm;	h	downAabb
c	chw$1	net/minecraft/world/level/block/AmethystClusterBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	chx	net/minecraft/world/level/block/AnvilBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbpx;)V	a	falling
		p	1		entity
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcga;Lgt;Lbpx;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcga;Lgt;Lcur;Lcur;Lbpx;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lazz;	b	getFallDamageSource
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcur;	e	damage
		p	0		fallingState
	f	Lcvl;	a	FACING
	f	Ldwm;	b	BASE
	f	Ldwm;	c	X_LEG1
	f	Ldwm;	d	X_LEG2
	f	Ldwm;	e	X_TOP
	f	Ldwm;	f	Z_LEG1
	f	Ldwm;	g	Z_LEG2
	f	Ldwm;	h	Z_TOP
	f	Ldwm;	i	X_AXIS_AABB
	f	Ldwm;	j	Z_AXIS_AABB
	f	Lrm;	k	CONTAINER_TITLE
	f	F	l	FALL_DAMAGE_PER_DISTANCE
	f	I	m	FALL_DAMAGE_MAX
c	chy	net/minecraft/world/level/block/AttachedStemBlock
	m	(Lcqj;Ljava/util/function/Supplier;Lcuq$c;)V	<init>	<init>
		p	1		gourdBlock
		p	2		pickBlockItem
		p	3		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcvl;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
	f	Lcqj;	d	fruit
	f	Ljava/util/function/Supplier;	e	seedSupplier
c	chz	net/minecraft/world/level/block/AzaleaBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcua;	a	TREE_GROWER
	f	Ldwm;	b	SHAPE
c	cia	net/minecraft/world/level/block/BambooBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)I	a	getHeightAboveUpToMax
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lbtf;Lcfg;Lgt;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;I)V	a	growBamboo
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
		p	5		height
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcfg;Lgt;)I	b	getHeightBelowUpToMax
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	f	F	a	SMALL_LEAVES_AABB_OFFSET
	f	F	b	LARGE_LEAVES_AABB_OFFSET
	f	F	c	COLLISION_AABB_OFFSET
	f	Ldwm;	d	SMALL_SHAPE
	f	Ldwm;	e	LARGE_SHAPE
	f	Ldwm;	f	COLLISION_SHAPE
	f	Lcvr;	g	AGE
	f	Lcvp;	h	LEAVES
	f	Lcvr;	i	STAGE
	f	I	j	MAX_HEIGHT
	f	I	k	STAGE_GROWING
	f	I	l	STAGE_DONE_GROWING
	f	I	m	AGE_THIN_BAMBOO
	f	I	n	AGE_THICK_BAMBOO
c	cib	net/minecraft/world/level/block/BambooSaplingBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcga;Lgt;)V	a	growBamboo
		p	1		world
		p	2		pos
	m	(Lcur;Lbtf;Lcfg;Lgt;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	F	a	SAPLING_AABB_OFFSET
	f	Ldwm;	b	SAPLING_SHAPE
c	cic	net/minecraft/world/level/block/BannerBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lbyt;)Lciw;	a	byColor
		p	0		color
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcvr;	a	ROTATION
	f	Ljava/util/Map;	b	BY_COLOR
	f	Ldwm;	c	SHAPE
c	cid	net/minecraft/world/level/block/BarrelBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	OPEN
c	cie	net/minecraft/world/level/block/BarrierBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
c	cif	net/minecraft/world/level/block/BaseCoralFanBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ldwm;	a	AABB
c	cig	net/minecraft/world/level/block/BaseCoralPlantBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
c	cih	net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgb;Lgt;)V	a	tryScheduleDieTick
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	e	scanForWater
		p	0		state
		p	1		world
		p	2		pos
	f	Ldwm;	a	AABB
	f	Lcvi;	c	WATERLOGGED
c	cii	net/minecraft/world/level/block/BaseCoralWallFanBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcvl;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	cij	net/minecraft/world/level/block/BaseEntityBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcsn;Lcsn;Lcsm;)Lcsm;	a	createTickerHelper
		p	0		givenType
		p	1		expectedType
		p	2		ticker
	m	(Lcur;Lcga;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
c	cik	net/minecraft/world/level/block/BaseFireBlock
	m	(Lcuq$c;F)V	<init>	<init>
		p	1		settings
		p	2		damage
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)Lcur;	a	getState
		p	0		world
		p	1		pos
	m	(Lcga;)Z	a	inPortalDimension
		p	0		world
	m	(Lcga;Lbtf;Lgt;Lcur;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcga;Lgt;Lgy;)Z	a	canBePlacedAt
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcga;Lgt;Lgy;)Z	b	isPortal
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Z	f	canBurn
		p	1		state
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	DOWN_AABB
	f	I	c	SECONDS_ON_FIRE
	f	F	d	fireDamage
c	cil	net/minecraft/world/level/block/BasePressurePlateBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Z	Z_	isPossibleToRespawnInThis
	m	(Lbaq;Lcga;Lgt;Lcur;I)V	a	checkPressed
		p	1		entity
		p	2		world
		p	3		pos
		p	4		state
		p	5		output
	m	(Lcga;Lgt;)V	a	updateNeighbours
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;)V	a	playOnSound
		p	1		world
		p	2		pos
	m	(Lcur;I)Lcur;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()I	b	getPressedTime
	m	(Lcga;Lgt;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;)V	b	playOffSound
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	(Lcur;)I	g	getSignalForState
		p	1		state
	f	Ldwm;	a	PRESSED_AABB
	f	Ldwm;	b	AABB
	f	Ldvo;	c	TOUCH_AABB
c	cim	net/minecraft/world/level/block/BaseRailBlock
	m	(ZLcuq$c;)V	<init>	<init>
		p	1		forbidCurves
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;)Z	a	isRail
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Z)Lcur;	a	updateDir
		p	1		world
		p	2		pos
		p	3		state
		p	4		forceUpdate
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lciw;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcga;Lgt;Z)Lcur;	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		notify
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lgt;Lcga;Lcvv;)Z	a	shouldBeRemoved
		p	0		pos
		p	1		world
		p	2		shape
	m	()Z	b	isStraight
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()Lcvu;	c	getShapeProperty
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Z	g	isRail
		p	0		state
	f	Ldwm;	a	FLAT_AABB
	f	Ldwm;	b	HALF_BLOCK_AABB
	f	Lcvi;	c	WATERLOGGED
	f	Z	d	isStraight
c	cim$1	net/minecraft/world/level/block/BaseRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	cin	net/minecraft/world/level/block/BeaconBeamBlock
	m	()Lbyt;	a	getColor
c	cio	net/minecraft/world/level/block/BeaconBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Lbyt;	a	getColor
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
c	cip	net/minecraft/world/level/block/BedBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lbaq;)V	a	bounceUp
		p	1		entity
	m	(Lbau;Lcfk;Lgt;F)Ljava/util/Optional;	a	findStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		spawnAngle
	m	(Lbau;Lcfk;Lgt;Lgy;Lgy;)Ljava/util/Optional;	a	findBunkBedStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		bedDirection
		p	4		respawnDirection
	m	(Lbau;Lcfk;Lgt;[[IZ)Ljava/util/Optional;	a	findStandUpPositionAtOffset
		p	0		type
		p	1		world
		p	2		pos
		p	3		possibleOffsets
		p	4		ignoreInvalidPos
	m	(Lbtf;Lbtf$a;)V	a	lambda$use$0
		p	1		reason
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lbaq;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lcfg;Lgt;)Lgy;	a	getBedOrientation
		p	0		world
		p	1		pos
	m	(Lcga;)Z	a	canSetSpawn
		p	0		world
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcga;Lgt;)Z	a	kickVillagerOutOfBed
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcvf;Lgy;)Lgy;	a	getNeighbourDirection
		p	0		part
		p	1		direction
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgy;)[[I	a	bedAboveStandUpOffsets
		p	0		bedDirection
	m	(Lgy;Lgy;)[[I	a	bedStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	()Lbyt;	b	getColor
	m	(Lcfg;Lgt;)Z	b	isBunkBed
		p	0		world
		p	1		pos
	m	(Lgy;Lgy;)[[I	b	bedSurroundStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Lgy;	g	getConnectedDirection
		p	0		state
	m	(Lcur;)Lckt$a;	h	getBlockType
		p	0		state
	f	Lcvp;	a	PART
	f	Lcvi;	b	OCCUPIED
	f	I	c	HEIGHT
	f	Ldwm;	d	BASE
	f	Ldwm;	e	LEG_NORTH_WEST
	f	Ldwm;	f	LEG_SOUTH_WEST
	f	Ldwm;	g	LEG_NORTH_EAST
	f	Ldwm;	h	LEG_SOUTH_EAST
	f	Ldwm;	i	NORTH_SHAPE
	f	Ldwm;	j	SOUTH_SHAPE
	f	Ldwm;	k	WEST_SHAPE
	f	Ldwm;	l	EAST_SHAPE
	f	I	m	LEG_WIDTH
	f	Lbyt;	n	color
c	cip$1	net/minecraft/world/level/block/BedBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ciq	net/minecraft/world/level/block/BeehiveBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lazl;Lbtf;)V	a	lambda$use$0
		p	1		player
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;DDDDD)V	a	spawnFluidParticle
		p	1		world
		p	2		minX
		p	4		maxX
		p	6		minZ
		p	8		maxZ
		p	10		height
	m	(Lcga;Lbtf;Lgt;Lcur;Lcsl;Lcaa;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		stack
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lcur;Lgt;)V	a	resetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcga;Lcur;Lgt;Lbtf;Lcsi$b;)V	a	releaseBeesAndResetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
		p	4		player
		p	5		beeState
	m	(Lcga;Lgt;)V	a	dropHoneycomb
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;)V	a	trySpawnDripParticles
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcga;Lgt;Ldwm;D)V	a	spawnParticle
		p	1		world
		p	2		pos
		p	3		shape
		p	4		height
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Ldrg$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;)V	b	angerNearbyBees
		p	1		world
		p	2		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcga;Lgt;)Z	c	hiveContainsBees
		p	1		world
		p	2		pos
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvr;	b	HONEY_LEVEL
	f	I	c	MAX_HONEY_LEVELS
	f	I	d	SHEARED_HONEYCOMB_COUNT
c	cir	net/minecraft/world/level/block/BeetrootBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcvr;	b	getAgeProperty
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()I	c	getMaxAge
	m	()Lcfz;	d	getBaseSeedId
	f	I	a	MAX_AGE
	f	Lcvr;	b	AGE
	f	[Ldwm;	e	SHAPE_BY_AGE
c	cis	net/minecraft/world/level/block/BellBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;Lcga;Lgt;Lgy;)Z	a	attemptToRing
		p	1		entity
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lcur;Ldvp;Lbtf;Z)Z	a	onHit
		p	1		world
		p	2		state
		p	3		hitResult
		p	4		player
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Lgt;Lgy;)Z	a	attemptToRing
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;D)Z	a	isProperHit
		p	1		state
		p	2		side
		p	3		y
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Ldwm;	h	getVoxelShape
		p	1		state
	m	(Lcur;)Lgy;	n	getConnectedDirection
		p	0		state
	f	Ldwm;	E	TO_SOUTH
	f	Ldwm;	F	CEILING_SHAPE
	f	Lcvl;	a	FACING
	f	Lcvp;	b	ATTACHMENT
	f	Lcvi;	c	POWERED
	f	I	d	EVENT_BELL_RING
	f	Ldwm;	e	NORTH_SOUTH_FLOOR_SHAPE
	f	Ldwm;	f	EAST_WEST_FLOOR_SHAPE
	f	Ldwm;	g	BELL_TOP_SHAPE
	f	Ldwm;	h	BELL_BOTTOM_SHAPE
	f	Ldwm;	i	BELL_SHAPE
	f	Ldwm;	j	NORTH_SOUTH_BETWEEN
	f	Ldwm;	k	EAST_WEST_BETWEEN
	f	Ldwm;	l	TO_WEST
	f	Ldwm;	m	TO_EAST
	f	Ldwm;	n	TO_NORTH
c	cis$1	net/minecraft/world/level/block/BellBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
c	cit	net/minecraft/world/level/block/BigDripleafBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Lgt;Lajd;)V	a	playTiltSound
		p	0		world
		p	1		pos
		p	2		soundEvent
	m	(Lcgb;Lalu;Lgt;Lgy;)V	a	placeWithRandomHeight
		p	0		world
		p	1		random
		p	2		pos
		p	3		direction
	m	(Lcgb;Lgt;Ldoy;Lgy;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Lcgc;Lgt;Lcur;)Z	a	canPlaceAt
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcwb;)V	a	setTilt
		p	0		state
		p	1		world
		p	2		pos
		p	3		tilt
	m	(Lcur;Lcga;Lgt;Lcwb;Lajd;)V	a	setTiltAndScheduleTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		tilt
		p	5		sound
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lbaq;)Z	a	canEntityTilt
		p	0		pos
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;)V	a	lambda$static$0
		p	0		delays
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcga;Lgt;)V	d	resetTilt
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;)Ldwm;	h	calculateShape
		p	0		state
	m	(Lcur;)Z	n	canReplace
		p	0		state
	f	Lcvi;	a	WATERLOGGED
	f	Lcvp;	b	TILT
	f	I	c	NO_TICK
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	DELAY_UNTIL_NEXT_TILT_STATE
	f	I	e	MAX_GEN_HEIGHT
	f	I	f	STEM_WIDTH
	f	I	g	ENTITY_DETECTION_MIN_Y
	f	I	h	LOWEST_LEAF_TOP
	f	Ljava/util/Map;	i	LEAF_SHAPES
	f	Ldwm;	j	STEM_SLICER
	f	Ljava/util/Map;	k	STEM_SHAPES
	f	Ljava/util/Map;	l	shapesCache
c	ciu	net/minecraft/world/level/block/BigDripleafStemBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcgb;Lgt;Ldoy;Lgy;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Ldwm;	a	NORTH_SHAPE
	f	Ldwm;	b	SOUTH_SHAPE
	f	Ldwm;	c	EAST_SHAPE
	f	Ldwm;	d	WEST_SHAPE
	f	Lcvi;	e	WATERLOGGED
	f	I	f	STEM_WIDTH
c	ciu$1	net/minecraft/world/level/block/BigDripleafStemBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	civ	net/minecraft/world/level/block/BlastFurnaceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lbtf;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
c	ciw	net/minecraft/world/level/block/Block
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Z	Z_	isPossibleToRespawnInThis
	m	(DDDDDD)Ldwm;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(I)Lcur;	a	stateById
		p	0		stateId
	m	(Lafo;Lgt;I)V	a	popExperience
		p	1		world
		p	2		pos
		p	3		size
	m	(Lafo;Lgt;Lcaa;)V	a	lambda$dropResources$1
		p	2		stack
	m	(Lafo;Lgt;Lcaa;Layr;)V	a	tryDropExperience
		p	1		world
		p	2		pos
		p	3		tool
		p	4		experience
	m	(Lbym;Lhi;)V	a	fillItemCategory
		p	1		group
		p	2		stacks
	m	(Lbzw;)Lciw;	a	byItem
		p	0		item
	m	(Lcaa;Lcfg;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lbaq;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfs;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Lcga;DDDLcaa;)Lbpy;	a	lambda$popResource$5
	m	(Lcga;DDDLcaa;DDD)Lbpy;	a	lambda$popResourceFromFace$6
	m	(Lcga;Lbtf;Lgt;Lcur;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Lcga;Lbtf;Lgt;Lcur;Lcsl;Lcaa;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		stack
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcga;Lgt;Lcaa;)V	a	popResource
		p	0		world
		p	1		pos
		p	2		stack
	m	(Lcga;Lgt;Lcfs;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcga;Lgt;Lgy;Lcaa;)V	a	popResourceFromFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		stack
	m	(Lcga;Ljava/util/function/Supplier;Lcaa;)V	a	popResource
		p	0		world
		p	1		itemEntitySupplier
		p	2		stack
	m	(Lcgb;Lgt;Lcaa;)V	a	lambda$dropResources$3
		p	2		stack
	m	(Lcgb;Lgt;Lcur;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgd;Lgt;Lgy;)Z	a	canSupportCenter
		p	0		world
		p	1		pos
		p	2		side
	m	(Lcur;Lafo;Lgt;Lcsl;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Lcur;Lafo;Lgt;Lcsl;Lbaq;Lcaa;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		stack
	m	(Lcur;Lcfg;Lgt;Lgy;Lgt;)Z	a	shouldRenderFace
		p	0		state
		p	1		world
		p	2		pos
		p	3		side
		p	4		otherPos
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcgw$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Lcur;Lcga;Lgt;Lcsl;Lbaq;Lcaa;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		stack
	m	(Lcur;Lcgb;Lgt;Lcsl;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Lcur;Lcur;Lcgb;Lgt;)Lcur;	a	pushEntitiesUp
		p	0		from
		p	1		to
		p	3		pos
	m	(Lcur;Lcur;Lcgb;Lgt;I)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
	m	(Lcur;Lcur;Lcgb;Lgt;II)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Lcur;Lcur;Lcvu;)Lcur;	a	copyProperty
		p	0		source
		p	1		target
		p	2		property
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldwm;)Z	a	isShapeFullBlock
		p	0		shape
	m	(Ldwm;Lgy;)Z	a	isFaceFull
		p	0		shape
		p	1		side
	m	(Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap;	a	getShapeForEachState
		p	1		stateToShape
	m	(Lcga;Lgt;Lcaa;)V	b	lambda$dropResources$4
		p	2		stack
	m	(Lcur;Lcgb;Lgt;)Lcur;	b	updateFromNeighbourShapes
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Ldrg$a;)V	b	dropResources
		p	0		state
		p	1		lootContext
	m	(Lcfg;Lgt;)Z	c	canSupportRigidBlock
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcaa;)V	c	lambda$dropResources$2
		p	2		stack
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;)V	c	dropResources
		p	0		state
		p	1		world
		p	2		pos
	m	()F	e	getExplosionResistance
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Lrt;	f	getName
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()F	h	getFriction
	m	()F	i	getSpeedFactor
	m	(Lcur;)I	i	getId
		p	0		state
	m	()F	j	getJumpFactor
	m	(Lcur;)Z	j	isExceptionForConnection
		p	0		state
	m	()Lcus;	k	getStateDefinition
	m	(Lcur;)V	k	registerDefaultState
		p	1		state
	m	()Lbzw;	l	asItem
	m	(Lcur;)Lcur;	l	withPropertiesOf
		p	1		state
	m	()Lcur;	m	defaultBlockState
	m	(Lcur;)Lcpz;	m	getSoundType
		p	1		state
	m	()Z	n	hasDynamicShape
	m	()Lciw;	o	asBlock
	m	()Lhc$c;	p	builtInRegistryHolder
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	q	lambda$static$0
	f	F	A	INDESTRUCTIBLE
	f	F	B	INSTANT
	f	I	C	UPDATE_LIMIT
	f	Lcus;	D	stateDefinition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhc$c;	b	builtInRegistryHolder
	f	Lcom/google/common/cache/LoadingCache;	c	SHAPE_FULL_BLOCK_CACHE
	f	Lcur;	d	defaultBlockState
	f	Ljava/lang/String;	e	descriptionId
	f	Lbzw;	f	item
	f	I	g	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	h	OCCLUSION_CACHE
	f	Lhg;	o	BLOCK_STATE_REGISTRY
	f	I	p	UPDATE_NEIGHBORS
	f	I	q	UPDATE_CLIENTS
	f	I	r	UPDATE_INVISIBLE
	f	I	s	UPDATE_IMMEDIATE
	f	I	t	UPDATE_KNOWN_SHAPE
	f	I	u	UPDATE_SUPPRESS_DROPS
	f	I	v	UPDATE_MOVE_BY_PISTON
	f	I	w	UPDATE_SUPPRESS_LIGHT
	f	I	x	UPDATE_NONE
	f	I	y	UPDATE_ALL
	f	I	z	UPDATE_ALL_IMMEDIATE
c	ciw$1	net/minecraft/world/level/block/Block$1
	m	(Ldwm;)Ljava/lang/Boolean;	a	load
c	ciw$2	net/minecraft/world/level/block/Block$2
c	ciw$a	net/minecraft/world/level/block/Block$BlockStatePairKey
	m	(Lcur;Lcur;Lgy;)V	<init>	<init>
		p	1		self
		p	2		other
		p	3		facing
	f	Lcur;	a	first
	f	Lcur;	b	second
	f	Lgy;	c	direction
c	cix	net/minecraft/world/level/block/Blocks
	m	(Lcur;)I	A	lambda$static$27
		p	0		state
	m	(Lcur;)I	B	lambda$static$26
		p	0		state
	m	(Lcur;)I	C	lambda$static$21
		p	0		state
	m	(Lcur;)I	D	lambda$static$20
		p	0		state
	m	(Lcur;)I	E	lambda$static$19
		p	0		state
	m	(Lcur;)I	F	lambda$static$18
		p	0		state
	m	(Lcur;)I	G	lambda$static$17
		p	0		state
	m	(Lcur;)I	H	lambda$static$13
		p	0		state
	m	(Lcur;)I	I	lambda$static$12
		p	0		state
	m	(Lcur;)I	J	lambda$static$11
		p	0		state
	m	(Lcur;)I	K	lambda$static$10
		p	0		state
	m	(Lcur;)I	L	lambda$static$7
		p	0		state
	m	(Lcur;)I	M	lambda$static$6
		p	0		state
	m	()V	a	rebuildCache
	m	(I)Ljava/util/function/ToIntFunction;	a	litBlockEmission
		p	0		litLevel
	m	(ILcur;)I	a	lambda$litBlockEmission$0
		p	1		state
	m	(Lbyt;)Lcip;	a	bed
		p	0		color
	m	(Lbyt;Lcuq$c;)Lcpm;	a	shulkerBox
		p	0		color
		p	1		settings
	m	(Lbyt;Lcur;)Ldpd;	a	lambda$bed$1
		p	1		state
	m	(Lcpz;)Lcmw;	a	leaves
		p	0		soundGroup
	m	(Lcur;)I	a	lambda$static$58
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	a	always
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lbau;)Ljava/lang/Boolean;	a	never
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldpd;)Lciw;	a	netherStem
		p	0		mapColor
	m	(Ldpd;Lcur;)Ldpd;	a	lambda$netherStem$3
		p	1		state
	m	(Ldpd;Ldpd;)Lcoy;	a	log
		p	0		topMapColor
		p	1		sideMapColor
	m	(Ldpd;Ldpd;Lcur;)Ldpd;	a	lambda$log$2
		p	2		state
	m	(Ljava/lang/String;Lciw;)Lciw;	a	register
		p	0		id
		p	1		block
	m	(Z)Lcuk;	a	pistonBase
		p	0		sticky
	m	()Lhc;	b	lambda$static$45
	m	(Lbyt;)Lcqe;	b	stainedGlass
		p	0		color
	m	(Lcur;)I	b	lambda$static$57
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	b	never
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lbau;)Ljava/lang/Boolean;	b	always
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	()Lhc;	c	lambda$static$44
	m	(Lcur;)I	c	lambda$static$56
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	c	lambda$static$54
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lbau;)Ljava/lang/Boolean;	c	ocelotOrParrot
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	()Lbzw;	d	lambda$static$25
	m	(Lcur;)I	d	lambda$static$55
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	d	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lbau;)Z	d	lambda$static$39
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lbzw;	e	lambda$static$24
	m	(Lcur;)I	e	lambda$static$53
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	e	lambda$pistonBase$5
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lbau;)Z	e	lambda$static$37
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lbzw;	f	lambda$static$23
	m	(Lcur;)I	f	lambda$static$52
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	f	lambda$shulkerBox$4
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lbau;)Z	f	lambda$static$16
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lbzw;	g	lambda$static$22
	m	(Lcur;)I	g	lambda$static$51
		p	0		state
	m	()Lcsn;	h	lambda$static$14
	m	(Lcur;)I	h	lambda$static$50
		p	0		state
	m	()Lhc;	i	lambda$static$9
	m	(Lcur;)I	i	lambda$static$49
		p	0		state
	m	()Lhc;	j	lambda$static$8
	m	(Lcur;)I	j	lambda$static$48
		p	0		state
	m	(Lcur;)I	k	lambda$static$47
		p	0		state
	m	(Lcur;)I	l	lambda$static$46
		p	0		state
	m	(Lcur;)I	m	lambda$static$43
		p	0		state
	m	(Lcur;)I	n	lambda$static$42
		p	0		state
	m	(Lcur;)I	o	lambda$static$41
		p	0		state
	m	(Lcur;)I	p	lambda$static$40
		p	0		state
	m	(Lcur;)I	q	lambda$static$38
		p	0		state
	m	(Lcur;)I	r	lambda$static$36
		p	0		state
	m	(Lcur;)I	s	lambda$static$35
		p	0		state
	m	(Lcur;)I	t	lambda$static$34
		p	0		state
	m	(Lcur;)I	u	lambda$static$33
		p	0		state
	m	(Lcur;)I	v	lambda$static$32
		p	0		state
	m	(Lcur;)I	w	lambda$static$31
		p	0		state
	m	(Lcur;)I	x	lambda$static$30
		p	0		state
	m	(Lcur;)I	y	lambda$static$29
		p	0		state
	m	(Lcur;)I	z	lambda$static$28
		p	0		state
	f	Lciw;	A	MANGROVE_PROPAGULE
	f	Lciw;	B	BEDROCK
	f	Lciw;	C	WATER
	f	Lciw;	D	LAVA
	f	Lciw;	E	SAND
	f	Lciw;	F	RED_SAND
	f	Lciw;	G	GRAVEL
	f	Lciw;	H	GOLD_ORE
	f	Lciw;	I	DEEPSLATE_GOLD_ORE
	f	Lciw;	J	IRON_ORE
	f	Lciw;	K	DEEPSLATE_IRON_ORE
	f	Lciw;	L	COAL_ORE
	f	Lciw;	M	DEEPSLATE_COAL_ORE
	f	Lciw;	N	NETHER_GOLD_ORE
	f	Lciw;	O	OAK_LOG
	f	Lciw;	P	SPRUCE_LOG
	f	Lciw;	Q	BIRCH_LOG
	f	Lciw;	R	JUNGLE_LOG
	f	Lciw;	S	ACACIA_LOG
	f	Lciw;	T	DARK_OAK_LOG
	f	Lciw;	U	MANGROVE_LOG
	f	Lciw;	V	MANGROVE_ROOTS
	f	Lciw;	W	MUDDY_MANGROVE_ROOTS
	f	Lciw;	X	STRIPPED_SPRUCE_LOG
	f	Lciw;	Y	STRIPPED_BIRCH_LOG
	f	Lciw;	Z	STRIPPED_JUNGLE_LOG
	f	Lciw;	aA	FLOWERING_AZALEA_LEAVES
	f	Lciw;	aB	SPONGE
	f	Lciw;	aC	WET_SPONGE
	f	Lciw;	aD	GLASS
	f	Lciw;	aE	LAPIS_ORE
	f	Lciw;	aF	DEEPSLATE_LAPIS_ORE
	f	Lciw;	aG	LAPIS_BLOCK
	f	Lciw;	aH	DISPENSER
	f	Lciw;	aI	SANDSTONE
	f	Lciw;	aJ	CHISELED_SANDSTONE
	f	Lciw;	aK	CUT_SANDSTONE
	f	Lciw;	aL	NOTE_BLOCK
	f	Lciw;	a	AIR
	f	Lciw;	aM	WHITE_BED
	f	Lciw;	aN	ORANGE_BED
	f	Lciw;	aO	MAGENTA_BED
	f	Lciw;	aP	LIGHT_BLUE_BED
	f	Lciw;	aQ	YELLOW_BED
	f	Lciw;	aR	LIME_BED
	f	Lciw;	aS	PINK_BED
	f	Lciw;	aT	GRAY_BED
	f	Lciw;	aU	LIGHT_GRAY_BED
	f	Lciw;	aV	CYAN_BED
	f	Lciw;	aW	PURPLE_BED
	f	Lciw;	aX	BLUE_BED
	f	Lciw;	aY	BROWN_BED
	f	Lciw;	aZ	GREEN_BED
	f	Lciw;	aa	STRIPPED_ACACIA_LOG
	f	Lciw;	ab	STRIPPED_DARK_OAK_LOG
	f	Lciw;	ac	STRIPPED_OAK_LOG
	f	Lciw;	ad	STRIPPED_MANGROVE_LOG
	f	Lciw;	ae	OAK_WOOD
	f	Lciw;	af	SPRUCE_WOOD
	f	Lciw;	ag	BIRCH_WOOD
	f	Lciw;	ah	JUNGLE_WOOD
	f	Lciw;	ai	ACACIA_WOOD
	f	Lciw;	aj	DARK_OAK_WOOD
	f	Lciw;	ak	MANGROVE_WOOD
	f	Lciw;	al	STRIPPED_OAK_WOOD
	f	Lciw;	am	STRIPPED_SPRUCE_WOOD
	f	Lciw;	an	STRIPPED_BIRCH_WOOD
	f	Lciw;	ao	STRIPPED_JUNGLE_WOOD
	f	Lciw;	ap	STRIPPED_ACACIA_WOOD
	f	Lciw;	aq	STRIPPED_DARK_OAK_WOOD
	f	Lciw;	ar	STRIPPED_MANGROVE_WOOD
	f	Lciw;	as	OAK_LEAVES
	f	Lciw;	at	SPRUCE_LEAVES
	f	Lciw;	au	BIRCH_LEAVES
	f	Lciw;	av	JUNGLE_LEAVES
	f	Lciw;	aw	ACACIA_LEAVES
	f	Lciw;	ax	DARK_OAK_LEAVES
	f	Lciw;	ay	MANGROVE_LEAVES
	f	Lciw;	az	AZALEA_LEAVES
	f	Lciw;	bA	GREEN_WOOL
	f	Lciw;	bB	RED_WOOL
	f	Lciw;	bC	BLACK_WOOL
	f	Lciw;	bD	MOVING_PISTON
	f	Lciw;	bE	DANDELION
	f	Lciw;	bF	POPPY
	f	Lciw;	bG	BLUE_ORCHID
	f	Lciw;	bH	ALLIUM
	f	Lciw;	bI	AZURE_BLUET
	f	Lciw;	bJ	RED_TULIP
	f	Lciw;	bK	ORANGE_TULIP
	f	Lciw;	bL	WHITE_TULIP
	f	Lciw;	b	STONE
	f	Lciw;	bM	PINK_TULIP
	f	Lciw;	bN	OXEYE_DAISY
	f	Lciw;	bO	CORNFLOWER
	f	Lciw;	bP	WITHER_ROSE
	f	Lciw;	bQ	LILY_OF_THE_VALLEY
	f	Lciw;	bR	BROWN_MUSHROOM
	f	Lciw;	bS	RED_MUSHROOM
	f	Lciw;	bT	GOLD_BLOCK
	f	Lciw;	bU	IRON_BLOCK
	f	Lciw;	bV	BRICKS
	f	Lciw;	bW	TNT
	f	Lciw;	bX	BOOKSHELF
	f	Lciw;	bY	MOSSY_COBBLESTONE
	f	Lciw;	bZ	OBSIDIAN
	f	Lciw;	ba	RED_BED
	f	Lciw;	bb	BLACK_BED
	f	Lciw;	bc	POWERED_RAIL
	f	Lciw;	bd	DETECTOR_RAIL
	f	Lciw;	be	STICKY_PISTON
	f	Lciw;	bf	COBWEB
	f	Lciw;	bg	GRASS
	f	Lciw;	bh	FERN
	f	Lciw;	bi	DEAD_BUSH
	f	Lciw;	bj	SEAGRASS
	f	Lciw;	bk	TALL_SEAGRASS
	f	Lciw;	bl	PISTON
	f	Lciw;	bm	PISTON_HEAD
	f	Lciw;	bn	WHITE_WOOL
	f	Lciw;	bo	ORANGE_WOOL
	f	Lciw;	bp	MAGENTA_WOOL
	f	Lciw;	bq	LIGHT_BLUE_WOOL
	f	Lciw;	br	YELLOW_WOOL
	f	Lciw;	bs	LIME_WOOL
	f	Lciw;	bt	PINK_WOOL
	f	Lciw;	bu	GRAY_WOOL
	f	Lciw;	bv	LIGHT_GRAY_WOOL
	f	Lciw;	bw	CYAN_WOOL
	f	Lciw;	bx	PURPLE_WOOL
	f	Lciw;	by	BLUE_WOOL
	f	Lciw;	bz	BROWN_WOOL
	f	Lciw;	cA	OAK_WALL_SIGN
	f	Lciw;	cB	SPRUCE_WALL_SIGN
	f	Lciw;	cC	BIRCH_WALL_SIGN
	f	Lciw;	cD	ACACIA_WALL_SIGN
	f	Lciw;	cE	JUNGLE_WALL_SIGN
	f	Lciw;	cF	DARK_OAK_WALL_SIGN
	f	Lciw;	cG	MANGROVE_WALL_SIGN
	f	Lciw;	cH	LEVER
	f	Lciw;	cI	STONE_PRESSURE_PLATE
	f	Lciw;	cJ	IRON_DOOR
	f	Lciw;	cK	OAK_PRESSURE_PLATE
	f	Lciw;	cL	SPRUCE_PRESSURE_PLATE
	f	Lciw;	c	GRANITE
	f	Lciw;	cM	BIRCH_PRESSURE_PLATE
	f	Lciw;	cN	JUNGLE_PRESSURE_PLATE
	f	Lciw;	cO	ACACIA_PRESSURE_PLATE
	f	Lciw;	cP	DARK_OAK_PRESSURE_PLATE
	f	Lciw;	cQ	MANGROVE_PRESSURE_PLATE
	f	Lciw;	cR	REDSTONE_ORE
	f	Lciw;	cS	DEEPSLATE_REDSTONE_ORE
	f	Lciw;	cT	REDSTONE_TORCH
	f	Lciw;	cU	REDSTONE_WALL_TORCH
	f	Lciw;	cV	STONE_BUTTON
	f	Lciw;	cW	SNOW
	f	Lciw;	cX	ICE
	f	Lciw;	cY	SNOW_BLOCK
	f	Lciw;	cZ	CACTUS
	f	Lciw;	ca	TORCH
	f	Lciw;	cb	WALL_TORCH
	f	Lciw;	cc	FIRE
	f	Lciw;	cd	SOUL_FIRE
	f	Lciw;	ce	SPAWNER
	f	Lciw;	cf	OAK_STAIRS
	f	Lciw;	cg	CHEST
	f	Lciw;	ch	REDSTONE_WIRE
	f	Lciw;	ci	DIAMOND_ORE
	f	Lciw;	cj	DEEPSLATE_DIAMOND_ORE
	f	Lciw;	ck	DIAMOND_BLOCK
	f	Lciw;	cl	CRAFTING_TABLE
	f	Lciw;	cm	WHEAT
	f	Lciw;	cn	FARMLAND
	f	Lciw;	co	FURNACE
	f	Lciw;	cp	OAK_SIGN
	f	Lciw;	cq	SPRUCE_SIGN
	f	Lciw;	cr	BIRCH_SIGN
	f	Lciw;	cs	ACACIA_SIGN
	f	Lciw;	ct	JUNGLE_SIGN
	f	Lciw;	cu	DARK_OAK_SIGN
	f	Lciw;	cv	MANGROVE_SIGN
	f	Lciw;	cw	OAK_DOOR
	f	Lciw;	cx	LADDER
	f	Lciw;	cy	RAIL
	f	Lciw;	cz	COBBLESTONE_STAIRS
	f	Lciw;	dA	LIGHT_GRAY_STAINED_GLASS
	f	Lciw;	dB	CYAN_STAINED_GLASS
	f	Lciw;	dC	PURPLE_STAINED_GLASS
	f	Lciw;	dD	BLUE_STAINED_GLASS
	f	Lciw;	dE	BROWN_STAINED_GLASS
	f	Lciw;	dF	GREEN_STAINED_GLASS
	f	Lciw;	dG	RED_STAINED_GLASS
	f	Lciw;	dH	BLACK_STAINED_GLASS
	f	Lciw;	dI	OAK_TRAPDOOR
	f	Lciw;	dJ	SPRUCE_TRAPDOOR
	f	Lciw;	dK	BIRCH_TRAPDOOR
	f	Lciw;	dL	JUNGLE_TRAPDOOR
	f	Lciw;	d	POLISHED_GRANITE
	f	Lciw;	dM	ACACIA_TRAPDOOR
	f	Lciw;	dN	DARK_OAK_TRAPDOOR
	f	Lciw;	dO	MANGROVE_TRAPDOOR
	f	Lciw;	dP	STONE_BRICKS
	f	Lciw;	dQ	MOSSY_STONE_BRICKS
	f	Lciw;	dR	CRACKED_STONE_BRICKS
	f	Lciw;	dS	CHISELED_STONE_BRICKS
	f	Lciw;	dT	PACKED_MUD
	f	Lciw;	dU	MUD_BRICKS
	f	Lciw;	dV	INFESTED_STONE
	f	Lciw;	dW	INFESTED_COBBLESTONE
	f	Lciw;	dX	INFESTED_STONE_BRICKS
	f	Lciw;	dY	INFESTED_MOSSY_STONE_BRICKS
	f	Lciw;	dZ	INFESTED_CRACKED_STONE_BRICKS
	f	Lciw;	da	CLAY
	f	Lciw;	db	SUGAR_CANE
	f	Lciw;	dc	JUKEBOX
	f	Lciw;	dd	OAK_FENCE
	f	Lciw;	de	PUMPKIN
	f	Lciw;	df	NETHERRACK
	f	Lciw;	dg	SOUL_SAND
	f	Lciw;	dh	SOUL_SOIL
	f	Lciw;	di	BASALT
	f	Lciw;	dj	POLISHED_BASALT
	f	Lciw;	dk	SOUL_TORCH
	f	Lciw;	dl	SOUL_WALL_TORCH
	f	Lciw;	dm	GLOWSTONE
	f	Lciw;	dn	NETHER_PORTAL
	f	Lciw;	do	CARVED_PUMPKIN
	f	Lciw;	dp	JACK_O_LANTERN
	f	Lciw;	dq	CAKE
	f	Lciw;	dr	REPEATER
	f	Lciw;	ds	WHITE_STAINED_GLASS
	f	Lciw;	dt	ORANGE_STAINED_GLASS
	f	Lciw;	du	MAGENTA_STAINED_GLASS
	f	Lciw;	dv	LIGHT_BLUE_STAINED_GLASS
	f	Lciw;	dw	YELLOW_STAINED_GLASS
	f	Lciw;	dx	LIME_STAINED_GLASS
	f	Lciw;	dy	PINK_STAINED_GLASS
	f	Lciw;	dz	GRAY_STAINED_GLASS
	f	Lciw;	eA	CAULDRON
	f	Lciw;	eB	WATER_CAULDRON
	f	Lciw;	eC	LAVA_CAULDRON
	f	Lciw;	eD	POWDER_SNOW_CAULDRON
	f	Lciw;	eE	END_PORTAL
	f	Lciw;	eF	END_PORTAL_FRAME
	f	Lciw;	eG	END_STONE
	f	Lciw;	eH	DRAGON_EGG
	f	Lciw;	eI	REDSTONE_LAMP
	f	Lciw;	eJ	COCOA
	f	Lciw;	eK	SANDSTONE_STAIRS
	f	Lciw;	eL	EMERALD_ORE
	f	Lciw;	e	DIORITE
	f	Lciw;	eM	DEEPSLATE_EMERALD_ORE
	f	Lciw;	eN	ENDER_CHEST
	f	Lciw;	eO	TRIPWIRE_HOOK
	f	Lciw;	eP	TRIPWIRE
	f	Lciw;	eQ	EMERALD_BLOCK
	f	Lciw;	eR	SPRUCE_STAIRS
	f	Lciw;	eS	BIRCH_STAIRS
	f	Lciw;	eT	JUNGLE_STAIRS
	f	Lciw;	eU	COMMAND_BLOCK
	f	Lciw;	eV	BEACON
	f	Lciw;	eW	COBBLESTONE_WALL
	f	Lciw;	eX	MOSSY_COBBLESTONE_WALL
	f	Lciw;	eY	FLOWER_POT
	f	Lciw;	eZ	POTTED_OAK_SAPLING
	f	Lciw;	ea	INFESTED_CHISELED_STONE_BRICKS
	f	Lciw;	eb	BROWN_MUSHROOM_BLOCK
	f	Lciw;	ec	RED_MUSHROOM_BLOCK
	f	Lciw;	ed	MUSHROOM_STEM
	f	Lciw;	ee	IRON_BARS
	f	Lciw;	ef	CHAIN
	f	Lciw;	eg	GLASS_PANE
	f	Lciw;	eh	MELON
	f	Lciw;	ei	ATTACHED_PUMPKIN_STEM
	f	Lciw;	ej	ATTACHED_MELON_STEM
	f	Lciw;	ek	PUMPKIN_STEM
	f	Lciw;	el	MELON_STEM
	f	Lciw;	em	VINE
	f	Lciw;	en	GLOW_LICHEN
	f	Lciw;	eo	OAK_FENCE_GATE
	f	Lciw;	ep	BRICK_STAIRS
	f	Lciw;	eq	STONE_BRICK_STAIRS
	f	Lciw;	er	MUD_BRICK_STAIRS
	f	Lciw;	es	MYCELIUM
	f	Lciw;	et	LILY_PAD
	f	Lciw;	eu	NETHER_BRICKS
	f	Lciw;	ev	NETHER_BRICK_FENCE
	f	Lciw;	ew	NETHER_BRICK_STAIRS
	f	Lciw;	ex	NETHER_WART
	f	Lciw;	ey	ENCHANTING_TABLE
	f	Lciw;	ez	BREWING_STAND
	f	Lciw;	fA	OAK_BUTTON
	f	Lciw;	fB	SPRUCE_BUTTON
	f	Lciw;	fC	BIRCH_BUTTON
	f	Lciw;	fD	JUNGLE_BUTTON
	f	Lciw;	fE	ACACIA_BUTTON
	f	Lciw;	fF	DARK_OAK_BUTTON
	f	Lciw;	fG	MANGROVE_BUTTON
	f	Lciw;	fH	SKELETON_SKULL
	f	Lciw;	fI	SKELETON_WALL_SKULL
	f	Lciw;	fJ	WITHER_SKELETON_SKULL
	f	Lciw;	fK	WITHER_SKELETON_WALL_SKULL
	f	Lciw;	fL	ZOMBIE_HEAD
	f	Lciw;	f	POLISHED_DIORITE
	f	Lciw;	fM	ZOMBIE_WALL_HEAD
	f	Lciw;	fN	PLAYER_HEAD
	f	Lciw;	fO	PLAYER_WALL_HEAD
	f	Lciw;	fP	CREEPER_HEAD
	f	Lciw;	fQ	CREEPER_WALL_HEAD
	f	Lciw;	fR	DRAGON_HEAD
	f	Lciw;	fS	DRAGON_WALL_HEAD
	f	Lciw;	fT	ANVIL
	f	Lciw;	fU	CHIPPED_ANVIL
	f	Lciw;	fV	DAMAGED_ANVIL
	f	Lciw;	fW	TRAPPED_CHEST
	f	Lciw;	fX	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lciw;	fY	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lciw;	fZ	COMPARATOR
	f	Lciw;	fa	POTTED_SPRUCE_SAPLING
	f	Lciw;	fb	POTTED_BIRCH_SAPLING
	f	Lciw;	fc	POTTED_JUNGLE_SAPLING
	f	Lciw;	fd	POTTED_ACACIA_SAPLING
	f	Lciw;	fe	POTTED_DARK_OAK_SAPLING
	f	Lciw;	ff	POTTED_MANGROVE_PROPAGULE
	f	Lciw;	fg	POTTED_FERN
	f	Lciw;	fh	POTTED_DANDELION
	f	Lciw;	fi	POTTED_POPPY
	f	Lciw;	fj	POTTED_BLUE_ORCHID
	f	Lciw;	fk	POTTED_ALLIUM
	f	Lciw;	fl	POTTED_AZURE_BLUET
	f	Lciw;	fm	POTTED_RED_TULIP
	f	Lciw;	fn	POTTED_ORANGE_TULIP
	f	Lciw;	fo	POTTED_WHITE_TULIP
	f	Lciw;	fp	POTTED_PINK_TULIP
	f	Lciw;	fq	POTTED_OXEYE_DAISY
	f	Lciw;	fr	POTTED_CORNFLOWER
	f	Lciw;	fs	POTTED_LILY_OF_THE_VALLEY
	f	Lciw;	ft	POTTED_WITHER_ROSE
	f	Lciw;	fu	POTTED_RED_MUSHROOM
	f	Lciw;	fv	POTTED_BROWN_MUSHROOM
	f	Lciw;	fw	POTTED_DEAD_BUSH
	f	Lciw;	fx	POTTED_CACTUS
	f	Lciw;	fy	CARROTS
	f	Lciw;	fz	POTATOES
	f	Lciw;	gA	WHITE_STAINED_GLASS_PANE
	f	Lciw;	gB	ORANGE_STAINED_GLASS_PANE
	f	Lciw;	gC	MAGENTA_STAINED_GLASS_PANE
	f	Lciw;	gD	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lciw;	gE	YELLOW_STAINED_GLASS_PANE
	f	Lciw;	gF	LIME_STAINED_GLASS_PANE
	f	Lciw;	gG	PINK_STAINED_GLASS_PANE
	f	Lciw;	gH	GRAY_STAINED_GLASS_PANE
	f	Lciw;	gI	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lciw;	gJ	CYAN_STAINED_GLASS_PANE
	f	Lciw;	gK	PURPLE_STAINED_GLASS_PANE
	f	Lciw;	gL	BLUE_STAINED_GLASS_PANE
	f	Lciw;	g	ANDESITE
	f	Lciw;	gM	BROWN_STAINED_GLASS_PANE
	f	Lciw;	gN	GREEN_STAINED_GLASS_PANE
	f	Lciw;	gO	RED_STAINED_GLASS_PANE
	f	Lciw;	gP	BLACK_STAINED_GLASS_PANE
	f	Lciw;	gQ	ACACIA_STAIRS
	f	Lciw;	gR	DARK_OAK_STAIRS
	f	Lciw;	gS	MANGROVE_STAIRS
	f	Lciw;	gT	SLIME_BLOCK
	f	Lciw;	gU	BARRIER
	f	Lciw;	gV	LIGHT
	f	Lciw;	gW	IRON_TRAPDOOR
	f	Lciw;	gX	PRISMARINE
	f	Lciw;	gY	PRISMARINE_BRICKS
	f	Lciw;	gZ	DARK_PRISMARINE
	f	Lciw;	ga	DAYLIGHT_DETECTOR
	f	Lciw;	gb	REDSTONE_BLOCK
	f	Lciw;	gc	NETHER_QUARTZ_ORE
	f	Lciw;	gd	HOPPER
	f	Lciw;	ge	QUARTZ_BLOCK
	f	Lciw;	gf	CHISELED_QUARTZ_BLOCK
	f	Lciw;	gg	QUARTZ_PILLAR
	f	Lciw;	gh	QUARTZ_STAIRS
	f	Lciw;	gi	ACTIVATOR_RAIL
	f	Lciw;	gj	DROPPER
	f	Lciw;	gk	WHITE_TERRACOTTA
	f	Lciw;	gl	ORANGE_TERRACOTTA
	f	Lciw;	gm	MAGENTA_TERRACOTTA
	f	Lciw;	gn	LIGHT_BLUE_TERRACOTTA
	f	Lciw;	go	YELLOW_TERRACOTTA
	f	Lciw;	gp	LIME_TERRACOTTA
	f	Lciw;	gq	PINK_TERRACOTTA
	f	Lciw;	gr	GRAY_TERRACOTTA
	f	Lciw;	gs	LIGHT_GRAY_TERRACOTTA
	f	Lciw;	gt	CYAN_TERRACOTTA
	f	Lciw;	gu	PURPLE_TERRACOTTA
	f	Lciw;	gv	BLUE_TERRACOTTA
	f	Lciw;	gw	BROWN_TERRACOTTA
	f	Lciw;	gx	GREEN_TERRACOTTA
	f	Lciw;	gy	RED_TERRACOTTA
	f	Lciw;	gz	BLACK_TERRACOTTA
	f	Lciw;	hA	PACKED_ICE
	f	Lciw;	hB	SUNFLOWER
	f	Lciw;	hC	LILAC
	f	Lciw;	hD	ROSE_BUSH
	f	Lciw;	hE	PEONY
	f	Lciw;	hF	TALL_GRASS
	f	Lciw;	hG	LARGE_FERN
	f	Lciw;	hH	WHITE_BANNER
	f	Lciw;	hI	ORANGE_BANNER
	f	Lciw;	hJ	MAGENTA_BANNER
	f	Lciw;	hK	LIGHT_BLUE_BANNER
	f	Lciw;	hL	YELLOW_BANNER
	f	Lciw;	h	POLISHED_ANDESITE
	f	Lciw;	hM	LIME_BANNER
	f	Lciw;	hN	PINK_BANNER
	f	Lciw;	hO	GRAY_BANNER
	f	Lciw;	hP	LIGHT_GRAY_BANNER
	f	Lciw;	hQ	CYAN_BANNER
	f	Lciw;	hR	PURPLE_BANNER
	f	Lciw;	hS	BLUE_BANNER
	f	Lciw;	hT	BROWN_BANNER
	f	Lciw;	hU	GREEN_BANNER
	f	Lciw;	hV	RED_BANNER
	f	Lciw;	hW	BLACK_BANNER
	f	Lciw;	hX	WHITE_WALL_BANNER
	f	Lciw;	hY	ORANGE_WALL_BANNER
	f	Lciw;	hZ	MAGENTA_WALL_BANNER
	f	Lciw;	ha	PRISMARINE_STAIRS
	f	Lciw;	hb	PRISMARINE_BRICK_STAIRS
	f	Lciw;	hc	DARK_PRISMARINE_STAIRS
	f	Lciw;	hd	PRISMARINE_SLAB
	f	Lciw;	he	PRISMARINE_BRICK_SLAB
	f	Lciw;	hf	DARK_PRISMARINE_SLAB
	f	Lciw;	hg	SEA_LANTERN
	f	Lciw;	hh	HAY_BLOCK
	f	Lciw;	hi	WHITE_CARPET
	f	Lciw;	hj	ORANGE_CARPET
	f	Lciw;	hk	MAGENTA_CARPET
	f	Lciw;	hl	LIGHT_BLUE_CARPET
	f	Lciw;	hm	YELLOW_CARPET
	f	Lciw;	hn	LIME_CARPET
	f	Lciw;	ho	PINK_CARPET
	f	Lciw;	hp	GRAY_CARPET
	f	Lciw;	hq	LIGHT_GRAY_CARPET
	f	Lciw;	hr	CYAN_CARPET
	f	Lciw;	hs	PURPLE_CARPET
	f	Lciw;	ht	BLUE_CARPET
	f	Lciw;	hu	BROWN_CARPET
	f	Lciw;	hv	GREEN_CARPET
	f	Lciw;	hw	RED_CARPET
	f	Lciw;	hx	BLACK_CARPET
	f	Lciw;	hy	TERRACOTTA
	f	Lciw;	hz	COAL_BLOCK
	f	Lciw;	iA	SANDSTONE_SLAB
	f	Lciw;	iB	CUT_SANDSTONE_SLAB
	f	Lciw;	iC	PETRIFIED_OAK_SLAB
	f	Lciw;	iD	COBBLESTONE_SLAB
	f	Lciw;	iE	BRICK_SLAB
	f	Lciw;	iF	STONE_BRICK_SLAB
	f	Lciw;	iG	MUD_BRICK_SLAB
	f	Lciw;	iH	NETHER_BRICK_SLAB
	f	Lciw;	iI	QUARTZ_SLAB
	f	Lciw;	iJ	RED_SANDSTONE_SLAB
	f	Lciw;	iK	CUT_RED_SANDSTONE_SLAB
	f	Lciw;	iL	PURPUR_SLAB
	f	Lciw;	i	GRASS_BLOCK
	f	Lciw;	iM	SMOOTH_STONE
	f	Lciw;	iN	SMOOTH_SANDSTONE
	f	Lciw;	iO	SMOOTH_QUARTZ
	f	Lciw;	iP	SMOOTH_RED_SANDSTONE
	f	Lciw;	iQ	SPRUCE_FENCE_GATE
	f	Lciw;	iR	BIRCH_FENCE_GATE
	f	Lciw;	iS	JUNGLE_FENCE_GATE
	f	Lciw;	iT	ACACIA_FENCE_GATE
	f	Lciw;	iU	DARK_OAK_FENCE_GATE
	f	Lciw;	iV	MANGROVE_FENCE_GATE
	f	Lciw;	iW	SPRUCE_FENCE
	f	Lciw;	iX	BIRCH_FENCE
	f	Lciw;	iY	JUNGLE_FENCE
	f	Lciw;	iZ	ACACIA_FENCE
	f	Lciw;	ia	LIGHT_BLUE_WALL_BANNER
	f	Lciw;	ib	YELLOW_WALL_BANNER
	f	Lciw;	ic	LIME_WALL_BANNER
	f	Lciw;	id	PINK_WALL_BANNER
	f	Lciw;	ie	GRAY_WALL_BANNER
	f	Lciw;	if	LIGHT_GRAY_WALL_BANNER
	f	Lciw;	ig	CYAN_WALL_BANNER
	f	Lciw;	ih	PURPLE_WALL_BANNER
	f	Lciw;	ii	BLUE_WALL_BANNER
	f	Lciw;	ij	BROWN_WALL_BANNER
	f	Lciw;	ik	GREEN_WALL_BANNER
	f	Lciw;	il	RED_WALL_BANNER
	f	Lciw;	im	BLACK_WALL_BANNER
	f	Lciw;	in	RED_SANDSTONE
	f	Lciw;	io	CHISELED_RED_SANDSTONE
	f	Lciw;	ip	CUT_RED_SANDSTONE
	f	Lciw;	iq	RED_SANDSTONE_STAIRS
	f	Lciw;	ir	OAK_SLAB
	f	Lciw;	is	SPRUCE_SLAB
	f	Lciw;	it	BIRCH_SLAB
	f	Lciw;	iu	JUNGLE_SLAB
	f	Lciw;	iv	ACACIA_SLAB
	f	Lciw;	iw	DARK_OAK_SLAB
	f	Lciw;	ix	MANGROVE_SLAB
	f	Lciw;	iy	STONE_SLAB
	f	Lciw;	iz	SMOOTH_STONE_SLAB
	f	Lciw;	jA	OBSERVER
	f	Lciw;	jB	SHULKER_BOX
	f	Lciw;	jC	WHITE_SHULKER_BOX
	f	Lciw;	jD	ORANGE_SHULKER_BOX
	f	Lciw;	jE	MAGENTA_SHULKER_BOX
	f	Lciw;	jF	LIGHT_BLUE_SHULKER_BOX
	f	Lciw;	jG	YELLOW_SHULKER_BOX
	f	Lciw;	jH	LIME_SHULKER_BOX
	f	Lciw;	jI	PINK_SHULKER_BOX
	f	Lciw;	jJ	GRAY_SHULKER_BOX
	f	Lciw;	jK	LIGHT_GRAY_SHULKER_BOX
	f	Lciw;	jL	CYAN_SHULKER_BOX
	f	Lciw;	j	DIRT
	f	Lciw;	jM	PURPLE_SHULKER_BOX
	f	Lciw;	jN	BLUE_SHULKER_BOX
	f	Lciw;	jO	BROWN_SHULKER_BOX
	f	Lciw;	jP	GREEN_SHULKER_BOX
	f	Lciw;	jQ	RED_SHULKER_BOX
	f	Lciw;	jR	BLACK_SHULKER_BOX
	f	Lciw;	jS	WHITE_GLAZED_TERRACOTTA
	f	Lciw;	jT	ORANGE_GLAZED_TERRACOTTA
	f	Lciw;	jU	MAGENTA_GLAZED_TERRACOTTA
	f	Lciw;	jV	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lciw;	jW	YELLOW_GLAZED_TERRACOTTA
	f	Lciw;	jX	LIME_GLAZED_TERRACOTTA
	f	Lciw;	jY	PINK_GLAZED_TERRACOTTA
	f	Lciw;	jZ	GRAY_GLAZED_TERRACOTTA
	f	Lciw;	ja	DARK_OAK_FENCE
	f	Lciw;	jb	MANGROVE_FENCE
	f	Lciw;	jc	SPRUCE_DOOR
	f	Lciw;	jd	BIRCH_DOOR
	f	Lciw;	je	JUNGLE_DOOR
	f	Lciw;	jf	ACACIA_DOOR
	f	Lciw;	jg	DARK_OAK_DOOR
	f	Lciw;	jh	MANGROVE_DOOR
	f	Lciw;	ji	END_ROD
	f	Lciw;	jj	CHORUS_PLANT
	f	Lciw;	jk	CHORUS_FLOWER
	f	Lciw;	jl	PURPUR_BLOCK
	f	Lciw;	jm	PURPUR_PILLAR
	f	Lciw;	jn	PURPUR_STAIRS
	f	Lciw;	jo	END_STONE_BRICKS
	f	Lciw;	jp	BEETROOTS
	f	Lciw;	jq	DIRT_PATH
	f	Lciw;	jr	END_GATEWAY
	f	Lciw;	js	REPEATING_COMMAND_BLOCK
	f	Lciw;	jt	CHAIN_COMMAND_BLOCK
	f	Lciw;	ju	FROSTED_ICE
	f	Lciw;	jv	MAGMA_BLOCK
	f	Lciw;	jw	NETHER_WART_BLOCK
	f	Lciw;	jx	RED_NETHER_BRICKS
	f	Lciw;	jy	BONE_BLOCK
	f	Lciw;	jz	STRUCTURE_VOID
	f	Lciw;	kA	MAGENTA_CONCRETE_POWDER
	f	Lciw;	kB	LIGHT_BLUE_CONCRETE_POWDER
	f	Lciw;	kC	YELLOW_CONCRETE_POWDER
	f	Lciw;	kD	LIME_CONCRETE_POWDER
	f	Lciw;	kE	PINK_CONCRETE_POWDER
	f	Lciw;	kF	GRAY_CONCRETE_POWDER
	f	Lciw;	kG	LIGHT_GRAY_CONCRETE_POWDER
	f	Lciw;	kH	CYAN_CONCRETE_POWDER
	f	Lciw;	kI	PURPLE_CONCRETE_POWDER
	f	Lciw;	kJ	BLUE_CONCRETE_POWDER
	f	Lciw;	kK	BROWN_CONCRETE_POWDER
	f	Lciw;	kL	GREEN_CONCRETE_POWDER
	f	Lciw;	k	COARSE_DIRT
	f	Lciw;	kM	RED_CONCRETE_POWDER
	f	Lciw;	kN	BLACK_CONCRETE_POWDER
	f	Lciw;	kO	KELP
	f	Lciw;	kP	KELP_PLANT
	f	Lciw;	kQ	DRIED_KELP_BLOCK
	f	Lciw;	kR	TURTLE_EGG
	f	Lciw;	kS	DEAD_TUBE_CORAL_BLOCK
	f	Lciw;	kT	DEAD_BRAIN_CORAL_BLOCK
	f	Lciw;	kU	DEAD_BUBBLE_CORAL_BLOCK
	f	Lciw;	kV	DEAD_FIRE_CORAL_BLOCK
	f	Lciw;	kW	DEAD_HORN_CORAL_BLOCK
	f	Lciw;	kX	TUBE_CORAL_BLOCK
	f	Lciw;	kY	BRAIN_CORAL_BLOCK
	f	Lciw;	kZ	BUBBLE_CORAL_BLOCK
	f	Lciw;	ka	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lciw;	kb	CYAN_GLAZED_TERRACOTTA
	f	Lciw;	kc	PURPLE_GLAZED_TERRACOTTA
	f	Lciw;	kd	BLUE_GLAZED_TERRACOTTA
	f	Lciw;	ke	BROWN_GLAZED_TERRACOTTA
	f	Lciw;	kf	GREEN_GLAZED_TERRACOTTA
	f	Lciw;	kg	RED_GLAZED_TERRACOTTA
	f	Lciw;	kh	BLACK_GLAZED_TERRACOTTA
	f	Lciw;	ki	WHITE_CONCRETE
	f	Lciw;	kj	ORANGE_CONCRETE
	f	Lciw;	kk	MAGENTA_CONCRETE
	f	Lciw;	kl	LIGHT_BLUE_CONCRETE
	f	Lciw;	km	YELLOW_CONCRETE
	f	Lciw;	kn	LIME_CONCRETE
	f	Lciw;	ko	PINK_CONCRETE
	f	Lciw;	kp	GRAY_CONCRETE
	f	Lciw;	kq	LIGHT_GRAY_CONCRETE
	f	Lciw;	kr	CYAN_CONCRETE
	f	Lciw;	ks	PURPLE_CONCRETE
	f	Lciw;	kt	BLUE_CONCRETE
	f	Lciw;	ku	BROWN_CONCRETE
	f	Lciw;	kv	GREEN_CONCRETE
	f	Lciw;	kw	RED_CONCRETE
	f	Lciw;	kx	BLACK_CONCRETE
	f	Lciw;	ky	WHITE_CONCRETE_POWDER
	f	Lciw;	kz	ORANGE_CONCRETE_POWDER
	f	Lciw;	lA	DEAD_HORN_CORAL_WALL_FAN
	f	Lciw;	lB	TUBE_CORAL_WALL_FAN
	f	Lciw;	lC	BRAIN_CORAL_WALL_FAN
	f	Lciw;	lD	BUBBLE_CORAL_WALL_FAN
	f	Lciw;	lE	FIRE_CORAL_WALL_FAN
	f	Lciw;	lF	HORN_CORAL_WALL_FAN
	f	Lciw;	lG	SEA_PICKLE
	f	Lciw;	lH	BLUE_ICE
	f	Lciw;	lI	CONDUIT
	f	Lciw;	lJ	BAMBOO_SAPLING
	f	Lciw;	lK	BAMBOO
	f	Lciw;	lL	POTTED_BAMBOO
	f	Lciw;	l	PODZOL
	f	Lciw;	lM	VOID_AIR
	f	Lciw;	lN	CAVE_AIR
	f	Lciw;	lO	BUBBLE_COLUMN
	f	Lciw;	lP	POLISHED_GRANITE_STAIRS
	f	Lciw;	lQ	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lciw;	lR	MOSSY_STONE_BRICK_STAIRS
	f	Lciw;	lS	POLISHED_DIORITE_STAIRS
	f	Lciw;	lT	MOSSY_COBBLESTONE_STAIRS
	f	Lciw;	lU	END_STONE_BRICK_STAIRS
	f	Lciw;	lV	STONE_STAIRS
	f	Lciw;	lW	SMOOTH_SANDSTONE_STAIRS
	f	Lciw;	lX	SMOOTH_QUARTZ_STAIRS
	f	Lciw;	lY	GRANITE_STAIRS
	f	Lciw;	lZ	ANDESITE_STAIRS
	f	Lciw;	la	FIRE_CORAL_BLOCK
	f	Lciw;	lb	HORN_CORAL_BLOCK
	f	Lciw;	lc	DEAD_TUBE_CORAL
	f	Lciw;	ld	DEAD_BRAIN_CORAL
	f	Lciw;	le	DEAD_BUBBLE_CORAL
	f	Lciw;	lf	DEAD_FIRE_CORAL
	f	Lciw;	lg	DEAD_HORN_CORAL
	f	Lciw;	lh	TUBE_CORAL
	f	Lciw;	li	BRAIN_CORAL
	f	Lciw;	lj	BUBBLE_CORAL
	f	Lciw;	lk	FIRE_CORAL
	f	Lciw;	ll	HORN_CORAL
	f	Lciw;	lm	DEAD_TUBE_CORAL_FAN
	f	Lciw;	ln	DEAD_BRAIN_CORAL_FAN
	f	Lciw;	lo	DEAD_BUBBLE_CORAL_FAN
	f	Lciw;	lp	DEAD_FIRE_CORAL_FAN
	f	Lciw;	lq	DEAD_HORN_CORAL_FAN
	f	Lciw;	lr	TUBE_CORAL_FAN
	f	Lciw;	ls	BRAIN_CORAL_FAN
	f	Lciw;	lt	BUBBLE_CORAL_FAN
	f	Lciw;	lu	FIRE_CORAL_FAN
	f	Lciw;	lv	HORN_CORAL_FAN
	f	Lciw;	lw	DEAD_TUBE_CORAL_WALL_FAN
	f	Lciw;	lx	DEAD_BRAIN_CORAL_WALL_FAN
	f	Lciw;	ly	DEAD_BUBBLE_CORAL_WALL_FAN
	f	Lciw;	lz	DEAD_FIRE_CORAL_WALL_FAN
	f	Lciw;	mA	SANDSTONE_WALL
	f	Lciw;	mB	END_STONE_BRICK_WALL
	f	Lciw;	mC	DIORITE_WALL
	f	Lciw;	mD	SCAFFOLDING
	f	Lciw;	mE	LOOM
	f	Lciw;	mF	BARREL
	f	Lciw;	mG	SMOKER
	f	Lciw;	mH	BLAST_FURNACE
	f	Lciw;	mI	CARTOGRAPHY_TABLE
	f	Lciw;	mJ	FLETCHING_TABLE
	f	Lciw;	mK	GRINDSTONE
	f	Lciw;	mL	LECTERN
	f	Lciw;	m	COBBLESTONE
	f	Lciw;	mM	SMITHING_TABLE
	f	Lciw;	mN	STONECUTTER
	f	Lciw;	mO	BELL
	f	Lciw;	mP	LANTERN
	f	Lciw;	mQ	SOUL_LANTERN
	f	Lciw;	mR	CAMPFIRE
	f	Lciw;	mS	SOUL_CAMPFIRE
	f	Lciw;	mT	SWEET_BERRY_BUSH
	f	Lciw;	mU	WARPED_STEM
	f	Lciw;	mV	STRIPPED_WARPED_STEM
	f	Lciw;	mW	WARPED_HYPHAE
	f	Lciw;	mX	STRIPPED_WARPED_HYPHAE
	f	Lciw;	mY	WARPED_NYLIUM
	f	Lciw;	mZ	WARPED_FUNGUS
	f	Lciw;	ma	RED_NETHER_BRICK_STAIRS
	f	Lciw;	mb	POLISHED_ANDESITE_STAIRS
	f	Lciw;	mc	DIORITE_STAIRS
	f	Lciw;	md	POLISHED_GRANITE_SLAB
	f	Lciw;	me	SMOOTH_RED_SANDSTONE_SLAB
	f	Lciw;	mf	MOSSY_STONE_BRICK_SLAB
	f	Lciw;	mg	POLISHED_DIORITE_SLAB
	f	Lciw;	mh	MOSSY_COBBLESTONE_SLAB
	f	Lciw;	mi	END_STONE_BRICK_SLAB
	f	Lciw;	mj	SMOOTH_SANDSTONE_SLAB
	f	Lciw;	mk	SMOOTH_QUARTZ_SLAB
	f	Lciw;	ml	GRANITE_SLAB
	f	Lciw;	mm	ANDESITE_SLAB
	f	Lciw;	mn	RED_NETHER_BRICK_SLAB
	f	Lciw;	mo	POLISHED_ANDESITE_SLAB
	f	Lciw;	mp	DIORITE_SLAB
	f	Lciw;	mq	BRICK_WALL
	f	Lciw;	mr	PRISMARINE_WALL
	f	Lciw;	ms	RED_SANDSTONE_WALL
	f	Lciw;	mt	MOSSY_STONE_BRICK_WALL
	f	Lciw;	mu	GRANITE_WALL
	f	Lciw;	mv	STONE_BRICK_WALL
	f	Lciw;	mw	MUD_BRICK_WALL
	f	Lciw;	mx	NETHER_BRICK_WALL
	f	Lciw;	my	ANDESITE_WALL
	f	Lciw;	mz	RED_NETHER_BRICK_WALL
	f	Lciw;	nA	WARPED_FENCE_GATE
	f	Lciw;	nB	CRIMSON_STAIRS
	f	Lciw;	nC	WARPED_STAIRS
	f	Lciw;	nD	CRIMSON_BUTTON
	f	Lciw;	nE	WARPED_BUTTON
	f	Lciw;	nF	CRIMSON_DOOR
	f	Lciw;	nG	WARPED_DOOR
	f	Lciw;	nH	CRIMSON_SIGN
	f	Lciw;	nI	WARPED_SIGN
	f	Lciw;	nJ	CRIMSON_WALL_SIGN
	f	Lciw;	nK	WARPED_WALL_SIGN
	f	Lciw;	nL	STRUCTURE_BLOCK
	f	Lciw;	n	OAK_PLANKS
	f	Lciw;	nM	JIGSAW
	f	Lciw;	nN	COMPOSTER
	f	Lciw;	nO	TARGET
	f	Lciw;	nP	BEE_NEST
	f	Lciw;	nQ	BEEHIVE
	f	Lciw;	nR	HONEY_BLOCK
	f	Lciw;	nS	HONEYCOMB_BLOCK
	f	Lciw;	nT	NETHERITE_BLOCK
	f	Lciw;	nU	ANCIENT_DEBRIS
	f	Lciw;	nV	CRYING_OBSIDIAN
	f	Lciw;	nW	RESPAWN_ANCHOR
	f	Lciw;	nX	POTTED_CRIMSON_FUNGUS
	f	Lciw;	nY	POTTED_WARPED_FUNGUS
	f	Lciw;	nZ	POTTED_CRIMSON_ROOTS
	f	Lciw;	na	WARPED_WART_BLOCK
	f	Lciw;	nb	WARPED_ROOTS
	f	Lciw;	nc	NETHER_SPROUTS
	f	Lciw;	nd	CRIMSON_STEM
	f	Lciw;	ne	STRIPPED_CRIMSON_STEM
	f	Lciw;	nf	CRIMSON_HYPHAE
	f	Lciw;	ng	STRIPPED_CRIMSON_HYPHAE
	f	Lciw;	nh	CRIMSON_NYLIUM
	f	Lciw;	ni	CRIMSON_FUNGUS
	f	Lciw;	nj	SHROOMLIGHT
	f	Lciw;	nk	WEEPING_VINES
	f	Lciw;	nl	WEEPING_VINES_PLANT
	f	Lciw;	nm	TWISTING_VINES
	f	Lciw;	nn	TWISTING_VINES_PLANT
	f	Lciw;	no	CRIMSON_ROOTS
	f	Lciw;	np	CRIMSON_PLANKS
	f	Lciw;	nq	WARPED_PLANKS
	f	Lciw;	nr	CRIMSON_SLAB
	f	Lciw;	ns	WARPED_SLAB
	f	Lciw;	nt	CRIMSON_PRESSURE_PLATE
	f	Lciw;	nu	WARPED_PRESSURE_PLATE
	f	Lciw;	nv	CRIMSON_FENCE
	f	Lciw;	nw	WARPED_FENCE
	f	Lciw;	nx	CRIMSON_TRAPDOOR
	f	Lciw;	ny	WARPED_TRAPDOOR
	f	Lciw;	nz	CRIMSON_FENCE_GATE
	f	Lciw;	oA	LIGHT_BLUE_CANDLE
	f	Lciw;	oB	YELLOW_CANDLE
	f	Lciw;	oC	LIME_CANDLE
	f	Lciw;	oD	PINK_CANDLE
	f	Lciw;	oE	GRAY_CANDLE
	f	Lciw;	oF	LIGHT_GRAY_CANDLE
	f	Lciw;	oG	CYAN_CANDLE
	f	Lciw;	oH	PURPLE_CANDLE
	f	Lciw;	oI	BLUE_CANDLE
	f	Lciw;	oJ	BROWN_CANDLE
	f	Lciw;	oK	GREEN_CANDLE
	f	Lciw;	oL	RED_CANDLE
	f	Lciw;	o	SPRUCE_PLANKS
	f	Lciw;	oM	BLACK_CANDLE
	f	Lciw;	oN	CANDLE_CAKE
	f	Lciw;	oO	WHITE_CANDLE_CAKE
	f	Lciw;	oP	ORANGE_CANDLE_CAKE
	f	Lciw;	oQ	MAGENTA_CANDLE_CAKE
	f	Lciw;	oR	LIGHT_BLUE_CANDLE_CAKE
	f	Lciw;	oS	YELLOW_CANDLE_CAKE
	f	Lciw;	oT	LIME_CANDLE_CAKE
	f	Lciw;	oU	PINK_CANDLE_CAKE
	f	Lciw;	oV	GRAY_CANDLE_CAKE
	f	Lciw;	oW	LIGHT_GRAY_CANDLE_CAKE
	f	Lciw;	oX	CYAN_CANDLE_CAKE
	f	Lciw;	oY	PURPLE_CANDLE_CAKE
	f	Lciw;	oZ	BLUE_CANDLE_CAKE
	f	Lciw;	oa	POTTED_WARPED_ROOTS
	f	Lciw;	ob	LODESTONE
	f	Lciw;	oc	BLACKSTONE
	f	Lciw;	od	BLACKSTONE_STAIRS
	f	Lciw;	oe	BLACKSTONE_WALL
	f	Lciw;	of	BLACKSTONE_SLAB
	f	Lciw;	og	POLISHED_BLACKSTONE
	f	Lciw;	oh	POLISHED_BLACKSTONE_BRICKS
	f	Lciw;	oi	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lciw;	oj	CHISELED_POLISHED_BLACKSTONE
	f	Lciw;	ok	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lciw;	ol	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lciw;	om	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lciw;	on	GILDED_BLACKSTONE
	f	Lciw;	oo	POLISHED_BLACKSTONE_STAIRS
	f	Lciw;	op	POLISHED_BLACKSTONE_SLAB
	f	Lciw;	oq	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lciw;	or	POLISHED_BLACKSTONE_BUTTON
	f	Lciw;	os	POLISHED_BLACKSTONE_WALL
	f	Lciw;	ot	CHISELED_NETHER_BRICKS
	f	Lciw;	ou	CRACKED_NETHER_BRICKS
	f	Lciw;	ov	QUARTZ_BRICKS
	f	Lciw;	ow	CANDLE
	f	Lciw;	ox	WHITE_CANDLE
	f	Lciw;	oy	ORANGE_CANDLE
	f	Lciw;	oz	MAGENTA_CANDLE
	f	Lciw;	pA	WEATHERED_CUT_COPPER
	f	Lciw;	pB	EXPOSED_CUT_COPPER
	f	Lciw;	pC	CUT_COPPER
	f	Lciw;	pD	OXIDIZED_CUT_COPPER_STAIRS
	f	Lciw;	pE	WEATHERED_CUT_COPPER_STAIRS
	f	Lciw;	pF	EXPOSED_CUT_COPPER_STAIRS
	f	Lciw;	pG	CUT_COPPER_STAIRS
	f	Lciw;	pH	OXIDIZED_CUT_COPPER_SLAB
	f	Lciw;	pI	WEATHERED_CUT_COPPER_SLAB
	f	Lciw;	pJ	EXPOSED_CUT_COPPER_SLAB
	f	Lciw;	pK	CUT_COPPER_SLAB
	f	Lciw;	pL	WAXED_COPPER_BLOCK
	f	Lciw;	p	BIRCH_PLANKS
	f	Lciw;	pM	WAXED_WEATHERED_COPPER
	f	Lciw;	pN	WAXED_EXPOSED_COPPER
	f	Lciw;	pO	WAXED_OXIDIZED_COPPER
	f	Lciw;	pP	WAXED_OXIDIZED_CUT_COPPER
	f	Lciw;	pQ	WAXED_WEATHERED_CUT_COPPER
	f	Lciw;	pR	WAXED_EXPOSED_CUT_COPPER
	f	Lciw;	pS	WAXED_CUT_COPPER
	f	Lciw;	pT	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lciw;	pU	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lciw;	pV	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lciw;	pW	WAXED_CUT_COPPER_STAIRS
	f	Lciw;	pX	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lciw;	pY	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lciw;	pZ	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lciw;	pa	BROWN_CANDLE_CAKE
	f	Lciw;	pb	GREEN_CANDLE_CAKE
	f	Lciw;	pc	RED_CANDLE_CAKE
	f	Lciw;	pd	BLACK_CANDLE_CAKE
	f	Lciw;	pe	AMETHYST_BLOCK
	f	Lciw;	pf	BUDDING_AMETHYST
	f	Lciw;	pg	AMETHYST_CLUSTER
	f	Lciw;	ph	LARGE_AMETHYST_BUD
	f	Lciw;	pi	MEDIUM_AMETHYST_BUD
	f	Lciw;	pj	SMALL_AMETHYST_BUD
	f	Lciw;	pk	TUFF
	f	Lciw;	pl	CALCITE
	f	Lciw;	pm	TINTED_GLASS
	f	Lciw;	pn	POWDER_SNOW
	f	Lciw;	po	SCULK_SENSOR
	f	Lciw;	pp	SCULK
	f	Lciw;	pq	SCULK_VEIN
	f	Lciw;	pr	SCULK_CATALYST
	f	Lciw;	ps	SCULK_SHRIEKER
	f	Lciw;	pt	OXIDIZED_COPPER
	f	Lciw;	pu	WEATHERED_COPPER
	f	Lciw;	pv	EXPOSED_COPPER
	f	Lciw;	pw	COPPER_BLOCK
	f	Lciw;	px	COPPER_ORE
	f	Lciw;	py	DEEPSLATE_COPPER_ORE
	f	Lciw;	pz	OXIDIZED_CUT_COPPER
	f	Lciw;	qA	DEEPSLATE_TILES
	f	Lciw;	qB	DEEPSLATE_TILE_STAIRS
	f	Lciw;	qC	DEEPSLATE_TILE_SLAB
	f	Lciw;	qD	DEEPSLATE_TILE_WALL
	f	Lciw;	qE	DEEPSLATE_BRICKS
	f	Lciw;	qF	DEEPSLATE_BRICK_STAIRS
	f	Lciw;	qG	DEEPSLATE_BRICK_SLAB
	f	Lciw;	qH	DEEPSLATE_BRICK_WALL
	f	Lciw;	qI	CHISELED_DEEPSLATE
	f	Lciw;	qJ	CRACKED_DEEPSLATE_BRICKS
	f	Lciw;	qK	CRACKED_DEEPSLATE_TILES
	f	Lciw;	qL	INFESTED_DEEPSLATE
	f	Lciw;	q	JUNGLE_PLANKS
	f	Lciw;	qM	SMOOTH_BASALT
	f	Lciw;	qN	RAW_IRON_BLOCK
	f	Lciw;	qO	RAW_COPPER_BLOCK
	f	Lciw;	qP	RAW_GOLD_BLOCK
	f	Lciw;	qQ	POTTED_AZALEA
	f	Lciw;	qR	POTTED_FLOWERING_AZALEA
	f	Lciw;	qS	OCHRE_FROGLIGHT
	f	Lciw;	qT	VERDANT_FROGLIGHT
	f	Lciw;	qU	PEARLESCENT_FROGLIGHT
	f	Lciw;	qV	FROGSPAWN
	f	Lciw;	qW	REINFORCED_DEEPSLATE
	f	Lciw;	qa	WAXED_CUT_COPPER_SLAB
	f	Lciw;	qb	LIGHTNING_ROD
	f	Lciw;	qc	POINTED_DRIPSTONE
	f	Lciw;	qd	DRIPSTONE_BLOCK
	f	Lciw;	qe	CAVE_VINES
	f	Lciw;	qf	CAVE_VINES_PLANT
	f	Lciw;	qg	SPORE_BLOSSOM
	f	Lciw;	qh	AZALEA
	f	Lciw;	qi	FLOWERING_AZALEA
	f	Lciw;	qj	MOSS_CARPET
	f	Lciw;	qk	MOSS_BLOCK
	f	Lciw;	ql	BIG_DRIPLEAF
	f	Lciw;	qm	BIG_DRIPLEAF_STEM
	f	Lciw;	qn	SMALL_DRIPLEAF
	f	Lciw;	qo	HANGING_ROOTS
	f	Lciw;	qp	ROOTED_DIRT
	f	Lciw;	qq	MUD
	f	Lciw;	qr	DEEPSLATE
	f	Lciw;	qs	COBBLED_DEEPSLATE
	f	Lciw;	qt	COBBLED_DEEPSLATE_STAIRS
	f	Lciw;	qu	COBBLED_DEEPSLATE_SLAB
	f	Lciw;	qv	COBBLED_DEEPSLATE_WALL
	f	Lciw;	qw	POLISHED_DEEPSLATE
	f	Lciw;	qx	POLISHED_DEEPSLATE_STAIRS
	f	Lciw;	qy	POLISHED_DEEPSLATE_SLAB
	f	Lciw;	qz	POLISHED_DEEPSLATE_WALL
	f	Lciw;	r	ACACIA_PLANKS
	f	Lciw;	s	DARK_OAK_PLANKS
	f	Lciw;	t	MANGROVE_PLANKS
	f	Lciw;	u	OAK_SAPLING
	f	Lciw;	v	SPRUCE_SAPLING
	f	Lciw;	w	BIRCH_SAPLING
	f	Lciw;	x	JUNGLE_SAPLING
	f	Lciw;	y	ACACIA_SAPLING
	f	Lciw;	z	DARK_OAK_SAPLING
c	ciy	net/minecraft/world/level/block/BonemealableBlock
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	ciz	net/minecraft/world/level/block/BrewingStandBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	[Lcvi;	a	HAS_BOTTLE
	f	Ldwm;	b	SHAPE
c	cja	net/minecraft/world/level/block/BubbleColumnBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Ljava/util/Optional;	Y_	getPickupSound
	m	(Lcgb;Lgt;Lcur;Lcur;)V	a	updateColumn
		p	0		world
		p	1		pos
		p	2		water
		p	3		bubbleSource
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcgb;Lgt;Lcur;)V	b	updateColumn
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcgb;Lgt;Lcur;)Lcaa;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	h	canExistIn
		p	0		state
	m	(Lcur;)Lcur;	n	getColumnState
		p	0		state
	f	Lcvi;	a	DRAG_DOWN
	f	I	b	CHECK_PERIOD
c	cjb	net/minecraft/world/level/block/BucketPickup
	m	()Ljava/util/Optional;	Y_	getPickupSound
	m	(Lcgb;Lgt;Lcur;)Lcaa;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
c	cjc	net/minecraft/world/level/block/BuddingAmethystBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Z	g	canClusterGrowAtState
		p	0		state
	f	I	a	GROWTH_CHANCE
	f	[Lgy;	b	DIRECTIONS
c	cjd	net/minecraft/world/level/block/BushBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
c	cje	net/minecraft/world/level/block/ButtonBlock
	m	(ZLcuq$c;)V	<init>	<init>
		p	1		wooden
		p	2		settings
	m	(Lbtf;Lcgb;Lgt;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		powered
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Z)Lajd;	a	getSound
		p	1		powered
	m	()I	b	getPressDuration
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)V	d	press
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;)V	e	checkPressed
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;)V	f	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Ldwm;	E	PRESSED_FLOOR_AABB_Z
	f	Ldwm;	F	PRESSED_NORTH_AABB
	f	Ldwm;	G	PRESSED_SOUTH_AABB
	f	Ldwm;	H	PRESSED_WEST_AABB
	f	Ldwm;	I	PRESSED_EAST_AABB
	f	I	K	PRESSED_DEPTH
	f	I	L	UNPRESSED_DEPTH
	f	Z	M	sensitive
	f	Lcvi;	a	POWERED
	f	I	b	HALF_AABB_HEIGHT
	f	I	c	HALF_AABB_WIDTH
	f	Ldwm;	d	CEILING_AABB_X
	f	Ldwm;	e	CEILING_AABB_Z
	f	Ldwm;	f	FLOOR_AABB_X
	f	Ldwm;	g	FLOOR_AABB_Z
	f	Ldwm;	h	NORTH_AABB
	f	Ldwm;	i	SOUTH_AABB
	f	Ldwm;	j	WEST_AABB
	f	Ldwm;	k	EAST_AABB
	f	Ldwm;	l	PRESSED_CEILING_AABB_X
	f	Ldwm;	m	PRESSED_CEILING_AABB_Z
	f	Ldwm;	n	PRESSED_FLOOR_AABB_X
c	cje$1	net/minecraft/world/level/block/ButtonBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cjf	net/minecraft/world/level/block/CactusBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcvr;	a	AGE
	f	I	b	MAX_AGE
	f	I	c	AABB_OFFSET
	f	Ldwm;	d	COLLISION_SHAPE
	f	Ldwm;	e	OUTLINE_SHAPE
c	cjg	net/minecraft/world/level/block/CakeBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcgb;Lgt;Lcur;Lbtf;)Lazm;	a	eat
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)I	b	getOutputSignal
		p	0		bites
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	MAX_BITES
	f	Lcvr;	b	BITES
	f	I	c	FULL_CAKE_SIGNAL
	f	F	d	AABB_OFFSET
	f	F	e	AABB_SIZE_PER_BITE
	f	[Ldwm;	f	SHAPE_BY_BITE
c	cjh	net/minecraft/world/level/block/CampfireBlock
	m	(ZILcuq$c;)V	<init>	<init>
		p	1		emitsParticles
		p	2		fireDamage
		p	3		settings
	m	(Lbaq;Lcgb;Lgt;Lcur;)V	a	dowse
		p	0		entity
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Lgt;)Z	a	isSmokeyPos
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;ZZ)V	a	makeParticles
		p	0		world
		p	1		pos
		p	2		isSignal
		p	3		lotsOfSmoke
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcuq$a;)Z	a	lambda$canLight$0
		p	0		state
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	g	isLitCampfire
		p	0		state
	m	(Lcur;)Z	h	canLight
		p	0		state
	m	(Lcur;)Z	n	isSmokeSource
		p	1		state
	f	Ldwm;	a	SHAPE
	f	Lcvi;	b	LIT
	f	Lcvi;	c	SIGNAL_FIRE
	f	Lcvi;	d	WATERLOGGED
	f	Lcvl;	e	FACING
	f	Ldwm;	f	VIRTUAL_FENCE_POST
	f	I	g	SMOKE_DISTANCE
	f	Z	h	spawnParticles
	f	I	i	fireDamage
c	cji	net/minecraft/world/level/block/CandleBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcuq$a;)Z	a	lambda$canLight$2
		p	0		state
	m	(Lcur;)Ljava/lang/Iterable;	a	getParticleOffsets
		p	1		state
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Z	c	canBeLit
		p	1		state
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	g	canLight
		p	0		state
	m	(Lcur;)I	h	lambda$static$0
		p	0		state
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	q	lambda$static$1
	f	I	c	MIN_CANDLES
	f	I	d	MAX_CANDLES
	f	Lcvr;	e	CANDLES
	f	Lcvi;	f	LIT
	f	Lcvi;	g	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	h	LIGHT_EMISSION
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	i	PARTICLE_OFFSETS
	f	Ldwm;	j	ONE_AABB
	f	Ldwm;	k	TWO_AABB
	f	Ldwm;	l	THREE_AABB
	f	Ldwm;	m	FOUR_AABB
c	cjj	net/minecraft/world/level/block/CandleCakeBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		candle
		p	2		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lciw;)Lcur;	a	byCandle
		p	0		candle
	m	(Lcur;)Ljava/lang/Iterable;	a	getParticleOffsets
		p	1		state
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcuq$a;)Z	a	lambda$canLight$0
		p	1		state
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldvp;)Z	a	candleHit
		p	0		hitResult
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;)Z	g	canLight
		p	0		state
	f	Lcvi;	c	LIT
	f	F	d	AABB_OFFSET
	f	Ldwm;	e	CAKE_SHAPE
	f	Ldwm;	f	CANDLE_SHAPE
	f	Ldwm;	g	SHAPE
	f	Ljava/util/Map;	h	BY_CANDLE
	f	Ljava/lang/Iterable;	i	PARTICLE_OFFSETS
c	cjk	net/minecraft/world/level/block/CarpetBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Ldwm;	a	SHAPE
c	cjl	net/minecraft/world/level/block/CarrotBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lcfz;	d	getBaseSeedId
	f	[Ldwm;	a	SHAPE_BY_AGE
c	cjm	net/minecraft/world/level/block/CartographyTableBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lrm;	a	CONTAINER_TITLE
c	cjn	net/minecraft/world/level/block/CarvedPumpkinBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;)V	a	trySpawnGolem
		p	1		world
		p	2		pos
	m	(Lcgd;Lgt;)Z	a	canSpawnGolem
		p	1		world
		p	2		pos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcuw;	b	getOrCreateSnowGolemBase
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Z	h	lambda$static$0
		p	0		state
	m	()Lcuw;	q	getOrCreateSnowGolemFull
	m	()Lcuw;	u	getOrCreateIronGolemBase
	m	()Lcuw;	v	getOrCreateIronGolemFull
	f	Lcvl;	a	FACING
	f	Lcuw;	b	snowGolemBase
	f	Lcuw;	c	snowGolemFull
	f	Lcuw;	d	ironGolemBase
	f	Lcuw;	e	ironGolemFull
	f	Ljava/util/function/Predicate;	f	PUMPKINS_PREDICATE
c	cjo	net/minecraft/world/level/block/CauldronBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcgw$c;)Z	a	shouldHandlePrecipitation
		p	0		world
		p	1		precipitation
	m	(Lcur;Lcga;Lgt;Lcgw$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Lcur;Lcga;Lgt;Ldox;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldox;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Lcur;)Z	c	isFull
		p	1		state
	f	F	c	RAIN_FILL_CHANCE
	f	F	d	POWDER_SNOW_FILL_CHANCE
c	cjp	net/minecraft/world/level/block/CaveVines
	m	(ILcur;)I	a	lambda$emission$0
		p	1		state
	m	(Lcur;)Z	a	hasGlowBerries
		p	0		state
	m	(Lcur;Lcga;Lgt;)Lazm;	a_	use
		p	0		state
		p	1		world
		p	2		pos
	m	(I)Ljava/util/function/ToIntFunction;	f_	emission
		p	0		luminance
	f	Ldwm;	o_	SHAPE
	f	Lcvi;	p_	BERRIES
c	cjq	net/minecraft/world/level/block/CaveVinesBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lalu;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lalu;)Lcur;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcur;)Lcur;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lciw;	b	getBodyBlock
	m	(Lcur;)Z	g	canGrowInto
		p	1		state
	f	F	f	CHANCE_OF_BERRIES_ON_GROWTH
c	cjr	net/minecraft/world/level/block/CaveVinesPlantBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcur;)Lcur;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcmc;	c	getHeadBlock
c	cjs	net/minecraft/world/level/block/ChainBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Lcvi;	a	WATERLOGGED
	f	F	b	AABB_MIN
	f	F	c	AABB_MAX
	f	Ldwm;	d	Y_AXIS_AABB
	f	Ldwm;	e	Z_AXIS_AABB
	f	Ldwm;	f	X_AXIS_AABB
c	cjs$1	net/minecraft/world/level/block/ChainBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	cjt	net/minecraft/world/level/block/ChangeOverTimeBlock
	m	()F	a	getChanceModifier
	m	(Lafo;Lgt;Lcur;)V	a	lambda$applyChangeOverTime$0
		p	2		state
	m	(Lcur;)Ljava/util/Optional;	a	getNext
		p	1		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	a_	onRandomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcur;Lafo;Lgt;Lalu;)V	c	applyChangeOverTime
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	I	t_	SCAN_DISTANCE
c	cju	net/minecraft/world/level/block/ChestBlock
	m	(Lcuq$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcca;Lgy;)Lgy;	a	candidatePartnerFacing
		p	1		ctx
		p	2		dir
	m	(Lcfg;Lgt;)Z	a	isBlockedChestByBlock
		p	0		world
		p	1		pos
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcgb;Lgt;)Z	a	isChestBlockedAt
		p	0		world
		p	1		pos
	m	(Lcju;Lcur;Lcga;Lgt;Z)Lazf;	a	getContainer
		p	0		block
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Lcth;)Lckt$b;	a	opennessCombiner
		p	0		progress
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcga;Lgt;Z)Lckt$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcgb;Lgt;)Z	b	isCatSittingOnChest
		p	0		world
		p	1		pos
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	()Lajl;	c	getOpenChestStat
	m	(Lcgb;Lgt;)Z	c	lambda$combine$0
		p	0		world
		p	1		pos
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	()Lcsn;	d	blockEntityType
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;)Lckt$a;	g	getBlockType
		p	0		state
	m	(Lcur;)Lgy;	h	getConnectedDirection
		p	0		state
	f	Lcvl;	b	FACING
	f	Lcvp;	c	TYPE
	f	Lcvi;	d	WATERLOGGED
	f	I	e	EVENT_SET_OPEN_COUNT
	f	I	f	AABB_OFFSET
	f	I	g	AABB_HEIGHT
	f	Ldwm;	h	NORTH_AABB
	f	Ldwm;	i	SOUTH_AABB
	f	Ldwm;	j	WEST_AABB
	f	Ldwm;	k	EAST_AABB
	f	Ldwm;	l	AABB
	f	Lckt$b;	m	CHEST_COMBINER
	f	Lckt$b;	n	MENU_PROVIDER_COMBINER
c	cju$1	net/minecraft/world/level/block/ChestBlock$1
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lcsq;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Lcsq;Lcsq;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	cju$2	net/minecraft/world/level/block/ChestBlock$2
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lcsq;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Lcsq;Lcsq;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	cju$2$1	net/minecraft/world/level/block/ChestBlock$2$1
	m	()Lrm;	C_	getDisplayName
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	f	Lcsq;	a	val$first
	f	Lcsq;	b	val$second
	f	Lazf;	c	val$container
	f	Lcju$2;	d	this$0
c	cju$3	net/minecraft/world/level/block/ChestBlock$3
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptNone
	m	(Lcsq;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptSingle
		p	1		single
	m	(Lcsq;Lcsq;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Lcsq;Lcsq;F)F	a	lambda$acceptDouble$0
		p	2		tickDelta
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
	f	Lcth;	a	val$entity
c	cju$4	net/minecraft/world/level/block/ChestBlock$4
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cjv	net/minecraft/world/level/block/ChorusFlowerBlock
	m	(Lcjw;Lcuq$c;)V	<init>	<init>
		p	1		plantBlock
		p	2		settings
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Lgt;)V	a	placeDeadFlower
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;I)V	a	placeGrownFlower
		p	1		world
		p	2		pos
		p	3		age
	m	(Lcgb;Lgt;Lalu;I)V	a	generatePlant
		p	0		world
		p	1		pos
		p	2		random
		p	3		size
	m	(Lcgb;Lgt;Lalu;Lgt;II)V	a	growTreeRecursive
		p	0		world
		p	1		pos
		p	2		random
		p	3		rootPos
		p	4		size
		p	5		layer
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcgd;Lgt;Lgy;)Z	b	allNeighborsEmpty
		p	0		world
		p	1		pos
		p	2		exceptDirection
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	DEAD_AGE
	f	Lcvr;	b	AGE
	f	Lcjw;	c	plant
c	cjw	net/minecraft/world/level/block/ChorusPlantBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)Lcur;	a	getStateForPlacement
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
c	cjx	net/minecraft/world/level/block/CocoaBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	f	[Ldwm;	E	SOUTH_AABB
	f	I	a	MAX_AGE
	f	Lcvr;	b	AGE
	f	I	c	AGE_0_WIDTH
	f	I	d	AGE_0_HEIGHT
	f	I	e	AGE_0_HALFWIDTH
	f	I	f	AGE_1_WIDTH
	f	I	g	AGE_1_HEIGHT
	f	I	h	AGE_1_HALFWIDTH
	f	I	i	AGE_2_WIDTH
	f	I	j	AGE_2_HEIGHT
	f	I	k	AGE_2_HALFWIDTH
	f	[Ldwm;	l	EAST_AABB
	f	[Ldwm;	m	WEST_AABB
	f	[Ldwm;	n	NORTH_AABB
c	cjx$1	net/minecraft/world/level/block/CocoaBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cjy	net/minecraft/world/level/block/CommandBlock
	m	(Lcuq$c;Z)V	<init>	<init>
		p	1		settings
		p	2		auto
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lgy;)V	a	executeChain
		p	0		world
		p	1		pos
		p	2		facing
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcfb;Z)V	a	execute
		p	1		state
		p	2		world
		p	3		pos
		p	4		executor
		p	5		hasCommand
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	CONDITIONAL
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Z	d	automatic
c	cjz	net/minecraft/world/level/block/ComparatorBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;Lcur;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgy;Lgt;)Lbpr;	a	getItemFrame
		p	1		world
		p	2		facing
		p	3		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgy;Lbpr;)Z	a	lambda$getItemFrame$0
		p	1		itemFrame
	m	(Lcfg;Lgt;Lcur;)I	b	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)I	e	calculateOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)V	f	refreshOutputState
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;)I	g	getDelay
		p	1		state
	f	Lcvp;	a	MODE
c	cka	net/minecraft/world/level/block/ComposterBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(FLcfz;)V	a	add
		p	0		levelIncreaseChance
		p	1		item
	m	(Lcga;Lgt;Z)V	a	handleFill
		p	0		world
		p	1		pos
		p	2		fill
	m	(Lcur;Lafo;Lcaa;Lgt;)Lcur;	a	insertItem
		p	0		state
		p	1		world
		p	2		stack
		p	3		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)Ldwm;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcgb;Lgt;)Lazt;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcgb;Lgt;Lcaa;)Lcur;	a	addItem
		p	0		state
		p	1		world
		p	2		pos
		p	3		item
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Ldwm;)V	a	lambda$static$0
		p	0		shapes
	m	()V	b	bootStrap
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgb;Lgt;)Lcur;	c	empty
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcga;Lgt;)Lcur;	d	extractProduce
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	READY
	f	I	b	MIN_LEVEL
	f	I	c	MAX_LEVEL
	f	Lcvr;	d	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	e	COMPOSTABLES
	f	I	f	AABB_SIDE_THICKNESS
	f	Ldwm;	g	OUTER_SHAPE
	f	[Ldwm;	h	SHAPES
c	cka$a	net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	m	(ILcaa;Lgy;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgy;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcaa;Lgy;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	cka$b	net/minecraft/world/level/block/ComposterBlock$InputContainer
	m	(Lcur;Lcgb;Lgt;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
	m	()I	P_	getMaxStackSize
	m	(ILcaa;Lgy;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgy;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcaa;Lgy;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Lcur;	b	state
	f	Lcgb;	c	level
	f	Lgt;	d	pos
	f	Z	e	changed
c	cka$c	net/minecraft/world/level/block/ComposterBlock$OutputContainer
	m	(Lcur;Lcgb;Lgt;Lcaa;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
		p	4		outputItem
	m	()I	P_	getMaxStackSize
	m	(ILcaa;Lgy;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgy;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcaa;Lgy;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Lcur;	b	state
	f	Lcgb;	c	level
	f	Lgt;	d	pos
	f	Z	e	changed
c	ckb	net/minecraft/world/level/block/ConcretePowderBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		hardened
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)Z	a	touchesLiquid
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Lcur;Lbpx;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcfg;Lgt;Lcur;)Z	b	shouldSolidify
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcur;Lcfg;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	n	canSolidify
		p	0		state
	f	Lcur;	a	concrete
c	ckc	net/minecraft/world/level/block/ConduitBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Lcvi;	a	WATERLOGGED
	f	Ldwm;	b	SHAPE
	f	I	c	SIZE
c	ckd	net/minecraft/world/level/block/CoralBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)Z	a	scanForWater
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Lciw;	a	deadBlock
c	cke	net/minecraft/world/level/block/CoralFanBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lciw;	a	deadBlock
c	ckf	net/minecraft/world/level/block/CoralPlantBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
	f	Lciw;	d	deadBlock
c	ckg	net/minecraft/world/level/block/CoralWallFanBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lciw;	b	deadBlock
c	ckh	net/minecraft/world/level/block/CraftingTableBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lrm;	a	CONTAINER_TITLE
c	cki	net/minecraft/world/level/block/CropBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcga;Lgt;Lcur;)V	a	growCrops
		p	1		world
		p	2		pos
		p	3		state
	m	(Lciw;Lcfg;Lgt;)F	a	getGrowthSpeed
		p	0		block
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcvr;	b	getAgeProperty
	m	(I)Lcur;	b	getStateForAge
		p	1		age
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()I	c	getMaxAge
	m	()Lcfz;	d	getBaseSeedId
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Lcur;)I	g	getAge
		p	1		state
	m	(Lcur;)Z	h	isMaxAge
		p	1		state
	f	[Ldwm;	a	SHAPE_BY_AGE
	f	I	c	MAX_AGE
	f	Lcvr;	d	AGE
c	ckj	net/minecraft/world/level/block/CrossCollisionBlock
	m	(FFFFFLcuq$c;)V	<init>	<init>
		p	1		radius1
		p	2		radius2
		p	3		boundingHeight1
		p	4		boundingHeight2
		p	5		collisionHeight
		p	6		settings
	m	(FFFFF)[Ldwm;	a	makeShapes
		p	1		radius1
		p	2		radius2
		p	3		height1
		p	4		offset2
		p	5		height2
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lgy;)I	a	indexFor
		p	0		dir
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)I	g	getAABBIndex
		p	1		state
	m	(Lcur;)I	h	lambda$getAABBIndex$1
		p	0		state
	f	Lcvi;	a	NORTH
	f	Lcvi;	b	EAST
	f	Lcvi;	c	SOUTH
	f	Lcvi;	d	WEST
	f	Lcvi;	e	WATERLOGGED
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	[Ldwm;	g	collisionShapeByIndex
	f	[Ldwm;	h	shapeByIndex
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	stateToIndex
c	ckj$1	net/minecraft/world/level/block/CrossCollisionBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	ckk	net/minecraft/world/level/block/CryingObsidianBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	ckl	net/minecraft/world/level/block/DaylightDetectorBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;Lcsw;)V	a	tickEntity
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcga;Lgt;)V	d	updateSignalStrength
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvr;	a	POWER
	f	Lcvi;	b	INVERTED
	f	Ldwm;	c	SHAPE
c	ckm	net/minecraft/world/level/block/DeadBushBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
c	ckn	net/minecraft/world/level/block/DetectorRailBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;)Z	a	lambda$getAnalogOutputSignal$1
		p	0		cart
	m	(Lcga;Lgt;Lcur;)V	a	checkPressed
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getInteractingMinecartOfType
		p	1		world
		p	2		pos
		p	3		entityClass
		p	4		entityPredicate
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;)Ldvo;	a	getSearchBB
		p	1		pos
	m	(Lbaq;)Z	b	lambda$checkPressed$0
		p	0		entity
	m	(Lcga;Lgt;Lcur;Z)V	b	updatePowerToConnected
		p	1		world
		p	2		pos
		p	3		state
		p	4		unpowering
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()Lcvu;	c	getShapeProperty
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Lcvp;	d	SHAPE
	f	Lcvi;	e	POWERED
	f	I	f	PRESSED_CHECK_PERIOD
c	ckn$1	net/minecraft/world/level/block/DetectorRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cko	net/minecraft/world/level/block/DiodeBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcur;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcgd;Lgt;Lcur;)Z	a	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcfg;Lgt;Lcur;)I	b	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgd;Lgt;Lcur;)I	b	getAlternateSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgd;Lgt;Lgy;)I	b	getAlternateSignalAt
		p	1		world
		p	2		pos
		p	3		dir
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcfg;Lgt;Lcur;)Z	c	shouldPrioritize
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)V	d	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	(Lcur;)I	g	getDelay
		p	1		state
	m	(Lcur;)Z	h	isAlternateInput
		p	1		state
	m	(Lcur;)Z	n	isDiode
		p	0		state
	f	Ldwm;	b	SHAPE
	f	Lcvi;	c	POWERED
c	ckp	net/minecraft/world/level/block/DirectionalBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	f	Lcvl;	a	FACING
c	ckq	net/minecraft/world/level/block/DirtPathBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldwm;	a	SHAPE
c	ckr	net/minecraft/world/level/block/DispenserBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lgt;)V	a	dispenseFrom
		p	1		world
		p	2		pos
	m	(Lcaa;)Lhz;	a	getDispenseMethod
		p	1		stack
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfz;Lhz;)V	a	registerBehavior
		p	0		provider
		p	1		behavior
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgu;)Lhj;	a	getDispensePosition
		p	0		pointer
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	TRIGGERED
	f	Ljava/util/Map;	c	DISPENSER_REGISTRY
	f	I	d	TRIGGER_DURATION
c	cks	net/minecraft/world/level/block/DoorBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;Lcga;Lcur;Lgt;Z)V	a	setOpen
		p	1		entity
		p	2		world
		p	3		state
		p	4		pos
		p	5		open
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;)Z	a	isWoodenDoor
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcga;Lgt;Z)V	a	playSound
		p	1		world
		p	2		pos
		p	3		open
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()I	b	getCloseSound
	m	(Lcca;)Lcvm;	b	getHinge
		p	1		ctx
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Z	h	isOpen
		p	1		state
	m	(Lcur;)Z	n	isWoodenDoor
		p	0		state
	m	()I	q	getOpenSound
	f	Lcvl;	a	FACING
	f	Lcvi;	b	OPEN
	f	Lcvp;	c	HINGE
	f	Lcvi;	d	POWERED
	f	Lcvp;	e	HALF
	f	F	f	AABB_DOOR_THICKNESS
	f	Ldwm;	g	SOUTH_AABB
	f	Ldwm;	h	NORTH_AABB
	f	Ldwm;	i	WEST_AABB
	f	Ldwm;	j	EAST_AABB
c	cks$1	net/minecraft/world/level/block/DoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	ckt	net/minecraft/world/level/block/DoubleBlockCombiner
	m	(Lcsn;Ljava/util/function/Function;Ljava/util/function/Function;Lcvl;Lcur;Lcgb;Lgt;Ljava/util/function/BiPredicate;)Lckt$c;	a	combineWithNeigbour
		p	0		blockEntityType
		p	1		typeMapper
		p	4		state
		p	5		world
		p	6		pos
		p	7		fallbackTester
c	ckt$a	net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	m	()[Lckt$a;	a	$values
	f	Lckt$a;	a	SINGLE
	f	Lckt$a;	b	FIRST
	f	Lckt$a;	c	SECOND
	f	[Lckt$a;	d	$VALUES
c	ckt$b	net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	ckt$c	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
	m	(Lckt$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
c	ckt$c$a	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lckt$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
c	ckt$c$b	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		single
	m	(Lckt$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	single
c	cku	net/minecraft/world/level/block/DoublePlantBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lbtf;Lgt;Lcur;Lcsl;Lcaa;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		stack
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcgb;Lcur;Lgt;I)V	a	placeAt
		p	0		world
		p	1		state
		p	2		pos
		p	3		flags
	m	(Lcgd;Lgt;Lcur;)Lcur;	a	copyWaterloggedFrom
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcga;Lgt;Lcur;Lbtf;)V	b	preventCreativeDropFromBottomPart
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	f	Lcvp;	a	HALF
c	ckv	net/minecraft/world/level/block/DragonEggBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	()I	c	getDelayAfterPlace
	m	(Lcur;Lcga;Lgt;)V	d	teleport
		p	1		state
		p	2		world
		p	3		pos
	f	Ldwm;	a	SHAPE
c	ckw	net/minecraft/world/level/block/DropExperienceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcuq$c;Layr;)V	<init>	<init>
		p	1		settings
		p	2		experience
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	f	Layr;	a	xpRange
c	ckx	net/minecraft/world/level/block/DropperBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lgt;)V	a	dispenseFrom
		p	1		world
		p	2		pos
	m	(Lcaa;)Lhz;	a	getDispenseMethod
		p	1		stack
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lhz;	c	DISPENSE_BEHAVIOUR
c	cky	net/minecraft/world/level/block/EnchantmentTableBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$1
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lgt;)Z	a	isValidBookShelf
		p	0		world
		p	1		tablePos
		p	2		bookshelfOffset
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lgt;)Z	a	lambda$static$0
		p	0		pos
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldwm;	a	SHAPE
	f	Ljava/util/List;	b	BOOKSHELF_OFFSETS
c	ckz	net/minecraft/world/level/block/EndGatewayBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Ldox;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
c	cla	net/minecraft/world/level/block/EndPortalBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Ldox;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Ldwm;	a	SHAPE
c	clb	net/minecraft/world/level/block/EndPortalFrameBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcuw;	b	getOrCreatePortalShape
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	HAS_EYE
	f	Ldwm;	c	BASE_SHAPE
	f	Ldwm;	d	EYE_SHAPE
	f	Ldwm;	e	FULL_SHAPE
	f	Lcuw;	f	portalShape
c	clc	net/minecraft/world/level/block/EndRodBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
c	cld	net/minecraft/world/level/block/EnderChestBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbwx;ILbte;Lbtf;)Lbvp;	a	lambda$use$1
		p	1		syncId
		p	2		inventory
		p	3		player
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Z)Lckt$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	()Lcsn;	q	lambda$new$0
	f	Lcvl;	b	FACING
	f	Lcvi;	c	WATERLOGGED
	f	Ldwm;	d	SHAPE
	f	Lrm;	e	CONTAINER_TITLE
c	cle	net/minecraft/world/level/block/EntityBlock
	m	(Lafo;Lcsl;)Lcza;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
c	clf	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcgd;Lgt;Lgy;)Z	b	canAttach
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcur;)Lgy;	h	getConnectedDirection
		p	0		state
	f	Lcvp;	J	FACE
c	clf$1	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	clg	net/minecraft/world/level/block/Fallable
	m	()Ljava/util/function/Predicate;	X_	getHurtsEntitySelector
	m	(Lcga;Lgt;Lbpx;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcga;Lgt;Lcur;Lcur;Lbpx;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	()Lazz;	b	getFallDamageSource
c	clh	net/minecraft/world/level/block/FallingBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbpx;)V	a	falling
		p	1		entity
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()I	c	getDelayAfterPlace
	m	(Lcur;Lcfg;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	h	isFree
		p	0		state
c	cli	net/minecraft/world/level/block/FarmBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)Z	a	isUnderCrops
		p	0		world
		p	1		pos
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcgd;Lgt;)Z	a	isNearWater
		p	0		world
		p	1		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;)V	d	turnToDirt
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvr;	a	MOISTURE
	f	Ldwm;	b	SHAPE
	f	I	c	MAX_MOISTURE
c	clj	net/minecraft/world/level/block/FenceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;ZLgy;)Z	a	connectsTo
		p	1		state
		p	2		neighborIsFullSquare
		p	3		dir
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	h	isSameFence
		p	1		state
	f	[Ldwm;	i	occlusionByIndex
c	clk	net/minecraft/world/level/block/FenceGateBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lgy;)Z	a	connectsToDirection
		p	0		state
		p	1		side
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Z	h	isWall
		p	1		state
	f	Lcvi;	a	OPEN
	f	Lcvi;	b	POWERED
	f	Lcvi;	c	IN_WALL
	f	Ldwm;	d	Z_SHAPE
	f	Ldwm;	e	X_SHAPE
	f	Ldwm;	f	Z_SHAPE_LOW
	f	Ldwm;	g	X_SHAPE_LOW
	f	Ldwm;	h	Z_COLLISION_SHAPE
	f	Ldwm;	i	X_COLLISION_SHAPE
	f	Ldwm;	j	Z_OCCLUSION_SHAPE
	f	Ldwm;	k	X_OCCLUSION_SHAPE
	f	Ldwm;	l	Z_OCCLUSION_SHAPE_LOW
	f	Ldwm;	m	X_OCCLUSION_SHAPE_LOW
c	clk$1	net/minecraft/world/level/block/FenceGateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cll	net/minecraft/world/level/block/FireBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lalu;)I	a	getFireTickDelay
		p	0		random
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;)Z	a	isNearRain
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;ILalu;I)V	a	checkBurnOut
		p	1		world
		p	2		pos
		p	3		spreadFactor
		p	4		random
		p	5		currentAge
	m	(Lcgb;Lgt;I)Lcur;	a	getStateWithAge
		p	1		world
		p	2		pos
		p	3		age
	m	(Lcgd;Lgt;)I	a	getIgniteOdds
		p	1		world
		p	2		pos
	m	(Lciw;II)V	a	setFlammable
		p	1		block
		p	2		burnChance
		p	3		spreadChance
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	()V	b	bootStrap
	m	(Lcfg;Lgt;)Lcur;	b	getStateForPlacement
		p	1		world
		p	2		pos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcfg;Lgt;)Z	d	isValidFireLocation
		p	1		world
		p	2		pos
	m	(Lcur;)Z	f	canBurn
		p	1		state
	m	(Lcur;)Ldwm;	h	calculateShape
		p	0		state
	m	(Lcur;)I	n	getBurnOdds
		p	1		state
	m	(Lcur;)I	o	getIgniteOdds
		p	1		state
	m	(Lcur;)Z	p	lambda$new$1
		p	0		state
	f	Ldwm;	E	SOUTH_AABB
	f	Ljava/util/Map;	F	shapesCache
	f	I	G	IGNITE_INSTANT
	f	I	H	IGNITE_EASY
	f	I	I	IGNITE_MEDIUM
	f	I	J	IGNITE_HARD
	f	I	K	BURN_INSTANT
	f	I	L	BURN_EASY
	f	I	M	BURN_MEDIUM
	f	I	N	BURN_HARD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	O	igniteOdds
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	P	burnOdds
	f	I	c	MAX_AGE
	f	Lcvr;	d	AGE
	f	Lcvi;	e	NORTH
	f	Lcvi;	f	EAST
	f	Lcvi;	g	SOUTH
	f	Lcvi;	h	WEST
	f	Lcvi;	i	UP
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	Ldwm;	k	UP_AABB
	f	Ldwm;	l	WEST_AABB
	f	Ldwm;	m	EAST_AABB
	f	Ldwm;	n	NORTH_AABB
c	clm	net/minecraft/world/level/block/FletchingTableBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
c	cln	net/minecraft/world/level/block/FlowerBlock
	m	(Lbah;ILcuq$c;)V	<init>	<init>
		p	1		suspiciousStewEffect
		p	2		effectDuration
		p	3		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lbah;	b	getSuspiciousStewEffect
	m	()I	c	getEffectDuration
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
	f	Lbah;	c	suspiciousStewEffect
	f	I	d	effectDuration
c	clo	net/minecraft/world/level/block/FlowerPotBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		content
		p	2		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()Lciw;	b	getContent
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	()Z	q	isEmpty
	f	F	a	AABB_SIZE
	f	Ldwm;	b	SHAPE
	f	Ljava/util/Map;	c	POTTED_BY_CONTENT
	f	Lciw;	d	content
c	clp	net/minecraft/world/level/block/FrogspawnBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(II)V	a	setHatchDelay
		p	0		min
		p	1		max
	m	(Lafo;Lgt;Lalu;)V	a	hatchFrogspawn
		p	1		world
		p	2		pos
		p	3		random
	m	(Lalu;)I	a	getFrogspawnHatchDelay
		p	0		random
	m	(Lcfg;Lgt;)Z	a	mayPlaceOn
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;)V	a	destroyBlock
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()V	b	setDefaultHatchDelay
	m	(Lafo;Lgt;Lalu;)V	b	spawnTadpoles
		p	1		world
		p	2		pos
		p	3		random
	m	(Lalu;)D	b	getRandomTadpolePositionOffset
		p	1		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Ldwm;	a	SHAPE
	f	I	b	MIN_TADPOLES_SPAWN
	f	I	c	MAX_TADPOLES_SPAWN
	f	I	d	DEFAULT_MIN_HATCH_TICK_DELAY
	f	I	e	DEFAULT_MAX_HATCH_TICK_DELAY
	f	I	f	minHatchTickDelay
	f	I	g	maxHatchTickDelay
c	clq	net/minecraft/world/level/block/FrostedIceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;I)Z	a	fewerNeigboursThan
		p	1		world
		p	2		pos
		p	3		maxNeighbors
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;)Z	e	slightlyMelt
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	MAX_AGE
	f	Lcvr;	b	AGE
	f	I	c	NEIGHBORS_TO_AGE
	f	I	d	NEIGHBORS_TO_MELT
c	clr	net/minecraft/world/level/block/FungusBlock
	m	(Lcuq$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		feature
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldwm;	a	SHAPE
	f	D	b	BONEMEAL_SUCCESS_PROBABILITY
	f	Ljava/util/function/Supplier;	c	feature
c	cls	net/minecraft/world/level/block/FurnaceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lbtf;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
c	clt	net/minecraft/world/level/block/GameMasterBlock
c	clu	net/minecraft/world/level/block/GlassBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
c	clv	net/minecraft/world/level/block/GlazedTerracottaBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
c	clw	net/minecraft/world/level/block/GlowLichenBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(ILcur;)I	a	lambda$emission$0
		p	1		state
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)Ljava/util/function/ToIntFunction;	b	emission
		p	0		luminance
	m	()Lcno;	c	getSpreader
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcfg;Lgt;Lgy;)Z	d	lambda$isValidBonemealTarget$1
		p	4		direction
	f	Lcvi;	b	WATERLOGGED
	f	Lcno;	c	spreader
c	clx	net/minecraft/world/level/block/GrassBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	cly	net/minecraft/world/level/block/GravelBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
c	clz	net/minecraft/world/level/block/GrindstoneBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldwm;	n	getVoxelShape
		p	1		state
	f	Ldwm;	E	FLOOR_EAST_WEST_ALL_LEGS
	f	Ldwm;	F	FLOOR_EAST_WEST_GRINDSTONE
	f	Ldwm;	G	WALL_SOUTH_LEFT_POST
	f	Ldwm;	H	WALL_SOUTH_RIGHT_POST
	f	Ldwm;	I	WALL_SOUTH_LEFT_PIVOT
	f	Ldwm;	K	WALL_SOUTH_RIGHT_PIVOT
	f	Ldwm;	L	WALL_SOUTH_LEFT_LEG
	f	Ldwm;	M	WALL_SOUTH_RIGHT_LEG
	f	Ldwm;	N	WALL_SOUTH_ALL_LEGS
	f	Ldwm;	O	WALL_SOUTH_GRINDSTONE
	f	Ldwm;	P	WALL_NORTH_LEFT_POST
	f	Ldwm;	Q	WALL_NORTH_RIGHT_POST
	f	Ldwm;	R	WALL_NORTH_LEFT_PIVOT
	f	Ldwm;	S	WALL_NORTH_RIGHT_PIVOT
	f	Ldwm;	T	WALL_NORTH_LEFT_LEG
	f	Ldwm;	U	WALL_NORTH_RIGHT_LEG
	f	Ldwm;	V	WALL_NORTH_ALL_LEGS
	f	Ldwm;	W	WALL_NORTH_GRINDSTONE
	f	Ldwm;	X	WALL_WEST_LEFT_POST
	f	Ldwm;	Y	WALL_WEST_RIGHT_POST
	f	Ldwm;	Z	WALL_WEST_LEFT_PIVOT
	f	Ldwm;	aA	CEILING_EAST_WEST_RIGHT_LEG
	f	Ldwm;	aB	CEILING_EAST_WEST_ALL_LEGS
	f	Ldwm;	aC	CEILING_EAST_WEST_GRINDSTONE
	f	Ldwm;	a	FLOOR_NORTH_SOUTH_LEFT_POST
	f	Lrm;	aQ	CONTAINER_TITLE
	f	Ldwm;	aa	WALL_WEST_RIGHT_PIVOT
	f	Ldwm;	ab	WALL_WEST_LEFT_LEG
	f	Ldwm;	ac	WALL_WEST_RIGHT_LEG
	f	Ldwm;	ad	WALL_WEST_ALL_LEGS
	f	Ldwm;	ae	WALL_WEST_GRINDSTONE
	f	Ldwm;	af	WALL_EAST_LEFT_POST
	f	Ldwm;	ag	WALL_EAST_RIGHT_POST
	f	Ldwm;	ah	WALL_EAST_LEFT_PIVOT
	f	Ldwm;	ai	WALL_EAST_RIGHT_PIVOT
	f	Ldwm;	aj	WALL_EAST_LEFT_LEG
	f	Ldwm;	ak	WALL_EAST_RIGHT_LEG
	f	Ldwm;	al	WALL_EAST_ALL_LEGS
	f	Ldwm;	am	WALL_EAST_GRINDSTONE
	f	Ldwm;	an	CEILING_NORTH_SOUTH_LEFT_POST
	f	Ldwm;	ao	CEILING_NORTH_SOUTH_RIGHT_POST
	f	Ldwm;	ap	CEILING_NORTH_SOUTH_LEFT_PIVOT
	f	Ldwm;	aq	CEILING_NORTH_SOUTH_RIGHT_PIVOT
	f	Ldwm;	ar	CEILING_NORTH_SOUTH_LEFT_LEG
	f	Ldwm;	as	CEILING_NORTH_SOUTH_RIGHT_LEG
	f	Ldwm;	at	CEILING_NORTH_SOUTH_ALL_LEGS
	f	Ldwm;	au	CEILING_NORTH_SOUTH_GRINDSTONE
	f	Ldwm;	av	CEILING_EAST_WEST_LEFT_POST
	f	Ldwm;	aw	CEILING_EAST_WEST_RIGHT_POST
	f	Ldwm;	ax	CEILING_EAST_WEST_LEFT_PIVOT
	f	Ldwm;	ay	CEILING_EAST_WEST_RIGHT_PIVOT
	f	Ldwm;	az	CEILING_EAST_WEST_LEFT_LEG
	f	Ldwm;	b	FLOOR_NORTH_SOUTH_RIGHT_POST
	f	Ldwm;	c	FLOOR_NORTH_SOUTH_LEFT_PIVOT
	f	Ldwm;	d	FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	f	Ldwm;	e	FLOOR_NORTH_SOUTH_LEFT_LEG
	f	Ldwm;	f	FLOOR_NORTH_SOUTH_RIGHT_LEG
	f	Ldwm;	g	FLOOR_NORTH_SOUTH_ALL_LEGS
	f	Ldwm;	h	FLOOR_NORTH_SOUTH_GRINDSTONE
	f	Ldwm;	i	FLOOR_EAST_WEST_LEFT_POST
	f	Ldwm;	j	FLOOR_EAST_WEST_RIGHT_POST
	f	Ldwm;	k	FLOOR_EAST_WEST_LEFT_PIVOT
	f	Ldwm;	l	FLOOR_EAST_WEST_RIGHT_PIVOT
	f	Ldwm;	m	FLOOR_EAST_WEST_LEFT_LEG
	f	Ldwm;	n	FLOOR_EAST_WEST_RIGHT_LEG
c	clz$1	net/minecraft/world/level/block/GrindstoneBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cma	net/minecraft/world/level/block/GrowingPlantBlock
	m	(Lcuq$c;Lgy;Ldwm;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcgb;)Lcur;	a	getStateForPlacement
		p	1		world
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	()Lciw;	b	getBodyBlock
	m	()Lcmc;	c	getHeadBlock
	m	(Lcur;)Z	h	canAttachTo
		p	1		state
	f	Lgy;	a	growthDirection
	f	Z	b	scheduleFluidTicks
	f	Ldwm;	c	shape
c	cmb	net/minecraft/world/level/block/GrowingPlantBodyBlock
	m	(Lcuq$c;Lgy;Ldwm;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lciw;)Ljava/util/Optional;	a	getHeadPos
		p	1		world
		p	2		pos
		p	3		block
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcur;)Lcur;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()Lciw;	b	getBodyBlock
c	cmc	net/minecraft/world/level/block/GrowingPlantHeadBlock
	m	(Lcuq$c;Lgy;Ldwm;ZD)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
		p	5		growthChance
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lalu;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcgb;)Lcur;	a	getStateForPlacement
		p	1		world
	m	(Lcur;Lalu;)Lcur;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Lcur;Lcur;)Lcur;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Lcmc;	c	getHeadBlock
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Lcur;)Z	g	canGrowInto
		p	1		state
	m	(Lcur;)Lcur;	n	getMaxAgeState
		p	1		state
	m	(Lcur;)Z	o	isMaxAge
		p	1		state
	f	Lcvr;	d	AGE
	f	I	e	MAX_AGE
	f	D	f	growPerTickProbability
c	cmd	net/minecraft/world/level/block/HalfTransparentBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcur;Lgy;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
c	cme	net/minecraft/world/level/block/HangingRootsBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Ldwm;	a	SHAPE
	f	Lcvi;	b	WATERLOGGED
c	cmf	net/minecraft/world/level/block/HayBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
c	cmg	net/minecraft/world/level/block/HoneyBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;)V	a	showSlideParticles
		p	0		entity
	m	(Lbaq;I)V	a	showParticles
		p	0		entity
		p	1		count
	m	(Lbaq;Lgt;)V	a	maybeDoSlideAchievement
		p	1		entity
		p	2		pos
	m	(Lcga;Lbaq;)V	a	maybeDoSlideEffects
		p	1		world
		p	2		entity
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lgt;Lbaq;)Z	a	isSlidingDown
		p	1		pos
		p	2		entity
	m	(Lbaq;)V	b	showJumpParticles
		p	0		entity
	m	(Lbaq;)Z	c	doesEntityDoHoneyBlockSlideEffects
		p	0		entity
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lbaq;)V	d	doSlideMovement
		p	1		entity
	f	Ldwm;	a	SHAPE
	f	D	b	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	f	D	c	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	f	D	d	THROTTLE_SLIDE_SPEED_TO
	f	I	e	SLIDE_ADVANCEMENT_CHECK_INTERVAL
c	cmh	net/minecraft/world/level/block/HopperBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;)V	a	checkPoweredState
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcfg;Lgt;)Ldwm;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldwm;	E	SOUTH_INTERACTION_SHAPE
	f	Ldwm;	F	WEST_INTERACTION_SHAPE
	f	Lcvl;	a	FACING
	f	Lcvi;	b	ENABLED
	f	Ldwm;	c	TOP
	f	Ldwm;	d	FUNNEL
	f	Ldwm;	e	CONVEX_BASE
	f	Ldwm;	f	BASE
	f	Ldwm;	g	DOWN_SHAPE
	f	Ldwm;	h	EAST_SHAPE
	f	Ldwm;	i	NORTH_SHAPE
	f	Ldwm;	j	SOUTH_SHAPE
	f	Ldwm;	k	WEST_SHAPE
	f	Ldwm;	l	DOWN_INTERACTION_SHAPE
	f	Ldwm;	m	EAST_INTERACTION_SHAPE
	f	Ldwm;	n	NORTH_INTERACTION_SHAPE
c	cmh$1	net/minecraft/world/level/block/HopperBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cmi	net/minecraft/world/level/block/HorizontalDirectionalBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	f	Lcvl;	aD	FACING
c	cmj	net/minecraft/world/level/block/HugeMushroomBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcvi;	a	NORTH
	f	Lcvi;	b	EAST
	f	Lcvi;	c	SOUTH
	f	Lcvi;	d	WEST
	f	Lcvi;	e	UP
	f	Lcvi;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
c	cmk	net/minecraft/world/level/block/IceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lbtf;Lgt;Lcur;Lcsl;Lcaa;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		stack
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;Lcga;Lgt;)V	d	melt
		p	1		state
		p	2		world
		p	3		pos
c	cml	net/minecraft/world/level/block/InfestedBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	(Lafo;Lgt;)V	a	spawnInfestation
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	m	(Ljava/util/Map;Lcur;Ljava/util/function/Supplier;)Lcur;	a	getNewStateWithProperties
		p	0		stateMap
		p	1		fromState
		p	2		toStateSupplier
	m	(Ljava/util/function/Supplier;Lcur;)Lcur;	a	lambda$getNewStateWithProperties$2
		p	1		infestedState
	m	()Lciw;	b	getHostBlock
	m	(Lcur;)Z	h	isCompatibleHostBlock
		p	0		block
	m	(Lcur;)Lcur;	n	infestedStateByHost
		p	0		regularState
	m	(Lcur;)Lcur;	o	hostStateByInfested
		p	1		infestedState
	m	(Lcur;)Lcur;	p	lambda$infestedStateByHost$0
	m	()Lcur;	q	lambda$hostStateByInfested$1
	f	Lciw;	a	hostBlock
	f	Ljava/util/Map;	b	BLOCK_BY_HOST_BLOCK
	f	Ljava/util/Map;	c	HOST_TO_INFESTED_STATES
	f	Ljava/util/Map;	d	INFESTED_TO_HOST_STATES
c	cmm	net/minecraft/world/level/block/InfestedRotatedPillarBlock
	m	(Lciw;Lcuq$c;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
c	cmn	net/minecraft/world/level/block/IronBarsBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcur;Lgy;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Z)Z	a	attachsTo
		p	1		state
		p	2		sideSolidFullSquare
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
c	cmo	net/minecraft/world/level/block/JigsawBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldnw$c;Ldnw$c;)Z	a	canAttach
		p	0		info1
		p	1		info2
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgy;)Lcte$a;	a	lambda$canAttach$0
	m	(Lcur;)Lgy;	h	getFrontFacing
		p	0		state
	m	(Lcur;)Lgy;	n	getTopFacing
		p	0		state
	f	Lcvp;	a	ORIENTATION
c	cmp	net/minecraft/world/level/block/JukeboxBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;Lcgb;Lgt;Lcur;Lcaa;)V	a	setRecord
		p	1		user
		p	2		world
		p	3		pos
		p	4		state
		p	5		stack
	m	(Lcga;Lgt;)V	a	dropRecording
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Lcvi;	a	HAS_RECORD
c	cmq	net/minecraft/world/level/block/KelpBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lalu;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Lciw;	b	getBodyBlock
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	g	canGrowInto
		p	1		state
	m	(Lcur;)Z	h	canAttachTo
		p	1		state
	f	Ldwm;	f	SHAPE
	f	D	g	GROW_PER_TICK_PROBABILITY
c	cmr	net/minecraft/world/level/block/KelpPlantBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Lcmc;	c	getHeadBlock
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	h	canAttachTo
		p	1		state
c	cms	net/minecraft/world/level/block/LadderBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lgy;)Z	a	canAttachTo
		p	1		world
		p	2		pos
		p	3		side
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	WATERLOGGED
	f	F	c	AABB_OFFSET
	f	Ldwm;	d	EAST_AABB
	f	Ldwm;	e	WEST_AABB
	f	Ldwm;	f	SOUTH_AABB
	f	Ldwm;	g	NORTH_AABB
c	cms$1	net/minecraft/world/level/block/LadderBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cmt	net/minecraft/world/level/block/LanternBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Lgy;	h	getConnectedDirection
		p	0		state
	f	Lcvi;	a	HANGING
	f	Lcvi;	b	WATERLOGGED
	f	Ldwm;	c	AABB
	f	Ldwm;	d	HANGING_AABB
c	cmu	net/minecraft/world/level/block/LavaCauldronBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;)D	a	getContentHeight
		p	1		state
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;)Z	c	isFull
		p	1		state
c	cmv	net/minecraft/world/level/block/LayeredCauldronBlock
	m	(Lcuq$c;Ljava/util/function/Predicate;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		precipitationPredicate
		p	3		behaviorMap
	m	(Lcgw$c;)Z	a	lambda$static$1
		p	0		precipitation
	m	(Lcur;)D	a	getContentHeight
		p	1		state
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lcgw$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Lcur;Lcga;Lgt;Ldox;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldox;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Lcgw$c;)Z	b	lambda$static$0
		p	0		precipitation
	m	(Lcur;)Z	c	isFull
		p	1		state
	m	(Lcur;Lcga;Lgt;)V	d	handleEntityOnFireInside
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;)V	e	lowerFillLevel
		p	0		state
		p	1		world
		p	2		pos
	f	I	c	MIN_FILL_LEVEL
	f	I	d	MAX_FILL_LEVEL
	f	Lcvr;	e	LEVEL
	f	Ljava/util/function/Predicate;	f	RAIN
	f	Ljava/util/function/Predicate;	g	SNOW
	f	I	h	BASE_CONTENT_HEIGHT
	f	D	i	HEIGHT_PER_LEVEL
	f	Ljava/util/function/Predicate;	j	fillPredicate
c	cmw	net/minecraft/world/level/block/LeavesBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgb;Lgt;)Lcur;	a	updateDistance
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Ldwm;	f	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	h	decaying
		p	1		state
	m	(Lcur;)I	n	getDistanceAt
		p	0		state
	f	I	a	DECAY_DISTANCE
	f	Lcvr;	b	DISTANCE
	f	Lcvi;	c	PERSISTENT
	f	Lcvi;	d	WATERLOGGED
	f	I	e	TICK_DELAY
c	cmx	net/minecraft/world/level/block/LecternBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbtf;Lcga;Lgt;Lcur;Lcaa;)Z	a	tryPlaceBook
		p	0		player
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lbtf;)V	a	openScreen
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcga;Lgt;Lcur;)V	a	signalPageChange
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;Lcur;Z)V	a	resetBookState
		p	0		world
		p	1		pos
		p	2		state
		p	3		hasBook
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lbtf;Lcga;Lgt;Lcur;Lcaa;)V	b	placeBook
		p	0		player
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Lcga;Lgt;Lcur;)V	b	updateBelow
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;Lcur;Z)V	b	changePowered
		p	0		world
		p	1		pos
		p	2		state
		p	3		powered
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)V	d	popBook
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	POWERED
	f	Lcvi;	c	HAS_BOOK
	f	Ldwm;	d	SHAPE_BASE
	f	Ldwm;	e	SHAPE_POST
	f	Ldwm;	f	SHAPE_COMMON
	f	Ldwm;	g	SHAPE_TOP_PLATE
	f	Ldwm;	h	SHAPE_COLLISION
	f	Ldwm;	i	SHAPE_WEST
	f	Ldwm;	j	SHAPE_NORTH
	f	Ldwm;	k	SHAPE_EAST
	f	Ldwm;	l	SHAPE_SOUTH
	f	I	m	PAGE_CHANGE_IMPULSE_TICKS
c	cmx$1	net/minecraft/world/level/block/LecternBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cmy	net/minecraft/world/level/block/LevelEvent
	f	I	A	SOUND_ZOMBIE_INFECTED
	f	I	B	SOUND_ZOMBIE_CONVERTED
	f	I	C	SOUND_DRAGON_DEATH
	f	I	D	SOUND_ANVIL_BROKEN
	f	I	E	SOUND_ANVIL_USED
	f	I	F	SOUND_ANVIL_LAND
	f	I	G	SOUND_PORTAL_TRAVEL
	f	I	H	SOUND_CHORUS_GROW
	f	I	I	SOUND_CHORUS_DEATH
	f	I	J	SOUND_BREWING_STAND_BREW
	f	I	K	SOUND_CLOSE_IRON_TRAP_DOOR
	f	I	L	SOUND_OPEN_IRON_TRAP_DOOR
	f	I	M	SOUND_END_PORTAL_SPAWN
	f	I	N	SOUND_PHANTOM_BITE
	f	I	O	SOUND_ZOMBIE_TO_DROWNED
	f	I	P	SOUND_HUSK_TO_ZOMBIE
	f	I	Q	SOUND_GRINDSTONE_USED
	f	I	R	SOUND_PAGE_TURN
	f	I	S	SOUND_SMITHING_TABLE_USED
	f	I	T	SOUND_POINTED_DRIPSTONE_LAND
	f	I	U	SOUND_DRIP_LAVA_INTO_CAULDRON
	f	I	V	SOUND_DRIP_WATER_INTO_CAULDRON
	f	I	W	SOUND_SKELETON_TO_STRAY
	f	I	X	COMPOSTER_FILL
	f	I	Y	LAVA_FIZZ
	f	I	Z	REDSTONE_TORCH_BURNOUT
	f	I	a	SOUND_DISPENSER_DISPENSE
	f	I	aa	END_PORTAL_FRAME_FILL
	f	I	ab	DRIPSTONE_DRIP
	f	I	ac	PARTICLES_AND_SOUND_PLANT_GROWTH
	f	I	ad	PARTICLES_SHOOT
	f	I	ae	PARTICLES_DESTROY_BLOCK
	f	I	af	PARTICLES_SPELL_POTION_SPLASH
	f	I	ag	PARTICLES_EYE_OF_ENDER_DEATH
	f	I	ah	PARTICLES_MOBBLOCK_SPAWN
	f	I	ai	PARTICLES_PLANT_GROWTH
	f	I	aj	PARTICLES_DRAGON_FIREBALL_SPLASH
	f	I	ak	PARTICLES_INSTANT_POTION_SPLASH
	f	I	al	PARTICLES_DRAGON_BLOCK_BREAK
	f	I	am	PARTICLES_WATER_EVAPORATING
	f	I	an	ANIMATION_END_GATEWAY_SPAWN
	f	I	ao	ANIMATION_DRAGON_SUMMON_ROAR
	f	I	ap	PARTICLES_ELECTRIC_SPARK
	f	I	aq	PARTICLES_AND_SOUND_WAX_ON
	f	I	ar	PARTICLES_WAX_OFF
	f	I	as	PARTICLES_SCRAPE
	f	I	at	PARTICLES_SCULK_CHARGE
	f	I	au	PARTICLES_SCULK_SHRIEK
	f	I	b	SOUND_DISPENSER_FAIL
	f	I	c	SOUND_DISPENSER_PROJECTILE_LAUNCH
	f	I	d	SOUND_ENDER_EYE_LAUNCH
	f	I	e	SOUND_FIREWORK_SHOOT
	f	I	f	SOUND_OPEN_IRON_DOOR
	f	I	g	SOUND_OPEN_WOODEN_DOOR
	f	I	h	SOUND_OPEN_WOODEN_TRAP_DOOR
	f	I	i	SOUND_OPEN_FENCE_GATE
	f	I	j	SOUND_EXTINGUISH_FIRE
	f	I	k	SOUND_PLAY_RECORDING
	f	I	l	SOUND_CLOSE_IRON_DOOR
	f	I	m	SOUND_CLOSE_WOODEN_DOOR
	f	I	n	SOUND_CLOSE_WOODEN_TRAP_DOOR
	f	I	o	SOUND_CLOSE_FENCE_GATE
	f	I	p	SOUND_GHAST_WARNING
	f	I	q	SOUND_GHAST_FIREBALL
	f	I	r	SOUND_DRAGON_FIREBALL
	f	I	s	SOUND_BLAZE_FIREBALL
	f	I	t	SOUND_ZOMBIE_WOODEN_DOOR
	f	I	u	SOUND_ZOMBIE_IRON_DOOR
	f	I	v	SOUND_ZOMBIE_DOOR_CRASH
	f	I	w	SOUND_WITHER_BLOCK_BREAK
	f	I	x	SOUND_WITHER_BOSS_SPAWN
	f	I	y	SOUND_WITHER_BOSS_SHOOT
	f	I	z	SOUND_BAT_LIFTOFF
c	cmz	net/minecraft/world/level/block/LeverBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcgb;Lgt;F)V	a	makeParticle
		p	0		state
		p	1		world
		p	2		pos
		p	3		alpha
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)Lcur;	d	pull
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Lcvi;	a	POWERED
	f	I	b	DEPTH
	f	I	c	WIDTH
	f	I	d	HEIGHT
	f	Ldwm;	e	NORTH_AABB
	f	Ldwm;	f	SOUTH_AABB
	f	Ldwm;	g	WEST_AABB
	f	Ldwm;	h	EAST_AABB
	f	Ldwm;	i	UP_AABB_Z
	f	Ldwm;	j	UP_AABB_X
	f	Ldwm;	k	DOWN_AABB_Z
	f	Ldwm;	l	DOWN_AABB_X
c	cmz$1	net/minecraft/world/level/block/LeverBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cna	net/minecraft/world/level/block/LightBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)I	h	lambda$static$0
		p	0		state
	f	I	a	MAX_LEVEL
	f	Lcvr;	b	LEVEL
	f	Lcvi;	c	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	d	LIGHT_EMISSION
c	cnb	net/minecraft/world/level/block/LightningRodBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcga;Lgt;)V	d	onLightningStrike
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Lcvi;	b	WATERLOGGED
	f	Lcvi;	c	POWERED
	f	I	d	RANGE
	f	I	j	ACTIVATION_TICKS
	f	I	k	SPARK_CYCLE
c	cnc	net/minecraft/world/level/block/LiquidBlock
	m	(Ldow;Lcuq$c;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	()Ljava/util/Optional;	Y_	getPickupSound
	m	(Lcga;Lgt;Lcur;)Z	a	shouldSpreadLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgb;Lgt;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcur;Lgy;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Lcur;Ldrg$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcgb;Lgt;Lcur;)Lcaa;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	f	Lcvr;	a	LEVEL
	f	Ldow;	b	fluid
	f	Ldwm;	c	STABLE_SHAPE
	f	Lcom/google/common/collect/ImmutableList;	d	POSSIBLE_FLOW_DIRECTIONS
	f	Ljava/util/List;	e	stateCache
c	cnd	net/minecraft/world/level/block/LiquidBlockContainer
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
c	cne	net/minecraft/world/level/block/LoomBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lrm;	a	CONTAINER_TITLE
c	cnf	net/minecraft/world/level/block/MagmaBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	BUBBLE_COLUMN_CHECK_DELAY
c	cng	net/minecraft/world/level/block/MangroveLeavesBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	cnh	net/minecraft/world/level/block/MangrovePropaguleBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)Lcur;	b	createNewHangingPropagule
		p	0		age
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Lcur;	c	createNewHangingPropagule
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Lcur;)Z	h	isHanging
		p	0		state
	m	(Lcur;)Z	n	isFullyGrown
		p	0		state
	f	Lcvr;	a	AGE
	f	I	b	MAX_AGE
	f	Lcvi;	c	HANGING
	f	[Ldwm;	g	SHAPE_PER_AGE
	f	Lcvi;	h	WATERLOGGED
	f	F	i	GROW_TALL_MANGROVE_PROBABILITY
c	cni	net/minecraft/world/level/block/MangroveRootsBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcur;Lgy;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Lcvi;	a	WATERLOGGED
c	cnj	net/minecraft/world/level/block/MelonBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Lcqi;	b	getStem
	m	()Lchy;	c	getAttachedStem
c	cnk	net/minecraft/world/level/block/Mirror
	m	(Ljava/lang/String;ILjava/lang/String;Lf;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lf;	a	rotation
	m	(II)I	a	mirror
		p	1		rotation
		p	2		fullTurn
	m	(Lgy;)Lcoz;	a	getRotation
		p	1		direction
	m	()Lrm;	b	symbol
	m	(Lgy;)Lgy;	b	mirror
		p	1		direction
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcnk;	d	$values
	f	Lcnk;	a	NONE
	f	Lcnk;	b	LEFT_RIGHT
	f	Lcnk;	c	FRONT_BACK
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	Lrm;	f	symbol
	f	Lf;	g	rotation
	f	[Lcnk;	h	$VALUES
c	cnk$1	net/minecraft/world/level/block/Mirror$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cnl	net/minecraft/world/level/block/MossBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	cnm	net/minecraft/world/level/block/MudBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Ldwm;	f	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	f	Ldwm;	a	SHAPE
c	cnn	net/minecraft/world/level/block/MultifaceBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(B)Ljava/util/Set;	a	unpack
		p	0		flag
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lcur;Lgt;Lgy;)Z	a	isValidStateForPlacement
		p	1		world
		p	2		state
		p	3		pos
		p	4		direction
	m	(Lcfg;Lgy;Lgt;Lcur;)Z	a	canAttachTo
		p	0		world
		p	1		direction
		p	2		pos
		p	3		state
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lgy;)Lcur;	a	lambda$getStateForPlacement$1
		p	4		direction
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lcvi;)Lcur;	a	removeFace
		p	0		state
		p	1		direction
	m	(Lcur;Lgy;)Z	a	hasFace
		p	0		state
		p	1		direction
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Ljava/util/function/Function;)Lcur;	a	mapDirections
		p	1		state
		p	2		mirror
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcus;)Lcur;	a	getDefaultMultifaceState
		p	0		stateManager
	m	(Lgy;)Z	a	isFaceSupported
		p	1		direction
	m	(Ljava/util/Collection;)B	a	pack
		p	0		directions
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		shapes
	m	(Lcur;Lgy;)Z	b	lambda$hasAnyVacantFace$3
		p	1		direction
	m	(Lgy;)Lcvi;	b	getFaceProperty
		p	0		direction
	m	()Lcno;	c	getSpreader
	m	(Lcur;Lcfg;Lgt;Lgy;)Lcur;	c	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lgy;)Z	c	lambda$hasAnyFace$2
		p	1		direction
	m	(Lcur;)Ljava/util/Set;	h	availableFaces
		p	0		state
	m	(Lcur;)Z	n	hasAnyFace
		p	0		state
	m	(Lcur;)Ldwm;	o	calculateMultifaceShape
		p	0		state
	m	(Lcur;)Z	p	hasAnyVacantFace
		p	0		state
	m	()Z	q	isWaterloggable
	f	[Lgy;	a	DIRECTIONS
	f	F	b	AABB_OFFSET
	f	Ldwm;	c	UP_AABB
	f	Ldwm;	d	DOWN_AABB
	f	Ldwm;	e	WEST_AABB
	f	Ldwm;	f	EAST_AABB
	f	Ldwm;	g	NORTH_AABB
	f	Ldwm;	h	SOUTH_AABB
	f	Ljava/util/Map;	i	PROPERTY_BY_DIRECTION
	f	Ljava/util/Map;	j	SHAPE_BY_DIRECTION
	f	Lcom/google/common/collect/ImmutableMap;	k	shapesCache
	f	Z	l	canRotate
	f	Z	m	canMirrorX
	f	Z	n	canMirrorZ
c	cno	net/minecraft/world/level/block/MultifaceSpreader
	m	(Lcnn;)V	<init>	<init>
		p	1		lichen
	m	(Lcno$b;)V	<init>	<init>
		p	1		growChecker
	m	(Lcgb;Lcno$c;Z)Ljava/util/Optional;	a	spreadToFace
		p	1		world
		p	2		pos
		p	3		markForPostProcessing
	m	(Lcgb;ZLcno$c;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardDirection$7
		p	3		growPos
	m	(Lcur;Lcfg;Lgt;Lgy;)Z	a	canSpreadInAnyDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcfg;Lgt;Lgy;Lgy;)Z	a	lambda$canSpreadInAnyDirection$0
		p	5		direction2
	m	(Lcur;Lcfg;Lgt;Lgy;Lgy;Lcno$d;)Ljava/util/Optional;	a	getSpreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		predicate
	m	(Lcur;Lcgb;Lgt;Lalu;)Ljava/util/Optional;	a	spreadFromRandomFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgb;Lgt;Lalu;Lgy;)Ljava/util/Optional;	a	lambda$spreadFromRandomFaceTowardRandomDirection$2
		p	5		direction
	m	(Lcur;Lcgb;Lgt;Lgy;Lalu;Z)Ljava/util/Optional;	a	spreadFromFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		random
		p	6		markForPostProcessing
	m	(Lcur;Lcgb;Lgt;Lgy;Lgy;Z)Ljava/util/Optional;	a	spreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		markForPostProcessing
	m	(Lcur;Lcgb;Lgt;Lgy;Z)J	a	spreadFromFaceTowardAllDirections
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		markForPostProcessing
	m	(Lcur;Lcgb;Lgt;Lgy;ZLgy;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardAllDirections$6
		p	6		direction2
	m	(Lcur;Lcgb;Lgt;Z)J	a	spreadAll
		p	1		state
		p	2		world
		p	3		pos
		p	4		markForPostProcessing
	m	(Lcur;Lcgb;Lgt;ZLgy;)Ljava/lang/Long;	a	lambda$spreadAll$4
		p	5		direction
	m	(Lcur;Lgy;)Z	a	lambda$spreadAll$3
		p	2		direction
	m	(Lcur;Lcgb;Lgt;Lgy;ZLgy;)Ljava/util/Optional;	b	lambda$spreadFromFaceTowardRandomDirection$5
		p	6		direction2
	m	(Lcur;Lgy;)Z	b	lambda$spreadFromRandomFaceTowardRandomDirection$1
		p	2		direction
	f	[Lcno$e;	a	DEFAULT_SPREAD_ORDER
	f	Lcno$b;	b	config
c	cno$a	net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig
	m	(Lcnn;)V	<init>	<init>
		p	1		lichen
	m	(Lcfg;Lgt;Lcno$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Lcfg;Lgt;Lgt;Lgy;Lcur;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Lcur;Lcfg;Lgt;Lgy;)Lcur;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Lcnn;	a	block
c	cno$b	net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig
	m	()[Lcno$e;	a	getSpreadTypes
	m	(Lcfg;Lgt;Lcno$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Lcgb;Lcno$c;Lcur;Z)Z	a	placeBlock
		p	1		world
		p	2		growPos
		p	3		state
		p	4		markForPostProcessing
	m	(Lcur;)Z	a	isOtherBlockValidAsSource
		p	1		state
	m	(Lcur;Lcfg;Lgt;Lgy;)Lcur;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lgy;)Z	a	hasFace
		p	1		state
		p	2		direction
	m	(Lcur;Lgy;)Z	b	canSpreadFrom
		p	1		state
		p	2		direction
c	cno$c	net/minecraft/world/level/block/MultifaceSpreader$SpreadPos
	m	()Lgt;	a	pos
	m	()Lgy;	b	face
	f	Lgt;	a	pos
	f	Lgy;	b	face
c	cno$d	net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate
	m	(Lcfg;Lgt;Lcno$c;)Z	test	test
		p	1		world
		p	2		pos
		p	3		growPos
c	cno$e	net/minecraft/world/level/block/MultifaceSpreader$SpreadType
	m	()[Lcno$e;	a	$values
	m	(Lgt;Lgy;Lgy;)Lcno$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
	f	Lcno$e;	a	SAME_POSITION
	f	Lcno$e;	b	SAME_PLANE
	f	Lcno$e;	c	WRAP_AROUND
	f	[Lcno$e;	d	$VALUES
c	cno$e$1	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$1
	m	(Lgt;Lgy;Lgy;)Lcno$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cno$e$2	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$2
	m	(Lgt;Lgy;Lgy;)Lcno$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cno$e$3	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$3
	m	(Lgt;Lgy;Lgy;)Lcno$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cnp	net/minecraft/world/level/block/MushroomBlock
	m	(Lcuq$c;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		feature
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lafo;Lgt;Lcur;Lalu;)Z	a	growMushroom
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
	f	Ljava/util/function/Supplier;	c	featureSupplier
c	cnq	net/minecraft/world/level/block/MyceliumBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	cnr	net/minecraft/world/level/block/NetherPortalBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcvp;	a	AXIS
	f	I	b	AABB_OFFSET
	f	Ldwm;	c	X_AXIS_AABB
	f	Ldwm;	d	Z_AXIS_AABB
c	cnr$1	net/minecraft/world/level/block/NetherPortalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cns	net/minecraft/world/level/block/NetherSproutsBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldwm;	a	SHAPE
c	cnt	net/minecraft/world/level/block/NetherVines
	m	(Lalu;)I	a	getBlocksToGrowWhenBonemealed
		p	0		random
	m	(Lcur;)Z	a	isValidGrowthState
		p	0		state
	f	D	a	GROW_PER_TICK_PROBABILITY
	f	D	b	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
c	cnu	net/minecraft/world/level/block/NetherWartBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	MAX_AGE
	f	Lcvr;	b	AGE
	f	[Ldwm;	c	SHAPE_BY_AGE
c	cnv	net/minecraft/world/level/block/NetherrackBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	cnw	net/minecraft/world/level/block/NoteBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;Lcga;Lgt;)V	a	playNote
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcga;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Lcur;Lcga;Lgt;Lbtf;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcvp;	a	INSTRUMENT
	f	Lcvi;	b	POWERED
	f	Lcvr;	c	NOTE
c	cnx	net/minecraft/world/level/block/NyliumBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	b	canBeNylium
		p	0		state
		p	1		world
		p	2		pos
c	cny	net/minecraft/world/level/block/ObserverBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcur;)V	a	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgb;Lgt;)V	a	startSignal
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Lcvi;	b	POWERED
c	cnz	net/minecraft/world/level/block/PipeBlock
	m	(FLcuq$c;)V	<init>	<init>
		p	1		radius
		p	2		settings
	m	(F)[Ldwm;	a	makeShapes
		p	1		radius
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		directions
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)I	h	getAABBIndex
		p	1		state
	f	Lcvi;	a	NORTH
	f	Lcvi;	b	EAST
	f	Lcvi;	c	SOUTH
	f	Lcvi;	d	WEST
	f	Lcvi;	e	UP
	f	Lcvi;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	[Ldwm;	h	shapeByIndex
	f	[Lgy;	i	DIRECTIONS
c	coa	net/minecraft/world/level/block/PlayerHeadBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
c	cob	net/minecraft/world/level/block/PlayerWallHeadBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Ldrg$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
c	coc	net/minecraft/world/level/block/PointedDripstoneBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()F	W_	getMaxHorizontalOffset
	m	()Ljava/util/function/Predicate;	X_	getHurtsEntitySelector
	m	(FLcoc$a;)Z	a	lambda$animateTick$0
		p	1		fluid
	m	(Lafo;Lgt;)Ldox;	a	getCauldronFillFluidType
		p	0		world
		p	1		pos
	m	(Lafo;Lgt;Lgy;)V	a	grow
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcga;Ldox;)Ldox;	a	getDripFluid
		p	0		world
		p	1		fluid
	m	(Lcga;Lgt;)Lgt;	a	findStalactiteTipAboveCauldron
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lbpx;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcga;Lgt;Lcur;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;Lcur;I)Ljava/util/Optional;	a	findRootBlock
		p	0		world
		p	1		pos
		p	2		state
		p	3		range
	m	(Lcga;Lgt;Lcur;Lcoc$a;)V	a	lambda$spawnDripParticle$2
		p	3		fluid
	m	(Lcga;Lgt;Lcur;Ldox;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
		p	3		fluid
	m	(Lcga;Lgt;Ldox;)Lgt;	a	findFillableCauldronBelowStalactiteTip
		p	0		world
		p	1		pos
		p	2		fluid
	m	(Lcgb;Lgt;Lgy$b;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional;	a	findBlockVertical
		p	0		world
		p	1		pos
		p	2		direction
		p	3		continuePredicate
		p	4		stopPredicate
		p	5		range
	m	(Lcgb;Lgt;Lgy;Lcvo;)V	a	createDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		thickness
	m	(Lcgd;Lgt;Lgy;Z)Lcvo;	a	calculateDripstoneThickness
		p	0		world
		p	1		pos
		p	2		direction
		p	3		tryMerge
	m	(Lcoc$a;)Ldox;	a	lambda$getCauldronFillFluidType$10
		p	0		fluid
	m	(Lcur;Lafo;Lgt;)V	a	spawnFallingStalactite
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;F)V	a	maybeTransferFluid
		p	0		state
		p	1		world
		p	2		pos
		p	3		dripChance
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgb;Lgt;)V	a	createMergedTips
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcgb;Lgt;IZ)Lgt;	a	findTip
		p	0		state
		p	1		world
		p	2		pos
		p	3		range
		p	4		allowMerged
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcur;)Z	a	canGrow
		p	0		dripstoneBlockState
		p	1		waterState
	m	(Lcur;Lgy;)Z	a	isUnmergedTipWithDirection
		p	0		state
		p	1		direction
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Z)Z	a	isTip
		p	0		state
		p	1		allowMerged
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldox;)Z	a	canFillCauldron
		p	0		fluid
	m	(Ldox;Lcur;)Z	a	lambda$findFillableCauldronBelowStalactiteTip$7
		p	1		state
	m	(Lgy;Lgt;Lcur;)Z	a	lambda$findRootBlock$5
		p	1		pos
		p	2		state
	m	(ZLcur;)Z	a	lambda$findTip$4
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()Lazz;	b	getFallDamageSource
	m	(Lafo;Lgt;)V	b	growStalagmiteBelow
		p	0		world
		p	1		pos
	m	(Lcfg;Lgt;Lcur;)Z	b	canDripThrough
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;)Lcoc$a;	b	lambda$getFluidAboveStalactite$11
		p	1		pos
	m	(Lcga;Lgt;Lcur;)Ljava/util/Optional;	b	getFluidAboveStalactite
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;Lcur;Lcoc$a;)V	b	lambda$animateTick$1
		p	3		fluid
	m	(Lcgd;Lgt;Lgy;)Lgy;	b	calculateTipDirection
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcur;Lafo;Lgt;)Z	b	canTipGrow
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	b	isStalactiteStartPos
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lgy;)Z	b	isPointedDripstoneWithDirection
		p	0		state
		p	1		direction
	m	(Lgy;Lgt;Lcur;)Z	b	lambda$findTip$3
		p	1		pos
		p	2		state
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcga;Lgt;Lcur;)Z	c	lambda$findStalactiteTipAboveCauldron$9
		p	1		pos
		p	2		state
	m	(Lcgd;Lgt;Lgy;)Z	c	isValidPointedDripstonePlacement
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcur;Lafo;Lgt;Lalu;)V	c	growStalactiteOrStalagmiteIfPossible
		p	0		state
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcga;Lgt;Lcur;)Z	d	lambda$findFillableCauldronBelowStalactiteTip$8
		p	1		pos
		p	2		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Z	h	canDrip
		p	0		state
	m	(Lcur;)Z	n	isStalactite
		p	0		state
	m	(Lcur;)Z	o	isStalagmite
		p	0		state
	m	(Lcur;)Z	p	lambda$findRootBlock$6
		p	0		state
	f	F	E	STALAGMITE_FALL_DISTANCE_OFFSET
	f	I	F	STALAGMITE_FALL_DAMAGE_MODIFIER
	f	F	G	AVERAGE_DAYS_PER_GROWTH
	f	F	H	GROWTH_PROBABILITY_PER_RANDOM_TICK
	f	I	I	MAX_GROWTH_LENGTH
	f	I	J	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	f	F	K	STALACTITE_DRIP_START_PIXEL
	f	Ldwm;	L	TIP_MERGE_SHAPE
	f	Ldwm;	M	TIP_SHAPE_UP
	f	Ldwm;	N	TIP_SHAPE_DOWN
	f	Ldwm;	O	FRUSTUM_SHAPE
	f	Ldwm;	P	MIDDLE_SHAPE
	f	Ldwm;	Q	BASE_SHAPE
	f	F	R	MAX_HORIZONTAL_OFFSET
	f	Ldwm;	S	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	f	Lcvl;	a	TIP_DIRECTION
	f	Lcvp;	b	THICKNESS
	f	Lcvi;	c	WATERLOGGED
	f	I	d	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	f	I	e	DELAY_BEFORE_FALLING
	f	F	f	DRIP_PROBABILITY_PER_ANIMATE_TICK
	f	F	g	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	f	I	h	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	f	F	i	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	F	j	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	D	k	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	f	F	l	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	f	I	m	STALACTITE_MAX_DAMAGE
	f	I	n	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
c	coc$a	net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo
	m	()Lgt;	a	pos
	m	()Ldox;	b	fluid
	m	()Lcur;	c	sourceState
	f	Lgt;	a	pos
	f	Ldox;	b	fluid
	f	Lcur;	c	sourceState
c	cod	net/minecraft/world/level/block/PotatoBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lcfz;	d	getBaseSeedId
	f	[Ldwm;	a	SHAPE_BY_AGE
c	coe	net/minecraft/world/level/block/PowderSnowBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Ljava/util/Optional;	Y_	getPickupSound
	m	(Lbaq;)Z	a	canEntityWalkOnPowderSnow
		p	0		entity
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcur;Lgy;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcgb;Lgt;Lcur;)Lcaa;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	f	F	b	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	f	F	c	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	f	F	d	NUM_BLOCKS_TO_FALL_INTO_BLOCK
	f	Ldwm;	e	FALLING_COLLISION_SHAPE
	f	D	f	MINIMUM_FALL_DISTANCE_FOR_SOUND
	f	D	g	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
c	cof	net/minecraft/world/level/block/PowderSnowCauldronBlock
	m	(Lcuq$c;Ljava/util/function/Predicate;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		precipitationPredicate
		p	3		behaviorMap
	m	(Lcur;Lcga;Lgt;)V	d	handleEntityOnFireInside
		p	1		state
		p	2		world
		p	3		pos
c	cog	net/minecraft/world/level/block/PoweredBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
c	coh	net/minecraft/world/level/block/PoweredRailBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;Lcur;ZI)Z	a	findPoweredRailSignal
		p	1		world
		p	2		pos
		p	3		state
		p	5		distance
	m	(Lcga;Lgt;ZILcvv;)Z	a	isSameRailWithPower
		p	1		world
		p	2		pos
		p	4		distance
		p	5		shape
	m	(Lcur;Lcga;Lgt;Lciw;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcvu;	c	getShapeProperty
	f	Lcvp;	d	SHAPE
	f	Lcvi;	e	POWERED
c	coh$1	net/minecraft/world/level/block/PoweredRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	coi	net/minecraft/world/level/block/PressurePlateBlock
	m	(Lcoi$a;Lcuq$c;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcgb;Lgt;)V	a	playOnSound
		p	1		world
		p	2		pos
	m	(Lcur;I)Lcur;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcga;Lgt;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;)V	b	playOffSound
		p	1		world
		p	2		pos
	m	(Lcur;)I	g	getSignalForState
		p	1		state
	f	Lcvi;	d	POWERED
	f	Lcoi$a;	e	sensitivity
c	coi$1	net/minecraft/world/level/block/PressurePlateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
c	coi$a	net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	m	()[Lcoi$a;	a	$values
	f	Lcoi$a;	a	EVERYTHING
	f	Lcoi$a;	b	MOBS
	f	[Lcoi$a;	c	$VALUES
c	coj	net/minecraft/world/level/block/PumpkinBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lazl;Lbtf;)V	a	lambda$use$0
		p	1		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	()Lcqi;	b	getStem
	m	()Lchy;	c	getAttachedStem
c	cok	net/minecraft/world/level/block/RailBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcga;Lgt;Lciw;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcvu;	c	getShapeProperty
	f	Lcvp;	d	SHAPE
c	cok$1	net/minecraft/world/level/block/RailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	col	net/minecraft/world/level/block/RailState
	m	(Lcga;Lgt;Lcur;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		state
	m	()Ljava/util/List;	a	getConnections
	m	(Lcol;)Z	a	connectsTo
		p	1		other
	m	(Lcvv;)V	a	updateConnections
		p	1		shape
	m	(Lgt;)Z	a	hasRail
		p	1		pos
	m	(ZZLcvv;)Lcol;	a	place
		p	1		powered
		p	2		forceUpdate
		p	3		railShape
	m	()I	b	countPotentialConnections
	m	(Lcol;)Z	b	canConnectTo
		p	1		placementHelper
	m	(Lgt;)Lcol;	b	getRail
		p	1		pos
	m	()Lcur;	c	getState
	m	(Lcol;)V	c	connectTo
		p	1		placementHelper
	m	(Lgt;)Z	c	hasConnection
		p	1		pos
	m	()V	d	removeSoftConnections
	m	(Lgt;)Z	d	hasNeighborRail
		p	1		pos
	f	Lcga;	a	level
	f	Lgt;	b	pos
	f	Lcim;	c	block
	f	Lcur;	d	state
	f	Z	e	isStraight
	f	Ljava/util/List;	f	connections
c	col$1	net/minecraft/world/level/block/RailState$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	com	net/minecraft/world/level/block/RedStoneOreBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;)V	a	spawnParticles
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;)V	d	interact
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	f	Lcvi;	a	LIT
c	coo	net/minecraft/world/level/block/RedStoneWireBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lcur;Lgt;)Lcur;	a	getConnectionState
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcfg;Lgt;Lgy;)Lcvw;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcfg;Lgt;Lgy;Z)Lcvw;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcga;Lalu;Lgt;Ldvt;Lgy;Lgy;FF)V	a	spawnParticlesAlongLine
		p	1		world
		p	2		random
		p	3		pos
		p	4		color
	m	(Lcga;Lgt;)I	a	calculateTargetStrength
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lcur;)V	a	updatePowerStrength
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lcur;)V	a	updatesOnShapeChange
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcgb;Lgt;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;)Z	a	shouldConnectTo
		p	0		state
		p	1		dir
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Ldvt;)V	a	lambda$static$0
	m	(I)I	b	getColorForPower
		p	0		powerLevel
	m	(Lcfg;Lcur;Lgt;)Lcur;	b	getMissingConnections
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcfg;Lgt;Lcur;)Z	b	canSurviveOn
		p	1		world
		p	2		pos
		p	3		floor
	m	(Lcga;Lgt;)V	b	checkCornerChangeAt
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcga;Lgt;)V	c	updateNeighborsOfNeighboringWires
		p	1		world
		p	2		pos
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	(Lcur;)Z	h	shouldConnectTo
		p	0		state
	m	(Lcur;)Ldwm;	n	calculateShape
		p	1		state
	m	(Lcur;)Z	o	isCross
		p	0		state
	m	(Lcur;)Z	p	isDot
		p	0		state
	m	(Lcur;)I	q	getWireSignal
		p	1		state
	f	Ljava/util/Map;	E	SHAPES_CACHE
	f	[Ldvt;	F	COLORS
	f	F	G	PARTICLE_DENSITY
	f	Lcur;	H	crossState
	f	Z	I	shouldSignal
	f	Lcvp;	a	NORTH
	f	Lcvp;	b	EAST
	f	Lcvp;	c	SOUTH
	f	Lcvp;	d	WEST
	f	Lcvr;	e	POWER
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	I	g	H
	f	I	h	W
	f	I	i	E
	f	I	j	N
	f	I	k	S
	f	Ldwm;	l	SHAPE_DOT
	f	Ljava/util/Map;	m	SHAPES_FLOOR
	f	Ljava/util/Map;	n	SHAPES_UP
c	coo$1	net/minecraft/world/level/block/RedStoneWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cop	net/minecraft/world/level/block/RedstoneLampBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcvi;	a	LIT
c	coq	net/minecraft/world/level/block/RedstoneTorchBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;)Ljava/util/List;	a	lambda$isToggledTooFrequently$0
		p	0		world
	m	(Lcga;Lgt;Lcur;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Z)Z	a	isToggledTooFrequently
		p	0		world
		p	1		pos
		p	2		addNew
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Lcvi;	a	LIT
	f	I	b	RECENT_TOGGLE_TIMER
	f	I	c	MAX_RECENT_TOGGLES
	f	I	d	RESTART_DELAY
	f	Ljava/util/Map;	e	RECENT_TOGGLES
	f	I	f	TOGGLE_DELAY
c	coq$a	net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	m	(Lgt;J)V	<init>	<init>
		p	1		pos
		p	2		time
	f	Lgt;	a	pos
	f	J	b	when
c	cor	net/minecraft/world/level/block/RedstoneWallTorchBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcur;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	f	Lcvl;	e	FACING
	f	Lcvi;	f	LIT
c	cos	net/minecraft/world/level/block/RenderShape
	m	()[Lcos;	a	$values
	f	Lcos;	a	INVISIBLE
	f	Lcos;	b	ENTITYBLOCK_ANIMATED
	f	Lcos;	c	MODEL
	f	[Lcos;	d	$VALUES
c	cot	net/minecraft/world/level/block/RepeaterBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcgd;Lgt;Lcur;)Z	a	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)I	g	getDelay
		p	1		state
	m	(Lcur;)Z	h	isAlternateInput
		p	1		state
	f	Lcvi;	a	LOCKED
	f	Lcvr;	d	DELAY
c	cou	net/minecraft/world/level/block/RespawnAnchorBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbau;Lcfk;Lgt;)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
	m	(Lbau;Lcfk;Lgt;Z)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Lcaa;)Z	a	isRespawnFuel
		p	0		stack
	m	(Lcga;)Z	a	canSetSpawn
		p	0		world
	m	(Lcga;Lgt;)Z	a	lambda$explode$0
		p	1		pos
	m	(Lcga;Lgt;Lcur;)V	a	charge
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcur;I)I	a	getScaledChargeLevel
		p	0		state
		p	1		maxLevel
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcga;)Z	a	isWaterThatWouldFlow
		p	0		pos
		p	1		world
	m	(Lcur;Lcga;Lgt;)V	d	explode
		p	1		state
		p	2		world
		p	3		explodedPos
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;)Z	h	canBeCharged
		p	0		state
	f	I	a	MIN_CHARGES
	f	I	b	MAX_CHARGES
	f	Lcvr;	c	CHARGE
	f	Lcom/google/common/collect/ImmutableList;	d	RESPAWN_HORIZONTAL_OFFSETS
	f	Lcom/google/common/collect/ImmutableList;	e	RESPAWN_OFFSETS
c	cou$1	net/minecraft/world/level/block/RespawnAnchorBlock$1
	m	(Lcfs;Lcfg;Lgt;Lcur;Ldoy;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	f	Lgt;	a	val$pos
	f	Z	b	val$inWater
	f	Lcou;	c	this$0
c	cov	net/minecraft/world/level/block/RodBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	f	F	e	AABB_MIN
	f	F	f	AABB_MAX
	f	Ldwm;	g	Y_AXIS_AABB
	f	Ldwm;	h	Z_AXIS_AABB
	f	Ldwm;	i	X_AXIS_AABB
c	cov$1	net/minecraft/world/level/block/RodBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	cow	net/minecraft/world/level/block/RootedDirtBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	cox	net/minecraft/world/level/block/RootsBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
c	coy	net/minecraft/world/level/block/RotatedPillarBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcoz;)Lcur;	b	rotatePillar
		p	0		state
		p	1		rotation
	f	Lcvp;	g	AXIS
c	coy$1	net/minecraft/world/level/block/RotatedPillarBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	coz	net/minecraft/world/level/block/Rotation
	m	(Ljava/lang/String;ILjava/lang/String;Lf;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lf;	a	rotation
	m	(II)I	a	rotate
		p	1		rotation
		p	2		fullTurn
	m	(Lalu;)Lcoz;	a	getRandom
		p	0		random
	m	(Lcoz;)Lcoz;	a	getRotated
		p	1		rotation
	m	(Lgy;)Lgy;	a	rotate
		p	1		direction
	m	()[Lcoz;	b	$values
	m	(Lalu;)Ljava/util/List;	b	getShuffled
		p	0		random
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcoz;	a	NONE
	f	Lcoz;	b	CLOCKWISE_90
	f	Lcoz;	c	CLOCKWISE_180
	f	Lcoz;	d	COUNTERCLOCKWISE_90
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	Lf;	g	rotation
	f	[Lcoz;	h	$VALUES
c	coz$1	net/minecraft/world/level/block/Rotation$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cpa	net/minecraft/world/level/block/SandBlock
	m	(ILcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcur;Lcfg;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	dustColor
c	cpb	net/minecraft/world/level/block/SaplingBlock
	m	(Lcty;Lcuq$c;)V	<init>	<init>
		p	1		generator
		p	2		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lafo;Lgt;Lcur;Lalu;)V	a	advanceTree
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcty;	a	treeGrower
	f	Lcvr;	d	STAGE
	f	F	e	AABB_OFFSET
	f	Ldwm;	f	SHAPE
c	cpc	net/minecraft/world/level/block/ScaffoldingBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)I	a	getDistance
		p	0		world
		p	1		pos
	m	(Lcfg;Lgt;I)Z	a	isBottom
		p	1		world
		p	2		pos
		p	3		distance
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;)Ldwm;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	I	a	STABILITY_MAX_DISTANCE
	f	Lcvr;	b	DISTANCE
	f	Lcvi;	c	WATERLOGGED
	f	Lcvi;	d	BOTTOM
	f	I	e	TICK_DELAY
	f	Ldwm;	f	STABLE_SHAPE
	f	Ldwm;	g	UNSTABLE_SHAPE
	f	Ldwm;	h	UNSTABLE_SHAPE_BOTTOM
	f	Ldwm;	i	BELOW_BLOCK
c	cpd	net/minecraft/world/level/block/SculkBehaviour
	m	()B	a	getSculkSpreadDelay
	m	(Lcgb;Lcur;Lgt;Lalu;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Lcgb;Lgt;Lalu;)Z	a	depositCharge
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcgb;Lgt;Lcur;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Lcpi$a;Lcgb;Lgt;Lalu;Lcpi;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	()Z	b	canChangeBlockStateOnSpread
	m	(I)I	g_	updateDecayDelay
		p	1		oldDecay
	f	Lcpd;	q_	DEFAULT
c	cpd$1	net/minecraft/world/level/block/SculkBehaviour$1
	m	(Lcgb;Lgt;Lcur;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Lcpi$a;Lcgb;Lgt;Lalu;Lcpi;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(I)I	g_	updateDecayDelay
		p	1		oldDecay
c	cpe	net/minecraft/world/level/block/SculkBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcgb;Lgt;)Z	a	canPlaceGrowth
		p	0		world
		p	1		pos
	m	(Lcgb;Lgt;Lalu;Z)Lcur;	a	getRandomGrowthState
		p	1		world
		p	2		pos
		p	3		random
		p	4		allowShrieker
	m	(Lcpi$a;Lcgb;Lgt;Lalu;Lcpi;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Lcpi;Lgt;Lgt;I)I	a	getDecayPenalty
		p	0		spreadManager
		p	1		cursorPos
		p	2		catalystPos
		p	3		charge
	m	()Z	b	canChangeBlockStateOnSpread
c	cpf	net/minecraft/world/level/block/SculkCatalystBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lcsl;)Lcza;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Lafo;Lgt;Lcur;Lalu;)V	a	bloom
		p	0		world
		p	1		pos
		p	2		state
		p	3		random
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	f	I	a	PULSE_TICKS
	f	Lcvi;	b	PULSE
	f	Layr;	c	xpRange
c	cpg	net/minecraft/world/level/block/SculkSensorBlock
	m	(Lcuq$c;I)V	<init>	<init>
		p	1		settings
		p	2		range
	m	(Lafo;Lcsl;)Lcza;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Lbaq;Lcga;Lgt;Lcur;I)V	a	activate
		p	0		entity
		p	1		world
		p	2		pos
		p	3		state
		p	4		power
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;)V	a	updateNeighbours
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;)V	a	deactivate
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcga;Lgt;Lcur;Lctk;)V	a	lambda$getTicker$1
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	()I	d	getListenerRange
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Lcur;)Lcvx;	h	getPhase
		p	0		state
	m	(Lcur;)Z	n	canActivate
		p	0		state
	f	I	a	ACTIVE_TICKS
	f	I	b	COOLDOWN_TICKS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	VIBRATION_FREQUENCY_FOR_EVENT
	f	Lcvp;	d	PHASE
	f	Lcvr;	e	POWER
	f	Lcvi;	f	WATERLOGGED
	f	Ldwm;	g	SHAPE
	f	I	h	listenerRange
c	cph	net/minecraft/world/level/block/SculkShriekerBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lafp;Lctl;)V	a	lambda$stepOn$0
		p	2		blockEntity
	m	(Lafo;Lcsl;)Lcza;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Lafo;Lctl;)V	a	lambda$tick$2
		p	1		blockEntity
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcga;Lgt;Lcur;Lctl;)V	a	lambda$getTicker$3
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lafo;Lctl;)V	b	lambda$onRemove$1
		p	1		blockEntity
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvi;	a	SHRIEKING
	f	Lcvi;	b	WATERLOGGED
	f	Lcvi;	c	CAN_SUMMON
	f	Ldwm;	d	COLLIDER
	f	D	e	TOP_Y
c	cpi	net/minecraft/world/level/block/SculkSpreader
	m	(ZLakh;IIII)V	<init>	<init>
		p	1		worldGen
		p	2		replaceableTag
		p	3		extraBlockChance
		p	4		maxDistance
		p	5		spreadChance
		p	6		decayChance
	m	()Lcpi;	a	createLevelSpreader
	m	(Lcgb;Lgt;Lalu;Z)V	a	updateCursors
		p	1		world
		p	2		pos
		p	3		random
		p	4		shouldConvertToBlock
	m	(Lcpi$a;)V	a	addCursor
		p	1		cursor
	m	(Lcpi$a;Lgt;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateCursors$1
		p	1		pos
		p	2		charge
	m	(Lgt;I)V	a	addCursors
		p	1		pos
		p	2		charge
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$save$0
		p	1		cursorsNbt
	m	()Lcpi;	b	createWorldGenSpreader
	m	(Lpj;)V	b	save
		p	1		nbt
	m	()Lakh;	c	replaceableBlocks
	m	()I	d	growthSpawnCost
	m	()I	e	noGrowthRadius
	m	()I	f	chargeDecayRate
	m	()I	g	additionalDecayRate
	m	()Z	h	isWorldGeneration
	m	()Ljava/util/List;	i	getCursors
	m	()V	j	clear
	f	I	a	MAX_GROWTH_RATE_RADIUS
	f	I	b	MAX_CHARGE
	f	F	c	MAX_DECAY_FACTOR
	f	I	d	SHRIEKER_PLACEMENT_RATE
	f	I	e	MAX_CURSORS
	f	Z	f	isWorldGeneration
	f	Lakh;	g	replaceableBlocks
	f	I	h	growthSpawnCost
	f	I	i	noGrowthRadius
	f	I	j	chargeDecayRate
	f	I	k	additionalDecayRate
	f	Ljava/util/List;	l	cursors
	f	Lorg/slf4j/Logger;	m	LOGGER
c	cpi$a	net/minecraft/world/level/block/SculkSpreader$ChargeCursor
	m	(Lgt;I)V	<init>	<init>
		p	1		pos
		p	2		charge
	m	(Lgt;IIILjava/util/Optional;)V	<init>	<init>
		p	1		pos
		p	2		charge
		p	3		decay
		p	4		update
		p	5		faces
	m	()Lgt;	a	getPos
	m	(Lalu;)Ljava/util/List;	a	getRandomizedNonCornerNeighbourOffsets
		p	0		random
	m	(Lcgb;Lgt;Lalu;)Lgt;	a	getValidMovementPos
		p	0		world
		p	1		pos
		p	2		random
	m	(Lcgb;Lgt;Lalu;Lcpi;Z)V	a	update
		p	1		world
		p	2		pos
		p	3		random
		p	4		spreadManager
		p	5		shouldConvertToBlock
	m	(Lcgb;Lgt;Lgt;)Z	a	isMovementUnobstructed
		p	0		world
		p	1		sourcePos
		p	2		targetPos
	m	(Lcgb;Lgt;Lgy;)Z	a	isUnobstructed
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcgb;Lgt;Z)Z	a	shouldUpdate
		p	1		world
		p	2		pos
		p	3		worldGen
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lcpi$a;)V	a	mergeWith
		p	1		cursor
	m	(Lcur;)Lcpd;	a	getBlockBehaviour
		p	0		state
	m	(Lgt;)Z	a	lambda$static$0
		p	0		pos
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;)V	a	lambda$static$1
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$static$2
		p	0		directions
	m	()I	b	getCharge
	m	(Lcpi$a;)Ljava/util/Optional;	b	lambda$static$4
		p	0		cursor
	m	()I	c	getDecayDelay
	m	(Lcpi$a;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		cursor
	m	()Ljava/util/Set;	d	getFacingData
	f	I	a	MAX_CURSOR_DECAY_DELAY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	NON_CORNER_NEIGHBOURS
	f	Lgt;	d	pos
	f	I	e	charge
	f	I	f	updateDelay
	f	I	g	decayDelay
	f	Ljava/util/Set;	h	facings
	f	Lcom/mojang/serialization/Codec;	i	DIRECTION_SET
c	cpj	net/minecraft/world/level/block/SculkVeinBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcgb;Lcur;Lgt;)Z	a	hasSubstrateAccess
		p	0		world
		p	1		state
		p	2		pos
	m	(Lcgb;Lcur;Lgt;Lalu;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Lcgb;Lgt;Lcur;Ljava/util/Collection;)Z	a	regrow
		p	0		world
		p	1		pos
		p	2		state
		p	3		directions
	m	(Lcpi$a;Lcgb;Lgt;Lalu;Lcpi;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Lcpi;Lcgb;Lgt;Lalu;)Z	a	attemptPlaceSculk
		p	1		spreadManager
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcno;	c	getSpreader
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	()Lcno;	d	getSameSpaceSpreader
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	f	Lcvi;	b	WATERLOGGED
	f	Lcno;	c	veinSpreader
	f	Lcno;	d	sameSpaceSpreader
c	cpj$a	net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig
	m	(Lcpj;[Lcno$e;)V	<init>	<init>
		p	2		growTypes
	m	()[Lcno$e;	a	getSpreadTypes
	m	(Lcfg;Lgt;Lgt;Lgy;Lcur;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Lcur;)Z	a	isOtherBlockValidAsSource
		p	1		state
	f	Lcpj;	b	this$0
	f	[Lcno$e;	c	spreadTypes
c	cpk	net/minecraft/world/level/block/SeaPickleBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Lcur;)Z	h	isDead
		p	0		state
	f	I	a	MAX_PICKLES
	f	Lcvr;	b	PICKLES
	f	Lcvi;	c	WATERLOGGED
	f	Ldwm;	d	ONE_AABB
	f	Ldwm;	e	TWO_AABB
	f	Ldwm;	f	THREE_AABB
	f	Ldwm;	g	FOUR_AABB
c	cpl	net/minecraft/world/level/block/SeagrassBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
c	cpm	net/minecraft/world/level/block/ShulkerBoxBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lbyt;)Lciw;	a	getBlockByColor
		p	0		dyeColor
	m	(Lcaa;Lcfg;Ljava/util/List;Lcbo;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcaa;Lctm;)V	a	lambda$getCloneItemStack$1
		p	1		blockEntity
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lciw;)Lbyt;	a	getColorFromBlock
		p	0		block
	m	(Lctm;Ldrg;Ljava/util/function/Consumer;)V	a	lambda$getDrops$0
		p	1		context
		p	2		consumer
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lctm;)Z	a	canOpen
		p	0		state
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Ldrg$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lbyt;	b	getColor
	m	(Lbyt;)Lcaa;	b	getColoredItemStack
		p	0		color
	m	(Lbzw;)Lbyt;	b	getColorFromItem
		p	0		item
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Lcvp;	a	FACING
	f	Laaj;	b	CONTENTS
	f	Lbyt;	c	color
c	cpm$1	net/minecraft/world/level/block/ShulkerBoxBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	cpn	net/minecraft/world/level/block/SignBlock
	m	(Lcuq$c;Lcwd;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	()Z	Z_	isPossibleToRespawnInThis
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	()Lcwd;	d	type
	f	Lcvi;	a	WATERLOGGED
	f	F	b	AABB_OFFSET
	f	Ldwm;	c	SHAPE
	f	Lcwd;	d	type
c	cpo	net/minecraft/world/level/block/SimpleWaterloggedBlock
	m	()Ljava/util/Optional;	Y_	getPickupSound
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcgb;Lgt;Lcur;)Lcaa;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
c	cpp	net/minecraft/world/level/block/SkullBlock
	m	(Lcpp$a;Lcuq$c;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	MAX
	f	Lcvr;	b	ROTATION
	f	Ldwm;	c	SHAPE
	f	I	d	ROTATIONS
c	cpp$a	net/minecraft/world/level/block/SkullBlock$Type
c	cpp$b	net/minecraft/world/level/block/SkullBlock$Types
	m	()[Lcpp$b;	a	$values
	f	Lcpp$b;	a	SKELETON
	f	Lcpp$b;	b	WITHER_SKELETON
	f	Lcpp$b;	c	PLAYER
	f	Lcpp$b;	d	ZOMBIE
	f	Lcpp$b;	e	CREEPER
	f	Lcpp$b;	f	DRAGON
	f	[Lcpp$b;	g	$VALUES
c	cpq	net/minecraft/world/level/block/SlabBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvp;	a	TYPE
	f	Lcvi;	b	WATERLOGGED
	f	Ldwm;	c	BOTTOM_AABB
	f	Ldwm;	d	TOP_AABB
c	cpq$1	net/minecraft/world/level/block/SlabBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cpr	net/minecraft/world/level/block/SlimeBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbaq;)V	a	bounceUp
		p	1		entity
	m	(Lcfg;Lbaq;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
c	cps	net/minecraft/world/level/block/SmallDripleafBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()F	aa_	getMaxVerticalOffset
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcvl;	b	FACING
	f	F	c	AABB_OFFSET
	f	Ldwm;	d	SHAPE
	f	Lcvi;	e	WATERLOGGED
c	cpt	net/minecraft/world/level/block/SmithingTableBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lrm;	a	CONTAINER_TITLE
c	cpu	net/minecraft/world/level/block/SmokerBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcga;Lgt;Lbtf;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
c	cpv	net/minecraft/world/level/block/SnowLayerBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Ldwm;	f	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	I	a	MAX_HEIGHT
	f	Lcvr;	b	LAYERS
	f	[Ldwm;	c	SHAPE_BY_LAYER
	f	I	d	HEIGHT_IMPASSABLE
c	cpv$1	net/minecraft/world/level/block/SnowLayerBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cpw	net/minecraft/world/level/block/SnowyDirtBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Z	h	isSnowySetting
		p	0		state
	f	Lcvi;	a	SNOWY
c	cpx	net/minecraft/world/level/block/SoulFireBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;)Z	f	canBurn
		p	1		state
	m	(Lcur;)Z	h	canSurviveOnBlock
		p	0		state
c	cpy	net/minecraft/world/level/block/SoulSandBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)Ldwm;	f	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	f	Ldwm;	a	SHAPE
	f	I	b	BUBBLE_COLUMN_CHECK_DELAY
c	cpz	net/minecraft/world/level/block/SoundType
	m	(FFLajd;Lajd;Lajd;Lajd;Lajd;)V	<init>	<init>
		p	1		volume
		p	2		pitch
		p	3		breakSound
		p	4		stepSound
		p	5		placeSound
		p	6		hitSound
		p	7		fallSound
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Lajd;	c	getBreakSound
	m	()Lajd;	d	getStepSound
	m	()Lajd;	e	getPlaceSound
	m	()Lajd;	f	getHitSound
	m	()Lajd;	g	getFallSound
	f	Lcpz;	A	STEM
	f	Lcpz;	B	NYLIUM
	f	Lcpz;	C	FUNGUS
	f	Lcpz;	D	ROOTS
	f	Lcpz;	E	SHROOMLIGHT
	f	Lcpz;	F	WEEPING_VINES
	f	Lcpz;	G	TWISTING_VINES
	f	Lcpz;	H	SOUL_SAND
	f	Lcpz;	I	SOUL_SOIL
	f	Lcpz;	J	BASALT
	f	Lcpz;	K	WART_BLOCK
	f	Lcpz;	L	NETHERRACK
	f	Lcpz;	M	NETHER_BRICKS
	f	Lcpz;	N	NETHER_SPROUTS
	f	Lcpz;	O	NETHER_ORE
	f	Lcpz;	P	BONE_BLOCK
	f	Lcpz;	Q	NETHERITE_BLOCK
	f	Lcpz;	R	ANCIENT_DEBRIS
	f	Lcpz;	S	LODESTONE
	f	Lcpz;	T	CHAIN
	f	Lcpz;	U	NETHER_GOLD_ORE
	f	Lcpz;	V	GILDED_BLACKSTONE
	f	Lcpz;	W	CANDLE
	f	Lcpz;	X	AMETHYST
	f	Lcpz;	Y	AMETHYST_CLUSTER
	f	Lcpz;	Z	SMALL_AMETHYST_BUD
	f	Lcpz;	aA	DEEPSLATE_TILES
	f	Lcpz;	aB	POLISHED_DEEPSLATE
	f	Lcpz;	aC	FROGLIGHT
	f	Lcpz;	aD	FROGSPAWN
	f	Lcpz;	aE	MANGROVE_ROOTS
	f	Lcpz;	aF	MUDDY_MANGROVE_ROOTS
	f	Lcpz;	aG	MUD
	f	Lcpz;	aH	MUD_BRICKS
	f	Lcpz;	aI	PACKED_MUD
	f	F	aJ	volume
	f	F	aK	pitch
	f	Lajd;	aL	breakSound
	f	Lcpz;	a	WOOD
	f	Lajd;	aM	stepSound
	f	Lajd;	aN	placeSound
	f	Lajd;	aO	hitSound
	f	Lajd;	aP	fallSound
	f	Lcpz;	aa	MEDIUM_AMETHYST_BUD
	f	Lcpz;	ab	LARGE_AMETHYST_BUD
	f	Lcpz;	ac	TUFF
	f	Lcpz;	ad	CALCITE
	f	Lcpz;	ae	DRIPSTONE_BLOCK
	f	Lcpz;	af	POINTED_DRIPSTONE
	f	Lcpz;	ag	COPPER
	f	Lcpz;	ah	CAVE_VINES
	f	Lcpz;	ai	SPORE_BLOSSOM
	f	Lcpz;	aj	AZALEA
	f	Lcpz;	ak	FLOWERING_AZALEA
	f	Lcpz;	al	MOSS_CARPET
	f	Lcpz;	am	MOSS
	f	Lcpz;	an	BIG_DRIPLEAF
	f	Lcpz;	ao	SMALL_DRIPLEAF
	f	Lcpz;	ap	ROOTED_DIRT
	f	Lcpz;	aq	HANGING_ROOTS
	f	Lcpz;	ar	AZALEA_LEAVES
	f	Lcpz;	as	SCULK_SENSOR
	f	Lcpz;	at	SCULK_CATALYST
	f	Lcpz;	au	SCULK
	f	Lcpz;	av	SCULK_VEIN
	f	Lcpz;	aw	SCULK_SHRIEKER
	f	Lcpz;	ax	GLOW_LICHEN
	f	Lcpz;	ay	DEEPSLATE
	f	Lcpz;	az	DEEPSLATE_BRICKS
	f	Lcpz;	b	GRAVEL
	f	Lcpz;	c	GRASS
	f	Lcpz;	d	LILY_PAD
	f	Lcpz;	e	STONE
	f	Lcpz;	f	METAL
	f	Lcpz;	g	GLASS
	f	Lcpz;	h	WOOL
	f	Lcpz;	i	SAND
	f	Lcpz;	j	SNOW
	f	Lcpz;	k	POWDER_SNOW
	f	Lcpz;	l	LADDER
	f	Lcpz;	m	ANVIL
	f	Lcpz;	n	SLIME_BLOCK
	f	Lcpz;	o	HONEY_BLOCK
	f	Lcpz;	p	WET_GRASS
	f	Lcpz;	q	CORAL_BLOCK
	f	Lcpz;	r	BAMBOO
	f	Lcpz;	s	BAMBOO_SAPLING
	f	Lcpz;	t	SCAFFOLDING
	f	Lcpz;	u	SWEET_BERRY_BUSH
	f	Lcpz;	v	CROP
	f	Lcpz;	w	HARD_CROP
	f	Lcpz;	x	VINE
	f	Lcpz;	y	NETHER_WART
	f	Lcpz;	z	LANTERN
c	cqa	net/minecraft/world/level/block/SpawnerBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
c	cqb	net/minecraft/world/level/block/SpongeBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;)V	a	tryAbsorbWater
		p	1		world
		p	2		pos
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcga;Lgt;)Z	b	removeWaterBreadthFirstSearch
		p	1		world
		p	2		pos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	MAX_DEPTH
	f	I	b	MAX_COUNT
c	cqc	net/minecraft/world/level/block/SporeBlossomBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Ldwm;	a	SHAPE
	f	I	b	ADD_PARTICLE_ATTEMPTS
	f	I	c	PARTICLE_XZ_RADIUS
	f	I	d	PARTICLE_Y_MAX
c	cqd	net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	b	canBeGrass
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcgd;Lgt;)Z	c	canPropagate
		p	0		state
		p	1		world
		p	2		pos
c	cqe	net/minecraft/world/level/block/StainedGlassBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lbyt;	a	getColor
	f	Lbyt;	a	color
c	cqf	net/minecraft/world/level/block/StainedGlassPaneBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lbyt;	a	getColor
	f	Lbyt;	i	color
c	cqg	net/minecraft/world/level/block/StairBlock
	m	(Lcur;Lcuq$c;)V	<init>	<init>
		p	1		baseBlockState
		p	2		settings
	m	(ILdwm;Ldwm;Ldwm;Ldwm;Ldwm;)Ldwm;	a	makeStairShape
		p	0		i
		p	1		base
		p	2		northWest
		p	3		northEast
		p	4		southWest
		p	5		southEast
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcfs;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcgb;Lgt;Lcur;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbtf;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldwm;Ldwm;Ldwm;Ldwm;Ldwm;)[Ldwm;	a	makeShapes
		p	0		base
		p	1		northWest
		p	2		northEast
		p	3		southWest
		p	4		southEast
	m	(Ldwm;Ldwm;Ldwm;Ldwm;Ldwm;I)Ldwm;	a	lambda$makeShapes$0
		p	5		i
	m	(I)[Ldwm;	b	lambda$makeShapes$1
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;Lcfg;Lgt;Lgy;)Z	c	canTakeShape
		p	0		state
		p	1		world
		p	2		pos
		p	3		dir
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	()F	e	getExplosionResistance
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Lcur;)Z	h	isStairs
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Lcvz;	i	getStairsShape
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;)I	n	getShapeIndex
		p	1		state
	f	[Ldwm;	E	TOP_SHAPES
	f	[Ldwm;	F	BOTTOM_SHAPES
	f	[I	G	SHAPE_BY_STATE
	f	Lciw;	H	base
	f	Lcur;	I	baseState
	f	Lcvl;	a	FACING
	f	Lcvp;	b	HALF
	f	Lcvp;	c	SHAPE
	f	Lcvi;	d	WATERLOGGED
	f	Ldwm;	e	TOP_AABB
	f	Ldwm;	f	BOTTOM_AABB
	f	Ldwm;	g	OCTET_NNN
	f	Ldwm;	h	OCTET_NNP
	f	Ldwm;	i	OCTET_NPN
	f	Ldwm;	j	OCTET_NPP
	f	Ldwm;	k	OCTET_PNN
	f	Ldwm;	l	OCTET_PNP
	f	Ldwm;	m	OCTET_PPN
	f	Ldwm;	n	OCTET_PPP
c	cqg$1	net/minecraft/world/level/block/StairBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cqh	net/minecraft/world/level/block/StandingSignBlock
	m	(Lcuq$c;Lcwd;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcvr;	d	ROTATION
c	cqi	net/minecraft/world/level/block/StemBlock
	m	(Lcqj;Ljava/util/function/Supplier;Lcuq$c;)V	<init>	<init>
		p	1		gourdBlock
		p	2		pickBlockItem
		p	3		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcqj;	b	getFruit
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	I	a	MAX_AGE
	f	Lcvr;	b	AGE
	f	F	c	AABB_OFFSET
	f	[Ldwm;	d	SHAPE_BY_AGE
	f	Lcqj;	e	fruit
	f	Ljava/util/function/Supplier;	f	seedSupplier
c	cqj	net/minecraft/world/level/block/StemGrownBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Lcqi;	b	getStem
	m	()Lchy;	c	getAttachedStem
c	cqk	net/minecraft/world/level/block/StoneButtonBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Z)Lajd;	a	getSound
		p	1		powered
c	cql	net/minecraft/world/level/block/StonecutterBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;ILbte;Lbtf;)Lbvp;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		playerInventory
		p	4		player
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvl;	a	FACING
	f	Ldwm;	b	SHAPE
	f	Lrm;	c	CONTAINER_TITLE
c	cqm	net/minecraft/world/level/block/StructureBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lctr;)V	a	trigger
		p	1		world
		p	2		blockEntity
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	f	Lcvp;	a	MODE
c	cqm$1	net/minecraft/world/level/block/StructureBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
c	cqn	net/minecraft/world/level/block/StructureVoidBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	f	D	a	SIZE
	f	Ldwm;	b	SHAPE
c	cqo	net/minecraft/world/level/block/SugarCaneBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcvr;	a	AGE
	f	F	b	AABB_OFFSET
	f	Ldwm;	c	SHAPE
c	cqp	net/minecraft/world/level/block/SupportType
	m	()[Lcqp;	a	$values
	m	(Lcur;Lcfg;Lgt;Lgy;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Lcqp;	a	FULL
	f	Lcqp;	b	CENTER
	f	Lcqp;	c	RIGID
	f	[Lcqp;	d	$VALUES
c	cqp$1	net/minecraft/world/level/block/SupportType$1
	m	(Lcur;Lcfg;Lgt;Lgy;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
c	cqp$2	net/minecraft/world/level/block/SupportType$2
	m	(Lcur;Lcfg;Lgt;Lgy;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	CENTER_SUPPORT_WIDTH
	f	Ldwm;	e	CENTER_SUPPORT_SHAPE
c	cqp$3	net/minecraft/world/level/block/SupportType$3
	m	(Lcur;Lcfg;Lgt;Lgy;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	RIGID_SUPPORT_WIDTH
	f	Ldwm;	e	RIGID_SUPPORT_SHAPE
c	cqq	net/minecraft/world/level/block/SweetBerryBushBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	MAX_AGE
	f	Lcvr;	b	AGE
	f	F	c	HURT_SPEED_THRESHOLD
	f	Ldwm;	d	SAPLING_SHAPE
	f	Ldwm;	e	MID_GROWTH_SHAPE
c	cqr	net/minecraft/world/level/block/TallFlowerBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
c	cqs	net/minecraft/world/level/block/TallGrassBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lafo;Lalu;Lgt;Lcur;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcfg;Lgt;Lcur;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcga;Lalu;Lgt;Lcur;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	AABB_OFFSET
	f	Ldwm;	b	SHAPE
c	cqt	net/minecraft/world/level/block/TallSeagrassBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcgb;Lgt;Lcur;Ldoy;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcvp;	b	HALF
	f	F	c	AABB_OFFSET
	f	Ldwm;	d	SHAPE
c	cqu	net/minecraft/world/level/block/TargetBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcgb;Lcur;ILgt;I)V	a	setOutputPower
		p	0		world
		p	1		state
		p	2		power
		p	3		pos
		p	4		delay
	m	(Lcgb;Lcur;Ldvp;Lbaq;)I	a	updateRedstoneOutput
		p	0		world
		p	1		state
		p	2		hitResult
		p	3		entity
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldvp;Ldvt;)I	a	getRedstoneStrength
		p	0		hitResult
		p	1		pos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Lcvr;	a	OUTPUT_POWER
	f	I	b	ACTIVATION_TICKS_ARROWS
	f	I	c	ACTIVATION_TICKS_OTHER
c	cqv	net/minecraft/world/level/block/TintedGlassBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
c	cqw	net/minecraft/world/level/block/TntBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lazl;Lbtf;)V	a	lambda$use$0
		p	1		player
	m	(Lcfs;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Lgt;)V	a	explode
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lbbf;)V	a	explode
		p	0		world
		p	1		pos
		p	2		igniter
	m	(Lcga;Lgt;Lcfs;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcvi;	a	UNSTABLE
c	cqx	net/minecraft/world/level/block/TorchBlock
	m	(Lcuq$c;Lim;)V	<init>	<init>
		p	1		settings
		p	2		particle
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	I	g	AABB_STANDING_OFFSET
	f	Ldwm;	h	AABB
	f	Lim;	i	flameParticle
c	cqy	net/minecraft/world/level/block/TrapDoorBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lbtf;Lcga;Lgt;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		open
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Lcvi;	a	OPEN
	f	Lcvp;	b	HALF
	f	Lcvi;	c	POWERED
	f	Lcvi;	d	WATERLOGGED
	f	I	e	AABB_THICKNESS
	f	Ldwm;	f	EAST_OPEN_AABB
	f	Ldwm;	g	WEST_OPEN_AABB
	f	Ldwm;	h	SOUTH_OPEN_AABB
	f	Ldwm;	i	NORTH_OPEN_AABB
	f	Ldwm;	j	BOTTOM_AABB
	f	Ldwm;	k	TOP_AABB
c	cqy$1	net/minecraft/world/level/block/TrapDoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cqz	net/minecraft/world/level/block/TrappedChestBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	()Lajl;	c	getOpenChestStat
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	()Lcsn;	q	lambda$new$0
c	cra	net/minecraft/world/level/block/TripWireBlock
	m	(Lcrb;Lcuq$c;)V	<init>	<init>
		p	1		hookBlock
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;)V	a	checkPressed
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lcur;)V	a	updateSource
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;)Z	a	shouldConnectTo
		p	1		state
		p	2		facing
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcvi;	a	POWERED
	f	Lcvi;	b	ATTACHED
	f	Lcvi;	c	DISARMED
	f	Lcvi;	d	NORTH
	f	Lcvi;	e	EAST
	f	Lcvi;	f	SOUTH
	f	Lcvi;	g	WEST
	f	Ldwm;	h	AABB
	f	Ldwm;	i	NOT_ATTACHED_AABB
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	I	k	RECHECK_PERIOD
	f	Lcrb;	l	hook
c	cra$1	net/minecraft/world/level/block/TripWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	crb	net/minecraft/world/level/block/TripWireHookBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lcur;ZZILcur;)V	a	calculateState
		p	1		world
		p	2		pos
		p	3		state
		p	4		beingRemoved
	m	(Lcga;Lgt;Lgy;)V	a	notifyNeighbors
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcga;Lgt;ZZZZ)V	a	emitState
		p	1		world
		p	2		pos
		p	3		attached
		p	4		on
		p	5		detached
		p	6		off
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	f	Lcvl;	a	FACING
	f	Lcvi;	b	POWERED
	f	Lcvi;	c	ATTACHED
	f	I	d	WIRE_DIST_MIN
	f	I	e	WIRE_DIST_MAX
	f	I	f	AABB_OFFSET
	f	Ldwm;	g	NORTH_AABB
	f	Ldwm;	h	SOUTH_AABB
	f	Ldwm;	i	WEST_AABB
	f	Ldwm;	j	EAST_AABB
	f	I	k	RECHECK_PERIOD
c	crb$1	net/minecraft/world/level/block/TripWireHookBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	crc	net/minecraft/world/level/block/TurtleEggBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)Z	a	onSand
		p	0		world
		p	1		pos
	m	(Lcga;)Z	a	shouldUpdateHatchLevel
		p	1		world
	m	(Lcga;Lbaq;)Z	a	canDestroyEgg
		p	1		world
		p	2		entity
	m	(Lcga;Lbtf;Lgt;Lcur;Lcsl;Lcaa;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		stack
	m	(Lcga;Lcur;Lgt;Lbaq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcga;Lcur;Lgt;Lbaq;I)V	a	destroyEgg
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		inverseChance
	m	(Lcga;Lgt;Lcur;)V	a	decreaseEggs
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbaq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcfg;Lgt;)Z	b	isSand
		p	0		world
		p	1		pos
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	MAX_HATCH_LEVEL
	f	I	b	MIN_EGGS
	f	I	c	MAX_EGGS
	f	Lcvr;	d	HATCH
	f	Lcvr;	e	EGGS
	f	Ldwm;	f	ONE_EGG_AABB
	f	Ldwm;	g	MULTIPLE_EGGS_AABB
c	crd	net/minecraft/world/level/block/TwistingVinesBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lalu;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	()Lciw;	b	getBodyBlock
	m	(Lcur;)Z	g	canGrowInto
		p	1		state
	f	Ldwm;	f	SHAPE
c	cre	net/minecraft/world/level/block/TwistingVinesPlantBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Lcmc;	c	getHeadBlock
	f	Ldwm;	d	SHAPE
c	crf	net/minecraft/world/level/block/VineBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcfg;Lgt;)Z	a	canSpread
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Lgy;)Z	a	isAcceptableNeighbour
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lcur;Lalu;)Lcur;	a	copyRandomFaces
		p	1		above
		p	2		state
		p	3		random
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgy;)Lcvi;	a	getPropertyForFace
		p	0		direction
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Lcfg;Lgt;Lgy;)Z	b	canSupportAtFace
		p	1		world
		p	2		pos
		p	3		side
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Ldwm;	h	calculateShape
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Lcur;	i	getUpdatedState
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	n	hasFaces
		p	1		state
	m	(Lcur;)I	o	countFaces
		p	1		state
	m	(Lcur;)Z	p	hasHorizontalConnection
		p	1		state
	f	Lcvi;	a	UP
	f	Lcvi;	b	NORTH
	f	Lcvi;	c	EAST
	f	Lcvi;	d	SOUTH
	f	Lcvi;	e	WEST
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	F	g	AABB_OFFSET
	f	Ldwm;	h	UP_AABB
	f	Ldwm;	i	WEST_AABB
	f	Ldwm;	j	EAST_AABB
	f	Ldwm;	k	NORTH_AABB
	f	Ldwm;	l	SOUTH_AABB
	f	Ljava/util/Map;	m	shapesCache
c	crf$1	net/minecraft/world/level/block/VineBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	crg	net/minecraft/world/level/block/WallBannerBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	f	Lcvl;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	crh	net/minecraft/world/level/block/WallBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(FFFFFF)Ljava/util/Map;	a	makeShapes
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcgd;Lcur;Lgt;Lcur;)Lcur;	a	topUpdate
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
	m	(Lcgd;Lcur;Lgt;Lcur;ZZZZ)Lcur;	a	updateShape
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
		p	5		north
		p	6		east
		p	7		south
		p	8		west
	m	(Lcgd;Lgt;Lcur;Lgt;Lcur;Lgy;)Lcur;	a	sideUpdate
		p	1		world
		p	2		pos
		p	3		state
		p	4		neighborPos
		p	5		neighborState
		p	6		direction
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lcur;Ldwm;)Z	a	shouldRaisePost
		p	1		state
		p	2		aboveState
		p	3		aboveShape
	m	(Lcur;Lcvu;)Z	a	isConnected
		p	0		state
		p	1		property
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;ZLgy;)Z	a	connectsTo
		p	1		state
		p	2		faceFullSquare
		p	3		side
	m	(Lcur;ZZZZLdwm;)Lcur;	a	updateSides
		p	1		state
		p	2		north
		p	3		east
		p	4		south
		p	5		west
		p	6		aboveShape
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldwm;Lcwc;Ldwm;Ldwm;)Ldwm;	a	applyWallShape
		p	0		base
		p	1		wallShape
		p	2		tall
		p	3		low
	m	(Ldwm;Ldwm;)Z	a	isCovered
		p	0		aboveShape
		p	1		tallShape
	m	(ZLdwm;Ldwm;)Lcwc;	a	makeWallState
		p	1		connected
		p	2		aboveShape
		p	3		tallShape
	m	(Lcur;Lcfg;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	f	Ldwm;	E	POST_TEST
	f	Ldwm;	F	NORTH_TEST
	f	Ldwm;	G	SOUTH_TEST
	f	Ldwm;	H	WEST_TEST
	f	Ldwm;	I	EAST_TEST
	f	Lcvi;	a	UP
	f	Lcvp;	b	EAST_WALL
	f	Lcvp;	c	NORTH_WALL
	f	Lcvp;	d	SOUTH_WALL
	f	Lcvp;	e	WEST_WALL
	f	Lcvi;	f	WATERLOGGED
	f	Ljava/util/Map;	g	shapeByIndex
	f	Ljava/util/Map;	h	collisionShapeByIndex
	f	I	i	WALL_WIDTH
	f	I	j	WALL_HEIGHT
	f	I	k	POST_WIDTH
	f	I	l	POST_COVER_WIDTH
	f	I	m	WALL_COVER_START
	f	I	n	WALL_COVER_END
c	crh$1	net/minecraft/world/level/block/WallBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cri	net/minecraft/world/level/block/WallSignBlock
	m	(Lcuq$c;Lcwd;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	f	Lcvl;	d	FACING
	f	F	e	AABB_THICKNESS
	f	F	f	AABB_BOTTOM
	f	F	g	AABB_TOP
	f	Ljava/util/Map;	h	AABBS
c	crj	net/minecraft/world/level/block/WallSkullBlock
	m	(Lcpp$a;Lcuq$c;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	f	Lcvl;	a	FACING
	f	Ljava/util/Map;	b	AABBS
c	crk	net/minecraft/world/level/block/WallTorchBlock
	m	(Lcuq$c;Lim;)V	<init>	<init>
		p	1		settings
		p	2		particle
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	m	(Lcur;)Ldwm;	h	getShape
		p	0		state
	f	Lcvl;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
c	crl	net/minecraft/world/level/block/WaterlilyBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldwm;	a	AABB
c	crm	net/minecraft/world/level/block/WeatheringCopper
	m	()F	a	getChanceModifier
	m	(Lciw;)Ljava/util/Optional;	a	getPrevious
		p	0		block
	m	(Lcur;)Ljava/util/Optional;	a	getNext
		p	1		state
	m	(Lcur;Lciw;)Lcur;	a	lambda$getNext$3
		p	1		block
	m	(Lciw;)Lciw;	b	getFirst
		p	0		block
	m	(Lcur;)Ljava/util/Optional;	b	getPrevious
		p	0		state
	m	(Lcur;Lciw;)Lcur;	b	lambda$getPrevious$2
		p	1		block
	m	()Lcom/google/common/collect/BiMap;	c	lambda$static$1
	m	(Lciw;)Ljava/util/Optional;	c	getNext
		p	0		block
	m	(Lcur;)Lcur;	c	getFirst
		p	0		state
	m	()Lcom/google/common/collect/BiMap;	d	lambda$static$0
	f	Ljava/util/function/Supplier;	r_	NEXT_BY_BLOCK
	f	Ljava/util/function/Supplier;	s_	PREVIOUS_BY_BLOCK
c	crm$a	net/minecraft/world/level/block/WeatheringCopper$WeatherState
	m	()[Lcrm$a;	a	$values
	f	Lcrm$a;	a	UNAFFECTED
	f	Lcrm$a;	b	EXPOSED
	f	Lcrm$a;	c	WEATHERED
	f	Lcrm$a;	d	OXIDIZED
	f	[Lcrm$a;	e	$VALUES
c	crn	net/minecraft/world/level/block/WeatheringCopperFullBlock
	m	(Lcrm$a;Lcuq$c;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Lcrm$a;	q	getAge
	f	Lcrm$a;	d	weatherState
c	cro	net/minecraft/world/level/block/WeatheringCopperSlabBlock
	m	(Lcrm$a;Lcuq$c;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Lcrm$a;	q	getAge
	f	Lcrm$a;	e	weatherState
c	crp	net/minecraft/world/level/block/WeatheringCopperStairBlock
	m	(Lcrm$a;Lcur;Lcuq$c;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		baseBlockState
		p	3		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Lcrm$a;	q	getAge
	f	Lcrm$a;	G	weatherState
c	crq	net/minecraft/world/level/block/WebBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
c	crr	net/minecraft/world/level/block/WeepingVinesBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lalu;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	()Lciw;	b	getBodyBlock
	m	(Lcur;)Z	g	canGrowInto
		p	1		state
	f	Ldwm;	f	SHAPE
c	crs	net/minecraft/world/level/block/WeepingVinesPlantBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()Lcmc;	c	getHeadBlock
	f	Ldwm;	d	SHAPE
c	crt	net/minecraft/world/level/block/WeightedPressurePlateBlock
	m	(ILcuq$c;)V	<init>	<init>
		p	1		weight
		p	2		settings
	m	(Lcgb;Lgt;)V	a	playOnSound
		p	1		world
		p	2		pos
	m	(Lcur;I)Lcur;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()I	b	getPressedTime
	m	(Lcga;Lgt;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;)V	b	playOffSound
		p	1		world
		p	2		pos
	m	(Lcur;)I	g	getSignalForState
		p	1		state
	f	Lcvr;	d	POWER
	f	I	e	maxWeight
c	cru	net/minecraft/world/level/block/WetSpongeBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
c	crv	net/minecraft/world/level/block/WitherRoseBlock
	m	(Lbah;Lcuq$c;)V	<init>	<init>
		p	1		effect
		p	2		settings
	m	(Lcur;Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcfg;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
c	crw	net/minecraft/world/level/block/WitherSkullBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;Lcto;)V	a	checkSpawn
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcuv;)Z	a	lambda$getOrCreateWitherBase$1
		p	0		pos
	m	(Lcga;Lgt;Lcaa;)Z	b	canSpawnMob
		p	0		world
		p	1		pos
		p	2		stack
	m	(Lcuv;)Z	b	lambda$getOrCreateWitherFull$0
		p	0		pos
	m	()Lcuw;	q	getOrCreateWitherFull
	m	()Lcuw;	u	getOrCreateWitherBase
	f	Lcuw;	d	witherPatternFull
	f	Lcuw;	e	witherPatternBase
c	crx	net/minecraft/world/level/block/WitherWallSkullBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
c	cry	net/minecraft/world/level/block/WoodButtonBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Z)Lajd;	a	getSound
		p	1		powered
c	crz	net/minecraft/world/level/block/WoolCarpetBlock
	m	(Lbyt;Lcuq$c;)V	<init>	<init>
		p	1		dyeColor
		p	2		settings
	m	()Lbyt;	b	getColor
	f	Lbyt;	b	color
c	csa	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	m	(Lcsn;Lgt;Lcur;Lccv;)V	<init>	<init>
		p	1		blockEntityType
		p	2		pos
		p	3		state
		p	4		recipeType
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcaa;Lgy;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lafo;Ldvt;)Ljava/util/List;	a	getRecipesToAwardAndPopExperience
		p	1		world
		p	2		pos
	m	(Lafo;Ldvt;IF)V	a	createExperience
		p	0		world
		p	1		pos
		p	2		multiplier
		p	3		experience
	m	(Lafp;)V	a	awardUsedRecipesAndPopExperience
		p	1		player
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lbtj;)V	a	fillStackedContents
		p	1		finder
	m	(Lcaa;)I	a	getBurnDuration
		p	1		fuel
	m	(Lccs;)V	a	setRecipeUsed
		p	1		recipe
	m	(Lccs;Lhi;I)Z	a	canBurn
		p	0		recipe
		p	1		slots
		p	2		count
	m	(Lcga;Lcsa;)I	a	getTotalCookTime
		p	0		world
		p	1		furnace
	m	(Lcga;Lgt;Lcur;Lcsa;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lgy;)[I	a	getSlotsForFace
		p	1		side
	m	(Ljava/util/List;Lafo;Ldvt;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lccs;)V	a	lambda$getRecipesToAwardAndPopExperience$1
		p	4		recipe
	m	(Ljava/util/Map;Lakh;I)V	a	add
		p	0		fuelTimes
		p	1		tag
		p	2		fuelTime
	m	(Ljava/util/Map;Lcfz;I)V	a	add
		p	0		fuelTimes
		p	1		item
		p	2		fuelTime
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;Laaj;Ljava/lang/Integer;)V	a	lambda$saveAdditional$0
		p	1		identifier
		p	2		count
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcaa;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcaa;Lgy;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lbtf;)V	b	awardUsedRecipes
		p	1		player
	m	(Lbzw;)Z	b	isNeverAFurnaceFuel
		p	0		item
	m	(Lcaa;)Z	b	isFuel
		p	0		stack
	m	(Lccs;Lhi;I)Z	b	burn
		p	0		recipe
		p	1		slots
		p	2		count
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isEmpty
	m	()Lccs;	d	getRecipeUsed
	m	()Ljava/util/Map;	f	getFuel
	m	()Z	i	isLit
	f	I	b	SLOT_INPUT
	f	I	c	SLOT_FUEL
	f	I	d	SLOT_RESULT
	f	I	e	DATA_LIT_TIME
	f	I	f	DATA_LIT_DURATION
	f	I	g	DATA_COOKING_PROGRESS
	f	I	h	DATA_COOKING_TOTAL_TIME
	f	I	i	NUM_DATA_VALUES
	f	I	j	BURN_TIME_STANDARD
	f	I	k	BURN_COOL_SPEED
	f	Lhi;	l	items
	f	Lbvz;	m	dataAccess
	f	[I	q	SLOTS_FOR_UP
	f	[I	r	SLOTS_FOR_DOWN
	f	[I	s	SLOTS_FOR_SIDES
	f	I	t	litTime
	f	I	u	litDuration
	f	I	v	cookingProgress
	f	I	w	cookingTotalTime
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	x	recipesUsed
	f	Lcct$a;	y	quickCheck
c	csa$1	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lcsa;	a	this$0
c	csb	net/minecraft/world/level/block/entity/BannerBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgt;Lcur;Lbyt;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		baseColor
	m	()Lrm;	X	getName
	m	()Lrm;	Z	getCustomName
	m	()Lsz;	a	getUpdatePacket
	m	(Lbyt;Lpp;)Ljava/util/List;	a	createPatterns
		p	0		baseColor
		p	1		patternListNbt
	m	(Lcaa;)Lpp;	a	getItemPatterns
		p	0		stack
	m	(Lcaa;Lbyt;)V	a	fromItem
		p	1		stack
		p	2		baseColor
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lrm;)V	a	setCustomName
		p	1		customName
	m	()Lpj;	ab_	getUpdateTag
	m	(Lcaa;)V	b	fromItem
		p	1		stack
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Ljava/util/List;	c	getPatterns
	m	(Lcaa;)I	c	getPatternCount
		p	0		stack
	m	(Lcaa;)V	d	removeLastPattern
		p	0		stack
	m	()Lcaa;	f	getItem
	m	()Lbyt;	g	getBaseColor
	m	()Lso;	h	getUpdatePacket
	f	I	a	MAX_PATTERNS
	f	Ljava/lang/String;	b	TAG_PATTERNS
	f	Ljava/lang/String;	c	TAG_PATTERN
	f	Ljava/lang/String;	d	TAG_COLOR
	f	Lrm;	e	name
	f	Lbyt;	f	baseColor
	f	Lpp;	g	itemPatterns
	f	Ljava/util/List;	h	patterns
c	csc	net/minecraft/world/level/block/entity/BannerPattern
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getHashname
	m	(Laai;Z)Laaj;	a	location
		p	0		pattern
		p	1		banner
	m	(Ljava/lang/String;)Lhc;	a	byHash
		p	0		id
	m	(Ljava/lang/String;Lhc$c;)Z	a	lambda$byHash$0
		p	1		pattern
	f	Ljava/lang/String;	a	hashname
c	csc$a	net/minecraft/world/level/block/entity/BannerPattern$Builder
	m	()Lpp;	a	toListTag
	m	(Laai;Lbyt;)Lcsc$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	(Lcom/mojang/datafixers/util/Pair;)Lcsc$a;	a	addPattern
		p	1		pattern
	m	(Lhc;Lbyt;)Lcsc$a;	a	addPattern
		p	1		pattern
		p	2		color
	f	Ljava/util/List;	a	patterns
c	csd	net/minecraft/world/level/block/entity/BannerPatterns
	m	(Lhm;)Lcsc;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laai;	a	create
		p	0		id
	f	Laai;	A	HALF_VERTICAL
	f	Laai;	B	HALF_HORIZONTAL
	f	Laai;	C	HALF_VERTICAL_MIRROR
	f	Laai;	D	HALF_HORIZONTAL_MIRROR
	f	Laai;	E	BORDER
	f	Laai;	F	CURLY_BORDER
	f	Laai;	G	GRADIENT
	f	Laai;	H	GRADIENT_UP
	f	Laai;	I	BRICKS
	f	Laai;	J	GLOBE
	f	Laai;	K	CREEPER
	f	Laai;	L	SKULL
	f	Laai;	M	FLOWER
	f	Laai;	N	MOJANG
	f	Laai;	O	PIGLIN
	f	Laai;	a	BASE
	f	Laai;	b	SQUARE_BOTTOM_LEFT
	f	Laai;	c	SQUARE_BOTTOM_RIGHT
	f	Laai;	d	SQUARE_TOP_LEFT
	f	Laai;	e	SQUARE_TOP_RIGHT
	f	Laai;	f	STRIPE_BOTTOM
	f	Laai;	g	STRIPE_TOP
	f	Laai;	h	STRIPE_LEFT
	f	Laai;	i	STRIPE_RIGHT
	f	Laai;	j	STRIPE_CENTER
	f	Laai;	k	STRIPE_MIDDLE
	f	Laai;	l	STRIPE_DOWNRIGHT
	f	Laai;	m	STRIPE_DOWNLEFT
	f	Laai;	n	STRIPE_SMALL
	f	Laai;	o	CROSS
	f	Laai;	p	STRAIGHT_CROSS
	f	Laai;	q	TRIANGLE_BOTTOM
	f	Laai;	r	TRIANGLE_TOP
	f	Laai;	s	TRIANGLES_BOTTOM
	f	Laai;	t	TRIANGLES_TOP
	f	Laai;	u	DIAGONAL_LEFT
	f	Laai;	v	DIAGONAL_RIGHT
	f	Laai;	w	DIAGONAL_LEFT_MIRROR
	f	Laai;	x	DIAGONAL_RIGHT_MIRROR
	f	Laai;	y	CIRCLE_MIDDLE
	f	Laai;	z	RHOMBUS_MIDDLE
c	cse	net/minecraft/world/level/block/entity/BarrelBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcur;Lajd;)V	a	playSound
		p	1		state
		p	2		soundEvent
	m	(Lcur;Z)V	a	updateBlockState
		p	1		state
		p	2		open
	m	(Lhi;)V	a	setItems
		p	1		list
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(Lbtf;)V	c_	stopOpen
		p	1		player
	m	(Lbtf;)V	d_	startOpen
		p	1		player
	m	()Lhi;	f	getItems
	m	()Lrm;	g	getDefaultName
	m	()V	i	recheckOpen
	f	Lhi;	b	items
	f	Lcsv;	c	openersCounter
c	cse$1	net/minecraft/world/level/block/entity/BarrelBlockEntity$1
	m	(Lbtf;)Z	a	isOwnContainer
		p	1		player
	m	(Lcga;Lgt;Lcur;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcga;Lgt;Lcur;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lcse;	a	this$0
c	csf	net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	m	(Lcsn;Lgt;Lcur;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	()Lrm;	C_	getDisplayName
	m	()Lrm;	X	getName
	m	()Lrm;	Z	getCustomName
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lbtf;Lazo;Lrm;)Z	a	canUnlock
		p	0		player
		p	1		lock
		p	2		containerName
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lrm;)V	a	setCustomName
		p	1		customName
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	m	(Lbtf;)Z	d	canOpen
		p	1		player
	m	()Lrm;	g	getDefaultName
	f	Lazo;	b	lockKey
	f	Lrm;	c	name
c	csg	net/minecraft/world/level/block/entity/BeaconBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lrm;	C_	getDisplayName
	m	(I)Lbah;	a	getValidEffectById
		p	0		id
	m	(Lcga;)V	a	setLevel
		p	1		world
	m	(Lcga;III)I	a	updateBase
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Lcga;Lgt;ILbah;Lbah;)V	a	applyEffects
		p	0		world
		p	1		pos
		p	2		beaconLevel
		p	3		primaryEffect
		p	4		secondaryEffect
	m	(Lcga;Lgt;Lajd;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		sound
	m	(Lcga;Lgt;Lcur;Lcsg;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lrm;)V	a	setCustomName
		p	1		customName
	m	()Lpj;	ab_	getUpdateTag
	m	()V	ac_	setRemoved
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Ljava/util/List;	c	getBeamSections
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	m	()Lsz;	f	getUpdatePacket
	m	()Lso;	h	getUpdatePacket
	f	[[Lbah;	a	BEACON_EFFECTS
	f	I	b	DATA_LEVELS
	f	I	c	DATA_PRIMARY
	f	I	d	DATA_SECONDARY
	f	I	e	NUM_DATA_VALUES
	f	I	f	MAX_LEVELS
	f	Ljava/util/Set;	g	VALID_EFFECTS
	f	I	h	BLOCKS_CHECK_PER_TICK
	f	Ljava/util/List;	i	beamSections
	f	Ljava/util/List;	j	checkingBeamSections
	f	I	k	levels
	f	I	l	lastCheckY
	f	Lbah;	m	primaryPower
	f	Lbah;	q	secondaryPower
	f	Lrm;	r	name
	f	Lazo;	s	lockKey
	f	Lbvz;	t	dataAccess
c	csg$1	net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lcsg;	a	this$0
c	csg$a	net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	m	([F)V	<init>	<init>
		p	1		color
	m	()V	a	increaseHeight
	m	()[F	b	getColor
	m	()I	c	getHeight
	f	[F	a	color
	f	I	b	height
c	csh	net/minecraft/world/level/block/entity/BedBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgt;Lcur;Lbyt;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		color
	m	(Lbyt;)V	a	setColor
		p	1		color
	m	()Lsz;	c	getUpdatePacket
	m	()Lbyt;	d	getColor
	m	()Lso;	h	getUpdatePacket
	f	Lbyt;	a	color
c	csi	net/minecraft/world/level/block/entity/BeehiveBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbmi;)V	a	setBeeReleaseData
		p	0		ticks
		p	1		bee
	m	(Lbaq;)Lbaq;	a	lambda$releaseOccupant$1
	m	(Lbaq;Z)V	a	addOccupant
		p	1		entity
		p	2		hasNectar
	m	(Lbaq;ZI)V	a	addOccupantWithPresetTicks
		p	1		entity
		p	2		hasNectar
		p	3		ticksInHive
	m	(Lbtf;Lcur;Lcsi$b;)V	a	emptyAllLivingFromHive
		p	1		player
		p	2		state
		p	3		beeState
	m	(Lcga;Lgt;Lcur;Lcsi$a;Ljava/util/List;Lcsi$b;Lgt;)Z	a	releaseOccupant
		p	0		world
		p	1		pos
		p	2		state
		p	3		bee
		p	4		entities
		p	5		beeState
		p	6		flowerPos
	m	(Lcga;Lgt;Lcur;Lcsi;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcga;Lgt;Lcur;Ljava/util/List;Lgt;)V	a	tickOccupants
		p	0		world
		p	1		pos
		p	2		state
		p	3		bees
		p	4		flowerPos
	m	(Lcuq$a;)Z	a	lambda$releaseOccupant$2
		p	0		state
	m	(Lcur;)I	a	getHoneyLevel
		p	0		state
	m	(Lcur;Lcsi$b;)Ljava/util/List;	a	releaseAllOccupants
		p	1		state
		p	2		beeState
	m	(Lcur;Ljava/util/List;Lcsi$b;Lcsi$a;)Z	a	lambda$releaseAllOccupants$0
		p	4		bee
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;IZ)V	a	storeBee
		p	1		nbtCompound
		p	2		ticksInHive
		p	3		hasNectar
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isFireNearby
	m	()Z	d	isEmpty
	m	(Lpj;)V	d	removeIgnoredBeeTags
		p	0		compound
	m	()V	e	setChanged
	m	()Z	f	isFull
	m	()I	g	getOccupantCount
	m	()Z	i	isSedated
	m	()Lpp;	j	writeBees
	m	()Z	t	hasSavedFlowerPos
	f	Ljava/lang/String;	a	TAG_FLOWER_POS
	f	Ljava/lang/String;	b	MIN_OCCUPATION_TICKS
	f	Ljava/lang/String;	c	ENTITY_DATA
	f	Ljava/lang/String;	d	TICKS_IN_HIVE
	f	Ljava/lang/String;	e	HAS_NECTAR
	f	Ljava/lang/String;	f	BEES
	f	I	g	MAX_OCCUPANTS
	f	I	h	MIN_OCCUPATION_TICKS_NECTARLESS
	f	Ljava/util/List;	i	IGNORED_BEE_TAGS
	f	I	j	MIN_TICKS_BEFORE_REENTERING_HIVE
	f	I	k	MIN_OCCUPATION_TICKS_NECTAR
	f	Ljava/util/List;	l	stored
	f	Lgt;	m	savedFlowerPos
c	csi$a	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	m	(Lpj;II)V	<init>	<init>
		p	1		entityData
		p	2		ticksInHive
		p	3		minOccupationTicks
	f	Lpj;	a	entityData
	f	I	b	ticksInHive
	f	I	c	minOccupationTicks
c	csi$b	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	m	()[Lcsi$b;	a	$values
	f	Lcsi$b;	a	HONEY_DELIVERED
	f	Lcsi$b;	b	BEE_RELEASED
	f	Lcsi$b;	c	EMERGENCY
	f	[Lcsi$b;	d	$VALUES
c	csj	net/minecraft/world/level/block/entity/BellBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbbf;)V	a	glow
		p	0		entity
	m	(Lcga;Lgt;Lcur;Lcsj;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcga;Lgt;Lcur;Lcsj;Lcsj$a;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
		p	4		bellEffect
	m	(Lcga;Lgt;Ljava/util/List;)V	a	makeRaidersGlow
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Lgt;ILorg/apache/commons/lang3/mutable/MutableInt;Lcga;Lbbf;)V	a	lambda$showBellParticles$3
		p	4		entity
	m	(Lgt;Lbbf;)Z	a	isRaiderWithinRange
		p	0		pos
		p	1		entity
	m	(Lgt;Ljava/util/List;)Z	a	areRaidersNearby
		p	0		pos
		p	1		hearingEntities
	m	(Lgy;)V	a	onHit
		p	1		direction
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	(Lcga;Lgt;Lcur;Lcsj;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcga;Lgt;Ljava/util/List;)V	b	showBellParticles
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Lgt;Lbbf;)Z	b	lambda$showBellParticles$2
		p	1		entity
	m	()V	c	updateEntities
	m	(Lgt;Lbbf;)Z	c	lambda$showBellParticles$1
		p	1		entity
	m	(Lgt;Lbbf;)Z	d	lambda$makeRaidersGlow$0
		p	1		entity
	f	I	a	ticks
	f	Z	b	shaking
	f	Lgy;	c	clickDirection
	f	I	d	DURATION
	f	I	e	GLOW_DURATION
	f	I	f	MIN_TICKS_BETWEEN_SEARCHES
	f	I	g	MAX_RESONATION_TICKS
	f	I	h	TICKS_BEFORE_RESONATION
	f	I	i	SEARCH_RADIUS
	f	I	j	HEAR_BELL_RADIUS
	f	I	k	HIGHLIGHT_RAIDERS_RADIUS
	f	J	l	lastRingTimestamp
	f	Ljava/util/List;	m	nearbyEntities
	f	Z	q	resonating
	f	I	r	resonationTicks
c	csj$a	net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
	m	(Lcga;Lgt;Ljava/util/List;)V	run	run
		p	1		world
		p	2		pos
		p	3		hearingEntities
c	csk	net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcaa;)I	a	getBurnDuration
		p	1		fuel
	m	()Lrm;	g	getDefaultName
c	csl	net/minecraft/world/level/block/entity/BlockEntity
	m	(Lcsn;Lgt;Lcur;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lcga;)V	a	setLevel
		p	1		world
	m	(Lcga;Lgt;Lcur;)V	a	setChanged
		p	0		world
		p	1		pos
		p	2		state
	m	(Lgt;Lcur;Ljava/lang/String;Lcsn;)Lcsl;	a	lambda$loadStatic$0
		p	3		type
	m	(Lgt;Lcur;Lpj;)Lcsl;	a	loadStatic
		p	0		pos
		p	1		state
		p	2		nbt
	m	(Ljava/lang/String;)Lcsl;	a	lambda$loadStatic$2
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;Lcsn;)V	a	addEntityType
		p	0		nbt
		p	1		type
	m	(Lpj;Ljava/lang/String;Lcsl;)Lcsl;	a	lambda$loadStatic$1
		p	2		blockEntity
	m	(Lr;)V	a	fillCrashReportCategory
		p	1		crashReportSection
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lpj;	ab_	getUpdateTag
	m	()V	ac_	setRemoved
	m	(Lcur;)V	b	setBlockState
		p	1		state
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(Lpj;)Lgt;	c	getPosFromTag
		p	0		nbt
	m	(Lpj;)V	d	saveId
		p	1		nbt
	m	()V	e	setChanged
	m	(Lcaa;)V	e	saveToItem
		p	1		stack
	m	(Lpj;)V	e	saveMetadata
		p	1		nbt
	m	()Ljava/lang/String;	g	lambda$fillCrashReportCategory$3
	m	()Lso;	h	getUpdatePacket
	m	()Lcga;	k	getLevel
	m	()Z	l	hasLevel
	m	()Lpj;	m	saveWithFullMetadata
	m	()Lpj;	n	saveWithId
	m	()Lpj;	o	saveWithoutMetadata
	m	()Lgt;	p	getBlockPos
	m	()Lcur;	q	getBlockState
	m	()Z	r	isRemoved
	m	()V	s	clearRemoved
	m	()Z	u	onlyOpCanSetNbt
	m	()Lcsn;	v	getType
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcsn;	c	type
	f	Lcur;	d	blockState
	f	Lcga;	n	level
	f	Lgt;	o	worldPosition
	f	Z	p	remove
c	csm	net/minecraft/world/level/block/entity/BlockEntityTicker
	m	(Lcga;Lgt;Lcur;Lcsl;)V	tick	tick
		p	1		world
		p	2		pos
		p	3		state
		p	4		blockEntity
c	csn	net/minecraft/world/level/block/entity/BlockEntityType
	m	(Lcsn$a;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V	<init>	<init>
		p	1		factory
		p	2		blocks
		p	3		type
	m	(Lcfg;Lgt;)Lcsl;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Lcsn;)Laaj;	a	getKey
		p	0		type
	m	(Lcur;)Z	a	isValid
		p	1		state
	m	(Lgt;Lcur;)Lcsl;	a	create
		p	1		pos
		p	2		state
	m	(Ljava/lang/String;Lcsn$b;)Lcsn;	a	register
		p	0		id
		p	1		builder
	f	Lcsn;	A	SMOKER
	f	Lcsn;	B	BLAST_FURNACE
	f	Lcsn;	C	LECTERN
	f	Lcsn;	D	BELL
	f	Lcsn;	E	JIGSAW
	f	Lcsn;	F	CAMPFIRE
	f	Lcsn;	G	BEEHIVE
	f	Lcsn;	H	SCULK_SENSOR
	f	Lcsn;	I	SCULK_CATALYST
	f	Lcsn;	J	SCULK_SHRIEKER
	f	Lorg/slf4j/Logger;	K	LOGGER
	f	Lcsn$a;	L	factory
	f	Ljava/util/Set;	M	validBlocks
	f	Lcom/mojang/datafixers/types/Type;	N	dataType
	f	Lcsn;	a	FURNACE
	f	Lcsn;	b	CHEST
	f	Lcsn;	c	TRAPPED_CHEST
	f	Lcsn;	d	ENDER_CHEST
	f	Lcsn;	e	JUKEBOX
	f	Lcsn;	f	DISPENSER
	f	Lcsn;	g	DROPPER
	f	Lcsn;	h	SIGN
	f	Lcsn;	i	MOB_SPAWNER
	f	Lcsn;	j	PISTON
	f	Lcsn;	k	BREWING_STAND
	f	Lcsn;	l	ENCHANTING_TABLE
	f	Lcsn;	m	END_PORTAL
	f	Lcsn;	n	BEACON
	f	Lcsn;	o	SKULL
	f	Lcsn;	p	DAYLIGHT_DETECTOR
	f	Lcsn;	q	HOPPER
	f	Lcsn;	r	COMPARATOR
	f	Lcsn;	s	BANNER
	f	Lcsn;	t	STRUCTURE_BLOCK
	f	Lcsn;	u	END_GATEWAY
	f	Lcsn;	v	COMMAND_BLOCK
	f	Lcsn;	w	SHULKER_BOX
	f	Lcsn;	x	BED
	f	Lcsn;	y	CONDUIT
	f	Lcsn;	z	BARREL
c	csn$a	net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
	m	(Lgt;Lcur;)Lcsl;	create	create
		p	1		pos
		p	2		state
c	csn$b	net/minecraft/world/level/block/entity/BlockEntityType$Builder
	m	(Lcsn$a;Ljava/util/Set;)V	<init>	<init>
		p	1		factory
		p	2		blocks
	m	(Lcom/mojang/datafixers/types/Type;)Lcsn;	a	build
		p	1		type
	m	(Lcsn$a;[Lciw;)Lcsn$b;	a	of
		p	0		factory
		p	1		blocks
	f	Lcsn$a;	a	factory
	f	Ljava/util/Set;	b	validBlocks
c	cso	net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcaa;Lgy;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lcga;Lgt;Lcur;Lcso;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcga;Lgt;Lhi;)V	a	doBrew
		p	0		world
		p	1		pos
		p	2		slots
	m	(Lgy;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhi;)Z	a	isBrewable
		p	0		slots
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcaa;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcaa;Lgy;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isEmpty
	m	()[Z	f	getPotionBits
	m	()Lrm;	g	getDefaultName
	f	I	b	FUEL_USES
	f	I	c	DATA_BREW_TIME
	f	I	d	DATA_FUEL_USES
	f	I	e	NUM_DATA_VALUES
	f	Lbvz;	f	dataAccess
	f	I	g	INGREDIENT_SLOT
	f	I	h	FUEL_SLOT
	f	[I	i	SLOTS_FOR_UP
	f	[I	j	SLOTS_FOR_DOWN
	f	[I	k	SLOTS_FOR_SIDES
	f	Lhi;	l	items
	f	I	m	brewTime
	f	[Z	q	lastPotionCount
	f	Lbzw;	r	ingredient
	f	I	s	fuel
c	cso$1	net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lcso;	a	this$0
c	csp	net/minecraft/world/level/block/entity/CampfireBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(Lazf;Lccj;)Lcaa;	a	lambda$cookTick$0
		p	1		recipe
	m	(Lbaq;Lcaa;I)Z	a	placeFood
		p	1		user
		p	2		stack
		p	3		cookTime
	m	(Lcaa;)Ljava/util/Optional;	a	getCookableRecipe
		p	1		stack
	m	(Lcga;Lgt;Lcur;Lcsp;)V	a	cookTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()Lpj;	ab_	getUpdateTag
	m	(Lcga;Lgt;Lcur;Lcsp;)V	b	cooldownTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lhi;	c	getItems
	m	(Lcga;Lgt;Lcur;Lcsp;)V	c	particleTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	()Lsz;	d	getUpdatePacket
	m	()V	f	dowse
	m	()V	g	markUpdated
	m	()Lso;	h	getUpdatePacket
	f	I	a	BURN_COOL_SPEED
	f	I	b	NUM_SLOTS
	f	Lhi;	c	items
	f	[I	d	cookingProgress
	f	[I	e	cookingTime
	f	Lcct$a;	f	quickCheck
c	csq	net/minecraft/world/level/block/entity/ChestBlockEntity
	m	(Lcsn;Lgt;Lcur;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcfg;Lgt;)I	a	getOpenCount
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcga;Lgt;Lcur;Lajd;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		state
		p	3		soundEvent
	m	(Lcga;Lgt;Lcur;Lcsq;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcsq;Lcsq;)V	a	swapContents
		p	0		from
		p	1		to
	m	(Lhi;)V	a	setItems
		p	1		list
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(Lbtf;)V	c_	stopOpen
		p	1		player
	m	(Lbtf;)V	d_	startOpen
		p	1		player
	m	()Lhi;	f	getItems
	m	()Lrm;	g	getDefaultName
	m	()V	i	recheckOpen
	f	I	b	EVENT_SET_OPEN_COUNT
	f	Lhi;	c	items
	f	Lcsv;	f	openersCounter
	f	Lcsr;	i	chestLidController
c	csq$1	net/minecraft/world/level/block/entity/ChestBlockEntity$1
	m	(Lbtf;)Z	a	isOwnContainer
		p	1		player
	m	(Lcga;Lgt;Lcur;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcga;Lgt;Lcur;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lcsq;	a	this$0
c	csr	net/minecraft/world/level/block/entity/ChestLidController
	m	()V	a	tickLid
	m	(F)F	a	getOpenness
		p	1		delta
	m	(Z)V	a	shouldBeOpen
		p	1		open
	f	Z	a	shouldBeOpen
	f	F	b	openness
	f	F	c	oOpenness
c	css	net/minecraft/world/level/block/entity/CommandBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Z)V	a	setPowered
		p	1		powered
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(Z)V	b	setAutomatic
		p	1		auto
	m	()Lcfb;	c	getCommandBlock
	m	()Z	d	isPowered
	m	()Z	f	isAutomatic
	m	()V	g	onModeSwitch
	m	()Z	i	wasConditionMet
	m	()Z	j	markConditionMet
	m	()Lcss$a;	t	getMode
	m	()Z	u	onlyOpCanSetNbt
	m	()Z	w	isConditional
	m	()V	x	scheduleTick
	f	Z	a	powered
	f	Z	b	auto
	f	Z	c	conditionMet
	f	Lcfb;	d	commandBlock
c	css$1	net/minecraft/world/level/block/entity/CommandBlockEntity$1
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	()Lafo;	e	getLevel
	m	()V	f	onUpdated
	m	()Ldvt;	g	getPosition
	m	()Ldr;	i	createCommandSourceStack
	f	Lcss;	b	this$0
c	css$a	net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	m	()[Lcss$a;	a	$values
	f	Lcss$a;	a	SEQUENCE
	f	Lcss$a;	b	AUTO
	f	Lcss$a;	c	REDSTONE
	f	[Lcss$a;	d	$VALUES
c	cst	net/minecraft/world/level/block/entity/ComparatorBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	setOutputSignal
		p	1		outputSignal
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()I	c	getOutputSignal
	f	I	a	output
c	csu	net/minecraft/world/level/block/entity/ConduitBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getActiveRotation
		p	1		tickDelta
	m	(Lbbf;)Z	a	lambda$updateDestroyTarget$0
		p	0		entity
	m	(Lcga;Lgt;Lcsu;)V	a	updateClientTarget
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Lcga;Lgt;Lcur;Lcsu;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcga;Lgt;Lcur;Ljava/util/List;Lcsu;)V	a	updateDestroyTarget
		p	0		world
		p	1		pos
		p	2		state
		p	3		activatingBlocks
		p	4		blockEntity
	m	(Lcga;Lgt;Ljava/util/List;)Z	a	updateShape
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Lcga;Lgt;Ljava/util/List;Lbaq;I)V	a	animationTick
		p	0		world
		p	1		pos
		p	2		activatingBlocks
		p	3		entity
		p	4		ticks
	m	(Lcga;Lgt;Ljava/util/UUID;)Lbbf;	a	findDestroyTarget
		p	0		world
		p	1		pos
		p	2		uuid
	m	(Lcsu;Ljava/util/List;)V	a	updateHunting
		p	0		blockEntity
		p	1		activatingBlocks
	m	(Lgt;)Ldvo;	a	getDestroyRangeAABB
		p	0		pos
	m	(Ljava/util/UUID;Lbbf;)Z	a	lambda$findDestroyTarget$1
		p	1		entity
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Z)V	a	setHunting
		p	1		eyeOpen
	m	()Lpj;	ab_	getUpdateTag
	m	(Lcga;Lgt;Lcur;Lcsu;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcga;Lgt;Ljava/util/List;)V	b	applyEffects
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lsz;	c	getUpdatePacket
	m	()Z	d	isActive
	m	()Z	f	isHunting
	m	()Lso;	h	getUpdatePacket
	f	I	a	tickCount
	f	I	b	BLOCK_REFRESH_RATE
	f	I	c	EFFECT_DURATION
	f	F	d	ROTATION_SPEED
	f	I	e	MIN_ACTIVE_SIZE
	f	I	f	MIN_KILL_SIZE
	f	I	g	KILL_RANGE
	f	[Lciw;	h	VALID_BLOCKS
	f	F	i	activeRotation
	f	Z	j	isActive
	f	Z	k	isHunting
	f	Ljava/util/List;	l	effectBlocks
	f	Lbbf;	m	destroyTarget
	f	Ljava/util/UUID;	q	destroyTargetUUID
	f	J	r	nextAmbientSoundActivation
c	csv	net/minecraft/world/level/block/entity/ContainerOpenersCounter
	m	()I	a	getOpenerCount
	m	(Lbtf;)Z	a	isOwnContainer
		p	1		player
	m	(Lbtf;Lcga;Lgt;Lcur;)V	a	incrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcga;Lgt;)I	a	getOpenCount
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lcur;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lbtf;Lcga;Lgt;Lcur;)V	b	decrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcga;Lgt;Lcur;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)V	c	recheckOpeners
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;)V	d	scheduleRecheck
		p	0		world
		p	1		pos
		p	2		state
	f	I	a	CHECK_TICK_DELAY
	f	I	b	openCount
c	csw	net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
c	csx	net/minecraft/world/level/block/entity/DispenserBlockEntity
	m	(Lcsn;Lgt;Lcur;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lalu;)I	a	getRandomSlot
		p	1		random
	m	(Lcaa;)I	a	addItem
		p	1		stack
	m	(Lhi;)V	a	setItems
		p	1		list
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lhi;	f	getItems
	m	()Lrm;	g	getDefaultName
	f	I	b	CONTAINER_SIZE
	f	Lhi;	c	items
c	csy	net/minecraft/world/level/block/entity/DropperBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lrm;	g	getDefaultName
c	csz	net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lrm;	X	getName
	m	()Lrm;	Z	getCustomName
	m	(Lcga;Lgt;Lcur;Lcsz;)V	a	bookAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lrm;)V	a	setCustomName
		p	1		customName
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	f	I	a	time
	f	F	b	flip
	f	F	c	oFlip
	f	F	d	flipT
	f	F	e	flipA
	f	F	f	open
	f	F	g	oOpen
	f	F	h	rot
	f	F	i	oRot
	f	F	j	tRot
	f	Lalu;	k	RANDOM
	f	Lrm;	l	name
c	cta	net/minecraft/world/level/block/entity/EnderChestBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(Lbtf;)V	a	startOpen
		p	1		player
	m	(Lcga;Lgt;Lcur;Lcta;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	(Lbtf;)V	b	stopOpen
		p	1		player
	m	()V	c	recheckOpen
	m	(Lbtf;)Z	c	stillValid
		p	1		player
	f	Lcsr;	a	chestLidController
	f	Lcsv;	b	openersCounter
c	cta$1	net/minecraft/world/level/block/entity/EnderChestBlockEntity$1
	m	(Lbtf;)Z	a	isOwnContainer
		p	1		player
	m	(Lcga;Lgt;Lcur;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcga;Lgt;Lcur;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lcta;	a	this$0
c	ctb	net/minecraft/world/level/block/entity/FurnaceBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	()Lrm;	g	getDefaultName
c	ctc	net/minecraft/world/level/block/entity/Hopper
	m	()D	E	getLevelX
	m	()D	F	getLevelY
	m	()D	G	getLevelZ
	m	()Ldwm;	O_	getSuckShape
	f	Ldwm;	k_	INSIDE
	f	Ldwm;	u_	ABOVE
	f	Ldwm;	v_	SUCK
c	ctd	net/minecraft/world/level/block/entity/HopperBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()D	E	getLevelX
	m	()D	F	getLevelY
	m	()D	G	getLevelZ
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lazf;I)Z	a	lambda$isEmptyContainer$2
		p	1		slot
	m	(Lazf;Lazf;Lcaa;ILgy;)Lcaa;	a	tryMoveInItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		slot
		p	4		side
	m	(Lazf;Lazf;Lcaa;Lgy;)Lcaa;	a	addItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		side
	m	(Lazf;Lbpy;)Z	a	addItem
		p	0		inventory
		p	1		itemEntity
	m	(Lazf;Lcaa;ILgy;)Z	a	canPlaceItemInContainer
		p	0		inventory
		p	1		stack
		p	2		slot
		p	3		side
	m	(Lazf;Lgy;)Ljava/util/stream/IntStream;	a	getSlots
		p	0		inventory
		p	1		side
	m	(Lcaa;Lcaa;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Lcga;DDD)Lazf;	a	getContainerAt
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Lcga;Lctc;)Z	a	suckInItems
		p	0		world
		p	1		hopper
	m	(Lcga;Lctc;Ldvo;)Ljava/util/stream/Stream;	a	lambda$getItemsAtAndAbove$4
		p	2		box
	m	(Lcga;Lctd;)Z	a	lambda$pushItemsTick$0
	m	(Lcga;Lgt;)Lazf;	a	getContainerAt
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Lazf;)Z	a	ejectItems
		p	0		world
		p	1		pos
		p	2		state
		p	3		inventory
	m	(Lcga;Lgt;Lcur;Lbaq;Lctd;)V	a	entityInside
		p	0		world
		p	1		pos
		p	2		state
		p	3		entity
		p	4		blockEntity
	m	(Lcga;Lgt;Lcur;Lctd;)V	a	pushItemsTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcga;Lgt;Lcur;Lctd;Ljava/util/function/BooleanSupplier;)Z	a	tryMoveItems
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lctc;Lazf;ILgy;)Z	a	tryTakeInItemFromSlot
		p	0		hopper
		p	1		inventory
		p	2		slot
		p	3		side
	m	(Lctc;Lazf;Lgy;I)Z	a	lambda$suckInItems$3
		p	3		slot
	m	(Lctd;Lbaq;)Z	a	lambda$entityInside$5
	m	(Lhi;)V	a	setItems
		p	1		list
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lazf;I)Z	b	lambda$isFullContainer$1
		p	1		slot
	m	(Lazf;Lcaa;ILgy;)Z	b	canTakeItemFromContainer
		p	0		inv
		p	1		stack
		p	2		slot
		p	3		facing
	m	(Lazf;Lgy;)Z	b	isFullContainer
		p	0		inventory
		p	1		direction
	m	(Lcga;Lctc;)Ljava/util/List;	b	getItemsAtAndAbove
		p	0		world
		p	1		hopper
	m	(Lcga;Lgt;Lcur;)Lazf;	b	getAttachedContainer
		p	0		world
		p	1		pos
		p	2		state
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(I)V	c	setCooldown
		p	1		transferCooldown
	m	(Lazf;Lgy;)Z	c	isEmptyContainer
		p	0		inv
		p	1		facing
	m	(Lcga;Lctc;)Lazf;	c	getSourceContainer
		p	0		world
		p	1		hopper
	m	()Lhi;	f	getItems
	m	()Lrm;	g	getDefaultName
	m	()Z	j	inventoryFull
	m	()Z	t	isOnCooldown
	m	()Z	w	isOnCustomCooldown
	f	I	c	MOVE_ITEM_SPEED
	f	I	f	HOPPER_CONTAINER_SIZE
	f	Lhi;	i	items
	f	I	j	cooldownTime
	f	J	k	tickedGameTime
c	cte	net/minecraft/world/level/block/entity/JigsawBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Laai;)V	a	setPool
		p	1		pool
	m	(Laaj;)V	a	setName
		p	1		name
	m	(Lafo;IZ)V	a	generate
		p	1		world
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Lcte$a;)V	a	setJoint
		p	1		joint
	m	(Ljava/lang/String;)V	a	setFinalState
		p	1		finalState
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()Lpj;	ab_	getUpdateTag
	m	(Laaj;)V	b	setTarget
		p	1		target
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Laaj;	c	getName
	m	()Laaj;	d	getTarget
	m	()Laai;	f	getPool
	m	()Ljava/lang/String;	g	getFinalState
	m	()Lso;	h	getUpdatePacket
	m	()Lcte$a;	i	getJoint
	m	()Lsz;	j	getUpdatePacket
	m	()Lcte$a;	t	lambda$load$0
	f	Ljava/lang/String;	a	TARGET
	f	Ljava/lang/String;	b	POOL
	f	Ljava/lang/String;	c	JOINT
	f	Ljava/lang/String;	d	NAME
	f	Ljava/lang/String;	e	FINAL_STATE
	f	Laaj;	f	name
	f	Laaj;	g	target
	f	Laai;	h	pool
	f	Lcte$a;	i	joint
	f	Ljava/lang/String;	j	finalState
c	cte$a	net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Lrm;	a	getTranslatedName
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;Lcte$a;)Z	a	lambda$byName$0
		p	1		joint
	m	()[Lcte$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcte$a;	a	ROLLABLE
	f	Lcte$a;	b	ALIGNED
	f	Ljava/lang/String;	c	name
	f	[Lcte$a;	d	$VALUES
c	ctf	net/minecraft/world/level/block/entity/JukeboxBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(Lcaa;)V	a	setRecord
		p	1		stack
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lcaa;	c	getRecord
	f	Lcaa;	a	record
c	ctg	net/minecraft/world/level/block/entity/LecternBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lrm;	C_	getDisplayName
	m	()V	a	clearContent
	m	(I)V	a	setPage
		p	1		currentPage
	m	(Lbtf;)Ldr;	a	createCommandSourceStack
		p	1		player
	m	(Lcaa;)V	a	setBook
		p	1		book
	m	(Lcaa;Lbtf;)V	a	setBook
		p	1		book
		p	2		player
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lcaa;Lbtf;)Lcaa;	b	resolveBook
		p	1		book
		p	2		player
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lcaa;	c	getBook
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	m	()Z	f	hasBook
	m	()I	g	getPage
	m	()I	i	getRedstoneSignal
	m	()V	j	onBookItemRemove
	m	()Z	u	onlyOpCanSetNbt
	f	I	a	DATA_PAGE
	f	I	b	NUM_DATA
	f	I	c	SLOT_BOOK
	f	I	d	NUM_SLOTS
	f	Lazf;	e	bookAccess
	f	Lbvz;	f	dataAccess
	f	Lcaa;	g	book
	f	I	h	page
	f	I	i	pageCount
c	ctg$1	net/minecraft/world/level/block/entity/LecternBlockEntity$1
	m	()I	P_	getMaxStackSize
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	()I	b	getContainerSize
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcaa;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()Z	c	isEmpty
	m	()V	e	setChanged
	f	Lctg;	b	this$0
c	ctg$2	net/minecraft/world/level/block/entity/LecternBlockEntity$2
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lctg;	a	this$0
c	cth	net/minecraft/world/level/block/entity/LidBlockEntity
	m	(F)F	a	getOpenNess
		p	1		tickDelta
c	cti	net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	m	(Lcsn;Lgt;Lcur;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	()V	a	clearContent
	m	(I)Lcaa;	a	getItem
		p	1		slot
	m	(II)Lcaa;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcaa;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Laaj;J)V	a	setLootTable
		p	1		id
		p	2		seed
	m	(Lbtf;)Z	a	stillValid
		p	1		player
	m	(Lcfg;Lalu;Lgt;Laaj;)V	a	setLootTable
		p	0		world
		p	1		random
		p	2		pos
		p	3		id
	m	(Lhi;)V	a	setItems
		p	1		list
	m	(I)Lcaa;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	(ILbte;Lbtf;)Lbvp;	createMenu	createMenu
		p	1		syncId
		p	2		inv
		p	3		player
	m	(Lbtf;)Z	d	canOpen
		p	1		player
	m	(Lpj;)Z	d	tryLoadLootTable
		p	1		nbt
	m	(Lbtf;)V	e	unpackLootTable
		p	1		player
	m	(Lpj;)Z	e	trySaveLootTable
		p	1		nbt
	m	()Lhi;	f	getItems
	f	Ljava/lang/String;	d	LOOT_TABLE_TAG
	f	Ljava/lang/String;	e	LOOT_TABLE_SEED_TAG
	f	Laaj;	g	lootTable
	f	J	h	lootTableSeed
c	ctj	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lafo;Lcyy$b;)Z	a	handleGameEvent
		p	1		world
		p	2		event
	m	(Lcga;Lgt;Lcur;Lctj;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpi$a;)Ljava/lang/Integer;	a	lambda$saveAdditional$0
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	handleEventsImmediately
	m	()Lczb;	d	getListenerSource
	m	()I	f	getListenerRadius
	m	()Lcpi;	g	getSculkSpreader
	f	Lcyu;	a	blockPosSource
	f	Lcpi;	b	sculkSpreader
c	ctk	net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Z	K_	canTriggerAvoidVibration
	m	(FI)I	a	getRedstoneStrengthForDistance
		p	0		distance
		p	1		range
	m	(I)V	a	setLastVibrationFrequency
		p	1		lastVibrationFrequency
	m	(Lafo;Lcza;Lgt;Lcyy;Lbaq;Lbaq;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Lafo;Lcza;Lgt;Lcyy;Lcyy$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Lcze;)V	a	lambda$load$0
		p	1		listener
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$saveAdditional$1
		p	1		listenerNbt
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lcze;	c	getListener
	m	()I	d	getLastVibrationFrequency
	m	()V	f	onSignalSchedule
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcze;	b	listener
	f	I	c	lastVibrationFrequency
c	ctl	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	lambda$tryToWarn$3
		p	1		warningLevel
	m	(Lafo;)V	a	tryRespond
		p	1		world
	m	(Lafo;Lafp;)V	a	tryShriek
		p	1		world
		p	2		player
	m	(Lafo;Lbaq;)V	a	shriek
		p	1		world
		p	2		entity
	m	(Lafo;Lcza;Lgt;Lcyy;Lbaq;Lbaq;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Lafo;Lcza;Lgt;Lcyy;Lcyy$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Lbaq;)Lafp;	a	tryGetPlayer
		p	0		entity
	m	(Lcze;)V	a	lambda$load$1
		p	1		vibrationListener
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		warningSounds
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$saveAdditional$2
	m	(Lafo;)Z	b	canRespond
		p	1		world
	m	(Lafo;Lafp;)Z	b	tryToWarn
		p	1		world
		p	2		player
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lcze;	c	getListener
	m	(Lafo;)Z	c	trySummonWarden
		p	1		world
	m	()V	d	playWardenReplySound
	m	()V	f	onSignalSchedule
	m	()Lakh;	fL	getListenableEvents
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LISTENER_RADIUS
	f	I	c	WARNING_SOUND_RADIUS
	f	I	d	WARDEN_SPAWN_ATTEMPTS
	f	I	e	WARDEN_SPAWN_RANGE_XZ
	f	I	f	WARDEN_SPAWN_RANGE_Y
	f	I	g	DARKNESS_RADIUS
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	SOUND_BY_LEVEL
	f	I	i	SHRIEKING_TICKS
	f	I	j	warningLevel
	f	Lcze;	k	listener
c	ctm	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	m	(Lbyt;Lgt;Lcur;)V	<init>	<init>
		p	1		color
		p	2		pos
		p	3		state
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getProgress
		p	1		delta
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcaa;Lgy;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcga;Lgt;Lcur;Lctm;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcur;)Ldvo;	a	getBoundingBox
		p	1		state
	m	(Lgy;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhi;)V	a	setItems
		p	1		list
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(ILcaa;Lgy;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcga;Lgt;Lcur;)V	b	updateAnimation
		p	1		world
		p	2		pos
		p	3		state
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(Lcga;Lgt;Lcur;)V	c	moveCollidedEntities
		p	1		world
		p	2		pos
		p	3		state
	m	(Lbtf;)V	c_	stopOpen
		p	1		player
	m	(Lcga;Lgt;Lcur;)V	d	doNeighborUpdates
		p	0		world
		p	1		pos
		p	2		state
	m	(Lbtf;)V	d_	startOpen
		p	1		player
	m	()Lhi;	f	getItems
	m	(Lpj;)V	f	loadFromTag
		p	1		nbt
	m	()Lrm;	g	getDefaultName
	m	()Lctm$a;	i	getAnimationStatus
	m	()Lbyt;	j	getColor
	m	()Z	t	isClosed
	f	I	b	COLUMNS
	f	I	c	ROWS
	f	I	f	CONTAINER_SIZE
	f	I	i	EVENT_SET_OPEN_COUNT
	f	I	j	OPENING_TICK_LENGTH
	f	F	k	MAX_LID_HEIGHT
	f	F	l	MAX_LID_ROTATION
	f	Ljava/lang/String;	m	ITEMS_TAG
	f	[I	q	SLOTS
	f	Lhi;	r	itemStacks
	f	I	s	openCount
	f	Lctm$a;	t	animationStatus
	f	F	u	progress
	f	F	v	progressOld
	f	Lbyt;	w	color
c	ctm$1	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
c	ctm$a	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	m	()[Lctm$a;	a	$values
	f	Lctm$a;	a	CLOSED
	f	Lctm$a;	b	OPENING
	f	Lctm$a;	c	OPENED
	f	Lctm$a;	d	CLOSING
	f	[Lctm$a;	e	$VALUES
c	ctn	net/minecraft/world/level/block/entity/SignBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILrm;)V	a	setMessage
		p	1		row
		p	2		text
	m	(ILrm;Lrm;)V	a	setMessage
		p	1		row
		p	2		text
		p	3		filteredText
	m	(IZ)Lrm;	a	getMessage
		p	1		row
		p	2		filtered
	m	(Lafp;)Z	a	executeClickCommands
		p	1		player
	m	(Lbyt;)Z	a	setColor
		p	1		value
	m	(Ljava/lang/String;)Lrm;	a	loadLine
		p	1		json
	m	(Ljava/util/UUID;)V	a	setAllowedPlayerEditor
		p	1		editor
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Z)V	a	setEditable
		p	1		editable
	m	(ZLjava/util/function/Function;)[Lalc;	a	getRenderMessages
		p	1		filterText
		p	2		textOrderingFunction
	m	()Lpj;	ab_	getUpdateTag
	m	(Lafp;)Ldr;	b	createCommandSourceStack
		p	1		player
	m	(Ljava/lang/String;)Lrm;	b	deserializeTextSafe
		p	1		json
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(Z)Z	b	setHasGlowingText
		p	1		glowingText
	m	()Lsz;	c	getUpdatePacket
	m	(Z)[Lrm;	c	getMessages
		p	1		filtered
	m	()Z	d	isEditable
	m	()Ljava/util/UUID;	f	getPlayerWhoMayEdit
	m	()Lbyt;	g	getColor
	m	()Lso;	h	getUpdatePacket
	m	()Z	i	hasGlowingText
	m	()V	j	markUpdated
	m	()Z	u	onlyOpCanSetNbt
	f	I	a	LINES
	f	[Ljava/lang/String;	b	RAW_TEXT_FIELD_NAMES
	f	[Ljava/lang/String;	c	FILTERED_TEXT_FIELD_NAMES
	f	[Lrm;	d	messages
	f	[Lrm;	e	filteredMessages
	f	Z	f	isEditable
	f	Ljava/util/UUID;	g	playerWhoMayEdit
	f	[Lalc;	h	renderMessages
	f	Z	i	renderMessagedFiltered
	f	Lbyt;	j	color
	f	Z	k	hasGlowingText
c	cto	net/minecraft/world/level/block/entity/SkullBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getMouthAnimation
		p	1		tickDelta
	m	(Laaz;Ljava/util/concurrent/Executor;)V	a	setup
		p	0		apiServices
		p	1		executor
	m	(Lcga;Lgt;Lcur;Lcto;)V	a	dragonHeadAnimation
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcom/mojang/authlib/GameProfile;)V	a	setOwner
		p	1		owner
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V	a	updateGameprofile
		p	0		owner
		p	1		callback
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	a	lambda$updateGameprofile$5
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	a	lambda$updateGameprofile$4
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;Ljava/util/Optional;)V	a	lambda$updateGameprofile$6
		p	2		profile
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()Lpj;	ab_	getUpdateTag
	m	(Lcom/mojang/authlib/GameProfile;)V	b	lambda$updateOwnerProfile$0
		p	1		owner
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V	b	lambda$updateGameprofile$1
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	b	lambda$updateGameprofile$3
		p	1		profile
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()V	c	clear
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	c	lambda$updateGameprofile$2
		p	1		profile
	m	()Lcom/mojang/authlib/GameProfile;	d	getOwnerProfile
	m	()Lsz;	f	getUpdatePacket
	m	()V	g	updateOwnerProfile
	m	()Lso;	h	getUpdatePacket
	f	Ljava/lang/String;	a	TAG_SKULL_OWNER
	f	Laid;	b	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	f	Ljava/util/concurrent/Executor;	d	mainThreadExecutor
	f	Lcom/mojang/authlib/GameProfile;	e	owner
	f	I	f	mouthTickCount
	f	Z	g	isMovingMouth
c	ctp	net/minecraft/world/level/block/entity/SmokerBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbte;)Lbvp;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcaa;)I	a	getBurnDuration
		p	1		fuel
	m	()Lrm;	g	getDefaultName
c	ctq	net/minecraft/world/level/block/entity/SpawnerBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;Lcur;Lctq;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lpj;	ab_	getUpdateTag
	m	(Lcga;Lgt;Lcur;Lctq;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Lsz;	c	getUpdatePacket
	m	()Lcfc;	d	getSpawner
	m	()Lso;	h	getUpdatePacket
	m	()Z	u	onlyOpCanSetNbt
	f	Lcfc;	a	spawner
c	ctq$1	net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	m	(Lcga;Lgt;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Lcga;Lgt;Lcgq;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
	f	Lctq;	a	this$0
c	ctr	net/minecraft/world/level/block/entity/StructureBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()F	A	getIntegrity
	m	()J	B	getSeed
	m	()Z	C	detectSize
	m	()Z	D	saveStructure
	m	()V	E	unloadStructure
	m	()Z	F	isStructureLoadable
	m	()Z	G	isPowered
	m	()Z	H	getShowAir
	m	()Z	I	getShowBoundingBox
	m	()V	J	updateBlockState
	m	(F)V	a	setIntegrity
		p	1		integrity
	m	(J)V	a	setSeed
		p	1		seed
	m	(Laaj;)V	a	setStructureName
		p	1		templateName
	m	(Lafo;)Z	a	loadStructure
		p	1		world
	m	(Lafo;Lgt;)V	a	lambda$loadStructure$5
		p	0		world
		p	1		pos
	m	(Lafo;Z)Z	a	loadStructure
		p	1		world
	m	(Lafo;ZLdnw;)Z	a	loadStructure
		p	1		world
		p	3		template
	m	(Lbbf;)V	a	createdBy
		p	1		entity
	m	(Lbtf;)Z	a	usedBy
		p	1		player
	m	(Lcnk;)V	a	setMirror
		p	1		mirror
	m	(Lcoz;)V	a	setRotation
		p	1		rotation
	m	(Lcsl;)Lctr;	a	lambda$getRelatedCorners$3
		p	0		blockEntity
	m	(Lctr;)Z	a	lambda$getRelatedCorners$4
		p	1		blockEntity
	m	(Lcwa;)V	a	setMode
		p	1		mode
	m	(Lgt;)V	a	setStructurePos
		p	1		offset
	m	(Lgt;Ldjw;)Z	a	lambda$detectSize$0
		p	2		box
	m	(Lgt;Lgt;)Ljava/util/stream/Stream;	a	getRelatedCorners
		p	1		start
		p	2		end
	m	(Lgt;Ljava/util/stream/Stream;)Ljava/util/Optional;	a	calculateEnclosingBoundingBox
		p	0		pos
		p	1		corners
	m	(Lhs;)V	a	setStructureSize
		p	1		size
	m	(Ljava/lang/String;)V	a	setStructureName
		p	1		templateName
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(Z)V	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Lpj;	ab_	getUpdateTag
	m	(J)Lalu;	b	createRandom
		p	0		seed
	m	(Lcsl;)Z	b	lambda$getRelatedCorners$2
		p	0		blockEntity
	m	(Lgt;)Z	b	lambda$getRelatedCorners$1
		p	1		pos
	m	(Ljava/lang/String;)V	b	setMetaData
		p	1		metadata
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	(Z)Z	b	saveStructure
	m	()Lsz;	c	getUpdatePacket
	m	(Z)V	c	setPowered
		p	1		powered
	m	()Ljava/lang/String;	d	getStructureName
	m	(Z)V	d	setShowAir
		p	1		showAir
	m	(Z)V	e	setShowBoundingBox
		p	1		showBoundingBox
	m	()Ljava/lang/String;	f	getStructurePath
	m	()Z	g	hasStructureName
	m	()Lso;	h	getUpdatePacket
	m	()Lgt;	i	getStructurePos
	m	()Lhs;	j	getStructureSize
	m	()Lcnk;	t	getMirror
	m	()Lcoz;	w	getRotation
	m	()Ljava/lang/String;	x	getMetaData
	m	()Lcwa;	y	getMode
	m	()Z	z	isIgnoreEntities
	f	I	a	MAX_OFFSET_PER_AXIS
	f	I	b	MAX_SIZE_PER_AXIS
	f	Ljava/lang/String;	c	AUTHOR_TAG
	f	I	d	SCAN_CORNER_BLOCKS_RANGE
	f	Laaj;	e	structureName
	f	Ljava/lang/String;	f	author
	f	Ljava/lang/String;	g	metaData
	f	Lgt;	h	structurePos
	f	Lhs;	i	structureSize
	f	Lcnk;	j	mirror
	f	Lcoz;	k	rotation
	f	Lcwa;	l	mode
	f	Z	m	ignoreEntities
	f	Z	q	powered
	f	Z	r	showAir
	f	Z	s	showBoundingBox
	f	F	t	integrity
	f	J	u	seed
c	ctr$a	net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	m	()[Lctr$a;	a	$values
	f	Lctr$a;	a	UPDATE_DATA
	f	Lctr$a;	b	SAVE_AREA
	f	Lctr$a;	c	LOAD_AREA
	f	Lctr$a;	d	SCAN_AREA
	f	[Lctr$a;	e	$VALUES
c	cts	net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getSpawnPercent
		p	1		tickDelta
	m	(Lafo;Ldvt;)Z	a	isChunkEmpty
		p	0		world
		p	1		pos
	m	(Lafo;Lgt;)Lgt;	a	findOrCreateValidTeleportPos
		p	0		world
		p	1		pos
	m	(Lafo;Lgt;Ldez;)V	a	spawnGatewayPortal
		p	0		world
		p	1		pos
		p	2		config
	m	(Lbaq;)Z	a	canEntityTeleport
		p	0		entity
	m	(Lcfg;Lgt;IZ)Lgt;	a	findTallestBlock
		p	0		world
		p	1		pos
		p	2		searchRadius
		p	3		force
	m	(Lcga;Ldvt;)Lcww;	a	getChunk
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;)Lgt;	a	findExitPosition
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Lbaq;Lcts;)V	a	teleportEntity
		p	0		world
		p	1		pos
		p	2		state
		p	3		entity
		p	4		blockEntity
	m	(Lcga;Lgt;Lcur;Lcts;)V	a	beamAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcww;)Lgt;	a	findValidSpawnInChunk
		p	0		chunk
	m	(Lgt;Z)V	a	setExitPosition
		p	1		pos
		p	2		exactTeleport
	m	(Lgy;)Z	a	shouldRenderFace
		p	1		direction
	m	(Lpj;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lpj;	ab_	getUpdateTag
	m	(F)F	b	getCooldownPercent
		p	1		tickDelta
	m	(Lafo;Lgt;)Ldvt;	b	findExitPortalXZPosTentative
		p	0		world
		p	1		pos
	m	(Lcga;Lgt;Lcur;Lcts;)V	b	teleportTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isSpawning
	m	(Lcga;Lgt;Lcur;Lcts;)V	c	triggerCooldown
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	()Z	d	isCoolingDown
	m	()Lsz;	f	getUpdatePacket
	m	()I	g	getParticleAmount
	m	()Lso;	h	getUpdatePacket
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SPAWN_TIME
	f	I	c	COOLDOWN_TIME
	f	I	d	ATTENTION_INTERVAL
	f	I	e	EVENT_COOLDOWN
	f	I	f	GATEWAY_HEIGHT_ABOVE_SURFACE
	f	J	g	age
	f	I	h	teleportCooldown
	f	Lgt;	i	exitPortal
	f	Z	j	exactTeleport
c	ctt	net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	m	(Lcsn;Lgt;Lcur;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgy;)Z	a	shouldRenderFace
		p	1		direction
c	ctu	net/minecraft/world/level/block/entity/TickingBlockEntity
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	ctv	net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcga;Lgt;Lcur;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
c	ctw	net/minecraft/world/level/block/entity/package-info
c	ctx	net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	m	(Lafo;Lcwn;Lgt;Lcur;Lalu;)Z	a	growTree
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
	m	(Lafo;Lcwn;Lgt;Lcur;Lalu;II)Z	a	placeMega
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
		p	6		x
		p	7		z
	m	(Lalu;)Lhc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lcur;Lcfg;Lgt;II)Z	a	isTwoByTwoSapling
		p	0		state
		p	1		world
		p	2		pos
		p	3		x
		p	4		z
c	cty	net/minecraft/world/level/block/grower/AbstractTreeGrower
	m	(Lafo;Lcwn;Lgt;Lcur;Lalu;)Z	a	growTree
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
	m	(Lcgb;Lgt;)Z	a	hasFlowers
		p	1		world
		p	2		pos
c	ctz	net/minecraft/world/level/block/grower/AcaciaTreeGrower
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	cua	net/minecraft/world/level/block/grower/AzaleaTreeGrower
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	cub	net/minecraft/world/level/block/grower/BirchTreeGrower
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	cuc	net/minecraft/world/level/block/grower/DarkOakTreeGrower
	m	(Lalu;)Lhc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	cud	net/minecraft/world/level/block/grower/JungleTreeGrower
	m	(Lalu;)Lhc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	cue	net/minecraft/world/level/block/grower/MangroveTreeGrower
	m	(F)V	<init>	<init>
		p	1		tallChance
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
	f	F	a	tallProbability
c	cuf	net/minecraft/world/level/block/grower/OakTreeGrower
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	cug	net/minecraft/world/level/block/grower/SpruceTreeGrower
	m	(Lalu;)Lhc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lalu;Z)Lhc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	cuh	net/minecraft/world/level/block/grower/package-info
c	cui	net/minecraft/world/level/block/package-info
c	cuj	net/minecraft/world/level/block/piston/MovingPistonBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;)Lcun;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lcur;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcgb;Lgt;Lcur;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Ldrg$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcur;)Lcsl;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgt;Lcur;Lcur;Lgy;ZZ)Lcsl;	a	newMovingBlockEntity
		p	0		pos
		p	1		state
		p	2		pushedBlock
		p	3		facing
		p	4		extending
		p	5		source
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcvl;	a	FACING
	f	Lcvp;	b	TYPE
c	cuk	net/minecraft/world/level/block/piston/PistonBaseBlock
	m	(ZLcuq$c;)V	<init>	<init>
		p	1		sticky
		p	2		settings
	m	(Lcca;)Lcur;	a	getStateForPlacement
		p	1		ctx
	m	(Lcga;Lgt;Lcur;)V	a	checkIfExtend
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbbf;Lcaa;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcga;Lgt;Lgy;)Z	a	getNeighborSignal
		p	1		world
		p	2		pos
		p	3		pistonFace
	m	(Lcga;Lgt;Lgy;Z)Z	a	moveBlocks
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retract
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lgy;ZLgy;)Z	a	isPushable
		p	0		state
		p	1		world
		p	2		pos
		p	3		direction
		p	4		canBreak
		p	5		pistonDir
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Lcvi;	b	EXTENDED
	f	I	c	TRIGGER_EXTEND
	f	I	d	TRIGGER_CONTRACT
	f	I	e	TRIGGER_DROP
	f	F	f	PLATFORM_THICKNESS
	f	Ldwm;	g	EAST_AABB
	f	Ldwm;	h	WEST_AABB
	f	Ldwm;	i	SOUTH_AABB
	f	Ldwm;	j	NORTH_AABB
	f	Ldwm;	k	UP_AABB
	f	Ldwm;	l	DOWN_AABB
	f	Z	m	isSticky
c	cuk$1	net/minecraft/world/level/block/piston/PistonBaseBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$material$PushReaction
c	cul	net/minecraft/world/level/block/piston/PistonHeadBlock
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	(Lcfg;Lgt;Lcur;)Lcaa;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Lcur;Lbtf;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lcur;)Z	a	isFittingBase
		p	1		headState
		p	2		pistonState
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcus$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgy;Z)Ldwm;	a	calculateShape
		p	0		direction
		p	1		shortHead
	m	(Z)[Ldwm;	a	makeShapes
		p	0		shortHead
	m	(ZLgy;)Ldwm;	a	lambda$makeShapes$0
		p	1		direction
	m	(I)[Ldwm;	b	lambda$makeShapes$1
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldwm;	E	DOWN_ARM_AABB
	f	Ldwm;	F	SOUTH_ARM_AABB
	f	Ldwm;	G	NORTH_ARM_AABB
	f	Ldwm;	H	EAST_ARM_AABB
	f	Ldwm;	I	WEST_ARM_AABB
	f	Ldwm;	J	SHORT_UP_ARM_AABB
	f	Ldwm;	K	SHORT_DOWN_ARM_AABB
	f	Ldwm;	L	SHORT_SOUTH_ARM_AABB
	f	Ldwm;	M	SHORT_NORTH_ARM_AABB
	f	Ldwm;	N	SHORT_EAST_ARM_AABB
	f	Ldwm;	O	SHORT_WEST_ARM_AABB
	f	[Ldwm;	P	SHAPES_SHORT
	f	[Ldwm;	Q	SHAPES_LONG
	f	Lcvp;	b	TYPE
	f	Lcvi;	c	SHORT
	f	F	d	PLATFORM
	f	Ldwm;	e	EAST_AABB
	f	Ldwm;	f	WEST_AABB
	f	Ldwm;	g	SOUTH_AABB
	f	Ldwm;	h	NORTH_AABB
	f	Ldwm;	i	UP_AABB
	f	Ldwm;	j	DOWN_AABB
	f	F	k	AABB_OFFSET
	f	F	l	EDGE_MIN
	f	F	m	EDGE_MAX
	f	Ldwm;	n	UP_ARM_AABB
c	cul$1	net/minecraft/world/level/block/piston/PistonHeadBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cum	net/minecraft/world/level/block/piston/PistonMath
	m	(Ldvo;Lgy;D)Ldvo;	a	getMovementArea
		p	0		box
		p	1		direction
		p	2		length
c	cum$1	net/minecraft/world/level/block/piston/PistonMath$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cun	net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	m	(Lgt;Lcur;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgt;Lcur;Lcur;Lgy;ZZ)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		pushedBlock
		p	4		facing
		p	5		extending
		p	6		source
	m	(F)F	a	getProgress
		p	1		tickDelta
	m	(Lcfg;Lgt;)Ldwm;	a	getCollisionShape
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;FLcun;)V	a	moveCollidedEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Lcga;Lgt;Lcur;Lcun;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldvo;Lbaq;)Z	a	matchesStickyCritera
		p	0		box
		p	1		entity
	m	(Ldvo;Lgy;Ldvo;)D	a	getMovement
	m	(Lgt;Lbaq;Lgy;D)V	a	fixEntityWithinPistonBase
		p	0		pos
		p	1		entity
		p	2		direction
		p	3		amount
	m	(Lgt;Ldvo;Lcun;)Ldvo;	a	moveByPositionAndProgress
		p	0		pos
		p	1		box
		p	2		blockEntity
	m	(Lgy;Lbaq;DLgy;)V	a	moveEntityByPiston
		p	1		entity
	m	(Lpj;)V	a	load
		p	1		nbt
	m	()Lpj;	ab_	getUpdateTag
	m	(F)F	b	getXOff
		p	1		tickDelta
	m	(Lcga;Lgt;FLcun;)V	b	moveStuckEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Ldvo;Lbaq;)Z	b	lambda$moveStuckEntities$1
		p	1		entity
	m	(Lpj;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isExtending
	m	(F)F	c	getYOff
		p	1		tickDelta
	m	()Lgy;	d	getDirection
	m	(F)F	d	getZOff
		p	1		tickDelta
	m	(F)F	e	getExtendedProgress
		p	1		progress
	m	()Z	f	isSourcePiston
	m	()Lgy;	g	getMovementDirection
	m	()Lcur;	i	getMovedState
	m	()V	j	finalTick
	m	()J	t	getLastTicked
	m	()Lcur;	w	getCollisionRelatedBlockState
	m	()Z	x	isStickyForEntities
	m	()Lgy;	y	lambda$static$0
	f	D	a	TICK_MOVEMENT
	f	I	b	TICKS_TO_EXTEND
	f	D	c	PUSH_OFFSET
	f	Lcur;	d	movedState
	f	Lgy;	e	direction
	f	Z	f	extending
	f	Z	g	isSourcePiston
	f	Ljava/lang/ThreadLocal;	h	NOCLIP
	f	F	i	progress
	f	F	j	progressO
	f	J	k	lastTicked
	f	I	l	deathTicks
c	cun$1	net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	cuo	net/minecraft/world/level/block/piston/PistonStructureResolver
	m	(Lcga;Lgt;Lgy;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retracted
	m	()Z	a	resolve
	m	(II)V	a	reorderListAtCollision
		p	1		from
		p	2		to
	m	(Lcur;)Z	a	isSticky
		p	0		state
	m	(Lcur;Lcur;)Z	a	canStickToEachOther
		p	0		state
		p	1		adjacentState
	m	(Lgt;)Z	a	addBranchingBlocks
		p	1		pos
	m	(Lgt;Lgy;)Z	a	addBlockLine
		p	1		pos
		p	2		dir
	m	()Lgy;	b	getPushDirection
	m	()Ljava/util/List;	c	getToPush
	m	()Ljava/util/List;	d	getToDestroy
	f	I	a	MAX_PUSH_DEPTH
	f	Lcga;	b	level
	f	Lgt;	c	pistonPos
	f	Z	d	extending
	f	Lgt;	e	startPos
	f	Lgy;	f	pushDirection
	f	Ljava/util/List;	g	toPush
	f	Ljava/util/List;	h	toDestroy
	f	Lgy;	i	pistonDirection
c	cup	net/minecraft/world/level/block/piston/package-info
c	cuq	net/minecraft/world/level/block/state/BlockBehaviour
	m	(Lcuq$c;)V	<init>	<init>
		p	1		settings
	m	()F	W_	getMaxHorizontalOffset
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcur;Lafo;Lgt;Lalu;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
		p	5		dropExperience
	m	(Lcur;Lbtf;Lcfg;Lgt;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Lcur;Lcca;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Lcur;Lcfg;Lgt;)Ldwm;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Lcur;Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcur;Lcga;Lgt;Lbtf;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Lcur;Lcga;Lgt;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lcur;Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Lcur;Lcgb;Lgt;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Lcur;Lcgd;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcnk;)Lcur;	a	mirror
		p	1		state
		p	2		mirror
	m	(Lcur;Lcoz;)Lcur;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lcur;Lcur;Lgy;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Lcur;Ldox;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Lcur;Ldrg$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Lcur;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcur;Lcfg;Lgt;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()F	aa_	getMaxVerticalOffset
	m	(Lcur;Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcur;Lcfg;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;Lcfg;Lgt;Lgy;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcur;Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcga;Lgt;Lcur;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcur;)Lcos;	b_	getRenderShape
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Ldwm;	b_	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;Lcfg;Lgt;Ldvy;)Ldwm;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcur;)Ldoy;	c_	getFluidState
		p	1		state
	m	(Lcur;)Ldpe;	d	getPistonPushReaction
		p	1		state
	m	(Lcur;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Ldwm;	f	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	f_	isSignalSource
		p	1		state
	m	(Lcur;Lcfg;Lgt;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcur;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Lcur;Lcfg;Lgt;)Z	h	isOcclusionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()Lbzw;	l	asItem
	m	()Lciw;	o	asBlock
	m	()Laaj;	r	getLootTable
	m	()Ldpd;	s	defaultMaterialColor
	m	()F	t	defaultDestroyTime
	f	[Lgy;	aE	UPDATE_SHAPE_ORDER
	f	Ldpc;	aF	material
	f	Z	aG	hasCollision
	f	F	aH	explosionResistance
	f	Z	aI	isRandomlyTicking
	f	Lcpz;	aJ	soundType
	f	F	aK	friction
	f	F	aL	speedFactor
	f	F	aM	jumpFactor
	f	Z	aN	dynamicShape
	f	Lcuq$c;	aO	properties
	f	Laaj;	aP	drops
c	cuq$1	net/minecraft/world/level/block/state/BlockBehaviour$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cuq$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	m	(Lciw;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()V	a	initCache
	m	(Lafo;Lgt;Lalu;)V	a	tick
		p	1		world
		p	2		pos
		p	3		random
	m	(Lafo;Lgt;Lcaa;Z)V	a	spawnAfterBreak
		p	1		world
		p	2		pos
		p	3		stack
		p	4		dropExperience
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lakh;Ljava/util/function/Predicate;)Z	a	is
		p	1		tag
		p	2		predicate
	m	(Lbtf;Lcfg;Lgt;)F	a	getDestroyProgress
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcca;)Z	a	canBeReplaced
		p	1		context
	m	(Lcfg;Lgt;)Z	a	propagatesSkylightDown
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Lbaq;)Z	a	entityCanStandOn
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lcfg;Lgt;Lbaq;Lgy;)Z	a	entityCanStandOnFace
		p	1		world
		p	2		pos
		p	3		entity
		p	4		direction
	m	(Lcfg;Lgt;Lbau;)Z	a	isValidSpawn
		p	1		world
		p	2		pos
		p	3		type
	m	(Lcfg;Lgt;Ldpp;)Z	a	isPathfindable
		p	1		world
		p	2		pos
		p	3		type
	m	(Lcfg;Lgt;Ldvy;)Ldwm;	a	getShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lcfg;Lgt;Lgy;)Ldwm;	a	getFaceOcclusionShape
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcfg;Lgt;Lgy;Lcqp;)Z	a	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
		p	4		shapeType
	m	(Lcga;Lbtf;Lazl;Ldvp;)Lazm;	a	use
		p	1		world
		p	2		player
		p	3		hand
		p	4		hit
	m	(Lcga;Lcsn;)Lcsm;	a	getTicker
		p	1		world
		p	2		blockEntityType
	m	(Lcga;Lcur;Ldvp;Lbtx;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcga;Lgt;)I	a	getAnalogOutputSignal
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;II)Z	a	triggerEvent
		p	1		world
		p	2		pos
		p	3		type
		p	4		data
	m	(Lcga;Lgt;Lbaq;)V	a	entityInside
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lcga;Lgt;Lbtf;)V	a	attack
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcga;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		world
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcga;Lgt;Lcur;Z)V	a	onPlace
		p	1		world
		p	2		pos
		p	3		state
		p	4		notify
	m	(Lcgb;Lgt;I)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Lcgb;Lgt;II)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lcgd;Lgt;)Z	a	canSurvive
		p	1		world
		p	2		pos
	m	(Lciw;)Z	a	is
		p	1		block
	m	(Lcnk;)Lcur;	a	mirror
		p	1		mirror
	m	(Lcoz;)Lcur;	a	rotate
		p	1		rotation
	m	(Lcur;Lgy;)Z	a	skipRendering
		p	1		state
		p	2		direction
	m	(Ldox;)Z	a	canBeReplaced
		p	1		fluid
	m	(Ldrg$a;)Ljava/util/List;	a	getDrops
		p	1		builder
	m	(Lgt;)J	a	getSeed
		p	1		pos
	m	(Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		direction
		p	2		neighborState
		p	3		world
		p	4		pos
		p	5		neighborPos
	m	(Lhe;)Z	a	is
		p	1		blocks
	m	()Lciw;	b	getBlock
	m	(Lafo;Lgt;Lalu;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcfg;Lgt;)I	b	getLightBlock
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Ldvy;)Ldwm;	b	getCollisionShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lcfg;Lgt;Lgy;)I	b	getSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcga;Lgt;)Lazp;	b	getMenuProvider
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lcur;Z)V	b	onRemove
		p	1		world
		p	2		pos
		p	3		state
		p	4		moved
	m	(Lcgb;Lgt;I)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Lcgb;Lgt;II)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	()Lhc;	c	getBlockHolder
	m	(Lcfg;Lgt;)Ldwm;	c	getOcclusionShape
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Ldvy;)Ldwm;	c	getVisualShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lcfg;Lgt;Lgy;)I	c	getDirectSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	()Ldpc;	d	getMaterial
	m	(Lcfg;Lgt;)Ldpd;	d	getMapColor
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Lgy;)Z	d	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
	m	()Z	e	hasLargeCollisionShape
	m	(Lcfg;Lgt;)Z	e	emissiveRendering
		p	1		world
		p	2		pos
	m	()Z	f	useShapeForLightOcclusion
	m	(Lcfg;Lgt;)F	f	getShadeBrightness
		p	1		world
		p	2		pos
	m	()I	g	getLightEmission
	m	(Lcfg;Lgt;)Z	g	isRedstoneConductor
		p	1		world
		p	2		pos
	m	()Z	h	isAir
	m	(Lcfg;Lgt;)F	h	getDestroySpeed
		p	1		world
		p	2		pos
	m	()Lcos;	i	getRenderShape
	m	(Lcfg;Lgt;)Z	i	isSolidRender
		p	1		world
		p	2		pos
	m	()Z	j	isSignalSource
	m	(Lcfg;Lgt;)Ldwm;	j	getShape
		p	1		world
		p	2		pos
	m	()Z	k	hasAnalogOutputSignal
	m	(Lcfg;Lgt;)Ldwm;	k	getCollisionShape
		p	1		world
		p	2		pos
	m	()Ldpe;	l	getPistonPushReaction
	m	(Lcfg;Lgt;)Ldwm;	l	getBlockSupportShape
		p	1		world
		p	2		pos
	m	()Z	m	canOcclude
	m	(Lcfg;Lgt;)Ldwm;	m	getInteractionShape
		p	1		world
		p	2		pos
	m	()Ljava/util/stream/Stream;	n	getTags
	m	(Lcfg;Lgt;)Ldvt;	n	getOffset
		p	1		world
		p	2		pos
	m	()Z	o	hasBlockEntity
	m	(Lcfg;Lgt;)Z	o	isSuffocating
		p	1		world
		p	2		pos
	m	()Ldoy;	p	getFluidState
	m	(Lcfg;Lgt;)Z	p	isViewBlocking
		p	1		world
		p	2		pos
	m	()Z	q	isRandomlyTicking
	m	(Lcfg;Lgt;)Z	q	hasPostProcess
		p	1		world
		p	2		pos
	m	()Lcpz;	r	getSoundType
	m	(Lcfg;Lgt;)Z	r	isCollisionShapeFullBlock
		p	1		world
		p	2		pos
	m	()Lcur;	s	asState
	m	()Z	t	requiresCorrectToolForDrops
	m	()Lcuq$b;	u	getOffsetType
	f	Lcuq$a$a;	a	cache
	f	I	b	lightEmission
	f	Z	g	useShapeForLightOcclusion
	f	Z	h	isAir
	f	Ldpc;	i	material
	f	Ldpd;	j	materialColor
	f	F	k	destroySpeed
	f	Z	l	requiresCorrectToolForDrops
	f	Z	m	canOcclude
	f	Lcuq$e;	n	isRedstoneConductor
	f	Lcuq$e;	o	isSuffocating
	f	Lcuq$e;	p	isViewBlocking
	f	Lcuq$e;	q	hasPostProcess
	f	Lcuq$e;	r	emissiveRendering
	f	Lcuq$b;	s	offsetType
c	cuq$a$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	m	(Lcur;)V	<init>	<init>
		p	1		state
	m	(Lgy$a;)Z	a	lambda$new$0
		p	1		axis
	m	(Lgy;Lcqp;)Z	a	isFaceSturdy
		p	1		direction
		p	2		shapeType
	m	(Lgy;Lcqp;)I	b	getFaceSupportIndex
		p	0		direction
		p	1		shapeType
	f	Z	a	solidRender
	f	Ldwm;	b	collisionShape
	f	Z	c	largeCollisionShape
	f	Z	d	isCollisionShapeFullBlock
	f	[Lgy;	e	DIRECTIONS
	f	I	f	SUPPORT_TYPE_COUNT
	f	Z	g	propagatesSkylightDown
	f	I	h	lightBlock
	f	[Ldwm;	i	occlusionShapes
	f	[Z	j	faceSturdy
c	cuq$b	net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	m	()[Lcuq$b;	a	$values
	f	Lcuq$b;	a	NONE
	f	Lcuq$b;	b	XZ
	f	Lcuq$b;	c	XYZ
	f	[Lcuq$b;	d	$VALUES
c	cuq$c	net/minecraft/world/level/block/state/BlockBehaviour$Properties
	m	(Ldpc;Ldpd;)V	<init>	<init>
		p	1		material
		p	2		mapColorProvider
	m	(Ldpc;Ljava/util/function/Function;)V	<init>	<init>
		p	1		material
		p	2		mapColorProvider
	m	()Lcuq$c;	a	noCollission
	m	(F)Lcuq$c;	a	friction
		p	1		slipperiness
	m	(FF)Lcuq$c;	a	strength
		p	1		hardness
		p	2		resistance
	m	(Lciw;)Lcuq$c;	a	dropsLike
		p	1		source
	m	(Lcpz;)Lcuq$c;	a	sound
		p	1		soundGroup
	m	(Lcuq$b;)Lcuq$c;	a	offsetType
		p	1		offsetType
	m	(Lcuq$b;Lcur;)Lcuq$b;	a	lambda$offsetType$9
		p	1		state
	m	(Lcuq$d;)Lcuq$c;	a	isValidSpawn
		p	1		predicate
	m	(Lcuq$e;)Lcuq$c;	a	isRedstoneConductor
		p	1		predicate
	m	(Lcuq;)Lcuq$c;	a	copy
		p	0		block
	m	(Lcur;)Lcuq$b;	a	lambda$new$6
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	a	lambda$new$5
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lcfg;Lgt;Lbau;)Z	a	lambda$new$1
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldpc;)Lcuq$c;	a	of
		p	0		material
	m	(Ldpc;Lbyt;)Lcuq$c;	a	of
		p	0		material
		p	1		color
	m	(Ldpc;Ldpd;)Lcuq$c;	a	of
		p	0		material
		p	1		color
	m	(Ldpc;Ljava/util/function/Function;)Lcuq$c;	a	of
		p	0		material
		p	1		mapColor
	m	(Ldpd;)Lcuq$c;	a	color
		p	1		color
	m	(Ldpd;Lcur;)Ldpd;	a	lambda$color$8
		p	1		state
	m	(Ljava/util/function/Function;)Lcuq$c;	a	offsetType
		p	1		offsetType
	m	(Ljava/util/function/ToIntFunction;)Lcuq$c;	a	lightLevel
		p	1		luminance
	m	()Lcuq$c;	b	noOcclusion
	m	(F)Lcuq$c;	b	speedFactor
		p	1		velocityMultiplier
	m	(Lcuq$e;)Lcuq$c;	b	isSuffocating
		p	1		predicate
	m	(Lcur;)I	b	lambda$new$0
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	b	lambda$new$4
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldpd;Lcur;)Ldpd;	b	lambda$new$7
		p	1		state
	m	()Lcuq$c;	c	instabreak
	m	(F)Lcuq$c;	c	jumpFactor
		p	1		jumpVelocityMultiplier
	m	(Lcuq$e;)Lcuq$c;	c	isViewBlocking
		p	1		predicate
	m	(Lcur;Lcfg;Lgt;)Z	c	lambda$new$3
		p	1		state
		p	2		world
		p	3		pos
	m	()Lcuq$c;	d	randomTicks
	m	(F)Lcuq$c;	d	strength
		p	1		strength
	m	(Lcuq$e;)Lcuq$c;	d	hasPostProcess
		p	1		predicate
	m	(Lcur;Lcfg;Lgt;)Z	d	lambda$new$2
		p	0		state
		p	1		world
		p	2		pos
	m	()Lcuq$c;	e	dynamicShape
	m	(F)Lcuq$c;	e	destroyTime
		p	1		hardness
	m	(Lcuq$e;)Lcuq$c;	e	emissiveRendering
		p	1		predicate
	m	()Lcuq$c;	f	noLootTable
	m	(F)Lcuq$c;	f	explosionResistance
		p	1		resistance
	m	()Lcuq$c;	g	air
	m	()Lcuq$c;	h	requiresCorrectToolForDrops
	f	Ldpc;	a	material
	f	Ljava/util/function/Function;	b	materialColor
	f	Z	c	hasCollision
	f	Lcpz;	d	soundType
	f	Ljava/util/function/ToIntFunction;	e	lightEmission
	f	F	f	explosionResistance
	f	F	g	destroyTime
	f	Z	h	requiresCorrectToolForDrops
	f	Z	i	isRandomlyTicking
	f	F	j	friction
	f	F	k	speedFactor
	f	F	l	jumpFactor
	f	Laaj;	m	drops
	f	Z	n	canOcclude
	f	Z	o	isAir
	f	Lcuq$d;	p	isValidSpawn
	f	Lcuq$e;	q	isRedstoneConductor
	f	Lcuq$e;	r	isSuffocating
	f	Lcuq$e;	s	isViewBlocking
	f	Lcuq$e;	t	hasPostProcess
	f	Lcuq$e;	u	emissiveRendering
	f	Z	v	dynamicShape
	f	Ljava/util/function/Function;	w	offsetType
c	cuq$d	net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
	m	(Lcur;Lcfg;Lgt;Ljava/lang/Object;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
c	cuq$e	net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
	m	(Lcur;Lcfg;Lgt;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
c	cur	net/minecraft/world/level/block/state/BlockState
	m	(Lciw;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()Lcur;	s	asState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	cus	net/minecraft/world/level/block/state/StateDefinition
	m	(Ljava/util/function/Function;Ljava/lang/Object;Lcus$b;Ljava/util/Map;)V	<init>	<init>
		p	1		defaultStateGetter
		p	2		owner
		p	3		factory
		p	4		propertiesMap
	m	()Lcom/google/common/collect/ImmutableList;	a	getPossibleStates
	m	(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lcvu;)Lcom/mojang/serialization/MapCodec;	a	appendPropertyCodec
		p	0		mapCodec
		p	1		defaultStateGetter
		p	2		key
		p	3		property
	m	(Lcus$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V	a	lambda$new$3
	m	(Lcvu;Lcom/mojang/datafixers/util/Pair;)Lcut;	a	lambda$appendPropertyCodec$6
	m	(Lcvu;Lcut;)Lcom/mojang/datafixers/util/Pair;	a	lambda$appendPropertyCodec$7
	m	(Lcvu;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$new$2
	m	(Lcvu;Ljava/util/function/Supplier;)Lcvu$a;	a	lambda$appendPropertyCodec$5
	m	(Ljava/lang/String;)Lcvu;	a	getProperty
		p	1		name
	m	(Ljava/util/List;Lcvu;Ljava/lang/Comparable;)Ljava/util/List;	a	lambda$new$1
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcut;	a	lambda$new$0
	m	()Lcut;	b	any
	m	(Ljava/lang/String;)V	b	lambda$appendPropertyCodec$4
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
	f	Ljava/util/regex/Pattern;	a	NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	propertiesByName
	f	Lcom/google/common/collect/ImmutableList;	d	states
c	cus$a	net/minecraft/world/level/block/state/StateDefinition$Builder
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		owner
	m	(Lcvu;)V	a	validateProperty
		p	1		property
	m	(Ljava/util/function/Function;Lcus$b;)Lcus;	a	create
		p	1		defaultStateGetter
		p	2		factory
	m	([Lcvu;)Lcus$a;	a	add
		p	1		properties
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	properties
c	cus$b	net/minecraft/world/level/block/state/StateDefinition$Factory
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object;	create	create
		p	1		owner
		p	2		entries
		p	3		codec
c	cut	net/minecraft/world/level/block/state/StateHolder
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		owner
		p	2		entries
		p	3		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	1		ownerToStateFunction
	m	(Lcut;)Ljava/lang/Object;	a	lambda$codec$0
	m	(Lcut;Ljava/util/Optional;)Lcut;	a	lambda$codec$1
	m	(Lcvu;)Ljava/lang/Object;	a	cycle
		p	1		property
	m	(Lcvu;Ljava/lang/Comparable;)Ljava/lang/Object;	a	setValue
		p	1		property
		p	2		value
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInCollection
		p	0		values
		p	1		value
	m	(Ljava/util/Map;)V	a	populateNeighbours
		p	1		states
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	lambda$codec$2
	m	(Lcvu;)Z	b	hasProperty
		p	1		property
	m	(Lcvu;Ljava/lang/Comparable;)Ljava/util/Map;	b	makeNeighbourValues
		p	1		property
		p	2		value
	m	(Lcvu;)Ljava/lang/Comparable;	c	getValue
		p	1		property
	m	(Lcvu;)Ljava/util/Optional;	d	getOptionalValue
		p	1		property
	m	()Ljava/util/Collection;	v	getProperties
	m	()Lcom/google/common/collect/ImmutableMap;	w	getValues
	f	Ljava/util/function/Function;	a	PROPERTY_ENTRY_TO_STRING_FUNCTION
	f	Lcom/google/common/collect/ImmutableMap;	b	values
	f	Ljava/lang/String;	c	NAME_TAG
	f	Ljava/lang/String;	d	PROPERTIES_TAG
	f	Ljava/lang/Object;	e	owner
	f	Lcom/mojang/serialization/MapCodec;	f	propertiesCodec
	f	Lcom/google/common/collect/Table;	g	neighbours
c	cut$1	net/minecraft/world/level/block/state/StateHolder$1
	m	(Lcvu;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		property
		p	2		value
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
c	cuu	net/minecraft/world/level/block/state/package-info
c	cuv	net/minecraft/world/level/block/state/pattern/BlockInWorld
	m	(Lcgd;Lgt;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		forceLoad
	m	()Lcur;	a	getState
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	hasState
		p	0		state
	m	(Ljava/util/function/Predicate;Lcuv;)Z	a	lambda$hasState$0
		p	1		pos
	m	()Lcsl;	b	getEntity
	m	()Lcgd;	c	getLevel
	m	()Lgt;	d	getPos
	f	Lcgd;	a	level
	f	Lgt;	b	pos
	f	Z	c	loadChunks
	f	Lcur;	d	state
	f	Lcsl;	e	entity
	f	Z	f	cachedEntity
c	cuw	net/minecraft/world/level/block/state/pattern/BlockPattern
	m	([[[Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		pattern
	m	()I	a	getDepth
	m	(Lcgd;Lgt;)Lcuw$b;	a	find
		p	1		world
		p	2		pos
	m	(Lcgd;Lgt;Lgy;Lgy;)Lcuw$b;	a	matches
		p	1		world
		p	2		frontTopLeft
		p	3		forwards
		p	4		up
	m	(Lcgd;Z)Lcom/google/common/cache/LoadingCache;	a	createLevelCache
		p	0		world
		p	1		forceLoad
	m	(Lgt;Lgy;Lgy;III)Lgt;	a	translateAndRotate
		p	0		pos
		p	1		forwards
		p	2		up
		p	3		offsetLeft
		p	4		offsetDown
		p	5		offsetForwards
	m	(Lgt;Lgy;Lgy;Lcom/google/common/cache/LoadingCache;)Lcuw$b;	a	matches
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
	m	()I	b	getHeight
	m	()I	c	getWidth
	m	()[[[Ljava/util/function/Predicate;	d	getPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
c	cuw$a	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	m	(Lcgd;Z)V	<init>	<init>
		p	1		world
		p	2		forceLoad
	m	(Lgt;)Lcuv;	a	load
	f	Lcgd;	a	level
	f	Z	b	loadChunks
c	cuw$b	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	m	(Lgt;Lgy;Lgy;Lcom/google/common/cache/LoadingCache;III)V	<init>	<init>
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
		p	5		width
		p	6		height
		p	7		depth
	m	()Lgt;	a	getFrontTopLeft
	m	(III)Lcuv;	a	getBlock
		p	1		offsetLeft
		p	2		offsetDown
		p	3		offsetForwards
	m	()Lgy;	b	getForwards
	m	()Lgy;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()I	f	getDepth
	f	Lgt;	a	frontTopLeft
	f	Lgy;	b	forwards
	f	Lgy;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
c	cux	net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	m	()Lcux;	a	start
	m	(CLjava/util/function/Predicate;)Lcux;	a	where
		p	1		key
		p	2		predicate
	m	(Lcuv;)Z	a	lambda$new$0
		p	0		pos
	m	([Ljava/lang/String;)Lcux;	a	aisle
		p	1		pattern
	m	()Lcuw;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	createPattern
	m	()V	d	ensureAllCharactersMatched
	f	Lcom/google/common/base/Joiner;	a	COMMA_JOINED
	f	Ljava/util/List;	b	pattern
	f	Ljava/util/Map;	c	lookup
	f	I	d	height
	f	I	e	width
c	cuy	net/minecraft/world/level/block/state/pattern/package-info
c	cuz	net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	m	(Ldpc;)V	<init>	<init>
		p	1		material
	m	(Lcur;)Z	a	test
	m	(Ldpc;)Lcuz;	a	forMaterial
		p	0		material
	f	Lcuz;	a	AIR
	f	Ldpc;	b	material
c	cuz$1	net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate$1
	m	(Ldpc;)V	<init>	<init>
		p	1		material
	m	(Lcur;)Z	a	test
c	cva	net/minecraft/world/level/block/state/predicate/BlockPredicate
	m	(Lciw;)V	<init>	<init>
		p	1		block
	m	(Lciw;)Lcva;	a	forBlock
		p	0		block
	m	(Lcur;)Z	a	test
	f	Lciw;	a	block
c	cvb	net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	m	(Lcus;)V	<init>	<init>
		p	1		manager
	m	(Lciw;)Lcvb;	a	forBlock
		p	0		block
	m	(Lcur;)Z	a	test
	m	(Lcur;Lcvu;Ljava/util/function/Predicate;)Z	a	applies
		p	1		blockState
		p	2		property
		p	3		predicate
	m	(Lcvu;Ljava/util/function/Predicate;)Lcvb;	a	where
		p	1		property
		p	2		predicate
	m	(Lcur;)Z	b	lambda$static$0
		p	0		state
	f	Ljava/util/function/Predicate;	a	ANY
	f	Lcus;	b	definition
	f	Ljava/util/Map;	c	properties
c	cvc	net/minecraft/world/level/block/state/predicate/package-info
c	cvd	net/minecraft/world/level/block/state/properties/AttachFace
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvd;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvd;	a	FLOOR
	f	Lcvd;	b	WALL
	f	Lcvd;	c	CEILING
	f	Ljava/lang/String;	d	name
	f	[Lcvd;	e	$VALUES
c	cve	net/minecraft/world/level/block/state/properties/BambooLeaves
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcve;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcve;	a	NONE
	f	Lcve;	b	SMALL
	f	Lcve;	c	LARGE
	f	Ljava/lang/String;	d	name
	f	[Lcve;	e	$VALUES
c	cvf	net/minecraft/world/level/block/state/properties/BedPart
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvf;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvf;	a	HEAD
	f	Lcvf;	b	FOOT
	f	Ljava/lang/String;	c	name
	f	[Lcvf;	d	$VALUES
c	cvg	net/minecraft/world/level/block/state/properties/BellAttachType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvg;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvg;	a	FLOOR
	f	Lcvg;	b	CEILING
	f	Lcvg;	c	SINGLE_WALL
	f	Lcvg;	d	DOUBLE_WALL
	f	Ljava/lang/String;	e	name
	f	[Lcvg;	f	$VALUES
c	cvh	net/minecraft/world/level/block/state/properties/BlockStateProperties
	m	(Lcvv;)Z	a	lambda$static$1
		p	0		shape
	m	(Lgy;)Z	a	lambda$static$0
		p	0		facing
	f	Lcvi;	A	TRIGGERED
	f	Lcvi;	B	UNSTABLE
	f	Lcvi;	C	WATERLOGGED
	f	Lcvi;	D	VINE_END
	f	Lcvi;	E	BERRIES
	f	Lcvi;	F	BLOOM
	f	Lcvi;	G	SHRIEKING
	f	Lcvi;	H	CAN_SUMMON
	f	Lcvp;	I	HORIZONTAL_AXIS
	f	Lcvp;	J	AXIS
	f	Lcvi;	K	UP
	f	Lcvi;	L	DOWN
	f	Lcvi;	M	NORTH
	f	Lcvi;	N	EAST
	f	Lcvi;	O	SOUTH
	f	Lcvi;	P	WEST
	f	Lcvl;	Q	FACING
	f	Lcvl;	R	FACING_HOPPER
	f	Lcvl;	S	HORIZONTAL_FACING
	f	Lcvp;	T	ORIENTATION
	f	Lcvp;	U	ATTACH_FACE
	f	Lcvp;	V	BELL_ATTACHMENT
	f	Lcvp;	W	EAST_WALL
	f	Lcvp;	X	NORTH_WALL
	f	Lcvp;	Y	SOUTH_WALL
	f	Lcvp;	Z	WEST_WALL
	f	Lcvr;	aA	DELAY
	f	I	aB	MAX_DISTANCE
	f	Lcvr;	aC	DISTANCE
	f	Lcvr;	aD	EGGS
	f	Lcvr;	aE	HATCH
	f	Lcvr;	aF	LAYERS
	f	I	aG	MIN_LEVEL
	f	I	aH	MIN_LEVEL_CAULDRON
	f	I	aI	MAX_LEVEL_3
	f	I	aJ	MAX_LEVEL_8
	f	Lcvr;	aK	LEVEL_CAULDRON
	f	Lcvr;	aL	LEVEL_COMPOSTER
	f	Lcvi;	a	ATTACHED
	f	Lcvr;	aM	LEVEL_FLOWING
	f	Lcvr;	aN	LEVEL_HONEY
	f	I	aO	MAX_LEVEL_15
	f	Lcvr;	aP	LEVEL
	f	Lcvr;	aQ	MOISTURE
	f	Lcvr;	aR	NOTE
	f	Lcvr;	aS	PICKLES
	f	Lcvr;	aT	POWER
	f	Lcvr;	aU	STAGE
	f	I	aV	STABILITY_MAX_DISTANCE
	f	Lcvr;	aW	STABILITY_DISTANCE
	f	I	aX	MIN_RESPAWN_ANCHOR_CHARGES
	f	I	aY	MAX_RESPAWN_ANCHOR_CHARGES
	f	Lcvr;	aZ	RESPAWN_ANCHOR_CHARGES
	f	Lcvp;	aa	EAST_REDSTONE
	f	Lcvp;	ab	NORTH_REDSTONE
	f	Lcvp;	ac	SOUTH_REDSTONE
	f	Lcvp;	ad	WEST_REDSTONE
	f	Lcvp;	ae	DOUBLE_BLOCK_HALF
	f	Lcvp;	af	HALF
	f	Lcvp;	ag	RAIL_SHAPE
	f	Lcvp;	ah	RAIL_SHAPE_STRAIGHT
	f	I	ai	MAX_AGE_1
	f	I	aj	MAX_AGE_2
	f	I	ak	MAX_AGE_3
	f	I	al	MAX_AGE_4
	f	I	am	MAX_AGE_5
	f	I	an	MAX_AGE_7
	f	I	ao	MAX_AGE_15
	f	I	ap	MAX_AGE_25
	f	Lcvr;	aq	AGE_1
	f	Lcvr;	ar	AGE_2
	f	Lcvr;	as	AGE_3
	f	Lcvr;	at	AGE_4
	f	Lcvr;	au	AGE_5
	f	Lcvr;	av	AGE_7
	f	Lcvr;	aw	AGE_15
	f	Lcvr;	ax	AGE_25
	f	Lcvr;	ay	BITES
	f	Lcvr;	az	CANDLES
	f	Lcvi;	b	BOTTOM
	f	I	ba	MAX_ROTATIONS_16
	f	Lcvr;	bb	ROTATION_16
	f	Lcvp;	bc	BED_PART
	f	Lcvp;	bd	CHEST_TYPE
	f	Lcvp;	be	MODE_COMPARATOR
	f	Lcvp;	bf	DOOR_HINGE
	f	Lcvp;	bg	NOTEBLOCK_INSTRUMENT
	f	Lcvp;	bh	PISTON_TYPE
	f	Lcvp;	bi	SLAB_TYPE
	f	Lcvp;	bj	STAIRS_SHAPE
	f	Lcvp;	bk	STRUCTUREBLOCK_MODE
	f	Lcvp;	bl	BAMBOO_LEAVES
	f	Lcvp;	bm	TILT
	f	Lcvl;	bn	VERTICAL_DIRECTION
	f	Lcvp;	bo	DRIPSTONE_THICKNESS
	f	Lcvp;	bp	SCULK_SENSOR_PHASE
	f	Lcvi;	c	CONDITIONAL
	f	Lcvi;	d	DISARMED
	f	Lcvi;	e	DRAG
	f	Lcvi;	f	ENABLED
	f	Lcvi;	g	EXTENDED
	f	Lcvi;	h	EYE
	f	Lcvi;	i	FALLING
	f	Lcvi;	j	HANGING
	f	Lcvi;	k	HAS_BOTTLE_0
	f	Lcvi;	l	HAS_BOTTLE_1
	f	Lcvi;	m	HAS_BOTTLE_2
	f	Lcvi;	n	HAS_RECORD
	f	Lcvi;	o	HAS_BOOK
	f	Lcvi;	p	INVERTED
	f	Lcvi;	q	IN_WALL
	f	Lcvi;	r	LIT
	f	Lcvi;	s	LOCKED
	f	Lcvi;	t	OCCUPIED
	f	Lcvi;	u	OPEN
	f	Lcvi;	v	PERSISTENT
	f	Lcvi;	w	POWERED
	f	Lcvi;	x	SHORT
	f	Lcvi;	y	SIGNAL_FIRE
	f	Lcvi;	z	SNOWY
c	cvi	net/minecraft/world/level/block/state/properties/BooleanProperty
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Lcvi;	a	create
		p	0		name
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
c	cvj	net/minecraft/world/level/block/state/properties/ChestType
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		opposite
	m	()Lcvj;	a	getOpposite
	m	()[Lcvj;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvj;	a	SINGLE
	f	Lcvj;	b	LEFT
	f	Lcvj;	c	RIGHT
	f	[Lcvj;	d	BY_ID
	f	Ljava/lang/String;	e	name
	f	I	f	opposite
	f	[Lcvj;	g	$VALUES
c	cvk	net/minecraft/world/level/block/state/properties/ComparatorMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvk;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvk;	a	COMPARE
	f	Lcvk;	b	SUBTRACT
	f	Ljava/lang/String;	c	name
	f	[Lcvk;	d	$VALUES
c	cvl	net/minecraft/world/level/block/state/properties/DirectionProperty
	m	(Ljava/lang/String;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		values
	m	(Lgy;)Z	a	lambda$create$0
	m	(Ljava/lang/String;)Lcvl;	a	create
		p	0		name
	m	(Ljava/lang/String;Ljava/util/Collection;)Lcvl;	a	create
		p	0		name
		p	1		values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Lcvl;	a	create
		p	0		name
		p	1		filter
	m	(Ljava/lang/String;[Lgy;)Lcvl;	a	create
		p	0		name
		p	1		values
c	cvm	net/minecraft/world/level/block/state/properties/DoorHingeSide
	m	()[Lcvm;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvm;	a	LEFT
	f	Lcvm;	b	RIGHT
	f	[Lcvm;	c	$VALUES
c	cvn	net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	m	()[Lcvn;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvn;	a	UPPER
	f	Lcvn;	b	LOWER
	f	[Lcvn;	c	$VALUES
c	cvo	net/minecraft/world/level/block/state/properties/DripstoneThickness
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvo;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvo;	a	TIP_MERGE
	f	Lcvo;	b	TIP
	f	Lcvo;	c	FRUSTUM
	f	Lcvo;	d	MIDDLE
	f	Lcvo;	e	BASE
	f	Ljava/lang/String;	f	name
	f	[Lcvo;	g	$VALUES
c	cvp	net/minecraft/world/level/block/state/properties/EnumProperty
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		values
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;Ljava/lang/Class;)Lcvp;	a	create
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lcvp;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lcvp;	a	create
		p	0		name
		p	1		type
		p	2		filter
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lcvp;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	()I	b	generateHashCode
	m	(Ljava/lang/Enum;)Z	b	lambda$create$0
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	Ljava/util/Map;	b	names
c	cvq	net/minecraft/world/level/block/state/properties/Half
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvq;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvq;	a	TOP
	f	Lcvq;	b	BOTTOM
	f	Ljava/lang/String;	c	name
	f	[Lcvq;	d	$VALUES
c	cvr	net/minecraft/world/level/block/state/properties/IntegerProperty
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1		name
		p	2		min
		p	3		max
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;II)Lcvr;	a	create
		p	0		name
		p	1		min
		p	2		max
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	I	b	min
	f	I	c	max
c	cvs	net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	m	(Ljava/lang/String;ILjava/lang/String;Lajd;)V	<init>	<init>
		p	3		name
		p	4		sound
	m	()Lajd;	a	getSoundEvent
	m	(Lcur;)Lcvs;	a	byState
		p	0		state
	m	()[Lcvs;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvs;	a	HARP
	f	Lcvs;	b	BASEDRUM
	f	Lcvs;	c	SNARE
	f	Lcvs;	d	HAT
	f	Lcvs;	e	BASS
	f	Lcvs;	f	FLUTE
	f	Lcvs;	g	BELL
	f	Lcvs;	h	GUITAR
	f	Lcvs;	i	CHIME
	f	Lcvs;	j	XYLOPHONE
	f	Lcvs;	k	IRON_XYLOPHONE
	f	Lcvs;	l	COW_BELL
	f	Lcvs;	m	DIDGERIDOO
	f	Lcvs;	n	BIT
	f	Lcvs;	o	BANJO
	f	Lcvs;	p	PLING
	f	Ljava/lang/String;	q	name
	f	Lajd;	r	soundEvent
	f	[Lcvs;	s	$VALUES
c	cvt	net/minecraft/world/level/block/state/properties/PistonType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvt;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvt;	a	DEFAULT
	f	Lcvt;	b	STICKY
	f	Ljava/lang/String;	c	name
	f	[Lcvt;	d	$VALUES
c	cvu	net/minecraft/world/level/block/state/properties/Property
	m	(Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		type
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Lcom/mojang/serialization/DynamicOps;Lcut;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	parseValue
		p	1		ops
		p	2		state
		p	3		input
	m	(Lcut;)Lcvu$a;	a	value
		p	1		state
	m	(Lcut;Ljava/lang/Comparable;)Lcut;	a	lambda$parseValue$2
		p	2		property
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$new$1
		p	1		value
	m	()I	b	generateHashCode
	m	(Ljava/lang/Comparable;)Lcvu$a;	b	value
		p	1		value
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	m	()Ljava/util/stream/Stream;	c	getAllValues
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$new$0
	m	()Lcom/mojang/serialization/Codec;	d	codec
	m	()Lcom/mojang/serialization/Codec;	e	valueCodec
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/lang/Class;	g	getValueClass
	f	Ljava/lang/Class;	a	clazz
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Integer;	c	hashCode
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Lcom/mojang/serialization/Codec;	e	valueCodec
c	cvu$a	net/minecraft/world/level/block/state/properties/Property$Value
	m	(Lcvu;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		property
		p	2		value
	m	()Lcvu;	a	property
	m	()Ljava/lang/Comparable;	b	value
	f	Lcvu;	a	property
	f	Ljava/lang/Comparable;	b	value
c	cvv	net/minecraft/world/level/block/state/properties/RailShape
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()Z	b	isAscending
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcvv;	d	$values
	f	Lcvv;	a	NORTH_SOUTH
	f	Lcvv;	b	EAST_WEST
	f	Lcvv;	c	ASCENDING_EAST
	f	Lcvv;	d	ASCENDING_WEST
	f	Lcvv;	e	ASCENDING_NORTH
	f	Lcvv;	f	ASCENDING_SOUTH
	f	Lcvv;	g	SOUTH_EAST
	f	Lcvv;	h	SOUTH_WEST
	f	Lcvv;	i	NORTH_WEST
	f	Lcvv;	j	NORTH_EAST
	f	Ljava/lang/String;	k	name
	f	[Lcvv;	l	$VALUES
c	cvw	net/minecraft/world/level/block/state/properties/RedstoneSide
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Z	a	isConnected
	m	()[Lcvw;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvw;	a	UP
	f	Lcvw;	b	SIDE
	f	Lcvw;	c	NONE
	f	Ljava/lang/String;	d	name
	f	[Lcvw;	e	$VALUES
c	cvx	net/minecraft/world/level/block/state/properties/SculkSensorPhase
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvx;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvx;	a	INACTIVE
	f	Lcvx;	b	ACTIVE
	f	Lcvx;	c	COOLDOWN
	f	Ljava/lang/String;	d	name
	f	[Lcvx;	e	$VALUES
c	cvy	net/minecraft/world/level/block/state/properties/SlabType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvy;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvy;	a	TOP
	f	Lcvy;	b	BOTTOM
	f	Lcvy;	c	DOUBLE
	f	Ljava/lang/String;	d	name
	f	[Lcvy;	e	$VALUES
c	cvz	net/minecraft/world/level/block/state/properties/StairsShape
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcvz;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvz;	a	STRAIGHT
	f	Lcvz;	b	INNER_LEFT
	f	Lcvz;	c	INNER_RIGHT
	f	Lcvz;	d	OUTER_LEFT
	f	Lcvz;	e	OUTER_RIGHT
	f	Ljava/lang/String;	f	name
	f	[Lcvz;	g	$VALUES
c	cwa	net/minecraft/world/level/block/state/properties/StructureMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Lrm;	a	getDisplayName
	m	()[Lcwa;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcwa;	a	SAVE
	f	Lcwa;	b	LOAD
	f	Lcwa;	c	CORNER
	f	Lcwa;	d	DATA
	f	Ljava/lang/String;	e	name
	f	Lrm;	f	displayName
	f	[Lcwa;	g	$VALUES
c	cwb	net/minecraft/world/level/block/state/properties/Tilt
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		stable
	m	()Z	a	causesVibration
	m	()[Lcwb;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcwb;	a	NONE
	f	Lcwb;	b	UNSTABLE
	f	Lcwb;	c	PARTIAL
	f	Lcwb;	d	FULL
	f	Ljava/lang/String;	e	name
	f	Z	f	causesVibration
	f	[Lcwb;	g	$VALUES
c	cwc	net/minecraft/world/level/block/state/properties/WallSide
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lcwc;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcwc;	a	NONE
	f	Lcwc;	b	LOW
	f	Lcwc;	c	TALL
	f	Ljava/lang/String;	d	name
	f	[Lcwc;	e	$VALUES
c	cwd	net/minecraft/world/level/block/state/properties/WoodType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/stream/Stream;	a	values
	m	(Lcwd;)Lcwd;	a	register
		p	0		type
	m	()Ljava/lang/String;	b	name
	f	Lcwd;	a	OAK
	f	Lcwd;	b	SPRUCE
	f	Lcwd;	c	BIRCH
	f	Lcwd;	d	ACACIA
	f	Lcwd;	e	JUNGLE
	f	Lcwd;	f	DARK_OAK
	f	Lcwd;	g	CRIMSON
	f	Lcwd;	h	WARPED
	f	Lcwd;	i	MANGROVE
	f	Ljava/util/Set;	j	VALUES
	f	Ljava/lang/String;	k	name
c	cwe	net/minecraft/world/level/block/state/properties/package-info
c	cwf	net/minecraft/world/level/border/BorderChangeListener
	m	(Lcwh;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Lcwh;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Lcwh;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Lcwh;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Lcwh;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Lcwh;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Lcwh;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
c	cwf$a	net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	m	(Lcwh;)V	<init>	<init>
		p	1		border
	m	(Lcwh;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Lcwh;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Lcwh;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Lcwh;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Lcwh;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Lcwh;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Lcwh;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Lcwh;	a	worldBorder
c	cwg	net/minecraft/world/level/border/BorderStatus
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		color
	m	()I	a	getColor
	m	()[Lcwg;	b	$values
	f	Lcwg;	a	GROWING
	f	Lcwg;	b	SHRINKING
	f	Lcwg;	c	STATIONARY
	f	I	d	color
	f	[Lcwg;	e	$VALUES
c	cwh	net/minecraft/world/level/border/WorldBorder
	m	()D	a	getCenterX
	m	(D)V	a	setSize
		p	1		size
	m	(DD)Z	a	isWithinBounds
		p	1		x
		p	3		z
	m	(DDD)Z	a	isWithinBounds
		p	1		x
		p	3		z
		p	5		margin
	m	(DDJ)V	a	lerpSizeBetween
		p	1		fromSize
		p	3		toSize
		p	5		time
	m	(I)V	a	setAbsoluteMaxSize
		p	1		maxRadius
	m	(Lbaq;)D	a	getDistanceToBorder
		p	1		entity
	m	(Lbaq;Ldvo;)Z	a	isInsideCloseToBorder
		p	1		entity
		p	2		box
	m	(Lcfh;)Z	a	isWithinBounds
		p	1		pos
	m	(Lcwf;)V	a	addListener
		p	1		listener
	m	(Lcwh$c;)V	a	applySettings
		p	1		properties
	m	(Ldvo;)Z	a	isWithinBounds
		p	1		box
	m	(Lgt;)Z	a	isWithinBounds
		p	1		pos
	m	()D	b	getCenterZ
	m	(D)V	b	setDamageSafeZone
		p	1		safeZone
	m	(DD)D	b	getDistanceToBorder
		p	1		x
		p	3		z
	m	(DDD)Lgt;	b	clampToBounds
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	b	setWarningTime
		p	1		warningTime
	m	(Lcwf;)V	b	removeListener
		p	1		listener
	m	()Ldwm;	c	getCollisionShape
	m	(D)V	c	setDamagePerBlock
		p	1		damagePerBlock
	m	(DD)V	c	setCenter
		p	1		x
		p	3		z
	m	(I)V	c	setWarningBlocks
		p	1		warningBlocks
	m	()Lcwg;	d	getStatus
	m	()D	e	getMinX
	m	()D	f	getMinZ
	m	()D	g	getMaxX
	m	()D	h	getMaxZ
	m	()D	i	getSize
	m	()J	j	getLerpRemainingTime
	m	()D	k	getLerpTarget
	m	()Ljava/util/List;	l	getListeners
	m	()I	m	getAbsoluteMaxSize
	m	()D	n	getDamageSafeZone
	m	()D	o	getDamagePerBlock
	m	()D	p	getLerpSpeed
	m	()I	q	getWarningTime
	m	()I	r	getWarningBlocks
	m	()V	s	tick
	m	()Lcwh$c;	t	createSettings
	f	Ljava/util/List;	a	listeners
	f	D	b	damagePerBlock
	f	D	c	MAX_SIZE
	f	D	d	MAX_CENTER_COORDINATE
	f	Lcwh$c;	e	DEFAULT_SETTINGS
	f	D	f	damageSafeZone
	f	I	g	warningTime
	f	I	h	warningBlocks
	f	D	i	centerX
	f	D	j	centerZ
	f	I	k	absoluteMaxSize
	f	Lcwh$a;	l	extent
c	cwh$a	net/minecraft/world/level/border/WorldBorder$BorderExtent
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lcwg;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lcwh$a;	l	update
	m	()Ldwm;	m	getCollisionShape
c	cwh$b	net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	m	(Lcwh;DDJ)V	<init>	<init>
		p	2		oldSize
		p	4		newSize
		p	6		timeDuration
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lcwg;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lcwh$a;	l	update
	m	()Ldwm;	m	getCollisionShape
	f	Lcwh;	a	this$0
	f	D	b	from
	f	D	c	to
	f	J	d	lerpEnd
	f	J	e	lerpBegin
	f	D	f	lerpDuration
c	cwh$c	net/minecraft/world/level/border/WorldBorder$Settings
	m	(DDDDIIDJD)V	<init>	<init>
		p	1		centerX
		p	3		centerZ
		p	5		damagePerBlock
		p	7		safeZone
		p	9		warningBlocks
		p	10		warningTime
		p	11		size
		p	13		sizeLerpTime
		p	15		sizeLerpTarget
	m	(Lcwh;)V	<init>	<init>
		p	1		worldBorder
	m	()D	a	getCenterX
	m	(Lcom/mojang/serialization/DynamicLike;Lcwh$c;)Lcwh$c;	a	read
		p	0		dynamic
		p	1		properties
	m	(Lpj;)V	a	write
		p	1		nbt
	m	()D	b	getCenterZ
	m	()D	c	getDamagePerBlock
	m	()D	d	getSafeZone
	m	()I	e	getWarningBlocks
	m	()I	f	getWarningTime
	m	()D	g	getSize
	m	()J	h	getSizeLerpTime
	m	()D	i	getSizeLerpTarget
	f	D	a	centerX
	f	D	b	centerZ
	f	D	c	damagePerBlock
	f	D	d	safeZone
	f	I	e	warningBlocks
	f	I	f	warningTime
	f	D	g	size
	f	J	h	sizeLerpTime
	f	D	i	sizeLerpTarget
c	cwh$d	net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	m	(Lcwh;D)V	<init>	<init>
		p	2		size
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lcwg;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lcwh$a;	l	update
	m	()Ldwm;	m	getCollisionShape
	m	()V	n	updateBox
	f	Lcwh;	a	this$0
	f	D	b	size
	f	D	c	minX
	f	D	d	minZ
	f	D	e	maxX
	f	D	f	maxZ
	f	Ldwm;	g	shape
c	cwi	net/minecraft/world/level/border/package-info
c	cwj	net/minecraft/world/level/chunk/BlockColumn
	m	(I)Lcur;	a	getBlock
		p	1		y
	m	(ILcur;)V	a	setBlock
		p	1		y
		p	2		state
c	cwk	net/minecraft/world/level/chunk/BulkSectionAccess
	m	(Lcgb;)V	<init>	<init>
		p	1		world
	m	(Lgt;)Lcwx;	a	getSection
		p	1		pos
	m	(Lgt;IJ)Lcwx;	a	lambda$getSection$0
	m	(Lgt;)Lcur;	b	getBlockState
		p	1		pos
	f	Lcgb;	a	level
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	b	acquiredSections
	f	Lcwx;	c	lastSection
	f	J	d	lastSectionKey
c	cwl	net/minecraft/world/level/chunk/CarvingMask
	m	(II)V	<init>	<init>
		p	1		height
		p	2		bottomY
	m	([JI)V	<init>	<init>
		p	1		mask
		p	2		bottomY
	m	()[J	a	toArray
	m	(III)V	a	set
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(Lcfh;)Ljava/util/stream/Stream;	a	stream
		p	1		chunkPos
	m	(Lcfh;I)Lgt;	a	lambda$stream$1
		p	2		mask
	m	(Lcwl$a;)V	a	setAdditionalMask
		p	1		maskPredicate
	m	(III)Z	b	get
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)I	c	getIndex
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)Z	d	lambda$new$0
		p	0		offsetX
		p	1		y
		p	2		offsetZ
	f	I	a	minY
	f	Ljava/util/BitSet;	b	mask
	f	Lcwl$a;	c	additionalMask
c	cwl$a	net/minecraft/world/level/chunk/CarvingMask$Mask
	m	(III)Z	test	test
		p	1		offsetX
		p	2		y
		p	3		offsetZ
c	cwm	net/minecraft/world/level/chunk/ChunkAccess
	m	(Lcfh;Lcxi;Lcgc;Lhm;J[Lcwx;Ldav;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		heightLimitView
		p	4		biome
		p	5		inhabitedTime
		p	7		sectionArrayInitializer
		p	8		blendingData
	m	()Lcwx;	a	getHighestSection
	m	(I)Lcyz;	a	getEventDispatcher
		p	1		ySectionCoord
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(III)Ljava/lang/String;	a	lambda$getNoiseBiome$2
	m	(J)V	a	incrementInhabitedTime
		p	1		delta
	m	(Lbaq;)V	a	addEntity
		p	1		entity
	m	(Lcgc;Lhm;[Lcwx;)V	a	replaceMissingSections
		p	0		world
		p	1		biome
		p	2		sectionArray
	m	(Lcgz;Lchf$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Lcsl;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lczu$a;)Lczu;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Lczu$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Lczu$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Ldav;)V	a	setBlendingData
		p	1		blendingData
	m	(Ldke;)Ldkm;	a	getStartForStructure
		p	1		structure
	m	(Ldke;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldke;Ldkm;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Lgt;Lcur;Z)Lcur;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Ljava/util/function/Function;)Lczy;	a	getOrCreateNoiseChunk
		p	1		chunkNoiseSamplerGetter
	m	(Ljava/util/function/Supplier;)Lcgx;	a	carverBiome
		p	1		generationSettingsSupplier
	m	(Lpj;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getOrCreateOffsetList
		p	0		lists
		p	1		index
	m	()I	b	getHighestSectionPosition
	m	(I)Lcwx;	b	getSection
		p	1		yIndex
	m	(J)V	b	setInhabitedTime
		p	1		inhabitedTime
	m	(Lczu$a;)Z	b	hasPrimedHeightmap
		p	1		type
	m	(Ldke;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	()Ljava/util/Set;	c	getBlockEntitiesPos
	m	(Lczu$a;)Lczu;	c	lambda$getOrCreateHeightmapUnprimed$0
		p	1		type2
	m	(Ldke;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	lambda$addReferenceForStructure$1
		p	0		type2
	m	()[Lcwx;	d	getSections
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	()Ljava/util/Collection;	e	getHeightmaps
	m	(Lgt;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Lcfh;	f	getPos
	m	(Lgt;)Lpj;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgt;)Lpj;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Lcwq;	j	getStatus
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	m	getPostProcessing
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldxg;	o	getBlockTicks
	m	()Ldxg;	p	getFluidTicks
	m	()Lcwm$a;	q	getTicksForSerialization
	m	()Lcxi;	r	getUpgradeData
	m	()Z	s	isOldNoiseGeneration
	m	()Ldav;	t	getBlendingData
	m	()J	u	getInhabitedTime
	m	()I	u_	getMinBuildHeight
	m	()Z	v	isLightCorrect
	m	()I	v_	getHeight
	m	()Z	w	hasAnyStructureReferences
	m	()Lczi;	x	getBelowZeroRetrogen
	m	()Z	y	isUpgrading
	m	()Lcgc;	z	getHeightAccessorForGeneration
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	a	postProcessing
	f	Z	b	unsaved
	f	Lcfh;	c	chunkPos
	f	Lczy;	d	noiseChunk
	f	Lcxi;	e	upgradeData
	f	Ldav;	f	blendingData
	f	Ljava/util/Map;	g	heightmaps
	f	Ljava/util/Map;	h	pendingBlockEntities
	f	Ljava/util/Map;	i	blockEntities
	f	Lcgc;	j	levelHeightAccessor
	f	[Lcwx;	k	sections
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	m	EMPTY_REFERENCE_SET
	f	Z	n	isLightCorrect
	f	J	o	inhabitedTime
	f	Lcgx;	p	carverBiomeSettings
	f	Ljava/util/Map;	q	structureStarts
	f	Ljava/util/Map;	r	structuresRefences
c	cwm$a	net/minecraft/world/level/chunk/ChunkAccess$TicksToSave
	m	()Ldxe;	a	blocks
	m	()Ldxe;	b	fluids
	f	Ldxe;	a	blocks
	f	Ldxe;	b	fluids
c	cwn	net/minecraft/world/level/chunk/ChunkGenerator
	m	(Lhm;Ljava/util/Optional;Lcha;)V	<init>	<init>
		p	1		structureSetRegistry
		p	2		structureOverrides
		p	3		biomeSource
	m	(Lhm;Ljava/util/Optional;Lcha;Ljava/util/function/Function;)V	<init>	<init>
		p	1		structureSetRegistry
		p	2		structureOverrides
		p	3		biomeSource
		p	4		generationSettingsGetter
	m	()Ljava/util/stream/Stream;	a	possibleStructureSets
	m	(IILcgc;Ldai;)Lcgm;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILczu$a;Lcgc;Ldai;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lafo;Lhe;Lgt;IZ)Lcom/mojang/datafixers/util/Pair;	a	findNearestMapStructure
		p	1		world
		p	2		structures
		p	3		center
		p	4		radius
		p	5		skipReferencedStructures
	m	(Lafv;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lafv;JLdai;Lcgy;Lcgr;Lcwm;Lczq$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		world
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lafv;Lcgr;Ldai;Lcwm;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcgc;)I	a	getSpawnHeight
		p	1		world
	m	(Lcgr;Lcwm;Lhq;Ldke;)I	a	fetchReferences
		p	0		structureAccessor
		p	1		chunk
		p	2		sectionPos
		p	3		structure
	m	(Lcgr;Ldkm;)Z	a	tryAddReference
		p	0		structureAccessor
		p	1		start
	m	(Lcgr;Lgt;Ldkm;)Z	a	lambda$getMobsAt$15
		p	2		start
	m	(Lcgr;Lhq;Lcwm;Ldai;JLcfh;Lhn;Ldnx;Lhc;)V	a	lambda$createStructures$18
		p	10		structureSet
	m	(Lcgs;Lcgr;Lcwm;)V	a	createReferences
		p	1		world
		p	2		structureAccessor
		p	3		chunk
	m	(Lcgs;Lcgr;Ldar;Lcwm;Lcfh;Ldkm;)V	a	lambda$applyBiomeDecoration$12
		p	6		start
	m	(Lcgs;Lcwm;Lcgr;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Lcgs;Ljava/util/Set;Lcfh;)V	a	lambda$applyBiomeDecoration$10
		p	0		pos
	m	(Lcha;Ljava/util/function/Function;)Ljava/util/List;	a	lambda$new$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonCodec
		p	0		instance
	m	(Lcwm;)Ldjw;	a	getWritableArea
		p	0		chunk
	m	(Lcwm;Ldai;)Lcwm;	a	lambda$createBiomes$7
	m	(Lcwn;)Lhm;	a	lambda$commonCodec$0
		p	0		chunkGenerator
	m	(Ldai;)V	a	ensureStructuresGenerated
		p	1		noiseConfig
	m	(Ldke;)Ljava/lang/Integer;	a	lambda$applyBiomeDecoration$9
		p	0		structureType
	m	(Ldkk$a;Lcgr;Lhn;Ldai;Ldnx;JLcwm;Lcfh;Lhq;)Z	a	tryGenerateStructure
		p	1		weightedEntry
		p	2		structureAccessor
		p	3		dynamicRegistryManager
		p	4		noiseConfig
		p	5		structureManager
		p	6		seed
		p	8		chunk
		p	9		pos
		p	10		sectionPos
	m	(Ldkm;)Ljava/lang/String;	a	lambda$createReferences$22
	m	(Ldkm;Lhm;)Ljava/lang/String;	a	lambda$createReferences$19
		p	1		structureTypeRegistry
	m	(Ldky;Ldai;)Ljava/util/List;	a	getRingPositionsFor
		p	1		structurePlacement
		p	2		noiseConfig
	m	(Ldky;Ldai;Lhc;)Ljava/util/List;	a	lambda$generateRingPositions$6
	m	(Ldlb;)Ljava/util/Set;	a	lambda$findNearestMapStructure$8
		p	0		placement
	m	(Lgt;Ldkm;)Z	a	lambda$getMobsAt$16
		p	1		start
	m	(Lhc;)Lcgx;	a	getBiomeGenerationSettings
		p	1		biomeEntry
	m	(Lhc;Lcgr;Lbbi;Lgt;)Laya;	a	getMobsAt
		p	1		biome
		p	2		accessor
		p	3		group
		p	4		pos
	m	(Lhc;Ldai;)Ljava/util/List;	a	getPlacementsForStructure
		p	1		structureEntry
		p	2		noiseConfig
	m	(Lhc;Ldai;JIII)Z	a	hasStructureChunkInRange
		p	1		structureSet
		p	2		noiseConfig
		p	3		seed
		p	5		chunkX
		p	6		chunkZ
		p	7		chunkRange
	m	(Lhc;Ldai;Ldky;)Ljava/util/concurrent/CompletableFuture;	a	generateRingPositions
		p	1		structureSet
		p	2		noiseConfig
		p	3		concentricRingsStructurePlacement
	m	(Lhm;Ldjj;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$14
	m	(Lhm;Ldke;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$11
	m	(Lhm;Ljava/util/concurrent/Executor;Ldai;Ldau;Lcgr;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		biomeRegistry
		p	2		executor
		p	3		noiseConfig
		p	4		blender
		p	5		structureAccessor
		p	6		chunk
	m	(Lhn;Ldai;Lcgr;Lcwm;Ldnx;J)V	a	createStructures
		p	1		registryManager
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
		p	5		structureTemplateManager
		p	6		seed
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;Lchg$b;Ldjj;)V	a	lambda$applyBiomeDecoration$13
		p	0		feature
	m	(Ljava/util/List;Ldai;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/Optional;Ldkm;)Ljava/lang/String;	a	lambda$createReferences$20
	m	(Ljava/util/Set;Lafo;Lcgr;Lgt;ZLdky;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	1		structures
		p	2		world
		p	3		structureAccessor
		p	4		center
		p	5		skipReferencedStructures
		p	6		placement
	m	(Ljava/util/Set;Lcgd;Lcgr;IIIZJLdkz;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		centerChunkX
		p	4		centerChunkZ
		p	5		radius
		p	6		skipReferencedStructures
		p	7		seed
		p	9		placement
	m	(Ljava/util/Set;Lcgd;Lcgr;ZLdlb;Lcfh;)Lcom/mojang/datafixers/util/Pair;	a	getStructureGeneratingAt
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		skipReferencedStructures
		p	4		placement
		p	5		pos
	m	(Ljava/util/Set;Ldai;Lhc;)V	a	lambda$generatePositions$5
		p	3		structureSet
	m	(Ljava/util/concurrent/Executor;Ldau;Ldai;Lcgr;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	(Ljava/util/function/Function;Lhc;)Ljava/util/List;	a	lambda$new$2
		p	1		biomeEntry
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Predicate;Ldkm;)V	a	lambda$getMobsAt$17
		p	2		start
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(IILczu$a;Lcgc;Ldai;)I	b	getFirstFreeHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Ldai;)V	b	generatePositions
		p	1		noiseConfig
	m	(Ldke;)Ljava/util/List;	b	lambda$generatePositions$4
		p	0		structureType
	m	(Ldkm;)Ljava/lang/String;	b	lambda$createReferences$21
	m	(Lhc;)Lcgx;	b	lambda$new$1
		p	0		biomeEntry
	m	()Ljava/util/Optional;	c	getTypeNameForDataFixer
	m	(IILczu$a;Lcgc;Ldai;)I	c	getFirstOccupiedHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	()Lcha;	d	getBiomeSource
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhm;	b	structureSets
	f	Lcha;	c	biomeSource
	f	Ljava/util/Optional;	d	structureOverrides
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/util/function/Supplier;	f	featuresPerStep
	f	Ljava/util/function/Function;	g	generationSettingsGetter
	f	Ljava/util/Map;	h	placementsForStructure
	f	Ljava/util/Map;	i	ringPositions
	f	Z	j	hasGeneratedPositions
c	cwo	net/minecraft/world/level/chunk/ChunkGenerators
	m	(Lhm;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
c	cwp	net/minecraft/world/level/chunk/ChunkSource
	m	(II)Lcww;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILcwq;Z)Lcwm;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(IIZ)Lcww;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		create
	m	(Lcfh;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(II)Lcfg;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Ljava/lang/String;	e	gatherStats
	m	()I	i	getLoadedChunksCount
	m	()Ldop;	o	getLightEngine
c	cwq	net/minecraft/world/level/chunk/ChunkStatus
	m	(Ljava/lang/String;Lcwq;ILjava/util/EnumSet;Lcwq$a;Lcwq$b;Lcwq$c;)V	<init>	<init>
		p	1		id
		p	2		previous
		p	3		taskMargin
		p	4		heightMapTypes
		p	5		chunkType
		p	6		generationTask
		p	7		loadTask
	m	()Ljava/util/List;	a	getStatusList
	m	(I)Lcwq;	a	getStatusAroundFullChunk
		p	0		level
	m	(Lafo;Ldnx;Lafr;Ljava/util/function/Function;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lawl;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$generate$21
		p	1		either
	m	(Lcwq;)I	a	getDistance
		p	0		status
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	a	lambda$static$17
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Lcwq;Lafo;Ldnx;Lafr;Ljava/util/function/Function;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$19
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lcwq;Lafr;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	lightChunk
		p	0		status
		p	1		lightingProvider
		p	2		chunk
	m	(Lcwq;Lcwm;)Z	a	isLighted
		p	0		status
		p	1		chunk
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$18
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	a	lambda$static$20
	m	(Ljava/lang/String;)Lcwq;	a	byName
		p	0		id
	m	(Ljava/lang/String;Lcwq;ILjava/util/EnumSet;Lcwq$a;Lcwq$b;)Lcwq;	a	register
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
	m	(Ljava/lang/String;Lcwq;ILjava/util/EnumSet;Lcwq$a;Lcwq$b;Lcwq$c;)Lcwq;	a	register
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
		p	6		loadTask
	m	(Ljava/lang/String;Lcwq;ILjava/util/EnumSet;Lcwq$a;Lcwq$d;)Lcwq;	a	registerSimple
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
	m	(Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture;	a	generate
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		regenerate
	m	()I	b	maxDistance
	m	(Lcwq;)Z	b	isOrAfter
		p	1		chunkStatus
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	b	lambda$static$16
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Lcwq;Lafo;Ldnx;Lafr;Ljava/util/function/Function;Lcwm;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$15
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lcwq;Lcwm;)Lcom/mojang/datafixers/util/Either;	b	lambda$static$7
		p	1		chunk
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$14
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()I	c	getIndex
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	c	lambda$static$11
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Lcwq;Lafo;Ldnx;Lafr;Ljava/util/function/Function;Lcwm;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$13
		p	0		status
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lcwq;Lcwm;)Lcom/mojang/datafixers/util/Either;	c	lambda$static$5
		p	1		chunk
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$12
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()Ljava/lang/String;	d	getName
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	d	lambda$static$10
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Lcwq;Lafo;Ldnx;Lafr;Ljava/util/function/Function;Lcwm;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$3
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$8
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()Lcwq;	e	getParent
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	e	lambda$static$9
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Lcwq;Lafo;Ldnx;Lafr;Ljava/util/function/Function;Lcwm;)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$0
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$6
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()I	f	getRange
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	f	lambda$static$4
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	f	lambda$static$2
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()Lcwq$a;	g	getChunkType
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	g	lambda$static$1
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	()Ljava/util/EnumSet;	h	heightmapsAfter
	f	Ljava/util/EnumSet;	A	heightmapsAfter
	f	I	a	MAX_STRUCTURE_DISTANCE
	f	Ljava/util/EnumSet;	b	POST_FEATURES
	f	Lcwq;	c	EMPTY
	f	Lcwq;	d	STRUCTURE_STARTS
	f	Lcwq;	e	STRUCTURE_REFERENCES
	f	Lcwq;	f	BIOMES
	f	Lcwq;	g	NOISE
	f	Lcwq;	h	SURFACE
	f	Lcwq;	i	CARVERS
	f	Lcwq;	j	LIQUID_CARVERS
	f	Lcwq;	k	FEATURES
	f	Lcwq;	l	LIGHT
	f	Lcwq;	m	SPAWN
	f	Lcwq;	n	HEIGHTMAPS
	f	Lcwq;	o	FULL
	f	Ljava/util/EnumSet;	p	PRE_FEATURES
	f	Lcwq$c;	q	PASSTHROUGH_LOAD_TASK
	f	Ljava/util/List;	r	STATUS_BY_RANGE
	f	Lit/unimi/dsi/fastutil/ints/IntList;	s	RANGE_BY_STATUS
	f	Ljava/lang/String;	t	name
	f	I	u	index
	f	Lcwq;	v	parent
	f	Lcwq$b;	w	generationTask
	f	Lcwq$c;	x	loadingTask
	f	I	y	range
	f	Lcwq$a;	z	chunkType
c	cwq$a	net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	m	()[Lcwq$a;	a	$values
	f	Lcwq$a;	a	PROTOCHUNK
	f	Lcwq$a;	b	LEVELCHUNK
	f	[Lcwq$a;	c	$VALUES
c	cwq$b	net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		executor
		p	3		world
		p	4		generator
		p	5		structureTemplateManager
		p	6		lightingProvider
		p	7		fullChunkConverter
		p	8		chunks
		p	9		chunk
		p	10		regenerate
c	cwq$c	net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
	m	(Lcwq;Lafo;Ldnx;Lafr;Ljava/util/function/Function;Lcwm;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		world
		p	3		structureTemplateManager
		p	4		lightingProvider
		p	5		fullChunkConverter
		p	6		chunk
c	cwq$d	net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
	m	(Lcwq;Lafo;Lcwn;Ljava/util/List;Lcwm;)V	doWork	doWork
		p	1		targetStatus
		p	2		world
		p	3		chunkGenerator
		p	4		chunks
		p	5		chunk
	m	(Lcwq;Ljava/util/concurrent/Executor;Lafo;Lcwn;Ldnx;Lafr;Ljava/util/function/Function;Ljava/util/List;Lcwm;Z)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		executor
		p	3		world
		p	4		generator
		p	5		structureTemplateManager
		p	6		lightingProvider
		p	7		fullChunkConverter
		p	8		chunks
		p	9		chunk
		p	10		regenerate
c	cwr	net/minecraft/world/level/chunk/DataLayer
	m	(I)V	<init>	<init>
		p	1		size
	m	([B)V	<init>	<init>
		p	1		bytes
	m	()[B	a	getData
	m	(I)Ljava/lang/String;	a	layerToString
		p	1		unused
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	(III)I	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	a	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	()Lcwr;	b	copy
	m	(I)I	b	get
		p	1		index
	m	(III)I	b	getIndex
		p	1		x
		p	2		y
	m	()Z	c	isEmpty
	m	(I)I	c	getNibbleIndex
		p	0		i
	m	(I)I	d	getByteIndex
		p	0		i
	f	I	a	LAYER_COUNT
	f	I	b	LAYER_SIZE
	f	I	c	SIZE
	f	[B	d	data
	f	I	e	NIBBLE_SIZE
c	cws	net/minecraft/world/level/chunk/EmptyLevelChunk
	m	(Lcga;Lcfh;Lhc;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	()Z	A	isEmpty
	m	()Lafa$c;	B	getFullStatus
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(Lcsl;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lgt;Lcur;Z)Lcur;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Lgt;Lcww$b;)Lcsl;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(Lcsl;)V	b	addAndRegisterBlockEntity
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(III)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(Lgt;)I	h	getLightEmission
		p	1		pos
	f	Lhc;	l	biome
c	cwt	net/minecraft/world/level/chunk/GlobalPalette
	m	(Lhf;)V	<init>	<init>
		p	1		idList
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhf;Lcxc;Ljava/util/List;)Lcxb;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lqx;)V	b	write
		p	1		buf
	m	()Lcxb;	c	copy
	f	Lhf;	a	registry
c	cwu	net/minecraft/world/level/chunk/HashMapPalette
	m	(Lhf;ILcxc;)V	<init>	<init>
		p	1		idList
		p	2		indexBits
		p	3		listener
	m	(Lhf;ILcxc;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
		p	4		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhf;Lcxc;Ljava/util/List;)Lcxb;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lqx;)V	b	write
		p	1		buf
	m	()Lcxb;	c	copy
	m	()Ljava/util/List;	d	getEntries
	f	Lhf;	a	registry
	f	Lakp;	b	values
	f	Lcxc;	c	resizeHandler
	f	I	d	bits
c	cwv	net/minecraft/world/level/chunk/ImposterProtoChunk
	m	(Lcww;Z)V	<init>	<init>
		p	1		wrapped
	m	()Lcww;	A	getWrapped
	m	()I	L	getMaxLightLevel
	m	(Lbaq;)V	a	addEntity
		p	1		entity
	m	(Lcgz;Lchf$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Lcsl;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lcwq;)V	a	setStatus
		p	1		status
	m	(Lczq$a;)Lcwl;	a	getCarvingMask
		p	1		carver
	m	(Lczu$a;)Lczu;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Lczu$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Lczu$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Ldav;)V	a	setBlendingData
		p	1		blendingData
	m	(Ldke;)Ldkm;	a	getStartForStructure
		p	1		structure
	m	(Ldke;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldke;Ldkm;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Lgt;Lcur;Z)Lcur;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Lpj;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(I)Lcwx;	b	getSection
		p	1		yIndex
	m	(Lczq$a;)Lcwl;	b	getOrCreateCarvingMask
		p	1		carver
	m	(Ldke;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(Lczu$a;)Lczu$a;	c	fixType
		p	1		type
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	()[Lcwx;	d	getSections
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(Lgt;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Lcfh;	f	getPos
	m	(Lgt;)Lpj;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgt;)Lpj;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Lcwq;	j	getStatus
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldxg;	o	getBlockTicks
	m	()Ldxg;	p	getFluidTicks
	m	()Lcwm$a;	q	getTicksForSerialization
	m	()Ldav;	t	getBlendingData
	m	()Z	v	isLightCorrect
	f	Lcww;	l	wrapped
	f	Z	m	allowWrites
c	cww	net/minecraft/world/level/chunk/LevelChunk
	m	(Lafo;Lcxf;Lcww$c;)V	<init>	<init>
		p	1		world
		p	2		protoChunk
		p	3		entityLoader
	m	(Lcga;Lcfh;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lcga;Lcfh;Lcxi;Ldwy;Ldwy;J[Lcwx;Lcww$c;Ldav;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		upgradeData
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		inhabitedTime
		p	8		sectionArrayInitializer
		p	9		entityLoader
		p	10		blendingData
	m	()Z	A	isEmpty
	m	()Lafa$c;	B	getFullStatus
	m	()V	C	runPostLoad
	m	()Lcga;	D	getLevel
	m	()Ljava/util/Map;	E	getBlockEntities
	m	()V	F	postProcessGeneration
	m	()V	G	clearAllBlockEntities
	m	()V	H	registerAllBlockEntitiesAfterLevelLoad
	m	()Z	I	isClientLightReady
	m	()Z	J	isInLevel
	m	(I)Lcyz;	a	getEventDispatcher
		p	1		ySectionCoord
	m	(III)Ldoy;	a	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Lafo;)V	a	registerTickContainerInLevel
		p	1		world
	m	(Lafo;I)Lcyz;	a	lambda$getEventDispatcher$0
		p	1		sectionCoord
	m	(Lbaq;)V	a	addEntity
		p	1		entity
	m	(Lcsl;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lcsl;Lafo;)V	a	removeGameEventListener
		p	1		blockEntity
	m	(Lcsl;Lcsm;)Lctu;	a	createTicker
		p	1		blockEntity
		p	2		blockEntityTicker
	m	(Lcsl;Lcsm;Lgt;Lcww$d;)Lcww$d;	a	lambda$updateBlockEntityTicker$7
		p	3		pos
	m	(Lcww$d;)V	a	lambda$clearAllBlockEntities$5
		p	0		ticker
	m	(Lgt;Lcsn;Lpj;)V	a	lambda$replaceWithPacketData$3
		p	1		pos
		p	2		blockEntityType
		p	3		nbt
	m	(Lgt;Lcur;Z)Lcur;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Lgt;Lcww$b;)Lcsl;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Lgt;Lpj;)Lcsl;	a	promotePendingBlockEntity
		p	1		pos
		p	2		nbt
	m	(Lqx;Lpj;Ljava/util/function/Consumer;)V	a	replaceWithPacketData
		p	1		buf
		p	2		nbt
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(III)Ljava/lang/String;	b	lambda$getFluidState$2
	m	(Lafo;)V	b	unregisterTickContainerFromLevel
		p	1		world
	m	(Lcsl;)V	b	addAndRegisterBlockEntity
	m	(Lcsl;Lafo;)V	b	addGameEventListener
		p	1		blockEntity
	m	(Ljava/util/function/Supplier;)V	b	setFullStatus
		p	1		levelTypeProvider
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(III)Ljava/lang/String;	c	lambda$getBlockState$1
	m	(J)V	c	unpackTicks
		p	1		time
	m	(Lcsl;)V	c	updateBlockEntityTicker
		p	1		blockEntity
	m	(Z)V	c	setLoaded
		p	1		loadedToWorld
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	(Lcsl;)V	d	lambda$registerAllBlockEntitiesAfterLevelLoad$6
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(Z)V	d	setClientLightReady
		p	1		shouldRenderOnUpdate
	m	(Lgt;)Lpj;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	()Lcwq;	j	getStatus
	m	(Lgt;)Lcsl;	j	createBlockEntity
		p	1		pos
	m	(Lgt;)Z	k	isTicking
		p	1		pos
	m	(Lgt;)V	l	removeBlockEntityTicker
		p	1		pos
	m	(Lgt;)Z	m	lambda$getLights$4
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldxg;	o	getBlockTicks
	m	()Ldxg;	p	getFluidTicks
	m	()Lcwm$a;	q	getTicksForSerialization
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Lctu;	m	NULL_TICKER
	f	Ljava/util/Map;	n	tickersInLevel
	f	Z	o	loaded
	f	Z	p	clientLightReady
	f	Lcga;	q	level
	f	Ljava/util/function/Supplier;	r	fullStatus
	f	Lcww$c;	s	postLoad
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	t	gameEventDispatcherSections
	f	Ldwy;	u	blockTicks
	f	Ldwy;	v	fluidTicks
c	cww$1	net/minecraft/world/level/chunk/LevelChunk$1
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	cww$a	net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	m	(Lcww;Lcsl;Lcsm;)V	<init>	<init>
		p	2		blockEntity
		p	3		ticker
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Lcww;	a	this$0
	f	Lcsl;	b	blockEntity
	f	Lcsm;	c	ticker
	f	Z	d	loggedInvalidBlockState
c	cww$b	net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	m	()[Lcww$b;	a	$values
	f	Lcww$b;	a	IMMEDIATE
	f	Lcww$b;	b	QUEUED
	f	Lcww$b;	c	CHECK
	f	[Lcww$b;	d	$VALUES
c	cww$c	net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
	m	(Lcww;)V	run	run
		p	1		chunk
c	cww$d	net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	m	(Lcww;Lctu;)V	<init>	<init>
		p	2		wrapped
	m	()V	a	tick
	m	(Lctu;)V	a	rebind
		p	1		wrapped
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Lcww;	a	this$0
	f	Lctu;	b	ticker
c	cwx	net/minecraft/world/level/chunk/LevelChunkSection
	m	(ILcxd;Lcxe;)V	<init>	<init>
		p	1		chunkPos
		p	2		blockStateContainer
	m	(ILhm;)V	<init>	<init>
		p	1		chunkPos
		p	2		biomeRegistry
	m	()V	a	acquire
	m	(I)I	a	getBottomBlockY
		p	0		chunkPos
	m	(III)Lcur;	a	getBlockState
		p	1		x
		p	2		y
		p	3		z
	m	(IIILcur;)Lcur;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(IIILcur;Z)Lcur;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
		p	5		lock
	m	(Lcgz;Lchf$f;II)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
		p	3		x
		p	4		z
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	a	read
		p	1		buf
	m	()V	b	release
	m	(III)Ldoy;	b	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Lqx;)V	b	write
		p	1		buf
	m	()Z	c	hasOnlyAir
	m	(III)Lhc;	c	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
	m	()Z	d	isRandomlyTicking
	m	()Z	e	isRandomlyTickingBlocks
	m	()Z	f	isRandomlyTickingFluids
	m	()I	g	bottomBlockY
	m	()V	h	recalcBlockCounts
	m	()Lcxd;	i	getStates
	m	()Lcxe;	j	getBiomes
	m	()I	k	getSerializedSize
	f	I	a	SECTION_WIDTH
	f	I	b	SECTION_HEIGHT
	f	I	c	SECTION_SIZE
	f	I	d	BIOME_CONTAINER_BITS
	f	I	e	bottomBlockY
	f	S	f	nonEmptyBlockCount
	f	S	g	tickingBlockCount
	f	S	h	tickingFluidCount
	f	Lcxd;	i	states
	f	Lcxe;	j	biomes
c	cwx$a	net/minecraft/world/level/chunk/LevelChunkSection$1BlockCounter
	m	(Lcur;I)V	a	accept
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
	f	I	a	nonEmptyBlockCount
	f	I	b	tickingBlockCount
	f	I	c	tickingFluidCount
	f	Lcwx;	d	this$0
c	cwy	net/minecraft/world/level/chunk/LightChunkGetter
	m	(Lcgj;Lhq;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(II)Lcfg;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Lcfg;	p	getLevel
c	cwz	net/minecraft/world/level/chunk/LinearPalette
	m	(Lhf;ILcxc;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhf;Lcxc;Ljava/util/List;)Lcxb;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lqx;)V	b	write
		p	1		buf
	m	()Lcxb;	c	copy
	f	Lhf;	a	registry
	f	[Ljava/lang/Object;	b	values
	f	Lcxc;	c	resizeHandler
	f	I	d	bits
	f	I	e	size
c	cxa	net/minecraft/world/level/chunk/MissingPaletteEntryException
	m	(I)V	<init>	<init>
		p	1		index
c	cxb	net/minecraft/world/level/chunk/Palette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lqx;)V	b	write
		p	1		buf
	m	()Lcxb;	c	copy
c	cxb$a	net/minecraft/world/level/chunk/Palette$Factory
	m	(ILhf;Lcxc;Ljava/util/List;)Lcxb;	create	create
		p	1		bits
		p	2		idList
		p	3		listener
c	cxc	net/minecraft/world/level/chunk/PaletteResize
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
c	cxd	net/minecraft/world/level/chunk/PalettedContainer
	m	(Lhf;Lcxd$d;Lcxd$a;Lakn;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		dataProvider
		p	4		storage
		p	5		paletteEntries
	m	(Lhf;Lcxd$d;Lcxd$c;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		data
	m	(Lhf;Ljava/lang/Object;Lcxd$d;)V	<init>	<init>
		p	1		idList
		p	2		object
		p	3		paletteProvider
	m	()V	a	acquire
	m	(I)Ljava/lang/Object;	a	get
		p	1		index
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		index
		p	2		value
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
	m	(Lcwu;I)I	a	lambda$pack$9
	m	(Lcxd$b;)V	a	count
		p	1		counter
	m	(Lcxd$b;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V	a	lambda$count$11
		p	2		entry
	m	(Lcxd$c;I)Lcxd$c;	a	createOrReuseData
		p	1		previousData
		p	2		bits
	m	(Lcxd;)Lcxe;	a	lambda$codecRO$1
	m	(Lcxe$b;Lhf;Lcxd$d;Lcxe$a;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$4
	m	(Lhf;Lcom/mojang/serialization/Codec;Lcxd$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	codecRW
	m	(Lhf;Lcom/mojang/serialization/Codec;Lcxd$d;Ljava/lang/Object;Lcxe$b;)Lcom/mojang/serialization/Codec;	a	codec
		p	1		entryCodec
		p	2		provider
	m	(Lhf;Lcxb;I)I	a	lambda$unpack$8
	m	(Lhf;Lcxd$d;)Lcxe$a;	a	pack
	m	(Lhf;Lcxd$d;Lcxe$a;)Lcom/mojang/serialization/DataResult;	a	unpack
	m	(Lhf;Lcxd$d;Lcxe;)Lcxe$a;	a	lambda$codec$5
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;I)V	a	lambda$count$10
		p	1		key
	m	(Ljava/util/function/Consumer;)V	a	getAll
	m	(Ljava/util/function/Consumer;Lcxb;I)V	a	lambda$getAll$6
		p	2		id
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	a	read
		p	1		buf
	m	([ILjava/util/function/IntUnaryOperator;)V	a	swapPalette
	m	()V	b	release
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	getAndSetUnchecked
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)V	b	set
		p	1		index
		p	2		value
	m	(Lhf;Lcom/mojang/serialization/Codec;Lcxd$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	b	codecRO
	m	(Lhf;Lcxd$d;Lcxe$a;)Lcom/mojang/serialization/DataResult;	b	lambda$codecRO$2
	m	(Lqx;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	(IIILjava/lang/Object;)V	c	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)I	c	lambda$unpack$7
	m	()Lcxd;	d	copy
	m	(ILjava/lang/Object;)I	d	lambda$new$0
		p	0		newSize
		p	1		added
	m	()Lcxd;	e	recreate
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
	f	I	a	MIN_PALETTE_BITS
	f	Lcxc;	b	dummyPaletteResize
	f	Lhf;	c	registry
	f	Lcxd$c;	d	data
	f	Lcxd$d;	e	strategy
	f	Lamg;	f	threadingDetector
c	cxd$a	net/minecraft/world/level/chunk/PalettedContainer$Configuration
	m	()Lcxb$a;	a	factory
	m	(Lhf;Lcxc;I)Lcxd$c;	a	createData
		p	1		idList
		p	2		listener
		p	3		size
	m	()I	b	bits
	f	Lcxb$a;	a	factory
	f	I	b	bits
c	cxd$b	net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
c	cxd$c	net/minecraft/world/level/chunk/PalettedContainer$Data
	m	(Lcxd$a;Lakn;Lcxb;)V	<init>	<init>
		p	1		configuration
		p	2		storage
		p	3		palette
	m	()I	a	getSerializedSize
	m	(Lcxb;Lakn;)V	a	copyFrom
		p	1		palette
		p	2		storage
	m	(Lqx;)V	a	write
		p	1		buf
	m	()Lcxd$c;	b	copy
	m	()Lcxd$a;	c	configuration
	m	()Lakn;	d	storage
	m	()Lcxb;	e	palette
	f	Lcxd$a;	a	configuration
	f	Lakn;	b	storage
	f	Lcxb;	c	palette
c	cxd$d	net/minecraft/world/level/chunk/PalettedContainer$Strategy
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	()I	a	size
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(Lhf;I)Lcxd$a;	a	getConfiguration
		p	1		idList
		p	2		bits
	m	(Lhf;I)I	b	calculateBitsForSerialization
		p	1		idList
		p	2		size
	f	Lcxb$a;	a	SINGLE_VALUE_PALETTE_FACTORY
	f	Lcxb$a;	b	LINEAR_PALETTE_FACTORY
	f	Lcxb$a;	c	HASHMAP_PALETTE_FACTORY
	f	Lcxd$d;	d	SECTION_STATES
	f	Lcxd$d;	e	SECTION_BIOMES
	f	Lcxb$a;	f	GLOBAL_PALETTE_FACTORY
	f	I	g	sizeBits
c	cxd$d$1	net/minecraft/world/level/chunk/PalettedContainer$Strategy$1
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Lhf;I)Lcxd$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	cxd$d$2	net/minecraft/world/level/chunk/PalettedContainer$Strategy$2
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Lhf;I)Lcxd$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	cxe	net/minecraft/world/level/chunk/PalettedContainerRO
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(Lcxd$b;)V	a	count
		p	1		counter
	m	(Lhf;Lcxd$d;)Lcxe$a;	a	pack
	m	(Ljava/util/function/Consumer;)V	a	getAll
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	()Lcxd;	e	recreate
c	cxe$a	net/minecraft/world/level/chunk/PalettedContainerRO$PackedData
	m	()Ljava/util/List;	a	paletteEntries
	m	()Ljava/util/Optional;	b	storage
	f	Ljava/util/List;	a	paletteEntries
	f	Ljava/util/Optional;	b	storage
c	cxe$b	net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker
c	cxf	net/minecraft/world/level/chunk/ProtoChunk
	m	(Lcfh;Lcxi;Lcgc;Lhm;Ldav;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		world
		p	4		biomeRegistry
		p	5		blendingData
	m	(Lcfh;Lcxi;[Lcwx;Ldxb;Ldxb;Lcgc;Lhm;Ldav;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		sections
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		world
		p	7		biomeRegistry
		p	8		blendingData
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	B	getPackedLights
	m	()Ljava/util/Map;	C	getBlockEntities
	m	()Ljava/util/List;	D	getEntities
	m	()Ljava/util/Map;	E	getBlockEntityNbts
	m	()Ldwy;	F	unpackBlockTicks
	m	()Ldwy;	G	unpackFluidTicks
	m	(Lbaq;)V	a	addEntity
		p	1		entity
	m	(Lcsl;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lcwq;)V	a	setStatus
		p	1		status
	m	(Lczi;)V	a	setBelowZeroRetrogen
		p	1		belowZeroRetrogen
	m	(Lczq$a;)Lcwl;	a	getCarvingMask
		p	1		carver
	m	(Lczq$a;Lcwl;)V	a	setCarvingMask
		p	1		carver
		p	2		carvingMask
	m	(Ldke;Ldkm;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Ldop;)V	a	setLightEngine
		p	1		lightingProvider
	m	(Ldxb;)Ldwy;	a	unpackTicks
		p	0		tickScheduler
	m	(Lgt;Lcur;Z)Lcur;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(SILcfh;)Lgt;	a	unpackOffsetCoordinates
		p	0		sectionRel
		p	1		sectionY
		p	2		chunkPos
	m	(Lgt;)Lcur;	a_	getBlockState
		p	1		pos
	m	(Lczq$a;)Lcwl;	b	getOrCreateCarvingMask
		p	1		carver
	m	(Lpj;)V	b	addEntity
		p	1		entityNbt
	m	(SI)V	b	addLight
		p	1		chunkSliceRel
		p	2		sectionY
	m	(Lgt;)Ldoy;	b_	getFluidState
		p	1		pos
	m	(Lczq$a;)Lcwl;	c	lambda$getOrCreateCarvingMask$0
	m	(Lgt;)Lcsl;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(Lgt;)V	e	markPosForPostprocessing
		p	1		pos
	m	(Lgt;)Lpj;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhc;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Lcwq;	j	getStatus
	m	(Lgt;)V	j	addLight
		p	1		pos
	m	(Lgt;)S	k	packOffsetCoordinates
		p	0		pos
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Ldxg;	o	getBlockTicks
	m	()Ldxg;	p	getFluidTicks
	m	()Lcwm$a;	q	getTicksForSerialization
	m	()Lczi;	x	getBelowZeroRetrogen
	m	()Lcgc;	z	getHeightAccessorForGeneration
	f	Ldop;	l	lightEngine
	f	Lcwq;	m	status
	f	Ljava/util/List;	n	entities
	f	Ljava/util/List;	o	lights
	f	Ljava/util/Map;	p	carvingMasks
	f	Lczi;	q	belowZeroRetrogen
	f	Ldxb;	r	blockTicks
	f	Ldxb;	s	fluidTicks
c	cxg	net/minecraft/world/level/chunk/SingleValuePalette
	m	(Lhf;Lcxc;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		listener
		p	3		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhf;Lcxc;Ljava/util/List;)Lcxb;	a	create
		p	0		bitSize
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lqx;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lqx;)V	b	write
		p	1		buf
	m	()Lcxb;	c	copy
	f	Lhf;	a	registry
	f	Ljava/lang/Object;	b	value
	f	Lcxc;	c	resizeHandler
c	cxh	net/minecraft/world/level/chunk/StructureAccess
	m	(Ldke;)Ldkm;	a	getStartForStructure
		p	1		structure
	m	(Ldke;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldke;Ldkm;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Ldke;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	()Ljava/util/Map;	h	getAllReferences
c	cxi	net/minecraft/world/level/chunk/UpgradeData
	m	(Lcgc;)V	<init>	<init>
		p	1		world
	m	(Lpj;Lcgc;)V	<init>	<init>
		p	1		nbt
		p	2		world
	m	()Z	a	isEmpty
	m	(Lcga;Lcxi$a;)V	a	lambda$upgrade$6
		p	1		logic
	m	(Lcga;Ldxc;)V	a	lambda$upgrade$5
		p	1		tick
	m	(Lciw;)Ljava/lang/String;	a	lambda$write$7
	m	(Lcur;Lgy;Lcgb;Lgt;Lgt;)Lcur;	a	updateState
		p	0		oldState
		p	1		dir
		p	2		world
		p	3		currentPos
		p	4		otherPos
	m	(Lcww;)V	a	upgrade
		p	1		chunk
	m	(Lcww;Lgz;)V	a	upgradeSides
		p	0		chunk
		p	1		side
	m	(Ldox;)Ljava/lang/String;	a	lambda$write$9
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$new$3
		p	0		id
	m	(Lpj;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V	a	loadTicks
		p	0		nbt
		p	1		key
		p	2		nameToType
		p	3		ticks
	m	(Lpp;Ldxc;)V	a	lambda$write$10
		p	0		tick
	m	()Lpj;	b	write
	m	(Lcga;Ldxc;)V	b	lambda$upgrade$4
		p	1		tick
	m	(Lcww;)V	b	upgradeInside
		p	1		chunk
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$new$1
		p	0		id
	m	(Lpp;Ldxc;)V	b	lambda$write$8
		p	0		tick
	m	()Ljava/util/Optional;	c	lambda$new$2
	m	()Ljava/util/Optional;	d	lambda$new$0
	f	Lcxi;	a	EMPTY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_INDICES
	f	[Lgz;	d	DIRECTIONS
	f	Ljava/util/EnumSet;	e	sides
	f	Ljava/util/List;	f	neighborBlockTicks
	f	Ljava/util/List;	g	neighborFluidTicks
	f	[[I	h	index
	f	Ljava/util/Map;	i	MAP
	f	Ljava/util/Set;	j	CHUNKY_FIXERS
c	cxi$a	net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	m	(Lcgb;)V	a	processChunk
		p	1		world
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	cxi$b	net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	m	(Ljava/lang/String;IZ[Lciw;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	(Ljava/lang/String;I[Lciw;)V	<init>	<init>
		p	3		blocks
	m	()[Lcxi$b;	a	$values
	f	Lcxi$b;	a	BLACKLIST
	f	Lcxi$b;	b	DEFAULT
	f	Lcxi$b;	c	CHEST
	f	Lcxi$b;	d	LEAVES
	f	Lcxi$b;	e	STEM_BLOCK
	f	[Lgy;	f	DIRECTIONS
	f	[Lcxi$b;	g	$VALUES
c	cxi$b$1	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	m	(Ljava/lang/String;I[Lciw;)V	<init>	<init>
		p	3		blocks
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	cxi$b$2	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	m	(Ljava/lang/String;I[Lciw;)V	<init>	<init>
		p	3		blocks
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	cxi$b$3	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	m	(Ljava/lang/String;I[Lciw;)V	<init>	<init>
		p	3		blocks
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	cxi$b$4	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	m	(Ljava/lang/String;IZ[Lciw;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	()Ljava/util/List;	a	lambda$$0
	m	(Lcgb;)V	a	processChunk
		p	1		world
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
	f	Ljava/lang/ThreadLocal;	g	queue
c	cxi$b$5	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	m	(Ljava/lang/String;I[Lciw;)V	<init>	<init>
		p	3		blocks
	m	(Lcur;Lgy;Lcur;Lcgb;Lgt;Lgt;)Lcur;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	cxj	net/minecraft/world/level/chunk/package-info
c	cxk	net/minecraft/world/level/chunk/storage/ChunkScanAccess
	m	(Lcfh;Lpz;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
c	cxl	net/minecraft/world/level/chunk/storage/ChunkSerializer
	m	(Lafo;Lblv;Lcfh;Lpj;)Lcxf;	a	read
		p	0		world
		p	1		poiStorage
		p	2		chunkPos
		p	3		nbt
	m	(Lafo;Lcwm;)Lpj;	a	write
		p	0		world
		p	1		chunk
	m	(Lafo;Lpj;)Lcww$c;	a	postLoadChunk
		p	0		world
		p	1		nbt
	m	(Lafo;Lpj;Lcwm$a;)V	a	saveTicks
		p	0		world
		p	1		nbt
		p	2		tickSchedulers
	m	(Lcfh;ILjava/lang/String;)V	a	logErrors
		p	0		chunkPos
		p	1		y
		p	2		message
	m	(Lcfh;Laaj;J)Z	a	lambda$unpackStructureReferences$11
		p	2		packedPos
	m	(Lciw;)Ljava/lang/String;	a	lambda$saveTicks$8
		p	0		block
	m	(Ldku;Lcfh;Ljava/util/Map;Ljava/util/Map;)Lpj;	a	packStructureData
		p	0		context
		p	1		pos
		p	2		starts
		p	3		references
	m	(Ldku;Lpj;J)Ljava/util/Map;	a	unpackStructureStart
		p	0		context
		p	1		nbt
		p	2		worldSeed
	m	(Ldox;)Ljava/lang/String;	a	lambda$saveTicks$9
		p	0		fluid
	m	(Lhm;)Lcom/mojang/serialization/Codec;	a	makeBiomeCodec
		p	0		biomeRegistry
	m	(Lhn;Lcfh;Lpj;)Ljava/util/Map;	a	unpackStructureReferences
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$read$5
		p	0		id
	m	(Lpj;)Lcwq$a;	a	getChunkTypeFromTag
		p	0		nbt
	m	(Lpj;Ljava/lang/String;)Lpp;	a	getListOfCompoundsOrNull
		p	0		nbt
		p	1		key
	m	(Lpj;Lqc;)V	a	lambda$write$7
	m	(Lpp;Lafo;Lpp;Lcww;)V	a	lambda$postLoadChunk$10
		p	3		chunk
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lpp;	a	packOffsets
		p	0		lists
	m	(Lcfh;ILjava/lang/String;)V	b	lambda$read$1
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$read$4
		p	0		id
	m	(Lpj;Lqc;)V	b	lambda$write$6
	m	(Lcfh;ILjava/lang/String;)V	c	lambda$read$0
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	lambda$read$3
		p	0		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	lambda$read$2
		p	0		id
	f	Ljava/lang/String;	a	X_POS_TAG
	f	Ljava/lang/String;	b	Z_POS_TAG
	f	Ljava/lang/String;	c	HEIGHTMAPS_TAG
	f	Ljava/lang/String;	d	IS_LIGHT_ON_TAG
	f	Ljava/lang/String;	e	SECTIONS_TAG
	f	Ljava/lang/String;	f	BLOCK_LIGHT_TAG
	f	Ljava/lang/String;	g	SKY_LIGHT_TAG
	f	Lcom/mojang/serialization/Codec;	h	BLOCK_STATE_CODEC
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/lang/String;	j	TAG_UPGRADE_DATA
	f	Ljava/lang/String;	k	BLOCK_TICKS_TAG
	f	Ljava/lang/String;	l	FLUID_TICKS_TAG
c	cxm	net/minecraft/world/level/chunk/storage/ChunkStorage
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V	<init>	<init>
		p	1		directory
		p	2		dataFixer
		p	3		dsync
	m	(Laai;Ljava/util/function/Supplier;)Ldjz;	a	getLegacyStructureHandler
	m	(Laai;Ljava/util/function/Supplier;Lpj;Ljava/util/Optional;)Lpj;	a	upgradeChunkTag
		p	1		worldKey
		p	2		persistentStateManagerFactory
		p	3		nbt
		p	4		generatorCodecKey
	m	(Lcfh;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lcfh;Lpj;)V	a	write
		p	1		chunkPos
		p	2		nbt
	m	(Lpj;)I	a	getVersion
		p	0		nbt
	m	(Lpj;Laai;)V	a	lambda$injectDatafixingContext$0
		p	1		key
	m	(Lpj;Laai;Ljava/util/Optional;)V	a	injectDatafixingContext
		p	0		nbt
		p	1		worldKey
		p	2		generatorCodecKey
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	f	read
		p	1		chunkPos
	m	()V	n	flushWorker
	m	()Lcxk;	o	chunkScanner
	f	Lcxo;	a	worker
	f	Ldjz;	b	legacyStructureHandler
	f	I	d	LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	f	Lcom/mojang/datafixers/DataFixer;	e	fixerUpper
c	cxn	net/minecraft/world/level/chunk/storage/EntityStorage
	m	(Lafo;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLjava/util/concurrent/Executor;)V	<init>	<init>
		p	1		world
		p	2		path
		p	3		dataFixer
		p	4		dsync
		p	5		executor
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Lcfh;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$storeEntities$2
		p	1		ex
	m	(Lcfh;Ljava/util/Optional;)Lcyd;	a	lambda$loadEntities$0
		p	2		nbt
	m	(Lcyd;)V	a	storeEntities
		p	1		dataList
	m	(Lpj;)I	a	getVersion
		p	0		chunkNbt
	m	(Lpj;Lcfh;)V	a	writeChunkPos
		p	0		chunkNbt
		p	1		pos
	m	(Lpp;Lbaq;)V	a	lambda$storeEntities$1
		p	1		entity
	m	(Z)V	a	flush
		p	1		sync
	m	(Lcfh;)Lcyd;	b	emptyChunk
		p	0		pos
	m	(Lpj;)Lcfh;	b	readChunkPos
		p	0		chunkNbt
	m	(Lpj;)Lpj;	c	upgradeChunkTag
		p	1		chunkNbt
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	POSITION_TAG
	f	Lafo;	e	level
	f	Lcxo;	f	worker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	emptyChunks
	f	Layf;	h	entityDeserializerQueue
c	cxo	net/minecraft/world/level/chunk/storage/IOWorker
	m	(Ljava/nio/file/Path;ZLjava/lang/String;)V	<init>	<init>
		p	1		directory
		p	2		dsync
		p	3		name
	m	()V	a	storePendingChunk
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$6
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	getOrCreateOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Laye;)Layh$b;	a	lambda$close$16
		p	0		listener
	m	(Laye;Ljava/util/function/Supplier;)V	a	lambda$submitTask$13
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	a	loadAsync
		p	1		pos
	m	(Lcfh;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lcfh;Lcxo$a;)V	a	runStore
		p	1		pos
		p	2		result
	m	(Lcfh;Lpj;)Ljava/util/concurrent/CompletableFuture;	a	store
		p	1		pos
		p	2		nbt
	m	(Lcfh;Lpz;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
	m	(Lcxo$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$5
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	a	lambda$synchronize$11
		p	1		void_
	m	(Ljava/util/BitSet;Lcfh;)V	a	lambda$createOldDataForRegion$0
		p	2		chunkPos
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submitTask
		p	1		task
	m	(Ljava/util/function/Supplier;Laye;)Layh$b;	a	lambda$submitTask$14
		p	2		listener
	m	(Lpj;)Z	a	isOldChunk
		p	1		nbt
	m	(Lpj;Lcfh;)Lcxo$a;	a	lambda$store$2
		p	1		pos2
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
		p	1		sync
	m	()V	b	tellStorePending
	m	(II)Ljava/util/concurrent/CompletableFuture;	b	createOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Laye;)V	b	lambda$close$15
	m	(Lcfh;)Lcom/mojang/datafixers/util/Either;	b	lambda$loadAsync$4
	m	(Lcfh;Lpj;)Lcom/mojang/datafixers/util/Either;	b	lambda$store$3
	m	(Lcfh;Lpz;)Lcom/mojang/datafixers/util/Either;	b	lambda$scanChunk$12
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	b	lambda$synchronize$9
		p	1		void_
	m	()Lcom/mojang/datafixers/util/Either;	c	lambda$synchronize$10
	m	(II)Ljava/util/BitSet;	c	lambda$createOldDataForRegion$1
	m	()Lcom/mojang/datafixers/util/Either;	d	lambda$synchronize$8
	m	()Lcom/mojang/datafixers/util/Either;	e	lambda$synchronize$7
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	shutdownRequested
	f	Layf;	c	mailbox
	f	Lcxr;	d	storage
	f	Ljava/util/Map;	e	pendingWrites
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	f	regionCacheForBlender
	f	I	g	REGION_CACHE_SIZE
c	cxo$a	net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	f	Lpj;	a	data
	f	Ljava/util/concurrent/CompletableFuture;	b	result
c	cxo$b	net/minecraft/world/level/chunk/storage/IOWorker$Priority
	m	()[Lcxo$b;	a	$values
	f	Lcxo$b;	a	FOREGROUND
	f	Lcxo$b;	b	BACKGROUND
	f	Lcxo$b;	c	SHUTDOWN
	f	[Lcxo$b;	d	$VALUES
c	cxp	net/minecraft/world/level/chunk/storage/RegionBitmap
	m	()Lit/unimi/dsi/fastutil/ints/IntSet;	a	getUsed
	m	(I)I	a	allocate
		p	1		size
	m	(II)V	a	force
		p	1		start
		p	2		size
	m	(II)V	b	free
		p	1		start
		p	2		size
	f	Ljava/util/BitSet;	a	used
c	cxq	net/minecraft/world/level/chunk/storage/RegionFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lcxs;Z)V	<init>	<init>
		p	1		file
		p	2		directory
		p	3		outputChunkStreamVersion
		p	4		dsync
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		file
		p	2		directory
		p	3		dsync
	m	()V	a	flush
	m	(B)Z	a	isExternalStreamChunk
	m	(I)I	a	getNumSectors
		p	0		sectorData
	m	(II)I	a	packSectorOffset
		p	1		offset
		p	2		size
	m	(Lcfh;)Ljava/io/DataInputStream;	a	getChunkDataInputStream
		p	1		pos
	m	(Lcfh;B)Ljava/io/DataInputStream;	a	createExternalChunkInputStream
	m	(Lcfh;BLjava/io/InputStream;)Ljava/io/DataInputStream;	a	createChunkInputStream
	m	(Lcfh;Ljava/nio/ByteBuffer;)V	a	write
		p	1		pos
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	createStream
		p	0		buffer
		p	1		length
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcxq$b;	a	writeToExternalFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$writeToExternalFile$1
	m	()I	b	getTimestamp
	m	(B)B	b	getExternalChunkVersion
	m	(I)I	b	getSectorNumber
		p	0		sectorData
	m	(Lcfh;)Z	b	doesChunkExist
		p	1		pos
	m	()Ljava/nio/ByteBuffer;	c	createExternalStub
	m	(I)I	c	sizeToSectors
		p	0		byteCount
	m	(Lcfh;)Ljava/io/DataOutputStream;	c	getChunkDataOutputStream
		p	1		pos
	m	()V	d	writeHeader
	m	(Lcfh;)V	d	clear
	m	()V	e	padToFullSector
	m	(Lcfh;)Z	e	hasChunk
		p	1		pos
	m	(Lcfh;)Ljava/nio/file/Path;	f	getExternalChunkPath
		p	1		chunkPos
	m	(Lcfh;)I	g	getOffset
		p	1		pos
	m	(Lcfh;)I	h	getOffsetIndex
		p	0		pos
	m	(Lcfh;)V	i	lambda$write$0
	f	I	a	SECTOR_INTS
	f	Lcxp;	b	usedSectors
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SECTOR_BYTES
	f	I	e	CHUNK_HEADER_SIZE
	f	I	f	HEADER_OFFSET
	f	Ljava/nio/ByteBuffer;	g	PADDING_BUFFER
	f	Ljava/lang/String;	h	EXTERNAL_FILE_EXTENSION
	f	I	i	EXTERNAL_STREAM_FLAG
	f	I	j	EXTERNAL_CHUNK_THRESHOLD
	f	I	k	CHUNK_NOT_PRESENT
	f	Ljava/nio/channels/FileChannel;	l	file
	f	Ljava/nio/file/Path;	m	externalFileDir
	f	Lcxs;	n	version
	f	Ljava/nio/ByteBuffer;	o	header
	f	Ljava/nio/IntBuffer;	p	offsets
	f	Ljava/nio/IntBuffer;	q	timestamps
c	cxq$a	net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	m	(Lcxq;Lcfh;)V	<init>	<init>
		p	2		pos
	f	Lcxq;	a	this$0
	f	Lcfh;	b	pos
c	cxq$b	net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
c	cxr	net/minecraft/world/level/chunk/storage/RegionFileStorage
	m	(Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		directory
		p	2		dsync
	m	()V	a	flush
	m	(Lcfh;)Lpj;	a	read
		p	1		pos
	m	(Lcfh;Lpj;)V	a	write
		p	1		pos
		p	2		nbt
	m	(Lcfh;Lpz;)V	a	scanChunk
	m	(Lcfh;)Lcxq;	b	getRegionFile
		p	1		pos
	f	Ljava/lang/String;	a	ANVIL_EXTENSION
	f	I	b	MAX_CACHE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	c	regionCache
	f	Ljava/nio/file/Path;	d	folder
	f	Z	e	sync
c	cxs	net/minecraft/world/level/chunk/storage/RegionFileVersion
	m	(ILcxs$a;Lcxs$a;)V	<init>	<init>
		p	1		id
		p	2		inputStreamWrapper
		p	3		outputStreamWrapper
	m	()I	a	getId
	m	(I)Lcxs;	a	fromId
		p	0		id
	m	(Lcxs;)Lcxs;	a	register
		p	0		version
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
		p	1		inputStream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
		p	1		outputStream
	m	(I)Z	b	isValidVersion
		p	0		id
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	lambda$static$4
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	b	lambda$static$5
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	lambda$static$2
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	c	lambda$static$3
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	lambda$static$0
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	d	lambda$static$1
	f	Lcxs;	a	VERSION_GZIP
	f	Lcxs;	b	VERSION_DEFLATE
	f	Lcxs;	c	VERSION_NONE
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	VERSIONS
	f	I	e	id
	f	Lcxs$a;	f	inputWrapper
	f	Lcxs$a;	g	outputWrapper
c	cxs$a	net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	wrap	wrap
		p	1		object
c	cxt	net/minecraft/world/level/chunk/storage/SectionStorage
	m	(Ljava/nio/file/Path;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/DataFixer;Lamn;ZLhn;Lcgc;)V	<init>	<init>
		p	1		path
		p	2		codecFactory
		p	3		factory
		p	4		dataFixer
		p	5		dataFixTypes
		p	6		dsync
		p	7		dynamicRegistryManager
		p	8		world
	m	()Z	a	hasWork
	m	(J)V	a	setDirty
		p	1		pos
	m	(JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$readColumn$3
		p	3		dynamic
	m	(JZLjava/lang/Object;)V	a	lambda$readColumn$4
		p	4		sections
	m	(Lcfh;)V	a	flush
		p	1		pos
	m	(Lcfh;I)J	a	getKey
		p	0		chunkPos
		p	1		y
	m	(Lcfh;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	writeColumn
		p	1		chunkPos
		p	2		ops
	m	(Lcfh;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	a	readColumn
		p	1		pos
		p	2		ops
		p	3		data
	m	(Lcfh;Ljava/lang/Throwable;)Ljava/util/Optional;	a	lambda$tryRead$1
		p	1		throwable
	m	(Lcom/mojang/serialization/Dynamic;)I	a	getVersion
		p	0		dynamic
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V	a	lambda$writeColumn$6
		p	3		object
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Lcfh;)V	b	readColumn
		p	1		pos
	m	(J)Ljava/util/Optional;	c	get
		p	1		pos
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	c	tryRead
		p	1		pos
	m	(J)Ljava/util/Optional;	d	getOrLoad
		p	1		pos
	m	(Lcfh;)V	d	writeColumn
		p	1		pos
	m	(J)Z	e	outsideStoredRange
		p	1		pos
	m	(J)Ljava/lang/Object;	f	getOrCreate
		p	1		pos
	m	(J)V	g	lambda$writeColumn$5
	m	(J)V	h	lambda$readColumn$2
	m	(J)V	i	lambda$getOrCreate$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SECTIONS_TAG
	f	Lcgc;	c	levelHeightAccessor
	f	Lcxo;	d	worker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	e	storage
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	f	dirty
	f	Ljava/util/function/Function;	g	codec
	f	Ljava/util/function/Function;	h	factory
	f	Lcom/mojang/datafixers/DataFixer;	i	fixerUpper
	f	Lamn;	j	type
	f	Lhn;	k	registryAccess
c	cxu	net/minecraft/world/level/chunk/storage/package-info
c	cxv	net/minecraft/world/level/dimension/BuiltinDimensionTypes
	m	(Ljava/lang/String;)Laai;	a	register
		p	0		id
	f	Laai;	a	OVERWORLD
	f	Laai;	b	NETHER
	f	Laai;	c	END
	f	Laai;	d	OVERWORLD_CAVES
	f	Laaj;	e	OVERWORLD_EFFECTS
	f	Laaj;	f	NETHER_EFFECTS
	f	Laaj;	g	END_EFFECTS
c	cxw	net/minecraft/world/level/dimension/DimensionDefaults
	f	I	a	OVERWORLD_MIN_Y
	f	I	b	OVERWORLD_LEVEL_HEIGHT
	f	I	c	OVERWORLD_GENERATION_HEIGHT
	f	I	d	OVERWORLD_LOGICAL_HEIGHT
	f	I	e	NETHER_MIN_Y
	f	I	f	NETHER_LEVEL_HEIGHT
	f	I	g	NETHER_GENERATION_HEIGHT
	f	I	h	NETHER_LOGICAL_HEIGHT
	f	I	i	END_MIN_Y
	f	I	j	END_LEVEL_HEIGHT
	f	I	k	END_GENERATION_HEIGHT
	f	I	l	END_LOGICAL_HEIGHT
c	cxx	net/minecraft/world/level/dimension/DimensionType
	m	(Ljava/util/OptionalLong;ZZZZDZZIIILakh;Laaj;FLcxx$a;)V	<init>	<init>
		p	1		fixedTime
		p	2		hasSkylight
		p	4		ultrawarm
		p	6		coordinateScale
		p	9		piglinSafe
	m	()Z	a	hasFixedTime
	m	(J)F	a	timeOfDay
		p	1		time
	m	(Laai;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	getStorageFolder
		p	0		worldRef
		p	1		worldDirectory
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	parseLegacy
		p	0		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcxx;Lcxx;)D	a	getTeleportationScale
		p	0		fromDimension
		p	1		toDimension
	m	()Z	b	piglinSafe
	m	(J)I	b	moonPhase
		p	1		time
	m	()Z	c	hasRaids
	m	()Layr;	d	monsterSpawnLightTest
	m	()I	e	monsterSpawnBlockLightLimit
	m	()Ljava/util/OptionalLong;	f	fixedTime
	m	()Z	g	hasSkyLight
	m	()Z	h	hasCeiling
	m	()Z	i	ultraWarm
	m	()Z	j	natural
	m	()D	k	coordinateScale
	m	()Z	l	bedWorks
	m	()Z	m	respawnAnchorWorks
	m	()I	n	minY
	m	()I	o	height
	m	()I	p	logicalHeight
	m	()Lakh;	q	infiniburn
	m	()Laaj;	r	effectsLocation
	m	()F	s	ambientLight
	m	()Lcxx$a;	t	monsterSettings
	f	I	a	BITS_FOR_Y
	f	I	b	MIN_HEIGHT
	f	I	c	Y_SIZE
	f	I	d	MAX_Y
	f	I	e	MIN_Y
	f	I	f	WAY_ABOVE_MAX_Y
	f	I	g	WAY_BELOW_MIN_Y
	f	Lcom/mojang/serialization/Codec;	h	DIRECT_CODEC
	f	[F	i	MOON_BRIGHTNESS_PER_PHASE
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Ljava/util/OptionalLong;	k	fixedTime
	f	Z	l	hasSkyLight
	f	Z	m	hasCeiling
	f	Z	n	ultraWarm
	f	Z	o	natural
	f	D	p	coordinateScale
	f	Z	q	bedWorks
	f	Z	r	respawnAnchorWorks
	f	I	s	minY
	f	I	t	height
	f	I	u	logicalHeight
	f	Lakh;	v	infiniburn
	f	Laaj;	w	effectsLocation
	f	F	x	ambientLight
	f	Lcxx$a;	y	monsterSettings
	f	I	z	MOON_PHASES
c	cxx$a	net/minecraft/world/level/dimension/DimensionType$MonsterSettings
	m	()Z	a	piglinSafe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	hasRaids
	m	()Layr;	c	monsterSpawnLightTest
	m	()I	d	monsterSpawnBlockLightLimit
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	piglinSafe
	f	Z	c	hasRaids
	f	Layr;	d	monsterSpawnLightTest
	f	I	e	monsterSpawnBlockLightLimit
c	cxy	net/minecraft/world/level/dimension/LevelStem
	m	(Lhc;Lcwn;)V	<init>	<init>
		p	1		dimensionTypeEntry
		p	2		chunkGenerator
	m	()Lhc;	a	typeHolder
	m	(Laai;)Z	a	lambda$keysInOrder$1
		p	0		registryKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhm;)Lhm;	a	sortMap
		p	0		registry
	m	(Lhm;Lht;Laai;)V	a	lambda$sortMap$2
		p	2		registryKey
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	keysInOrder
		p	0		stream
	m	()Lcwn;	b	generator
	m	(Lhm;)Z	b	stable
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laai;	b	OVERWORLD
	f	Laai;	c	NETHER
	f	Laai;	d	END
	f	Ljava/util/Set;	e	BUILTIN_ORDER
	f	Lhc;	f	type
	f	Lcwn;	g	generator
c	cxz	net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	m	()[Lcxz;	a	$values
	m	(Lafo;Lcya;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
	f	Lcxz;	a	START
	f	Lcxz;	b	PREPARING_TO_SUMMON_PILLARS
	f	Lcxz;	c	SUMMONING_PILLARS
	f	Lcxz;	d	SUMMONING_DRAGON
	f	Lcxz;	e	END
	f	[Lcxz;	f	$VALUES
c	cxz$1	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	m	(Lafo;Lcya;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	cxz$2	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	m	(Lafo;Lcya;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	cxz$3	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	m	(Lafo;Lcya;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	cxz$4	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	m	(Lafo;Lcya;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	cxz$5	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	m	(Lafo;Lcya;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	cya	net/minecraft/world/level/dimension/end/EndDragonFight
	m	(Lafo;JLpj;)V	<init>	<init>
		p	1		world
		p	2		gatewaysSeed
		p	4		nbt
	m	()Lpj;	a	saveData
	m	(Lbor;Lazz;)V	a	onCrystalDestroyed
		p	1		enderCrystal
		p	2		source
	m	(Lbos;)V	a	setDragonKilled
		p	1		dragon
	m	(Lcxz;)V	a	setRespawnStage
		p	1		spawnState
	m	(Lgt;)V	a	spawnNewGateway
		p	1		pos
	m	(Ljava/util/List;)V	a	respawnDragon
		p	1		crystals
	m	(Z)V	a	spawnExitPortal
		p	1		previouslyKilled
	m	()V	b	tick
	m	(Lbos;)V	b	updateDragon
		p	1		dragon
	m	()I	c	getCrystalsAlive
	m	()Z	d	hasPreviouslyKilledDragon
	m	()V	e	tryRespawn
	m	()V	f	resetSpikeCrystals
	m	()V	g	scanState
	m	()V	h	findOrCreateDragon
	m	()Z	i	hasActiveExitPortal
	m	()Lcuw$b;	j	findExitPortal
	m	()Z	k	isArenaLoaded
	m	()V	l	updatePlayers
	m	()V	m	updateCrystalCount
	m	()V	n	spawnNewGateway
	m	()Lbos;	o	createNewDragon
	f	I	a	ARENA_TICKET_LEVEL
	f	I	b	DRAGON_SPAWN_Y
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f	I	e	TIME_BETWEEN_CRYSTAL_SCANS
	f	I	f	TIME_BETWEEN_PLAYER_SCANS
	f	I	g	ARENA_SIZE_CHUNKS
	f	I	h	GATEWAY_COUNT
	f	I	i	GATEWAY_DISTANCE
	f	Ljava/util/function/Predicate;	j	VALID_PLAYER
	f	Lafl;	k	dragonEvent
	f	Lafo;	l	level
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	m	gateways
	f	Lcuw;	n	exitPortalPattern
	f	I	o	ticksSinceDragonSeen
	f	I	p	crystalsAlive
	f	I	q	ticksSinceCrystalsScanned
	f	I	r	ticksSinceLastPlayerScan
	f	Z	s	dragonKilled
	f	Z	t	previouslyKilled
	f	Ljava/util/UUID;	u	dragonUUID
	f	Z	v	needsStateScanning
	f	Lgt;	w	portalLocation
	f	Lcxz;	x	respawnStage
	f	I	y	respawnTime
	f	Ljava/util/List;	z	respawnCrystals
c	cyb	net/minecraft/world/level/dimension/end/package-info
c	cyc	net/minecraft/world/level/dimension/package-info
c	cyd	net/minecraft/world/level/entity/ChunkEntities
	m	(Lcfh;Ljava/util/List;)V	<init>	<init>
		p	1		pos
		p	2		list
	m	()Lcfh;	a	getPos
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	()Z	c	isEmpty
	f	Lcfh;	a	pos
	f	Ljava/util/List;	b	entities
c	cye	net/minecraft/world/level/entity/ChunkStatusUpdateListener
	m	(Lcfh;Lafa$c;)V	onChunkStatusChange	onChunkStatusChange
		p	1		pos
		p	2		levelType
c	cyf	net/minecraft/world/level/entity/EntityAccess
	m	(Lcyg;)V	a	setLevelCallback
		p	1		changeListener
	m	()I	ae	getId
	m	(Lbaq$c;)V	b	setRemoved
		p	1		reason
	m	()Ljava/util/stream/Stream;	cL	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cM	getPassengersAndSelf
	m	()Ljava/util/UUID;	cp	getUUID
	m	()Ldvo;	cz	getBoundingBox
	m	()Lgt;	db	blockPosition
	m	()Z	dx	shouldBeSaved
	m	()Z	dy	isAlwaysTicking
c	cyg	net/minecraft/world/level/entity/EntityInLevelCallback
	m	()V	a	onMove
	m	(Lbaq$c;)V	a	onRemove
		p	1		reason
	f	Lcyg;	a	NULL
c	cyg$1	net/minecraft/world/level/entity/EntityInLevelCallback$1
	m	()V	a	onMove
	m	(Lbaq$c;)V	a	onRemove
		p	1		reason
c	cyh	net/minecraft/world/level/entity/EntityLookup
	m	()Ljava/lang/Iterable;	a	getAllEntities
	m	(I)Lcyf;	a	getEntity
		p	1		id
	m	(Lcyf;)V	a	add
		p	1		entity
	m	(Lcym;Ljava/util/function/Consumer;)V	a	getEntities
		p	1		filter
		p	2		action
	m	(Ljava/util/UUID;)Lcyf;	a	getEntity
		p	1		uuid
	m	()I	b	count
	m	(Lcyf;)V	b	remove
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	byId
	f	Ljava/util/Map;	c	byUuid
c	cyi	net/minecraft/world/level/entity/EntityPersistentStorage
	m	(Lcfh;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Lcyd;)V	a	storeEntities
		p	1		dataList
	m	(Z)V	a	flush
		p	1		sync
c	cyj	net/minecraft/world/level/entity/EntitySection
	m	(Ljava/lang/Class;Lcys;)V	<init>	<init>
		p	1		entityClass
		p	2		status
	m	()Z	a	isEmpty
	m	(Lcyf;)V	a	add
		p	1		entity
	m	(Lcym;Ldvo;Ljava/util/function/Consumer;)V	a	getEntities
		p	1		type
		p	2		box
		p	3		action
	m	(Lcys;)Lcys;	a	updateChunkStatus
		p	1		status
	m	(Ldvo;Ljava/util/function/Consumer;)V	a	getEntities
		p	1		box
		p	2		action
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	(Lcyf;)Z	b	remove
		p	1		entity
	m	()Lcys;	c	getStatus
	m	()I	d	size
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lako;	b	storage
	f	Lcys;	c	chunkStatus
c	cyk	net/minecraft/world/level/entity/EntitySectionStorage
	m	(Ljava/lang/Class;Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;)V	<init>	<init>
		p	1		entityClass
		p	2		chunkStatusDiscriminator
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAllChunksWithExistingSections
	m	(II)Lit/unimi/dsi/fastutil/longs/LongSortedSet;	a	getChunkSections
		p	1		chunkX
		p	2		chunkZ
	m	(J)Ljava/util/stream/LongStream;	a	getExistingSectionPositionsInChunk
		p	1		chunkPos
	m	(Lcym;Ldvo;Ljava/util/function/Consumer;)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		action
	m	(Lcym;Ldvo;Ljava/util/function/Consumer;Lcyj;)V	a	lambda$getEntities$2
		p	3		section
	m	(Ldvo;Ljava/util/function/Consumer;)V	a	forEachAccessibleNonEmptySection
		p	1		box
		p	2		action
	m	(Ldvo;Ljava/util/function/Consumer;Lcyj;)V	a	lambda$getEntities$1
		p	2		section
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;J)V	a	lambda$getAllChunksWithExistingSections$0
		p	1		sectionPos
	m	()I	b	count
	m	(J)Ljava/util/stream/Stream;	b	getExistingSectionsInChunk
		p	1		chunkPos
	m	(Ldvo;Ljava/util/function/Consumer;)V	b	getEntities
		p	1		box
		p	2		action
	m	(J)Lcyj;	c	getOrCreateSection
		p	1		sectionPos
	m	(J)Lcyj;	d	getSection
		p	1		sectionPos
	m	(J)V	e	remove
		p	1		sectionPos
	m	(J)J	f	getChunkKeyFromSectionKey
		p	0		sectionPos
	m	(J)Lcyj;	g	createSection
		p	1		sectionPos
	f	Ljava/lang/Class;	a	entityClass
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;	b	intialSectionVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	sections
	f	Lit/unimi/dsi/fastutil/longs/LongSortedSet;	d	sectionIds
c	cyl	net/minecraft/world/level/entity/EntityTickList
	m	()V	a	ensureActiveIsNotIterated
	m	(Lbaq;)V	a	add
		p	1		entity
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		action
	m	(Lbaq;)V	b	remove
		p	1		entity
	m	(Lbaq;)Z	c	contains
		p	1		entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	active
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	passive
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	iterated
c	cym	net/minecraft/world/level/entity/EntityTypeTest
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Class;)Lcym;	a	forClass
		p	0		cls
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
c	cym$1	net/minecraft/world/level/entity/EntityTypeTest$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	f	Ljava/lang/Class;	a	val$cls
c	cyn	net/minecraft/world/level/entity/LevelCallback
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
c	cyo	net/minecraft/world/level/entity/LevelEntityGetter
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Lcyf;	a	get
		p	1		id
	m	(Lcym;Ldvo;Ljava/util/function/Consumer;)V	a	get
		p	1		filter
		p	2		box
		p	3		action
	m	(Lcym;Ljava/util/function/Consumer;)V	a	get
		p	1		filter
		p	2		action
	m	(Ldvo;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Lcyf;	a	get
		p	1		uuid
c	cyp	net/minecraft/world/level/entity/LevelEntityGetterAdapter
	m	(Lcyh;Lcyk;)V	<init>	<init>
		p	1		index
		p	2		cache
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Lcyf;	a	get
		p	1		id
	m	(Lcym;Ldvo;Ljava/util/function/Consumer;)V	a	get
		p	1		filter
		p	2		box
		p	3		action
	m	(Lcym;Ljava/util/function/Consumer;)V	a	get
		p	1		filter
		p	2		action
	m	(Ldvo;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Lcyf;	a	get
		p	1		uuid
	f	Lcyh;	a	visibleEntities
	f	Lcyk;	b	sectionStorage
c	cyq	net/minecraft/world/level/entity/PersistentEntitySectionManager
	m	(Ljava/lang/Class;Lcyn;Lcyi;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
		p	3		dataAccess
	m	()V	a	tick
	m	(J)Z	a	areEntitiesLoaded
		p	1		chunkPos
	m	(JLcyj;)V	a	removeSectionIfEmpty
		p	1		sectionPos
		p	3		section
	m	(JLjava/util/function/Consumer;)Z	a	storeChunkSections
		p	1		chunkPos
		p	3		action
	m	(Laks;J)V	a	lambda$dumpSections$17
		p	2		chunkPos
	m	(Laks;Lcyq$b;J)V	a	lambda$dumpSections$16
		p	3		sectionPos
	m	(Lcfh;)Z	a	canPositionTick
		p	1		pos
	m	(Lcfh;Lafa$c;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		levelType
	m	(Lcfh;Lcys;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		trackingStatus
	m	(Lcfh;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$requestChunkLoad$8
		p	1		throwable
	m	(Lcyf;)Z	a	addNewEntity
		p	1		entity
	m	(Lcyf;Lcys;)Lcys;	a	getEffectiveStatus
		p	0		entity
		p	1		current
	m	(Lcyf;Z)Z	a	addEntity
		p	1		entity
		p	2		existing
	m	(Lcyj;)Ljava/util/stream/Stream;	a	lambda$storeChunkSections$7
		p	0		section
	m	(Lcys;Lcyj;)V	a	lambda$updateChunkStatus$6
		p	2		group
	m	(Lgt;)Z	a	canPositionTick
		p	1		pos
	m	(Ljava/io/Writer;)V	a	dumpSections
		p	1		writer
	m	(Ljava/util/UUID;)Z	a	isLoaded
		p	1		uuid
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	()V	b	autoSave
	m	(J)V	b	ensureChunkQueuedForLoad
		p	1		chunkPos
	m	(Lcyf;)Z	b	addEntityUuid
		p	1		entity
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	()V	c	saveAll
	m	(J)V	c	requestChunkLoad
		p	1		chunkPos
	m	(Lcyf;)V	c	startTicking
		p	1		entity
	m	()Lcyo;	d	getEntityGetter
	m	(J)Z	d	processChunkUnload
		p	1		chunkPos
	m	(Lcyf;)V	d	stopTicking
		p	1		entity
	m	()Ljava/lang/String;	e	gatherStats
	m	(J)Z	e	lambda$saveAll$15
		p	1		pos
	m	(Lcyf;)V	e	startTracking
		p	1		entity
	m	()V	f	processUnloads
	m	(J)V	f	lambda$autoSave$13
		p	1		pos
	m	(Lcyf;)V	f	stopTracking
		p	1		entity
	m	()V	g	processPendingLoads
	m	(J)Z	g	lambda$processUnloads$10
		p	1		pos
	m	(Lcyf;)V	g	unloadEntity
		p	1		entity
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	h	getAllChunksToSave
	m	(Lcyf;)V	h	lambda$saveAll$14
		p	0		entity
	m	(Lcyf;)V	i	lambda$autoSave$12
		p	0		entity
	m	(Lcyf;)V	j	lambda$processPendingLoads$11
		p	1		entity
	m	(Lcyf;)V	k	lambda$processChunkUnload$9
		p	1		entity
	m	(Lcyf;)Z	l	lambda$updateChunkStatus$5
		p	0		entity
	m	(Lcyf;)Z	m	lambda$updateChunkStatus$4
		p	0		entity
	m	(Lcyf;)Z	n	lambda$updateChunkStatus$3
		p	0		entity
	m	(Lcyf;)Z	o	lambda$updateChunkStatus$2
		p	0		entity
	m	(Lcyf;)V	p	lambda$addWorldGenChunkEntities$1
		p	1		entity
	m	(Lcyf;)V	q	lambda$addLegacyChunkEntities$0
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	knownUuids
	f	Lcyn;	c	callbacks
	f	Lcyi;	d	permanentStorage
	f	Lcyh;	e	visibleEntityStorage
	f	Lcyk;	f	sectionStorage
	f	Lcyo;	g	entityGetter
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	h	chunkVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	chunkLoadStatuses
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	chunksToUnload
	f	Ljava/util/Queue;	k	loadingInbox
c	cyq$a	net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	m	(Lcyq;Lcyf;JLcyj;)V	<init>	<init>
		p	2		entity
		p	3		sectionPos
		p	5		section
	m	()V	a	onMove
	m	(Lbaq$c;)V	a	onRemove
		p	1		reason
	m	(Lcys;Lcys;)V	a	updateStatus
		p	1		oldStatus
		p	2		newStatus
	f	Lcyq;	b	this$0
	f	Lcyf;	c	entity
	f	J	d	currentSectionKey
	f	Lcyj;	e	currentSection
c	cyq$b	net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	m	()[Lcyq$b;	a	$values
	f	Lcyq$b;	a	FRESH
	f	Lcyq$b;	b	PENDING
	f	Lcyq$b;	c	LOADED
	f	[Lcyq$b;	d	$VALUES
c	cyr	net/minecraft/world/level/entity/TransientEntitySectionManager
	m	(Ljava/lang/Class;Lcyn;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
	m	()Lcyo;	a	getEntityGetter
	m	(J)Lcys;	a	lambda$new$0
		p	1		pos
	m	(JLcyj;)V	a	removeSectionIfEmpty
		p	1		packedChunkSection
		p	3		entities
	m	(Lcfh;)V	a	startTicking
		p	1		pos
	m	(Lcyf;)V	a	addEntity
		p	1		entity
	m	(Lcyj;)V	a	lambda$stopTicking$4
		p	1		sections
	m	()I	b	count
	m	(Lcfh;)V	b	stopTicking
		p	1		pos
	m	(Lcyf;)Z	b	lambda$stopTicking$3
		p	0		e
	m	(Lcyj;)V	b	lambda$startTicking$2
		p	1		sections
	m	()Ljava/lang/String;	c	gatherStats
	m	(Lcyf;)Z	c	lambda$startTicking$1
		p	0		e
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcyn;	b	callbacks
	f	Lcyh;	c	entityStorage
	f	Lcyk;	d	sectionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	tickingChunks
	f	Lcyo;	f	entityGetter
c	cyr$a	net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	m	(Lcyr;Lcyf;JLcyj;)V	<init>	<init>
		p	2		entity
		p	3		pos
		p	5		section
	m	()V	a	onMove
	m	(Lbaq$c;)V	a	onRemove
		p	1		reason
	f	Lcyr;	b	this$0
	f	Lcyf;	c	entity
	f	J	d	currentSectionKey
	f	Lcyj;	e	currentSection
c	cys	net/minecraft/world/level/entity/Visibility
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		tracked
		p	4		tick
	m	()Z	a	isTicking
	m	(Lafa$c;)Lcys;	a	fromFullChunkStatus
		p	0		levelType
	m	()Z	b	isAccessible
	m	()[Lcys;	c	$values
	f	Lcys;	a	HIDDEN
	f	Lcys;	b	TRACKED
	f	Lcys;	c	TICKING
	f	Z	d	accessible
	f	Z	e	ticking
	f	[Lcys;	f	$VALUES
c	cyt	net/minecraft/world/level/entity/package-info
c	cyu	net/minecraft/world/level/gameevent/BlockPositionSource
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	()Lczc;	a	getType
	m	(Lcga;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyu;)Lgt;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgt;	c	pos
c	cyu$a	net/minecraft/world/level/gameevent/BlockPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lqx;)Lcyu;	a	read
	m	(Lqx;Lcyu;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lqx;Lczb;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lqx;)Lczb;	b	read
		p	1		buf
c	cyv	net/minecraft/world/level/gameevent/DynamicGameEventListener
	m	(Lcza;)V	<init>	<init>
		p	1		listener
	m	()Lcza;	a	getListener
	m	(Lafo;)V	a	add
		p	1		world
	m	(Lafo;Lhq;)V	a	lambda$move$5
		p	2		sectionPos
	m	(Lcgd;Lhq;Ljava/util/function/Consumer;)V	a	ifChunkExists
		p	0		world
		p	1		sectionPos
		p	2		dispatcherConsumer
	m	(Lcyz;)V	a	lambda$move$4
		p	1		dispatcher
	m	(Lcza;Lcga;)V	a	updateListener
		p	1		listener
		p	2		world
	m	(Lcza;Lcyz;)V	a	lambda$updateListener$1
		p	1		dispatcher
	m	(Lafo;)V	b	remove
		p	1		world
	m	(Lcyz;)V	b	lambda$move$3
		p	1		dispatcher
	m	(Lcza;Lcyz;)V	b	lambda$updateListener$0
		p	1		dispatcher
	m	(Lafo;)V	c	move
		p	1		world
	m	(Lcyz;)V	c	lambda$remove$2
		p	1		dispatcher
	f	Lcza;	a	listener
	f	Lhq;	b	lastSection
c	cyw	net/minecraft/world/level/gameevent/EntityPositionSource
	m	(Lbaq;F)V	<init>	<init>
		p	1		entity
		p	2		yOffset
	m	(Lcom/mojang/datafixers/util/Either;F)V	<init>	<init>
		p	1		source
		p	2		yOffset
	m	()Lczc;	a	getType
	m	(Lbaq;)V	a	lambda$resolveEntity$6
		p	1		entity
	m	(Lcga;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Lcga;Lcom/mojang/datafixers/util/Either;)Ljava/util/Optional;	a	lambda$resolveEntity$5
	m	(Lcga;Ljava/util/UUID;)Lbaq;	a	lambda$resolveEntity$4
		p	1		uuid
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Integer;	a	lambda$getId$10
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcyw;)Ljava/lang/Float;	a	lambda$static$0
	m	(Ljava/lang/Integer;)Ljava/util/UUID;	a	lambda$getUuid$7
	m	(Ljava/util/UUID;)Ljava/lang/Integer;	a	lambda$getId$9
	m	(Ljava/util/UUID;Ljava/lang/Float;)Lcyw;	a	lambda$static$1
	m	()Ljava/util/UUID;	b	getUuid
	m	(Lbaq;)Ldvt;	b	lambda$getPosition$3
		p	1		entity
	m	(Lcga;)V	b	resolveEntity
		p	1		world
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID;	b	lambda$getUuid$8
	m	()I	c	getId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	entityOrUuidOrId
	f	F	d	yOffset
c	cyw$a	net/minecraft/world/level/gameevent/EntityPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lqx;)Lcyw;	a	read
	m	(Lqx;Lcyw;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lqx;Lczb;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lqx;)Lczb;	b	read
		p	1		buf
c	cyx	net/minecraft/world/level/gameevent/EuclideanGameEventDispatcher
	m	(Lafo;)V	<init>	<init>
		p	1		world
	m	()Z	a	isEmpty
	m	(Lafo;Ldvt;Lcza;)Ljava/util/Optional;	a	getPostableListenerPosition
		p	0		world
		p	1		listenerPos
		p	2		listener
	m	(Lcyy;Ldvt;Lcyy$a;Ljava/util/function/BiConsumer;)Z	a	walkListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		onListenerAccept
	m	(Lcza;)V	a	register
		p	1		listener
	m	(Lcza;)V	b	unregister
		p	1		listener
	f	Ljava/util/List;	b	listeners
	f	Ljava/util/Set;	c	listenersToRemove
	f	Ljava/util/List;	d	listenersToAdd
	f	Z	e	processing
	f	Lafo;	f	level
c	cyy	net/minecraft/world/level/gameevent/GameEvent
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		id
		p	2		range
	m	()Ljava/lang/String;	a	getName
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Ljava/lang/String;)Lcyy;	a	register
		p	0		id
	m	(Ljava/lang/String;I)Lcyy;	a	register
		p	0		id
		p	1		range
	m	()I	b	getNotificationRadius
	m	()Lhc$c;	c	builtInRegistryHolder
	f	Lcyy;	A	HIT_GROUND
	f	Lcyy;	B	INSTRUMENT_PLAY
	f	Lcyy;	C	ITEM_INTERACT_FINISH
	f	Lcyy;	D	ITEM_INTERACT_START
	f	Lcyy;	E	LIGHTNING_STRIKE
	f	Lcyy;	F	NOTE_BLOCK_PLAY
	f	Lcyy;	G	PISTON_CONTRACT
	f	Lcyy;	H	PISTON_EXTEND
	f	Lcyy;	I	PRIME_FUSE
	f	Lcyy;	J	PROJECTILE_LAND
	f	Lcyy;	K	PROJECTILE_SHOOT
	f	Lcyy;	L	SCULK_SENSOR_TENDRILS_CLICKING
	f	Lcyy;	M	SHEAR
	f	Lcyy;	N	SHRIEK
	f	Lcyy;	O	SPLASH
	f	Lcyy;	P	STEP
	f	Lcyy;	Q	SWIM
	f	Lcyy;	R	TELEPORT
	f	I	S	DEFAULT_NOTIFICATION_RADIUS
	f	Ljava/lang/String;	T	name
	f	I	U	notificationRadius
	f	Lhc$c;	V	builtInRegistryHolder
	f	Lcyy;	a	BLOCK_ACTIVATE
	f	Lcyy;	b	BLOCK_ATTACH
	f	Lcyy;	c	BLOCK_CHANGE
	f	Lcyy;	d	BLOCK_CLOSE
	f	Lcyy;	e	BLOCK_DEACTIVATE
	f	Lcyy;	f	BLOCK_DESTROY
	f	Lcyy;	g	BLOCK_DETACH
	f	Lcyy;	h	BLOCK_OPEN
	f	Lcyy;	i	BLOCK_PLACE
	f	Lcyy;	j	CONTAINER_CLOSE
	f	Lcyy;	k	CONTAINER_OPEN
	f	Lcyy;	l	DISPENSE_FAIL
	f	Lcyy;	m	DRINK
	f	Lcyy;	n	EAT
	f	Lcyy;	o	ELYTRA_GLIDE
	f	Lcyy;	p	ENTITY_DAMAGE
	f	Lcyy;	q	ENTITY_DIE
	f	Lcyy;	r	ENTITY_INTERACT
	f	Lcyy;	s	ENTITY_PLACE
	f	Lcyy;	t	ENTITY_ROAR
	f	Lcyy;	u	ENTITY_SHAKE
	f	Lcyy;	v	EQUIP
	f	Lcyy;	w	EXPLODE
	f	Lcyy;	x	FLAP
	f	Lcyy;	y	FLUID_PICKUP
	f	Lcyy;	z	FLUID_PLACE
c	cyy$a	net/minecraft/world/level/gameevent/GameEvent$Context
	m	()Lbaq;	a	sourceEntity
	m	(Lbaq;)Lcyy$a;	a	of
		p	0		sourceEntity
	m	(Lbaq;Lcur;)Lcyy$a;	a	of
		p	0		sourceEntity
		p	1		affectedState
	m	(Lcur;)Lcyy$a;	a	of
		p	0		affectedState
	m	()Lcur;	b	affectedState
	f	Lbaq;	a	sourceEntity
	f	Lcur;	b	affectedState
c	cyy$b	net/minecraft/world/level/gameevent/GameEvent$Message
	m	(Lcyy;Ldvt;Lcyy$a;Lcza;Ldvt;)V	<init>	<init>
		p	1		event
		p	2		emitterPos
		p	3		emitter
		p	4		listener
		p	5		listenerPos
	m	()Lcyy;	a	gameEvent
	m	(Lcyy$b;)I	a	compareTo
	m	()Ldvt;	b	source
	m	()Lcyy$a;	c	context
	m	()Lcza;	d	recipient
	f	Lcyy;	a	gameEvent
	f	Ldvt;	b	source
	f	Lcyy$a;	c	context
	f	Lcza;	d	recipient
	f	D	e	distanceToRecipient
c	cyz	net/minecraft/world/level/gameevent/GameEventDispatcher
	m	()Z	a	isEmpty
	m	(Lcyy;Ldvt;Lcyy$a;Ljava/util/function/BiConsumer;)Z	a	walkListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		onListenerAccept
	m	(Lcza;)V	a	register
		p	1		listener
	m	(Lcza;)V	b	unregister
		p	1		listener
	f	Lcyz;	a	NOOP
c	cyz$1	net/minecraft/world/level/gameevent/GameEventDispatcher$1
	m	()Z	a	isEmpty
	m	(Lcyy;Ldvt;Lcyy$a;Ljava/util/function/BiConsumer;)Z	a	walkListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		onListenerAccept
	m	(Lcza;)V	a	register
		p	1		listener
	m	(Lcza;)V	b	unregister
		p	1		listener
c	cza	net/minecraft/world/level/gameevent/GameEventListener
	m	(Lafo;Lcyy$b;)Z	a	handleGameEvent
		p	1		world
		p	2		event
	m	()Z	c	handleEventsImmediately
	m	()Lczb;	d	getListenerSource
	m	()I	f	getListenerRadius
c	czb	net/minecraft/world/level/gameevent/PositionSource
	m	()Lczc;	a	getType
	m	(Lcga;)Ljava/util/Optional;	a	getPosition
		p	1		world
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	czc	net/minecraft/world/level/gameevent/PositionSourceType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laaj;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	(Lczb;Lqx;)V	a	toNetwork
		p	0		positionSource
		p	1		buf
	m	(Ljava/lang/String;Lczc;)Lczc;	a	register
		p	0		id
		p	1		positionSourceType
	m	(Lqx;Lczb;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lqx;)Lczb;	b	read
		p	1		buf
	m	(Lqx;)Lczb;	c	fromNetwork
		p	0		buf
	f	Lczc;	a	BLOCK
	f	Lczc;	b	ENTITY
c	czd	net/minecraft/world/level/gameevent/package-info
c	cze	net/minecraft/world/level/gameevent/vibrations/VibrationListener
	m	(Lczb;ILcze$b;Lcze$a;FI)V	<init>	<init>
		p	1		positionSource
		p	2		range
		p	3		callback
		p	4		vibration
		p	5		distance
		p	6		delay
	m	(Lafo;Lcyy$b;)Z	a	handleGameEvent
		p	1		world
		p	2		event
	m	(Lafo;Lcyy;Lcyy$a;Ldvt;Ldvt;)V	a	scheduleSignal
		p	1		world
		p	2		gameEvent
		p	3		emitter
		p	4		start
		p	5		end
	m	(Lcga;)V	a	tick
		p	1		world
	m	(Lcga;Ldvt;Ldvt;)Z	a	isOccluded
		p	0		world
		p	1		start
		p	2		end
	m	(Lcur;)Z	a	lambda$isOccluded$7
		p	0		state
	m	(Lcze$b;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		callback
	m	(Lcze$b;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$6
		p	1		instance
	m	(Lcze$b;Lczb;Ljava/lang/Integer;Ljava/util/Optional;Ljava/lang/Float;Ljava/lang/Integer;)Lcze;	a	lambda$codec$5
		p	1		positionSource
		p	2		range
		p	3		vibration
		p	4		distance
		p	5		delay
	m	(Lcze;)Ljava/lang/Integer;	a	lambda$codec$4
		p	0		listener
	m	(Lcze;)Ljava/lang/Float;	b	lambda$codec$3
		p	0		listener
	m	(Lcze;)Ljava/util/Optional;	c	lambda$codec$2
		p	0		listener
	m	()Lczb;	d	getListenerSource
	m	(Lcze;)Ljava/lang/Integer;	d	lambda$codec$1
		p	0		listener
	m	(Lcze;)Lczb;	e	lambda$codec$0
		p	0		listener
	m	()I	f	getListenerRadius
	f	Lczb;	a	listenerSource
	f	I	b	listenerRange
	f	Lcze$b;	c	config
	f	Lcze$a;	d	receivingEvent
	f	F	e	receivingDistance
	f	I	f	travelTimeInTicks
c	cze$a	net/minecraft/world/level/gameevent/vibrations/VibrationListener$ReceivingEvent
	m	(Lcyy;FLdvt;Lbaq;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		entity
	m	(Lcyy;FLdvt;Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		uuid
		p	5		projectileOwnerUuid
	m	()Lcyy;	a	gameEvent
	m	(Lafo;)Ljava/util/Optional;	a	getEntity
		p	1		world
	m	(Lbaq;)Ljava/util/UUID;	a	getProjectileOwner
		p	0		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcyy;Ljava/lang/Float;Ldvt;Ljava/util/Optional;Ljava/util/Optional;)Lcze$a;	a	lambda$static$2
		p	0		event
		p	1		distance
		p	2		pos
		p	3		uuid
		p	4		projectileOwnerUuid
	m	(Lcze$a;)Ljava/util/Optional;	a	lambda$static$1
		p	0		vibration
	m	()F	b	distance
	m	(Lafo;)Ljava/util/Optional;	b	getProjectileOwner
		p	1		world
	m	(Lbaq;)Lbtx;	b	lambda$getProjectileOwner$6
		p	0		entity
	m	(Lcze$a;)Ljava/util/Optional;	b	lambda$static$0
		p	0		vibration
	m	()Ldvt;	c	pos
	m	(Lafo;)Ljava/util/Optional;	c	lambda$getProjectileOwner$7
	m	(Lbaq;)Z	c	lambda$getProjectileOwner$5
		p	0		entity
	m	()Ljava/util/UUID;	d	uuid
	m	(Lafo;)Ljava/util/Optional;	d	lambda$getEntity$4
	m	()Ljava/util/UUID;	e	projectileOwnerUuid
	m	()Lbaq;	f	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcyy;	b	gameEvent
	f	F	c	distance
	f	Ldvt;	d	pos
	f	Ljava/util/UUID;	e	uuid
	f	Ljava/util/UUID;	f	projectileOwnerUuid
	f	Lbaq;	g	entity
c	cze$b	net/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig
	m	()Z	K_	canTriggerAvoidVibration
	m	(Lafo;Lcza;Lgt;Lcyy;Lbaq;Lbaq;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Lafo;Lcza;Lgt;Lcyy;Lcyy$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Lcyy;Lcyy$a;)Z	a	isValidVibration
		p	1		gameEvent
		p	2		emitter
	m	()V	f	onSignalSchedule
	m	()Lakh;	fL	getListenableEvents
c	czf	net/minecraft/world/level/gameevent/vibrations/package-info
c	czg	net/minecraft/world/level/levelgen/Aquifer
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Lczg$a;)Lczg;	a	createDisabled
		p	0		fluidLevelSampler
	m	(Lczn$b;D)Lcur;	a	computeSubstance
	m	(Lczy;Lcfh;Ldaa;Ldah;IILczg$a;)Lczg;	a	create
		p	0		chunkNoiseSampler
		p	1		chunkPos
c	czg$1	net/minecraft/world/level/levelgen/Aquifer$1
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Lczn$b;D)Lcur;	a	computeSubstance
	f	Lczg$a;	a	val$fluidRule
c	czg$a	net/minecraft/world/level/levelgen/Aquifer$FluidPicker
	m	(III)Lczg$b;	computeFluid	computeFluid
		p	1		x
		p	2		y
		p	3		z
c	czg$b	net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	m	(ILcur;)V	<init>	<init>
		p	1		y
		p	2		state
	m	(I)Lcur;	a	at
		p	1		y
	f	I	a	fluidLevel
	f	Lcur;	b	fluidType
c	czg$c	net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	m	(Lczy;Lcfh;Ldaa;Ldah;IILczg$a;)V	<init>	<init>
		p	1		chunkNoiseSampler
		p	2		chunkPos
	m	()Z	a	shouldScheduleFluidUpdate
	m	(I)I	a	gridX
		p	1		x
	m	(II)D	a	similarity
		p	1		a
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)I	a	computeRandomizedFluidSurfaceLevel
	m	(IIILczg$b;I)Lcur;	a	computeFluidType
	m	(IIILczg$b;IZ)I	a	computeSurfaceLevel
	m	(J)Lczg$b;	a	getAquiferStatus
		p	1		pos
	m	(Lczn$b;D)Lcur;	a	computeSubstance
	m	(Lczn$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Lczg$b;Lczg$b;)D	a	calculatePressure
	m	(I)I	b	gridY
		p	1		y
	m	(III)Lczg$b;	b	computeFluid
	m	(I)I	c	gridZ
		p	1		z
	f	I	A	gridSizeX
	f	I	B	gridSizeZ
	f	[[I	C	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	f	I	a	X_RANGE
	f	I	b	Y_RANGE
	f	I	c	Z_RANGE
	f	I	d	X_SEPARATION
	f	I	e	Y_SEPARATION
	f	I	f	Z_SEPARATION
	f	I	g	X_SPACING
	f	I	h	Y_SPACING
	f	I	i	Z_SPACING
	f	I	j	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	f	D	k	FLOWING_UPDATE_SIMULARITY
	f	Lczy;	l	noiseChunk
	f	Lczn;	m	barrierNoise
	f	Lczn;	n	fluidLevelFloodednessNoise
	f	Lczn;	o	fluidLevelSpreadNoise
	f	Lczn;	p	lavaNoise
	f	Ldah;	q	positionalRandomFactory
	f	[Lczg$b;	r	aquiferCache
	f	[J	s	aquiferLocationCache
	f	Lczg$a;	t	globalFluidPicker
	f	Lczn;	u	erosion
	f	Lczn;	v	depth
	f	Z	w	shouldScheduleFluidUpdate
	f	I	x	minGridX
	f	I	y	minGridY
	f	I	z	minGridZ
c	czh	net/minecraft/world/level/levelgen/Beardifier
	m	()D	a	minValue
	m	(I)Z	a	isInKernelRange
	m	(IDI)D	a	computeBeardContribution
	m	(III)D	a	getBuryContribution
		p	0		x
		p	1		y
		p	2		z
	m	(IIII)D	a	getBeardContribution
		p	0		x
		p	1		y
		p	2		z
	m	(Lcfh;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Ldkm;)V	a	lambda$forStructuresInChunk$2
	m	(Lcgr;Lcfh;)Lczh;	a	forStructuresInChunk
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Ldke;)Z	a	lambda$forStructuresInChunk$1
	m	([F)V	a	lambda$static$0
		p	0		array
	m	()D	b	maxValue
	m	(III)D	b	computeBeardContribution
		p	0		x
		p	1		y
		p	2		z
	f	I	a	BEARD_KERNEL_RADIUS
	f	I	f	BEARD_KERNEL_SIZE
	f	[F	g	BEARD_KERNEL
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	h	pieceIterator
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	i	junctionIterator
c	czh$1	net/minecraft/world/level/levelgen/Beardifier$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	czh$a	net/minecraft/world/level/levelgen/Beardifier$Rigid
	m	()Ldjw;	a	box
	m	()Ldkp;	b	terrainAdjustment
	m	()I	c	groundLevelDelta
	f	Ldjw;	a	box
	f	Ldkp;	b	terrainAdjustment
	f	I	c	groundLevelDelta
c	czi	net/minecraft/world/level/levelgen/BelowZeroRetrogen
	m	(Lcwq;Ljava/util/Optional;)V	<init>	<init>
		p	1		targetStatus
		p	2		missingBedrock
	m	()Lcwq;	a	targetStatus
	m	(II)Z	a	hasBedrockHole
		p	1		x
		p	2		z
	m	(Lcgz;Lcwm;)Lcgz;	a	getBiomeResolver
		p	0		biomeSupplier
	m	(Lcgz;Ljava/util/function/Predicate;Lcwm;IIILchf$f;)Lhc;	a	lambda$getBiomeResolver$7
		p	3		x
		p	4		y
		p	5		z
		p	6		noise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lcwq;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Lcxf;)V	a	replaceOldBedrock
		p	0		chunk
	m	(Lcxf;Lgt;)V	a	lambda$applyBedrockMask$6
		p	1		pos
	m	(Lczi;)Ljava/util/Optional;	a	lambda$static$3
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$1
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$0
	m	(Lpj;)Lczi;	a	read
		p	0		nbt
	m	()Z	b	hasBedrockHoles
	m	(Lcxf;)V	b	applyBedrockMask
		p	1		chunk
	m	(Lcxf;Lgt;)V	b	lambda$replaceOldBedrock$5
		p	1		pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcgc;	b	UPGRADE_HEIGHT_ACCESSOR
	f	Ljava/util/BitSet;	c	EMPTY
	f	Lcom/mojang/serialization/Codec;	d	BITSET_CODEC
	f	Lcom/mojang/serialization/Codec;	e	NON_EMPTY_CHUNK_STATUS
	f	Ljava/util/Set;	f	RETAINED_RETROGEN_BIOMES
	f	Lcwq;	g	targetStatus
	f	Ljava/util/BitSet;	h	missingBedrock
c	czi$1	net/minecraft/world/level/levelgen/BelowZeroRetrogen$1
	m	()I	u_	getMinBuildHeight
	m	()I	v_	getHeight
c	czj	net/minecraft/world/level/levelgen/BitRandomSource
	m	(I)I	a	nextInt
		p	1		bound
	m	(I)I	c	next
		p	1		bits
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	f	F	b	FLOAT_MULTIPLIER
	f	D	c	DOUBLE_MULTIPLIER
c	czk	net/minecraft/world/level/levelgen/Column
	m	()Lczk;	a	line
	m	(I)Lczk;	a	below
		p	0		ceiling
	m	(II)Lczk$b;	a	around
	m	(Lcgg;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lgt$a;ILgy;)Ljava/util/OptionalInt;	a	scanDirection
		p	0		world
		p	1		height
		p	2		canGenerate
		p	3		canReplace
		p	4		mutablePos
		p	5		y
		p	6		direction
	m	(Lcgg;Lgt;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	scan
		p	0		world
		p	1		pos
		p	2		height
		p	3		canGenerate
		p	4		canReplace
	m	(Ljava/util/OptionalInt;)Lczk;	a	withFloor
		p	1		floor
	m	(Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lczk;	a	create
		p	0		ceilingHeight
		p	1		floorHeight
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	(I)Lczk;	b	fromHighest
	m	(II)Lczk$b;	b	inside
		p	0		floor
		p	1		ceiling
	m	(Ljava/util/OptionalInt;)Lczk;	b	withCeiling
		p	1		ceiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	(I)Lczk;	c	above
		p	0		floor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	(I)Lczk;	d	fromLowest
c	czk$a	net/minecraft/world/level/levelgen/Column$Line
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	Lczk$a;	a	INSTANCE
c	czk$b	net/minecraft/world/level/levelgen/Column$Range
	m	(II)V	<init>	<init>
		p	1		floor
		p	2		ceiling
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()I	e	ceiling
	m	()I	f	floor
	m	()I	g	height
	f	I	a	floor
	f	I	b	ceiling
c	czk$c	net/minecraft/world/level/levelgen/Column$Ray
	m	(IZ)V	<init>	<init>
		p	1		height
		p	2		floor
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	I	a	edge
	f	Z	b	pointingUp
c	czl	net/minecraft/world/level/levelgen/DebugLevelSource
	m	(Lhm;Lhm;)V	<init>	<init>
		p	1		structureSetRegistry
		p	2		biomeRegistry
	m	(II)Lcur;	a	getBlockStateFor
		p	0		x
		p	1		z
	m	(IILcgc;Ldai;)Lcgm;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILczu$a;Lcgc;Ldai;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lafv;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lafv;JLdai;Lcgy;Lcgr;Lcwm;Lczq$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		world
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lafv;Lcgr;Ldai;Lcwm;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcgs;Lcwm;Lcgr;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Lciw;)Ljava/util/stream/Stream;	a	lambda$static$2
		p	0		block
	m	(Lczl;)Lhm;	a	lambda$static$0
	m	(Ljava/util/List;Ldai;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/concurrent/Executor;Ldau;Ldai;Lcgr;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	m	()Lhm;	h	biomes
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lcur;	f	AIR
	f	Lcur;	g	BARRIER
	f	I	h	HEIGHT
	f	I	i	BARRIER_HEIGHT
	f	I	j	BLOCK_MARGIN
	f	Ljava/util/List;	k	ALL_BLOCKS
	f	I	l	GRID_WIDTH
	f	I	m	GRID_HEIGHT
	f	Lhm;	n	biomes
c	czm	net/minecraft/world/level/levelgen/Density
	f	D	a	SURFACE
	f	D	b	UNRECOVERABLY_DENSE
	f	D	c	UNRECOVERABLY_THIN
c	czn	net/minecraft/world/level/levelgen/DensityFunction
	m	()D	a	minValue
	m	(DD)Lczn;	a	clamp
		p	1		min
		p	3		max
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	(Lczn;)Lhc;	a	lambda$static$0
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn;	d	abs
	m	()Lczn;	e	square
	m	()Lczn;	f	cube
	m	()Lczn;	g	halfNegative
	m	()Lczn;	h	quarterNegative
	m	()Lczn;	i	squeeze
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	HOLDER_HELPER_CODEC
c	czn$a	net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	m	(I)Lczn$b;	a	forIndex
	m	([DLczn;)V	a	fillAllDirectly
c	czn$b	net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	m	()Ldau;	d	getBlender
c	czn$c	net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
	m	(Lhc;)Lczn$c;	a	lambda$static$0
	m	()Lhc;	b	noiseData
	m	()Ldod;	c	noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhc;	b	noiseData
	f	Ldod;	c	noise
c	czn$d	net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
c	czn$e	net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	f	I	a	blockX
	f	I	b	blockY
	f	I	c	blockZ
c	czn$f	net/minecraft/world/level/levelgen/DensityFunction$Visitor
	m	(Lczn$c;)Lczn$c;	a	visitNoise
c	czo	net/minecraft/world/level/levelgen/DensityFunctions
	m	()Lczn;	a	zero
	m	(D)Lczn;	a	constant
		p	0		density
	m	(IIDD)Lczn;	a	yClampedGradient
	m	(J)Lczn;	a	endIslands
		p	0		seed
	m	(Laku;)Lczn;	a	spline
		p	0		spline
	m	(Lcom/mojang/datafixers/util/Either;)Lczn;	a	lambda$static$1
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lalj;	a	singleArgumentCodec
	m	(Lcom/mojang/serialization/MapCodec;)Lalj;	a	makeCodec
	m	(Lczn;)Lczn;	a	interpolated
		p	0		inputFunction
	m	(Lczn;DD)Lczn;	a	mapFromUnitTo
	m	(Lczn;DDLczn;Lczn;)Lczn;	a	rangeChoice
	m	(Lczn;DLczn;)Lczn;	a	lerp
	m	(Lczn;Lczn;)Lczn;	a	add
	m	(Lczn;Lczn;DLhc;)Lczn;	a	shiftedNoise2d
		p	4		noiseParameters
	m	(Lczn;Lczn;Lczn;)Lczn;	a	lerp
	m	(Lczn;Lczo$k$a;)Lczn;	a	map
	m	(Lczn;Lhc;Lczo$z$a;)Lczn;	a	weirdScaledSampler
	m	(Lhc;)Lczn;	a	noise
		p	0		noiseParameters
	m	(Lhc;D)Lczn;	a	noise
		p	0		noiseParameters
		p	1		yScale
	m	(Lhc;DD)Lczn;	a	mappedNoise
		p	0		noiseParameters
	m	(Lhc;DDD)Lczn;	a	mappedNoise
		p	0		noiseParameters
		p	1		yScale
	m	(Lhc;DDDD)Lczn;	a	mappedNoise
		p	0		noiseParameters
		p	1		xzScale
		p	3		yScale
	m	(Lhm;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	m	(Lhm;Ljava/lang/String;Lalj;)Lcom/mojang/serialization/Codec;	a	register
		p	0		registry
		p	1		id
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lalj;	a	doubleFunctionArgumentCodec
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lalj;	a	singleFunctionArgumentCodec
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$doubleFunctionArgumentCodec$3
	m	()Lczn;	b	blendAlpha
	m	(Lczn;)Lczn;	b	flatCache
		p	0		inputFunction
	m	(Lczn;Lczn;)Lczn;	b	mul
	m	(Lhc;)Lczn;	b	shiftA
		p	0		noiseParameters
	m	(Lhc;DD)Lczn;	b	noise
		p	0		noiseParameters
		p	1		xzScale
		p	3		yScale
	m	()Lczn;	c	blendOffset
	m	(Lczn;)Lczn;	c	cache2d
		p	0		inputFunction
	m	(Lczn;Lczn;)Lczn;	c	min
	m	(Lhc;)Lczn;	c	shiftB
		p	0		noiseParameters
	m	(Lczn;)Lczn;	d	cacheOnce
		p	0		inputFunction
	m	(Lczn;Lczn;)Lczn;	d	max
	m	(Lhc;)Lczn;	d	shift
		p	0		noiseParameters
	m	(Lczn;)Lczn;	e	cacheAllInCell
		p	0		inputFunction
	m	(Lczn;)Lczn;	f	blendDensity
	m	(Lczn;)Lcom/mojang/datafixers/util/Either;	g	lambda$static$2
	m	(Lczn;)Lcom/mojang/serialization/Codec;	h	lambda$static$0
	f	D	a	MAX_REASONABLE_NOISE_VALUE
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NOISE_VALUE_CODEC
c	czo$1	net/minecraft/world/level/levelgen/DensityFunctions$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Mapped$Type
	f	[I	b	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$TwoArgumentSimpleFunction$Type
	f	[I	c	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$MulOrAdd$Type
c	czo$a	net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lczo$y$a;	j	type
	m	()Lczn;	k	argument1
	m	()Lczn;	l	argument2
	f	Lczo$y$a;	e	type
	f	Lczn;	f	argument1
	f	Lczn;	g	argument2
	f	D	h	minValue
	f	D	i	maxValue
c	czo$b	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()[Lczo$b;	j	$values
	f	Lczo$b;	a	INSTANCE
	f	[Lczo$b;	f	$VALUES
c	czo$c	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	m	()Lalj;	c	codec
	f	Lalj;	e	CODEC
c	czo$d	net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()[Lczo$d;	j	$values
	f	Lczo$d;	a	INSTANCE
	f	Lalj;	e	CODEC
	f	[Lczo$d;	f	$VALUES
c	czo$e	net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	m	()D	a	minValue
	m	(Lczn$b;D)D	a	transform
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn;	j	input
	f	Lczn;	a	input
	f	Lalj;	e	CODEC
c	czo$f	net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()[Lczo$f;	j	$values
	f	Lczo$f;	a	INSTANCE
	f	Lalj;	e	CODEC
	f	[Lczo$f;	f	$VALUES
c	czo$g	net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()Lczn;	ad_	input
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	f	Lalj;	a	CODEC
	f	Lczn;	e	input
	f	D	f	minValue
	f	D	g	maxValue
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	czo$h	net/minecraft/world/level/levelgen/DensityFunctions$Constant
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()D	j	value
	f	D	a	value
	f	Lalj;	e	CODEC
	f	Lczo$h;	f	ZERO
c	czo$i	net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	m	(J)V	<init>	<init>
		p	1		seed
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Ldog;II)F	a	getHeightValue
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	f	Lalj;	a	CODEC
	f	F	e	ISLAND_THRESHOLD
	f	Ldog;	f	islandNoise
c	czo$j	net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lhc;	j	function
	f	Lhc;	a	function
c	czo$k	net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	(Lczo$k$a;D)D	a	transform
	m	(Lczo$k$a;Lczn;)Lczo$k;	a	create
	m	()Lczn;	ad_	input
	m	()D	b	maxValue
	m	(Lczn$f;)Lczo$k;	b	mapAll
	m	()Lalj;	c	codec
	m	()Lczo$k$a;	k	type
	f	Lczo$k$a;	a	type
	f	Lczn;	e	input
	f	D	f	minValue
	f	D	g	maxValue
c	czo$k$a	net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lczo$k$a;	a	$values
	m	(Lczn;)Lczo$k;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lczo$k$a;	a	ABS
	f	Lczo$k$a;	b	SQUARE
	f	Lczo$k$a;	c	CUBE
	f	Lczo$k$a;	d	HALF_NEGATIVE
	f	Lczo$k$a;	e	QUARTER_NEGATIVE
	f	Lczo$k$a;	f	SQUEEZE
	f	Ljava/lang/String;	g	name
	f	Lalj;	h	codec
	f	[Lczo$k$a;	i	$VALUES
c	czo$l	net/minecraft/world/level/levelgen/DensityFunctions$Marker
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lczo$l$a;	j	type
	m	()Lczn;	k	wrapped
	f	Lczo$l$a;	a	type
	f	Lczn;	e	wrapped
c	czo$l$a	net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lczo$l$a;	a	$values
	m	(Lczn;)Lczo$m;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lczo$l$a;	a	Interpolated
	f	Lczo$l$a;	b	FlatCache
	f	Lczo$l$a;	c	Cache2D
	f	Lczo$l$a;	d	CacheOnce
	f	Lczo$l$a;	e	CacheAllInCell
	f	Ljava/lang/String;	f	name
	f	Lalj;	g	codec
	f	[Lczo$l$a;	h	$VALUES
c	czo$m	net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()Lalj;	c	codec
	m	()Lczo$l$a;	j	type
	m	()Lczn;	k	wrapped
c	czo$n	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()Lczn;	ad_	input
	m	()D	b	maxValue
	m	()Lczo$y$a;	j	type
	m	()Lczn;	k	argument1
	m	()Lczn;	l	argument2
	m	()Lczo$n$a;	m	specificType
	m	()D	n	argument
	f	Lczo$n$a;	e	specificType
	f	Lczn;	f	input
	f	D	g	minValue
	f	D	h	maxValue
	f	D	i	argument
c	czo$n$a	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	m	()[Lczo$n$a;	a	$values
	f	Lczo$n$a;	a	MUL
	f	Lczo$n$a;	b	ADD
	f	[Lczo$n$a;	c	$VALUES
c	czo$o	net/minecraft/world/level/levelgen/DensityFunctions$Noise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn$c;	j	noise
	m	()D	k	xzScale
	m	()D	l	yScale
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lalj;	e	CODEC
	f	Lczn$c;	f	noise
	f	D	g	xzScale
	f	D	h	yScale
c	czo$p	net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	m	(D)D	a	transform
		p	1		density
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()Lczn;	ad_	input
c	czo$q	net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn;	j	input
	m	()D	k	minInclusive
	m	()D	l	maxExclusive
	m	()Lczn;	m	whenInRange
	m	()Lczn;	n	whenOutOfRange
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lalj;	e	CODEC
	f	Lczn;	f	input
	f	D	g	minInclusive
	f	D	h	maxExclusive
	f	Lczn;	i	whenInRange
	f	Lczn;	j	whenOutOfRange
c	czo$r	net/minecraft/world/level/levelgen/DensityFunctions$Shift
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()Lalj;	c	codec
	m	()Lczn$c;	j	offsetNoise
	f	Lczn$c;	a	offsetNoise
	f	Lalj;	e	CODEC
c	czo$s	net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()Lalj;	c	codec
	m	()Lczn$c;	j	offsetNoise
	f	Lczn$c;	a	offsetNoise
	f	Lalj;	e	CODEC
c	czo$t	net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()Lalj;	c	codec
	m	()Lczn$c;	j	offsetNoise
	f	Lczn$c;	a	offsetNoise
	f	Lalj;	e	CODEC
c	czo$u	net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	m	()D	a	minValue
	m	(DDD)D	a	compute
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lczn$c;	j	offsetNoise
c	czo$v	net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn;	j	shiftX
	m	()Lczn;	k	shiftY
	m	()Lczn;	l	shiftZ
	m	()D	m	xzScale
	m	()D	n	yScale
	m	()Lczn$c;	o	noise
	f	Lalj;	a	CODEC
	f	Lczn;	e	shiftX
	f	Lczn;	f	shiftY
	f	Lczn;	g	shiftZ
	f	D	h	xzScale
	f	D	i	yScale
	f	Lczn$c;	j	noise
	f	Lcom/mojang/serialization/MapCodec;	k	DATA_CODEC
c	czo$w	net/minecraft/world/level/levelgen/DensityFunctions$Spline
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	(Lczn$f;Lczo$w$a;)Lczo$w$a;	a	lambda$mapAll$0
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Laku;	j	spline
	f	Lalj;	a	CODEC
	f	Laku;	e	spline
	f	Lcom/mojang/serialization/Codec;	f	SPLINE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	g	DATA_CODEC
c	czo$w$a	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate
	m	()Lhc;	a	function
	m	(Lczn$f;)Lczo$w$a;	a	mapAll
	m	(Lczo$w$b;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhc;	c	function
c	czo$w$b	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point
	m	()Lczn$b;	a	context
	f	Lczn$b;	a	context
c	czo$x	net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$b;D)D	a	transform
	m	([DLczn$a;)V	a	fillArray
	m	()Lczn;	j	input
c	czo$y	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	m	(Lczo$y$a;Lczn;Lczn;)Lczo$y;	a	create
		p	0		type
		p	1		argument1
		p	2		argument2
	m	()Lalj;	c	codec
	m	()Lczo$y$a;	j	type
	m	()Lczn;	k	argument1
	m	()Lczn;	l	argument2
	f	Lorg/slf4j/Logger;	a	LOGGER
c	czo$y$a	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lczo$y$a;	a	$values
	m	(Lczn;Lczn;)Lczo$y;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lczo$y$a;	a	ADD
	f	Lczo$y$a;	b	MUL
	f	Lczo$y$a;	c	MIN
	f	Lczo$y$a;	d	MAX
	f	Lalj;	e	codec
	f	Ljava/lang/String;	f	name
	f	[Lczo$y$a;	g	$VALUES
c	czo$z	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lczn$b;D)D	a	transform
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn;	j	input
	m	()Lczn$c;	k	noise
	m	()Lczo$z$a;	l	rarityValueMapper
	f	Lalj;	a	CODEC
	f	Lczn;	e	input
	f	Lczn$c;	f	noise
	f	Lczo$z$a;	g	rarityValueMapper
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	czo$z$a	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	m	(Ljava/lang/String;ILjava/lang/String;Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;D)V	<init>	<init>
		p	3		name
		p	4		scaleFunction
	m	()[Lczo$z$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lczo$z$a;	a	TYPE1
	f	Lczo$z$a;	b	TYPE2
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;	e	mapper
	f	D	f	maxRarity
	f	[Lczo$z$a;	g	$VALUES
c	czo$aa	net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()I	j	fromY
	m	()I	k	toY
	m	()D	l	fromValue
	m	()D	m	toValue
	f	Lalj;	a	CODEC
	f	I	e	fromY
	f	I	f	toY
	f	D	g	fromValue
	f	D	h	toValue
	f	Lcom/mojang/serialization/MapCodec;	i	DATA_CODEC
c	czp	net/minecraft/world/level/levelgen/FlatLevelSource
	m	(Lhm;Ldii;)V	<init>	<init>
		p	1		structureSetRegistry
		p	2		config
	m	(I)[Lcur;	a	lambda$getBaseColumn$2
	m	(IILcgc;Ldai;)Lcgm;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILczu$a;Lcgc;Ldai;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lafv;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lafv;JLdai;Lcgy;Lcgr;Lcwm;Lczq$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		world
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lafv;Lcgr;Ldai;Lcwm;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcgc;)I	a	getSpawnHeight
		p	1		world
	m	(Lcur;)Lcur;	a	lambda$getBaseColumn$1
		p	0		state
	m	(Ljava/util/List;Ldai;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/concurrent/Executor;Ldau;Ldai;Lcgr;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	m	()Ldii;	h	settings
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ldii;	f	settings
c	czq	net/minecraft/world/level/levelgen/GenerationStep
c	czq$a	net/minecraft/world/level/levelgen/GenerationStep$Carving
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lczq$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lczq$a;	a	AIR
	f	Lczq$a;	b	LIQUID
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lczq$a;	e	$VALUES
c	czq$b	net/minecraft/world/level/levelgen/GenerationStep$Decoration
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lczq$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lczq$b;	a	RAW_GENERATION
	f	Lczq$b;	b	LAKES
	f	Lczq$b;	c	LOCAL_MODIFICATIONS
	f	Lczq$b;	d	UNDERGROUND_STRUCTURES
	f	Lczq$b;	e	SURFACE_STRUCTURES
	f	Lczq$b;	f	STRONGHOLDS
	f	Lczq$b;	g	UNDERGROUND_ORES
	f	Lczq$b;	h	UNDERGROUND_DECORATION
	f	Lczq$b;	i	FLUID_SPRINGS
	f	Lczq$b;	j	VEGETAL_DECORATION
	f	Lczq$b;	k	TOP_LAYER_MODIFICATION
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	f	Ljava/lang/String;	m	name
	f	[Lczq$b;	n	$VALUES
c	czr	net/minecraft/world/level/levelgen/GeodeBlockSettings
	m	(Ldgz;Ldgz;Ldgz;Ldgz;Ldgz;Ljava/util/List;Lakh;Lakh;)V	<init>	<init>
		p	1		fillingProvider
		p	2		innerLayerProvider
		p	3		alternateInnerLayerProvider
		p	4		middleLayerProvider
		p	5		outerLayerProvider
		p	6		innerBlocks
		p	7		cannotReplace
		p	8		invalidBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Lczr;)Lakh;	a	lambda$static$7
		p	0		config
	m	(Lczr;)Lakh;	b	lambda$static$6
		p	0		config
	m	(Lczr;)Ljava/util/List;	c	lambda$static$5
		p	0		config
	m	(Lczr;)Ldgz;	d	lambda$static$4
		p	0		config
	m	(Lczr;)Ldgz;	e	lambda$static$3
		p	0		config
	m	(Lczr;)Ldgz;	f	lambda$static$2
		p	0		config
	m	(Lczr;)Ldgz;	g	lambda$static$1
		p	0		config
	m	(Lczr;)Ldgz;	h	lambda$static$0
		p	0		config
	f	Ldgz;	a	fillingProvider
	f	Ldgz;	b	innerLayerProvider
	f	Ldgz;	c	alternateInnerLayerProvider
	f	Ldgz;	d	middleLayerProvider
	f	Ldgz;	e	outerLayerProvider
	f	Ljava/util/List;	f	innerPlacements
	f	Lakh;	g	cannotReplace
	f	Lakh;	h	invalidBlocks
	f	Lcom/mojang/serialization/Codec;	i	CODEC
c	czs	net/minecraft/world/level/levelgen/GeodeCrackSettings
	m	(DDI)V	<init>	<init>
		p	1		generateCrackChance
		p	3		baseCrackSize
		p	5		crackPointOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lczs;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Lczs;)Ljava/lang/Double;	b	lambda$static$1
		p	0		config
	m	(Lczs;)Ljava/lang/Double;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	generateCrackChance
	f	D	c	baseCrackSize
	f	I	d	crackPointOffset
c	czt	net/minecraft/world/level/levelgen/GeodeLayerSettings
	m	(DDDD)V	<init>	<init>
		p	1		filling
		p	3		innerLayer
		p	5		middleLayer
		p	7		outerLayer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lczt;)Ljava/lang/Double;	a	lambda$static$3
		p	0		config
	m	(Lczt;)Ljava/lang/Double;	b	lambda$static$2
		p	0		config
	m	(Lczt;)Ljava/lang/Double;	c	lambda$static$1
		p	0		config
	m	(Lczt;)Ljava/lang/Double;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	filling
	f	D	c	innerLayer
	f	D	d	middleLayer
	f	D	e	outerLayer
	f	Lcom/mojang/serialization/Codec;	f	LAYER_RANGE
c	czu	net/minecraft/world/level/levelgen/Heightmap
	m	(Lcwm;Lczu$a;)V	<init>	<init>
		p	1		chunk
		p	2		type
	m	()[J	a	getRawData
	m	(I)I	a	getFirstAvailable
		p	1		index
	m	(II)I	a	getFirstAvailable
		p	1		x
		p	2		z
	m	(III)V	a	setHeight
		p	1		x
		p	2		z
		p	3		height
	m	(IIILcur;)Z	a	update
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(Lcur;)Z	a	lambda$static$1
		p	0		state
	m	(Lcwm;Lczu$a;[J)V	a	setRawData
		p	1		chunk
		p	2		type
	m	(Lcwm;Ljava/util/Set;)V	a	primeHeightmaps
		p	0		chunk
		p	1		types
	m	(II)I	b	getHighestTaken
	m	(Lcur;)Z	b	lambda$static$0
		p	0		state
	m	(II)I	c	getIndex
		p	0		x
		p	1		z
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	NOT_AIR
	f	Ljava/util/function/Predicate;	c	MATERIAL_MOTION_BLOCKING
	f	Lakn;	d	data
	f	Ljava/util/function/Predicate;	e	isOpaque
	f	Lcwm;	f	chunk
c	czu$a	net/minecraft/world/level/levelgen/Heightmap$Types
	m	(Ljava/lang/String;ILjava/lang/String;Lczu$b;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3		name
		p	4		purpose
		p	5		blockPredicate
	m	()Ljava/lang/String;	a	getSerializationKey
	m	(Lcur;)Z	a	lambda$static$1
		p	0		state
	m	()Z	b	sendToClient
	m	(Lcur;)Z	b	lambda$static$0
		p	0		state
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	keepAfterWorldgen
	m	()Ljava/util/function/Predicate;	e	isOpaque
	m	()[Lczu$a;	f	$values
	f	Lczu$a;	a	WORLD_SURFACE_WG
	f	Lczu$a;	b	WORLD_SURFACE
	f	Lczu$a;	c	OCEAN_FLOOR_WG
	f	Lczu$a;	d	OCEAN_FLOOR
	f	Lczu$a;	e	MOTION_BLOCKING
	f	Lczu$a;	f	MOTION_BLOCKING_NO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	serializationKey
	f	Lczu$b;	i	usage
	f	Ljava/util/function/Predicate;	j	isOpaque
	f	[Lczu$a;	k	$VALUES
c	czu$b	net/minecraft/world/level/levelgen/Heightmap$Usage
	m	()[Lczu$b;	a	$values
	f	Lczu$b;	a	WORLDGEN
	f	Lczu$b;	b	LIVE_WORLD
	f	Lczu$b;	c	CLIENT
	f	[Lczu$b;	d	$VALUES
c	czv	net/minecraft/world/level/levelgen/LegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lalu;	d	fork
	m	()Ldah;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Lczw;	i	gaussianSource
c	czv$a	net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	m	(J)V	<init>	<init>
		p	1		seed
	m	(III)Lalu;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Ljava/lang/String;)Lalu;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	J	a	seed
c	czw	net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	m	(Lalu;)V	<init>	<init>
		p	1		baseRandom
	m	()V	a	reset
	m	()D	b	nextGaussian
	f	Lalu;	a	randomSource
	f	D	b	nextNextGaussian
	f	Z	c	haveNextNextGaussian
c	czx	net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	m	(Lhm;Lhm;Lcha;Lhc;)V	<init>	<init>
		p	1		structureSetRegistry
		p	2		noiseRegistry
		p	3		populationSource
	m	(IILcgc;Ldai;)Lcgm;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILczu$a;Lcgc;Ldai;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Laai;)Z	a	stable
		p	1		settings
	m	(Lafv;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lafv;JLdai;Lcgy;Lcgr;Lcwm;Lczq$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		world
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lafv;Lcgr;Ldai;Lcwm;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcfh;Ldai;)Lcgx;	a	lambda$applyCarvers$10
	m	(Lcgc;Ldai;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt;	a	iterateNoiseColumn
	m	(Lcgr;Lafv;Ldai;Lcwm;)Lczy;	a	lambda$applyCarvers$9
	m	(Lcgr;Ldau;Ldai;Lcwm;)Lczy;	a	lambda$doFill$13
		p	4		chunk
	m	(Lcwm;Lcgr;Ldau;Ldai;)Lczy;	a	createNoiseChunk
	m	(Lcwm;Ldaq;Ldai;Lcgr;Lcgy;Lhm;Ldau;)V	a	buildSurface
	m	(Lczg$b;ILczg$b;Lczg$b;III)Lczg$b;	a	lambda$new$4
		p	4		x
		p	5		y
		p	6		z
	m	(Lczx;)Lhc;	a	lambda$static$2
		p	0		generator
	m	(Lczy;IIILcur;)Lcur;	a	debugPreliminarySurfaceLevel
		p	1		chunkNoiseSampler
		p	2		x
		p	3		y
		p	4		z
		p	5		state
	m	(Ldai;III)Lhc;	a	lambda$applyCarvers$8
	m	(Ldau;Lcgr;Ldai;Lcwm;II)Lcwm;	a	doFill
		p	1		blender
		p	2		structureAccessor
		p	3		noiseConfig
		p	4		chunk
	m	(Ldau;Ldai;Lcgr;Lcwm;)V	a	doCreateBiomes
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Lhm;Ljava/util/concurrent/Executor;Ldai;Ldau;Lcgr;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		biomeRegistry
		p	2		executor
		p	3		noiseConfig
		p	4		blender
		p	5		structureAccessor
		p	6		chunk
	m	(Ljava/util/List;Ldai;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/Set;Lcwm;Ljava/lang/Throwable;)V	a	lambda$fillFromNoise$12
	m	(Ljava/util/concurrent/Executor;Ldau;Ldai;Lcgr;Lcwm;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcgr;Ldau;Ldai;Lcwm;)Lczy;	b	lambda$buildSurface$7
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Lczx;)Lcha;	b	lambda$static$1
		p	0		generator
	m	(Ldau;Lcgr;Ldai;Lcwm;II)Lcwm;	b	lambda$fillFromNoise$11
	m	(Ldau;Ldai;Lcgr;Lcwm;)Lcwm;	b	lambda$createBiomes$5
	m	(Lcgr;Ldau;Ldai;Lcwm;)Lczy;	c	lambda$doCreateBiomes$6
	m	(Lczx;)Lhm;	c	lambda$static$0
		p	0		generator
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	m	()Lhc;	h	generatorSettings
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lcur;	f	defaultBlock
	f	Lhc;	g	settings
	f	Lcur;	h	AIR
	f	Lhm;	i	noises
	f	Lczg$a;	j	globalFluidPicker
c	czy	net/minecraft/world/level/levelgen/NoiseChunk
	m	(ILdai;IILdac;Lczo$c;Lczz;Lczg$a;Ldau;)V	<init>	<init>
		p	1		horizontalSize
	m	()I	a	blockX
	m	(DLczy$i;)V	a	lambda$updateForZ$4
		p	2		interpolator
	m	(I)Lczn$b;	a	forIndex
	m	(ID)V	a	updateForY
	m	(II)I	a	preliminarySurfaceLevel
	m	(IILczy$i;)V	a	lambda$selectCellYZ$1
		p	2		interpolator
	m	(J)I	a	computePreliminarySurfaceLevel
	m	(Lcwm;Ldai;Lczo$c;Lczz;Lczg$a;Ldau;)Lczy;	a	forChunk
		p	0		chunk
	m	(Lczn;)Lczn;	a	wrap
	m	(Lczn;Lczn$b;)Lcur;	a	lambda$new$0
	m	(Ldaa;Ljava/util/List;)Lchf$f;	a	cachedClimateSampler
	m	(ZI)V	a	fillSlice
	m	([DLczn;)V	a	fillAllDirectly
	m	()I	b	blockY
	m	(DLczy$i;)V	b	lambda$updateForX$3
		p	2		interpolator
	m	(I)V	b	advanceCellX
		p	1		x
	m	(ID)V	b	updateForX
	m	(II)V	b	selectCellYZ
		p	1		noiseY
		p	2		noiseZ
	m	(Lczn;)Lczn;	b	wrapNew
	m	()I	c	blockZ
	m	(DLczy$i;)V	c	lambda$updateForY$2
		p	2		interpolator
	m	(I)Lczy;	c	forIndex
	m	(ID)V	c	updateForZ
	m	(II)Ldau$a;	c	getOrComputeBlendingOutput
	m	()Ldau;	d	getBlender
	m	()Lcur;	e	getInterpolatedState
	m	()V	f	initializeForFirstCellX
	m	()V	g	stopInterpolation
	m	()V	h	swapSlices
	m	()Lczg;	i	aquifer
	m	()I	j	cellWidth
	m	()I	k	cellHeight
	f	I	A	cellStartBlockX
	f	I	B	cellStartBlockY
	f	I	C	cellStartBlockZ
	f	I	D	inCellX
	f	I	E	inCellY
	f	I	F	inCellZ
	f	J	G	interpolationCounter
	f	J	H	arrayInterpolationCounter
	f	I	I	arrayIndex
	f	Lczn$a;	J	sliceFillingContextProvider
	f	Ldac;	a	noiseSettings
	f	I	b	cellCountXZ
	f	I	c	cellCountY
	f	I	d	cellNoiseMinY
	f	I	e	firstCellX
	f	I	f	firstCellZ
	f	I	g	firstNoiseX
	f	I	h	firstNoiseZ
	f	Ljava/util/List;	i	interpolators
	f	Ljava/util/List;	j	cellCaches
	f	Ljava/util/Map;	k	wrapped
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	l	preliminarySurfaceLevel
	f	Lczg;	m	aquifer
	f	Lczn;	n	initialDensityNoJaggedness
	f	Lczy$c;	o	blockStateRule
	f	Ldau;	p	blender
	f	Lczy$g;	q	blendAlpha
	f	Lczy$g;	r	blendOffset
	f	Lczo$c;	s	beardifier
	f	J	t	lastBlendingDataPos
	f	Ldau$a;	u	lastBlendingOutput
	f	I	v	noiseSizeXZ
	f	I	w	cellWidth
	f	I	x	cellHeight
	f	Z	y	interpolating
	f	Z	z	fillingCell
c	czy$1	net/minecraft/world/level/levelgen/NoiseChunk$1
	m	(I)Lczn$b;	a	forIndex
	m	([DLczn;)V	a	fillAllDirectly
	f	Lczy;	a	this$0
c	czy$2	net/minecraft/world/level/levelgen/NoiseChunk$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Marker$Type
c	czy$a	net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn;	k	wrapped
	f	Lczy;	a	this$0
c	czy$b	net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	m	()D	a	minValue
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Lczn$f;)Lczn;	a	mapAll
		p	1		visitor
	m	([DLczn$a;)V	a	fillArray
	m	()D	b	maxValue
	m	()Lalj;	c	codec
	m	()Lczn;	k	wrapped
	f	Lczy;	a	this$0
c	czy$c	net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
	m	(Lczn$b;)Lcur;	calculate	calculate
		p	1		pos
c	czy$d	net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()Lczo$l$a;	j	type
	m	()Lczn;	k	wrapped
	f	Lczn;	a	function
	f	J	e	lastPos2D
	f	D	f	lastValue
c	czy$e	net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()Lczo$l$a;	j	type
	m	()Lczn;	k	wrapped
	f	Lczy;	a	this$0
	f	Lczn;	e	noiseFiller
	f	[D	f	values
c	czy$f	net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()Lczo$l$a;	j	type
	m	()Lczn;	k	wrapped
	f	Lczy;	a	this$0
	f	Lczn;	e	function
	f	J	f	lastCounter
	f	J	g	lastArrayCounter
	f	D	h	lastValue
	f	[D	i	lastArray
c	czy$g	net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	()Lczo$l$a;	j	type
	m	()Lczn;	k	wrapped
	f	Lczy;	a	this$0
	f	Lczn;	e	noiseFiller
	f	[[D	f	values
c	czy$h	net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lczn;	k	wrapped
c	czy$i	net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	m	(Lczy;Lczn;)V	<init>	<init>
		p	2		columnSampler
	m	(D)V	a	updateForY
		p	1		deltaY
	m	(II)[[D	a	allocateSlice
		p	1		sizeZ
		p	2		sizeX
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	([DLczn$a;)V	a	fillArray
	m	(D)V	b	updateForX
		p	1		deltaX
	m	(II)V	b	selectCellYZ
		p	1		noiseY
		p	2		noiseZ
	m	(D)V	c	updateForZ
		p	1		deltaZ
	m	()Lczo$l$a;	j	type
	m	()Lczn;	k	wrapped
	m	()V	l	swapSlices
	f	Lczy;	a	this$0
	f	[[D	e	slice0
	f	[[D	f	slice1
	f	Lczn;	g	noiseFiller
	f	D	h	noise000
	f	D	i	noise001
	f	D	j	noise100
	f	D	k	noise101
	f	D	l	noise010
	f	D	m	noise011
	f	D	n	noise110
	f	D	o	noise111
	f	D	p	valueXZ00
	f	D	q	valueXZ10
	f	D	r	valueXZ01
	f	D	s	valueXZ11
	f	D	t	valueZ0
	f	D	u	valueZ1
	f	D	v	value
c	czz	net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	m	(Ldac;Lcur;Lcur;Ldaa;Ldal$o;Ljava/util/List;IZZZZ)V	<init>	<init>
		p	5		surfaceRule
	m	()Z	a	disableMobGeneration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhm;)Lhc;	a	bootstrap
		p	0		registry
	m	(Lhm;Laai;Lczz;)Lhc;	a	register
		p	0		registry
		p	1		key
		p	2		chunkGeneratorSettings
	m	(ZZ)Lczz;	a	overworld
		p	0		amplified
		p	1		largeBiomes
	m	()Z	b	isAquifersEnabled
	m	()Z	c	oreVeinsEnabled
	m	()Ldar$a;	d	getRandomSource
	m	()Lczz;	e	dummy
	m	()Ldac;	f	noiseSettings
	m	()Lcur;	g	defaultBlock
	m	()Lcur;	h	defaultFluid
	m	()Ldaa;	i	noiseRouter
	m	()Ldal$o;	j	surfaceRule
	m	()Ljava/util/List;	k	spawnTarget
	m	()I	l	seaLevel
	m	()Z	m	aquifersEnabled
	m	()Z	n	useLegacyRandomSource
	m	()Lczz;	o	end
	m	()Lczz;	p	nether
	m	()Lczz;	q	caves
	m	()Lczz;	r	floatingIslands
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laai;	c	OVERWORLD
	f	Laai;	d	LARGE_BIOMES
	f	Laai;	e	AMPLIFIED
	f	Laai;	f	NETHER
	f	Laai;	g	END
	f	Laai;	h	CAVES
	f	Laai;	i	FLOATING_ISLANDS
	f	Ldac;	j	noiseSettings
	f	Lcur;	k	defaultBlock
	f	Lcur;	l	defaultFluid
	f	Ldaa;	m	noiseRouter
	f	Ldal$o;	n	surfaceRule
	f	Ljava/util/List;	o	spawnTarget
	f	I	p	seaLevel
	f	Z	q	disableMobGeneration
	f	Z	r	aquifersEnabled
	f	Z	s	oreVeinsEnabled
	f	Z	t	useLegacyRandomSource
c	daa	net/minecraft/world/level/levelgen/NoiseRouter
	m	()Lczn;	a	barrierNoise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lczn$f;)Ldaa;	a	mapAll
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	field
	m	()Lczn;	b	fluidLevelFloodednessNoise
	m	()Lczn;	c	fluidLevelSpreadNoise
	m	()Lczn;	d	lavaNoise
	m	()Lczn;	e	temperature
	m	()Lczn;	f	vegetation
	m	()Lczn;	g	continents
	m	()Lczn;	h	erosion
	m	()Lczn;	i	depth
	m	()Lczn;	j	ridges
	m	()Lczn;	k	initialDensityWithoutJaggedness
	m	()Lczn;	l	finalDensity
	m	()Lczn;	m	veinToggle
	m	()Lczn;	n	veinRidged
	m	()Lczn;	o	veinGap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lczn;	b	barrierNoise
	f	Lczn;	c	fluidLevelFloodednessNoise
	f	Lczn;	d	fluidLevelSpreadNoise
	f	Lczn;	e	lavaNoise
	f	Lczn;	f	temperature
	f	Lczn;	g	vegetation
	f	Lczn;	h	continents
	f	Lczn;	i	erosion
	f	Lczn;	j	depth
	f	Lczn;	k	ridges
	f	Lczn;	l	initialDensityWithoutJaggedness
	f	Lczn;	m	finalDensity
	f	Lczn;	n	veinToggle
	f	Lczn;	o	veinRidged
	f	Lczn;	p	veinGap
c	dab	net/minecraft/world/level/levelgen/NoiseRouterData
	m	()Ldaa;	a	none
	m	(F)F	a	peaksAndValleys
	m	(Laai;)Lhc;	a	getNoise
		p	0		key
	m	(Lczn;)Lczn;	a	peaksAndValleys
	m	(Lczn;II)Lczn;	a	slideEndLike
	m	(Lczn;IIIIDIID)Lczn;	a	slide
	m	(Lczn;Lczn;)Lczn;	a	splineWithBlending
	m	(Lczn;Lczn;III)Lczn;	a	yLimitedInterpolatable
	m	(Ldae$a;)I	a	lambda$overworld$1
	m	(Lhm;)Lhc;	a	bootstrap
		p	0		registry
	m	(Lhm;II)Lczn;	a	slideNetherLike
	m	(Lhm;Laai;)Lczn;	a	getFunction
	m	(Lhm;Laai;Lczn;)Lczn;	a	registerAndWrap
	m	(Lhm;Lczn;)Lczn;	a	underground
	m	(Lhm;Lczn;Lhc;Lhc;Laai;Laai;Laai;Laai;Laai;Z)V	a	registerTerrainNoises
	m	(Lhm;ZZ)Ldaa;	a	overworld
	m	(Ljava/lang/String;)Laai;	a	createKey
		p	0		id
	m	(ZLczn;)Lczn;	a	slideOverworld
	m	()Lczn;	b	spaghettiRoughnessFunction
	m	(Lczn;)Lczn;	b	postProcess
	m	(Lczn;Lczn;)Lczn;	b	noiseGradientDensity
	m	(Ldae$a;)I	b	lambda$overworld$0
	m	(Lhm;)Ldaa;	b	nether
	m	(Lhm;Laai;Lczn;)Lhc;	b	register
		p	0		registry
		p	1		key
		p	2		densityFunction
	m	(Lhm;Lczn;)Ldaa;	b	noNewCaves
	m	()Lczn;	c	pillars
	m	(Lczn;)Lczn;	c	slideEnd
	m	(Lhm;)Ldaa;	c	caves
	m	(Lhm;)Ldaa;	d	floatingIslands
	m	(Lhm;)Ldaa;	e	end
	m	(Lhm;)Lczn;	f	entrances
		p	0		registry
	m	(Lhm;)Lczn;	g	noodle
		p	0		registry
	m	(Lhm;)Lczn;	h	spaghetti2D
		p	0		registry
	f	Laai;	A	BASE_3D_NOISE_END
	f	Laai;	B	SLOPED_CHEESE
	f	Laai;	C	OFFSET_LARGE
	f	Laai;	D	FACTOR_LARGE
	f	Laai;	E	JAGGEDNESS_LARGE
	f	Laai;	F	DEPTH_LARGE
	f	Laai;	G	SLOPED_CHEESE_LARGE
	f	Laai;	H	OFFSET_AMPLIFIED
	f	Laai;	I	FACTOR_AMPLIFIED
	f	Laai;	J	JAGGEDNESS_AMPLIFIED
	f	Laai;	K	DEPTH_AMPLIFIED
	f	Laai;	L	SLOPED_CHEESE_AMPLIFIED
	f	Laai;	M	SLOPED_CHEESE_END
	f	Laai;	N	SPAGHETTI_ROUGHNESS_FUNCTION
	f	Laai;	O	ENTRANCES
	f	Laai;	P	NOODLE
	f	Laai;	Q	PILLARS
	f	Laai;	R	SPAGHETTI_2D_THICKNESS_MODULATOR
	f	Laai;	S	SPAGHETTI_2D
	f	F	a	GLOBAL_OFFSET
	f	I	b	ISLAND_CHUNK_DISTANCE
	f	J	c	ISLAND_CHUNK_DISTANCE_SQR
	f	Laai;	d	CONTINENTS
	f	Laai;	e	EROSION
	f	Laai;	f	RIDGES
	f	Laai;	g	RIDGES_FOLDED
	f	Laai;	h	OFFSET
	f	Laai;	i	FACTOR
	f	Laai;	j	JAGGEDNESS
	f	Laai;	k	DEPTH
	f	Laai;	l	CONTINENTS_LARGE
	f	Laai;	m	EROSION_LARGE
	f	F	n	ORE_THICKNESS
	f	D	o	VEININESS_FREQUENCY
	f	D	p	NOODLE_SPACING_AND_STRAIGHTNESS
	f	D	q	SURFACE_DENSITY_THRESHOLD
	f	D	r	CHEESE_NOISE_TARGET
	f	Lczn;	s	BLENDING_FACTOR
	f	Lczn;	t	BLENDING_JAGGEDNESS
	f	Laai;	u	ZERO
	f	Laai;	v	Y
	f	Laai;	w	SHIFT_X
	f	Laai;	x	SHIFT_Z
	f	Laai;	y	BASE_3D_NOISE_OVERWORLD
	f	Laai;	z	BASE_3D_NOISE_NETHER
c	dab$a	net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	m	(D)D	a	getSphaghettiRarity2D
		p	0		value
	m	(D)D	b	getSpaghettiRarity3D
		p	0		value
c	dac	net/minecraft/world/level/levelgen/NoiseSettings
	m	(IIII)V	<init>	<init>
		p	1		minimumY
		p	2		height
	m	()I	a	getCellHeight
	m	(IIII)Ldac;	a	create
		p	0		minimumY
		p	1		height
		p	2		horizontalSize
		p	3		verticalSize
	m	(Lcgc;)Ldac;	a	clampToHeightAccessor
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$create$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldac;)Lcom/mojang/serialization/DataResult;	a	guardY
		p	0		config
	m	()I	b	getCellWidth
	m	()I	c	minY
	m	()I	d	height
	m	()I	e	noiseSizeHorizontal
	m	()I	f	noiseSizeVertical
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldac;	b	OVERWORLD_NOISE_SETTINGS
	f	Ldac;	c	NETHER_NOISE_SETTINGS
	f	Ldac;	d	END_NOISE_SETTINGS
	f	Ldac;	e	CAVES_NOISE_SETTINGS
	f	Ldac;	f	FLOATING_ISLANDS_NOISE_SETTINGS
	f	I	g	minY
	f	I	h	height
	f	I	i	noiseSizeHorizontal
	f	I	j	noiseSizeVertical
c	dad	net/minecraft/world/level/levelgen/Noises
	m	(Lhm;Ldah;Laai;)Ldod;	a	instantiate
	m	(Ljava/lang/String;)Laai;	a	createKey
		p	0		id
	f	Laai;	A	SPAGHETTI_ROUGHNESS_MODULATOR
	f	Laai;	B	CAVE_ENTRANCE
	f	Laai;	C	CAVE_LAYER
	f	Laai;	D	CAVE_CHEESE
	f	Laai;	E	ORE_VEININESS
	f	Laai;	F	ORE_VEIN_A
	f	Laai;	G	ORE_VEIN_B
	f	Laai;	H	ORE_GAP
	f	Laai;	I	NOODLE
	f	Laai;	J	NOODLE_THICKNESS
	f	Laai;	K	NOODLE_RIDGE_A
	f	Laai;	L	NOODLE_RIDGE_B
	f	Laai;	M	JAGGED
	f	Laai;	N	SURFACE
	f	Laai;	O	SURFACE_SECONDARY
	f	Laai;	P	CLAY_BANDS_OFFSET
	f	Laai;	Q	BADLANDS_PILLAR
	f	Laai;	R	BADLANDS_PILLAR_ROOF
	f	Laai;	S	BADLANDS_SURFACE
	f	Laai;	T	ICEBERG_PILLAR
	f	Laai;	U	ICEBERG_PILLAR_ROOF
	f	Laai;	V	ICEBERG_SURFACE
	f	Laai;	W	SWAMP
	f	Laai;	X	CALCITE
	f	Laai;	Y	GRAVEL
	f	Laai;	Z	POWDER_SNOW
	f	Laai;	a	TEMPERATURE
	f	Laai;	aa	PACKED_ICE
	f	Laai;	ab	ICE
	f	Laai;	ac	SOUL_SAND_LAYER
	f	Laai;	ad	GRAVEL_LAYER
	f	Laai;	ae	PATCH
	f	Laai;	af	NETHERRACK
	f	Laai;	ag	NETHER_WART
	f	Laai;	ah	NETHER_STATE_SELECTOR
	f	Laai;	b	VEGETATION
	f	Laai;	c	CONTINENTALNESS
	f	Laai;	d	EROSION
	f	Laai;	e	TEMPERATURE_LARGE
	f	Laai;	f	VEGETATION_LARGE
	f	Laai;	g	CONTINENTALNESS_LARGE
	f	Laai;	h	EROSION_LARGE
	f	Laai;	i	RIDGE
	f	Laai;	j	SHIFT
	f	Laai;	k	AQUIFER_BARRIER
	f	Laai;	l	AQUIFER_FLUID_LEVEL_FLOODEDNESS
	f	Laai;	m	AQUIFER_LAVA
	f	Laai;	n	AQUIFER_FLUID_LEVEL_SPREAD
	f	Laai;	o	PILLAR
	f	Laai;	p	PILLAR_RARENESS
	f	Laai;	q	PILLAR_THICKNESS
	f	Laai;	r	SPAGHETTI_2D
	f	Laai;	s	SPAGHETTI_2D_ELEVATION
	f	Laai;	t	SPAGHETTI_2D_MODULATOR
	f	Laai;	u	SPAGHETTI_2D_THICKNESS
	f	Laai;	v	SPAGHETTI_3D_1
	f	Laai;	w	SPAGHETTI_3D_2
	f	Laai;	x	SPAGHETTI_3D_RARITY
	f	Laai;	y	SPAGHETTI_3D_THICKNESS
	f	Laai;	z	SPAGHETTI_ROUGHNESS
c	dae	net/minecraft/world/level/levelgen/OreVeinifier
	m	(Lczn;Lcur;Ldah;Lczn;Lczn;Lczn$b;)Lcur;	a	lambda$create$0
		p	5		pos
	m	(Lczn;Lczn;Lczn;Ldah;)Lczy$c;	a	create
		p	0		veinToggle
		p	1		veinRidged
		p	2		veinGap
		p	3		randomDeriver
	f	F	a	VEININESS_THRESHOLD
	f	I	b	EDGE_ROUNDOFF_BEGIN
	f	D	c	MAX_EDGE_ROUNDOFF
	f	F	d	VEIN_SOLIDNESS
	f	F	e	MIN_RICHNESS
	f	F	f	MAX_RICHNESS
	f	F	g	MAX_RICHNESS_THRESHOLD
	f	F	h	CHANCE_OF_RAW_ORE_BLOCK
	f	F	i	SKIP_ORE_IF_GAP_NOISE_IS_BELOW
c	dae$a	net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	m	(Ljava/lang/String;ILcur;Lcur;Lcur;II)V	<init>	<init>
		p	3		ore
		p	4		rawOreBlock
		p	5		stone
		p	6		minY
		p	7		maxY
	m	()[Ldae$a;	a	$values
	f	Ldae$a;	a	COPPER
	f	Ldae$a;	b	IRON
	f	I	c	minY
	f	I	d	maxY
	f	Lcur;	e	ore
	f	Lcur;	f	rawOreBlock
	f	Lcur;	g	filler
	f	[Ldae$a;	h	$VALUES
c	daf	net/minecraft/world/level/levelgen/PatrolSpawner
	m	(Lafo;Lgt;Lalu;Z)Z	a	spawnPatrolMember
		p	1		world
		p	2		pos
		p	3		random
		p	4		captain
	m	(Lafo;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dag	net/minecraft/world/level/levelgen/PhantomSpawner
	m	(Lafo;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dah	net/minecraft/world/level/levelgen/PositionalRandomFactory
	m	(III)Lalu;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Laaj;)Lalu;	a	fromHashOf
		p	1		seed
	m	(Lgt;)Lalu;	a	at
		p	1		pos
	m	(Ljava/lang/String;)Lalu;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
c	dai	net/minecraft/world/level/levelgen/RandomState
	m	(Lczz;Lhm;J)V	<init>	<init>
		p	1		chunkGeneratorSettings
		p	2		noiseRegistry
		p	3		seed
	m	()J	a	legacyLevelSeed
	m	(Laai;)Ldod;	a	getOrCreateNoise
		p	1		noiseParametersKey
	m	(Laai;Laai;)Ldod;	a	lambda$getOrCreateNoise$0
		p	2		key
	m	(Laaj;)Ldah;	a	getOrCreateRandomFactory
		p	1		id
	m	(Laaj;Laaj;)Ldah;	a	lambda$getOrCreateRandomFactory$1
		p	2		id2
	m	(Lczz;Lhm;J)Ldai;	a	create
		p	0		chunkGeneratorSettings
		p	1		noiseParametersRegistry
		p	2		legacyWorldSeed
	m	(Lhn;Laai;J)Ldai;	a	create
		p	0		dynamicRegistryManager
		p	1		chunkGeneratorSettingsKey
		p	2		legacyWorldSeed
	m	()Ldaa;	b	router
	m	()Lchf$f;	c	sampler
	m	()Ldam;	d	surfaceSystem
	m	()Ldah;	e	aquiferRandom
	m	()Ldah;	f	oreRandom
	f	Ldah;	a	random
	f	J	b	legacyLevelSeed
	f	Lhm;	c	noises
	f	Ldaa;	d	router
	f	Lchf$f;	e	sampler
	f	Ldam;	f	surfaceSystem
	f	Ldah;	g	aquiferRandom
	f	Ldah;	h	oreRandom
	f	Ljava/util/Map;	i	noiseIntances
	f	Ljava/util/Map;	j	positionalRandoms
c	dai$a	net/minecraft/world/level/levelgen/RandomState$1NoiseWiringHelper
	m	(J)Lalu;	a	newLegacyInstance
	m	(Lczn$c;)Lczn$c;	a	visitNoise
	m	(Lczn;)Lczn;	a	wrapNew
	f	J	a	val$seed
	f	Z	b	val$useLegacyInit
	f	Ldai;	c	this$0
	f	Ljava/util/Map;	d	wrapped
c	daj	net/minecraft/world/level/levelgen/RandomSupport
	m	()J	a	generateUniqueSeed
	m	(J)J	a	mixStafford13
		p	0		seed
	m	(J)Ldaj$a;	b	upgradeSeedTo128bit
		p	0		seed
	m	(J)J	c	lambda$generateUniqueSeed$0
		p	0		seedUniquifier
	f	J	a	GOLDEN_RATIO_64
	f	J	b	SILVER_RATIO_64
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	SEED_UNIQUIFIER
c	daj$a	net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	m	()J	a	seedLo
	m	()J	b	seedHi
	f	J	a	seedLo
	f	J	b	seedHi
c	dak	net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lalu;	d	fork
	m	()Ldah;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	J	h	seed
	f	Lczw;	i	gaussianSource
c	dal	net/minecraft/world/level/levelgen/SurfaceRules
	m	()Ldal$f;	a	steep
	m	(II)Ldal$f;	a	waterBlockCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(IZILdja;)Ldal$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		secondaryDepthRange
		p	3		verticalSurfaceType
	m	(IZLdja;)Ldal$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		verticalSurfaceType
	m	(Laai;D)Ldal$f;	a	noiseCondition
		p	0		noise
		p	1		min
	m	(Laai;DD)Ldal$f;	a	noiseCondition
		p	0		noise
		p	1		min
		p	3		max
	m	(Lcur;)Ldal$o;	a	state
		p	0		state
	m	(Ldal$f;)Ldal$f;	a	not
		p	0		target
	m	(Ldal$f;Ldal$o;)Ldal$o;	a	ifTrue
		p	0		condition
		p	1		rule
	m	(Ldao;I)Ldal$f;	a	yBlockCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	(Lhm;Ljava/lang/String;Lalj;)Lcom/mojang/serialization/Codec;	a	register
		p	0		registry
		p	1		id
		p	2		codecHolder
	m	(Ljava/lang/String;Ldao;Ldao;)Ldal$f;	a	verticalGradient
		p	0		id
		p	1		trueAtAndBelow
		p	2		falseAtAndAbove
	m	(Ljava/util/List;)Ldal$c;	a	isBiome
		p	0		biomes
	m	([Laai;)Ldal$f;	a	isBiome
		p	0		biomes
	m	([Ldal$o;)Ldal$o;	a	sequence
		p	0		rules
	m	()Ldal$f;	b	hole
	m	(II)Ldal$f;	b	waterStartCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(Ldao;I)Ldal$f;	b	yStartCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	()Ldal$f;	c	abovePreliminarySurface
	m	()Ldal$f;	d	temperature
	m	()Ldal$o;	e	bandlands
	f	Ldal$f;	a	ON_FLOOR
	f	Ldal$f;	b	UNDER_FLOOR
	f	Ldal$f;	c	DEEP_UNDER_FLOOR
	f	Ldal$f;	d	VERY_DEEP_UNDER_FLOOR
	f	Ldal$f;	e	ON_CEILING
	f	Ldal$f;	f	UNDER_CEILING
c	dal$a	net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()[Ldal$a;	b	$values
	f	Ldal$a;	a	INSTANCE
	f	Lalj;	c	CODEC
	f	[Ldal$a;	d	$VALUES
c	dal$b	net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$u;	a	apply
	m	()[Ldal$b;	b	$values
	f	Ldal$b;	a	INSTANCE
	f	Lalj;	c	CODEC
	f	[Ldal$b;	d	$VALUES
c	dal$c	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		biomes
	m	()Lalj;	a	codec
	m	(Ldal$c;)Ljava/util/List;	a	lambda$static$0
	m	(Ldal$g;)Ldal$e;	a	apply
	f	Lalj;	a	CODEC
	f	Ljava/util/List;	c	biomes
	f	Ljava/util/function/Predicate;	d	biomeNameTest
c	dal$c$a	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource$1BiomeCondition
	m	(Ldal$c;Ldal$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldal$g;	a	val$ruleContext
	f	Ldal$c;	b	this$0
c	dal$d	net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	m	(Lcur;)V	<init>	<init>
		p	1		resultState
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$u;	a	apply
	m	()Lcur;	b	resultState
	m	()Ldal$r;	c	rule
	f	Lcur;	a	resultState
	f	Ldal$r;	c	rule
	f	Lalj;	d	CODEC
c	dal$e	net/minecraft/world/level/levelgen/SurfaceRules$Condition
	m	()Z	b	test
c	dal$f	net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	m	()Lalj;	a	codec
	m	(Ldal$f;)Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Lhm;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dal$g	net/minecraft/world/level/levelgen/SurfaceRules$Context
	m	(Ldam;Ldai;Lcwm;Lczy;Ljava/util/function/Function;Lhm;Ldaq;)V	<init>	<init>
		p	1		surfaceBuilder
		p	2		noiseConfig
		p	3		chunk
		p	4		chunkNoiseSampler
		p	5		posToBiome
		p	7		heightContext
	m	()D	a	getSurfaceSecondary
	m	(I)I	a	blockCoordToSurfaceCell
	m	(II)V	a	updateXZ
		p	1		x
		p	2		z
	m	(III)Lhc;	a	lambda$updateY$0
	m	(IIIIII)V	a	updateY
		p	1		stoneDepthAbove
		p	2		stoneDepthBelow
		p	3		fluidHeight
		p	4		x
		p	5		y
		p	6		z
	m	()I	b	getMinSurfaceLevel
	m	(I)I	b	surfaceCellToBlockCoord
	f	Ljava/util/function/Supplier;	A	biome
	f	I	B	blockY
	f	I	C	waterHeight
	f	I	D	stoneDepthBelow
	f	I	E	stoneDepthAbove
	f	I	a	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	f	I	b	SURFACE_CELL_BITS
	f	I	c	SURFACE_CELL_SIZE
	f	I	d	SURFACE_CELL_MASK
	f	Ldam;	e	system
	f	Ldal$e;	f	temperature
	f	Ldal$e;	g	steep
	f	Ldal$e;	h	hole
	f	Ldal$e;	i	abovePreliminarySurface
	f	Ldai;	j	randomState
	f	Lcwm;	k	chunk
	f	Lczy;	l	noiseChunk
	f	Ljava/util/function/Function;	m	biomeGetter
	f	Ldaq;	n	context
	f	J	o	lastPreliminarySurfaceCellOrigin
	f	[I	p	preliminarySurfaceCache
	f	J	q	lastUpdateXZ
	f	I	r	blockX
	f	I	s	blockZ
	f	I	t	surfaceDepth
	f	J	u	lastSurfaceDepth2Update
	f	D	v	surfaceSecondary
	f	J	w	lastMinSurfaceLevelUpdate
	f	I	x	minSurfaceLevel
	f	J	y	lastUpdateY
	f	Lgt$a;	z	pos
c	dal$g$a	net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	m	()Z	b	test
	f	Ldal$g;	a	this$0
c	dal$g$b	net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	m	(Ldal$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dal$g$c	net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	m	(Ldal$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dal$g$d	net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	m	(Ldal$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dal$h	net/minecraft/world/level/levelgen/SurfaceRules$Hole
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()[Ldal$h;	b	$values
	f	Ldal$h;	a	INSTANCE
	f	Lalj;	c	CODEC
	f	[Ldal$h;	d	$VALUES
c	dal$i	net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	m	(Ldal$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
	m	()Z	b	test
	m	()J	c	getContextLastUpdate
	f	J	a	lastUpdate
	f	Ldal$g;	c	context
	f	Ljava/lang/Boolean;	d	result
c	dal$j	net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	m	(Ldal$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dal$k	net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	m	(Ldal$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dal$l	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	m	()Lalj;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()Laai;	b	noise
	m	()D	c	minThreshold
	m	()D	d	maxThreshold
	f	Laai;	a	noise
	f	D	c	minThreshold
	f	D	d	maxThreshold
	f	Lalj;	e	CODEC
c	dal$l$a	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition
	m	(Ldal$l;Ldal$g;Ldod;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldal$g;	a	val$ruleContext
	f	Ldod;	b	val$noise
	f	Ldal$l;	e	this$0
c	dal$m	net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	m	()Ldal$e;	a	target
	m	()Z	b	test
	f	Ldal$e;	a	target
c	dal$n	net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()Ldal$f;	b	target
	f	Ldal$f;	a	target
	f	Lalj;	c	CODEC
c	dal$o	net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	m	()Lalj;	a	codec
	m	(Ldal$o;)Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Lhm;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dal$p	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	m	()Ljava/util/List;	a	rules
	m	(III)Lcur;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/List;	a	rules
c	dal$q	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$u;	a	apply
	m	()Ljava/util/List;	b	sequence
	f	Ljava/util/List;	a	sequence
	f	Lalj;	c	CODEC
c	dal$r	net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	m	()Lcur;	a	state
	m	(III)Lcur;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Lcur;	a	state
c	dal$s	net/minecraft/world/level/levelgen/SurfaceRules$Steep
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()[Ldal$s;	b	$values
	f	Ldal$s;	a	INSTANCE
	f	Lalj;	c	CODEC
	f	[Ldal$s;	d	$VALUES
c	dal$t	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	m	()Lalj;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()I	b	offset
	m	()Z	c	addSurfaceDepth
	m	()I	d	secondaryDepthRange
	m	()Ldja;	e	surfaceType
	f	I	a	offset
	f	Z	c	addSurfaceDepth
	f	I	d	secondaryDepthRange
	f	Ldja;	e	surfaceType
	f	Lalj;	f	CODEC
c	dal$t$a	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck$1StoneDepthCondition
	m	(Ldal$t;Ldal$g;Z)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldal$g;	a	val$ruleContext
	f	Z	b	val$ceiling
	f	Ldal$t;	e	this$0
c	dal$u	net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
	m	(III)Lcur;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
c	dal$v	net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	m	()Lalj;	a	codec
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()[Ldal$v;	b	$values
	f	Ldal$v;	a	INSTANCE
	f	Lalj;	c	CODEC
	f	[Ldal$v;	d	$VALUES
c	dal$w	net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	m	()Ldal$e;	a	condition
	m	()Ldal$u;	b	followup
	m	(III)Lcur;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ldal$e;	a	condition
	f	Ldal$u;	b	followup
c	dal$x	net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	m	()Lalj;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldal$g;)Ldal$u;	a	apply
	m	()Ldal$f;	b	ifTrue
	m	()Ldal$o;	c	thenRun
	f	Ldal$f;	a	ifTrue
	f	Ldal$o;	c	thenRun
	f	Lalj;	d	CODEC
c	dal$y	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	m	()Lalj;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()Laaj;	b	randomName
	m	()Ldao;	c	trueAtAndBelow
	m	()Ldao;	d	falseAtAndAbove
	f	Laaj;	a	randomName
	f	Ldao;	c	trueAtAndBelow
	f	Ldao;	d	falseAtAndAbove
	f	Lalj;	e	CODEC
c	dal$y$a	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition
	m	(Ldal$y;Ldal$g;IILdah;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldal$g;	a	val$ruleContext
	f	I	b	val$trueAtAndBelow
	f	I	e	val$falseAtAndAbove
	f	Ldah;	f	val$randomFactory
	f	Ldal$y;	g	this$0
c	dal$z	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	m	()Lalj;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()I	b	offset
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	I	a	offset
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lalj;	e	CODEC
c	dal$z$a	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource$1WaterCondition
	m	(Ldal$z;Ldal$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldal$g;	a	val$ruleContext
	f	Ldal$z;	b	this$0
c	dal$aa	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	m	()Lalj;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldal$g;)Ldal$e;	a	apply
	m	()Ldao;	b	anchor
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	Ldao;	a	anchor
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lalj;	e	CODEC
c	dal$aa$a	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource$1YCondition
	m	(Ldal$aa;Ldal$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldal$g;	a	val$ruleContext
	f	Ldal$aa;	b	this$0
c	dam	net/minecraft/world/level/levelgen/SurfaceSystem
	m	(Ldai;Lcur;ILdah;)V	<init>	<init>
		p	1		noiseConfig
		p	2		defaultState
		p	3		seaLevel
		p	4		randomDeriver
	m	(II)I	a	getSurfaceDepth
	m	(III)Lcur;	a	getBand
		p	1		x
		p	2		y
		p	3		z
	m	(ILcgw;Lcwj;Lgt$a;III)V	a	frozenOceanExtension
		p	1		minY
		p	2		biome
		p	3		column
		p	4		mutablePos
		p	5		x
		p	6		z
		p	7		surfaceY
	m	(Lalu;)[Lcur;	a	generateBands
		p	0		random
	m	(Lalu;[Lcur;ILcur;)V	a	makeBands
		p	0		random
		p	1		terracottaBands
		p	2		minBandSize
		p	3		state
	m	(Lcur;)Z	a	isStone
		p	1		state
	m	(Lcwj;IIILcgc;)V	a	erodedBadlandsExtension
		p	1		column
		p	2		x
		p	3		z
		p	4		surfaceY
		p	5		chunk
	m	(Ldai;Lcgy;Lhm;ZLdaq;Lcwm;Lczy;Ldal$o;)V	a	buildSurface
		p	1		noiseConfig
		p	2		biomeAccess
		p	3		biomeRegistry
		p	4		useLegacyRandom
		p	5		heightContext
		p	6		chunk
		p	7		chunkNoiseSampler
		p	8		materialRule
	m	(Ldal$o;Ldbs;Ljava/util/function/Function;Lcwm;Lczy;Lgt;Z)Ljava/util/Optional;	a	topMaterial
		p	1		rule
		p	2		context
		p	3		posToBiome
		p	4		chunk
		p	5		chunkNoiseSampler
		p	6		pos
		p	7		hasFluid
	m	(II)D	b	getSurfaceSecondary
	f	Lcur;	a	WHITE_TERRACOTTA
	f	Lcur;	b	ORANGE_TERRACOTTA
	f	Lcur;	c	TERRACOTTA
	f	Lcur;	d	YELLOW_TERRACOTTA
	f	Lcur;	e	BROWN_TERRACOTTA
	f	Lcur;	f	RED_TERRACOTTA
	f	Lcur;	g	LIGHT_GRAY_TERRACOTTA
	f	Lcur;	h	PACKED_ICE
	f	Lcur;	i	SNOW_BLOCK
	f	Lcur;	j	defaultBlock
	f	I	k	seaLevel
	f	[Lcur;	l	clayBands
	f	Ldod;	m	clayBandsOffsetNoise
	f	Ldod;	n	badlandsPillarNoise
	f	Ldod;	o	badlandsPillarRoofNoise
	f	Ldod;	p	badlandsSurfaceNoise
	f	Ldod;	q	icebergPillarNoise
	f	Ldod;	r	icebergPillarRoofNoise
	f	Ldod;	s	icebergSurfaceNoise
	f	Ldah;	t	noiseRandom
	f	Ldod;	u	surfaceNoise
	f	Ldod;	v	surfaceSecondaryNoise
c	dam$1	net/minecraft/world/level/levelgen/SurfaceSystem$1
	m	(I)Lcur;	a	getBlock
		p	1		y
	m	(ILcur;)V	a	setBlock
		p	1		y
		p	2		state
	f	Lcwm;	a	val$protoChunk
	f	Lgt$a;	b	val$columnPos
	f	Lcfh;	c	val$chunkPos
	f	Ldam;	d	this$0
c	dan	net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lalu;	d	fork
	m	()Ldah;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Lczw;	i	gaussianSource
c	dao	net/minecraft/world/level/levelgen/VerticalAnchor
	m	()Ldao;	a	bottom
	m	(I)Ldao;	a	absolute
		p	0		offset
	m	(Lcom/mojang/datafixers/util/Either;)Ldao;	a	merge
		p	0		either
	m	(Ldao;)Lcom/mojang/datafixers/util/Either;	a	split
		p	0		yOffset
	m	(Ldaq;)I	a	resolveY
		p	1		context
	m	()Ldao;	b	top
	m	(I)Ldao;	b	aboveBottom
		p	0		offset
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Record;	b	lambda$merge$0
	m	(I)Ldao;	c	belowTop
		p	0		offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldao;	b	BOTTOM
	f	Ldao;	c	TOP
c	dao$a	net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	m	(Ldaq;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dao$b	net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	m	(Ldaq;)I	a	resolveY
		p	1		context
	m	()I	c	y
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	y
c	dao$c	net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	m	(Ldaq;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dap	net/minecraft/world/level/levelgen/WorldGenSettings
	m	(JZZLhm;)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
		p	5		options
	m	(JZZLhm;Ljava/util/Optional;)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
		p	5		options
		p	6		legacyCustomOptions
	m	()J	a	seed
	m	(Laai;)Laai;	a	levelStemToLevel
		p	0		dimensionOptionsKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldap;)Ljava/util/Optional;	a	lambda$static$0
	m	(Lhm;Lhc;Lcwn;)Lhm;	a	withOverworld
		p	0		options
		p	1		dimensionType
		p	2		overworldGenerator
	m	(Lhm;Lhm;Lcwn;)Lhm;	a	withOverworld
		p	0		dimensionTypeRegistry
		p	1		options
		p	2		overworldGenerator
	m	(Lhn;Ldap;Lcwn;)Ldap;	a	replaceOverworldGenerator
		p	0		dynamicRegistryManager
		p	1		generatorOptions
		p	2		chunkGenerator
	m	(Ljava/lang/String;)Ljava/util/OptionalLong;	a	parseSeed
		p	0		seed
	m	(ZLjava/util/OptionalLong;)Ldap;	a	withSeed
		p	1		hardcore
		p	2		seed
	m	()Z	b	generateStructures
	m	(Laai;)Laai;	b	levelToLevelStem
		p	0		worldKey
	m	()Z	c	generateBonusChest
	m	()Lhm;	d	dimensions
	m	()Lcwn;	e	overworld
	m	()Lcom/google/common/collect/ImmutableSet;	f	levels
	m	()Z	g	isDebug
	m	()Z	h	isFlatWorld
	m	()Z	i	isOldCustomizedWorld
	m	()Ldap;	j	withBonusChest
	m	()Ldap;	k	withStructuresToggled
	m	()Ldap;	l	withBonusChestToggled
	m	()Lcom/mojang/serialization/DataResult;	m	guardExperimental
	m	()Z	n	stable
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	seed
	f	Z	c	generateStructures
	f	Z	d	generateBonusChest
	f	Lhm;	e	dimensions
	f	Ljava/util/Optional;	f	legacyCustomOptions
c	daq	net/minecraft/world/level/levelgen/WorldGenerationContext
	m	(Lcwn;Lcgc;)V	<init>	<init>
		p	1		generator
		p	2		world
	m	()I	a	getMinGenY
	m	()I	b	getGenDepth
	f	I	a	minY
	f	I	b	height
c	dar	net/minecraft/world/level/levelgen/WorldgenRandom
	m	(Lalu;)V	<init>	<init>
		p	1		baseRandom
	m	(IIJJ)Lalu;	a	seedSlimeChunk
		p	0		chunkX
		p	1		chunkZ
		p	2		worldSeed
		p	4		scrambler
	m	(JII)J	a	setDecorationSeed
		p	1		worldSeed
		p	3		blockX
		p	4		blockZ
	m	(JIII)V	a	setLargeFeatureWithSalt
		p	1		worldSeed
		p	3		regionX
		p	4		regionZ
		p	5		salt
	m	(J)V	b	setSeed
		p	1		seed
	m	(JII)V	b	setFeatureSeed
		p	1		populationSeed
		p	3		index
		p	4		step
	m	(I)I	c	next
		p	1		bits
	m	(JII)V	c	setLargeFeatureSeed
		p	1		worldSeed
		p	3		chunkX
		p	4		chunkZ
	m	()Lalu;	d	fork
	m	()Ldah;	e	forkPositional
	m	()I	l	getCount
	f	Lalu;	d	randomSource
	f	I	e	count
c	dar$a	net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	m	(Ljava/lang/String;ILjava/util/function/LongFunction;)V	<init>	<init>
		p	3		provider
	m	()[Ldar$a;	a	$values
	m	(J)Lalu;	a	newInstance
		p	1		seed
	f	Ldar$a;	a	LEGACY
	f	Ldar$a;	b	XOROSHIRO
	f	Ljava/util/function/LongFunction;	c	constructor
	f	[Ldar$a;	d	$VALUES
c	das	net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(Ldaj$a;)V	<init>	<init>
		p	1		seed
	m	()J	a	nextLong
	f	J	a	seedLo
	f	J	b	seedHi
c	dat	net/minecraft/world/level/levelgen/XoroshiroRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(I)I	a	nextInt
		p	1		bound
	m	(I)V	b	consumeCount
		p	1		count
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)J	c	nextBits
		p	1		bits
	m	()Lalu;	d	fork
	m	()Ldah;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	F	b	FLOAT_UNIT
	f	D	c	DOUBLE_UNIT
	f	Ldas;	d	randomNumberGenerator
	f	Lczw;	e	gaussianSource
c	dat$a	net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(III)Lalu;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Ljava/lang/String;)Lalu;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	Lcom/google/common/hash/HashFunction;	a	MD5_128
	f	J	b	seedLo
	f	J	c	seedHi
c	dau	net/minecraft/world/level/levelgen/blending/Blender
	m	()Ldau;	a	empty
	m	(D)D	a	heightToOffset
	m	(DDDDDD)D	a	distanceToCube
	m	(DDDDDDD)D	a	lambda$makeOffsetOldChunkDistanceGetter$11
	m	(II)Ldau$a;	a	blendOffsetAndFactor
	m	(III)Lhc;	a	blendBiome
		p	1		x
		p	2		y
	m	(IIILdau$b;)D	a	getBlendingDataValue
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IIID)V	a	lambda$blendDensity$2
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldav;)V	a	lambda$blendDensity$3
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/lang/Long;Ldav;)V	a	lambda$blendBiome$6
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IID)V	a	lambda$blendOffsetAndFactor$0
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldav;)V	a	lambda$blendOffsetAndFactor$1
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;IILhc;)V	a	lambda$blendBiome$5
	m	(Lafv;)Ldau;	a	of
		p	0		chunkRegion
	m	(Lafv;Lcwm;)V	a	generateBorderTicks
		p	0		chunkRegion
		p	1		chunk
	m	(Lcgs;Lcxf;)V	a	addAroundOldChunksCarvingMaskFilter
	m	(Lcgz;)Lcgz;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Lcgz;IIILchf$f;)Lhc;	a	lambda$getBiomeResolver$4
		p	2		x
		p	3		y
		p	4		z
		p	5		noise
	m	(Lcwl$a;Lcwl;)V	a	lambda$addAroundOldChunksCarvingMaskFilter$8
	m	(Lcwm;Lgt;)V	a	generateBorderTick
		p	0		chunk
		p	1		pos
	m	(Lczn$b;D)D	a	blendDensity
	m	(Ldau$b;IIIII)D	a	getBlendingDataValue
	m	(Ldau$c;III)Z	a	lambda$addAroundOldChunksCarvingMaskFilter$7
	m	(Ldav;Ljava/util/Map;)Ldau$c;	a	makeOldChunkDistanceGetter
	m	(Lgz;Ldav;)Ldau$c;	a	makeOffsetOldChunkDistanceGetter
	m	(Ljava/util/List;DDD)D	a	lambda$makeOldChunkDistanceGetter$10
	m	(Ljava/util/List;Lgz;Ldav;)V	a	lambda$makeOldChunkDistanceGetter$9
	f	Ldau;	a	EMPTY
	f	Ldod;	b	SHIFT_NOISE
	f	I	c	HEIGHT_BLENDING_RANGE_CELLS
	f	I	d	HEIGHT_BLENDING_RANGE_CHUNKS
	f	I	e	DENSITY_BLENDING_RANGE_CELLS
	f	I	f	DENSITY_BLENDING_RANGE_CHUNKS
	f	D	g	OLD_CHUNK_XZ_RADIUS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	heightAndBiomeBlendingData
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	i	densityBlendingData
c	dau$1	net/minecraft/world/level/levelgen/blending/Blender$1
	m	(II)Ldau$a;	a	blendOffsetAndFactor
	m	(Lcgz;)Lcgz;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Lczn$b;D)D	a	blendDensity
c	dau$a	net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	m	()D	a	alpha
	m	()D	b	blendingOffset
	f	D	a	alpha
	f	D	b	blendingOffset
c	dau$b	net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
c	dau$c	net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
c	dav	net/minecraft/world/level/levelgen/blending/BlendingData
	m	()Lcgc;	a	getAreaWithOldGeneration
	m	(D)Z	a	lambda$static$2
	m	(I)I	a	getCellYIndex
	m	(II)I	a	getInsideIndex
	m	(III)D	a	getHeight
	m	(IIIILdav$b;)V	a	iterateDensities
	m	(IIILdav$a;)V	a	iterateBiomes
	m	(IILdav$c;)V	a	iterateHeights
	m	(ILcwm;II)V	a	addValuesForColumn
		p	1		index
		p	3		x
		p	4		z
	m	(Lafv;II)Ldav;	a	getOrUpdateBlendingData
		p	0		chunkRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lcgs;IIZ)Ljava/util/Set;	a	sideByGenerationAge
		p	0		access
		p	1		chunkX
		p	2		chunkZ
		p	3		newNoise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lcwm;II)I	a	getHeightAtXZ
	m	(Lcwm;III)[D	a	getDensityColumn
	m	(Lcwm;Lgt$a;)D	a	read1
	m	(Lcwm;Lgt;)Z	a	isGround
		p	0		chunk
		p	1		pos
	m	(Lcwm;Ljava/util/Set;)V	a	calculateData
	m	(Ldav;)Lcom/mojang/serialization/DataResult;	a	validateArraySize
	m	([D)V	a	lambda$new$5
	m	([DI)D	a	getDensity
	m	()I	b	cellCountPerColumn
	m	(I)I	b	getX
	m	(II)I	b	getOutsideIndex
	m	(III)D	b	getDensity
	m	(Lcwm;II)Ljava/util/List;	b	getBiomeColumn
	m	(Lcwm;Lgt$a;)D	b	read7
	m	(Ldav;)Ljava/util/Optional;	b	lambda$static$3
	m	()I	c	quartCountPerColumn
	m	(I)I	c	getZ
	m	(Ldav;)Ljava/lang/Integer;	c	lambda$static$1
	m	()I	d	getColumnMinY
	m	(I)I	d	zeroIfNegative
	m	(Ldav;)Ljava/lang/Integer;	d	lambda$static$0
	m	()I	e	getMinY
	f	I	a	CELL_WIDTH
	f	I	b	CELL_HEIGHT
	f	I	c	CELL_RATIO
	f	D	d	NO_VALUE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	D	f	BLENDING_DENSITY_FACTOR
	f	D	g	SOLID_DENSITY
	f	D	h	AIR_DENSITY
	f	I	i	CELLS_PER_SECTION_Y
	f	I	j	QUARTS_PER_SECTION
	f	I	k	CELL_HORIZONTAL_MAX_INDEX_INSIDE
	f	I	l	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	f	I	m	CELL_COLUMN_INSIDE_COUNT
	f	I	n	CELL_COLUMN_OUTSIDE_COUNT
	f	I	o	CELL_COLUMN_COUNT
	f	Lcgc;	p	areaWithOldGeneration
	f	Ljava/util/List;	q	SURFACE_BLOCKS
	f	Z	r	hasCalculatedData
	f	[D	s	heights
	f	Ljava/util/List;	t	biomes
	f	[[D	u	densities
	f	Lcom/mojang/serialization/Codec;	v	DOUBLE_ARRAY_CODEC
c	dav$a	net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
c	dav$b	net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
c	dav$c	net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
c	daw	net/minecraft/world/level/levelgen/blending/package-info
c	dax	net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Ldba;	a	type
	m	(Lcgs;Lgt;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	day	net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Ldba;	a	type
	m	(Lcgs;Lgt;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	daz	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	m	()Ldba;	a	type
	m	(Lakh;)Ldaz;	a	matchesTag
		p	0		offset
	m	(Lcur;Lhs;)Ldaz;	a	wouldSurvive
		p	0		state
		p	1		offset
	m	(Ldaz;)Ldaz;	a	not
		p	0		predicate
	m	(Ldaz;Ldaz;)Ldaz;	a	allOf
		p	0		first
		p	1		second
	m	(Lgy;)Ldaz;	a	hasSturdyFace
		p	0		face
	m	(Lhs;)Ldaz;	a	replaceable
		p	0		offset
	m	(Lhs;Lakh;)Ldaz;	a	matchesTag
		p	0		offset
		p	1		tag
	m	(Lhs;Lgy;)Ldaz;	a	hasSturdyFace
		p	0		offset
		p	1		face
	m	(Lhs;Ljava/util/List;)Ldaz;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lhs;[Lciw;)Ldaz;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lhs;[Ldox;)Ldaz;	a	matchesFluids
		p	0		offset
		p	1		fluids
	m	(Ljava/util/List;)Ldaz;	a	allOf
		p	0		predicates
	m	([Lciw;)Ldaz;	a	matchesBlocks
		p	0		blocks
	m	([Ldaz;)Ldaz;	a	allOf
		p	0		predicates
	m	([Ldox;)Ldaz;	a	matchesFluids
		p	0		fluids
	m	()Ldaz;	b	replaceable
	m	(Ldaz;Ldaz;)Ldaz;	b	anyOf
		p	0		first
		p	1		second
	m	(Lhs;)Ldaz;	b	solid
		p	0		offset
	m	(Lhs;Ljava/util/List;)Ldaz;	b	matchesFluids
		p	0		offset
		p	1		fluids
	m	(Ljava/util/List;)Ldaz;	b	anyOf
		p	0		predicates
	m	([Ldaz;)Ldaz;	b	anyOf
		p	0		predicates
	m	()Ldaz;	c	solid
	m	(Lhs;)Ldaz;	c	insideWorld
		p	0		offset
	m	(Ljava/util/List;)Ldaz;	c	matchesBlocks
		p	0		blocks
	m	()Ldaz;	d	alwaysTrue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldaz;	c	ONLY_IN_AIR_PREDICATE
	f	Ldaz;	d	ONLY_IN_AIR_OR_WATER_PREDICATE
c	dba	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldba;	a	register
		p	0		id
		p	1		codec
	f	Ldba;	a	MATCHING_BLOCKS
	f	Ldba;	b	MATCHING_BLOCK_TAG
	f	Ldba;	c	MATCHING_FLUIDS
	f	Ldba;	d	HAS_STURDY_FACE
	f	Ldba;	e	SOLID
	f	Ldba;	f	REPLACEABLE
	f	Ldba;	g	WOULD_SURVIVE
	f	Ldba;	h	INSIDE_WORLD_BOUNDS
	f	Ldba;	i	ANY_OF
	f	Ldba;	j	ALL_OF
	f	Ldba;	k	NOT
	f	Ldba;	l	TRUE
c	dbb	net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	(Ldbb;)Ljava/util/List;	a	lambda$codec$0
		p	0		predicate
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		combiner
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	f	Ljava/util/List;	e	predicates
c	dbc	net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	m	(Lhs;Lgy;)V	<init>	<init>
		p	1		offset
		p	2		face
	m	()Ldba;	a	type
	m	(Lcgs;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldbc;)Lgy;	a	lambda$static$1
		p	0		predicate
	m	(Ldbc;)Lhs;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhs;	e	offset
	f	Lgy;	f	direction
c	dbd	net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	m	(Lhs;)V	<init>	<init>
		p	1		offset
	m	()Ldba;	a	type
	m	(Lcgs;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldbd;)Lhs;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhs;	e	offset
c	dbe	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	m	(Lhs;Lakh;)V	<init>	<init>
		p	1		offset
		p	2		tag
	m	()Ldba;	a	type
	m	(Lcur;)Z	a	test
		p	1		state
	m	(Ldbe;)Lakh;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lakh;	a	tag
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dbf	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	m	(Lhs;Lhe;)V	<init>	<init>
		p	1		offset
		p	2		blocks
	m	()Ldba;	a	type
	m	(Lcur;)Z	a	test
		p	1		state
	m	(Ldbf;)Lhe;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	e	blocks
c	dbg	net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	m	(Lhs;Lhe;)V	<init>	<init>
		p	1		offset
		p	2		fluids
	m	()Ldba;	a	type
	m	(Lcur;)Z	a	test
		p	1		state
	m	(Ldbg;)Lhe;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	e	fluids
c	dbh	net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	m	(Ldaz;)V	<init>	<init>
		p	1		predicate
	m	()Ldba;	a	type
	m	(Lcgs;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldbh;)Ldaz;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldaz;	e	predicate
c	dbi	net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	m	(Lhs;)V	<init>	<init>
		p	1		offset
	m	()Ldba;	a	type
	m	(Lcur;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dbj	net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	m	(Lhs;)V	<init>	<init>
		p	1		offset
	m	()Ldba;	a	type
	m	(Lcur;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dbk	net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	m	(Lhs;)V	<init>	<init>
		p	1		offset
	m	(Lcgs;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	stateTestingCodec
		p	0		instance
	m	(Lcur;)Z	a	test
		p	1		state
	m	(Ldbk;)Lhs;	a	lambda$stateTestingCodec$0
		p	0		predicate
	f	Lhs;	f	offset
c	dbl	net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	m	()Ldba;	a	type
	m	(Lcgs;Lgt;)Z	a	test
	m	()Ldbl;	e	lambda$static$0
	f	Ldbl;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dbm	net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	m	(Lhs;Lcur;)V	<init>	<init>
		p	1		offset
		p	2		state
	m	()Ldba;	a	type
	m	(Lcgs;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldbm;)Lcur;	a	lambda$static$1
		p	0		predicate
	m	(Ldbm;)Lhs;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhs;	e	offset
	f	Lcur;	f	state
c	dbn	net/minecraft/world/level/levelgen/blockpredicates/package-info
c	dbo	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	m	(FLdim;Layp;Ldao;Ldbr;Lhe;Layp;Ldbo$a;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		verticalRotation
		p	8		shape
	m	(Ldbq;Layp;Ldbo$a;)V	<init>	<init>
		p	1		config
		p	2		verticalRotation
		p	3		shape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldbo;)Ldbo$a;	a	lambda$static$2
		p	0		config
	m	(Ldbo;)Layp;	b	lambda$static$1
		p	0		config
	m	(Ldbo;)Ldbq;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layp;	b	verticalRotation
	f	Ldbo$a;	c	shape
c	dbo$a	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	m	(Layp;Layp;ILayp;FF)V	<init>	<init>
		p	1		distanceFactor
		p	2		thickness
		p	3		widthSmoothness
		p	4		horizontalRadiusFactor
		p	5		verticalRadiusDefaultFactor
		p	6		verticalRadiusCenterFactor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldbo$a;)Ljava/lang/Float;	a	lambda$static$5
		p	0		shape
	m	(Ldbo$a;)Ljava/lang/Float;	b	lambda$static$4
		p	0		shape
	m	(Ldbo$a;)Layp;	c	lambda$static$3
		p	0		shape
	m	(Ldbo$a;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		shape
	m	(Ldbo$a;)Layp;	e	lambda$static$1
		p	0		shape
	m	(Ldbo$a;)Layp;	f	lambda$static$0
		p	0		shape
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layp;	b	distanceFactor
	f	Layp;	c	thickness
	f	I	d	widthSmoothness
	f	Layp;	e	horizontalRadiusFactor
	f	F	f	verticalRadiusDefaultFactor
	f	F	g	verticalRadiusCenterFactor
c	dbp	net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldbo;Lalu;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldbo;Lalu;DFF)D	a	updateVerticalRadius
		p	1		config
		p	2		random
		p	3		pitch
		p	5		branchCount
		p	6		branchIndex
	m	(Ldbq;Lalu;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldbs;Ldbo;Lalu;)[F	a	initWidthFactors
		p	1		context
		p	2		config
		p	3		random
	m	(Ldbs;Ldbo;Lcwm;Ljava/util/function/Function;JLczg;DDDFFFIIDLcwl;)V	a	doCarve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		width
		p	15		yaw
		p	16		pitch
		p	17		branchStartIndex
		p	18		branchCount
		p	19		yawPitchRatio
		p	21		mask
	m	(Ldbs;Ldbo;Lcwm;Ljava/util/function/Function;Lalu;Lczg;Lcfh;Lcwl;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldbs;Ldbq;Lcwm;Ljava/util/function/Function;Lalu;Lczg;Lcfh;Lcwl;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldbs;[FDDDI)Z	a	shouldSkip
		p	1		context
		p	2		horizontalStretchFactors
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	([FLdbs;DDDI)Z	a	lambda$doCarve$0
		p	2		context
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
c	dbq	net/minecraft/world/level/levelgen/carver/CarverConfiguration
	m	(FLdim;Layp;Ldao;Ldbr;Lhe;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldbq;)Lhe;	a	lambda$static$5
		p	0		config
	m	(Ldbq;)Ldbr;	b	lambda$static$4
		p	0		config
	m	(Ldbq;)Ldao;	c	lambda$static$3
		p	0		config
	m	(Ldbq;)Layp;	d	lambda$static$2
		p	0		config
	m	(Ldbq;)Ldim;	e	lambda$static$1
		p	0		config
	m	(Ldbq;)Ljava/lang/Float;	f	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldim;	e	y
	f	Layp;	f	yScale
	f	Ldao;	g	lavaLevel
	f	Ldbr;	h	debugSettings
	f	Lhe;	i	replaceable
c	dbr	net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	m	(ZLcur;Lcur;Lcur;Lcur;)V	<init>	<init>
		p	1		debugMode
		p	2		airState
		p	3		waterState
		p	4		lavaState
		p	5		barrierState
	m	()Z	a	isDebugMode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcur;Lcur;Lcur;Lcur;)Ldbr;	a	of
		p	0		airState
		p	1		waterState
		p	2		lavaState
		p	3		barrierState
	m	(ZLcur;)Ldbr;	a	of
		p	0		debugMode
		p	1		debugState
	m	(ZLcur;Lcur;Lcur;Lcur;)Ldbr;	a	of
		p	0		debugMode
		p	1		airState
		p	2		waterState
		p	3		lavaState
		p	4		barrierState
	m	()Lcur;	b	getAirState
	m	()Lcur;	c	getWaterState
	m	()Lcur;	d	getLavaState
	m	()Lcur;	e	getBarrierState
	f	Ldbr;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	debugMode
	f	Lcur;	d	airState
	f	Lcur;	e	waterState
	f	Lcur;	f	lavaState
	f	Lcur;	g	barrierState
c	dbs	net/minecraft/world/level/levelgen/carver/CarvingContext
	m	(Lczx;Lhn;Lcgc;Lczy;Ldai;Ldal$o;)V	<init>	<init>
		p	1		noiseChunkGenerator
		p	2		registryManager
		p	3		heightLimitView
		p	4		chunkNoiseSampler
		p	5		noiseConfig
		p	6		materialRule
	m	(Ljava/util/function/Function;Lcwm;Lgt;Z)Ljava/util/Optional;	a	topMaterial
		p	1		posToBiome
		p	2		chunk
		p	3		pos
		p	4		hasFluid
	m	()Lhn;	c	registryAccess
	m	()Ldai;	d	randomState
	f	Lhn;	a	registryAccess
	f	Lczy;	b	noiseChunk
	f	Ldai;	c	randomState
	f	Ldal$o;	d	surfaceRule
c	dbt	net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	m	(FLdim;Layp;Ldao;Ldbr;Lhe;Layp;Layp;Layp;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		horizontalRadiusMultiplier
		p	8		verticalRadiusMultiplier
		p	9		floorLevel
	m	(FLdim;Layp;Ldao;Lhe;Layp;Layp;Layp;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		replaceable
		p	6		horizontalRadiusMultiplier
		p	7		verticalRadiusMultiplier
		p	8		floorLevel
	m	(Ldbq;Layp;Layp;Layp;)V	<init>	<init>
		p	1		config
		p	2		horizontalRadiusMultiplier
		p	3		verticalRadiusMultiplier
		p	4		floorLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldbt;)Layp;	a	lambda$static$3
		p	0		config
	m	(Ldbt;)Layp;	b	lambda$static$2
		p	0		config
	m	(Ldbt;)Layp;	c	lambda$static$1
		p	0		config
	m	(Ldbt;)Ldbq;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layp;	b	horizontalRadiusMultiplier
	f	Layp;	c	verticalRadiusMultiplier
	f	Layp;	j	floorLevel
c	dbu	net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(DDDD)Z	a	shouldSkip
		p	0		scaledRelativeX
		p	2		scaledRelativeY
		p	4		scaledRelativeZ
		p	6		floorY
	m	(DLdbs;DDDI)Z	a	lambda$carve$0
		p	2		context
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	(Lalu;)F	a	getThickness
		p	1		random
	m	(Ldbq;Lalu;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldbs;Ldbq;Lcwm;Ljava/util/function/Function;Lalu;Lczg;Lcfh;Lcwl;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldbs;Ldbt;Lcwm;Ljava/util/function/Function;JLczg;DDDDDFFFIIDLcwl;Ldbx$a;)V	a	createTunnel
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		horizontalScale
		p	16		verticalScale
		p	18		width
		p	19		yaw
		p	20		pitch
		p	21		branchStartIndex
		p	22		branchCount
		p	23		yawPitchRatio
		p	25		mask
		p	26		skipPredicate
	m	(Ldbs;Ldbt;Lcwm;Ljava/util/function/Function;Lalu;Lczg;Lcfh;Lcwl;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldbs;Ldbt;Lcwm;Ljava/util/function/Function;Lczg;DDDFDLcwl;Ldbx$a;)V	a	createRoom
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	15		mask
		p	16		skipPredicate
	m	(Ldbt;Lalu;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	()D	b	getYScale
c	dbv	net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	m	(Ldbx;Ldbq;)V	<init>	<init>
		p	1		carver
		p	2		config
	m	()Ldbx;	a	worldCarver
	m	(Lalu;)Z	a	isStartChunk
		p	1		random
	m	(Ldbs;Lcwm;Ljava/util/function/Function;Lalu;Lczg;Lcfh;Lcwl;)Z	a	carve
		p	1		context
		p	2		chunk
		p	3		posToBiome
		p	4		random
		p	5		aquiferSampler
		p	6		pos
		p	7		mask
	m	(Ldbv;)Ldbx;	a	lambda$static$0
		p	0		configuredCarver
	m	()Ldbq;	b	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Ldbx;	d	worldCarver
	f	Ldbq;	e	config
c	dbw	net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(Lalu;)F	a	getThickness
		p	1		random
	m	(Ldbs;Ldbq;Lcwm;Ljava/util/function/Function;Lcwl;Lgt$a;Lgt$a;Lczg;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	8		aquiferSampler
	m	(Ldbs;Ldbt;Lcwm;Ljava/util/function/Function;Lcwl;Lgt$a;Lgt$a;Lczg;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	8		aquiferSampler
	m	()D	b	getYScale
c	dbx	net/minecraft/world/level/levelgen/carver/WorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcfh;DDIIF)Z	a	canReach
		p	0		pos
		p	1		x
		p	3		z
		p	5		branchIndex
		p	6		branchCount
		p	7		baseWidth
	m	(Lcwm;Lgt$a;Lcur;)V	a	lambda$carveBlock$0
		p	2		state
	m	(Ldbq;)Ldbv;	a	configured
		p	1		config
	m	(Ldbq;Lalu;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldbq;Lcur;)Z	a	canReplaceBlock
		p	1		config
		p	2		state
	m	(Ldbs;Ldbq;Lcwm;Ljava/util/function/Function;Lalu;Lczg;Lcfh;Lcwl;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldbs;Ldbq;Lcwm;Ljava/util/function/Function;Lcwl;Lgt$a;Lgt$a;Lczg;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	8		aquiferSampler
	m	(Ldbs;Ldbq;Lcwm;Ljava/util/function/Function;Lczg;DDDDDLcwl;Ldbx$a;)Z	a	carveEllipsoid
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	16		mask
		p	17		skipPredicate
	m	(Ldbs;Ldbq;Lgt;Lczg;)Lcur;	a	getCarveState
		p	1		context
		p	2		config
		p	3		pos
		p	4		sampler
	m	(Ljava/lang/String;Ldbx;)Ldbx;	a	register
		p	0		name
		p	1		carver
	m	(Ldbq;)Z	b	isDebugEnabled
		p	0		config
	m	(Ldbq;Lcur;)Lcur;	b	getDebugState
		p	0		config
		p	1		state
	m	()Lcom/mojang/serialization/Codec;	c	configuredCodec
	m	()I	d	getRange
	f	Ldbx;	a	CAVE
	f	Ldbx;	b	NETHER_CAVE
	f	Ldbx;	c	CANYON
	f	Lcur;	d	AIR
	f	Lcur;	e	CAVE_AIR
	f	Ldoy;	f	WATER
	f	Ldoy;	g	LAVA
	f	Ljava/util/Set;	h	liquids
	f	Lcom/mojang/serialization/Codec;	i	configuredCodec
c	dbx$a	net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
	m	(Ldbs;DDDI)Z	shouldSkip	shouldSkip
		p	1		context
		p	2		scaledRelativeX
		p	4		scaledRelativeY
		p	6		scaledRelativeZ
		p	8		y
c	dby	net/minecraft/world/level/levelgen/carver/package-info
c	dbz	net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lalu;)I	a	getTreeHeight
		p	1		random
	m	(Lcgb;Lalu;Lgt;ILgt$a;Ldfc;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
	m	(Lcgb;Lalu;Lgt;Ldfc;ILgt$a;)V	a	placeTrunk
		p	1		world
		p	2		random
		p	3		pos
		p	4		config
		p	5		height
		p	6		mutablePos
	m	(Lcgb;Lgt;ILgt$a;Ldfc;)Z	a	isValidPosition
		p	1		world
		p	2		pos
		p	3		height
		p	4		mutablePos
		p	5		config
	m	(Ldcy;)Z	a	place
		p	1		context
c	dca	net/minecraft/world/level/levelgen/feature/BambooFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
	f	Lcur;	a	BAMBOO_TRUNK
	f	Lcur;	b	BAMBOO_FINAL_LARGE
	f	Lcur;	c	BAMBOO_TOP_LARGE
	f	Lcur;	d	BAMBOO_TOP_SMALL
c	dcb	net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;ILgt$a;)Z	a	canPlaceAt
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
	m	(Lcgb;ILgt$a;I)Lgt;	a	findSurface
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
		p	3		distance
	m	(Lcgb;ILgt;)Z	a	isAirOrLavaOcean
		p	0		world
		p	1		seaLevel
		p	2		pos
	m	(Lcgb;ILgt;II)Z	a	placeColumn
		p	1		world
		p	2		seaLevel
		p	3		pos
		p	4		height
		p	5		reach
	m	(Lcgb;Lgt$a;I)Lgt;	a	findAir
		p	0		world
		p	1		mutablePos
		p	2		distance
	m	(Ldcy;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_PLACE_ON
	f	I	b	CLUSTERED_REACH
	f	I	c	CLUSTERED_SIZE
	f	I	d	UNCLUSTERED_REACH
	f	I	e	UNCLUSTERED_SIZE
c	dcc	net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lgt;)V	a	placeBaseHangOff
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lcgb;Lalu;Lgt;)Z	b	placeHangOff
		p	1		world
		p	2		random
		p	3		pos
c	dcd	net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dce	net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
	m	([IIIZ)V	a	truncate
c	dcf	net/minecraft/world/level/levelgen/feature/BlockPileFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lgt;Lalu;)Z	a	mayPlaceOn
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcgb;Lgt;Lalu;Ldes;)V	a	tryPlaceBlock
		p	1		world
		p	2		pos
		p	3		random
		p	4		config
	m	(Ldcy;)Z	a	place
		p	1		context
c	dcg	net/minecraft/world/level/levelgen/feature/BlueIceFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dch	net/minecraft/world/level/levelgen/feature/BonusChestFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dci	net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dcj	net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	m	(Ldcw;Ldfa;)V	<init>	<init>
		p	1		feature
		p	2		config
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcgs;Lcwn;Lalu;Lgt;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	3		random
		p	4		origin
	m	(Ldcj;)Ldcw;	a	lambda$static$0
		p	0		configuredFeature
	m	()Ldcw;	b	feature
	m	()Ldfa;	c	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Ldcw;	d	feature
	f	Ldfa;	e	config
c	dck	net/minecraft/world/level/levelgen/feature/CoralClawFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lgt;Lcur;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	dcl	net/minecraft/world/level/levelgen/feature/CoralFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lalu;Lhe$c;)Ljava/util/Optional;	a	lambda$placeCoralBlock$3
		p	1		blocks
	m	(Lcgb;Lalu;Lgt;Lcur;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcgb;Lgt;Lciw;)V	a	lambda$placeCoralBlock$2
		p	2		block
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lgy;Lcgb;Lgt;Lciw;)V	a	lambda$placeCoralBlock$4
		p	3		block
	m	(Lalu;Lhe$c;)Ljava/util/Optional;	b	lambda$placeCoralBlock$1
		p	1		blocks
	m	(Lcgb;Lalu;Lgt;Lcur;)Z	b	placeCoralBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lalu;Lhe$c;)Ljava/util/Optional;	c	lambda$place$0
		p	1		blocks
c	dcm	net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lgt;Lcur;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	dcn	net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lgt;Lcur;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	dco	net/minecraft/world/level/levelgen/feature/DeltaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lgt;Ldew;)Z	a	isClear
		p	0		world
		p	1		pos
		p	2		config
	m	(Ldcy;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_REPLACE
	f	[Lgy;	b	DIRECTIONS
	f	D	c	RIM_SPAWN_CHANCE
c	dcp	net/minecraft/world/level/levelgen/feature/DesertWellFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
	f	Lcvb;	a	IS_SAND
	f	Lcur;	b	sandSlab
	f	Lcur;	c	sandstone
	f	Lcur;	d	water
c	dcq	net/minecraft/world/level/levelgen/feature/DiskFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Ldex;Lcgs;Lalu;IILgt$a;)Z	a	placeColumn
		p	1		config
		p	2		world
		p	3		random
		p	4		topY
		p	5		bottomY
		p	6		pos
c	dcr	net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIIILdey;)D	a	getChanceOfStalagmiteOrStalactite
		p	1		radiusX
		p	2		radiusZ
		p	3		localX
		p	4		localZ
		p	5		config
	m	(Lalu;FFFF)F	a	randomBetweenBiased
		p	0		random
		p	1		min
		p	2		max
		p	3		mean
		p	4		deviation
	m	(Lalu;IIFILdey;)I	a	getDripstoneHeight
		p	1		random
		p	2		localX
		p	3		localZ
		p	4		density
		p	5		height
		p	6		config
	m	(Lcgb;Lgt;)Z	a	canBeAdjacentToWater
		p	1		world
		p	2		pos
	m	(Lcgd;Lgt;)Z	a	isLava
		p	1		world
		p	2		pos
	m	(Lcgs;Lalu;Lgt;IIFDIFLdey;)V	a	placeColumn
		p	1		world
		p	2		random
		p	3		pos
		p	4		localX
		p	5		localZ
		p	6		wetness
		p	7		dripstoneChance
		p	9		height
		p	10		density
		p	11		config
	m	(Lcgs;Lgt;ILgy;)V	a	replaceBlocksWithDripstoneBlocks
		p	1		world
		p	2		pos
		p	3		height
		p	4		direction
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lcgs;Lgt;)Z	b	canPlacePool
		p	1		world
		p	2		pos
c	dcs	net/minecraft/world/level/levelgen/feature/DripstoneUtils
	m	(DDDD)D	a	getDripstoneHeight
		p	0		radius
		p	2		scale
		p	4		heightScale
		p	6		bluntness
	m	(Lcgb;Lgt$a;Lgy;Lcur;)V	a	lambda$growPointedDripstone$0
		p	3		state
	m	(Lcgb;Lgt;)Z	a	isEmptyOrWater
		p	0		world
		p	1		pos
	m	(Lcgb;Lgt;Lgy;IZ)V	a	growPointedDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		height
		p	4		merge
	m	(Lcgs;Lgt;I)Z	a	isCircleMostlyEmbeddedInStone
		p	0		world
		p	1		pos
		p	2		height
	m	(Lcur;)Z	a	isDripstoneBaseOrLava
		p	0		state
	m	(Lgy;IZLjava/util/function/Consumer;)V	a	buildBaseToTipColumn
		p	0		direction
		p	1		height
		p	2		merge
		p	3		callback
	m	(Lgy;Lcvo;)Lcur;	a	createPointedDripstone
		p	0		direction
		p	1		thickness
	m	(Lcgb;Lgt;)Z	b	isEmptyOrWaterOrLava
		p	0		world
		p	1		pos
	m	(Lcur;)Z	b	isDripstoneBase
		p	0		state
	m	(Lcgb;Lgt;)Z	c	placeDripstoneBlockIfPossible
		p	0		world
		p	1		pos
	m	(Lcur;)Z	c	isEmptyOrWater
		p	0		state
	m	(Lcur;)Z	d	isNeitherEmptyNorWater
		p	0		state
	m	(Lcur;)Z	e	isEmptyOrWaterOrLava
		p	0		state
c	dct	net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgs;Lgt;Ldez;Lgt;)V	a	lambda$place$0
		p	3		pos
	m	(Ldcy;)Z	a	place
		p	1		context
c	dcu	net/minecraft/world/level/levelgen/feature/EndIslandFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dcv	net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	m	(Z)V	<init>	<init>
		p	1		open
	m	(Ldcy;)Z	a	place
		p	1		context
	f	I	a	PODIUM_RADIUS
	f	Z	ao	active
	f	I	b	PODIUM_PILLAR_HEIGHT
	f	I	c	RIM_RADIUS
	f	F	d	CORNER_ROUNDING
	f	Lgt;	e	END_PODIUM_LOCATION
c	dcw	net/minecraft/world/level/levelgen/feature/Feature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()Lcom/mojang/serialization/Codec;	a	configuredCodec
	m	(Lakh;)Ljava/util/function/Predicate;	a	isReplaceable
		p	0		tag
	m	(Lakh;Lcur;)Z	a	lambda$isReplaceable$1
		p	1		state
	m	(Lcgg;Lgt;)Z	a	isGrassOrDirt
		p	0		world
		p	1		pos
	m	(Lcgi;Lgt;Lcur;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgs;Lgt;)V	a	markAboveForPostProcessing
		p	1		world
		p	2		pos
	m	(Lcgs;Lgt;Lcur;Ljava/util/function/Predicate;)V	a	safeSetBlock
		p	1		world
		p	2		pos
		p	3		state
		p	4		predicate
	m	(Lcur;)Z	a	isStone
		p	0		state
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Ldfa;)Ldcj;	a	lambda$new$0
		p	1		config
	m	(Ldfa;Lcgs;Lcwn;Lalu;Lgt;)Z	a	place
		p	1		config
		p	2		world
		p	3		chunkGenerator
		p	4		random
		p	5		pos
	m	(Ljava/lang/String;Ldcw;)Ldcw;	a	register
		p	0		name
		p	1		feature
	m	(Ljava/util/function/Function;Lgt;)Z	a	isAdjacentToAir
		p	0		posToState
		p	1		pos
	m	(Ljava/util/function/Function;Lgt;Ljava/util/function/Predicate;)Z	a	checkNeighbors
		p	0		posToState
		p	1		pos
		p	2		predicate
	m	(Lcur;)Z	b	isDirt
		p	0		state
	f	Ldcw;	A	ROOT_SYSTEM
	f	Ldcw;	B	MULTIFACE_GROWTH
	f	Ldcw;	C	UNDERWATER_MAGMA
	f	Ldcw;	D	MONSTER_ROOM
	f	Ldcw;	E	BLUE_ICE
	f	Ldcw;	F	ICEBERG
	f	Ldcw;	G	FOREST_ROCK
	f	Ldcw;	H	DISK
	f	Ldcw;	I	LAKE
	f	Ldcw;	J	ORE
	f	Ldcw;	K	END_SPIKE
	f	Ldcw;	L	END_ISLAND
	f	Ldcw;	M	END_GATEWAY
	f	Ldec;	N	SEAGRASS
	f	Ldcw;	O	KELP
	f	Ldcw;	P	CORAL_TREE
	f	Ldcw;	Q	CORAL_MUSHROOM
	f	Ldcw;	R	CORAL_CLAW
	f	Ldcw;	S	SEA_PICKLE
	f	Ldcw;	T	SIMPLE_BLOCK
	f	Ldcw;	U	BAMBOO
	f	Ldcw;	V	HUGE_FUNGUS
	f	Ldcw;	W	NETHER_FOREST_VEGETATION
	f	Ldcw;	X	WEEPING_VINES
	f	Ldcw;	Y	TWISTING_VINES
	f	Ldcw;	Z	BASALT_COLUMNS
	f	Lcom/mojang/serialization/Codec;	a	configuredCodec
	f	Ldcw;	aa	DELTA_FEATURE
	f	Ldcw;	ab	REPLACE_BLOBS
	f	Ldcw;	ac	FILL_LAYER
	f	Ldch;	ad	BONUS_CHEST
	f	Ldcw;	ae	BASALT_PILLAR
	f	Ldcw;	af	SCATTERED_ORE
	f	Ldcw;	ag	RANDOM_SELECTOR
	f	Ldcw;	ah	SIMPLE_RANDOM_SELECTOR
	f	Ldcw;	ai	RANDOM_BOOLEAN_SELECTOR
	f	Ldcw;	aj	GEODE
	f	Ldcw;	ak	DRIPSTONE_CLUSTER
	f	Ldcw;	al	LARGE_DRIPSTONE
	f	Ldcw;	am	POINTED_DRIPSTONE
	f	Ldcw;	an	SCULK_PATCH
	f	Ldcw;	f	NO_OP
	f	Ldcw;	g	TREE
	f	Ldcw;	h	FLOWER
	f	Ldcw;	i	NO_BONEMEAL_FLOWER
	f	Ldcw;	j	RANDOM_PATCH
	f	Ldcw;	k	BLOCK_PILE
	f	Ldcw;	l	SPRING
	f	Ldcw;	m	CHORUS_PLANT
	f	Ldcw;	n	REPLACE_SINGLE_BLOCK
	f	Ldcw;	o	VOID_START_PLATFORM
	f	Ldcw;	p	DESERT_WELL
	f	Ldcw;	q	FOSSIL
	f	Ldcw;	r	HUGE_RED_MUSHROOM
	f	Ldcw;	s	HUGE_BROWN_MUSHROOM
	f	Ldcw;	t	ICE_SPIKE
	f	Ldcw;	u	GLOWSTONE_BLOB
	f	Ldcw;	v	FREEZE_TOP_LAYER
	f	Ldcw;	w	VINES
	f	Ldcw;	x	BLOCK_COLUMN
	f	Ldcw;	y	VEGETATION_PATCH
	f	Ldcw;	z	WATERLOGGED_VEGETATION_PATCH
c	dcx	net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	m	()V	a	clearCounts
	m	(Lafo;)V	a	chunkDecorated
		p	0		world
	m	(Lafo;Ldcj;Ljava/util/Optional;)V	a	featurePlaced
		p	0		world
		p	1		configuredFeature
		p	2		placedFeature
	m	(Lafo;Ldcx$b;)V	a	lambda$logCounts$2
		p	0		world
		p	1		features
	m	(Ldcx$a;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$featurePlaced$0
		p	0		featureData
		p	1		count
	m	(Ljava/lang/String;Ljava/lang/Integer;Lhm;Ldcx$a;Ljava/lang/Integer;)V	a	lambda$logCounts$1
		p	3		featureData
		p	4		count
	m	()V	b	logCounts
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/cache/LoadingCache;	b	data
c	dcx$1	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$1
	m	(Lafo;)Ldcx$b;	a	load
c	dcx$a	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	m	()Ldcj;	a	feature
	m	()Ljava/util/Optional;	b	topFeature
	f	Ldcj;	a	feature
	f	Ljava/util/Optional;	b	topFeature
c	dcx$b	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	m	()Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
c	dcy	net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	m	(Ljava/util/Optional;Lcgs;Lcwn;Lalu;Lgt;Ldfa;)V	<init>	<init>
		p	1		feature
		p	2		world
		p	3		generator
		p	4		random
		p	5		origin
		p	6		config
	m	()Ljava/util/Optional;	a	topFeature
	m	()Lcgs;	b	level
	m	()Lcwn;	c	chunkGenerator
	m	()Lalu;	d	random
	m	()Lgt;	e	origin
	m	()Ldfa;	f	config
	f	Ljava/util/Optional;	a	topFeature
	f	Lcgs;	b	level
	f	Lcwn;	c	chunkGenerator
	f	Lalu;	d	random
	f	Lgt;	e	origin
	f	Ldfa;	f	config
c	dcz	net/minecraft/world/level/levelgen/feature/FillLayerFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dda	net/minecraft/world/level/levelgen/feature/FossilFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgs;Ldjw;)I	a	countEmptyCorners
		p	0		world
		p	1		box
	m	(Lcgs;Lorg/apache/commons/lang3/mutable/MutableInt;Lgt;)V	a	lambda$countEmptyCorners$0
		p	2		pos
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddb	net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	m	(Ljava/util/List;Ljava/util/List;Lhc;Lhc;I)V	<init>	<init>
		p	1		fossilStructures
		p	2		overlayStructures
		p	3		fossilProcessors
		p	4		overlayProcessors
		p	5		maxEmptyCorners
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lddb;)Ljava/lang/Integer;	a	lambda$static$4
		p	0		config
	m	(Lddb;)Lhc;	b	lambda$static$3
		p	0		config
	m	(Lddb;)Lhc;	c	lambda$static$2
		p	0		config
	m	(Lddb;)Ljava/util/List;	d	lambda$static$1
		p	0		config
	m	(Lddb;)Ljava/util/List;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	fossilStructures
	f	Ljava/util/List;	c	overlayStructures
	f	Lhc;	d	fossilProcessors
	f	Lhc;	e	overlayProcessors
	f	I	f	maxEmptyCornersAllowed
c	ddc	net/minecraft/world/level/levelgen/feature/GeodeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
	f	[Lgy;	a	DIRECTIONS
c	ddd	net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dde	net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lcgb;Lalu;Lgt;ILgt$a;Ldfc;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	ddf	net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	m	(Lcur;Lcur;Lcur;Lcur;Z)V	<init>	<init>
		p	1		validBaseBlock
		p	2		stemState
		p	3		hatState
		p	4		decorationState
		p	5		planted
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lddf;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		config
	m	(Lddf;)Lcur;	b	lambda$static$3
		p	0		config
	m	(Lddf;)Lcur;	c	lambda$static$2
		p	0		config
	m	(Lddf;)Lcur;	d	lambda$static$1
		p	0		config
	m	(Lddf;)Lcur;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcur;	b	validBaseState
	f	Lcur;	c	stemState
	f	Lcur;	d	hatState
	f	Lcur;	e	decorState
	f	Z	f	planted
c	ddg	net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lddf;Lgt$a;FFF)V	a	placeHatBlock
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		decorationChance
		p	6		generationChance
		p	7		vineChance
	m	(Lcgb;Lalu;Lddf;Lgt;IZ)V	a	placeStem
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		stemHeight
		p	6		thickStem
	m	(Lcgb;Lalu;Lgt;Lcur;Z)V	a	placeHatDropBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
		p	5		vines
	m	(Lcgb;Lgt;Z)Z	a	isReplaceable
		p	0		world
		p	1		pos
		p	2		replacePlants
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lgt;Lcgb;Lalu;)V	a	tryPlaceWeepingVines
		p	0		pos
		p	1		world
		p	2		random
	m	(ZLcur;)Z	a	lambda$isReplaceable$0
		p	1		state
	m	(Lcgb;Lalu;Lddf;Lgt;IZ)V	b	placeHat
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		hatHeight
		p	6		thickStem
	f	F	a	HUGE_PROBABILITY
c	ddh	net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lcgb;Lalu;Lgt;ILgt$a;Ldfc;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	ddi	net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddj	net/minecraft/world/level/levelgen/feature/IcebergFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(III)I	a	getEllipseC
		p	1		y
		p	2		height
		p	3		value
	m	(IILgt;IID)D	a	signedDistanceEllipse
		p	1		x
		p	2		z
		p	3		pos
		p	4		divisor1
		p	5		divisor2
		p	6		randomSine
	m	(IILgt;ILalu;)D	a	signedDistanceCircle
		p	1		x
		p	2		z
		p	3		pos
	m	(IILgt;Lcgb;ZDLgt;II)V	a	carve
		p	2		y
		p	3		pos
		p	4		world
		p	5		placeWater
	m	(Lalu;III)I	a	heightDependentRadiusRound
		p	2		y
		p	3		height
		p	4		factor
	m	(Lalu;Lcgb;IILgt;ZIDI)V	a	generateCutOut
		p	2		world
		p	5		pos
	m	(Lcfg;Lgt;)Z	a	belowIsAir
		p	1		world
		p	2		pos
	m	(Lcgb;Lalu;Lgt;IIIIIIZIDZLcur;)V	a	generateIcebergBlock
		p	1		world
		p	3		pos
		p	4		height
		p	5		offsetX
		p	6		offsetY
		p	7		offsetZ
		p	12		randomSine
		p	14		placeSnow
		p	15		state
	m	(Lcgb;Lgt;)V	a	removeFloatingSnowLayer
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;IIZI)V	a	smooth
		p	1		world
		p	2		pos
		p	4		height
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lgt;Lcgb;Lalu;IIZZLcur;)V	a	setIcebergBlock
		p	1		pos
		p	2		world
		p	4		heightRemaining
		p	5		height
		p	6		lessSnow
		p	7		placeSnow
		p	8		state
	m	(III)I	b	heightDependentRadiusEllipse
		p	1		y
		p	2		height
		p	3		factor
	m	(Lalu;III)I	b	heightDependentRadiusSteep
		p	2		y
		p	3		height
		p	4		factor
	m	(Lcur;)Z	c	isIcebergState
		p	0		state
c	ddk	net/minecraft/world/level/levelgen/feature/KelpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddl	net/minecraft/world/level/levelgen/feature/LakeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lcur;)Z	c	canReplaceBlock
		p	1		state
	f	Lcur;	a	AIR
c	ddl$a	net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	m	()Ldgz;	a	fluid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldgz;	b	barrier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	fluid
	f	Ldgz;	c	barrier
c	ddm	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgs;Lgt;Lczk$b;Lddm$b;)V	a	placeDebugMarkers
		p	1		world
		p	2		pos
		p	3		surface
		p	4		wind
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lgt;ZLalu;ILayp;Layp;)Lddm$a;	a	makeDripstone
		p	0		pos
		p	1		isStalagmite
		p	3		scale
		p	4		bluntness
		p	5		heightScale
c	ddm$a	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	m	(Lgt;ZIDD)V	<init>	<init>
		p	1		pos
		p	2		isStalagmite
		p	3		scale
		p	4		bluntness
		p	6		heightScale
	m	()I	a	getHeight
	m	(F)I	a	getHeightAtRadius
		p	1		height
	m	(Lcgs;Lalu;Lddm$b;)V	a	placeBlocks
		p	1		world
		p	3		wind
	m	(Lcgs;Lddm$b;)Z	a	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
		p	1		world
		p	2		wind
	m	(Ldfd;)Z	a	isSuitableForWind
		p	1		config
	m	()I	b	getMinY
	m	()I	c	getMaxY
	f	Lgt;	a	root
	f	Z	b	pointingUp
	f	I	c	radius
	f	D	d	bluntness
	f	D	e	scale
c	ddm$b	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	m	(ILalu;Layp;)V	<init>	<init>
		p	1		y
		p	3		wind
	m	()Lddm$b;	a	noWind
	m	(Lgt;)Lgt;	a	offset
		p	1		pos
	f	I	a	originY
	f	Ldvt;	b	windSpeed
c	ddn	net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lalu;)Lbau;	a	randomEntityId
		p	1		random
	m	(Ldcy;)Z	a	place
		p	1		context
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	[Lbau;	b	MOBS
	f	Lcur;	c	AIR
c	ddo	net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgs;Lgt;Lcur;Ldff;Lalu;Ljava/util/List;)Z	a	placeGrowthIfPossible
		p	0		world
		p	1		pos
		p	2		state
		p	3		config
		p	4		random
		p	5		directions
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lcur;)Z	c	isAirOrWater
		p	0		state
c	ddp	net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddq	net/minecraft/world/level/levelgen/feature/NoOpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddr	net/minecraft/world/level/levelgen/feature/OreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lalu;F)Z	a	shouldSkipAirCheck
		p	1		chance
	m	(Lcgs;Lalu;Ldfi;DDDDDDIIIII)Z	a	doPlace
		p	1		world
		p	3		config
		p	4		startX
		p	6		endX
		p	8		startZ
		p	10		endZ
		p	12		startY
		p	14		endY
		p	16		x
		p	17		y
		p	18		z
		p	19		horizontalSize
		p	20		verticalSize
	m	(Lcur;Ljava/util/function/Function;Lalu;Ldfi;Ldfi$a;Lgt$a;)Z	a	canPlaceOre
		p	0		state
		p	1		posToState
		p	3		config
		p	4		target
		p	5		pos
	m	(Ldcy;)Z	a	place
		p	1		context
c	dds	net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lgt;Ldfj;)V	a	createPatchOfDripstoneBlocks
		p	0		world
		p	1		random
		p	2		pos
		p	3		config
	m	(Lcgb;Lgt;Lalu;)Ljava/util/Optional;	a	getTipDirection
		p	0		world
		p	1		pos
		p	2		random
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddt	net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddu	net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddv	net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddw	net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lgt$a;Lciw;)Lgt;	a	findTarget
		p	0		world
		p	1		mutablePos
		p	2		target
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddx	net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ddy	net/minecraft/world/level/levelgen/feature/RootSystemFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgs;Lcwn;Ldfq;Lalu;Lgt$a;Lgt;)Z	a	placeDirtAndTree
		p	0		world
		p	1		generator
		p	2		config
		p	4		mutablePos
		p	5		pos
	m	(Lcgs;Ldfq;Lalu;IILgt$a;)V	a	placeRootedDirt
		p	0		world
		p	1		config
		p	3		x
		p	4		z
		p	5		mutablePos
	m	(Lcgs;Ldfq;Lalu;Lgt;Lgt$a;)V	a	placeRoots
		p	0		world
		p	1		config
		p	3		pos
		p	4		mutablePos
	m	(Lcgs;Ldfq;Lgt;)Z	a	spaceForTree
		p	0		world
		p	1		config
		p	2		pos
	m	(Lcur;II)Z	a	isAllowedTreeSpace
		p	0		state
		p	1		height
		p	2		allowedVerticalWaterForTree
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Ldfq;Lcur;)Z	a	lambda$placeRootedDirt$0
		p	1		state
	m	(Lgt;ILcgs;Ldfq;Lalu;)V	a	placeDirt
		p	0		pos
		p	1		maxY
		p	2		world
		p	3		config
c	ddz	net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lalu;I)I	a	getRandomPlacementInOneAxisRelativeToOrigin
		p	2		spread
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lgt$a;Lalu;Lgt;I)V	a	offsetTargetPos
		p	1		mutable
		p	3		origin
		p	4		spread
	f	I	a	MAX_DIST_FROM_ORIGIN
c	dea	net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lgt;)Z	a	canSpreadFrom
		p	1		world
		p	2		pos
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lcgb;Lgt;)Z	b	lambda$canSpreadFrom$0
		p	1		pos2
c	deb	net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dec	net/minecraft/world/level/levelgen/feature/SeagrassFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	ded	net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dee	net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	def	net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	deg	net/minecraft/world/level/levelgen/feature/SpikeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgp;Lalu;Ldfu;Ldeg$a;)V	a	placeSpike
		p	1		world
		p	2		random
		p	3		config
		p	4		spike
	m	(Lcgs;)Ljava/util/List;	a	getSpikesForLevel
		p	0		world
	m	(Ldcy;)Z	a	place
		p	1		context
	f	I	a	NUMBER_OF_SPIKES
	f	I	b	SPIKE_DISTANCE
	f	Lcom/google/common/cache/LoadingCache;	c	SPIKE_CACHE
c	deg$a	net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	m	(IIIIZ)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		radius
		p	4		height
		p	5		guarded
	m	()I	a	getCenterX
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldeg$a;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		spike
	m	(Lgt;)Z	a	isCenterWithinChunk
		p	1		pos
	m	()I	b	getCenterZ
	m	(Ldeg$a;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		spike
	m	()I	c	getRadius
	m	(Ldeg$a;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		spike
	m	()I	d	getHeight
	m	(Ldeg$a;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		spike
	m	()Z	e	isGuarded
	m	(Ldeg$a;)Ljava/lang/Integer;	e	lambda$static$0
		p	0		spike
	m	()Ldvo;	f	getTopBoundingBox
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	centerX
	f	I	c	centerZ
	f	I	d	radius
	f	I	e	height
	f	Z	f	guarded
	f	Ldvo;	g	topBoundingBox
c	deg$b	net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
c	deh	net/minecraft/world/level/levelgen/feature/SpringFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	dei	net/minecraft/world/level/levelgen/feature/TreeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Ldjw;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Ldwc;	a	updateLeaves
		p	0		world
		p	1		box
		p	2		trunkPositions
		p	3		decorationPositions
	m	(Lcgg;ILgt;Ldfw;)I	a	getMaxFreeTreeHeight
		p	1		world
		p	2		height
		p	3		pos
		p	4		config
	m	(Lcgi;Lgt;Lcur;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgs;Lalu;Lgt;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ldfw;)Z	a	doPlace
		p	1		world
		p	2		random
		p	3		pos
		p	4		rootPlacerReplacer
		p	5		trunkPlacerReplacer
		p	6		foliagePlacerReplacer
		p	7		config
	m	(Lcgs;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ldjw;)Ljava/lang/Boolean;	a	lambda$place$11
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Ldfw;Lcgs;Ljava/util/function/BiConsumer;Lalu;IIILdgl$a;)V	a	lambda$doPlace$5
		p	7		node
	m	(Ldhq$a;Ldhq;)V	a	lambda$place$10
		p	1		decorator
	m	(Lgt;Lalu;Ldgx;)Lgt;	a	lambda$doPlace$4
		p	2		rootPlacer
	m	(Ljava/util/Set;Lcgs;Lgt;Lcur;)V	a	lambda$place$9
		p	2		pos
		p	3		state
	m	(Lcgg;Lgt;)Z	b	isBlockWater
		p	0		world
		p	1		pos
	m	(Lcgi;Lgt;Lcur;)V	b	setBlockKnownShape
		p	0		world
		p	1		pos
		p	2		state
	m	(Ljava/util/Set;Lcgs;Lgt;Lcur;)V	b	lambda$place$8
		p	2		pos
		p	3		state
	m	(Lcgg;Lgt;)Z	c	isAirOrLeaves
		p	0		world
		p	1		pos
	m	(Lcur;)Z	c	lambda$isReplaceablePlant$3
		p	0		state
	m	(Ljava/util/Set;Lcgs;Lgt;Lcur;)V	c	lambda$place$7
		p	2		pos
		p	3		state
	m	(Lcgg;Lgt;)Z	d	validTreePos
		p	0		world
		p	1		pos
	m	(Lcur;)Z	d	lambda$isAirOrLeaves$2
		p	0		state
	m	(Ljava/util/Set;Lcgs;Lgt;Lcur;)V	d	lambda$place$6
		p	2		pos
		p	3		state
	m	(Lcgg;Lgt;)Z	e	isVine
		p	0		world
		p	1		pos
	m	(Lcur;)Z	e	lambda$isBlockWater$1
		p	0		state
	m	(Lcgg;Lgt;)Z	f	isReplaceablePlant
		p	0		world
		p	1		pos
	m	(Lcur;)Z	f	lambda$isVine$0
		p	0		state
	f	I	a	BLOCK_UPDATE_FLAGS
c	dej	net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lgt$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		maxLength
		p	4		minAge
		p	5		maxAge
	m	(Lcgb;Lgt$a;)Z	a	findFirstAirBlockAboveGround
		p	0		world
		p	1		pos
	m	(Lcgb;Lgt;)Z	a	isInvalidPlacementLocation
		p	0		world
		p	1		pos
	m	(Ldcy;)Z	a	place
		p	1		context
c	dek	net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lalu;Ldfy;Lgt;)Z	a	lambda$place$0
		p	2		pos
	m	(Lcgb;Lgt;)Z	a	isWaterOrAir
		p	1		world
		p	2		pos
	m	(Lcgs;Lgt;Ldfy;)Ljava/util/OptionalInt;	a	getFloorY
		p	0		world
		p	1		pos
		p	2		config
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lcgs;Lgt;)Z	b	isValidPlacement
		p	1		world
		p	2		pos
	m	(Lcgs;Lgt;)I	c	lambda$place$2
		p	1		pos
	m	(Lcur;)Z	c	lambda$getFloorY$4
		p	0		state
	m	(Lcgs;Lgt;)Z	d	lambda$place$1
		p	2		pos
	m	(Lcur;)Z	d	lambda$getFloorY$3
		p	0		state
c	del	net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgs;Ldfz;Lalu;Lgt;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Lcgs;Ldfz;Lcwn;Lalu;Lgt;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Lcgs;Ldfz;Ljava/util/function/Predicate;Lalu;Lgt$a;I)Z	a	placeGround
		p	1		world
		p	2		config
		p	3		replaceable
		p	5		pos
		p	6		depth
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Ldcy;Lcgs;Ldfz;Lalu;Ljava/util/Set;II)V	a	distributeVegetation
		p	1		context
		p	2		world
		p	3		config
		p	5		positions
		p	6		radiusX
		p	7		radiusZ
	m	(Ldfz;Lcur;)Z	a	lambda$place$0
		p	1		state
	m	(Lcur;)Z	c	lambda$placeGroundPatch$1
		p	0		state
c	dem	net/minecraft/world/level/levelgen/feature/VinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcy;)Z	a	place
		p	1		context
c	den	net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	checkerboardDistance
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
	m	(Ldcy;)Z	a	place
		p	1		context
	f	Lgt;	a	PLATFORM_OFFSET
	f	Lcfh;	b	PLATFORM_ORIGIN_CHUNK
	f	I	c	PLATFORM_RADIUS
	f	I	d	PLATFORM_RADIUS_CHUNKS
c	deo	net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgs;Ldfz;Lalu;Lgt;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Lcgs;Ldfz;Lcwn;Lalu;Lgt;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Lcgs;Lgt;Lgt$a;Lgy;)Z	a	isExposedDirection
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		direction
	m	(Lcgs;Ljava/util/Set;Lgt;Lgt$a;)Z	a	isExposed
		p	0		world
		p	1		positions
		p	2		pos
		p	3		mutablePos
c	dep	net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcgb;Lalu;Lgt$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		length
		p	4		minAge
		p	5		maxAge
	m	(Lcgb;Lalu;Lgt;)V	a	placeRoofNetherWart
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldcy;)Z	a	place
		p	1		context
	m	(Lcgb;Lalu;Lgt;)V	b	placeRoofWeepingVines
		p	1		world
		p	2		random
		p	3		pos
	f	[Lgy;	a	DIRECTIONS
c	deq	net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	m	(Lhc;F)V	<init>	<init>
		p	1		feature
		p	2		chance
	m	(Lcgs;Lcwn;Lalu;Lgt;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	4		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldeq;)Ljava/lang/Float;	a	lambda$static$1
		p	0		config
	m	(Ldeq;)Lhc;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhc;	b	feature
	f	F	c	chance
c	der	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	m	()Ljava/util/List;	a	layers
	m	(Layr;Ldgz;)Lder$a;	a	layer
		p	0		height
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lgy;	b	direction
	m	(Layr;Ldgz;)Lder;	b	simple
		p	0		height
		p	1		state
	m	()Ldaz;	c	allowedPlacement
	m	()Z	d	prioritizeTip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	layers
	f	Lgy;	c	direction
	f	Ldaz;	d	allowedPlacement
	f	Z	e	prioritizeTip
c	der$a	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	m	()Layr;	a	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldgz;	b	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	height
	f	Ldgz;	c	state
c	des	net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	m	(Ldgz;)V	<init>	<init>
		p	1		stateProvider
	m	(Ldes;)Ldgz;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	stateProvider
c	det	net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	m	(Lcur;)V	<init>	<init>
		p	1		state
	m	(Ldet;)Lcur;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcur;	b	state
c	deu	net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	m	(Layr;Layr;)V	<init>	<init>
		p	1		reach
		p	2		height
	m	()Layr;	a	reach
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldeu;)Layr;	a	lambda$static$1
		p	0		config
	m	()Layr;	b	height
	m	(Ldeu;)Layr;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	reach
	f	Layr;	c	height
c	dev	net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	m	(I)V	<init>	<init>
		p	1		count
	m	(Layr;)V	<init>	<init>
		p	1		distribution
	m	()Layr;	a	count
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	count
c	dew	net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	m	(Lcur;Lcur;Layr;Layr;)V	<init>	<init>
		p	1		contents
		p	2		rim
		p	3		size
		p	4		rimSize
	m	()Lcur;	a	contents
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldew;)Layr;	a	lambda$static$3
		p	0		config
	m	()Lcur;	b	rim
	m	(Ldew;)Layr;	b	lambda$static$2
		p	0		config
	m	()Layr;	c	size
	m	(Ldew;)Lcur;	c	lambda$static$1
		p	0		config
	m	()Layr;	d	rimSize
	m	(Ldew;)Lcur;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcur;	b	contents
	f	Lcur;	c	rim
	f	Layr;	d	size
	f	Layr;	e	rimSize
c	dex	net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	m	()Ldhh;	a	stateProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldaz;	b	target
	m	()Layr;	c	radius
	m	()I	d	halfHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhh;	b	stateProvider
	f	Ldaz;	c	target
	f	Layr;	d	radius
	f	I	e	halfHeight
c	dey	net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	m	(ILayr;Layr;IILayr;Layp;Layp;FII)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		height
		p	3		radius
		p	4		maxStalagmiteStalactiteHeightDiff
		p	5		heightDeviation
		p	6		dripstoneBlockLayerThickness
		p	7		density
		p	8		wetness
		p	9		wetnessMean
		p	10		maxDistanceFromCenterAffectingChanceOfDripstoneColumn
		p	11		maxDistanceFromCenterAffectingHeightBias
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$11
		p	0		instance
	m	(Ldey;)Ljava/lang/Integer;	a	lambda$static$10
		p	0		config
	m	(Ldey;)Ljava/lang/Integer;	b	lambda$static$9
		p	0		config
	m	(Ldey;)Ljava/lang/Float;	c	lambda$static$8
		p	0		config
	m	(Ldey;)Layp;	d	lambda$static$7
		p	0		config
	m	(Ldey;)Layp;	e	lambda$static$6
		p	0		config
	m	(Ldey;)Layr;	f	lambda$static$5
		p	0		config
	m	(Ldey;)Ljava/lang/Integer;	g	lambda$static$4
		p	0		config
	m	(Ldey;)Ljava/lang/Integer;	h	lambda$static$3
		p	0		config
	m	(Ldey;)Layr;	i	lambda$static$2
		p	0		config
	m	(Ldey;)Layr;	j	lambda$static$1
		p	0		config
	m	(Ldey;)Ljava/lang/Integer;	k	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Layr;	c	height
	f	Layr;	d	radius
	f	I	e	maxStalagmiteStalactiteHeightDiff
	f	I	f	heightDeviation
	f	Layr;	g	dripstoneBlockLayerThickness
	f	Layp;	h	density
	f	Layp;	i	wetness
	f	F	j	chanceOfDripstoneColumnAtMaxDistanceFromCenter
	f	I	k	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	f	I	l	maxDistanceFromCenterAffectingHeightBias
c	dez	net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	m	(Ljava/util/Optional;Z)V	<init>	<init>
		p	1		exitPos
		p	2		exact
	m	()Ldez;	a	delayedExitSearch
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldez;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		config
	m	(Lgt;Z)Ldez;	a	knownExit
		p	0		exitPortalPosition
		p	1		exitsAtSpawn
	m	()Ljava/util/Optional;	b	getExit
	m	(Ldez;)Ljava/util/Optional;	b	lambda$static$0
		p	0		config
	m	()Z	c	isExitExact
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	exit
	f	Z	c	exact
c	dfa	net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Ldfh;	m	NONE
c	dfb	net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	m	(Lczr;Lczt;Lczs;DDZLayr;Layr;Layr;IIDI)V	<init>	<init>
		p	1		layerConfig
		p	2		layerThicknessConfig
		p	3		crackConfig
		p	4		usePotentialPlacementsChance
		p	6		useAlternateLayer0Chance
		p	8		placementsRequireLayer0Alternate
		p	9		outerWallDistance
		p	10		distributionPoints
		p	11		pointOffset
		p	12		maxDistributionPoints
		p	13		minPointOffset
		p	14		noiseMultiplier
		p	16		maxGenOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Ldfb;)Ljava/lang/Integer;	a	lambda$static$12
		p	0		config
	m	(Ldfb;)Ljava/lang/Double;	b	lambda$static$11
		p	0		config
	m	(Ldfb;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Ldfb;)Ljava/lang/Integer;	d	lambda$static$9
		p	0		config
	m	(Ldfb;)Layr;	e	lambda$static$8
		p	0		config
	m	(Ldfb;)Layr;	f	lambda$static$7
		p	0		config
	m	(Ldfb;)Layr;	g	lambda$static$6
		p	0		config
	m	(Ldfb;)Ljava/lang/Boolean;	h	lambda$static$5
		p	0		config
	m	(Ldfb;)Ljava/lang/Double;	i	lambda$static$4
		p	0		config
	m	(Ldfb;)Ljava/lang/Double;	j	lambda$static$3
		p	0		config
	m	(Ldfb;)Lczs;	k	lambda$static$2
		p	0		config
	m	(Ldfb;)Lczt;	l	lambda$static$1
		p	0		config
	m	(Ldfb;)Lczr;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CHANCE_RANGE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lczr;	c	geodeBlockSettings
	f	Lczt;	d	geodeLayerSettings
	f	Lczs;	e	geodeCrackSettings
	f	D	f	usePotentialPlacementsChance
	f	D	g	useAlternateLayer0Chance
	f	Z	h	placementsRequireLayer0Alternate
	f	Layr;	i	outerWallDistance
	f	Layr;	j	distributionPoints
	f	Layr;	k	pointOffset
	f	I	l	minGenOffset
	f	I	n	maxGenOffset
	f	D	o	noiseMultiplier
	f	I	p	invalidBlocksThreshold
c	dfc	net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	m	(Ldgz;Ldgz;I)V	<init>	<init>
		p	1		capProvider
		p	2		stemProvider
		p	3		foliageRadius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldfc;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldfc;)Ldgz;	b	lambda$static$1
	m	(Ldfc;)Ldgz;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	capProvider
	f	Ldgz;	c	stemProvider
	f	I	d	foliageRadius
c	dfd	net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	m	(ILayr;Layp;FLayp;Layp;Layp;IF)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		columnRadius
		p	3		heightScale
		p	4		maxColumnRadiusToCaveHeightRatio
		p	5		stalactiteBluntness
		p	6		stalagmiteBluntness
		p	7		windSpeed
		p	8		minRadiusForWind
		p	9		minBluntnessForWind
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
		p	0		instance
	m	(Ldfd;)Ljava/lang/Float;	a	lambda$static$8
		p	0		config
	m	(Ldfd;)Ljava/lang/Integer;	b	lambda$static$7
		p	0		config
	m	(Ldfd;)Layp;	c	lambda$static$6
		p	0		config
	m	(Ldfd;)Layp;	d	lambda$static$5
		p	0		config
	m	(Ldfd;)Layp;	e	lambda$static$4
		p	0		config
	m	(Ldfd;)Ljava/lang/Float;	f	lambda$static$3
		p	0		config
	m	(Ldfd;)Layp;	g	lambda$static$2
		p	0		config
	m	(Ldfd;)Layr;	h	lambda$static$1
		p	0		config
	m	(Ldfd;)Ljava/lang/Integer;	i	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Layr;	c	columnRadius
	f	Layp;	d	heightScale
	f	F	e	maxColumnRadiusToCaveHeightRatio
	f	Layp;	f	stalactiteBluntness
	f	Layp;	g	stalagmiteBluntness
	f	Layp;	h	windSpeed
	f	I	i	minRadiusForWind
	f	F	j	minBluntnessForWind
c	dfe	net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	m	(ILcur;)V	<init>	<init>
		p	1		height
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldfe;)Lcur;	a	lambda$static$1
		p	0		config
	m	(Ldfe;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Lcur;	c	state
c	dff	net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	m	(Lcnn;IZZZFLhe;)V	<init>	<init>
		p	1		lichen
		p	2		searchRange
		p	3		placeOnFloor
		p	4		placeOnCeiling
		p	5		placeOnWalls
		p	6		spreadChance
		p	7		canPlaceOn
	m	(Lalu;)Ljava/util/List;	a	getShuffledDirections
		p	1		random
	m	(Lalu;Lgy;)Ljava/util/List;	a	getShuffledDirectionsExcept
		p	1		random
		p	2		excluded
	m	(Lciw;)Lcom/mojang/serialization/DataResult;	a	apply
		p	0		block
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Ldff;)Lhe;	a	lambda$static$6
		p	0		config
	m	(Lgy;Lgy;)Z	a	lambda$getShuffledDirectionsExcept$8
		p	1		direction
	m	(Ldff;)Ljava/lang/Float;	b	lambda$static$5
		p	0		config
	m	(Ldff;)Ljava/lang/Boolean;	c	lambda$static$4
		p	0		config
	m	(Ldff;)Ljava/lang/Boolean;	d	lambda$static$3
		p	0		config
	m	(Ldff;)Ljava/lang/Boolean;	e	lambda$static$2
		p	0		config
	m	(Ldff;)Ljava/lang/Integer;	f	lambda$static$1
		p	0		config
	m	(Ldff;)Lcnn;	g	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcnn;	b	placeBlock
	f	I	c	searchRange
	f	Z	d	canPlaceOnFloor
	f	Z	e	canPlaceOnCeiling
	f	Z	f	canPlaceOnWall
	f	F	g	chanceOfSpreading
	f	Lhe;	h	canBePlacedOn
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	i	validDirections
c	dfg	net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	m	(Ldgz;II)V	<init>	<init>
		p	1		stateProvider
		p	2		spreadWidth
		p	3		spreadHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldfg;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Ldfg;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldfg;)Ldgz;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	spreadWidth
	f	I	e	spreadHeight
c	dfh	net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	m	()Ldfh;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfh;	b	INSTANCE
c	dfi	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	m	(Ldnq;Lcur;I)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
	m	(Ldnq;Lcur;IF)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
		p	4		discardOnAirChance
	m	(Ljava/util/List;I)V	<init>	<init>
		p	1		targets
		p	2		size
	m	(Ljava/util/List;IF)V	<init>	<init>
		p	1		targets
		p	2		size
		p	3		discardOnAirChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldfi;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Ldnq;Lcur;)Ldfi$a;	a	target
		p	0		test
		p	1		state
	m	(Ldfi;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldfi;)Ljava/util/List;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
	f	I	c	size
	f	F	d	discardChanceOnAirExposure
c	dfi$a	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	m	(Ldnq;Lcur;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldfi$a;)Lcur;	a	lambda$static$1
		p	0		target
	m	(Ldfi$a;)Ldnq;	b	lambda$static$0
		p	0		target
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldnq;	b	target
	f	Lcur;	c	state
c	dfj	net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	m	(FFFF)V	<init>	<init>
		p	1		chanceOfTallerDripstone
		p	2		chanceOfDirectionalSpread
		p	3		chanceOfSpreadRadius2
		p	4		chanceOfSpreadRadius3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldfj;)Ljava/lang/Float;	a	lambda$static$3
		p	0		config
	m	(Ldfj;)Ljava/lang/Float;	b	lambda$static$2
		p	0		config
	m	(Ldfj;)Ljava/lang/Float;	c	lambda$static$1
		p	0		config
	m	(Ldfj;)Ljava/lang/Float;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	chanceOfTallerDripstone
	f	F	c	chanceOfDirectionalSpread
	f	F	d	chanceOfSpreadRadius2
	f	F	e	chanceOfSpreadRadius3
c	dfk	net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	m	(F)V	<init>	<init>
		p	1		probability
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldfk;)Ljava/lang/Float;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	k	CODEC
	f	F	l	probability
c	dfl	net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	m	(Lhc;Lhc;)V	<init>	<init>
		p	1		featureTrue
		p	2		featureFalse
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldfl;)Lhc;	a	lambda$static$1
		p	0		config
	m	(Ldfl;)Lhc;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhc;	b	featureTrue
	f	Lhc;	c	featureFalse
c	dfm	net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	m	(Ljava/util/List;Lhc;)V	<init>	<init>
		p	1		features
		p	2		defaultFeature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldeq;)Ljava/util/stream/Stream;	a	lambda$getFeatures$3
		p	0		entry
	m	(Ldfm;)Lhc;	a	lambda$static$1
		p	0		config
	m	(Ldfm;)Ljava/util/List;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	Lhc;	c	defaultFeature
c	dfn	net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	m	()I	a	tries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	xzSpread
	m	()I	c	ySpread
	m	()Lhc;	d	feature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	tries
	f	I	c	xzSpread
	f	I	d	ySpread
	f	Lhc;	e	feature
c	dfo	net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	m	(Lcur;Lcur;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		targets
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldfo;)Ljava/util/List;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
c	dfp	net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	m	(Lcur;Lcur;Layr;)V	<init>	<init>
		p	1		target
		p	2		state
		p	3		radius
	m	()Layr;	a	radius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldfp;)Layr;	a	lambda$static$2
		p	0		config
	m	(Ldfp;)Lcur;	b	lambda$static$1
		p	0		config
	m	(Ldfp;)Lcur;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcur;	b	targetState
	f	Lcur;	c	replaceState
	f	Layr;	d	radius
c	dfq	net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	m	(Lhc;IILakh;Ldgz;IIIILdgz;IILdaz;)V	<init>	<init>
		p	1		feature
		p	2		requiredVerticalSpaceForTree
		p	3		rootRadius
		p	4		rootReplaceable
		p	5		rootStateProvider
		p	6		rootPlacementAttempts
		p	7		maxRootColumnHeight
		p	8		hangingRootRadius
		p	9		hangingRootVerticalSpan
		p	10		hangingRootStateProvider
		p	11		hangingRootPlacementAttempts
		p	12		allowedVerticalWaterForTree
		p	13		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Ldfq;)Ldaz;	a	lambda$static$12
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	b	lambda$static$11
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Ldfq;)Ldgz;	d	lambda$static$9
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	e	lambda$static$8
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	f	lambda$static$7
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	g	lambda$static$6
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	h	lambda$static$5
		p	0		config
	m	(Ldfq;)Ldgz;	i	lambda$static$4
		p	0		config
	m	(Ldfq;)Lakh;	j	lambda$static$3
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	k	lambda$static$2
		p	0		config
	m	(Ldfq;)Ljava/lang/Integer;	l	lambda$static$1
		p	0		config
	m	(Ldfq;)Lhc;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhc;	b	treeFeature
	f	I	c	requiredVerticalSpaceForTree
	f	I	d	rootRadius
	f	Lakh;	e	rootReplaceable
	f	Ldgz;	f	rootStateProvider
	f	I	g	rootPlacementAttempts
	f	I	h	rootColumnMaxHeight
	f	I	i	hangingRootRadius
	f	I	j	hangingRootsVerticalSpan
	f	Ldgz;	k	hangingRootStateProvider
	f	I	l	hangingRootPlacementAttempts
	f	I	n	allowedVerticalWaterForTree
	f	Ldaz;	o	allowedTreePosition
c	dfr	net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	m	()I	a	chargeCount
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	amountPerCharge
	m	()I	c	spreadAttempts
	m	()I	d	growthRounds
	m	()I	f	spreadRounds
	m	()Layr;	g	extraRareGrowths
	m	()F	h	catalystChance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	chargeCount
	f	I	c	amountPerCharge
	f	I	d	spreadAttempts
	f	I	e	growthRounds
	f	I	f	spreadRounds
	f	Layr;	g	extraRareGrowths
	f	F	h	catalystChance
c	dfs	net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	m	(Ldgz;)V	<init>	<init>
		p	1		toPlace
	m	()Ldgz;	a	toPlace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldfs;)Ldgz;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	toPlace
c	dft	net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	m	(Lhe;)V	<init>	<init>
		p	1		features
	m	(Ldft;)Lhe;	a	lambda$static$0
		p	0		config
	m	(Lhc;)Ljava/util/stream/Stream;	a	lambda$getFeatures$1
		p	0		feature
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	features
c	dfu	net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	m	(ZLjava/util/List;Lgt;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	(ZLjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	()Z	a	isCrystalInvulnerable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldfu;)Ljava/util/Optional;	a	lambda$static$2
		p	0		config
	m	()Ljava/util/List;	b	getSpikes
	m	(Ldfu;)Ljava/util/List;	b	lambda$static$1
		p	0		config
	m	()Lgt;	c	getCrystalBeamTarget
	m	(Ldfu;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	crystalInvulnerable
	f	Ljava/util/List;	c	spikes
	f	Lgt;	d	crystalBeamTarget
c	dfv	net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	m	(Ldoy;ZIILhe;)V	<init>	<init>
		p	1		state
		p	2		requiresBlockBelow
		p	3		rockCount
		p	4		holeCount
		p	5		validBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldfv;)Lhe;	a	lambda$static$4
		p	0		config
	m	(Ldfv;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		config
	m	(Ldfv;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		config
	m	(Ldfv;)Ljava/lang/Boolean;	d	lambda$static$1
		p	0		config
	m	(Ldfv;)Ldoy;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoy;	b	state
	f	Z	c	requiresBlockBelow
	f	I	d	rockCount
	f	I	e	holeCount
	f	Lhe;	f	validBlocks
c	dfw	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	m	(Ldgz;Ldib;Ldgz;Ldgl;Ljava/util/Optional;Ldgz;Ldgb;Ljava/util/List;ZZ)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		dirtProvider
		p	7		minimumSize
		p	8		decorators
		p	9		ignoreVines
		p	10		forceDirt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Ldfw;)Ljava/lang/Boolean;	a	lambda$static$9
		p	0		config
	m	(Ldfw;)Ljava/lang/Boolean;	b	lambda$static$8
		p	0		config
	m	(Ldfw;)Ljava/util/List;	c	lambda$static$7
		p	0		config
	m	(Ldfw;)Ldgb;	d	lambda$static$6
		p	0		config
	m	(Ldfw;)Ldgz;	e	lambda$static$5
		p	0		config
	m	(Ldfw;)Ljava/util/Optional;	f	lambda$static$4
		p	0		config
	m	(Ldfw;)Ldgl;	g	lambda$static$3
		p	0		config
	m	(Ldfw;)Ldgz;	h	lambda$static$2
		p	0		config
	m	(Ldfw;)Ldib;	i	lambda$static$1
		p	0		config
	m	(Ldfw;)Ldgz;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	trunkProvider
	f	Ldgz;	c	dirtProvider
	f	Ldib;	d	trunkPlacer
	f	Ldgz;	e	foliageProvider
	f	Ldgl;	f	foliagePlacer
	f	Ljava/util/Optional;	g	rootPlacer
	f	Ldgb;	h	minimumSize
	f	Ljava/util/List;	i	decorators
	f	Z	j	ignoreVines
	f	Z	k	forceDirt
c	dfw$a	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	m	(Ldgz;Ldib;Ldgz;Ldgl;Ldgb;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		minimumSize
	m	(Ldgz;Ldib;Ldgz;Ldgl;Ljava/util/Optional;Ldgb;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		minimumSize
	m	()Ldfw$a;	a	ignoreVines
	m	(Ldgz;)Ldfw$a;	a	dirt
		p	1		dirtProvider
	m	(Ljava/util/List;)Ldfw$a;	a	decorators
		p	1		decorators
	m	()Ldfw$a;	b	forceDirt
	m	()Ldfw;	c	build
	f	Ldgz;	a	trunkProvider
	f	Ldgz;	b	foliageProvider
	f	Ldib;	c	trunkPlacer
	f	Ldgl;	d	foliagePlacer
	f	Ljava/util/Optional;	e	rootPlacer
	f	Ldgz;	f	dirtProvider
	f	Ldgb;	g	minimumSize
	f	Ljava/util/List;	h	decorators
	f	Z	i	ignoreVines
	f	Z	j	forceDirt
c	dfx	net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	m	()I	a	spreadWidth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	spreadHeight
	m	()I	c	maxHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spreadWidth
	f	I	c	spreadHeight
	f	I	d	maxHeight
c	dfy	net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	m	(IIF)V	<init>	<init>
		p	1		minDistanceBelowSurface
		p	2		floorSearchRange
		p	3		placementProbabilityPerValidPosition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldfy;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Ldfy;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldfy;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorSearchRange
	f	I	c	placementRadiusAroundFloor
	f	F	d	placementProbabilityPerValidPosition
c	dfz	net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	m	(Lakh;Ldgz;Lhc;Ldja;Layr;FIFLayr;F)V	<init>	<init>
		p	1		replaceable
		p	2		groundState
		p	3		vegetationFeature
		p	4		surface
		p	5		depth
		p	6		extraBottomBlockChance
		p	7		verticalRange
		p	8		vegetationChance
		p	9		horizontalRadius
		p	10		extraEdgeColumnChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Ldfz;)Ljava/lang/Float;	a	lambda$static$9
		p	0		config
	m	(Ldfz;)Layr;	b	lambda$static$8
		p	0		config
	m	(Ldfz;)Ljava/lang/Float;	c	lambda$static$7
		p	0		config
	m	(Ldfz;)Ljava/lang/Integer;	d	lambda$static$6
		p	0		config
	m	(Ldfz;)Ljava/lang/Float;	e	lambda$static$5
		p	0		config
	m	(Ldfz;)Layr;	f	lambda$static$4
		p	0		config
	m	(Ldfz;)Ldja;	g	lambda$static$3
		p	0		config
	m	(Ldfz;)Lhc;	h	lambda$static$2
		p	0		config
	m	(Ldfz;)Ldgz;	i	lambda$static$1
		p	0		config
	m	(Ldfz;)Lakh;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lakh;	b	replaceable
	f	Ldgz;	c	groundState
	f	Lhc;	d	vegetationFeature
	f	Ldja;	e	surface
	f	Layr;	f	depth
	f	F	g	extraBottomBlockChance
	f	I	h	verticalRange
	f	F	i	vegetationChance
	f	Layr;	j	xzRadius
	f	F	k	extraEdgeColumnChance
c	dga	net/minecraft/world/level/levelgen/feature/configurations/package-info
c	dgb	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	m	(Ljava/util/OptionalInt;)V	<init>	<init>
		p	1		minClippedHeight
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	minClippedHeightCodec
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Ldgb;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$2
	m	(Ljava/util/Optional;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$0
	m	(Ljava/util/OptionalInt;)Ljava/util/Optional;	a	lambda$minClippedHeightCodec$1
	m	()Ldgc;	b	type
	m	()Ljava/util/OptionalInt;	c	minClippedHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WIDTH
	f	Ljava/util/OptionalInt;	c	minClippedHeight
c	dgc	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldgc;	a	register
		p	0		id
		p	1		codec
	f	Ldgc;	a	TWO_LAYERS_FEATURE_SIZE
	f	Ldgc;	b	THREE_LAYERS_FEATURE_SIZE
	f	Lcom/mojang/serialization/Codec;	c	codec
c	dgd	net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	m	(IIIIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		upperLimit
		p	3		lowerSize
		p	4		middleSize
		p	5		upperSize
		p	6		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldgd;)Ljava/lang/Integer;	a	lambda$static$4
	m	()Ldgc;	b	type
	m	(Ldgd;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Ldgd;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Ldgd;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Ldgd;)Ljava/lang/Integer;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	upperLimit
	f	I	g	lowerSize
	f	I	h	middleSize
	f	I	i	upperSize
c	dge	net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	m	(III)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
	m	(IIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
		p	4		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldge;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldgc;	b	type
	m	(Ldge;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldge;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	lowerSize
	f	I	g	upperSize
c	dgf	net/minecraft/world/level/levelgen/feature/featuresize/package-info
c	dgg	net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	m	(Layr;Layr;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dgh	net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	m	(Layr;Layr;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	blobParts
		p	0		builder
	m	(Ldgh;)Ljava/lang/Integer;	a	lambda$blobParts$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	dgi	net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	m	(Layr;Layr;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dgj	net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	m	(Layr;Layr;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lalu;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dgk	net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	m	(Layr;Layr;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dgl	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	m	(Layr;Layr;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldgm;	a	type
	m	(Lalu;)I	a	offset
		p	1		random
	m	(Lalu;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;II)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;Lgt;)V	a	tryPlaceLeaf
		p	0		world
		p	1		replacer
		p	2		random
		p	3		config
		p	4		pos
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;Lgt;IIZ)V	a	placeLeavesRow
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		centerPos
		p	6		radius
		p	7		y
		p	8		giantTrunk
	m	(Ldgl;)Layr;	a	lambda$foliagePlacerParts$1
		p	0		placer
	m	(Ldoy;)Z	a	lambda$tryPlaceLeaf$2
		p	0		fluidState
	m	(Lalu;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2;	b	foliagePlacerParts
	m	(Ldgl;)Layr;	b	lambda$foliagePlacerParts$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Layr;	e	radius
	f	Layr;	f	offset
c	dgl$a	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	m	(Lgt;IZ)V	<init>	<init>
		p	1		center
		p	2		foliageRadius
		p	3		giantTrunk
	m	()Lgt;	a	pos
	m	()I	b	radiusOffset
	m	()Z	c	doubleTrunk
	f	Lgt;	a	pos
	f	I	b	radiusOffset
	f	Z	c	doubleTrunk
c	dgm	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldgm;	a	register
		p	0		id
		p	1		codec
	f	Ldgm;	a	BLOB_FOLIAGE_PLACER
	f	Ldgm;	b	SPRUCE_FOLIAGE_PLACER
	f	Ldgm;	c	PINE_FOLIAGE_PLACER
	f	Ldgm;	d	ACACIA_FOLIAGE_PLACER
	f	Ldgm;	e	BUSH_FOLIAGE_PLACER
	f	Ldgm;	f	FANCY_FOLIAGE_PLACER
	f	Ldgm;	g	MEGA_JUNGLE_FOLIAGE_PLACER
	f	Ldgm;	h	MEGA_PINE_FOLIAGE_PLACER
	f	Ldgm;	i	DARK_OAK_FOLIAGE_PLACER
	f	Ldgm;	j	RANDOM_SPREAD_FOLIAGE_PLACER
	f	Lcom/mojang/serialization/Codec;	k	codec
c	dgn	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	m	(Layr;Layr;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldgn;)Ljava/lang/Integer;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	dgo	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	m	(Layr;Layr;Layr;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		crownHeight
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldgo;)Layr;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	crownHeight
c	dgp	net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	m	(Layr;Layr;Layr;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldgm;	a	type
	m	(Lalu;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldgp;)Layr;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	height
c	dgq	net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	m	(Layr;Layr;Layr;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		foliageHeight
		p	4		leafPlacementAttempts
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldgq;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		placer
	m	(Ldgq;)Layr;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	foliageHeight
	f	I	c	leafPlacementAttempts
c	dgr	net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	m	(Layr;Layr;Layr;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		trunkHeight
	m	()Ldgm;	a	type
	m	(Lalu;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lalu;ILdfw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ldfw;ILdgl$a;III)V	a	createFoliage
		p	1		world
		p	2		replacer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldgr;)Layr;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	trunkHeight
c	dgs	net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
c	dgt	net/minecraft/world/level/levelgen/feature/package-info
c	dgu	net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	m	()Ldgz;	a	aboveRootProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldgu;)Ljava/lang/Float;	a	lambda$static$1
		p	0		aboveRootPlacement
	m	()F	b	aboveRootPlacementChance
	m	(Ldgu;)Ldgz;	b	lambda$static$0
		p	0		aboveRootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	aboveRootProvider
	f	F	c	aboveRootPlacementChance
c	dgv	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	m	()Lhe;	a	canGrowThrough
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldgv;)Ljava/lang/Float;	a	lambda$static$5
		p	0		rootPlacement
	m	()Lhe;	b	muddyRootsIn
	m	(Ldgv;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		rootPlacement
	m	()Ldgz;	c	muddyRootsProvider
	m	(Ldgv;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		rootPlacement
	m	()I	d	maxRootWidth
	m	(Ldgv;)Ldgz;	d	lambda$static$2
		p	0		rootPlacement
	m	()I	e	maxRootLength
	m	(Ldgv;)Lhe;	e	lambda$static$1
		p	0		rootPlacement
	m	()F	f	randomSkewChance
	m	(Ldgv;)Lhe;	f	lambda$static$0
		p	0		rootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	canGrowThrough
	f	Lhe;	c	muddyRootsIn
	f	Ldgz;	d	muddyRootsProvider
	f	I	e	maxRootWidth
	f	I	f	maxRootLength
	f	F	g	randomSkewChance
c	dgw	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	m	(Layr;Ldgz;Ljava/util/Optional;Ldgv;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
		p	4		mangroveRootPlacement
	m	()Ldgy;	a	type
	m	(Lcgg;Lalu;Lgt;Lgy;Lgt;Ljava/util/List;I)Z	a	simulateRoots
		p	1		world
		p	2		random
		p	3		pos
		p	4		direction
		p	5		origin
		p	6		offshootPositions
		p	7		rootLength
	m	(Lcgg;Lgt;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Ldfw;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Lgt;Ldfw;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Lcur;)Z	a	lambda$placeRoot$3
		p	1		state
	m	(Ldgw;)Ldgv;	a	lambda$static$0
		p	0		rootPlacer
	m	(Lgt;Lgy;Lalu;Lgt;)Ljava/util/List;	a	potentialRootPositions
		p	1		pos
		p	2		direction
		p	3		random
		p	4		origin
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lcur;)Z	b	lambda$canPlaceRoot$2
		p	1		state
	f	I	a	ROOT_WIDTH_LIMIT
	f	I	b	ROOT_LENGTH_LIMIT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldgv;	h	mangroveRootPlacement
c	dgx	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	m	(Layr;Ldgz;Ljava/util/Optional;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
	m	()Ldgy;	a	type
	m	(Lcgg;Lgt;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Lcgg;Lgt;Lcur;)Lcur;	a	getPotentiallyWaterloggedState
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Ldfw;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Lgt;Ldfw;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	rootPlacerParts
	m	(Ldgx;)Ljava/util/Optional;	a	lambda$rootPlacerParts$2
		p	0		rootPlacer
	m	(Ldoy;)Z	a	lambda$getPotentiallyWaterloggedState$3
		p	0		fluidState
	m	(Lgt;Lalu;)Lgt;	a	getTrunkOrigin
		p	1		pos
		p	2		random
	m	(Ldgx;)Ldgz;	b	lambda$rootPlacerParts$1
		p	0		rootPlacer
	m	(Ldgx;)Layr;	c	lambda$rootPlacerParts$0
		p	0		rootPlacer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Layr;	e	trunkOffsetY
	f	Ldgz;	f	rootProvider
	f	Ljava/util/Optional;	g	aboveRootPlacement
c	dgy	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldgy;	a	register
		p	0		id
		p	1		codec
	f	Ldgy;	a	MANGROVE_ROOT_PLACER
	f	Lcom/mojang/serialization/Codec;	b	codec
c	dgz	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Lciw;)Ldhi;	a	simple
		p	0		block
	m	(Lcur;)Ldhi;	a	simple
		p	0		state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dha	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldha;	a	register
		p	0		id
		p	1		codec
	f	Ldha;	a	SIMPLE_STATE_PROVIDER
	f	Ldha;	b	WEIGHTED_STATE_PROVIDER
	f	Ldha;	c	NOISE_THRESHOLD_PROVIDER
	f	Ldha;	d	NOISE_PROVIDER
	f	Ldha;	e	DUAL_NOISE_PROVIDER
	f	Ldha;	f	ROTATED_BLOCK_PROVIDER
	f	Ldha;	g	RANDOMIZED_INT_STATE_PROVIDER
	f	Lcom/mojang/serialization/Codec;	h	codec
c	dhb	net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	m	(Lali;Ldod$a;FJLdod$a;FLjava/util/List;)V	<init>	<init>
		p	1		variety
		p	2		slowNoiseParameters
		p	3		slowScale
		p	4		seed
		p	6		noiseParameters
		p	7		scale
		p	8		states
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Ldhb;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lgt;)D	a	getSlowNoiseValue
		p	1		pos
	m	(Ldhb;)Ldod$a;	b	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$3
	m	(Ldhb;)Lali;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lali;	i	variety
	f	Ldod$a;	j	slowNoiseParameters
	f	F	k	slowScale
	f	Ldod;	l	slowNoise
c	dhc	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	m	(JLdod$a;F)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	noiseCodec
		p	0		instance
	m	(Ldhc;)Ljava/lang/Float;	a	lambda$noiseCodec$2
	m	(Lgt;D)D	a	getNoiseValue
		p	1		pos
		p	2		scale
	m	(Ldhc;)Ldod$a;	b	lambda$noiseCodec$1
	m	(Ldhc;)Ljava/lang/Long;	c	lambda$noiseCodec$0
	f	J	c	seed
	f	Ldod$a;	d	parameters
	f	F	e	scale
	f	Ldod;	f	noise
c	dhd	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	m	(JLdod$a;FLjava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		states
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Ldhd;)Ljava/util/List;	a	lambda$noiseProviderCodec$0
	m	(Ljava/util/List;D)Lcur;	a	getRandomState
		p	1		states
		p	2		value
	m	(Ljava/util/List;Lgt;D)Lcur;	a	getRandomState
		p	1		states
		p	2		pos
		p	3		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	noiseProviderCodec
		p	0		instance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/util/List;	h	states
c	dhe	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	m	(JLdod$a;FFFLcur;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		threshold
		p	6		highChance
		p	7		defaultState
		p	8		lowStates
		p	9		highStates
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Ldhe;)Ljava/util/List;	a	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Ldhe;)Ljava/util/List;	b	lambda$static$3
	m	(Ldhe;)Lcur;	c	lambda$static$2
	m	(Ldhe;)Ljava/lang/Float;	d	lambda$static$1
	m	(Ldhe;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	g	threshold
	f	F	h	highChance
	f	Lcur;	i	defaultState
	f	Ljava/util/List;	j	lowStates
	f	Ljava/util/List;	k	highStates
c	dhf	net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	m	(Ldgz;Lcvr;Layr;)V	<init>	<init>
		p	1		source
		p	2		property
		p	3		values
	m	(Ldgz;Ljava/lang/String;Layr;)V	<init>	<init>
		p	1		source
		p	2		propertyName
		p	3		values
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcur;Ljava/lang/String;)Lcvr;	a	findProperty
		p	0		state
		p	1		propertyName
	m	(Lcvu;)Lcvr;	a	lambda$findProperty$6
		p	0		property
	m	(Ldhf;)Layr;	a	lambda$static$2
	m	(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$findProperty$7
	m	(Ljava/lang/String;Lcvu;)Z	a	lambda$findProperty$4
		p	1		property
	m	(Lcvu;)Z	b	lambda$findProperty$5
		p	0		property
	m	(Ldhf;)Ljava/lang/String;	b	lambda$static$1
	m	(Ldhf;)Ldgz;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldgz;	c	source
	f	Ljava/lang/String;	d	propertyName
	f	Lcvr;	e	property
	f	Layr;	f	values
c	dhg	net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	m	(Lciw;)V	<init>	<init>
		p	1		block
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Ldhg;)Lciw;	a	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lciw;	c	block
c	dhh	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	m	()Ldgz;	a	fallback
	m	(Lcgs;Lalu;Lgt;)Lcur;	a	getState
		p	1		world
		p	2		random
		p	3		pos
	m	(Lciw;)Ldhh;	a	simple
		p	0		block
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldgz;)Ldhh;	a	simple
		p	0		stateProvider
	m	()Ljava/util/List;	b	rules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	fallback
	f	Ljava/util/List;	c	rules
c	dhh$a	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule
	m	()Ldaz;	a	ifTrue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldgz;	b	then
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldaz;	b	ifTrue
	f	Ldgz;	c	then
c	dhi	net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	m	(Lcur;)V	<init>	<init>
		p	1		state
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Ldhi;)Lcur;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcur;	c	state
c	dhj	net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	m	(Laxw$a;)V	<init>	<init>
		p	1		states
	m	(Laxw;)V	<init>	<init>
		p	1		states
	m	()Ldha;	a	type
	m	(Lalu;Lgt;)Lcur;	a	getState
		p	1		random
		p	2		pos
	m	(Laxw;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		states
	m	(Ldhj;)Laxw;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laxw;	c	weightedList
c	dhk	net/minecraft/world/level/levelgen/feature/stateproviders/package-info
c	dhl	net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	m	(Ldgz;)V	<init>	<init>
		p	1		provider
	m	()Ldhr;	a	type
	m	(ILgt;)Z	a	lambda$place$1
		p	1		pos
	m	(Ldhl;)Ldgz;	a	lambda$static$0
		p	0		decorator
	m	(Ldhq$a;)V	a	place
		p	1		generator
	m	(Ldhq$a;Lgt;)V	a	placeCircle
		p	1		generator
		p	2		origin
	m	(Ldhq$a;Lgt;)V	b	placeBlockAt
		p	1		generator
		p	2		origin
	m	(Ldhq$a;Lgt;)V	c	lambda$place$2
		p	2		pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz;	b	provider
c	dhm	net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	m	(FIILdgz;ILjava/util/List;)V	<init>	<init>
		p	1		probability
		p	2		exclusionRadiusXZ
		p	3		exclusionRadiusY
		p	4		blockProvider
		p	5		requiredEmptyBlocks
		p	6		directions
	m	()Ldhr;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldhm;)Ljava/util/List;	a	lambda$static$5
		p	0		treeDecorator
	m	(Ldhq$a;)V	a	place
		p	1		generator
	m	(Ldhq$a;Lgt;Lgy;)Z	a	hasRequiredEmptyBlocks
		p	1		generator
		p	2		pos
		p	3		direction
	m	(Ldhm;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		treeDecorator
	m	(Ldhm;)Ldgz;	c	lambda$static$3
		p	0		treeDecorator
	m	(Ldhm;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		treeDecorator
	m	(Ldhm;)Ljava/lang/Integer;	e	lambda$static$1
		p	0		treeDecorator
	m	(Ldhm;)Ljava/lang/Float;	f	lambda$static$0
		p	0		treeDecorator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
	f	I	c	exclusionRadiusXZ
	f	I	d	exclusionRadiusY
	f	Ldgz;	e	blockProvider
	f	I	f	requiredEmptyBlocks
	f	Ljava/util/List;	g	directions
c	dhn	net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldhr;	a	type
	m	(I)[Lgy;	a	lambda$static$2
	m	(ILgt;)Z	a	lambda$place$3
		p	1		pos
	m	(Lalu;Lcsi;)V	a	lambda$place$6
		p	1		blockEntity
	m	(Ldhn;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Ldhq$a;)V	a	place
		p	1		generator
	m	(Ldhq$a;Lgt;)Z	a	lambda$place$5
		p	1		pos
	m	(Lgt;)Ljava/util/stream/Stream;	a	lambda$place$4
		p	0		pos
	m	(Lgy;)Z	a	lambda$static$1
		p	0		direction
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgy;	b	WORLDGEN_FACING
	f	[Lgy;	c	SPAWN_DIRECTIONS
	f	F	d	probability
c	dho	net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldhr;	a	type
	m	(ILgt;)Z	a	lambda$place$1
		p	1		pos
	m	(Lalu;Ldhq$a;Lgt;)V	a	lambda$place$2
		p	2		pos
	m	(Ldho;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Ldhq$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	dhp	net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldhr;	a	type
	m	(Lalu;Ldhq$a;Lgt;)V	a	lambda$place$1
		p	3		pos
	m	(Ldhp;)Ljava/lang/Float;	a	lambda$static$0
		p	0		treeDecorator
	m	(Ldhq$a;)V	a	place
		p	1		generator
	m	(Lgt;Lcvi;Ldhq$a;)V	a	addHangingVine
		p	0		pos
		p	1		faceProperty
		p	2		generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	dhq	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	m	()Ldhr;	a	type
	m	(Ldhq$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/Codec;	h	CODEC
c	dhq$a	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		world
		p	2		replacer
		p	3		random
		p	4		logPositions
		p	5		leavesPositions
		p	6		rootPositions
	m	()Lcgg;	a	level
	m	(Lgt;)Z	a	isAir
		p	1		poa
	m	(Lgt;Lcur;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Lgt;Lcvi;)V	a	placeVine
		p	1		pos
		p	2		faceProperty
	m	()Lalu;	b	random
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	logs
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	leaves
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	roots
	f	Lcgg;	a	level
	f	Ljava/util/function/BiConsumer;	b	decorationSetter
	f	Lalu;	c	random
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	logs
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	leaves
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	roots
c	dhr	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldhr;	a	register
		p	0		id
		p	1		codec
	f	Ldhr;	a	TRUNK_VINE
	f	Ldhr;	b	LEAVE_VINE
	f	Ldhr;	c	COCOA
	f	Ldhr;	d	BEEHIVE
	f	Ldhr;	e	ALTER_GROUND
	f	Ldhr;	f	ATTACHED_TO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	codec
c	dhs	net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	m	()Ldhr;	a	type
	m	(Lalu;Ldhq$a;Lgt;)V	a	lambda$place$1
		p	2		pos
	m	(Ldhq$a;)V	a	place
		p	1		generator
	m	()Ldhs;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhs;	b	INSTANCE
c	dht	net/minecraft/world/level/levelgen/feature/treedecorators/package-info
c	dhu	net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	m	(IIIILayr;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		minHeightForLeaves
		p	5		bendLength
	m	()Ldic;	a	type
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Ldhu;)Layr;	a	lambda$static$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Ldhu;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minHeightForLeaves
	f	Layr;	h	bendLength
c	dhv	net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldic;	a	type
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dhw	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldic;	a	type
	m	(II)Z	a	trimBranches
		p	1		treeHeight
		p	2		height
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ljava/util/List;Ldfw;)V	a	makeBranches
		p	1		world
		p	2		replacer
		p	4		treeHeight
		p	5		startPos
		p	6		branchPositions
		p	7		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Lgt;ZLdfw;)Z	a	makeLimb
		p	4		startPos
		p	5		branchPos
		p	6		make
		p	7		config
	m	(Lgt;)I	a	getSteps
		p	1		offset
	m	(Lgt;Lgt;)Lgy$a;	a	getLogAxis
		p	1		branchStart
		p	2		branchEnd
	m	(Lgt;Lgt;Lcur;)Lcur;	a	lambda$makeLimb$1
		p	3		state
	m	(II)F	b	treeShape
		p	0		treeHeight
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	TRUNK_HEIGHT_SCALE
	f	D	h	CLUSTER_DENSITY_MAGIC
	f	D	i	BRANCH_SLOPE
	f	D	j	BRANCH_LENGTH_MAGIC
c	dhw$a	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	m	(Lgt;I)V	<init>	<init>
		p	1		pos
		p	2		width
	m	()I	a	getBranchBase
	f	Ldgl$a;	a	attachment
	f	I	b	branchBase
c	dhx	net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldic;	a	type
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dhy	net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldic;	a	type
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt$a;Ldfw;Lgt;III)V	a	placeLogIfFreeWithOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dhz	net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldic;	a	type
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dia	net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldic;	a	type
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dib	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldic;	a	type
	m	(Lalu;)I	a	getTreeHeight
		p	1		random
	m	(Lcgg;Lgt;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt$a;Ldfw;)V	a	placeLogIfFree
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Ldfw;)V	a	setDirtAt
		p	0		world
		p	1		replacer
		p	2		random
		p	3		pos
		p	4		config
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Ldfw;Ljava/util/function/Function;)Z	a	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	trunkPlacerParts
		p	0		instance
	m	(Lcur;)Z	a	lambda$isFree$4
		p	0		state
	m	(Ldib;)Ljava/lang/Integer;	a	lambda$trunkPlacerParts$2
		p	0		placer
	m	(Lcgg;Lgt;)Z	b	isFree
		p	1		world
		p	2		pos
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;Lgt;Ldfw;)Z	b	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcur;)Z	b	lambda$isDirt$3
		p	0		state
	m	(Ldib;)Ljava/lang/Integer;	b	lambda$trunkPlacerParts$1
		p	0		placer
	m	(Lcgg;Lgt;)Z	c	isDirt
		p	0		world
		p	1		pos
	m	(Ldib;)Ljava/lang/Integer;	c	lambda$trunkPlacerParts$0
		p	0		placer
	f	I	a	MAX_BASE_HEIGHT
	f	I	b	MAX_RAND
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	MAX_HEIGHT
	f	I	e	baseHeight
	f	I	f	heightRandA
	f	I	g	heightRandB
c	dic	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldic;	a	register
		p	0		id
		p	1		codec
	f	Ldic;	a	STRAIGHT_TRUNK_PLACER
	f	Ldic;	b	FORKING_TRUNK_PLACER
	f	Ldic;	c	GIANT_TRUNK_PLACER
	f	Ldic;	d	MEGA_JUNGLE_TRUNK_PLACER
	f	Ldic;	e	DARK_OAK_TRUNK_PLACER
	f	Ldic;	f	FANCY_TRUNK_PLACER
	f	Ldic;	g	BENDING_TRUNK_PLACER
	f	Ldic;	h	UPWARDS_BRANCHING_TRUNK_PLACER
	f	Lcom/mojang/serialization/Codec;	i	codec
c	did	net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	m	(IIILayr;FLayr;Lhe;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		extraBranchSteps
		p	5		placeBranchPerLogProbability
		p	6		extraBranchLength
		p	7		canGrowThrough
	m	()Ldic;	a	type
	m	(Lcgg;Lgt;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILdfw;Ljava/util/List;Lgt$a;ILgy;II)V	a	placeBranch
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		config
		p	6		nodes
		p	7		pos
		p	8		yOffset
		p	9		direction
		p	10		length
		p	11		steps
	m	(Lcgg;Ljava/util/function/BiConsumer;Lalu;ILgt;Ldfw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcur;)Z	a	lambda$validTreePos$5
		p	1		state
	m	(Ldid;)Lhe;	a	lambda$static$3
		p	0		trunkPlacer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Ldid;)Layr;	b	lambda$static$2
		p	0		trunkPlacer
	m	(Ldid;)Ljava/lang/Float;	c	lambda$static$1
		p	0		trunkPlacer
	m	(Ldid;)Layr;	d	lambda$static$0
		p	0		trunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	b	extraBranchSteps
	f	F	h	placeBranchPerLogProbability
	f	Layr;	i	extraBranchLength
	f	Lhe;	j	canGrowThrough
c	die	net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
c	dif	net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	m	(ILciw;)V	<init>	<init>
		p	1		thickness
		p	2		block
	m	()I	a	getHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldif;)Lciw;	a	lambda$static$0
	m	()Lcur;	b	getBlockState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lciw;	b	block
	f	I	c	height
c	dig	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	m	()Lhc;	a	displayItem
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldig;)Ldii;	a	lambda$static$1
		p	0		preset
	m	()Ldii;	b	settings
	m	(Ldig;)Lhc;	b	lambda$static$0
		p	0		preset
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhc;	c	displayItem
	f	Ldii;	d	settings
c	dih	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	m	(Lhm;)Lhc;	a	bootstrap
	m	(Ljava/lang/String;)Laai;	a	register
		p	0		id
	f	Laai;	a	CLASSIC_FLAT
	f	Laai;	b	TUNNELERS_DREAM
	f	Laai;	c	WATER_WORLD
	f	Laai;	d	OVERWORLD
	f	Laai;	e	SNOWY_KINGDOM
	f	Laai;	f	BOTTOMLESS_PIT
	f	Laai;	g	DESERT
	f	Laai;	h	REDSTONE_READY
	f	Laai;	i	THE_VOID
c	dih$a	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap
	m	()Lhc;	a	run
	m	(Laai;)Ljava/util/stream/Stream;	a	lambda$register$0
		p	1		structureSet
	m	(Laai;Lcfz;Laai;Ljava/util/Set;ZZ[Ldif;)Lhc;	a	register
		p	1		registryKey
		p	2		icon
		p	3		biome
		p	4		structureSets
		p	5		hasFeatures
		p	6		hasLakes
		p	7		layers
	f	Lhm;	a	presets
	f	Lhm;	b	biomes
	f	Lhm;	c	structureSets
c	dii	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	m	(Lhm;Ljava/util/Optional;Ljava/util/List;ZZLjava/util/Optional;)V	<init>	<init>
		p	1		biomeRegistry
		p	2		structureOverrides
		p	3		layers
		p	4		hasLakes
		p	5		hasFeatures
		p	6		biome
	m	(Ljava/util/Optional;Lhm;)V	<init>	<init>
		p	1		structureOverrides
		p	2		biomeRegistry
	m	()V	a	setDecoration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lcur;)Z	a	lambda$updateLayers$6
		p	0		state
	m	(Ldii;)Lcom/mojang/serialization/DataResult;	a	validateHeight
		p	0		config
	m	(Lhc;)Lcgx;	a	adjustGenerationSettings
		p	1		biomeEntry
	m	(Lhm;Lhm;)Ldii;	a	getDefault
		p	0		biomeRegistry
		p	1		structureSetRegistry
	m	(Ljava/util/List;Ljava/util/Optional;)Ldii;	a	withLayers
		p	1		layers
		p	2		structureOverrides
	m	()V	b	setAddLakes
	m	(Ldii;)Ljava/util/Optional;	b	lambda$static$4
	m	(Lhc;)V	b	setBiome
		p	1		biome
	m	()Ljava/util/Optional;	c	structureOverrides
	m	(Ldii;)Ljava/lang/Boolean;	c	lambda$static$3
	m	()Lhc;	d	getBiome
	m	(Ldii;)Ljava/lang/Boolean;	d	lambda$static$2
	m	()Ljava/util/List;	e	getLayersInfo
	m	(Ldii;)Ljava/util/Optional;	e	lambda$static$1
	m	()Ljava/util/List;	f	getLayers
	m	(Ldii;)Lhm;	f	lambda$static$0
	m	()V	g	updateLayers
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lhm;	c	biomes
	f	Ljava/util/Optional;	d	structureOverrides
	f	Ljava/util/List;	e	layersInfo
	f	Lhc;	f	biome
	f	Ljava/util/List;	g	layers
	f	Z	h	voidGen
	f	Z	i	decoration
	f	Z	j	addLakes
c	dij	net/minecraft/world/level/levelgen/flat/package-info
c	dik	net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	m	(Ldao;Ldao;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Ldin;	a	getType
	m	(Lalu;Ldaq;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldao;Ldao;I)Ldik;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Ldik;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Ldik;)Ldao;	b	lambda$static$1
		p	0		provider
	m	(Ldik;)Ldao;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldao;	d	minInclusive
	f	Ldao;	e	maxInclusive
	f	I	f	inner
c	dil	net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	m	(Ldao;)V	<init>	<init>
		p	1		offset
	m	()Ldin;	a	getType
	m	(Lalu;Ldaq;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/datafixers/util/Either;)Ldil;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldao;)Ldil;	a	of
		p	0		offset
	m	(Ldil;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		provider
	m	()Ldao;	b	getValue
	m	(Ldil;)Ldil;	b	lambda$static$2
		p	0		provider
	m	(Ldil;)Ldao;	c	lambda$static$0
		p	0		provider
	f	Ldil;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldao;	d	value
c	dim	net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	m	()Ldin;	a	getType
	m	(Lalu;Ldaq;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/datafixers/util/Either;)Ldim;	a	lambda$static$1
		p	0		either
	m	(Ldim;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Ldim;)Ldim;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	din	net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldin;	a	register
		p	0		id
		p	1		codec
	f	Ldin;	a	CONSTANT
	f	Ldin;	b	UNIFORM
	f	Ldin;	c	BIASED_TO_BOTTOM
	f	Ldin;	d	VERY_BIASED_TO_BOTTOM
	f	Ldin;	e	TRAPEZOID
	f	Ldin;	f	WEIGHTED_LIST
c	dio	net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	m	(Ldao;Ldao;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		plateau
	m	()Ldin;	a	getType
	m	(Lalu;Ldaq;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldao;Ldao;)Ldio;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Ldao;Ldao;I)Ldio;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		plateau
	m	(Ldio;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldio;)Ldao;	b	lambda$static$1
		p	0		provider
	m	(Ldio;)Ldao;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldao;	d	minInclusive
	f	Ldao;	e	maxInclusive
	f	I	f	plateau
c	dip	net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	m	(Ldao;Ldao;)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
	m	()Ldin;	a	getType
	m	(Lalu;Ldaq;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldao;Ldao;)Ldip;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Ldip;)Ldao;	a	lambda$static$1
		p	0		provider
	m	(Ldip;)Ldao;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldao;	d	minInclusive
	f	Ldao;	e	maxInclusive
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	warnedFor
c	diq	net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	m	(Ldao;Ldao;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Ldin;	a	getType
	m	(Lalu;Ldaq;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldao;Ldao;I)Ldiq;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Ldiq;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Ldiq;)Ldao;	b	lambda$static$1
		p	0		provider
	m	(Ldiq;)Ldao;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldao;	d	minInclusive
	f	Ldao;	e	maxInclusive
	f	I	f	inner
c	dir	net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	m	(Laxw;)V	<init>	<init>
		p	1		weightedList
	m	()Ldin;	a	getType
	m	(Lalu;Ldaq;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldir;)Laxw;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laxw;	b	distribution
c	dis	net/minecraft/world/level/levelgen/heightproviders/package-info
c	dit	net/minecraft/world/level/levelgen/material/MaterialRuleList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		samplers
	m	()Ljava/util/List;	a	materialRuleList
	m	(Lczn$b;)Lcur;	calculate	calculate
		p	1		pos
	f	Ljava/util/List;	a	materialRuleList
c	diu	net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	m	(Lczy;III)Lcur;	a	apply
		p	1		sampler
		p	2		x
		p	3		y
		p	4		z
c	div	net/minecraft/world/level/levelgen/material/package-info
c	diw	net/minecraft/world/level/levelgen/package-info
c	dix	net/minecraft/world/level/levelgen/placement/BiomeFilter
	m	()Ldix;	a	biome
	m	(Ldjk;Lalu;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	m	()Ljava/lang/IllegalStateException;	c	lambda$shouldPlace$1
	m	()Ldix;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldix;	c	INSTANCE
c	diy	net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	m	(Ldaz;)V	<init>	<init>
		p	1		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldaz;)Ldiy;	a	forPredicate
		p	0		predicate
	m	(Ldiy;)Ldaz;	a	lambda$static$0
	m	(Ldjk;Lalu;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldaz;	c	predicate
c	diz	net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	m	(Lczq$a;)V	<init>	<init>
		p	1		step
	m	(Lczq$a;)Ldiz;	a	forStep
		p	0		step
	m	(Ldiz;)Lczq$a;	a	lambda$static$0
		p	0		config
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lczq$a;	c	step
c	dja	net/minecraft/world/level/levelgen/placement/CaveSurface
	m	(Ljava/lang/String;ILgy;ILjava/lang/String;)V	<init>	<init>
		p	3		direction
		p	4		offset
		p	5		name
	m	()Lgy;	a	getDirection
	m	()I	b	getY
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldja;	d	$values
	f	Ldja;	a	CEILING
	f	Ldja;	b	FLOOR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lgy;	d	direction
	f	I	e	y
	f	Ljava/lang/String;	f	id
	f	[Ldja;	g	$VALUES
c	djb	net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	m	(Layr;)V	<init>	<init>
		p	1		count
	m	(I)Ldjb;	a	of
		p	0		count
	m	(Layr;)Ldjb;	a	of
		p	0		count
	m	(Lcur;)Z	a	isEmpty
		p	0		state
	m	(Ldjb;)Layr;	a	lambda$static$0
	m	(Ldjk;IIII)I	a	findOnGroundYPosition
		p	0		context
		p	1		x
		p	2		y
		p	3		z
		p	4		targetY
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	c	count
c	djc	net/minecraft/world/level/levelgen/placement/CountPlacement
	m	(Layr;)V	<init>	<init>
		p	1		count
	m	(I)Ldjc;	a	of
		p	0		count
	m	(Lalu;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Layr;)Ldjc;	a	of
		p	0		count
	m	(Ldjc;)Layr;	a	lambda$static$0
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	c	count
c	djd	net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	m	(Lgy;Ldaz;Ldaz;I)V	<init>	<init>
		p	1		direction
		p	2		targetPredicate
		p	3		allowedSearchPredicate
		p	4		maxSteps
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldjd;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Lgy;Ldaz;I)Ldjd;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		maxSteps
	m	(Lgy;Ldaz;Ldaz;I)Ldjd;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		allowedSearchPredicate
		p	3		maxSteps
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	m	(Ldjd;)Ldaz;	b	lambda$static$2
	m	(Ldjd;)Ldaz;	c	lambda$static$1
	m	(Ldjd;)Lgy;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgy;	c	directionOfSearch
	f	Ldaz;	d	targetCondition
	f	Ldaz;	e	allowedSearchCondition
	f	I	f	maxSteps
c	dje	net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	m	(Ldim;)V	<init>	<init>
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldao;Ldao;)Ldje;	a	uniform
		p	0		minOffset
		p	1		maxOffset
	m	(Ldim;)Ldje;	a	of
		p	0		height
	m	(Ldje;)Ldim;	a	lambda$static$0
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	m	(Ldao;Ldao;)Ldje;	b	triangle
		p	0		minOffset
		p	1		maxOffset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldim;	c	height
c	djf	net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	m	(Lczu$a;)V	<init>	<init>
		p	1		heightmap
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lczu$a;)Ldjf;	a	onHeightmap
		p	0		heightmap
	m	(Ldjf;)Lczu$a;	a	lambda$static$0
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lczu$a;	c	heightmap
c	djg	net/minecraft/world/level/levelgen/placement/InSquarePlacement
	m	()Ldjg;	a	spread
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	m	()Ldjg;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldjg;	c	INSTANCE
c	djh	net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	m	(IDD)V	<init>	<init>
		p	1		noiseToCountRatio
		p	2		noiseFactor
		p	4		noiseOffset
	m	(IDD)Ldjh;	a	of
		p	0		noiseToCountRatio
		p	1		noiseFactor
		p	3		noiseOffset
	m	(Lalu;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldjh;)Ljava/lang/Double;	a	lambda$static$2
	m	()Ldjn;	b	type
	m	(Ldjh;)Ljava/lang/Double;	b	lambda$static$1
	m	(Ldjh;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	noiseToCountRatio
	f	D	d	noiseFactor
	f	D	e	noiseOffset
c	dji	net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	m	(DII)V	<init>	<init>
		p	1		noiseLevel
		p	3		belowNoise
		p	4		aboveNoise
	m	(DII)Ldji;	a	of
		p	0		noiseLevel
		p	2		belowNoise
		p	3		aboveNoise
	m	(Lalu;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldji;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldjn;	b	type
	m	(Ldji;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldji;)Ljava/lang/Double;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	c	noiseLevel
	f	I	d	belowNoise
	f	I	e	aboveNoise
c	djj	net/minecraft/world/level/levelgen/placement/PlacedFeature
	m	(Lhc;Ljava/util/List;)V	<init>	<init>
		p	2		placementModifiers
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcgs;Lcwn;Lalu;Lgt;)Z	a	place
		p	1		world
		p	2		generator
		p	4		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldcj;Ldjk;Lalu;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lgt;)V	a	lambda$placeWithContext$4
	m	(Ldjj;)Ljava/util/List;	a	lambda$static$1
	m	(Ldjk;Lalu;Lgt;)Z	a	placeWithContext
		p	1		context
		p	3		pos
	m	(Ldjm;Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a	lambda$placeWithContext$3
		p	3		pos
	m	()Lhc;	b	feature
	m	(Lcgs;Lcwn;Lalu;Lgt;)Z	b	placeWithBiomeCheck
		p	1		world
		p	2		generator
		p	4		pos
	m	(Ldjj;)Lhc;	b	lambda$static$0
	m	()Ljava/util/List;	c	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_OF_LISTS_CODEC
	f	Lhc;	e	feature
	f	Ljava/util/List;	f	placement
c	djj$a	net/minecraft/world/level/levelgen/placement/PlacedFeature$test
c	djk	net/minecraft/world/level/levelgen/placement/PlacementContext
	m	(Lcgs;Lcwn;Ljava/util/Optional;)V	<init>	<init>
		p	1		world
		p	2		generator
		p	3		placedFeature
	m	(Lcfh;Lczq$a;)Lcwl;	a	getCarvingMask
		p	1		chunkPos
		p	2		carver
	m	(Lczu$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgt;)Lcur;	a	getBlockState
		p	1		pos
	m	()I	c	getMinBuildHeight
	m	()Lcgs;	d	getLevel
	m	()Ljava/util/Optional;	e	topFeature
	m	()Lcwn;	f	generator
	f	Lcgs;	a	level
	f	Lcwn;	b	generator
	f	Ljava/util/Optional;	c	topFeature
c	djl	net/minecraft/world/level/levelgen/placement/PlacementFilter
	m	(Ldjk;Lalu;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	djm	net/minecraft/world/level/levelgen/placement/PlacementModifier
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	djn	net/minecraft/world/level/levelgen/placement/PlacementModifierType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldjn;	a	register
		p	0		id
		p	1		codec
	f	Ldjn;	a	BLOCK_PREDICATE_FILTER
	f	Ldjn;	b	RARITY_FILTER
	f	Ldjn;	c	SURFACE_RELATIVE_THRESHOLD_FILTER
	f	Ldjn;	d	SURFACE_WATER_DEPTH_FILTER
	f	Ldjn;	e	BIOME_FILTER
	f	Ldjn;	f	COUNT
	f	Ldjn;	g	NOISE_BASED_COUNT
	f	Ldjn;	h	NOISE_THRESHOLD_COUNT
	f	Ldjn;	i	COUNT_ON_EVERY_LAYER
	f	Ldjn;	j	ENVIRONMENT_SCAN
	f	Ldjn;	k	HEIGHTMAP
	f	Ldjn;	l	HEIGHT_RANGE
	f	Ldjn;	m	IN_SQUARE
	f	Ldjn;	n	RANDOM_OFFSET
	f	Ldjn;	o	CARVING_MASK_PLACEMENT
c	djo	net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	m	(Layr;Layr;)V	<init>	<init>
		p	1		xzSpread
		p	2		ySpread
	m	(Layr;)Ldjo;	a	vertical
		p	0		spreadY
	m	(Layr;Layr;)Ldjo;	a	of
		p	0		spreadXz
		p	1		spreadY
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldjo;)Layr;	a	lambda$static$1
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldjn;	b	type
	m	(Layr;)Ldjo;	b	horizontal
		p	0		spreadXz
	m	(Ldjo;)Layr;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layr;	c	xzSpread
	f	Layr;	d	ySpread
c	djp	net/minecraft/world/level/levelgen/placement/RarityFilter
	m	(I)V	<init>	<init>
		p	1		chance
	m	(I)Ldjp;	a	onAverageOnceEvery
		p	0		chance
	m	(Ldjk;Lalu;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldjp;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	chance
c	djq	net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	m	(Lalu;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Lgt;I)Lgt;	a	lambda$getPositions$0
	m	(Ldjk;Lalu;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	djr	net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	m	(Lczu$a;II)V	<init>	<init>
		p	1		heightmap
		p	2		min
		p	3		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lczu$a;II)Ldjr;	a	of
		p	0		heightmap
		p	1		min
		p	2		max
	m	(Ldjk;Lalu;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldjr;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldjn;	b	type
	m	(Ldjr;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldjr;)Lczu$a;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lczu$a;	c	heightmap
	f	I	d	minInclusive
	f	I	e	maxInclusive
c	djs	net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	m	(I)V	<init>	<init>
		p	1		maxWaterDepth
	m	(I)Ldjs;	a	forMaxDepth
		p	0		maxWaterDepth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldjk;Lalu;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldjs;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Ldjn;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	maxWaterDepth
c	djt	net/minecraft/world/level/levelgen/placement/package-info
c	dju	net/minecraft/world/level/levelgen/presets/WorldPreset
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		dimensions
	m	()Ljava/util/Optional;	a	overworld
	m	(JZZ)Ldap;	a	createWorldGenSettings
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldap;)Ldap;	a	recreateWorldGenSettings
		p	1		generatorOptions
	m	(Ldju;)Lcom/mojang/serialization/DataResult;	a	requireOverworld
	m	(Lht;Laai;)V	a	lambda$createRegistry$2
		p	2		registryKey
	m	()Lcxy;	b	overworldOrThrow
	m	(Ldju;)Ljava/util/Map;	b	lambda$static$0
		p	0		preset
	m	()Lhm;	c	createRegistry
	m	()Ljava/lang/IllegalStateException;	d	lambda$overworldOrThrow$3
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/Map;	c	dimensions
c	djv	net/minecraft/world/level/levelgen/presets/WorldPresets
	m	(Ldap;)Ljava/util/Optional;	a	fromSettings
		p	0		generatorOptions
	m	(Lhm;)Lhc;	a	bootstrap
	m	(Lhn;)Ldap;	a	createNormalWorldFromPreset
		p	0		dynamicRegistryManager
	m	(Lhn;J)Ldap;	a	createNormalWorldFromPreset
		p	0		dynamicRegistryManager
		p	1		seed
	m	(Lhn;JZZ)Ldap;	a	createNormalWorldFromPreset
		p	0		dynamicRegistryManager
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
	m	(Ljava/lang/String;)Laai;	a	register
		p	0		id
	m	(Lhn;)Ldap;	b	demoSettings
		p	0		dynamicRegistryManager
	m	(Lhn;)Lcxy;	c	getNormalOverworld
		p	0		dynamicRegistryManager
	f	Laai;	a	NORMAL
	f	Laai;	b	FLAT
	f	Laai;	c	LARGE_BIOMES
	f	Laai;	d	AMPLIFIED
	f	Laai;	e	SINGLE_BIOME_SURFACE
	f	Laai;	f	DEBUG
c	djv$a	net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap
	m	()Lhc;	a	run
	m	(Laai;Lcxy;)Lhc;	a	registerCustomOverworldPreset
		p	1		key
		p	2		dimensionOptions
	m	(Lcha;Lhc;)Lcxy;	a	makeNoiseBasedOverworld
		p	1		biomeSource
		p	2		chunkGeneratorSettings
	m	(Lcwn;)Lcxy;	a	makeOverworld
		p	1		chunkGenerator
	m	(Lcxy;)Ldju;	a	createPresetWithCustomOverworld
		p	1		dimensionOptions
	f	Lhm;	a	presets
	f	Lhm;	b	dimensionTypes
	f	Lhm;	c	biomes
	f	Lhm;	d	structureSets
	f	Lhm;	e	noiseSettings
	f	Lhm;	f	noises
	f	Lhc;	g	overworldDimensionType
	f	Lhc;	h	netherDimensionType
	f	Lhc;	i	netherNoiseSettings
	f	Lcxy;	j	netherStem
	f	Lhc;	k	endDimensionType
	f	Lhc;	l	endNoiseSettings
	f	Lcxy;	m	endStem
c	djw	net/minecraft/world/level/levelgen/structure/BoundingBox
	m	(IIIIII)V	<init>	<init>
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	()Ldjw;	a	infinite
	m	(I)Ldjw;	a	inflatedBy
		p	1		offset
	m	(III)Ldjw;	a	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(IIII)Z	a	intersects
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(IIIIIIIIILgy;)Ldjw;	a	orientBox
		p	0		x
		p	1		y
		p	2		z
		p	3		offsetX
		p	4		offsetY
		p	5		offsetZ
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		facing
	m	(Ldjw;)Z	a	intersects
		p	1		other
	m	(Lgt;)Ldjw;	a	encapsulate
		p	1		pos
	m	(Lhs;)Ldjw;	a	move
		p	1		vec
	m	(Lhs;Lhs;)Ldjw;	a	fromCorners
		p	0		first
		p	1		second
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	a	encapsulatingPositions
		p	0		positions
	m	(Ljava/util/function/Consumer;)V	a	forAllCorners
		p	1		consumer
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		values
	m	([I)Ldjw;	a	lambda$static$0
		p	0		array
	m	()Lhs;	b	getLength
	m	(III)Ldjw;	b	moved
		p	1		x
		p	2		y
		p	3		z
	m	(Ldjw;)Ldjw;	b	encapsulate
		p	1		box
	m	(Lhs;)Z	b	isInside
		p	1		vec
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	b	encapsulatingBoxes
		p	0		boxes
	m	()I	c	getXSpan
	m	(Ldjw;)Ljava/util/stream/IntStream;	c	lambda$static$2
		p	0		box
	m	()I	d	getYSpan
	m	()I	e	getZSpan
	m	()Lgt;	f	getCenter
	m	()I	g	minX
	m	()I	h	minY
	m	()I	i	minZ
	m	()I	j	maxX
	m	()I	k	maxY
	m	()I	l	maxZ
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	minX
	f	I	d	minY
	f	I	e	minZ
	f	I	f	maxX
	f	I	g	maxY
	f	I	h	maxZ
c	djw$1	net/minecraft/world/level/levelgen/structure/BoundingBox$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	djx	net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	m	(Ljava/lang/String;)Laai;	a	register
		p	0		id
	f	Laai;	a	VILLAGES
	f	Laai;	b	DESERT_PYRAMIDS
	f	Laai;	c	IGLOOS
	f	Laai;	d	JUNGLE_TEMPLES
	f	Laai;	e	SWAMP_HUTS
	f	Laai;	f	PILLAGER_OUTPOSTS
	f	Laai;	g	OCEAN_MONUMENTS
	f	Laai;	h	WOODLAND_MANSIONS
	f	Laai;	i	BURIED_TREASURES
	f	Laai;	j	MINESHAFTS
	f	Laai;	k	RUINED_PORTALS
	f	Laai;	l	SHIPWRECKS
	f	Laai;	m	OCEAN_RUINS
	f	Laai;	n	NETHER_COMPLEXES
	f	Laai;	o	NETHER_FOSSILS
	f	Laai;	p	END_CITIES
	f	Laai;	q	ANCIENT_CITIES
	f	Laai;	r	STRONGHOLDS
c	djy	net/minecraft/world/level/levelgen/structure/BuiltinStructures
	m	(Ljava/lang/String;)Laai;	a	createKey
		p	0		id
	f	Laai;	A	RUINED_PORTAL_JUNGLE
	f	Laai;	B	RUINED_PORTAL_SWAMP
	f	Laai;	C	RUINED_PORTAL_MOUNTAIN
	f	Laai;	D	RUINED_PORTAL_OCEAN
	f	Laai;	E	RUINED_PORTAL_NETHER
	f	Laai;	F	ANCIENT_CITY
	f	Laai;	a	PILLAGER_OUTPOST
	f	Laai;	b	MINESHAFT
	f	Laai;	c	MINESHAFT_MESA
	f	Laai;	d	WOODLAND_MANSION
	f	Laai;	e	JUNGLE_TEMPLE
	f	Laai;	f	DESERT_PYRAMID
	f	Laai;	g	IGLOO
	f	Laai;	h	SHIPWRECK
	f	Laai;	i	SHIPWRECK_BEACHED
	f	Laai;	j	SWAMP_HUT
	f	Laai;	k	STRONGHOLD
	f	Laai;	l	OCEAN_MONUMENT
	f	Laai;	m	OCEAN_RUIN_COLD
	f	Laai;	n	OCEAN_RUIN_WARM
	f	Laai;	o	FORTRESS
	f	Laai;	p	NETHER_FOSSIL
	f	Laai;	q	END_CITY
	f	Laai;	r	BURIED_TREASURE
	f	Laai;	s	BASTION_REMNANT
	f	Laai;	t	VILLAGE_PLAINS
	f	Laai;	u	VILLAGE_DESERT
	f	Laai;	v	VILLAGE_SAVANNA
	f	Laai;	w	VILLAGE_SNOWY
	f	Laai;	x	VILLAGE_TAIGA
	f	Laai;	y	RUINED_PORTAL_STANDARD
	f	Laai;	z	RUINED_PORTAL_DESERT
c	djz	net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	m	(Ldqp;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		persistentStateManager
	m	(II)Z	a	isUnhandledStructureStart
		p	1		chunkX
		p	2		chunkZ
	m	(IILjava/lang/String;)Z	a	hasLegacyStart
		p	1		chunkX
		p	2		chunkZ
		p	3		id
	m	(J)V	a	removeIndex
	m	(Laai;Ldqp;)Ldjz;	a	getLegacyStructureHandler
		p	0		world
		p	1		persistentStateManager
	m	(Ldqp;)V	a	populateCaches
		p	1		persistentStateManager
	m	(Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	lambda$populateCaches$2
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
		p	0		map
	m	(Lpj;)Lpj;	a	updateFromLegacy
		p	1		nbt
	m	(Lpj;Lcfh;)Lpj;	a	updateStructureStart
		p	1		nbt
		p	2		pos
	m	(Ljava/util/HashMap;)V	b	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	CURRENT_TO_LEGACY_MAP
	f	Ljava/util/Map;	b	LEGACY_TO_CURRENT_MAP
	f	Ljava/util/Set;	c	OLD_STRUCTURE_REGISTRY_KEYS
	f	Z	d	hasLegacyData
	f	Ljava/util/Map;	e	dataMap
	f	Ljava/util/Map;	f	indexMap
	f	Ljava/util/List;	g	legacyKeys
	f	Ljava/util/List;	h	currentKeys
c	dka	net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	m	(Ldku;Lpj;)V	<init>	<init>
		p	1		context
		p	2		nbt
	m	(Ldnx;Ldll;Lgt;ILcoz;Ldjw;)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		poolElement
		p	3		pos
		p	4		groundLevelDelta
		p	5		rotation
		p	6		boundingBox
	m	()Lcoz;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lgt;Z)V	a	place
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		boundingBox
		p	6		pivot
		p	7		keepJigsaws
	m	(Lcom/mojang/serialization/DynamicOps;Lqc;)V	a	lambda$new$1
		p	2		junctionTag
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldlg;)V	a	addJunction
		p	1		junction
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$2
	m	()Ldll;	b	getElement
	m	()Lgt;	c	getPosition
	m	()I	d	getGroundLevelDelta
	m	()Ljava/util/List;	e	getJunctions
	m	()Ljava/lang/IllegalStateException;	l	lambda$new$0
	f	Ldll;	a	element
	f	Lgt;	b	position
	f	Lcoz;	c	rotation
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	h	groundLevelDelta
	f	Ljava/util/List;	i	junctions
	f	Ldnx;	j	structureTemplateManager
c	dkb	net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Ldkt;)V	a	lambda$static$0
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		random
		p	4		chunkBox
		p	5		pos
		p	6		children
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Ldkt;)V	afterPlace	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		pos
		p	7		children
	f	Ldkb;	a	NONE
c	dkc	net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	m	(Ldkv;IIIIIILgy;)V	<init>	<init>
		p	1		type
		p	2		x
		p	3		y
		p	4		z
		p	5		width
		p	6		height
		p	7		depth
		p	8		orientation
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcgb;I)Z	a	updateHeightPositionToLowestGroundHeight
		p	1		world
	m	(Lcgb;Ldjw;I)Z	a	updateAverageGroundHeight
		p	1		world
		p	2		boundingBox
		p	3		deltaY
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	width
	f	I	b	height
	f	I	c	depth
	f	I	d	heightPosition
c	dkd	net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	m	(Ldkd$a;IILdke$c;)V	<init>	<init>
		p	1		constructor
		p	2		width
		p	3		height
		p	4		config
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	f	Ldkd$a;	d	constructor
	f	I	e	width
	f	I	f	depth
c	dkd$a	net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor
	m	(Ldar;II)Ldki;	construct	construct
		p	1		random
		p	2		startX
		p	3		startZ
c	dke	net/minecraft/world/level/levelgen/structure/Structure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	()Lhe;	a	biomes
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Ldkt;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	settingsCodec
		p	0		instance
	m	(Ldjw;)Ldjw;	a	adjustBoundingBox
		p	1		box
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;II)I	a	getLowestY
		p	0		context
		p	1		width
		p	2		height
	m	(Ldke$a;IIII)I	a	getLowestY
		p	0		context
		p	1		x
		p	2		z
		p	3		width
		p	4		height
	m	(Ldke$a;Lcoz;)Lgt;	a	getLowestYIn5by5BoxOffset7Blocks
		p	1		context
		p	2		rotation
	m	(Ldke$a;Lczu$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	onTopOfChunkCenter
		p	0		context
		p	1		heightmap
		p	2		generator
	m	(Ldke$b;Lcwn;Ldai;Ljava/util/function/Predicate;)Z	a	isValidBiome
		p	0		result
		p	1		chunkGenerator
		p	2		noiseConfig
		p	3		validBiomes
	m	(Ldke;)Ldke$c;	a	lambda$settingsCodec$0
		p	0		feature
	m	(Lhn;Lcwn;Lcha;Ldai;Ldnx;JLcfh;ILcgc;Ljava/util/function/Predicate;)Ldkm;	a	generate
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		references
		p	10		world
		p	11		validBiomes
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	simpleCodec
		p	0		featureCreator
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$simpleCodec$1
		p	1		instance
	m	()Ljava/util/Map;	b	spawnOverrides
	m	(Ldke$a;IIII)[I	b	getCornerHeights
		p	0		context
		p	1		x
		p	2		width
		p	3		z
		p	4		height
	m	()Lczq$b;	c	step
	m	()Ldkp;	d	terrainAdaptation
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldke$c;	c	settings
c	dke$a	net/minecraft/world/level/levelgen/structure/Structure$GenerationContext
	m	(Lhn;Lcwn;Lcha;Ldai;Ldnx;JLcfh;Lcgc;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		world
		p	10		biomePredicate
	m	()Lhn;	a	registryAccess
	m	(JLcfh;)Ldar;	a	makeRandom
		p	0		seed
		p	2		chunkPos
	m	()Lcwn;	b	chunkGenerator
	m	()Lcha;	c	biomeSource
	m	()Ldai;	d	randomState
	m	()Ldnx;	e	structureTemplateManager
	m	()Ldar;	f	random
	m	()J	g	seed
	m	()Lcfh;	h	chunkPos
	m	()Lcgc;	i	heightAccessor
	m	()Ljava/util/function/Predicate;	j	validBiome
	f	Lhn;	a	registryAccess
	f	Lcwn;	b	chunkGenerator
	f	Lcha;	c	biomeSource
	f	Ldai;	d	randomState
	f	Ldnx;	e	structureTemplateManager
	f	Ldar;	f	random
	f	J	g	seed
	f	Lcfh;	h	chunkPos
	f	Lcgc;	i	heightAccessor
	f	Ljava/util/function/Predicate;	j	validBiome
c	dke$b	net/minecraft/world/level/levelgen/structure/Structure$GenerationStub
	m	(Lgt;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		pos
		p	2		generator
	m	()Ldkw;	a	getPiecesBuilder
	m	(Ldkw;)Ldkw;	a	lambda$getPiecesBuilder$1
		p	0		collector
	m	(Ljava/util/function/Consumer;)Ldkw;	a	lambda$getPiecesBuilder$0
		p	0		generator
	m	()Lgt;	b	position
	m	()Lcom/mojang/datafixers/util/Either;	c	generator
	f	Lgt;	a	position
	f	Lcom/mojang/datafixers/util/Either;	b	generator
c	dke$c	net/minecraft/world/level/levelgen/structure/Structure$StructureSettings
	m	()Lhe;	a	biomes
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Map;	b	spawnOverrides
	m	()Lczq$b;	c	step
	m	()Ldkp;	d	terrainAdaptation
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lhe;	b	biomes
	f	Ljava/util/Map;	c	spawnOverrides
	f	Lczq$b;	d	step
	f	Ldkp;	e	terrainAdaptation
c	dkf	net/minecraft/world/level/levelgen/structure/StructureCheck
	m	(Lcxk;Lhn;Ldnx;Laai;Lcwn;Ldai;Lcgc;Lcha;JLcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		chunkIoWorker
		p	2		registryManager
		p	3		structureTemplateManager
		p	4		worldKey
		p	5		chunkGenerator
		p	6		noiseConfig
		p	7		world
		p	8		biomeSource
		p	9		seed
		p	11		dataFixer
	m	(JLit/unimi/dsi/fastutil/longs/Long2BooleanMap;)V	a	lambda$storeFullResults$3
		p	2		generationPossibilityByChunkPos
	m	(JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	storeFullResults
		p	1		pos
		p	3		referencesByStructure
	m	(Lcfh;Ldke;)V	a	incrementReference
		p	1		pos
		p	2		structure
	m	(Lcfh;Ldke;J)Z	a	lambda$checkStart$1
		p	3		chunkPos
	m	(Lcfh;Ldke;Z)Ldkg;	a	checkStart
		p	1		pos
		p	2		type
		p	3		skipReferencedStructures
	m	(Lcfh;Ldke;ZJ)Ldkg;	a	tryLoadFromStorage
		p	1		pos
		p	2		structure
		p	3		skipReferencedStructures
		p	4		posLong
	m	(Lcfh;Ljava/util/Map;)V	a	onStructureLoad
		p	1		pos
		p	2		structureStarts
	m	(Ldke;)Lit/unimi/dsi/fastutil/longs/Long2BooleanMap;	a	lambda$checkStart$0
		p	0		structure2
	m	(Ldke;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$incrementReference$4
		p	0		feature
		p	1		references
	m	(Ldke;Ljava/lang/Long;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$incrementReference$5
		p	1		pos
		p	2		referencesByStructure
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	deduplicateEmptyMap
		p	0		map
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldke;Ldkm;)V	a	lambda$onStructureLoad$2
		p	0		structure
		p	1		start
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldke;Z)Ldkg;	a	checkStructureInfo
		p	1		referencesByStructure
		p	2		structure
		p	3		skipReferencedStructures
	m	(Lpj;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	loadStructures
		p	1		nbt
	m	(Lcfh;Ldke;)Z	b	canCreateStructure
		p	1		pos
		p	2		structure
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	NO_STRUCTURE
	f	Lcxk;	c	storageAccess
	f	Lhn;	d	registryAccess
	f	Lhm;	e	biomes
	f	Lhm;	f	structureConfigs
	f	Ldnx;	g	structureTemplateManager
	f	Laai;	h	dimension
	f	Lcwn;	i	chunkGenerator
	f	Ldai;	j	randomState
	f	Lcgc;	k	heightAccessor
	f	Lcha;	l	biomeSource
	f	J	m	seed
	f	Lcom/mojang/datafixers/DataFixer;	n	fixerUpper
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	o	loadedChunks
	f	Ljava/util/Map;	p	featureChecks
c	dkg	net/minecraft/world/level/levelgen/structure/StructureCheckResult
	m	()[Ldkg;	a	$values
	f	Ldkg;	a	START_PRESENT
	f	Ldkg;	b	START_NOT_PRESENT
	f	Ldkg;	c	CHUNK_LOAD_NEEDED
	f	[Ldkg;	d	$VALUES
c	dkh	net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		all
		p	2		remaining
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAll
	m	(J)V	a	addIndex
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(J)Z	b	hasStartIndex
	m	(Lpj;)Ldkh;	b	load
		p	0		nbt
	m	(J)Z	c	hasUnhandledIndex
	m	(J)V	d	removeIndex
	f	Ljava/lang/String;	a	TAG_REMAINING_INDEXES
	f	Ljava/lang/String;	b	TAG_All_INDEXES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	d	remaining
c	dki	net/minecraft/world/level/levelgen/structure/StructurePiece
	m	(Ldkv;ILdjw;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	()Lcoz;	a	getRotation
	m	(I)V	a	setGenDepth
		p	1		chainLength
	m	(II)I	a	getWorldX
		p	1		x
		p	2		z
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(IIILgy;III)Ldjw;	a	makeBoundingBox
		p	0		x
		p	1		y
		p	2		z
		p	3		orientation
		p	4		width
		p	5		height
		p	6		depth
	m	(Lalu;)Lgy;	a	getRandomHorizontalDirection
		p	0		random
	m	(Lcfg;IIILdjw;)Lcur;	a	getBlock
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcfg;Lgt;Lcur;)Lcur;	a	reorient
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcfh;I)Z	a	isCloseToChunk
		p	1		pos
		p	2		offset
	m	(Lcgd;IIILdjw;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcgp;Ldjw;Lalu;Lgt;Laaj;Lcur;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		pos
		p	5		lootTableId
		p	6		block
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcgs;Lcur;IIILdjw;)V	a	placeBlock
		p	1		world
		p	2		block
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Lcgs;Ldjw;IIIIII)V	a	generateAirBox
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(Lcgs;Ldjw;IIIIIILcur;Lcur;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		outline
		p	10		inside
		p	11		cantReplaceAir
	m	(Lcgs;Ldjw;IIIIIILcur;Z)V	a	generateUpperHalfSphere
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		block
		p	10		cantReplaceAir
	m	(Lcgs;Ldjw;IIIIIIZLalu;Ldki$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		cantReplaceAir
		p	10		random
		p	11		randomizer
	m	(Lcgs;Ldjw;Lalu;FIIIIIILcur;Lcur;ZZ)V	a	generateMaybeBox
		p	1		world
		p	2		box
		p	3		random
		p	4		blockChance
		p	5		minX
		p	6		minY
		p	7		minZ
		p	8		maxX
		p	9		maxY
		p	10		maxZ
		p	11		outline
		p	12		inside
		p	13		cantReplaceAir
		p	14		stayBelowSeaLevel
	m	(Lcgs;Ldjw;Lalu;FIIILcur;)V	a	maybeGenerateBlock
		p	1		world
		p	2		bounds
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
		p	8		state
	m	(Lcgs;Ldjw;Lalu;IIILaaj;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTableId
	m	(Lcgs;Ldjw;Lalu;IIILgy;Laaj;)Z	a	createDispenser
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		facing
		p	8		lootTableId
	m	(Lcgs;Ldjw;Ldjw;Lcur;Lcur;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		outline
		p	5		inside
		p	6		cantReplaceAir
	m	(Lcgs;Ldjw;Ldjw;ZLalu;Ldki$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		cantReplaceAir
		p	5		random
		p	6		randomizer
	m	(Lcur;)Z	a	isReplaceableByStructures
		p	1		state
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldku;)Lpj;	a	createTag
		p	1		context
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgy;)V	a	setOrientation
		p	1		orientation
	m	(Ljava/util/List;Ldjw;)Ldki;	a	findCollisionPiece
		p	0		pieces
		p	1		box
	m	(Ljava/util/stream/Stream;)Ldjw;	a	createBoundingBox
		p	0		pieces
	m	(Lpj;Lqc;)V	a	lambda$createTag$1
	m	()Ljava/lang/IllegalStateException;	b	lambda$createBoundingBox$2
	m	(I)I	b	getWorldY
		p	1		y
	m	(II)I	b	getWorldZ
		p	1		x
		p	2		z
	m	(III)Lgt$a;	b	getWorldPos
		p	1		x
		p	2		y
		p	3		z
	m	(Lcgd;IIILdjw;)Z	b	isInterior
		p	1		world
		p	2		x
		p	3		z
		p	4		y
		p	5		box
	m	(Lcgs;Lcur;IIILdjw;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	()Ljava/lang/IllegalArgumentException;	c	lambda$new$0
	m	()Ldjw;	f	getBoundingBox
	m	()I	g	getGenDepth
	m	()Lgt;	h	getLocatorPosition
	m	()Lgy;	i	getOrientation
	m	()Lcnk;	j	getMirror
	m	()Ldkv;	k	getType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgy;	b	orientation
	f	Lcnk;	c	mirror
	f	Lcoz;	d	rotation
	f	Lcur;	e	CAVE_AIR
	f	Ldjw;	f	boundingBox
	f	I	g	genDepth
	f	Ldkv;	h	type
	f	Ljava/util/Set;	i	SHAPE_CHECK_BLOCKS
c	dki$1	net/minecraft/world/level/levelgen/structure/StructurePiece$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dki$a	net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	m	()Lcur;	a	getNext
	m	(Lalu;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
	f	Lcur;	a	next
c	dkj	net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	m	(Ldjw;)Ldki;	a	findCollisionPiece
		p	1		box
	m	(Ldki;)V	a	addPiece
		p	1		piece
c	dkk	net/minecraft/world/level/levelgen/structure/StructureSet
	m	(Lhc;Ldlb;)V	<init>	<init>
		p	1		structure
		p	2		placement
	m	()Ljava/util/List;	a	structures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhc;)Ldkk$a;	a	entry
		p	0		structure
	m	(Lhc;I)Ldkk$a;	a	entry
		p	0		structure
		p	1		weight
	m	()Ldlb;	b	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	structures
	f	Ldlb;	d	placement
c	dkk$a	net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	m	()Lhc;	a	structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhc;	b	structure
	f	I	c	weight
c	dkl	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	m	()Ldkl$a;	a	boundingBox
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Laya;	b	spawns
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldkl$a;	b	boundingBox
	f	Laya;	c	spawns
c	dkl$a	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldkl$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldkl$a;	a	PIECE
	f	Ldkl$a;	b	STRUCTURE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Ldkl$a;	e	$VALUES
c	dkm	net/minecraft/world/level/levelgen/structure/StructureStart
	m	(Ldke;Lcfh;ILdkt;)V	<init>	<init>
		p	1		structure
		p	2		pos
		p	3		references
		p	4		children
	m	()Ldjw;	a	getBoundingBox
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;)V	a	placeInChunk
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
	m	(Ldku;Lcfh;)Lpj;	a	createTag
		p	1		context
		p	2		chunkPos
	m	(Ldku;Lpj;J)Ldkm;	a	loadStaticStart
		p	0		context
		p	1		nbt
		p	2		seed
	m	()Z	b	isValid
	m	()Lcfh;	c	getChunkPos
	m	()Z	d	canBeReferenced
	m	()V	e	addReference
	m	()I	f	getReferences
	m	()I	g	getMaxReferences
	m	()Ldke;	h	getStructure
	m	()Ljava/util/List;	i	getPieces
	f	Ljava/lang/String;	a	INVALID_START_ID
	f	Ldkm;	b	INVALID_START
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ldke;	d	structure
	f	Ldkt;	e	pieceContainer
	f	Lcfh;	f	chunkPos
	f	I	g	references
	f	Ldjw;	h	cachedBoundingBox
c	dkn	net/minecraft/world/level/levelgen/structure/StructureType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldkn;	a	register
		p	0		id
		p	1		codec
	f	Ldkn;	a	BURIED_TREASURE
	f	Ldkn;	b	DESERT_PYRAMID
	f	Ldkn;	c	END_CITY
	f	Ldkn;	d	FORTRESS
	f	Ldkn;	e	IGLOO
	f	Ldkn;	f	JIGSAW
	f	Ldkn;	g	JUNGLE_TEMPLE
	f	Ldkn;	h	MINESHAFT
	f	Ldkn;	i	NETHER_FOSSIL
	f	Ldkn;	j	OCEAN_MONUMENT
	f	Ldkn;	k	OCEAN_RUIN
	f	Ldkn;	l	RUINED_PORTAL
	f	Ldkn;	m	SHIPWRECK
	f	Ldkn;	n	STRONGHOLD
	f	Ldkn;	o	SWAMP_HUT
	f	Ldkn;	p	WOODLAND_MANSION
c	dko	net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	m	(Ldkv;ILdnx;Laaj;Ljava/lang/String;Ldns;Lgt;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		structureTemplateManager
		p	4		id
		p	5		template
		p	6		placementData
		p	7		pos
	m	(Ldkv;Lpj;Ldnx;Ljava/util/function/Function;)V	<init>	<init>
		p	1		type
		p	2		nbt
		p	3		structureTemplateManager
		p	4		placementDataGetter
	m	()Lcoz;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	()Laaj;	b	makeTemplateLocation
	m	()Ldnw;	c	template
	m	()Lgt;	d	templatePosition
	m	()Ldns;	e	placeSettings
	f	Ljava/lang/String;	a	templateName
	f	Ldnw;	b	template
	f	Ldns;	c	placeSettings
	f	Lgt;	d	templatePosition
	f	Lorg/slf4j/Logger;	h	LOGGER
c	dkp	net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldkp;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldkp;	a	NONE
	f	Ldkp;	b	BURY
	f	Ldkp;	c	BEARD_THIN
	f	Ldkp;	d	BEARD_BOX
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	[Ldkp;	g	$VALUES
c	dkq	net/minecraft/world/level/levelgen/structure/package-info
c	dkr	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
	m	(Ldkw;Ldkr$a;)V	generatePieces	generatePieces
		p	1		collector
		p	2		context
c	dkr$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	m	()Ldfa;	a	config
	m	()Lcwn;	b	chunkGenerator
	m	()Ldnx;	c	structureTemplateManager
	m	()Lcfh;	d	chunkPos
	m	()Lcgc;	e	heightAccessor
	m	()Ldar;	f	random
	m	()J	g	seed
	f	Ldfa;	a	config
	f	Lcwn;	b	chunkGenerator
	f	Ldnx;	c	structureTemplateManager
	f	Lcfh;	d	chunkPos
	f	Lcgc;	e	heightAccessor
	f	Ldar;	f	random
	f	J	g	seed
c	dks	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
	m	(Lczu$a;Ldks$a;)Z	a	lambda$checkForBiomeOnTop$1
		p	1		context
	m	(Ljava/util/function/Predicate;Ljava/util/Optional;Ldks$a;)Ljava/util/Optional;	a	lambda$simple$0
		p	2		context
	m	(Lczu$a;)Ljava/util/function/Predicate;	checkForBiomeOnTop	checkForBiomeOnTop
		p	0		heightmapType
	m	(Ldks$a;)Ljava/util/Optional;	createGenerator	createGenerator
		p	1		context
	m	(Ljava/util/function/Predicate;Ldkr;)Ldks;	simple	simple
		p	0		predicate
		p	1		generator
c	dks$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	m	()Lcwn;	a	chunkGenerator
	m	(Lczu$a;)Z	a	validBiomeOnTop
		p	1		heightmapType
	m	()Lcha;	b	biomeSource
	m	()Ldai;	c	randomState
	m	()J	d	seed
	m	()Lcfh;	e	chunkPos
	m	()Ldfa;	f	config
	m	()Lcgc;	g	heightAccessor
	m	()Ljava/util/function/Predicate;	h	validBiome
	m	()Ldnx;	i	structureTemplateManager
	m	()Lhn;	j	registryAccess
	f	Lcwn;	a	chunkGenerator
	f	Lcha;	b	biomeSource
	f	Ldai;	c	randomState
	f	J	d	seed
	f	Lcfh;	e	chunkPos
	f	Ldfa;	f	config
	f	Lcgc;	g	heightAccessor
	f	Ljava/util/function/Predicate;	h	validBiome
	f	Ldnx;	i	structureTemplateManager
	f	Lhn;	j	registryAccess
c	dkt	net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		pieces
	m	()Z	a	isEmpty
	m	(Ldku;)Lqc;	a	save
		p	1		context
	m	(Lgt;)Z	a	isInsidePiece
		p	1		pos
	m	(Lpp;Ldku;)Ldkt;	a	load
		p	0		list
		p	1		context
	m	()Ldjw;	b	calculateBoundingBox
	m	()Ljava/util/List;	c	pieces
	f	Ljava/util/List;	a	pieces
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laaj;	c	JIGSAW_RENAME
	f	Ljava/util/Map;	d	RENAMES
c	dku	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	m	()Lahu;	a	resourceManager
	m	(Lafo;)Ldku;	a	fromLevel
		p	0		world
	m	()Lhn;	b	registryAccess
	m	()Ldnx;	c	structureTemplateManager
	f	Lahu;	a	resourceManager
	f	Lhn;	b	registryAccess
	f	Ldnx;	c	structureTemplateManager
c	dkv	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	m	(Ldkv$a;Ljava/lang/String;)Ldkv;	a	setPieceId
		p	0		type
		p	1		id
	m	(Ldkv$b;Ljava/lang/String;)Ldkv;	a	setTemplatePieceId
		p	0		type
		p	1		id
	m	(Ldkv;Ljava/lang/String;)Ldkv;	a	setFullContextPieceId
		p	0		type
		p	1		id
	m	(Ldku;Lpj;)Ldki;	load	load
		p	1		context
		p	2		nbt
	f	Ldkv;	A	STRONGHOLD_RIGHT_TURN
	f	Ldkv;	B	STRONGHOLD_ROOM_CROSSING
	f	Ldkv;	C	STRONGHOLD_STAIRS_DOWN
	f	Ldkv;	D	STRONGHOLD_START
	f	Ldkv;	E	STRONGHOLD_STRAIGHT
	f	Ldkv;	F	STRONGHOLD_STRAIGHT_STAIRS_DOWN
	f	Ldkv;	G	JUNGLE_PYRAMID_PIECE
	f	Ldkv;	H	OCEAN_RUIN
	f	Ldkv;	I	IGLOO
	f	Ldkv;	J	RUINED_PORTAL
	f	Ldkv;	K	SWAMPLAND_HUT
	f	Ldkv;	L	DESERT_PYRAMID_PIECE
	f	Ldkv;	M	OCEAN_MONUMENT_BUILDING
	f	Ldkv;	N	OCEAN_MONUMENT_CORE_ROOM
	f	Ldkv;	O	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Ldkv;	P	OCEAN_MONUMENT_DOUBLE_XY_ROOM
	f	Ldkv;	Q	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Ldkv;	R	OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	f	Ldkv;	S	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Ldkv;	T	OCEAN_MONUMENT_ENTRY_ROOM
	f	Ldkv;	U	OCEAN_MONUMENT_PENTHOUSE
	f	Ldkv;	V	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Ldkv;	W	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Ldkv;	X	OCEAN_MONUMENT_WING_ROOM
	f	Ldkv;	Y	END_CITY_PIECE
	f	Ldkv;	Z	WOODLAND_MANSION_PIECE
	f	Ldkv;	a	MINE_SHAFT_CORRIDOR
	f	Ldkv;	aa	BURIED_TREASURE_PIECE
	f	Ldkv;	ab	SHIPWRECK_PIECE
	f	Ldkv;	ac	NETHER_FOSSIL
	f	Ldkv;	ad	JIGSAW
	f	Ldkv;	b	MINE_SHAFT_CROSSING
	f	Ldkv;	c	MINE_SHAFT_ROOM
	f	Ldkv;	d	MINE_SHAFT_STAIRS
	f	Ldkv;	e	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Ldkv;	f	NETHER_FORTRESS_BRIDGE_END_FILLER
	f	Ldkv;	g	NETHER_FORTRESS_BRIDGE_STRAIGHT
	f	Ldkv;	h	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	f	Ldkv;	i	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	f	Ldkv;	j	NETHER_FORTRESS_CASTLE_ENTRANCE
	f	Ldkv;	k	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	f	Ldkv;	l	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	f	Ldkv;	m	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	f	Ldkv;	n	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	f	Ldkv;	o	NETHER_FORTRESS_CASTLE_STALK_ROOM
	f	Ldkv;	p	NETHER_FORTRESS_MONSTER_THRONE
	f	Ldkv;	q	NETHER_FORTRESS_ROOM_CROSSING
	f	Ldkv;	r	NETHER_FORTRESS_STAIRS_ROOM
	f	Ldkv;	s	NETHER_FORTRESS_START
	f	Ldkv;	t	STRONGHOLD_CHEST_CORRIDOR
	f	Ldkv;	u	STRONGHOLD_FILLER_CORRIDOR
	f	Ldkv;	v	STRONGHOLD_FIVE_CROSSING
	f	Ldkv;	w	STRONGHOLD_LEFT_TURN
	f	Ldkv;	x	STRONGHOLD_LIBRARY
	f	Ldkv;	y	STRONGHOLD_PORTAL_ROOM
	f	Ldkv;	z	STRONGHOLD_PRISON_HALL
c	dkv$a	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
	m	(Ldku;Lpj;)Ldki;	load	load
		p	1		context
		p	2		nbt
	m	(Lpj;)Ldki;	load	load
		p	1		nbt
c	dkv$b	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
	m	(Ldku;Lpj;)Ldki;	load	load
		p	1		context
		p	2		nbt
	m	(Ldnx;Lpj;)Ldki;	load	load
		p	1		structureTemplateManager
		p	2		nbt
c	dkw	net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	m	()Ldkt;	a	build
	m	(I)V	a	offsetPiecesVertically
		p	1		y
	m	(IILalu;I)I	a	moveBelowSeaLevel
		p	1		topY
		p	2		bottomY
		p	3		random
		p	4		topPenalty
	m	(Lalu;II)V	a	moveInsideHeights
		p	1		random
		p	2		baseY
		p	3		topY
	m	(Ldjw;)Ldki;	a	findCollisionPiece
		p	1		box
	m	(Ldki;)V	a	addPiece
		p	1		piece
	m	()V	b	clear
	m	()Z	c	isEmpty
	m	()Ldjw;	d	getBoundingBox
	f	Ljava/util/List;	a	pieces
c	dkx	net/minecraft/world/level/levelgen/structure/pieces/package-info
c	dky	net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	m	(IIILhe;)V	<init>	<init>
		p	1		distance
		p	2		spread
		p	3		structureCount
		p	4		preferredBiomes
	m	(Lhs;Ldlb$c;FILjava/util/Optional;IIILhe;)V	<init>	<init>
		p	1		locateOffset
		p	2		generationPredicateType
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
		p	6		distance
		p	7		spread
		p	8		structureCount
		p	9		preferredBiomes
	m	()I	a	distance
	m	(Lcwn;Ldai;JII)Z	a	isPlacementChunk
		p	1		chunkGenerator
		p	2		noiseConfig
		p	3		seed
		p	5		x
		p	6		z
	m	()I	b	spread
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9;	b	codec
	m	()I	c	count
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	m	()Lhe;	d	preferredBiomes
	m	()Ldlc;	e	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	distance
	f	I	d	spread
	f	I	e	count
	f	Lhe;	f	preferredBiomes
c	dkz	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	m	(IILdla;I)V	<init>	<init>
		p	1		spacing
		p	3		spreadType
	m	(Lhs;Ldlb$c;FILjava/util/Optional;IILdla;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
	m	()I	a	spacing
	m	(JII)Lcfh;	a	getPotentialStructureChunk
		p	1		seed
		p	3		x
		p	4		z
	m	(Lcwn;Ldai;JII)Z	a	isPlacementChunk
		p	1		chunkGenerator
		p	2		noiseConfig
		p	3		seed
		p	5		x
		p	6		z
	m	(Ldkz;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		placement
	m	()I	b	separation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Ldla;	c	spreadType
	m	()Ldlc;	e	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	spacing
	f	I	d	separation
	f	Ldla;	e	spreadType
c	dla	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldla;	a	$values
	m	(Lalu;I)I	a	evaluate
		p	1		random
		p	2		bound
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldla;	a	LINEAR
	f	Ldla;	b	TRIANGULAR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Ldla;	e	$VALUES
c	dla$1	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$placement$RandomSpreadType
c	dlb	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	m	(Lhs;Ldlb$c;FILjava/util/Optional;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
	m	(JIIIF)Z	a	probabilityReducer
		p	0		seed
		p	2		regionX
		p	3		regionZ
		p	4		salt
		p	5		frequency
	m	(Lcfh;)Lgt;	a	getLocatePos
		p	1		chunkPos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5;	a	placementCodec
	m	(Lcwn;Ldai;JII)Z	a	isPlacementChunk
		p	1		chunkGenerator
		p	2		noiseConfig
		p	3		seed
		p	5		x
		p	6		z
	m	(JIIIF)Z	b	legacyProbabilityReducerWithDouble
		p	0		seed
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Lcwn;Ldai;JII)Z	b	isStructureChunk
		p	1		chunkGenerator
		p	2		noiseConfig
		p	3		seed
		p	5		x
		p	6		z
	m	(JIIIF)Z	c	legacyArbitrarySaltProbabilityReducer
		p	0		seed
		p	3		regionX
		p	4		regionZ
		p	5		frequency
	m	(JIIIF)Z	d	legacyPillagerOutpostReducer
		p	0		seed
		p	5		frequency
	m	()Ldlc;	e	type
	m	()Lhs;	f	locateOffset
	m	()Ldlb$c;	g	frequencyReductionMethod
	m	()F	h	frequency
	m	()I	i	salt
	m	()Ljava/util/Optional;	j	exclusionZone
	f	I	a	HIGHLY_ARBITRARY_RANDOM_SALT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhs;	c	locateOffset
	f	Ldlb$c;	d	frequencyReductionMethod
	f	F	e	frequency
	f	I	f	salt
	f	Ljava/util/Optional;	g	exclusionZone
c	dlb$a	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone
	m	()Lhc;	a	otherSet
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcwn;Ldai;JII)Z	a	isPlacementForbidden
		p	1		chunkGenerator
		p	2		noiseConfig
		p	3		seed
		p	5		x
		p	6		z
	m	()I	b	chunkCount
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhc;	b	otherSet
	f	I	c	chunkCount
c	dlb$b	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer
	m	(JIIIF)Z	shouldGenerate	shouldGenerate
		p	1		seed
		p	6		chance
c	dlb$c	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod
	m	(Ljava/lang/String;ILjava/lang/String;Ldlb$b;)V	<init>	<init>
		p	3		name
		p	4		generationPredicate
	m	()[Ldlb$c;	a	$values
	m	(JIIIF)Z	a	shouldGenerate
		p	1		seed
		p	6		chance
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldlb$c;	a	DEFAULT
	f	Ldlb$c;	b	LEGACY_TYPE_1
	f	Ldlb$c;	c	LEGACY_TYPE_2
	f	Ldlb$c;	d	LEGACY_TYPE_3
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Ldlb$b;	g	reducer
	f	[Ldlb$c;	h	$VALUES
c	dlc	net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldlc;	a	register
		p	1		codec
	f	Ldlc;	a	RANDOM_SPREAD
	f	Ldlc;	b	CONCENTRIC_RINGS
c	dld	net/minecraft/world/level/levelgen/structure/placement/package-info
c	dle	net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	m	()Ldlm;	a	getType
	m	(Ldnx;Lcgs;Lcgr;Lcwn;Lgt;Lgt;Lcoz;Ldjw;Lalu;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldnx;Lcoz;)Lhs;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldnx;Lgt;Lcoz;)Ldjw;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldnx;Lgt;Lcoz;Lalu;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Ldle;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldle;	b	INSTANCE
c	dlf	net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	m	(Lhc;Ldln$a;)V	<init>	<init>
		p	1		feature
		p	2		projection
	m	()Ldlm;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldlf;)Lhc;	a	lambda$static$0
		p	0		pool
	m	(Ldnx;Lcgs;Lcgr;Lcwn;Lgt;Lgt;Lcoz;Ldjw;Lalu;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldnx;Lcoz;)Lhs;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldnx;Lgt;Lcoz;)Ldjw;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldnx;Lgt;Lcoz;Lalu;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Lpj;	b	fillDefaultJigsawNBT
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhc;	b	feature
	f	Lpj;	c	defaultJigsawNBT
c	dlg	net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	m	(IIIILdln$a;)V	<init>	<init>
		p	1		sourceX
		p	2		sourceGroundY
		p	3		sourceZ
		p	4		deltaY
		p	5		destProjection
	m	()I	a	getSourceX
	m	(Lcom/mojang/serialization/Dynamic;)Ldlg;	a	deserialize
		p	0		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
		p	1		ops
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	()I	d	getDeltaY
	m	()Ldln$a;	e	getDestProjection
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Ldln$a;	e	destProjection
c	dlh	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	m	(Lafo;Lhc;Laaj;ILgt;Z)Z	a	generateJigsaw
		p	0		world
		p	1		structurePool
		p	2		id
		p	4		pos
		p	5		keepJigsaws
	m	(Ldai;IZLcwn;Ldnx;Lcgc;Lalu;Lhm;Ldka;Ljava/util/List;Ldwm;)V	a	addPieces
		p	0		noiseConfig
		p	1		maxSize
		p	2		modifyBoundingBox
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		heightLimitView
		p	6		random
		p	7		structurePoolRegistry
		p	8		firstPiece
		p	9		pieces
		p	10		pieceShape
	m	(Ldka;IIIIILdjw;Ldke$a;ZLcwn;Ldnx;Lcgc;Ldar;Lhm;Ldkw;)V	a	lambda$addPieces$0
		p	14		collector
	m	(Ldke$a;Lhc;Ljava/util/Optional;ILgt;ZLjava/util/Optional;I)Ljava/util/Optional;	a	addPieces
		p	0		context
		p	1		structurePool
		p	2		id
		p	3		size
		p	4		pos
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
		p	7		maxDistanceFromCenter
	m	(Ldll;Laaj;Lgt;Lcoz;Ldnx;Ldar;)Ljava/util/Optional;	a	getRandomNamedJigsaw
		p	0		pool
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		structureManager
		p	5		random
	m	(Lhc;)Z	a	lambda$generateJigsaw$1
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dlh$a	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	m	(Ldka;Lorg/apache/commons/lang3/mutable/MutableObject;I)V	<init>	<init>
		p	1		piece
		p	2		pieceShape
		p	3		currentSize
	f	Ldka;	a	piece
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	f	I	c	depth
c	dlh$b	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	m	(Lhm;ILcwn;Ldnx;Ljava/util/List;Lalu;)V	<init>	<init>
		p	1		registry
		p	2		maxSize
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		children
		p	6		random
	m	(Ldjw;Ldnw$c;)I	a	lambda$tryPlacingChildren$3
	m	(Ldka;Lorg/apache/commons/lang3/mutable/MutableObject;IZLcgc;Ldai;)V	a	tryPlacingChildren
		p	1		piece
		p	2		pieceShape
		p	3		minY
		p	4		modifyBoundingBox
		p	5		world
		p	6		noiseConfig
	m	(Ldln;)Ljava/lang/Integer;	a	lambda$tryPlacingChildren$2
		p	1		pool
	m	(Ldln;)Ljava/lang/Integer;	b	lambda$tryPlacingChildren$1
		p	1		pool
	m	(Ldln;)Ljava/util/Optional;	c	lambda$tryPlacingChildren$0
		p	1		pool
	f	Lhm;	a	pools
	f	I	b	maxDepth
	f	Lcwn;	c	chunkGenerator
	f	Ldnx;	d	structureTemplateManager
	f	Ljava/util/List;	e	pieces
	f	Lalu;	f	random
	f	Ljava/util/Deque;	g	placing
c	dli	net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	m	(Lcom/mojang/datafixers/util/Either;Lhc;Ldln$a;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
	m	()Ldlm;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcoz;Ldjw;Z)Ldns;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		keepJigsaws
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dlj	net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	m	(Ljava/util/List;Ldln$a;)V	<init>	<init>
		p	1		elements
		p	2		projection
	m	()Ldlm;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldlj;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Ldll;)Z	a	lambda$getBoundingBox$2
		p	0		element
	m	(Ldln$a;)Ldll;	a	setProjection
		p	1		projection
	m	(Ldln$a;Ldll;)V	a	lambda$setProjectionOnEachElement$5
		p	1		element
	m	(Ldnx;Lcgs;Lcgr;Lcwn;Lgt;Lgt;Lcoz;Ldjw;Lalu;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldnx;Lcoz;)Lhs;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldnx;Lgt;Lcoz;)Ldjw;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldnx;Lgt;Lcoz;Lalu;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Ldnx;Lgt;Lcoz;Ldll;)Ldjw;	a	lambda$getBoundingBox$3
		p	3		element
	m	()Ljava/lang/IllegalStateException;	b	lambda$getBoundingBox$4
	m	(Ldln$a;)V	b	setProjectionOnEachElement
		p	1		projection
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	elements
c	dlk	net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	m	(Lcom/mojang/datafixers/util/Either;Lhc;Ldln$a;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
	m	(Ldnw;)V	<init>	<init>
		p	1		template
	m	()Ldlm;	a	getType
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encodeTemplate
		p	0		location
		p	1		ops
		p	2		prefix
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcoz;Ldjw;Z)Ldns;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		keepJigsaws
	m	(Ldlk;)Lcom/mojang/datafixers/util/Either;	a	lambda$templateCodec$2
		p	0		pool
	m	(Ldnx;)Ldnw;	a	getTemplate
		p	1		structureTemplateManager
	m	(Ldnx;Lcgs;Lcgr;Lcwn;Lgt;Lgt;Lcoz;Ldjw;Lalu;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldnx;Lcoz;)Lhs;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldnx;Lgt;Lcoz;)Ldjw;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldnx;Lgt;Lcoz;Lalu;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Ldnx;Lgt;Lcoz;Z)Ljava/util/List;	a	getDataMarkers
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		mirroredAndRotated
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	b	processorsCodec
	m	(Ldlk;)Lhc;	b	lambda$processorsCodec$1
		p	0		pool
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	templateCodec
	f	Lcom/mojang/serialization/Codec;	a	TEMPLATE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	template
	f	Lhc;	d	processors
c	dll	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	m	(Ldln$a;)V	<init>	<init>
		p	1		projection
	m	()Ldlm;	a	getType
	m	(Lcgb;Ldnw$c;Lgt;Lcoz;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		world
		p	2		structureBlockInfo
		p	3		pos
		p	4		rotation
		p	5		random
		p	6		box
	m	(Ldln$a;)Ldll;	a	setProjection
		p	1		projection
	m	(Ldln$a;Ljava/util/function/Function;)Ldll;	a	lambda$list$6
		p	1		elementGetter
	m	(Ldnx;Lcgs;Lcgr;Lcwn;Lgt;Lgt;Lcoz;Ldjw;Lalu;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldnx;Lcoz;)Lhs;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldnx;Lgt;Lcoz;)Ldjw;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldnx;Lgt;Lcoz;Lalu;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Lhc;)Ljava/util/function/Function;	a	feature
		p	0		placedFeatureEntry
	m	(Lhc;Ldln$a;)Ldlf;	a	lambda$feature$5
		p	1		projection
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	legacy
		p	0		id
	m	(Ljava/lang/String;Ldln$a;)Ldlk;	a	lambda$single$3
		p	1		projection
	m	(Ljava/lang/String;Lhc;)Ljava/util/function/Function;	a	legacy
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Lhc;Ldln$a;)Ldlk;	a	lambda$single$4
		p	2		projection
	m	(Ljava/util/List;)Ljava/util/function/Function;	a	list
		p	0		elementGetters
	m	(Ljava/util/List;Ldln$a;)Ldlj;	a	lambda$list$7
		p	1		projection
	m	(Ldln$a;)Ldle;	b	lambda$empty$0
		p	0		projection
	m	(Ljava/lang/String;)Ljava/util/function/Function;	b	single
		p	0		id
	m	(Ljava/lang/String;Ldln$a;)Ldli;	b	lambda$legacy$1
		p	1		projection
	m	(Ljava/lang/String;Lhc;)Ljava/util/function/Function;	b	single
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Lhc;Ldln$a;)Ldli;	b	lambda$legacy$2
		p	2		projection
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	projectionCodec
	m	()Ldln$a;	e	getProjection
	m	()I	f	getGroundLevelDelta
	m	()Ljava/util/function/Function;	g	empty
	f	Ldln$a;	a	projection
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dlm	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldlm;	a	register
		p	0		id
		p	1		codec
	f	Ldlm;	a	SINGLE
	f	Ldlm;	b	LIST
	f	Ldlm;	c	FEATURE
	f	Ldlm;	d	EMPTY
	f	Ldlm;	e	LEGACY
c	dln	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	m	(Laaj;Laaj;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		terminatorsId
		p	3		elementCounts
	m	(Laaj;Laaj;Ljava/util/List;Ldln$a;)V	<init>	<init>
		p	1		id
		p	2		terminatorsId
		p	3		elementCounts
		p	4		projection
	m	()Laaj;	a	getFallback
	m	(Lalu;)Ldll;	a	getRandomTemplate
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldll;)Z	a	lambda$getMaxSize$2
		p	0		element
	m	(Ldln;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Ldnx;)I	a	getMaxSize
		p	1		structureTemplateManager
	m	(Ldnx;Ldll;)I	a	lambda$getMaxSize$3
		p	1		element
	m	()Laaj;	b	getName
	m	(Lalu;)Ljava/util/List;	b	getShuffledTemplates
		p	1		random
	m	()I	c	size
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SIZE_UNSET
	f	Laaj;	e	name
	f	Ljava/util/List;	f	rawTemplates
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	g	templates
	f	Laaj;	h	fallback
	f	I	i	maxSize
c	dln$a	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
		p	3		id
		p	4		processors
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Ldln$a;	a	byName
		p	0		id
	m	()Lcom/google/common/collect/ImmutableList;	b	getProcessors
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldln$a;	d	$values
	f	Ldln$a;	a	TERRAIN_MATCHING
	f	Ldln$a;	b	RIGID
	f	Lamd$a;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lcom/google/common/collect/ImmutableList;	e	processors
	f	[Ldln$a;	f	$VALUES
c	dlo	net/minecraft/world/level/levelgen/structure/pools/package-info
c	dlp	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces
c	dlp$a	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lcur;)Z	b	isLiquid
		p	1		state
c	dlq	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dlr	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	m	(Lalu;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	[Z	j	hasPlacedChest
c	dls	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dlt	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	m	(Ldnx;Ldlt$a;Lgt;Ljava/lang/String;Lcoz;Z)Ldlt$a;	a	addPiece
		p	0		structureTemplateManager
		p	1		lastPiece
		p	2		relativePosition
		p	3		template
		p	4		rotation
		p	5		ignoreAir
	m	(Ldnx;Ldlt$b;ILdlt$a;Lgt;Ljava/util/List;Lalu;)Z	a	recursiveChildren
		p	0		manager
		p	1		piece
		p	2		depth
		p	3		parent
		p	4		pos
		p	5		pieces
		p	6		random
	m	(Ldnx;Lgt;Lcoz;Ljava/util/List;Lalu;)V	a	startHouseTower
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
	m	(Ljava/util/List;Ldlt$a;)Ldlt$a;	a	addHelper
		p	0		pieces
		p	1		piece
	f	I	a	MAX_GEN_DEPTH
	f	Ldlt$b;	b	HOUSE_TOWER_GENERATOR
	f	Ljava/util/List;	c	TOWER_BRIDGES
	f	Ldlt$b;	d	TOWER_GENERATOR
	f	Ldlt$b;	e	TOWER_BRIDGE_GENERATOR
	f	Ljava/util/List;	f	FAT_TOWER_BRIDGES
	f	Ldlt$b;	g	FAT_TOWER_GENERATOR
c	dlt$1	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$1
	m	()V	a	init
	m	(Ldnx;ILdlt$a;Lgt;Ljava/util/List;Lalu;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dlt$2	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$2
	m	()V	a	init
	m	(Ldnx;ILdlt$a;Lgt;Ljava/util/List;Lalu;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dlt$3	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$3
	m	()V	a	init
	m	(Ldnx;ILdlt$a;Lgt;Ljava/util/List;Lalu;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
	f	Z	a	shipCreated
c	dlt$4	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$4
	m	()V	a	init
	m	(Ldnx;ILdlt$a;Lgt;Ljava/util/List;Lalu;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dlt$a	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece
	m	(Ldnx;Ljava/lang/String;Lgt;Lcoz;Z)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		includeAir
	m	(Ldnx;Lpj;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Laaj;	a	makeResourceLocation
		p	0		template
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lpj;Laaj;)Ldns;	a	lambda$new$0
	m	(ZLcoz;)Ldns;	a	makeSettings
		p	0		includeAir
		p	1		rotation
	m	()Laaj;	b	makeTemplateLocation
c	dlt$b	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator
	m	()V	a	init
	m	(Ldnx;ILdlt$a;Lgt;Ljava/util/List;Lalu;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dlu	net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldkw;Lgt;Lcoz;Ldke$a;)V	a	generatePieces
		p	1		collector
		p	2		pos
		p	3		rotation
		p	4		context
	m	(Lgt;Lcoz;Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dlv	net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	m	(Ldnx;Lgt;Lcoz;Ldkj;Lalu;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
	f	I	a	GENERATION_HEIGHT
	f	Laaj;	b	STRUCTURE_LOCATION_IGLOO
	f	Laaj;	c	STRUCTURE_LOCATION_LADDER
	f	Laaj;	d	STRUCTURE_LOCATION_LABORATORY
	f	Ljava/util/Map;	e	PIVOTS
	f	Ljava/util/Map;	f	OFFSETS
c	dlv$a	net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece
	m	(Ldnx;Laaj;Lgt;Lcoz;I)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		yOffset
	m	(Ldnx;Lpj;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Laaj;Lgt;I)Lgt;	a	makePosition
		p	0		identifier
		p	1		pos
		p	2		yOffset
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcoz;Laaj;)Ldns;	a	makeSettings
		p	0		rotation
		p	1		identifier
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lpj;Laaj;)Ldns;	a	lambda$new$0
		p	1		identifier
c	dlw	net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dlx	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	m	(Ldke$c;Lhc;ILdim;Z)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
	m	(Ldke$c;Lhc;ILdim;ZLczu$a;)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
	m	(Ldke$c;Lhc;Ljava/util/Optional;ILdim;ZLjava/util/Optional;I)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		startJigsawName
		p	4		size
		p	5		startHeight
		p	6		useExpansionHack
		p	7		projectStartToHeightmap
		p	8		maxDistanceFromCenter
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldlx;)Lcom/mojang/serialization/DataResult;	a	lambda$verifyRange$8
		p	0		feature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$7
		p	0		instance
	m	(Ldlx;)Ljava/lang/Integer;	b	lambda$static$6
		p	0		structure
	m	(Ldlx;)Ljava/util/Optional;	c	lambda$static$5
		p	0		structure
	m	(Ldlx;)Ljava/lang/Boolean;	d	lambda$static$4
		p	0		structure
	m	()Ldkn;	e	type
	m	(Ldlx;)Ldim;	e	lambda$static$3
		p	0		structure
	m	()Ljava/util/function/Function;	f	verifyRange
	m	(Ldlx;)Ljava/lang/Integer;	f	lambda$static$2
		p	0		structure
	m	(Ldlx;)Ljava/util/Optional;	g	lambda$static$1
		p	0		structure
	m	(Ldlx;)Lhc;	h	lambda$static$0
		p	0		structure
	f	I	d	MAX_TOTAL_STRUCTURE_RANGE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lhc;	f	startPool
	f	Ljava/util/Optional;	g	startJigsawName
	f	I	h	maxDepth
	f	Ldim;	i	startHeight
	f	Z	j	useExpansionHack
	f	Ljava/util/Optional;	k	projectStartToHeightmap
	f	I	l	maxDistanceFromCenter
c	dlx$1	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	dly	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	m	(Lalu;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	Z	j	placedMainChest
	f	Z	k	placedHiddenChest
	f	Z	l	placedTrap1
	f	Z	m	placedTrap2
	f	Ldly$a;	n	STONE_SELECTOR
c	dly$a	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector
	m	(Lalu;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	dlz	net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dma	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	m	(Ldki;Ldkj;Lalu;IIILgy;I)Ldma$c;	a	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Ldkj;Lalu;IIILgy;ILdmb$a;)Ldma$c;	a	createRandomShaftPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
		p	7		type
	f	I	a	MAGIC_START_Y
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	DEFAULT_SHAFT_WIDTH
	f	I	d	DEFAULT_SHAFT_HEIGHT
	f	I	e	DEFAULT_SHAFT_LENGTH
	f	I	f	MAX_PILLAR_HEIGHT
	f	I	g	MAX_CHAIN_HEIGHT
	f	I	h	MAX_DEPTH
c	dma$1	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dma$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor
	m	(ILalu;Ldjw;Lgy;Ldmb$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
		p	5		type
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgd;Lgt;Lcur;)Z	a	canPlaceColumnOnTopOf
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcgs;Lcur;Lgt$a;II)V	a	fillColumnBetween
		p	0		world
		p	1		state
		p	2		pos
		p	3		startY
		p	4		endY
	m	(Lcgs;Ldjw;III)V	a	placeDoubleLowerOrUpperSupport
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Lcgs;Ldjw;IIII)Z	a	hasSturdyNeighbours
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		count
	m	(Lcgs;Ldjw;IIIIILalu;)V	a	placeSupport
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		minY
		p	5		z
		p	6		maxY
		p	7		maxX
		p	8		random
	m	(Lcgs;Ldjw;Lalu;FIII)V	a	maybePlaceCobWeb
		p	1		world
		p	2		box
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
	m	(Lcgs;Ldjw;Lalu;IIILaaj;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTableId
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;)Ldjw;	a	findCorridorSize
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lcgd;Lgt;Lcur;)Z	b	canHangChainBelow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgs;Lcur;IIILdjw;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Lcgs;Lcur;IIILdjw;)V	c	fillPillarDownOrChainUp
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	f	Z	b	hasRails
	f	Z	c	spiderCorridor
	f	Z	d	hasPlacedSpider
	f	I	h	numSections
c	dma$b	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing
	m	(ILdjw;Lgy;Ldmb$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcgs;Ldjw;IIII)V	a	placeSupportPillar
		p	1		world
		p	2		boundingBox
		p	3		x
		p	4		minY
		p	5		z
		p	6		maxY
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;)Ldjw;	a	findCrossing
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Lgy;	b	direction
	f	Z	c	isTwoFloored
c	dma$c	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece
	m	(Ldkv;ILdmb$a;Ldjw;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		type
		p	4		box
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcfg;Ldjw;IIII)Z	a	isSupportingBox
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		maxX
		p	5		y
		p	6		z
	m	(Lcgb;Ldjw;)Z	a	isInInvalidLocation
		p	1		world
		p	2		box
	m	(Lcgd;IIILdjw;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcgs;Ldjw;Lcur;III)V	a	setPlanksBlock
		p	1		world
		p	2		box
		p	3		state
		p	4		x
		p	5		y
		p	6		z
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Ldmb$a;	a	type
c	dma$d	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom
	m	(ILalu;IILdmb$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		x
		p	4		z
		p	5		type
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$0
	f	Ljava/util/List;	b	childEntranceBoxes
c	dma$e	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs
	m	(ILdjw;Lgy;Ldmb$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;)Ldjw;	a	findStairs
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
c	dmb	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	m	(Ldke$c;Ldmb$a;)V	<init>	<init>
		p	1		config
		p	2		type
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldkw;Ldke$a;)I	a	generatePiecesAndAdjust
		p	1		collector
	m	(Ldmb;)Ldmb$a;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldmb$a;	e	type
c	dmb$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type
	m	(Ljava/lang/String;ILjava/lang/String;Lciw;Lciw;Lciw;)V	<init>	<init>
		p	3		name
		p	4		log
		p	5		planks
		p	6		fence
	m	()Ljava/lang/String;	a	getName
	m	(I)Ldmb$a;	a	byId
		p	0		index
	m	()Lcur;	b	getWoodState
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lcur;	d	getPlanksState
	m	()Lcur;	e	getFenceState
	m	()[Ldmb$a;	f	$values
	f	Ldmb$a;	a	NORMAL
	f	Ldmb$a;	b	MESA
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lcur;	e	woodState
	f	Lcur;	f	planksState
	f	Lcur;	g	fenceState
	f	[Ldmb$a;	h	$VALUES
c	dmc	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	m	(Ldmc$n;Ldkj;Lalu;IIILgy;I)Ldmc$m;	a	findAndCreateBridgePieceFactory
		p	0		pieceData
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	MAX_DEPTH
	f	I	c	LOWEST_Y_POSITION
	f	[Ldmc$n;	d	BRIDGE_PIECE_WEIGHTS
	f	[Ldmc$n;	e	CASTLE_PIECE_WEIGHTS
c	dmc$1	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dmc$a	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing
	m	(IILgy;)V	<init>	<init>
		p	1		x
		p	2		z
		p	3		orientation
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmc$a;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$b	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldkj;Lalu;IIILgy;I)Ldmc$b;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	selfSeed
c	dmc$c	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmc$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$d	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmc$d;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$e	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmc$e;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$f	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmc$f;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$g	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmc$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$h	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmc$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dmc$i	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmc$i;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$j	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmc$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dmc$k	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmc$k;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainlength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$l	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldkj;IIIILgy;)Ldmc$l;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainLength
		p	5		orientation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dmc$m	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece
	m	(Ldkv;ILdjw;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Ldjw;)Z	a	isOkBox
		p	0		boundingBox
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldmc$q;Ldkj;Lalu;IIILgy;IZ)Ldki;	a	generateAndAddPiece
		p	1		start
		p	2		holder
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		orientation
		p	8		chainLength
		p	9		inside
	m	(Ldmc$q;Ldkj;Lalu;IIZ)Ldki;	a	generateChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
		p	6		inside
	m	(Ldmc$q;Ljava/util/List;Ldkj;Lalu;IIILgy;I)Ldmc$m;	a	generatePiece
		p	1		start
		p	2		possiblePieces
		p	3		holder
		p	4		random
		p	5		x
		p	6		y
		p	7		z
		p	8		orientation
		p	9		chainLength
	m	(Ljava/util/List;)I	a	updatePieceWeight
		p	1		possiblePieces
	m	(Ldmc$q;Ldkj;Lalu;IIZ)Ldki;	b	generateChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
	m	(Ldmc$q;Ldkj;Lalu;IIZ)Ldki;	c	generateChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
c	dmc$n	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(Ljava/lang/Class;IIZ)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
		p	4		repeatable
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
	f	Z	e	allowInRow
c	dmc$o	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmc$o;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$p	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIIILgy;)Ldmc$p;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainlength
		p	5		orientation
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmc$q	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece
	m	(Lalu;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	f	Ldmc$n;	a	previousPiece
	f	Ljava/util/List;	b	availableBridgePieces
	f	Ljava/util/List;	c	availableCastlePieces
	f	Ljava/util/List;	d	pendingChildren
c	dmd	net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldkn;	e	type
	f	Laya;	d	FORTRESS_ENEMIES
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dme	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	m	(Ldnx;Ldkj;Lalu;Lgt;)V	a	addPieces
		p	0		manager
		p	1		holder
		p	2		random
		p	3		pos
	f	[Laaj;	a	FOSSILS
c	dme$a	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece
	m	(Ldnx;Laaj;Lgt;Lcoz;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Ldnx;Lpj;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcoz;)Ldns;	a	makeSettings
		p	0		rotation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lpj;Laaj;)Ldns;	a	lambda$new$0
		p	1		id
c	dmf	net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	m	(Ldke$c;Ldim;)V	<init>	<init>
		p	1		config
		p	2		height
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldar;Lgt;Ldkw;)V	a	lambda$findGenerationPoint$2
		p	0		collector
	m	(Ldmf;)Ldim;	a	lambda$static$0
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldim;	e	height
c	dmg	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces
c	dmg$1	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dmg$a	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$b	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$c	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$d	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$e	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$f	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$g	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$h	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding
	m	(Lalu;IILgy;)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lalu;Ldjw;)V	a	generateEntranceArchs
		p	1		world
		p	2		random
		p	3		box
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(ZILcgs;Lalu;Ldjw;)V	a	generateWing
		p	3		world
		p	4		random
		p	5		box
	m	(Lalu;)Ljava/util/List;	b	generateRoomGraph
		p	1		random
	m	(Lcgs;Lalu;Ldjw;)V	b	generateEntranceWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcgs;Lalu;Ldjw;)V	c	generateRoofPiece
		p	1		world
		p	2		random
		p	3		box
	m	(Lcgs;Lalu;Ldjw;)V	d	generateLowerWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcgs;Lalu;Ldjw;)V	e	generateMiddleWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcgs;Lalu;Ldjw;)V	f	generateUpperWall
		p	1		world
		p	2		random
		p	3		box
	f	I	C	WIDTH
	f	I	D	HEIGHT
	f	I	E	DEPTH
	f	I	F	TOP_POSITION
	f	Ldmg$v;	G	sourceRoom
	f	Ldmg$v;	H	coreRoom
	f	Ljava/util/List;	I	childPieces
	f	I	a	BIOME_RANGE_CHECK
c	dmg$i	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter
	m	(Ldmg$v;)Z	a	fits
		p	1		setting
	m	(Lgy;Ldmg$v;Lalu;)Ldmg$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dmg$j	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$k	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$l	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$m	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$n	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$o	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$p	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$q	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse
	m	(Lgy;Ldjw;)V	<init>	<init>
		p	1		orientation
		p	2		box
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$r	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece
	m	(Ldkv;ILgy;Ldmg$v;III)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		orientation
		p	4		setting
	m	(Ldkv;Lgy;ILdjw;)V	<init>	<init>
		p	1		type
		p	2		orientation
		p	3		length
		p	4		box
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcgs;Ldjw;III)Z	a	spawnElder
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Lcgs;Ldjw;IIIIIILcur;)V	a	generateBoxOnFillOnly
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
		p	9		state
	m	(Lcgs;Ldjw;IIZ)V	a	generateDefaultFloor
		p	1		world
		p	2		box
		p	3		x
		p	4		z
	m	(Ldjw;IIII)Z	a	chunkIntersects
		p	1		box
		p	2		x
		p	4		z
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgy;Ldmg$v;III)Ldjw;	a	makeBoundingBox
		p	0		orientation
		p	1		setting
	m	(Lcgs;Ldjw;IIIIII)V	b	generateWaterBox
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
	m	(III)I	c	getRoomIndex
		p	0		x
		p	1		y
		p	2		z
	f	I	A	PENTHOUSE_INDEX
	f	Ldmg$v;	B	roomDefinition
	f	Lcur;	b	BASE_GRAY
	f	Lcur;	c	BASE_LIGHT
	f	Lcur;	d	BASE_BLACK
	f	Lcur;	h	DOT_DECO_DATA
	f	Lcur;	i	LAMP_BLOCK
	f	Z	j	DO_FILL
	f	Lcur;	k	FILL_BLOCK
	f	Ljava/util/Set;	l	FILL_KEEP
	f	I	m	GRIDROOM_WIDTH
	f	I	n	GRIDROOM_DEPTH
	f	I	o	GRIDROOM_HEIGHT
	f	I	p	GRID_WIDTH
	f	I	q	GRID_DEPTH
	f	I	r	GRID_HEIGHT
	f	I	s	GRID_FLOOR_COUNT
	f	I	t	GRID_SIZE
	f	I	u	GRIDROOM_SOURCE_INDEX
	f	I	v	GRIDROOM_TOP_CONNECT_INDEX
	f	I	w	GRIDROOM_LEFTWING_CONNECT_INDEX
	f	I	x	GRIDROOM_RIGHTWING_CONNECT_INDEX
	f	I	y	LEFTWING_INDEX
	f	I	z	RIGHTWING_INDEX
c	dmg$s	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom
	m	(Lgy;Ldmg$v;Lalu;)V	<init>	<init>
		p	1		orientation
		p	2		setting
		p	3		random
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	dmg$t	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	m	(Lgy;Ldmg$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dmg$u	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom
	m	(Lgy;Ldjw;I)V	<init>	<init>
		p	1		orientation
		p	2		box
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	dmg$v	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition
	m	(I)V	<init>	<init>
		p	1		index
	m	()V	a	updateOpenings
	m	(I)Z	a	findSource
	m	(Lgy;Ldmg$v;)V	a	setConnection
		p	1		orientation
		p	2		setting
	m	()Z	b	isSpecial
	m	()I	c	countOpenings
	f	I	a	index
	f	[Ldmg$v;	b	connections
	f	[Z	c	hasOpening
	f	Z	d	claimed
	f	Z	e	isSource
	f	I	f	scanIndex
c	dmh	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Lcfh;JLdkt;)Ldkt;	a	regeneratePiecesAfterLoad
		p	0		pos
		p	1		worldSeed
		p	3		pieces
	m	(Lcfh;Ldar;)Ldki;	a	createTopPiece
		p	0		pos
		p	1		random
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dmi	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	m	(Lalu;)Laaj;	a	getSmallWarmRuin
		p	0		random
	m	(Lalu;Lgt;)Ljava/util/List;	a	allPositions
		p	0		random
		p	1		pos
	m	(Ldnx;Lalu;Lcoz;Lgt;Ldmj;Ldkj;)V	a	addClusterRuins
		p	0		manager
		p	1		random
		p	2		rotation
		p	3		pos
	m	(Ldnx;Lgt;Lcoz;Ldkj;Lalu;Ldmj;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
	m	(Ldnx;Lgt;Lcoz;Ldkj;Lalu;Ldmj;ZF)V	a	addPiece
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	6		large
		p	7		integrity
	m	(Lalu;)Laaj;	b	getBigWarmRuin
		p	0		random
	f	[Laaj;	a	WARM_RUINS
	f	[Laaj;	b	RUINS_BRICK
	f	[Laaj;	c	RUINS_CRACKED
	f	[Laaj;	d	RUINS_MOSSY
	f	[Laaj;	e	BIG_RUINS_BRICK
	f	[Laaj;	f	BIG_RUINS_MOSSY
	f	[Laaj;	g	BIG_RUINS_CRACKED
	f	[Laaj;	h	BIG_WARM_RUINS
c	dmi$1	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$OceanRuinStructure$Type
c	dmi$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece
	m	(Ldnx;Laaj;Lgt;Lcoz;FLdmj$a;Z)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		integrity
		p	6		biomeType
		p	7		large
	m	(Ldnx;Lpj;)V	<init>	<init>
		p	1		holder
		p	2		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcoz;)Ldns;	a	makeSettings
		p	0		rotation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgt;Lcfg;Lgt;)I	a	getHeight
		p	1		start
		p	2		world
		p	3		end
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lpj;Laaj;)Ldns;	a	lambda$new$0
	f	Ldmj$a;	h	biomeType
	f	F	i	integrity
	f	Z	j	isLarge
c	dmj	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	m	(Ldke$c;Ldmj$a;FF)V	<init>	<init>
		p	1		config
		p	2		biomeTemperature
		p	3		largeProbability
		p	4		clusterProbability
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$4
		p	2		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Ldmj;)Ljava/lang/Float;	a	lambda$static$2
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Ldmj;)Ljava/lang/Float;	b	lambda$static$1
		p	0		structure
	m	(Ldmj;)Ldmj$a;	c	lambda$static$0
		p	0		structure
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldmj$a;	e	biomeTemp
	f	F	f	largeProbability
	f	F	g	clusterProbability
c	dmj$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldmj$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldmj$a;	a	WARM
	f	Ldmj$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Ldmj$a;	e	$VALUES
c	dmk	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	m	(Ldnx;Lgt;Ldmk$b;Ldmk$a;Laaj;Ldnw;Lcoz;Lcnk;Lgt;)V	<init>	<init>
		p	1		manager
		p	2		pos
		p	3		verticalPlacement
		p	4		properties
		p	5		id
		p	6		template
		p	7		rotation
		p	8		mirror
	m	(Ldnx;Lpj;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lalu;Lcgb;)V	a	addNetherrackDripColumnsBelowPortal
		p	1		random
		p	2		world
	m	(Lalu;Lcgb;Lgt;)V	a	maybeAddVines
		p	1		random
		p	2		world
		p	3		pos
	m	(Lalu;Lcgs;Lgt;)V	a	lambda$postProcess$2
		p	3		pos
	m	(Lcgb;IILdmk$b;)I	a	getSurfaceY
		p	0		world
		p	1		x
		p	2		y
		p	3		verticalPlacement
	m	(Lcgb;Lgt;)Z	a	canBlockBeReplacedByNetherrackOrMagma
		p	1		world
		p	2		pos
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lciw;FLciw;)Ldnl;	a	getBlockReplaceRule
		p	0		old
		p	1		chance
		p	2		updated
	m	(Lciw;Lciw;)Ldnl;	a	getBlockReplaceRule
		p	0		old
		p	1		updated
	m	(Lcnk;Lcoz;Ldmk$b;Lgt;Ldmk$a;)Ldns;	a	makeSettings
		p	0		mirror
		p	1		rotation
		p	2		verticalPlacement
		p	3		pos
		p	4		properties
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldmk$b;)Lczu$a;	a	getHeightMapType
		p	0		verticalPlacement
	m	(Ldmk$b;Ldmk$a;)Ldnl;	a	getLavaProcessorRule
		p	0		verticalPlacement
		p	1		properties
	m	(Ldnx;Lpj;Laaj;)Ldns;	a	makeSettings
		p	0		manager
		p	1		nbt
		p	2		id
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lpj;Lqc;)V	a	lambda$addAdditionalSaveData$1
	m	(Lalu;Lcgb;)V	b	spreadNetherrack
		p	1		random
		p	2		world
	m	(Lalu;Lcgb;Lgt;)V	b	maybeAddLeavesAbove
		p	1		random
		p	2		world
		p	3		pos
	m	(Ldnx;Lpj;Laaj;)Ldns;	b	lambda$new$0
		p	2		id
	m	(Lalu;Lcgb;Lgt;)V	c	addNetherrackDripColumn
		p	1		random
		p	2		world
		p	3		pos
	m	(Lalu;Lcgb;Lgt;)V	d	placeNetherrackOrMagma
		p	1		random
		p	2		world
		p	3		pos
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	F	i	PROBABILITY_OF_GOLD_GONE
	f	F	j	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	f	F	k	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	f	Ldmk$b;	l	verticalPlacement
	f	Ldmk$a;	m	properties
c	dmk$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties
	m	(ZFZZZZ)V	<init>	<init>
		p	1		cold
		p	2		mossiness
		p	3		airPocket
		p	4		overgrown
		p	5		vines
		p	6		replaceWithBlackstone
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldmk$a;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Ldmk$a;)Ljava/lang/Boolean;	b	lambda$static$4
	m	(Ldmk$a;)Ljava/lang/Boolean;	c	lambda$static$3
	m	(Ldmk$a;)Ljava/lang/Boolean;	d	lambda$static$2
	m	(Ldmk$a;)Ljava/lang/Float;	e	lambda$static$1
	m	(Ldmk$a;)Ljava/lang/Boolean;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	cold
	f	F	c	mossiness
	f	Z	d	airPocket
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	replaceWithBlackstone
c	dmk$b	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Ldmk$b;	a	byName
		p	0		id
	m	()[Ldmk$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldmk$b;	a	ON_LAND_SURFACE
	f	Ldmk$b;	b	PARTLY_BURIED
	f	Ldmk$b;	c	ON_OCEAN_FLOOR
	f	Ldmk$b;	d	IN_MOUNTAIN
	f	Ldmk$b;	e	UNDERGROUND
	f	Ldmk$b;	f	IN_NETHER
	f	Lamd$a;	g	CODEC
	f	Ljava/lang/String;	h	name
	f	[Ldmk$b;	i	$VALUES
c	dml	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	m	(Ldke$c;Ldml$a;)V	<init>	<init>
		p	1		config
		p	2		setup
	m	(Ldke$c;Ljava/util/List;)V	<init>	<init>
		p	1		config
		p	2		setups
	m	(Lalu;II)I	a	getRandomWithinInterval
		p	0		random
		p	1		min
		p	2		max
	m	(Lalu;Lcwn;Ldmk$b;ZIILdjw;Lcgc;Ldai;)I	a	findSuitableY
		p	0		random
		p	1		chunkGenerator
		p	2		verticalPlacement
		p	3		airPocket
		p	4		height
		p	5		blockCountY
		p	6		box
		p	7		world
		p	8		noiseConfig
	m	(Lcwn;Lcgc;Ldai;Lgt;)Lcgm;	a	lambda$findSuitableY$3
	m	(Ldar;F)Z	a	sample
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldml$a;Ldmk$a;Lgt;Ldke$a;Ldai;Laaj;Ldnw;Lcoz;Lcnk;Lgt;Ldkw;)V	a	lambda$findGenerationPoint$2
	m	(Ldml;)Ljava/util/List;	a	lambda$static$0
		p	0		structure
	m	(Lgt;Lhc;)Z	a	isCold
		p	0		pos
		p	1		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	[Ljava/lang/String;	e	STRUCTURE_LOCATION_PORTALS
	f	[Ljava/lang/String;	f	STRUCTURE_LOCATION_GIANT_PORTALS
	f	F	g	PROBABILITY_OF_GIANT_PORTAL
	f	I	h	MIN_Y_INDEX
	f	Ljava/util/List;	i	setups
c	dml$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup
	m	()Ldmk$b;	a	placement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()F	b	airPocketProbability
	m	()F	c	mossiness
	m	()Z	d	overgrown
	m	()Z	e	vines
	m	()Z	f	canBeCold
	m	()Z	g	replaceWithBlackstone
	m	()F	h	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldmk$b;	b	placement
	f	F	c	airPocketProbability
	f	F	d	mossiness
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	canBeCold
	f	Z	h	replaceWithBlackstone
	f	F	i	weight
c	dmm	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	m	(Ldnx;Lgt;Lcoz;Ldkj;Lalu;Z)V	a	addPieces
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
	f	Lgt;	a	PIVOT
	f	[Laaj;	b	STRUCTURE_LOCATION_BEACHED
	f	[Laaj;	c	STRUCTURE_LOCATION_OCEAN
	f	Ljava/util/Map;	d	MARKERS_TO_LOOT
c	dmm$a	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece
	m	(Ldnx;Laaj;Lgt;Lcoz;Z)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		grounded
	m	(Ldnx;Lpj;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcoz;)Ldns;	a	makeSettings
		p	0		rotation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lpj;Laaj;)Ldns;	a	lambda$new$0
	f	Z	h	isBeached
c	dmn	net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	m	(Ldke$c;Z)V	<init>	<init>
		p	1		config
		p	2		beached
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$2
		p	2		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Ldmn;)Ljava/lang/Boolean;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Z	e	isBeached
c	dmo	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	m	()V	a	resetPieces
	m	(Ldmo$m;Ldkj;Lalu;IIILgy;I)Ldmo$p;	a	generatePieceFromSmallDoor
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Ljava/lang/Class;Ldkj;Lalu;IIILgy;I)Ldmo$p;	a	findAndCreatePieceFactory
		p	0		pieceType
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	()Z	b	updatePieceWeight
	m	(Ldmo$m;Ldkj;Lalu;IIILgy;I)Ldki;	b	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	SMALL_DOOR_WIDTH
	f	I	c	SMALL_DOOR_HEIGHT
	f	I	d	MAX_DEPTH
	f	I	e	LOWEST_Y_POSITION
	f	Z	f	CHECK_AIR
	f	[Ldmo$f;	g	STRONGHOLD_PIECE_WEIGHTS
	f	Ljava/util/List;	h	currentPieces
	f	Ljava/lang/Class;	i	imposedPiece
	f	I	j	totalWeight
	f	Ldmo$k;	k	SMOOTH_STONE_SELECTOR
c	dmo$1	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$1
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	dmo$2	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$2
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	dmo$3	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$3
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$StrongholdPieces$StrongholdPiece$SmallDoorType
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	dmo$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$a;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainlength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedChest
c	dmo$b	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldkj;Lalu;IIILgy;)Ldjw;	a	findPieceBox
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	steps
c	dmo$c	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftLow
	f	Z	i	leftHigh
	f	Z	j	rightLow
	f	Z	k	rightHigh
c	dmo$d	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$d;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	dmo$e	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$e;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	TALL_HEIGHT
	f	I	d	DEPTH
	f	Z	i	isTall
c	dmo$f	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
c	dmo$g	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom
	m	(ILdjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;IIILgy;I)Ldmo$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dmo$h	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmo$i	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$i;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	dmo$j	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	type
c	dmo$k	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector
	m	(Lalu;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	dmo$l	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Ldkv;IIILgy;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		x
		p	4		z
		p	5		orientation
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$l;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isSource
c	dmo$m	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece
	m	(Lalu;II)V	<init>	<init>
		p	1		random
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	()Lgt;	h	getLocatorPosition
	f	Ldmo$f;	a	previousPiece
	f	Ldmo$g;	b	portalRoomPiece
	f	Ljava/util/List;	c	pendingChildren
c	dmo$n	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$n;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftChild
	f	Z	i	rightChild
c	dmo$o	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown
	m	(ILalu;Ldjw;Lgy;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldki;Ldkj;Lalu;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldkj;Lalu;IIILgy;I)Ldmo$o;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmo$p	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece
	m	(Ldkv;ILdjw;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcgs;Lalu;Ldjw;Ldmo$p$a;III)V	a	generateSmallDoor
		p	1		world
		p	2		random
		p	3		boundingBox
		p	4		type
		p	5		x
		p	6		y
		p	7		z
	m	(Ldjw;)Z	a	isOkBox
		p	0		boundingBox
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldmo$m;Ldkj;Lalu;II)Ldki;	a	generateSmallDoorChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
	m	(Lalu;)Ldmo$p$a;	b	randomSmallDoor
		p	1		random
	m	(Ldmo$m;Ldkj;Lalu;II)Ldki;	b	generateSmallDoorChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	m	(Ldmo$m;Ldkj;Lalu;II)Ldki;	c	generateSmallDoorChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	f	Ldmo$p$a;	h	entryDoor
c	dmo$p$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType
	m	()[Ldmo$p$a;	a	$values
	f	Ldmo$p$a;	a	OPENING
	f	Ldmo$p$a;	b	WOOD_DOOR
	f	Ldmo$p$a;	c	GRATES
	f	Ldmo$p$a;	d	IRON_DOOR
	f	[Ldmo$p$a;	e	$VALUES
c	dmo$q	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn
	m	(Ldkv;ILdjw;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldkv;Lpj;)V	<init>	<init>
		p	1		type
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dmp	net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dmq	net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	m	(Lalu;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lpj;)V	<init>	<init>
		p	1		nbt
	m	(Lcgp;Ldjw;)V	a	spawnCat
		p	1		world
		p	2		box
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Z	h	spawnedWitch
	f	Z	i	spawnedCat
c	dmr	net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldkw;Ldke$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dms	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	m	(Ldnx;Lgt;Lcoz;Ljava/util/List;Lalu;)V	a	generateMansion
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
	m	([Ljava/lang/String;)V	a	main
		p	0		args
c	dms$a	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection
	m	(Lalu;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lalu;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lalu;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lalu;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lalu;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lalu;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lalu;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dms$b	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection
	m	(Lalu;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lalu;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lalu;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lalu;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lalu;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lalu;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lalu;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dms$c	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid
	m	(Lalu;)V	<init>	<init>
		p	1		random
	m	()V	a	print
	m	(Ldms$g;)Z	a	cleanEdges
		p	1		layout
	m	(Ldms$g;II)Z	a	isHouse
		p	0		layout
		p	1		i
		p	2		j
	m	(Ldms$g;IIII)Z	a	isRoomId
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	m	(Ldms$g;IILgy;I)V	a	recursiveCorridor
		p	1		layout
		p	2		i
		p	3		j
		p	4		direction
		p	5		length
	m	(Ldms$g;Ldms$g;)V	a	identifyRooms
		p	1		layout
		p	2		roomFlags
	m	()V	b	setupThirdFloor
	m	(Ldms$g;IIII)Lgy;	b	get1x2RoomDirection
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	f	I	a	DEFAULT_SIZE
	f	I	b	CLEAR
	f	I	c	CORRIDOR
	f	I	d	ROOM
	f	I	e	START_ROOM
	f	I	f	TEST_ROOM
	f	I	g	BLOCKED
	f	I	h	ROOM_1x1
	f	I	i	ROOM_1x2
	f	I	j	ROOM_2x2
	f	I	k	ROOM_ORIGIN_FLAG
	f	I	l	ROOM_DOOR_FLAG
	f	I	m	ROOM_STAIRS_FLAG
	f	I	n	ROOM_CORRIDOR_FLAG
	f	I	o	ROOM_TYPE_MASK
	f	I	p	ROOM_ID_MASK
	f	Lalu;	q	random
	f	Ldms$g;	r	baseGrid
	f	Ldms$g;	s	thirdFloorGrid
	f	[Ldms$g;	t	floorRooms
	f	I	u	entranceX
	f	I	v	entranceY
c	dms$d	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer
	m	(Ldnx;Lalu;)V	<init>	<init>
		p	1		manager
		p	2		random
	m	(Lgt;Lcoz;Ljava/util/List;Ldms$c;)V	a	createMansion
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		parameters
	m	(Ljava/util/List;Ldms$e;)V	a	entrance
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldms$e;Ldms$g;Lgy;IIII)V	a	traverseOuterWalls
		p	1		pieces
		p	2		wallPiece
		p	3		layout
		p	4		direction
		p	5		startI
		p	6		startJ
		p	7		endI
		p	8		endJ
	m	(Ljava/util/List;Lgt;Lcoz;Ldms$b;)V	a	addRoom2x2Secret
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		pool
	m	(Ljava/util/List;Lgt;Lcoz;Ldms$g;Ldms$g;)V	a	createRoof
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		layout
		p	5		nextFloorLayout
	m	(Ljava/util/List;Lgt;Lcoz;Lgy;Ldms$b;)V	a	addRoom1x1
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		direction
		p	5		pool
	m	(Ljava/util/List;Lgt;Lcoz;Lgy;Lgy;Ldms$b;)V	a	addRoom2x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
	m	(Ljava/util/List;Lgt;Lcoz;Lgy;Lgy;Ldms$b;Z)V	a	addRoom1x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
		p	7		staircase
	m	(Ljava/util/List;Ldms$e;)V	b	traverseWallPiece
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldms$e;)V	c	traverseTurn
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldms$e;)V	d	traverseInnerTurn
		p	1		pieces
		p	2		wallPiece
	f	Ldnx;	a	structureTemplateManager
	f	Lalu;	b	random
	f	I	c	startX
	f	I	d	startY
c	dms$e	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData
	f	Lcoz;	a	rotation
	f	Lgt;	b	position
	f	Ljava/lang/String;	c	wallType
c	dms$f	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection
	m	(Lalu;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lalu;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lalu;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lalu;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lalu;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lalu;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lalu;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dms$g	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid
	m	(III)V	<init>	<init>
		p	1		n
		p	2		m
		p	3		fallback
	m	(II)I	a	get
		p	1		i
		p	2		j
	m	(III)V	a	set
		p	1		i
		p	2		j
		p	3		value
	m	(IIII)V	a	setif
		p	1		i
		p	2		j
		p	3		expected
		p	4		newValue
	m	(IIIII)V	a	set
		p	1		i0
		p	2		j0
		p	3		i1
		p	4		j1
		p	5		value
	m	(III)Z	b	edgesTo
		p	1		i
		p	2		j
		p	3		value
	f	[[I	a	grid
	f	I	b	width
	f	I	c	height
	f	I	d	valueIfOutside
c	dms$h	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection
c	dms$i	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece
	m	(Ldnx;Ljava/lang/String;Lgt;Lcoz;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Ldnx;Ljava/lang/String;Lgt;Lcoz;Lcnk;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		mirror
	m	(Ldnx;Lpj;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcnk;Lcoz;)Ldns;	a	makeSettings
		p	0		mirror
		p	1		rotation
	m	(Ldku;Lpj;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Laaj;	a	makeLocation
		p	0		identifier
	m	(Ljava/lang/String;Lgt;Lcgp;Lalu;Ldjw;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lpj;Laaj;)Ldns;	a	lambda$new$0
		p	1		id
	m	()Laaj;	b	makeTemplateLocation
c	dmt	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	m	(Ldke$c;)V	<init>	<init>
		p	1		config
	m	(Lcgs;Lcgr;Lcwn;Lalu;Ldjw;Lcfh;Ldkt;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Ldke$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldke$a;Lgt;Lcoz;Ldkw;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	(Ldkw;Ldke$a;Lgt;Lcoz;)V	a	generatePieces
		p	1		collector
		p	2		context
		p	3		pos
		p	4		rotation
	m	()Ldkn;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dmu	net/minecraft/world/level/levelgen/structure/structures/package-info
c	dmv	net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	m	()Ldnr;	a	getType
	m	(Lcur;Lalu;)Z	a	test
		p	1		state
		p	2		random
	m	()Ldmv;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldmv;	b	INSTANCE
c	dmw	net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	m	(FFIILgy$a;)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
		p	5		axis
	m	()Ldnk;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldmw;)Lgy$a;	a	lambda$static$4
		p	0		ruleTest
	m	(Lgt;Lgt;Lgt;Lalu;)Z	a	test
		p	3		pivot
		p	4		random
	m	(Ldmw;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		ruleTest
	m	(Ldmw;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		ruleTest
	m	(Ldmw;)Ljava/lang/Float;	d	lambda$static$1
		p	0		ruleTest
	m	(Ldmw;)Ljava/lang/Float;	e	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
	f	Lgy$a;	g	axis
c	dmx	net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ljava/util/HashMap;)V	a	lambda$new$1
		p	0		replacements
	m	()Ldmx;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldmx;	b	INSTANCE
	f	Ljava/util/Map;	c	replacements
c	dmy	net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	m	(F)V	<init>	<init>
		p	1		mossiness
	m	()Ldnv;	a	getType
	m	(Lalu;)Lcur;	a	maybeReplaceFullStoneBlock
		p	1		random
	m	(Lalu;Lciw;)Lcur;	a	getRandomFacingStairs
		p	0		random
		p	1		stairs
	m	(Lalu;Lcur;)Lcur;	a	maybeReplaceStairs
		p	1		random
		p	2		state
	m	(Lalu;[Lcur;)Lcur;	a	getRandomBlock
		p	0		random
		p	1		states
	m	(Lalu;[Lcur;[Lcur;)Lcur;	a	getRandomBlock
		p	1		random
		p	2		regularStates
		p	3		mossyStates
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldmy;)Ljava/lang/Float;	a	lambda$static$0
		p	0		processor
	m	(Lalu;)Lcur;	b	maybeReplaceSlab
		p	1		random
	m	(Lalu;)Lcur;	c	maybeReplaceWall
		p	1		random
	m	(Lalu;)Lcur;	d	maybeReplaceObsidian
		p	1		random
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	PROBABILITY_OF_REPLACING_FULL_BLOCK
	f	F	c	PROBABILITY_OF_REPLACING_STAIRS
	f	F	d	PROBABILITY_OF_REPLACING_OBSIDIAN
	f	[Lcur;	e	NON_MOSSY_REPLACEMENTS
	f	F	f	mossiness
c	dmz	net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldmz;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldmz;	b	STRUCTURE_BLOCK
	f	Ldmz;	c	AIR
	f	Ldmz;	d	STRUCTURE_AND_AIR
	f	Lcom/google/common/collect/ImmutableList;	e	toIgnore
c	dna	net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	m	(Lciw;)V	<init>	<init>
		p	1		block
	m	()Ldnr;	a	getType
	m	(Lcur;Lalu;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldna;)Lciw;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lciw;	b	block
c	dnb	net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	m	(F)V	<init>	<init>
		p	1		integrity
	m	(Lakh;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	(Ljava/util/Optional;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldnb;)Ljava/lang/Float;	a	lambda$static$1
		p	0		processor
	m	(Ldnb;)Ljava/util/Optional;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	rottableBlocks
	f	F	c	integrity
c	dnc	net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	m	(Lcur;)V	<init>	<init>
		p	1		blockState
	m	()Ldnr;	a	getType
	m	(Lcur;Lalu;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldnc;)Lcur;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcur;	b	blockState
c	dnd	net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	m	(Lczu$a;I)V	<init>	<init>
		p	1		heightmap
		p	2		offset
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldnd;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		processor
	m	(Ldnd;)Lczu$a;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lczu$a;	b	heightmap
	f	I	c	offset
c	dne	net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Ldne;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldne;	b	INSTANCE
c	dnf	net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Ldnf;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldnf;	b	INSTANCE
c	dng	net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	m	(FFII)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
	m	()Ldnk;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldng;)Ljava/lang/Integer;	a	lambda$static$3
		p	0		ruleTest
	m	(Lgt;Lgt;Lgt;Lalu;)Z	a	test
		p	3		pivot
		p	4		random
	m	(Ldng;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		ruleTest
	m	(Ldng;)Ljava/lang/Float;	c	lambda$static$1
		p	0		ruleTest
	m	(Ldng;)Ljava/lang/Float;	d	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
c	dnh	net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Ldnh;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldnh;	b	INSTANCE
c	dni	net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	m	()Ldnk;	a	getType
	m	(Lgt;Lgt;Lgt;Lalu;)Z	a	test
		p	3		pivot
		p	4		random
	m	()Ldni;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldni;	b	INSTANCE
c	dnj	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	m	()Ldnk;	a	getType
	m	(Lgt;Lgt;Lgt;Lalu;)Z	a	test
		p	3		pivot
		p	4		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dnk	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldnk;	a	register
		p	0		id
		p	1		codec
	f	Ldnk;	a	ALWAYS_TRUE_TEST
	f	Ldnk;	b	LINEAR_POS_TEST
	f	Ldnk;	c	AXIS_ALIGNED_LINEAR_POS_TEST
c	dnl	net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	m	(Ldnq;Ldnq;Lcur;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		state
	m	(Ldnq;Ldnq;Ldnj;Lcur;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		state
	m	(Ldnq;Ldnq;Ldnj;Lcur;Ljava/util/Optional;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		outputState
		p	5		nbt
	m	()Lcur;	a	getOutputState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lcur;Lcur;Lgt;Lgt;Lgt;Lalu;)Z	a	test
		p	1		input
		p	2		location
		p	5		pivot
		p	6		random
	m	(Ldnl;)Ljava/util/Optional;	a	lambda$static$4
		p	0		rule
	m	()Lpj;	b	getOutputTag
	m	(Ldnl;)Lcur;	b	lambda$static$3
		p	0		rule
	m	(Ldnl;)Ldnj;	c	lambda$static$2
		p	0		rule
	m	(Ldnl;)Ldnq;	d	lambda$static$1
		p	0		rule
	m	(Ldnl;)Ldnq;	e	lambda$static$0
		p	0		rule
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldnq;	b	inputPredicate
	f	Ldnq;	c	locPredicate
	f	Ldnj;	d	posPredicate
	f	Lcur;	e	outputState
	f	Lpj;	f	outputTag
c	dnm	net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	m	(Lakh;)V	<init>	<init>
		p	1		protectedBlocksTag
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldnm;)Lakh;	a	lambda$static$0
		p	0		processor
	f	Lakh;	a	cannotReplace
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dnn	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	m	(Lciw;F)V	<init>	<init>
		p	1		block
		p	2		probability
	m	()Ldnr;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcur;Lalu;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldnn;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Ldnn;)Lciw;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lciw;	b	block
	f	F	d	probability
c	dno	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	m	(Lcur;F)V	<init>	<init>
		p	1		blockState
		p	2		probability
	m	()Ldnr;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcur;Lalu;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldno;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Ldno;)Lcur;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcur;	b	blockState
	f	F	d	probability
c	dnp	net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		rules
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldnp;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableList;	b	rules
c	dnq	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	m	()Ldnr;	a	getType
	m	(Lcur;Lalu;)Z	a	test
		p	1		state
		p	2		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dnr	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldnr;	a	register
		p	0		id
		p	1		codec
	f	Ldnr;	a	ALWAYS_TRUE_TEST
	f	Ldnr;	b	BLOCK_TEST
	f	Ldnr;	c	BLOCKSTATE_TEST
	f	Ldnr;	d	TAG_TEST
	f	Ldnr;	e	RANDOM_BLOCK_TEST
	f	Ldnr;	f	RANDOM_BLOCKSTATE_TEST
c	dns	net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	m	()Ldns;	a	copy
	m	(Lalu;)Ldns;	a	setRandom
		p	1		random
	m	(Lcnk;)Ldns;	a	setMirror
		p	1		mirror
	m	(Lcoz;)Ldns;	a	setRotation
		p	1		rotation
	m	(Ldjw;)Ldns;	a	setBoundingBox
		p	1		boundingBox
	m	(Ldnt;)Ldns;	a	addProcessor
		p	1		processor
	m	(Lgt;)Ldns;	a	setRotationPivot
		p	1		position
	m	(Ljava/util/List;Lgt;)Ldnw$a;	a	getRandomPalette
		p	2		pos
	m	(Z)Ldns;	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Ldns;	b	clearProcessors
	m	(Ldnt;)Ldns;	b	popProcessor
		p	1		processor
	m	(Lgt;)Lalu;	b	getRandom
		p	1		pos
	m	(Z)Ldns;	b	setKeepLiquids
		p	1		placeFluids
	m	()Lcnk;	c	getMirror
	m	(Z)Ldns;	c	setKnownShape
		p	1		updateNeighbors
	m	()Lcoz;	d	getRotation
	m	(Z)Ldns;	d	setFinalizeEntities
		p	1		initializeMobs
	m	()Lgt;	e	getRotationPivot
	m	()Z	f	isIgnoreEntities
	m	()Ldjw;	g	getBoundingBox
	m	()Z	h	getKnownShape
	m	()Ljava/util/List;	i	getProcessors
	m	()Z	j	shouldKeepLiquids
	m	()Z	k	shouldFinalizeEntities
	f	Lcnk;	a	mirror
	f	Lcoz;	b	rotation
	f	Lgt;	c	rotationPivot
	f	Z	d	ignoreEntities
	f	Ldjw;	e	boundingBox
	f	Z	f	keepLiquids
	f	Lalu;	g	random
	f	I	h	palette
	f	Ljava/util/List;	i	processors
	f	Z	j	knownShape
	f	Z	k	finalizeEntities
c	dnt	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	m	()Ldnv;	a	getType
	m	(Lcgd;Lgt;Lgt;Ldnw$c;Ldnw$c;Ldns;)Ldnw$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
c	dnu	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Ljava/util/List;	a	list
	f	Ljava/util/List;	a	list
c	dnv	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	m	(Lcom/mojang/datafixers/util/Either;)Ldnu;	a	lambda$static$2
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$3
	m	(Ldnu;)Ldnu;	a	lambda$static$1
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldnv;	a	register
		p	0		id
		p	1		codec
	m	(Ldnu;)Ldnu;	b	lambda$static$0
	f	Ldnv;	a	BLOCK_IGNORE
	f	Ldnv;	b	BLOCK_ROT
	f	Ldnv;	c	GRAVITY
	f	Ldnv;	d	JIGSAW_REPLACEMENT
	f	Ldnv;	e	RULE
	f	Ldnv;	f	NOP
	f	Ldnv;	g	BLOCK_AGE
	f	Ldnv;	h	BLACKSTONE_REPLACE
	f	Ldnv;	i	LAVA_SUBMERGED_BLOCK
	f	Ldnv;	j	PROTECTED_BLOCKS
	f	Lcom/mojang/serialization/Codec;	k	SINGLE_CODEC
	f	Lcom/mojang/serialization/Codec;	l	LIST_OBJECT_CODEC
	f	Lcom/mojang/serialization/Codec;	m	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	n	LIST_CODEC
c	dnw	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	m	()Lhs;	a	getSize
	m	(IIILcgb;ILgy;III)V	a	lambda$updateShapeAtEdge$4
		p	5		direction
		p	6		x
		p	7		y
		p	8		z
	m	(Lbaq;)Z	a	lambda$fillEntityList$3
		p	0		entity
	m	(Lcga;Lgt;Lgt;)V	a	fillEntityList
		p	1		world
		p	2		firstCorner
		p	3		secondCorner
	m	(Lcga;Lgt;Lhs;ZLciw;)V	a	fillFromWorld
		p	1		world
		p	2		start
		p	3		dimensions
		p	4		includeEntities
		p	5		ignoredBlock
	m	(Lcgb;ILdwc;III)V	a	updateShapeAtEdge
		p	0		world
		p	1		flags
		p	2		set
		p	3		startX
		p	4		startY
		p	5		startZ
	m	(Lcgb;Lgt;Lgt;Ldns;Ljava/util/List;)Ljava/util/List;	a	processBlockInfos
		p	0		world
		p	1		pos
		p	2		pivot
		p	3		placementData
		p	4		infos
	m	(Lcgp;Lgt;Lcnk;Lcoz;Lgt;Ldjw;Z)V	a	placeEntities
		p	1		world
		p	2		pos
		p	3		mirror
		p	4		rotation
		p	5		pivot
		p	6		area
		p	7		initializeMobs
	m	(Lcgp;Lgt;Lgt;Ldns;Lalu;I)Z	a	placeInWorld
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		placementData
		p	5		random
		p	6		flags
	m	(Lcgp;Lpj;)Ljava/util/Optional;	a	createEntityIgnoreException
		p	0		world
		p	1		nbt
	m	(Lcoz;)Lhs;	a	getSize
		p	1		rotation
	m	(Lcoz;Lcnk;Ldvt;ZLcgp;Lpj;Lbaq;)V	a	lambda$placeEntities$5
		p	6		entity
	m	(Ldns;Lgt;)Lgt;	a	calculateRelativePosition
		p	0		placementData
		p	1		pos
	m	(Ldns;Lgt;Ldns;Lgt;)Lgt;	a	calculateConnectedPosition
		p	1		placementData1
		p	2		pos1
		p	3		placementData2
		p	4		pos2
	m	(Ldnw$c;)I	a	lambda$buildInfoList$2
		p	0		blockInfo
	m	(Ldnw$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	a	addToLists
		p	0		blockInfo
		p	1		fullBlocks
		p	2		blocksWithNbt
		p	3		otherBlocks
	m	(Ldvt;Lcnk;Lcoz;Lgt;)Ldvt;	a	transform
		p	0		point
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Lgt;Lcnk;Lcoz;)Lgt;	a	getZeroPositionWithTransform
		p	1		pos
		p	2		mirror
		p	3		rotation
	m	(Lgt;Lcnk;Lcoz;II)Lgt;	a	getZeroPositionWithTransform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		offsetX
		p	4		offsetZ
	m	(Lgt;Lcnk;Lcoz;Lgt;)Lgt;	a	transform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Lgt;Lcoz;Lgt;Lcnk;)Ldjw;	a	getBoundingBox
		p	1		pos
		p	2		rotation
		p	3		pivot
		p	4		mirror
	m	(Lgt;Lcoz;Lgt;Lcnk;Lhs;)Ldjw;	a	getBoundingBox
		p	0		pos
		p	1		rotation
		p	2		pivot
		p	3		mirror
		p	4		dimensions
	m	(Lgt;Ldns;Lciw;)Ljava/util/List;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
	m	(Lgt;Ldns;Lciw;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
		p	4		transformed
	m	(Ljava/lang/String;)V	a	setAuthor
		p	1		author
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	buildInfoList
		p	0		fullBlocks
		p	1		blocksWithNbt
		p	2		otherBlocks
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lpp;Lpp;)V	a	loadPalette
		p	1		paletteNbt
		p	2		blocksNbt
	m	([D)Lpp;	a	newDoubleList
		p	1		doubles
	m	([I)Lpp;	a	newIntegerList
		p	1		ints
	m	()Ljava/lang/String;	b	getAuthor
	m	(Ldns;Lgt;)Ldjw;	b	getBoundingBox
		p	1		placementData
		p	2		pos
	m	(Ldnw$c;)I	b	lambda$buildInfoList$1
		p	0		blockInfo
	m	(Lpj;)V	b	load
		p	1		nbt
	m	(Ldnw$c;)I	c	lambda$buildInfoList$0
		p	0		blockInfo
	f	Ljava/lang/String;	a	PALETTE_TAG
	f	Ljava/lang/String;	b	PALETTE_LIST_TAG
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	BLOCKS_TAG
	f	Ljava/lang/String;	e	BLOCK_TAG_POS
	f	Ljava/lang/String;	f	BLOCK_TAG_STATE
	f	Ljava/lang/String;	g	BLOCK_TAG_NBT
	f	Ljava/lang/String;	h	ENTITY_TAG_POS
	f	Ljava/lang/String;	i	ENTITY_TAG_BLOCKPOS
	f	Ljava/lang/String;	j	ENTITY_TAG_NBT
	f	Ljava/lang/String;	k	SIZE_TAG
	f	I	l	CHUNK_SIZE
	f	Ljava/util/List;	m	palettes
	f	Ljava/util/List;	n	entityInfoList
	f	Lhs;	o	size
	f	Ljava/lang/String;	p	author
c	dnw$1	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dnw$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		infos
	m	()Ljava/util/List;	a	blocks
	m	(Lciw;)Ljava/util/List;	a	blocks
		p	1		block
	m	(Lciw;Ldnw$c;)Z	a	lambda$blocks$0
		p	1		info
	m	(Lciw;)Ljava/util/List;	b	lambda$blocks$1
		p	1		block2
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/Map;	b	cache
c	dnw$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	m	(I)Lcur;	a	stateFor
		p	1		id
	m	(Lcur;)I	a	idFor
		p	1		state
	m	(Lcur;I)V	a	addMapping
		p	1		state
		p	2		id
	f	Lcur;	a	DEFAULT_BLOCK_STATE
	f	Lhg;	b	ids
	f	I	c	lastId
c	dnw$c	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	m	(Lgt;Lcur;Lpj;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		nbt
	f	Lgt;	a	pos
	f	Lcur;	b	state
	f	Lpj;	c	nbt
c	dnw$d	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	m	(Ldvt;Lgt;Lpj;)V	<init>	<init>
		p	1		pos
		p	2		blockPos
		p	3		nbt
	f	Ldvt;	a	pos
	f	Lgt;	b	blockPos
	f	Lpj;	c	nbt
c	dnx	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	m	(Lahu;Ldqt$c;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		resourceManager
		p	2		session
		p	3		dataFixer
	m	()Ljava/util/stream/Stream;	a	listTemplates
	m	(ILjava/lang/String;)Ljava/lang/String;	a	lambda$listFolderContents$9
		p	1		filename
	m	(Laaj;)Ldnw;	a	getOrCreate
		p	1		id
	m	(Laaj;Ljava/lang/String;)Ljava/nio/file/Path;	a	getPathToGeneratedStructure
		p	1		id
		p	2		extension
	m	(Laaj;Ljava/lang/Throwable;)V	a	lambda$loadFromResource$2
		p	1		throwable
	m	(Laaj;Ljava/nio/file/Path;)Ljava/util/Optional;	a	loadFromSnbt
		p	1		id
		p	2		path
	m	(Lahu;)V	a	onResourceManagerReload
		p	1		resourceManager
	m	(Ldnx$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	load
		p	1		opener
		p	2		exceptionConsumer
	m	(Ldnx$b;)Ljava/util/stream/Stream;	a	lambda$listTemplates$0
		p	0		provider
	m	(Ljava/io/InputStream;)Ldnw;	a	readStructure
		p	1		templateIInputStream
	m	(Ljava/lang/String;Ljava/nio/file/Path;)Z	a	lambda$listFolderContents$10
		p	1		path
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/function/Consumer;)V	a	lambda$listFolderContents$11
		p	4		path
		p	5		consumer
	m	(Ljava/nio/file/Path;)Ljava/util/stream/Stream;	a	listGeneratedInNamespace
		p	1		namespaceDirectory
	m	(Ljava/nio/file/Path;Laaj;Ljava/lang/String;)Ljava/nio/file/Path;	a	createPathToStructure
		p	0		path
		p	1		id
		p	2		extension
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream;	a	listFolderContents
		p	1		structuresDirectoryPath
		p	2		namespace
		p	3		extension
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	a	lambda$loadFromGenerated$6
		p	1		throwable
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	relativize
		p	1		root
		p	2		path
	m	(Lpj;)Ldnw;	a	readStructure
		p	1		nbt
	m	()Ljava/util/stream/Stream;	b	listResources
	m	(Laaj;)Ljava/util/Optional;	b	get
		p	1		id
	m	(Ljava/nio/file/Path;)Ljava/util/stream/Stream;	b	lambda$listGenerated$8
		p	1		path
	m	(Ljava/nio/file/Path;Laaj;Ljava/lang/String;)Ljava/nio/file/Path;	b	createAndValidatePathToStructure
		p	0		path
		p	1		id
		p	2		extension
	m	()Ljava/util/stream/Stream;	c	listTestStructures
	m	(Laaj;)Z	c	save
		p	1		id
	m	(Ljava/nio/file/Path;)Z	c	lambda$listGenerated$7
		p	0		path
	m	()Ljava/util/stream/Stream;	d	listGenerated
	m	(Laaj;)V	d	remove
		p	1		id
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	d	lambda$loadFromGenerated$5
	m	(Laaj;)Ljava/util/Optional;	e	tryLoad
		p	1		id
	m	(Laaj;)Ljava/util/Optional;	f	loadFromResource
		p	1		id
	m	(Laaj;)Ljava/util/Optional;	g	loadFromTestStructures
		p	1		id
	m	(Laaj;)Ljava/util/Optional;	h	loadFromGenerated
		p	1		id
	m	(Laaj;)Laaj;	i	lambda$listResources$4
		p	0		id
	m	(Laaj;)Z	j	lambda$listResources$3
		p	0		id
	m	(Laaj;)Ljava/io/InputStream;	k	lambda$loadFromResource$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	STRUCTURE_DIRECTORY_NAME
	f	Ljava/lang/String;	c	TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	d	STRUCTURE_FILE_EXTENSION
	f	Ljava/lang/String;	e	STRUCTURE_TEXT_FILE_EXTENSION
	f	Ljava/util/Map;	f	structureRepository
	f	Lcom/mojang/datafixers/DataFixer;	g	fixerUpper
	f	Lahu;	h	resourceManager
	f	Ljava/nio/file/Path;	i	generatedDir
	f	Ljava/util/List;	j	sources
c	dnx$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener
c	dnx$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source
	m	()Ljava/util/function/Function;	a	loader
	m	()Ljava/util/function/Supplier;	b	lister
	f	Ljava/util/function/Function;	a	loader
	f	Ljava/util/function/Supplier;	b	lister
c	dny	net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	m	(Lakh;)V	<init>	<init>
		p	1		tag
	m	()Ldnr;	a	getType
	m	(Lcur;Lalu;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldny;)Lakh;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lakh;	b	tag
c	dnz	net/minecraft/world/level/levelgen/structure/templatesystem/package-info
c	doa	net/minecraft/world/level/levelgen/synth/BlendedNoise
	m	(Lalu;DDDDD)V	<init>	<init>
		p	1		random
		p	2		xzScale
		p	4		yScale
		p	6		xzFactor
		p	8		yFactor
		p	10		smearScaleMultiplier
	m	(Ldoe;Ldoe;Ldoe;DDDDD)V	<init>	<init>
		p	1		lowerInterpolatedNoise
		p	2		upperInterpolatedNoise
		p	3		interpolationNoise
		p	4		xzScale
		p	6		yScale
		p	8		xzFactor
		p	10		yFactor
		p	12		smearScaleMultiplier
	m	()D	a	minValue
	m	(DDDDD)Ldoa;	a	createUnseeded
		p	0		xzScale
		p	2		yScale
		p	4		xzFactor
		p	6		yFactor
		p	8		smearScaleMultiplier
	m	(Lalu;)Ldoa;	a	withNewRandom
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lczn$b;)D	a	compute
		p	1		pos
	m	(Ldoa;)Ljava/lang/Double;	a	lambda$static$4
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()D	b	maxValue
	m	(Ldoa;)Ljava/lang/Double;	b	lambda$static$3
	m	()Lalj;	c	codec
	m	(Ldoa;)Ljava/lang/Double;	c	lambda$static$2
	m	(Ldoa;)Ljava/lang/Double;	d	lambda$static$1
	m	(Ldoa;)Ljava/lang/Double;	e	lambda$static$0
	f	Lalj;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	e	SCALE_RANGE
	f	Lcom/mojang/serialization/MapCodec;	f	DATA_CODEC
	f	Ldoe;	g	minLimitNoise
	f	Ldoe;	h	maxLimitNoise
	f	Ldoe;	i	mainNoise
	f	D	j	xzMultiplier
	f	D	k	yMultiplier
	f	D	l	xzFactor
	f	D	m	yFactor
	f	D	n	smearScaleMultiplier
	f	D	o	maxValue
	f	D	p	xzScale
	f	D	q	yScale
c	dob	net/minecraft/world/level/levelgen/synth/ImprovedNoise
	m	(Lalu;)V	<init>	<init>
		p	1		random
	m	(DDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
	m	(DDD[D)D	a	noiseWithDerivative
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDD)D	a	gradDot
		p	0		hash
		p	1		x
		p	3		y
		p	5		z
	m	(IIIDDDD)D	a	sampleAndLerp
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
		p	10		fadeLocalY
	m	(IIIDDD[D)D	a	sampleWithDerivative
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	D	a	xo
	f	D	b	yo
	f	D	c	zo
	f	F	d	SHIFT_UP_EPSILON
	f	[B	e	p
c	doc	net/minecraft/world/level/levelgen/synth/NoiseUtils
	m	(DD)D	a	biasTowardsExtreme
	m	(Ljava/lang/StringBuilder;DDD[B)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
	m	(Ljava/lang/StringBuilder;DDD[I)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
c	dod	net/minecraft/world/level/levelgen/synth/NormalNoise
	m	(Lalu;Ldod$a;Z)V	<init>	<init>
		p	1		random
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)D	a	expectedDeviation
		p	0		octaves
	m	(Lalu;I[D)Ldod;	a	create
		p	0		random
		p	1		offset
		p	2		octaves
	m	(Lalu;Ldod$a;)Ldod;	a	createLegacyNetherBiome
		p	0		random
		p	1		parameters
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()Ldod$a;	b	parameters
	m	(Lalu;Ldod$a;)Ldod;	b	create
		p	0		random
		p	1		parameters
	f	D	a	INPUT_FACTOR
	f	D	b	TARGET_DEVIATION
	f	D	c	valueFactor
	f	Ldoe;	d	first
	f	Ldoe;	e	second
	f	D	f	maxValue
	f	Ldod$a;	g	parameters
c	dod$a	net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	m	(ID[D)V	<init>	<init>
		p	1		firstOctave
		p	2		firstAmplitude
		p	4		amplitudes
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		firstOctave
		p	2		amplitudes
	m	()I	a	firstOctave
	m	(DLit/unimi/dsi/fastutil/doubles/DoubleArrayList;)V	a	lambda$new$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	amplitudes
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
c	doe	net/minecraft/world/level/levelgen/synth/PerlinNoise
	m	(Lalu;Lcom/mojang/datafixers/util/Pair;Z)V	<init>	<init>
		p	1		random
		p	3		xoroshiro
	m	()D	a	maxValue
	m	(D)D	a	maxBrokenValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
		p	11		useOrigin
	m	(I)Ldob;	a	getOctaveNoise
		p	1		octave
	m	(Lalu;)V	a	skipOctave
		p	0		random
	m	(Lalu;ID[D)Ldoe;	a	create
		p	0		random
		p	1		offset
		p	2		firstAmplitude
		p	4		amplitudes
	m	(Lalu;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldoe;	a	createLegacyForLegacyNetherBiome
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Lalu;Ljava/util/List;)Ldoe;	a	create
		p	0		random
	m	(Lalu;Ljava/util/stream/IntStream;)Ldoe;	a	createLegacyForBlendedNoise
		p	0		random
	m	(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair;	a	makeAmplitudes
		p	0		octaves
	m	(Ljava/lang/Double;)Ljava/lang/String;	a	lambda$parityConfigString$1
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()I	b	firstOctave
	m	(D)D	b	wrap
		p	0		value
	m	(Lalu;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldoe;	b	create
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Lalu;Ljava/util/stream/IntStream;)Ldoe;	b	create
		p	0		random
	m	(Ljava/lang/Double;)Z	b	lambda$new$0
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	amplitudes
	m	(D)D	c	edgeValue
	f	I	a	ROUND_OFF
	f	[Ldob;	b	noiseLevels
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
	f	D	e	lowestFreqValueFactor
	f	D	f	lowestFreqInputFactor
	f	D	g	maxValue
c	dof	net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	m	(Lalu;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(Lalu;Ljava/util/List;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(DDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		useOrigin
	f	[Ldog;	a	noiseLevels
	f	D	b	highestFreqValueFactor
	f	D	c	highestFreqInputFactor
c	dog	net/minecraft/world/level/levelgen/synth/SimplexNoise
	m	(Lalu;)V	<init>	<init>
		p	1		random
	m	(DD)D	a	getValue
		p	1		x
		p	3		y
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDDD)D	a	getCornerNoise3D
		p	1		hash
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
	m	([IDDD)D	a	dot
		p	0		gradient
		p	1		x
		p	3		y
		p	5		z
	f	[[I	a	GRADIENT
	f	D	b	xo
	f	D	c	yo
	f	D	d	zo
	f	D	e	SQRT_3
	f	D	f	F2
	f	D	g	G2
	f	[I	h	p
c	doh	net/minecraft/world/level/levelgen/synth/package-info
c	doi	net/minecraft/world/level/lighting/BlockLightEngine
	m	(Lcwy;)V	<init>	<init>
		p	1		chunkProvider
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(J)I	d	getLightEmission
		p	1		blockPos
	f	[Lgy;	f	DIRECTIONS
	f	Lgt$a;	g	pos
c	doj	net/minecraft/world/level/lighting/BlockLightSectionStorage
	m	(Lcwy;)V	<init>	<init>
		p	1		chunkProvider
	m	(J)I	d	getLightValue
		p	1		blockPos
c	doj$a	net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	()Ldoj$a;	a	copy
	m	()Ldok;	b	copy
c	dok	net/minecraft/world/level/lighting/DataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	(J)V	a	copyDataLayer
		p	1		pos
	m	(JLcwr;)V	a	setLayer
		p	1		pos
		p	3		data
	m	()Ldok;	b	copy
	m	(J)Z	b	hasLayer
		p	1		chunkPos
	m	()V	c	clearCache
	m	(J)Lcwr;	c	getLayer
		p	1		chunkPos
	m	()V	d	disableCache
	m	(J)Lcwr;	d	removeLayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	map
	f	I	b	CACHE_SIZE
	f	[J	c	lastSectionKeys
	f	[Lcwr;	d	lastSections
	f	Z	e	cacheEnabled
c	dol	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(I)V	a	checkFirstQueuedLevel
		p	1		maxLevel
	m	(II)I	a	getKey
		p	1		a
		p	2		b
	m	(J)Z	a	isSource
		p	1		id
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JII)V	a	enqueue
		p	1		id
		p	3		level
		p	4		targetLevel
	m	(JIIZ)V	a	dequeue
		p	1		id
		p	3		level
		p	4		levelCount
		p	5		removeFully
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(JJIIIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		currentLevel
		p	7		pendingLevel
		p	8		decrease
	m	(JJIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		decrease
	m	(Ljava/util/function/LongPredicate;)V	a	removeIf
		p	1		predicate
	m	(Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V	a	lambda$removeIf$0
	m	()Z	b	hasWork
	m	(I)I	b	runUpdates
		p	1		maxSteps
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(JJIZ)V	b	checkNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
		p	6		decrease
	m	()I	c	getQueueSize
	m	(J)I	c	getLevel
		p	1		id
	m	(J)V	e	removeFromQueue
		p	1		id
	m	(J)V	f	checkNode
		p	1		id
	f	I	a	NO_COMPUTED_LEVEL
	f	I	b	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	c	queues
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	d	computedLevels
	f	I	e	firstQueuedLevel
	f	Z	f	hasWork
c	dol$1	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	f	I	a	val$minQueueSize
	f	Ldol;	b	this$0
c	dol$2	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$2
	f	I	a	val$minMapSize
	f	Ldol;	b	this$0
c	dom	net/minecraft/world/level/lighting/LayerLightEngine
	m	(Lcwy;Lcgj;Ldoo;)V	<init>	<init>
		p	1		chunkProvider
		p	2		type
		p	3		lightStorage
	m	()Z	A_	hasLightWork
	m	(II)Lcfg;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(J)Z	a	isSource
		p	1		id
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(JLcwr;Z)V	a	queueSectionData
		p	1		sectionPos
		p	3		lightArray
		p	4		nonEdge
	m	(JLorg/apache/commons/lang3/mutable/MutableInt;)Lcur;	a	getStateAndOpacity
		p	1		pos
	m	(Lcfg;Lcur;Lgt;Lcur;Lgt;Lgy;I)I	a	getLightBlockInto
		p	0		world
		p	1		state1
		p	2		pos1
		p	3		state2
		p	4		pos2
		p	5		direction
		p	6		opacity2
	m	(Lcfh;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lcur;JLgy;)Ldwm;	a	getShape
		p	1		world
		p	2		pos
		p	4		facing
	m	(Lcwr;J)I	a	getLevel
		p	1		section
		p	2		blockPos
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhq;)Lcwr;	a	getDataLayerData
		p	1		pos
	m	(Lhq;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(J)Ljava/lang/String;	b	getDebugData
		p	1		sectionPos
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(Lcfh;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lgt;)I	b	getLightValue
		p	1		pos
	m	(J)I	c	getLevel
		p	1		id
	m	()V	d	clearCache
	m	(J)V	f	checkNode
		p	1		id
	f	J	a	SELF_SOURCE
	f	Lcwy;	b	chunkSource
	f	Lcgj;	c	layer
	f	Ldoo;	d	storage
	f	Lgt$a;	e	pos
	f	[Lgy;	f	DIRECTIONS
	f	Z	g	runningLightUpdates
	f	I	h	CACHE_SIZE
	f	[J	i	lastChunkPos
	f	[Lcfg;	j	lastChunk
c	don	net/minecraft/world/level/lighting/LayerLightEventListener
	m	(Lhq;)Lcwr;	a	getDataLayerData
		p	1		pos
	m	(Lgt;)I	b	getLightValue
		p	1		pos
c	don$a	net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	m	()Z	A_	hasLightWork
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lcfh;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhq;)Lcwr;	a	getDataLayerData
		p	1		pos
	m	(Lhq;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	()[Ldon$a;	b	$values
	m	(Lgt;)I	b	getLightValue
		p	1		pos
	f	Ldon$a;	a	INSTANCE
	f	[Ldon$a;	b	$VALUES
c	doo	net/minecraft/world/level/lighting/LayerLightSectionStorage
	m	(Lcgj;Lcwy;Ldok;)V	<init>	<init>
		p	1		lightType
		p	2		chunkProvider
		p	3		lightData
	m	()Z	a	hasInconsistencies
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JJ)Z	a	lambda$clearQueuedSectionBlocks$0
	m	(JLcwr;Z)V	a	queueSectionData
		p	1		sectionPos
		p	3		array
		p	4		nonEdge
	m	(JZ)Lcwr;	a	getDataLayer
		p	1		sectionPos
		p	3		cached
	m	(Ldok;J)Lcwr;	a	getDataLayer
		p	1		storage
		p	2		sectionPos
	m	(Ldom;J)V	a	clearQueuedSectionBlocks
		p	1		storage
		p	2		sectionPos
	m	(Ldom;ZZ)V	a	markNewInconsistencies
		p	1		lightProvider
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JI)V	b	setStoredLevel
		p	1		blockPos
		p	3		value
	m	(JZ)V	b	enableLightSources
		p	1		columnPos
		p	3		enabled
	m	(Ldom;J)V	b	checkEdgesForSection
		p	1		lightProvider
		p	2		sectionPos
	m	(J)I	c	getLevel
		p	1		id
	m	(JZ)V	c	retainData
		p	1		sectionPos
		p	3		retain
	m	()V	d	runAllUpdates
	m	(J)I	d	getLightValue
		p	1		blockPos
	m	(JZ)V	d	updateSectionStatus
		p	1		sectionPos
		p	3		notReady
	m	()V	e	swapSectionMap
	m	(J)Z	g	storingLightForSection
		p	1		sectionPos
	m	(J)Lcwr;	h	getDataLayerData
		p	1		sectionPos
	m	(J)I	i	getStoredLevel
		p	1		blockPos
	m	(J)Lcwr;	j	createDataLayer
		p	1		sectionPos
	m	(J)V	k	onNodeAdded
		p	1		sectionPos
	m	(J)V	l	onNodeRemoved
		p	1		sectionPos
	f	I	a	LIGHT_AND_DATA
	f	I	b	LIGHT_ONLY
	f	I	c	EMPTY
	f	Lcwr;	d	EMPTY_DATA
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	dataSectionSet
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	toMarkNoData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	toMarkData
	f	Ldok;	h	visibleSectionData
	f	Ldok;	i	updatingSectionData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	changedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	k	sectionsAffectedByLightUpdates
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	queuedSections
	f	Z	m	hasToRemove
	f	[Lgy;	n	DIRECTIONS
	f	Lcgj;	o	layer
	f	Lcwy;	p	chunkSource
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	untrustedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	r	columnsToRetainQueuedDataFor
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	s	toRemove
c	doo$1	net/minecraft/world/level/lighting/LayerLightSectionStorage$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dop	net/minecraft/world/level/lighting/LevelLightEngine
	m	(Lcwy;ZZ)V	<init>	<init>
		p	1		chunkProvider
		p	2		hasBlockLight
		p	3		hasSkyLight
	m	()Z	A_	hasLightWork
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lcfh;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lcgj;)Ldon;	a	getLayerListener
		p	1		lightType
	m	(Lcgj;Lhq;)Ljava/lang/String;	a	getDebugData
		p	1		lightType
		p	2		pos
	m	(Lcgj;Lhq;Lcwr;Z)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
		p	4		nonEdge
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhq;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	()I	b	getLightSectionCount
	m	(Lcfh;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lgt;I)I	b	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	()I	c	getMinLightSection
	m	()I	d	getMaxLightSection
	f	I	a	MAX_SOURCE_LEVEL
	f	I	b	LIGHT_SECTION_PADDING
	f	Lcgc;	c	levelHeightAccessor
	f	Ldom;	d	blockEngine
	f	Ldom;	e	skyEngine
c	doq	net/minecraft/world/level/lighting/LightEventListener
	m	()Z	A_	hasLightWork
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lcfh;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lgt;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lhq;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
c	dor	net/minecraft/world/level/lighting/SkyLightEngine
	m	(Lcwy;)V	<init>	<init>
		p	1		chunkProvider
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)Ljava/lang/String;	b	getDebugData
		p	1		sectionPos
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(J)V	f	checkNode
		p	1		id
	f	[Lgy;	f	DIRECTIONS
	f	[Lgy;	g	HORIZONTALS
c	dos	net/minecraft/world/level/lighting/SkyLightSectionStorage
	m	(Lcwy;)V	<init>	<init>
		p	1		chunkProvider
	m	()Z	a	hasInconsistencies
	m	(I)Z	a	hasSectionsBelow
		p	1		sectionY
	m	(Lcwr;)Lcwr;	a	repeatFirstLayer
		p	0		source
	m	(Ldom;ZZ)V	a	markNewInconsistencies
		p	1		lightProvider
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(JZ)V	b	enableLightSources
		p	1		columnPos
		p	3		enabled
	m	(J)I	d	getLightValue
		p	1		blockPos
	m	(JZ)I	e	getLightValue
		p	1		blockPos
		p	3		cached
	m	()V	f	recheckInconsistencyFlag
	m	(J)Lcwr;	j	createDataLayer
		p	1		sectionPos
	m	(J)V	k	onNodeAdded
		p	1		sectionPos
	m	(J)V	l	onNodeRemoved
		p	1		sectionPos
	m	(J)Z	m	isAboveData
		p	1		sectionPos
	m	(J)Z	n	lightOnInSection
		p	1		sectionPos
	m	(J)V	o	queueRemoveSource
		p	1		sectionPos
	m	(J)V	p	queueAddSource
		p	1		sectionPos
	f	[Lgy;	n	HORIZONTALS
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	sectionsWithSources
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	p	sectionsToAddSourcesTo
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	sectionsToRemoveSourcesFrom
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	r	columnsWithSkySources
	f	Z	s	hasSourceInconsistencies
c	dos$1	net/minecraft/world/level/lighting/SkyLightSectionStorage$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dos$a	net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V	<init>	<init>
		p	1		arrays
		p	2		columnToTopSection
		p	3		minSectionY
	m	()Ldos$a;	a	copy
	m	()Ldok;	b	copy
	f	I	b	currentLowestY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topSections
c	dot	net/minecraft/world/level/lighting/SpatialLongSet
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	f	Ldot$a;	a	map
c	dot$a	net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	m	()J	a	removeFirstBit
	m	(IJ)Z	a	replaceBit
		p	1		index
		p	2		mask
	m	(J)J	a	getOuterKey
		p	0		posLong
	m	(JI)J	a	getFullKey
		p	0		key
		p	2		valueLength
	m	(IJ)Z	b	removeFromEntry
		p	1		index
		p	2		mask
	m	(J)I	b	getInnerKey
		p	0		posLong
	m	(J)Z	c	addBit
		p	1		posLong
	m	(J)Z	d	removeBit
		p	1		posLong
	m	(J)Z	e	removeFromNullEntry
		p	1		mask
	f	I	a	X_BITS
	f	I	b	Z_BITS
	f	I	c	Y_BITS
	f	I	d	Y_OFFSET
	f	I	e	Z_OFFSET
	f	I	g	X_OFFSET
	f	J	h	OUTER_MASK
	f	I	i	lastPos
	f	J	j	lastOuterKey
	f	I	k	minSize
c	dou	net/minecraft/world/level/lighting/package-info
c	dov	net/minecraft/world/level/material/EmptyFluid
	m	()Lbzw;	a	getBucket
	m	(Lcfg;Lgt;Ldoy;)Ldvt;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgd;)I	a	getTickDelay
		p	1		world
	m	(Ldoy;)F	a	getOwnHeight
		p	1		state
	m	(Ldoy;Lcfg;Lgt;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldoy;Lcfg;Lgt;Ldox;Lgy;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Ldoy;)Lcur;	b	createLegacyBlock
		p	1		state
	m	(Ldoy;Lcfg;Lgt;)Ldwm;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Ldoy;)Z	c	isSource
		p	1		state
	m	(Ldoy;)I	d	getAmount
		p	1		state
c	dow	net/minecraft/world/level/material/FlowingFluid
	m	(IZ)Ldoy;	a	getFlowing
		p	1		level
		p	2		falling
	m	(Lcfg;Ldox;Lgt;Lcur;Lgt;Lcur;)Z	a	isWaterHole
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Lcfg;Ldox;Lgt;Lcur;Lgy;Lgt;Lcur;Ldoy;)Z	a	canPassThrough
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		face
		p	6		fromPos
		p	7		fromState
		p	8		fluidState
	m	(Lcfg;Lgt;Lcur;Ldox;)Z	a	canHoldFluid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcfg;Lgt;Lcur;Lgy;Lgt;Lcur;Ldoy;Ldox;)Z	a	canSpreadTo
		p	1		world
		p	2		fluidPos
		p	3		fluidBlockState
		p	4		flowDirection
		p	5		flowTo
		p	6		flowToBlockState
		p	7		fluidState
		p	8		fluid
	m	(Lcfg;Lgt;Ldoy;)Ldvt;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcfg;Lgt;Lgy;)Z	a	isSolidFace
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Ldoy;)V	a	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Ldoy;Ldoy;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Lcgb;Lgt;Lcur;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgb;Lgt;Lcur;Lgy;Ldoy;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Lcgb;Lgt;Ldoy;)V	a	spread
		p	1		world
		p	2		fluidPos
		p	3		state
	m	(Lcgb;Lgt;Ldoy;Lcur;)V	a	spreadToSides
		p	1		world
		p	2		pos
		p	3		fluidState
		p	4		blockState
	m	(Lcgd;Lgt;)I	a	sourceNeighborCount
		p	1		world
		p	2		pos
	m	(Lcgd;Lgt;ILgy;Lcur;Lgt;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I	a	getSlopeDistance
		p	1		world
	m	(Lcgd;Lgt;Lcur;)Ldoy;	a	getNewLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgd;Lgt;Lgt;Lcur;S)Z	a	lambda$getSpread$4
	m	(Lcgd;Lgt;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSpread$3
	m	(Lcus$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldoy;)F	a	getOwnHeight
		p	1		state
	m	(Ldoy;Lcfg;Lgt;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Lgt;Lcgd;Lcur;S)Z	a	lambda$getSlopeDistance$2
	m	(Lgt;Lgt;)S	a	getCacheKey
	m	(Lgy;Lcfg;Lgt;Lcur;Lgt;Lcur;)Z	a	canPassThroughWall
		p	1		face
		p	2		world
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Z)Ldoy;	a	getSource
		p	1		falling
	m	(Lcfg;Lgt;Ldoy;)Ldwm;	b	lambda$getShape$5
	m	(Lcgd;)I	b	getSlopeFindDistance
		p	1		world
	m	(Lcgd;Lgt;Lcur;)Ljava/util/Map;	b	getSpread
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgd;Lgt;S)Lcom/mojang/datafixers/util/Pair;	b	lambda$getSlopeDistance$1
	m	(Ldoy;Lcfg;Lgt;)Ldwm;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcgd;)I	c	getDropOff
		p	1		world
	m	(Ldoy;Lcfg;Lgt;)Z	c	hasSameAbove
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldox;	d	getFlowing
	m	(Ldoy;)I	d	getAmount
		p	1		state
	m	()Ldox;	e	getSource
	m	(Ldoy;)I	e	getLegacyLevel
		p	0		state
	m	()Z	f	canConvertToSource
	m	(Ldoy;)Z	g	affectsFlow
		p	1		state
	m	(Ldoy;)Z	h	isSourceBlockOfThisType
		p	1		state
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	m	lambda$static$0
	f	Lcvi;	a	FALLING
	f	Lcvr;	b	LEVEL
	f	I	e	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	f	OCCLUSION_CACHE
	f	Ljava/util/Map;	g	shapes
c	dow$1	net/minecraft/world/level/material/FlowingFluid$1
c	dox	net/minecraft/world/level/material/Fluid
	m	()Lbzw;	a	getBucket
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lcfg;Lgt;Ldoy;)Ldvt;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Ldoy;)V	a	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcga;Lgt;Ldoy;Lalu;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcgd;)I	a	getTickDelay
		p	1		world
	m	(Lcus$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldox;)Z	a	isSame
		p	1		fluid
	m	(Ldoy;)F	a	getOwnHeight
		p	1		state
	m	(Ldoy;Lcfg;Lgt;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldoy;Lcfg;Lgt;Ldox;Lgy;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Lcga;Lgt;Ldoy;Lalu;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Ldoy;)Lcur;	b	createLegacyBlock
		p	1		state
	m	(Ldoy;Lcfg;Lgt;)Ldwm;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Ldoy;)Z	c	isSource
		p	1		state
	m	(Ldoy;)I	d	getAmount
		p	1		state
	m	(Ldoy;)V	f	registerDefaultState
		p	1		state
	m	()Lcus;	g	getStateDefinition
	m	()Ldoy;	h	defaultFluidState
	m	()Lim;	i	getDripParticle
	m	()Z	j	isRandomlyTicking
	m	()Ljava/util/Optional;	k	getPickupSound
	m	()Lhc$c;	l	builtInRegistryHolder
	f	Ldoy;	a	defaultFluidState
	f	Lhc$c;	b	builtInRegistryHolder
	f	Lhg;	c	FLUID_STATE_REGISTRY
	f	Lcus;	d	stateDefinition
c	doy	net/minecraft/world/level/material/FluidState
	m	(Ldox;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		fluid
		p	2		propertiesMap
		p	3		codec
	m	()Ldox;	a	getType
	m	(Lakh;)Z	a	is
		p	1		tag
	m	(Lcfg;Lgt;)F	a	getHeight
		p	1		world
		p	2		pos
	m	(Lcfg;Lgt;Ldox;Lgy;)Z	a	canBeReplacedWith
		p	1		world
		p	2		pos
		p	3		fluid
		p	4		direction
	m	(Lcga;Lgt;)V	a	tick
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lalu;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldox;)Z	a	isSourceOfType
		p	1		fluid
	m	(Lhe;)Z	a	is
		p	1		fluids
	m	()Z	b	isSource
	m	(Lcfg;Lgt;)Z	b	shouldRenderBackwardUpFace
		p	1		world
		p	2		pos
	m	(Lcga;Lgt;Lalu;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldox;)Z	b	is
		p	1		fluid
	m	()Z	c	isEmpty
	m	(Lcfg;Lgt;)Ldvt;	c	getFlow
		p	1		world
		p	2		pos
	m	()F	d	getOwnHeight
	m	(Lcfg;Lgt;)Ldwm;	d	getShape
		p	1		world
		p	2		pos
	m	()I	e	getAmount
	m	()Z	f	isRandomlyTicking
	m	()Lcur;	g	createLegacyBlock
	m	()Lim;	h	getDripParticle
	m	()F	i	getExplosionResistance
	m	()Lhc;	j	holder
	m	()Ljava/util/stream/Stream;	k	getTags
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	AMOUNT_MAX
	f	I	g	AMOUNT_FULL
c	doz	net/minecraft/world/level/material/Fluids
	m	(Ljava/lang/String;Ldox;)Ldox;	a	register
		p	0		id
		p	1		value
	f	Ldox;	a	EMPTY
	f	Ldow;	b	FLOWING_WATER
	f	Ldow;	c	WATER
	f	Ldow;	d	FLOWING_LAVA
	f	Ldow;	e	LAVA
c	dpa	net/minecraft/world/level/material/FogType
	m	()[Ldpa;	a	$values
	f	Ldpa;	a	LAVA
	f	Ldpa;	b	WATER
	f	Ldpa;	c	POWDER_SNOW
	f	Ldpa;	d	NONE
	f	[Ldpa;	e	$VALUES
c	dpb	net/minecraft/world/level/material/LavaFluid
	m	()Lbzw;	a	getBucket
	m	(Lcga;Lgt;Ldoy;Lalu;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcga;Lgt;Ldoy;Ldoy;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Lcgb;Lgt;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Lcgb;Lgt;Lcur;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgb;Lgt;Lcur;Lgy;Ldoy;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Lcgd;)I	a	getTickDelay
		p	1		world
	m	(Lcgd;Lgt;)Z	a	hasFlammableNeighbours
		p	1		world
		p	2		pos
	m	(Ldox;)Z	a	isSame
		p	1		fluid
	m	(Ldoy;Lcfg;Lgt;Ldox;Lgy;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Lcga;Lgt;Ldoy;Lalu;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcgd;)I	b	getSlopeFindDistance
		p	1		world
	m	(Lcgd;Lgt;)Z	b	isFlammable
		p	1		world
		p	2		pos
	m	(Ldoy;)Lcur;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Lcgd;)I	c	getDropOff
		p	1		world
	m	()Ldox;	d	getFlowing
	m	()Ldox;	e	getSource
	m	()Z	f	canConvertToSource
	m	()Lim;	i	getDripParticle
	m	()Z	j	isRandomlyTicking
	m	()Ljava/util/Optional;	k	getPickupSound
	f	F	e	MIN_LEVEL_CUTOFF
c	dpb$a	net/minecraft/world/level/material/LavaFluid$Flowing
	m	(Lcus$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldoy;)Z	c	isSource
		p	1		state
	m	(Ldoy;)I	d	getAmount
		p	1		state
c	dpb$b	net/minecraft/world/level/material/LavaFluid$Source
	m	(Ldoy;)Z	c	isSource
		p	1		state
	m	(Ldoy;)I	d	getAmount
		p	1		state
c	dpc	net/minecraft/world/level/material/Material
	m	(Ldpd;ZZZZZZLdpe;)V	<init>	<init>
		p	1		color
		p	2		liquid
		p	3		solid
		p	4		blocksMovement
		p	5		blocksLight
		p	6		burnable
		p	7		replaceable
		p	8		pistonBehavior
	m	()Z	a	isLiquid
	m	()Z	b	isSolid
	m	()Z	c	blocksMotion
	m	()Z	d	isFlammable
	m	()Z	e	isReplaceable
	m	()Z	f	isSolidBlocking
	m	()Ldpe;	g	getPushReaction
	m	()Ldpd;	h	getColor
	f	Ldpc;	A	NETHER_WOOD
	f	Ldpc;	B	BAMBOO_SAPLING
	f	Ldpc;	C	BAMBOO
	f	Ldpc;	D	WOOL
	f	Ldpc;	E	EXPLOSIVE
	f	Ldpc;	F	LEAVES
	f	Ldpc;	G	GLASS
	f	Ldpc;	H	ICE
	f	Ldpc;	I	CACTUS
	f	Ldpc;	J	STONE
	f	Ldpc;	K	METAL
	f	Ldpc;	L	SNOW
	f	Ldpc;	M	HEAVY_METAL
	f	Ldpc;	N	BARRIER
	f	Ldpc;	O	PISTON
	f	Ldpc;	P	MOSS
	f	Ldpc;	Q	VEGETABLE
	f	Ldpc;	R	EGG
	f	Ldpc;	S	CAKE
	f	Ldpc;	T	AMETHYST
	f	Ldpc;	U	POWDER_SNOW
	f	Ldpc;	V	FROGSPAWN
	f	Ldpc;	W	FROGLIGHT
	f	Ldpd;	X	color
	f	Ldpe;	Y	pushReaction
	f	Z	Z	blocksMotion
	f	Ldpc;	a	AIR
	f	Z	aa	flammable
	f	Z	ab	liquid
	f	Z	ac	solidBlocking
	f	Z	ad	replaceable
	f	Z	ae	solid
	f	Ldpc;	b	STRUCTURAL_AIR
	f	Ldpc;	c	PORTAL
	f	Ldpc;	d	CLOTH_DECORATION
	f	Ldpc;	e	PLANT
	f	Ldpc;	f	WATER_PLANT
	f	Ldpc;	g	REPLACEABLE_PLANT
	f	Ldpc;	h	REPLACEABLE_FIREPROOF_PLANT
	f	Ldpc;	i	REPLACEABLE_WATER_PLANT
	f	Ldpc;	j	WATER
	f	Ldpc;	k	BUBBLE_COLUMN
	f	Ldpc;	l	LAVA
	f	Ldpc;	m	TOP_SNOW
	f	Ldpc;	n	FIRE
	f	Ldpc;	o	DECORATION
	f	Ldpc;	p	WEB
	f	Ldpc;	q	SCULK
	f	Ldpc;	r	BUILDABLE_GLASS
	f	Ldpc;	s	CLAY
	f	Ldpc;	t	DIRT
	f	Ldpc;	u	GRASS
	f	Ldpc;	v	ICE_SOLID
	f	Ldpc;	w	SAND
	f	Ldpc;	x	SPONGE
	f	Ldpc;	y	SHULKER_SHELL
	f	Ldpc;	z	WOOD
c	dpc$a	net/minecraft/world/level/material/Material$Builder
	m	(Ldpd;)V	<init>	<init>
		p	1		color
	m	()Ldpc$a;	a	liquid
	m	()Ldpc$a;	b	nonSolid
	m	()Ldpc$a;	c	noCollider
	m	()Ldpc$a;	d	flammable
	m	()Ldpc$a;	e	replaceable
	m	()Ldpc$a;	f	destroyOnPush
	m	()Ldpc$a;	g	notPushable
	m	()Ldpc;	h	build
	m	()Ldpc$a;	i	notSolidBlocking
	f	Ldpe;	a	pushReaction
	f	Z	b	blocksMotion
	f	Z	c	flammable
	f	Z	d	liquid
	f	Z	e	replaceable
	f	Z	f	solid
	f	Ldpd;	g	color
	f	Z	h	solidBlocking
c	dpd	net/minecraft/world/level/material/MaterialColor
	m	(II)V	<init>	<init>
		p	1		id
		p	2		color
	m	(I)Ldpd;	a	byId
		p	0		id
	m	(Ldpd$a;)I	a	calculateRGBColor
		p	1		brightness
	m	(I)I	b	getColorFromPackedId
		p	0		colorByte
	m	(Ldpd$a;)B	b	getPackedId
		p	1		brightness
	m	(I)Ldpd;	c	byIdUnsafe
		p	0		id
	f	Ldpd;	A	COLOR_BROWN
	f	Ldpd;	B	COLOR_GREEN
	f	Ldpd;	C	COLOR_RED
	f	Ldpd;	D	COLOR_BLACK
	f	Ldpd;	E	GOLD
	f	Ldpd;	F	DIAMOND
	f	Ldpd;	G	LAPIS
	f	Ldpd;	H	EMERALD
	f	Ldpd;	I	PODZOL
	f	Ldpd;	J	NETHER
	f	Ldpd;	K	TERRACOTTA_WHITE
	f	Ldpd;	L	TERRACOTTA_ORANGE
	f	Ldpd;	M	TERRACOTTA_MAGENTA
	f	Ldpd;	N	TERRACOTTA_LIGHT_BLUE
	f	Ldpd;	O	TERRACOTTA_YELLOW
	f	Ldpd;	P	TERRACOTTA_LIGHT_GREEN
	f	Ldpd;	Q	TERRACOTTA_PINK
	f	Ldpd;	R	TERRACOTTA_GRAY
	f	Ldpd;	S	TERRACOTTA_LIGHT_GRAY
	f	Ldpd;	T	TERRACOTTA_CYAN
	f	Ldpd;	U	TERRACOTTA_PURPLE
	f	Ldpd;	V	TERRACOTTA_BLUE
	f	Ldpd;	W	TERRACOTTA_BROWN
	f	Ldpd;	X	TERRACOTTA_GREEN
	f	Ldpd;	Y	TERRACOTTA_RED
	f	Ldpd;	Z	TERRACOTTA_BLACK
	f	Ldpd;	a	NONE
	f	Ldpd;	aa	CRIMSON_NYLIUM
	f	Ldpd;	ab	CRIMSON_STEM
	f	Ldpd;	ac	CRIMSON_HYPHAE
	f	Ldpd;	ad	WARPED_NYLIUM
	f	Ldpd;	ae	WARPED_STEM
	f	Ldpd;	af	WARPED_HYPHAE
	f	Ldpd;	ag	WARPED_WART_BLOCK
	f	Ldpd;	ah	DEEPSLATE
	f	Ldpd;	ai	RAW_IRON
	f	Ldpd;	aj	GLOW_LICHEN
	f	I	ak	col
	f	I	al	id
	f	[Ldpd;	am	MATERIAL_COLORS
	f	Ldpd;	b	GRASS
	f	Ldpd;	c	SAND
	f	Ldpd;	d	WOOL
	f	Ldpd;	e	FIRE
	f	Ldpd;	f	ICE
	f	Ldpd;	g	METAL
	f	Ldpd;	h	PLANT
	f	Ldpd;	i	SNOW
	f	Ldpd;	j	CLAY
	f	Ldpd;	k	DIRT
	f	Ldpd;	l	STONE
	f	Ldpd;	m	WATER
	f	Ldpd;	n	WOOD
	f	Ldpd;	o	QUARTZ
	f	Ldpd;	p	COLOR_ORANGE
	f	Ldpd;	q	COLOR_MAGENTA
	f	Ldpd;	r	COLOR_LIGHT_BLUE
	f	Ldpd;	s	COLOR_YELLOW
	f	Ldpd;	t	COLOR_LIGHT_GREEN
	f	Ldpd;	u	COLOR_PINK
	f	Ldpd;	v	COLOR_GRAY
	f	Ldpd;	w	COLOR_LIGHT_GRAY
	f	Ldpd;	x	COLOR_CYAN
	f	Ldpd;	y	COLOR_PURPLE
	f	Ldpd;	z	COLOR_BLUE
c	dpd$a	net/minecraft/world/level/material/MaterialColor$Brightness
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		id
		p	4		brightness
	m	()[Ldpd$a;	a	$values
	m	(I)Ldpd$a;	a	byId
		p	0		id
	m	(I)Ldpd$a;	b	byIdUnsafe
		p	0		id
	f	Ldpd$a;	a	LOW
	f	Ldpd$a;	b	NORMAL
	f	Ldpd$a;	c	HIGH
	f	Ldpd$a;	d	LOWEST
	f	I	e	id
	f	I	f	modifier
	f	[Ldpd$a;	g	VALUES
	f	[Ldpd$a;	h	$VALUES
c	dpe	net/minecraft/world/level/material/PushReaction
	m	()[Ldpe;	a	$values
	f	Ldpe;	a	NORMAL
	f	Ldpe;	b	DESTROY
	f	Ldpe;	c	BLOCK
	f	Ldpe;	d	IGNORE
	f	Ldpe;	e	PUSH_ONLY
	f	[Ldpe;	f	$VALUES
c	dpf	net/minecraft/world/level/material/WaterFluid
	m	()Lbzw;	a	getBucket
	m	(Lcga;Lgt;Ldoy;Lalu;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcgb;Lgt;Lcur;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcgd;)I	a	getTickDelay
		p	1		world
	m	(Ldox;)Z	a	isSame
		p	1		fluid
	m	(Ldoy;Lcfg;Lgt;Ldox;Lgy;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Lcgd;)I	b	getSlopeFindDistance
		p	1		world
	m	(Ldoy;)Lcur;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Lcgd;)I	c	getDropOff
		p	1		world
	m	()Ldox;	d	getFlowing
	m	()Ldox;	e	getSource
	m	()Z	f	canConvertToSource
	m	()Lim;	i	getDripParticle
	m	()Ljava/util/Optional;	k	getPickupSound
c	dpf$a	net/minecraft/world/level/material/WaterFluid$Flowing
	m	(Lcus$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldoy;)Z	c	isSource
		p	1		state
	m	(Ldoy;)I	d	getAmount
		p	1		state
c	dpf$b	net/minecraft/world/level/material/WaterFluid$Source
	m	(Ldoy;)Z	c	isSource
		p	1		state
	m	(Ldoy;)I	d	getAmount
		p	1		state
c	dpg	net/minecraft/world/level/material/package-info
c	dph	net/minecraft/world/level/package-info
c	dpi	net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Ldpm;	a	getStart
	m	(DDD)Ldps;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(Lcfg;III)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcgn;Lbbh;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lgt;)D	a	getFloorLevel
		p	1		pos
	m	([Ldpm;Ldpm;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Ldpm;Ldpm;)Z	b	isVerticalNeighborValid
		p	1		node
		p	2		successor
	m	()Z	c	isAmphibious
	f	Z	l	prefersShallowSwimming
	f	F	m	oldWalkableCost
	f	F	n	oldWaterBorderCost
c	dpj	net/minecraft/world/level/pathfinder/BinaryHeap
	m	()V	a	clear
	m	(I)V	a	upHeap
		p	1		index
	m	(Ldpm;)Ldpm;	a	insert
		p	1		node
	m	(Ldpm;F)V	a	changeCost
		p	1		node
		p	2		weight
	m	()Ldpm;	b	peek
	m	(I)V	b	downHeap
		p	1		index
	m	(Ldpm;)V	b	remove
		p	1		node
	m	()Ldpm;	c	pop
	m	()I	d	size
	m	()Z	e	isEmpty
	m	()[Ldpm;	f	getHeap
	f	[Ldpm;	a	heap
	f	I	b	size
c	dpk	net/minecraft/world/level/pathfinder/BlockPathTypes
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3		defaultPenalty
	m	()F	a	getMalus
	m	()[Ldpk;	b	$values
	f	F	A	malus
	f	[Ldpk;	B	$VALUES
	f	Ldpk;	a	BLOCKED
	f	Ldpk;	b	OPEN
	f	Ldpk;	c	WALKABLE
	f	Ldpk;	d	WALKABLE_DOOR
	f	Ldpk;	e	TRAPDOOR
	f	Ldpk;	f	POWDER_SNOW
	f	Ldpk;	g	DANGER_POWDER_SNOW
	f	Ldpk;	h	FENCE
	f	Ldpk;	i	LAVA
	f	Ldpk;	j	WATER
	f	Ldpk;	k	WATER_BORDER
	f	Ldpk;	l	RAIL
	f	Ldpk;	m	UNPASSABLE_RAIL
	f	Ldpk;	n	DANGER_FIRE
	f	Ldpk;	o	DAMAGE_FIRE
	f	Ldpk;	p	DANGER_CACTUS
	f	Ldpk;	q	DAMAGE_CACTUS
	f	Ldpk;	r	DANGER_OTHER
	f	Ldpk;	s	DAMAGE_OTHER
	f	Ldpk;	t	DOOR_OPEN
	f	Ldpk;	u	DOOR_WOOD_CLOSED
	f	Ldpk;	v	DOOR_IRON_CLOSED
	f	Ldpk;	w	BREACH
	f	Ldpk;	x	LEAVES
	f	Ldpk;	y	STICKY_HONEY
	f	Ldpk;	z	COCOA
c	dpl	net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	m	()Ldpm;	a	getStart
	m	(DDD)Ldps;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ldpm;	a	getNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Ldpk;	a	lambda$getCachedBlockPathType$0
	m	(Lcfg;III)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcfg;IIILbbh;IIIZZ)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		canOpenDoors
		p	10		canEnterOpenDoors
	m	(Lcgn;Lbbh;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	([Ldpm;Ldpm;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Ldpk;	b	getCachedBlockPathType
		p	1		x
		p	2		y
		p	3		z
	m	(Ldpm;)Z	b	hasMalus
		p	1		node
	m	(Ldpm;)Z	c	isOpen
		p	1		node
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypeByPosCache
c	dpm	net/minecraft/world/level/pathfinder/Node
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Lgt;	a	asBlockPos
	m	(III)Ldpm;	a	cloneAndMove
		p	1		x
		p	2		y
		p	3		z
	m	(Ldpm;)F	a	distanceTo
		p	1		node
	m	(Lgt;)F	a	distanceTo
		p	1		pos
	m	(Lqx;)V	a	writeToStream
		p	1		buffer
	m	()Ldvt;	b	asVec3
	m	(III)I	b	createHash
		p	0		x
		p	1		y
		p	2		z
	m	(Ldpm;)F	b	distanceToXZ
		p	1		node
	m	(Lgt;)F	b	distanceToSqr
		p	1		pos
	m	(Lqx;)Ldpm;	b	createFromStream
		p	0		buf
	m	()Z	c	inOpenSet
	m	(Ldpm;)F	c	distanceToSqr
		p	1		node
	m	(Lgt;)F	c	distanceManhattan
		p	1		pos
	m	(Ldpm;)F	d	distanceManhattan
		p	1		node
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	d	heapIdx
	f	F	e	g
	f	F	f	h
	f	F	g	f
	f	Ldpm;	h	cameFrom
	f	Z	i	closed
	f	F	j	walkedDistance
	f	F	k	costMalus
	f	Ldpk;	l	type
	f	I	m	hash
c	dpn	net/minecraft/world/level/pathfinder/NodeEvaluator
	m	()Ldpm;	a	getStart
	m	(DDD)Ldps;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ldpm;	a	getNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)Ldpm;	a	lambda$getNode$0
	m	(Lcfg;III)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcfg;IIILbbh;IIIZZ)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		canOpenDoors
		p	10		canEnterOpenDoors
	m	(Lcgn;Lbbh;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Ldpm;)Ldps;	a	getTargetFromNode
		p	1		node
	m	(Z)V	a	setCanPassDoors
		p	1		canEnterOpenDoors
	m	([Ldpm;Ldpm;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Lgt;)Ldpm;	b	getNode
		p	1		pos
	m	(Z)V	b	setCanOpenDoors
		p	1		canOpenDoors
	m	(Z)V	c	setCanFloat
		p	1		canSwim
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
	m	()Z	f	canFloat
	f	Lcgn;	a	level
	f	Lbbh;	b	mob
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	nodes
	f	I	d	entityWidth
	f	I	e	entityHeight
	f	I	f	entityDepth
	f	Z	g	canPassDoors
	f	Z	h	canOpenDoors
	f	Z	i	canFloat
c	dpo	net/minecraft/world/level/pathfinder/Path
	m	(Ljava/util/List;Lgt;Z)V	<init>	<init>
		p	1		nodes
		p	2		target
		p	3		reachesTarget
	m	()V	a	advance
	m	(I)Ldpm;	a	getNode
		p	1		index
	m	(ILdpm;)V	a	replaceNode
		p	1		index
		p	2		node
	m	(Lbaq;)Ldvt;	a	getNextEntityPos
		p	1		entity
	m	(Lbaq;I)Ldvt;	a	getEntityPosAtNode
		p	1		entity
		p	2		index
	m	(Ldpo;)Z	a	sameAs
		p	1		o
	m	(Lqx;)V	a	writeToStream
		p	1		buffer
	m	(Lqx;Ldps;)V	a	lambda$writeToStream$0
	m	([Ldpm;[Ldpm;Ljava/util/Set;)V	a	setDebug
		p	1		debugNodes
		p	2		debugSecondNodes
		p	3		debugTargetNodes
	m	()Z	b	notStarted
	m	(I)V	b	truncateNodes
		p	1		length
	m	(Lqx;)Ldpo;	b	createFromStream
		p	0		buffer
	m	()Z	c	isDone
	m	(I)V	c	setNextNodeIndex
		p	1		nodeIndex
	m	()Ldpm;	d	getEndNode
	m	(I)Lgt;	d	getNodePos
		p	1		index
	m	()I	e	getNodeCount
	m	()I	f	getNextNodeIndex
	m	()Lgt;	g	getNextNodePos
	m	()Ldpm;	h	getNextNode
	m	()Ldpm;	i	getPreviousNode
	m	()Z	j	canReach
	m	()[Ldpm;	k	getOpenSet
	m	()[Ldpm;	l	getClosedSet
	m	()Lgt;	m	getTarget
	m	()F	n	getDistToTarget
	f	Ljava/util/List;	a	nodes
	f	[Ldpm;	b	openSet
	f	[Ldpm;	c	closedSet
	f	Ljava/util/Set;	d	targetNodes
	f	I	e	nextNodeIndex
	f	Lgt;	f	target
	f	F	g	distToTarget
	f	Z	h	reached
c	dpp	net/minecraft/world/level/pathfinder/PathComputationType
	m	()[Ldpp;	a	$values
	f	Ldpp;	a	LAND
	f	Ldpp;	b	WATER
	f	Ldpp;	c	AIR
	f	[Ldpp;	d	$VALUES
c	dpq	net/minecraft/world/level/pathfinder/PathFinder
	m	(Ldpn;I)V	<init>	<init>
		p	1		pathNodeMaker
		p	2		range
	m	(Lawc;Ldpm;Ljava/util/Map;FIF)Ldpo;	a	findPath
		p	1		profiler
		p	2		startNode
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Lcgn;Lbbh;Ljava/util/Set;FIF)Ldpo;	a	findPath
		p	1		world
		p	2		mob
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Ldpm;Ldpm;)F	a	distance
		p	1		a
		p	2		b
	m	(Ldpm;Lgt;Z)Ldpo;	a	reconstructPath
		p	1		endNode
		p	2		target
		p	3		reachesTarget
	m	(Ldpm;Ljava/util/Set;)F	a	getBestH
		p	1		node
		p	2		targets
	m	(Lgt;)Ldps;	a	lambda$findPath$0
		p	1		pos
	m	(Ljava/util/Map;Ldps;)Ldpo;	a	lambda$findPath$2
	m	(Ljava/util/Map;Ldps;)Ldpo;	b	lambda$findPath$1
		p	2		node
	f	F	a	FUDGING
	f	[Ldpm;	b	neighbors
	f	I	c	maxVisitedNodes
	f	Ldpn;	d	nodeEvaluator
	f	Z	e	DEBUG
	f	Ldpj;	f	openSet
c	dpr	net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		canJumpOutOfWater
	m	()Ldpm;	a	getStart
	m	(DDD)Ldps;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ldpm;	a	getNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Ldpk;	a	lambda$getCachedBlockType$0
	m	(Lcfg;III)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcfg;IIILbbh;IIIZZ)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		canOpenDoors
		p	10		canEnterOpenDoors
	m	(Lcgn;Lbbh;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Ldpm;Ldpm;Ldpm;)Z	a	isDiagonalNodeValid
	m	([Ldpm;Ldpm;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Ldpk;	b	getCachedBlockType
		p	1		x
		p	2		y
		p	3		z
	m	(Ldpm;)Z	b	isNodeValid
	f	Z	j	allowBreaching
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	k	pathTypesByPosCache
c	dps	net/minecraft/world/level/pathfinder/Target
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Ldpm;)V	<init>	<init>
		p	1		node
	m	(FLdpm;)V	a	updateBest
		p	1		distance
		p	2		node
	m	(Lqx;)Ldps;	c	createFromStream
		p	0		buffer
	m	()Ldpm;	d	getBestNode
	m	()V	e	setReached
	m	()Z	f	isReached
	f	F	m	bestHeuristic
	f	Ldpm;	n	bestNode
	f	Z	o	reached
c	dpt	net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	m	()Ldpm;	a	getStart
	m	(DDD)Ldps;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(IIIIDLgy;Ldpk;)Ldpm;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
		p	4		maxYStep
		p	5		prevFeetY
		p	7		direction
		p	8		nodeType
	m	(IIILbbh;J)Ldpk;	a	lambda$getCachedBlockType$1
	m	(IIILdpk;F)Ldpm;	a	getNodeAndUpdateCostToMax
	m	(Lbbh;III)Ldpk;	a	getCachedBlockType
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbbh;Lgt;)Ldpk;	a	getBlockPathType
		p	1		entity
		p	2		pos
	m	(Lcfg;III)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcfg;IIIIIIZZLjava/util/EnumSet;Ldpk;Lgt;)Ldpk;	a	getBlockPathTypes
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		sizeX
		p	6		sizeY
		p	7		sizeZ
		p	8		canOpenDoors
		p	9		canEnterOpenDoors
		p	10		nearbyTypes
		p	11		type
		p	12		pos
	m	(Lcfg;IIILbbh;IIIZZ)Ldpk;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		canOpenDoors
		p	10		canEnterOpenDoors
	m	(Lcfg;Lgt$a;)Ldpk;	a	getBlockPathTypeStatic
		p	0		world
		p	1		pos
	m	(Lcfg;Lgt$a;Ldpk;)Ldpk;	a	checkNeighbourBlocks
		p	0		world
		p	1		pos
		p	2		nodeType
	m	(Lcfg;Lgt;)D	a	getFloorLevel
		p	0		world
		p	1		pos
	m	(Lcfg;ZZLgt;Ldpk;)Ldpk;	a	evaluateBlockPathType
		p	1		world
		p	2		canOpenDoors
		p	3		canEnterOpenDoors
		p	4		pos
		p	5		type
	m	(Lcgn;Lbbh;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lcur;)Z	a	isBurningBlock
		p	0		state
	m	(Ldpk;)Z	a	doesBlockHavePartialCollision
		p	0		nodeType
	m	(Ldpm;Ldpm;)Z	a	isNeighborValid
		p	1		node
		p	2		successor1
	m	(Ldpm;Ldpm;Ldpm;Ldpm;)Z	a	isDiagonalValid
		p	1		xNode
		p	2		zNode
		p	3		xDiagNode
		p	4		zDiagNode
	m	(Ldvo;)Z	a	hasCollisions
		p	1		box
	m	(Ldvo;Ljava/lang/Object;)Z	a	lambda$hasCollisions$0
	m	(Lgt;)D	a	getFloorLevel
		p	1		pos
	m	([Ldpm;Ldpm;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Ldpm;	b	getBlockedNode
	m	(Lcfg;Lgt;)Ldpk;	b	getBlockPathTypeRaw
		p	0		world
		p	1		pos
	m	(Ldpm;)Z	b	canReachWithoutCollision
		p	1		node
	m	()Z	c	isAmphibious
	m	(Lgt;)Ldpm;	c	getStartNode
		p	1		pos
	m	(Lgt;)Z	d	hasPositiveMalus
		p	1		pos
	f	D	j	SPACE_BETWEEN_WALL_POSTS
	f	F	k	oldWaterCost
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypesByPosCache
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	m	collisionCache
c	dpu	net/minecraft/world/level/pathfinder/package-info
c	dpv	net/minecraft/world/level/portal/PortalForcer
	m	(Lafo;)V	<init>	<init>
		p	1		world
	m	(Lblw;)Ln$a;	a	lambda$findPortalAround$6
		p	1		poi
	m	(Lcur;Lgt;)Z	a	lambda$findPortalAround$5
		p	2		pos
	m	(Lcwh;Lblw;)Z	a	lambda$findPortalAround$1
		p	1		poi
	m	(Lgt;Lblw;)D	a	lambda$findPortalAround$2
		p	1		poi
	m	(Lgt;Lgt$a;Lgy;I)Z	a	canHostFrame
		p	1		pos
		p	2		temp
		p	3		portalDirection
		p	4		distanceOrthogonalToPortal
	m	(Lgt;Lgy$a;)Ljava/util/Optional;	a	createPortal
		p	1		pos
		p	2		axis
	m	(Lgt;ZLcwh;)Ljava/util/Optional;	a	findPortalAround
		p	1		pos
		p	2		destIsNether
		p	3		worldBorder
	m	(Lhc;)Z	a	lambda$findPortalAround$0
	m	(Lblw;)Z	b	lambda$findPortalAround$4
		p	1		poi
	m	(Lblw;)I	c	lambda$findPortalAround$3
		p	0		poi
	f	I	a	TICKET_RADIUS
	f	I	b	SEARCH_RADIUS
	f	I	c	CREATE_RADIUS
	f	I	d	FRAME_HEIGHT
	f	I	e	FRAME_WIDTH
	f	I	f	FRAME_BOX
	f	I	g	FRAME_HEIGHT_START
	f	I	h	FRAME_HEIGHT_END
	f	I	i	FRAME_WIDTH_START
	f	I	j	FRAME_WIDTH_END
	f	I	k	FRAME_BOX_START
	f	I	l	FRAME_BOX_END
	f	I	m	NOTHING_FOUND
	f	Lafo;	n	level
c	dpw	net/minecraft/world/level/portal/PortalInfo
	m	(Ldvt;Ldvt;FF)V	<init>	<init>
		p	1		position
		p	2		velocity
		p	3		yaw
		p	4		pitch
	f	Ldvt;	a	pos
	f	Ldvt;	b	speed
	f	F	c	yRot
	f	F	d	xRot
c	dpx	net/minecraft/world/level/portal/PortalShape
	m	(Lcgb;Lgt;Lgy$a;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		axis
	m	()Z	a	isValid
	m	(Lafo;Ln$a;Lgy$a;Ldvt;Lbar;Ldvt;FF)Ldpw;	a	createPortalInfo
		p	0		destination
		p	1		portalRect
		p	2		portalAxis
		p	3		offset
		p	4		dimensions
		p	5		velocity
		p	6		yaw
		p	7		pitch
	m	(Lcgb;Lgt;Lgy$a;)Ljava/util/Optional;	a	findEmptyPortalShape
		p	0		world
		p	1		pos
		p	2		axis
	m	(Lcgb;Lgt;Ljava/util/function/Predicate;Lgy$a;)Ljava/util/Optional;	a	findPortalShape
		p	0		world
		p	1		pos
		p	3		axis
	m	(Lcur;)Z	a	isEmpty
		p	0		state
	m	(Lcur;Lcfg;Lgt;)Z	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcur;Lgt;)V	a	lambda$createPortalBlocks$2
	m	(Ldpx;)Z	a	lambda$findEmptyPortalShape$1
	m	(Lgt$a;)I	a	getDistanceUntilTop
	m	(Lgt$a;I)Z	a	hasTopFrame
	m	(Lgt;)Lgt;	a	calculateBottomLeft
		p	1		pos
	m	(Lgt;Lgy;)I	a	getDistanceUntilEdgeAboveFrame
		p	1		pos
		p	2		direction
	m	(Ln$a;Lgy$a;Ldvt;Lbar;)Ldvt;	a	getRelativePosition
		p	0		portalRect
		p	1		portalAxis
		p	2		entityPos
		p	3		entityDimensions
	m	()V	b	createPortalBlocks
	m	()Z	c	isComplete
	m	()I	d	calculateWidth
	m	()I	e	calculateHeight
	f	I	a	MAX_WIDTH
	f	I	b	MAX_HEIGHT
	f	I	c	MIN_WIDTH
	f	I	d	MIN_HEIGHT
	f	Lcuq$e;	e	FRAME
	f	Lcgb;	f	level
	f	Lgy$a;	g	axis
	f	Lgy;	h	rightDir
	f	I	i	numPortalBlocks
	f	Lgt;	j	bottomLeft
	f	I	k	height
	f	I	l	width
c	dpy	net/minecraft/world/level/portal/package-info
c	dpz	net/minecraft/world/level/redstone/CollectingNeighborUpdater
	m	(Lcga;I)V	<init>	<init>
		p	1		world
		p	2		maxChainDepth
	m	()V	a	runUpdates
	m	(Lcur;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgt;Lciw;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lciw;Lgy;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lgt;Ldpz$c;)V	a	addAndRun
		p	1		pos
		p	2		entry
	m	(Lgy;Lcur;Lgt;Lgt;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcga;	c	level
	f	I	d	maxChainedNeighborUpdates
	f	Ljava/util/ArrayDeque;	e	stack
	f	Ljava/util/List;	f	addedThisLayer
	f	I	g	count
c	dpz$a	net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate
	m	()Lcur;	a	state
	m	(Lcga;)Z	a	runNext
		p	1		world
	m	()Lgt;	b	pos
	m	()Lciw;	c	block
	m	()Lgt;	d	neighborPos
	m	()Z	e	movedByPiston
	f	Lcur;	a	state
	f	Lgt;	b	pos
	f	Lciw;	c	block
	f	Lgt;	d	neighborPos
	f	Z	e	movedByPiston
c	dpz$b	net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate
	m	(Lgt;Lciw;Lgy;)V	<init>	<init>
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lcga;)Z	a	runNext
		p	1		world
	f	Lgt;	a	sourcePos
	f	Lciw;	b	sourceBlock
	f	Lgy;	c	skipDirection
	f	I	d	idx
c	dpz$c	net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates
	m	(Lcga;)Z	a	runNext
		p	1		world
c	dpz$d	net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate
	m	()Lgy;	a	direction
	m	(Lcga;)Z	a	runNext
		p	1		world
	m	()Lcur;	b	state
	m	()Lgt;	c	pos
	m	()Lgt;	d	neighborPos
	m	()I	e	updateFlags
	f	Lgy;	a	direction
	f	Lcur;	b	state
	f	Lgt;	c	pos
	f	Lgt;	d	neighborPos
	f	I	e	updateFlags
c	dpz$e	net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate
	m	()Lgt;	a	pos
	m	(Lcga;)Z	a	runNext
		p	1		world
	m	()Lciw;	b	block
	m	()Lgt;	c	neighborPos
	f	Lgt;	a	pos
	f	Lciw;	b	block
	f	Lgt;	c	neighborPos
c	dqa	net/minecraft/world/level/redstone/InstantNeighborUpdater
	m	(Lcga;)V	<init>	<init>
		p	1		world
	m	(Lcur;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgt;Lciw;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgy;Lcur;Lgt;Lgt;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Lcga;	b	level
c	dqb	net/minecraft/world/level/redstone/NeighborUpdater
	m	(Lcga;Lcur;Lgt;Lciw;Lgt;Z)V	a	executeUpdate
		p	0		world
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcgb;Lgy;Lcur;Lgt;Lgt;II)V	a	executeShapeUpdate
		p	0		world
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lciw;)Ljava/lang/String;	a	lambda$executeUpdate$0
	m	(Lcur;Lgt;Lciw;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgt;Lciw;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lciw;Lgy;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lgy;Lcur;Lgt;Lgt;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	[Lgy;	a	UPDATE_ORDER
c	dqc	net/minecraft/world/level/redstone/Redstone
	f	I	a	SIGNAL_MIN
	f	I	b	SIGNAL_MAX
	f	I	c	SIGNAL_NONE
c	dqd	net/minecraft/world/level/redstone/package-info
c	dqe	net/minecraft/world/level/saveddata/SavedData
	m	(Ljava/io/File;)V	a	save
		p	1		file
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()V	b	setDirty
	m	()Z	c	isDirty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	dirty
c	dqf	net/minecraft/world/level/saveddata/maps/MapBanner
	m	(Lgt;Lbyt;Lrm;)V	<init>	<init>
		p	1		pos
		p	2		dyeColor
		p	3		name
	m	()Lgt;	a	getPos
	m	(Lcfg;Lgt;)Ldqf;	a	fromWorld
		p	0		blockView
		p	1		blockPos
	m	(Lpj;)Ldqf;	a	load
		p	0		nbt
	m	()Lbyt;	b	getColor
	m	()Ldqg$a;	c	getDecoration
	m	()Lrm;	d	getName
	m	()Lpj;	e	save
	m	()Ljava/lang/String;	f	getId
	f	Lgt;	a	pos
	f	Lbyt;	b	color
	f	Lrm;	c	name
c	dqf$1	net/minecraft/world/level/saveddata/maps/MapBanner$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	dqg	net/minecraft/world/level/saveddata/maps/MapDecoration
	m	(Ldqg$a;BBBLrm;)V	<init>	<init>
		p	1		type
		p	2		x
		p	3		z
		p	4		rotation
		p	5		text
	m	()B	a	getImage
	m	()Ldqg$a;	b	getType
	m	()B	c	getX
	m	()B	d	getY
	m	()B	e	getRot
	m	()Z	f	renderOnFrame
	m	()Lrm;	g	getName
	f	Ldqg$a;	a	type
	f	B	b	x
	f	B	c	y
	f	B	d	rot
	f	Lrm;	e	name
c	dqg$a	net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	m	(Ljava/lang/String;IZIZ)V	<init>	<init>
		p	3		alwaysRender
		p	4		tintColor
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		alwaysRender
	m	()B	a	getIcon
	m	(B)Ldqg$a;	a	byIcon
		p	0		id
	m	()Z	b	isRenderedOnFrame
	m	()Z	c	hasMapColor
	m	()I	d	getMapColor
	m	()Z	e	shouldTrackCount
	m	()[Ldqg$a;	f	$values
	f	Ldqg$a;	A	RED_X
	f	B	B	icon
	f	Z	C	renderedOnFrame
	f	I	D	mapColor
	f	Z	E	trackCount
	f	[Ldqg$a;	F	$VALUES
	f	Ldqg$a;	a	PLAYER
	f	Ldqg$a;	b	FRAME
	f	Ldqg$a;	c	RED_MARKER
	f	Ldqg$a;	d	BLUE_MARKER
	f	Ldqg$a;	e	TARGET_X
	f	Ldqg$a;	f	TARGET_POINT
	f	Ldqg$a;	g	PLAYER_OFF_MAP
	f	Ldqg$a;	h	PLAYER_OFF_LIMITS
	f	Ldqg$a;	i	MANSION
	f	Ldqg$a;	j	MONUMENT
	f	Ldqg$a;	k	BANNER_WHITE
	f	Ldqg$a;	l	BANNER_ORANGE
	f	Ldqg$a;	m	BANNER_MAGENTA
	f	Ldqg$a;	n	BANNER_LIGHT_BLUE
	f	Ldqg$a;	o	BANNER_YELLOW
	f	Ldqg$a;	p	BANNER_LIME
	f	Ldqg$a;	q	BANNER_PINK
	f	Ldqg$a;	r	BANNER_GRAY
	f	Ldqg$a;	s	BANNER_LIGHT_GRAY
	f	Ldqg$a;	t	BANNER_CYAN
	f	Ldqg$a;	u	BANNER_PURPLE
	f	Ldqg$a;	v	BANNER_BLUE
	f	Ldqg$a;	w	BANNER_BROWN
	f	Ldqg$a;	x	BANNER_GREEN
	f	Ldqg$a;	y	BANNER_RED
	f	Ldqg$a;	z	BANNER_BLACK
c	dqh	net/minecraft/world/level/saveddata/maps/MapFrame
	m	(Lgt;II)V	<init>	<init>
		p	1		pos
		p	2		rotation
		p	3		entityId
	m	()Lpj;	a	save
	m	(Lgt;)Ljava/lang/String;	a	frameId
		p	0		pos
	m	(Lpj;)Ldqh;	a	load
		p	0		nbt
	m	()Lgt;	b	getPos
	m	()I	c	getRotation
	m	()I	d	getEntityId
	m	()Ljava/lang/String;	e	getId
	f	Lgt;	a	pos
	f	I	b	rotation
	f	I	c	entityId
c	dqi	net/minecraft/world/level/saveddata/maps/MapIndex
	m	()I	a	getFreeAuxValueForMap
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lpj;)Ldqi;	b	load
		p	0		nbt
	f	Ljava/lang/String;	a	FILE_NAME
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	usedAuxIds
c	dqj	net/minecraft/world/level/saveddata/maps/MapItemSavedData
	m	(IIBZZZLaai;)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
		p	6		locked
		p	7		dimension
	m	()Ldqj;	a	locked
	m	(BZLaai;)Ldqj;	a	createForClient
		p	0		scale
		p	1		showIcons
		p	2		dimension
	m	(DDBZZLaai;)Ldqj;	a	createFresh
		p	0		centerX
		p	2		centerZ
		p	4		scale
		p	5		showIcons
		p	6		unlimitedTracking
		p	7		dimension
	m	(I)Ldqj;	a	scaled
		p	1		zoomOutScale
	m	(II)V	a	setColorsDirty
		p	1		x
		p	2		z
	m	(IIB)Z	a	updateColor
		p	1		x
		p	2		z
		p	3		color
	m	(ILbtf;)Lso;	a	getUpdatePacket
		p	1		id
		p	2		player
	m	(Lbtf;)Ldqj$a;	a	getHoldingPlayer
		p	1		player
	m	(Lbtf;Lcaa;)V	a	tickCarriedBy
		p	1		player
		p	2		stack
	m	(Lcaa;Lgt;Ljava/lang/String;Ldqg$a;)V	a	addTargetDecoration
		p	0		stack
		p	1		pos
		p	2		id
		p	3		type
	m	(Lcfg;II)V	a	checkBanners
		p	1		world
		p	2		x
		p	3		z
	m	(Lcgb;Lgt;)Z	a	toggleBanner
		p	1		world
		p	2		pos
	m	(Ldqg$a;Lcgb;Ljava/lang/String;DDDLrm;)V	a	addDecoration
		p	1		type
		p	2		world
		p	3		key
		p	4		x
		p	6		z
		p	8		rotation
		p	10		text
	m	(Lgt;I)V	a	removedFromFrame
		p	1		pos
		p	2		id
	m	(Ljava/lang/String;)V	a	removeDecoration
		p	1		id
	m	(Ljava/util/List;)V	a	addClientSideDecorations
		p	1		icons
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lpj;Lqc;)V	a	lambda$save$1
	m	(I)Z	b	isTrackedCountOverLimit
	m	(IIB)V	b	setColor
		p	1		x
		p	2		z
		p	3		color
	m	(Lpj;)Ldqj;	b	load
		p	0		nbt
	m	(Lpj;)Ljava/lang/IllegalArgumentException;	c	lambda$load$0
	m	()Ljava/util/Collection;	d	getBanners
	m	()Z	e	isExplorationMap
	m	()Ljava/lang/Iterable;	f	getDecorations
	m	()V	g	setDecorationsDirty
	f	I	a	MAX_SCALE
	f	I	b	TRACKED_DECORATION_LIMIT
	f	I	c	x
	f	I	d	z
	f	Laai;	e	dimension
	f	B	f	scale
	f	[B	g	colors
	f	Z	h	locked
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	MAP_SIZE
	f	I	k	HALF_MAP_SIZE
	f	Z	l	trackingPosition
	f	Z	m	unlimitedTracking
	f	Ljava/util/List;	n	carriedBy
	f	Ljava/util/Map;	o	carriedByPlayers
	f	Ljava/util/Map;	p	bannerMarkers
	f	Ljava/util/Map;	q	decorations
	f	Ljava/util/Map;	r	frameMarkers
	f	I	s	trackedDecorationCount
c	dqj$a	net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	m	(Ldqj;Lbtf;)V	<init>	<init>
		p	2		player
	m	()Ldqj$b;	a	createPatch
	m	(I)Lso;	a	nextUpdatePacket
		p	1		mapId
	m	(II)V	a	markColorsDirty
		p	1		startX
		p	2		startZ
	m	()V	b	markDecorationsDirty
	f	Lbtf;	a	player
	f	I	b	step
	f	Ldqj;	c	this$0
	f	Z	d	dirtyData
	f	I	e	minDirtyX
	f	I	f	minDirtyY
	f	I	g	maxDirtyX
	f	I	h	maxDirtyY
	f	Z	i	dirtyDecorations
	f	I	j	tick
c	dqj$b	net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	m	(IIII[B)V	<init>	<init>
		p	1		startX
		p	2		startZ
		p	3		width
		p	4		height
		p	5		colors
	m	(Ldqj;)V	a	applyToMap
		p	1		mapState
	f	I	a	startX
	f	I	b	startY
	f	I	c	width
	f	I	d	height
	f	[B	e	mapColors
c	dqk	net/minecraft/world/level/saveddata/maps/package-info
c	dql	net/minecraft/world/level/saveddata/package-info
c	dqm	net/minecraft/world/level/storage/CommandStorage
	m	(Ldqp;)V	<init>	<init>
		p	1		stateManager
	m	()Ljava/util/stream/Stream;	a	keys
	m	(Laaj;)Lpj;	a	get
		p	1		id
	m	(Laaj;Lpj;)V	a	set
		p	1		id
		p	2		nbt
	m	(Ljava/lang/String;)Ldqm$a;	a	newStorage
		p	1		namespace
	m	(Ljava/lang/String;Lpj;)Ldqm$a;	a	lambda$set$1
		p	2		data
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$keys$3
		p	0		entry
	m	(Ljava/lang/String;)Ljava/lang/String;	b	createId
		p	0		namespace
	m	(Ljava/lang/String;Lpj;)Ldqm$a;	b	lambda$get$0
		p	2		data
	m	(Ljava/lang/String;)Ldqm$a;	c	lambda$set$2
	f	Ljava/lang/String;	a	ID_PREFIX
	f	Ljava/util/Map;	b	namespaces
	f	Ldqp;	c	storage
c	dqm$a	net/minecraft/world/level/storage/CommandStorage$Container
	m	(Ljava/lang/String;)Lpj;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/lang/String;)Laaj;	a	lambda$getKeys$1
		p	1		key
	m	(Ljava/lang/String;Lpj;)V	a	put
		p	1		name
		p	2		nbt
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lpj;Ljava/lang/String;Lpj;)V	a	lambda$save$0
		p	1		key
		p	2		value
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	b	getKeys
		p	1		namespace
	m	(Lpj;)Ldqm$a;	b	load
		p	1		nbt
	f	Ljava/lang/String;	a	TAG_CONTENTS
	f	Ljava/util/Map;	b	storage
c	dqn	net/minecraft/world/level/storage/DataVersion
	m	(I)V	<init>	<init>
		p	1		id
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		series
	m	()Z	a	isSideSeries
	m	(Ldqn;)Z	a	isCompatible
		p	1		other
	m	()Ljava/lang/String;	b	getSeries
	m	()I	c	getVersion
	f	Ljava/lang/String;	a	MAIN_SERIES
	f	I	b	version
	f	Ljava/lang/String;	c	series
c	dqo	net/minecraft/world/level/storage/DerivedLevelData
	m	(Ldqz;Ldqy;)V	<init>	<init>
		p	1		saveProperties
		p	2		worldProperties
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lcfx;)V	a	setGameType
		p	1		gameMode
	m	(Lcwh$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Lgt;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lr;Lcgc;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
		p	1		spawnZ
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcfx;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcfw;	q	getGameRules
	m	()Lcwh$c;	r	getWorldBorder
	m	()Lazj;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Ldvl;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	f	Ldqz;	a	worldData
	f	Ldqy;	b	wrapped
c	dqp	net/minecraft/world/level/storage/DimensionDataStorage
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		directory
		p	2		dataFixer
	m	()V	a	save
	m	(Ljava/io/PushbackInputStream;)Z	a	isGzip
	m	(Ljava/lang/String;)Ljava/io/File;	a	getDataFile
		p	1		id
	m	(Ljava/lang/String;I)Lpj;	a	readTagFromDisk
		p	1		id
		p	2		dataVersion
	m	(Ljava/lang/String;Ldqe;)V	a	set
		p	1		id
		p	2		state
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ldqe;	a	get
		p	1		readFunction
		p	2		id
	m	(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Ldqe;	a	computeIfAbsent
		p	1		readFunction
		p	2		supplier
		p	3		id
	m	(Ljava/lang/String;Ldqe;)V	b	lambda$save$0
		p	1		id
		p	2		state
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ldqe;	b	readSavedData
		p	1		readFunction
		p	2		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	cache
	f	Lcom/mojang/datafixers/DataFixer;	c	fixerUpper
	f	Ljava/io/File;	d	dataFolder
c	dqq	net/minecraft/world/level/storage/LevelData
	m	()I	a	getXSpawn
	m	(Lcgc;)Ljava/lang/String;	a	lambda$fillCrashReportCategory$0
	m	(Lr;Lcgc;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	()I	b	getYSpawn
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	()F	d	getSpawnAngle
	m	()J	e	getGameTime
	m	()J	f	getDayTime
	m	()Ljava/lang/String;	g	lambda$fillCrashReportCategory$1
	m	()Z	i	isThundering
	m	()Z	k	isRaining
	m	()Z	n	isHardcore
	m	()Lcfw;	q	getGameRules
	m	()Lazj;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
c	dqr	net/minecraft/world/level/storage/LevelResource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		relativePath
	m	()Ljava/lang/String;	a	getId
	f	Ldqr;	a	PLAYER_ADVANCEMENTS_DIR
	f	Ldqr;	b	PLAYER_STATS_DIR
	f	Ldqr;	c	PLAYER_DATA_DIR
	f	Ldqr;	d	PLAYER_OLD_DATA_DIR
	f	Ldqr;	e	LEVEL_DATA_FILE
	f	Ldqr;	f	OLD_LEVEL_DATA_FILE
	f	Ldqr;	g	ICON_FILE
	f	Ldqr;	h	LOCK_FILE
	f	Ldqr;	i	GENERATED_DIR
	f	Ldqr;	j	DATAPACK_DIR
	f	Ldqr;	k	MAP_RESOURCE_FILE
	f	Ldqr;	l	ROOT
	f	Ljava/lang/String;	m	id
c	dqs	net/minecraft/world/level/storage/LevelStorageException
	m	(Lrm;)V	<init>	<init>
		p	1		messageText
	m	()Lrm;	a	getMessageComponent
	f	Lrm;	a	messageComponent
c	dqt	net/minecraft/world/level/storage/LevelStorageSource
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		savesDirectory
		p	2		backupsDirectory
		p	3		dataFixer
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;)Lcfo;	a	readDataPackConfig
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair;	a	readWorldGenSettings
		p	0		levelData
		p	1		dataFixer
		p	2		version
	m	(Lcom/mojang/serialization/DynamicOps;Lcfo;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction;	a	getLevelData
		p	0		ops
		p	1		dataPackSettings
		p	2		lifecycle
	m	(Lcom/mojang/serialization/DynamicOps;Lcfo;Lcom/mojang/serialization/Lifecycle;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Ldqx;	a	lambda$getLevelData$5
		p	3		path
		p	4		dataFixer
	m	(Ldqt$a;)Ljava/util/concurrent/CompletableFuture;	a	loadLevelSummaries
		p	1		levels
	m	(Ldqt$b;)Ldqu;	a	lambda$loadLevelSummaries$3
	m	(Ldqt$b;Ljava/util/function/BiFunction;)Ljava/lang/Object;	a	readLevelData
		p	1		levelSave
		p	2		levelDataParser
	m	(Ldqt$b;Z)Ljava/util/function/BiFunction;	a	levelSummaryReader
		p	1		levelSave
		p	2		locked
	m	(Ldqt$b;ZLjava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Ldqu;	a	lambda$levelSummaryReader$6
		p	3		path
		p	4		dataFixer
	m	(Ljava/lang/String;)Z	a	isNewLevelIdAcceptable
		p	1		name
	m	(Ljava/nio/file/Path;)Ldqt;	a	createDefault
		p	0		path
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcfo;	a	getDataPacks
		p	0		path
		p	1		dataFixer
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$loadLevelSummaries$4
		p	0		summaries
	m	()Ldqt$a;	b	findLevelCandidates
	m	(Lcom/mojang/serialization/Dynamic;)Ldap;	b	lambda$readWorldGenSettings$0
	m	(Ldqt$b;)Z	b	lambda$findLevelCandidates$2
		p	0		levelSave
	m	(Ljava/lang/String;)Z	b	levelExists
		p	1		name
	m	(Ljava/nio/file/Path;)Lqc;	b	readLightweightData
		p	0		path
	m	()Ljava/nio/file/Path;	c	getBaseDir
	m	(Ljava/lang/String;)Ldqt$c;	c	createAccess
		p	1		directoryName
	m	(Ljava/nio/file/Path;)Z	c	lambda$findLevelCandidates$1
		p	0		path
	m	()Ljava/nio/file/Path;	d	getBackupPath
	m	()I	e	getStorageVersion
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	FORMATTER
	f	Lcom/google/common/collect/ImmutableList;	c	OLD_SETTINGS_KEYS
	f	Ljava/lang/String;	d	TAG_DATA
	f	Ljava/nio/file/Path;	e	baseDir
	f	Ljava/nio/file/Path;	f	backupDir
	f	Lcom/mojang/datafixers/DataFixer;	g	fixerUpper
c	dqt$a	net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates
	m	()Z	a	isEmpty
	m	()Ljava/util/List;	b	levels
	f	Ljava/util/List;	a	levels
c	dqt$b	net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory
	m	()Ljava/lang/String;	a	directoryName
	m	(Ldqr;)Ljava/nio/file/Path;	a	resourcePath
		p	1		savePath
	m	(Ljava/time/LocalDateTime;)Ljava/nio/file/Path;	a	corruptedDataFile
		p	1		dateTime
	m	()Ljava/nio/file/Path;	b	dataFile
	m	()Ljava/nio/file/Path;	c	oldDataFile
	m	()Ljava/nio/file/Path;	d	iconFile
	m	()Ljava/nio/file/Path;	e	lockFile
	m	()Ljava/nio/file/Path;	f	path
	f	Ljava/nio/file/Path;	a	path
c	dqt$c	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	m	(Ldqt;Ljava/lang/String;)V	<init>	<init>
		p	2		directoryName
	m	()Ljava/lang/String;	a	getLevelId
	m	(Laai;)Ljava/nio/file/Path;	a	getDimensionPath
		p	1		key
	m	(Lcom/mojang/serialization/DynamicOps;Lcfo;Lcom/mojang/serialization/Lifecycle;)Ldqz;	a	getDataTag
		p	1		ops
		p	2		dataPackSettings
		p	3		lifecycle
	m	(Ldqr;)Ljava/nio/file/Path;	a	getLevelPath
		p	1		savePath
	m	(Lhn;Ldqz;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
	m	(Lhn;Ldqz;Lpj;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
		p	3		nbt
	m	(Ljava/lang/String;)V	a	renameLevel
		p	1		name
	m	()Ldqw;	b	createPlayerStorage
	m	()Ldqu;	c	getSummary
	m	()Lcfo;	d	getDataPacks
	m	()Ljava/util/Optional;	e	getIconFile
	m	()V	f	deleteLevel
	m	()J	g	makeWorldBackup
	m	()V	h	checkLock
	f	Ldqt;	a	this$0
	f	Lakw;	b	lock
	f	Ldqt$b;	c	levelDirectory
	f	Ljava/lang/String;	d	levelId
	f	Ljava/util/Map;	e	resources
c	dqt$c$1	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	m	(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	a	postVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$lockPath
	f	Ldqt$c;	b	this$1
c	dqt$c$2	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$rootPath
	f	Ljava/util/zip/ZipOutputStream;	b	val$stream
	f	Ldqt$c;	c	this$1
c	dqu	net/minecraft/world/level/storage/LevelSummary
	m	(Lcge;Ldqv;Ljava/lang/String;ZZLjava/nio/file/Path;)V	<init>	<init>
		p	1		levelInfo
		p	2		versionInfo
		p	3		name
		p	4		requiresConversion
		p	5		locked
		p	6		iconPath
	m	()Ljava/lang/String;	a	getLevelId
	m	(Ldqu;)I	a	compareTo
	m	()Ljava/lang/String;	b	getLevelName
	m	()Ljava/nio/file/Path;	c	getIcon
	m	()Z	d	requiresManualConversion
	m	()J	e	getLastPlayed
	m	()Lcge;	f	getSettings
	m	()Lcfx;	g	getGameMode
	m	()Z	h	isHardcore
	m	()Z	i	hasCheats
	m	()Lrt;	j	getWorldVersionName
	m	()Ldqv;	k	levelVersion
	m	()Z	l	markVersionInList
	m	()Z	m	askToOpenWorld
	m	()Ldqu$a;	n	backupStatus
	m	()Z	o	isLocked
	m	()Z	p	isDisabled
	m	()Z	q	isCompatible
	m	()Lrm;	r	getInfo
	m	()Lrm;	s	createInfo
	f	Lcge;	a	settings
	f	Ldqv;	b	levelVersion
	f	Ljava/lang/String;	c	levelId
	f	Z	d	requiresManualConversion
	f	Z	e	locked
	f	Ljava/nio/file/Path;	f	icon
	f	Lrm;	g	info
c	dqu$a	net/minecraft/world/level/storage/LevelSummary$BackupStatus
	m	(Ljava/lang/String;IZZLjava/lang/String;)V	<init>	<init>
		p	3		backup
		p	4		boldRedFormatting
		p	5		translationKeySuffix
	m	()Z	a	shouldBackup
	m	()Z	b	isSevere
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()[Ldqu$a;	d	$values
	f	Ldqu$a;	a	NONE
	f	Ldqu$a;	b	DOWNGRADE
	f	Ldqu$a;	c	UPGRADE_TO_SNAPSHOT
	f	Z	d	shouldBackup
	f	Z	e	severe
	f	Ljava/lang/String;	f	translationKey
	f	[Ldqu$a;	g	$VALUES
c	dqv	net/minecraft/world/level/storage/LevelVersion
	m	(IJLjava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	1		levelFormatVersion
		p	2		lastPlayed
		p	4		versionName
		p	5		versionId
		p	6		series
		p	7		stable
	m	()I	a	levelDataVersion
	m	(Lcom/mojang/serialization/Dynamic;)Ldqv;	a	parse
		p	0		dynamic
	m	()J	b	lastPlayed
	m	()Ljava/lang/String;	c	minecraftVersionName
	m	()Ldqn;	d	minecraftVersion
	m	()Z	e	snapshot
	f	I	a	levelDataVersion
	f	J	b	lastPlayed
	f	Ljava/lang/String;	c	minecraftVersionName
	f	Ldqn;	d	minecraftVersion
	f	Z	e	snapshot
c	dqw	net/minecraft/world/level/storage/PlayerDataStorage
	m	(Ldqt$c;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		session
		p	2		dataFixer
	m	()[Ljava/lang/String;	a	getSeenPlayers
	m	(Lbtf;)V	a	save
		p	1		player
	m	(Lbtf;)Lpj;	b	load
		p	1		player
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	playerDir
c	dqx	net/minecraft/world/level/storage/PrimaryLevelData
	m	(Lcge;Ldap;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		levelInfo
		p	2		generatorOptions
		p	3		lifecycle
	m	(Lcom/mojang/datafixers/DataFixer;ILpj;ZIIIFJJIIIZIZZZLcwh$c;IILjava/util/UUID;Ljava/util/Set;Ldvl;Lpj;Lpj;Lcge;Ldap;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	2		dataVersion
		p	3		playerData
		p	4		modded
		p	5		spawnX
		p	6		spawnY
		p	7		spawnZ
		p	8		spawnAngle
		p	9		time
		p	11		timeOfDay
		p	13		version
		p	14		clearWeatherTime
		p	15		rainTime
		p	16		raining
		p	17		thunderTime
		p	18		thundering
		p	19		initialized
		p	20		difficultyLocked
		p	21		worldBorder
		p	22		wanderingTraderSpawnDelay
		p	23		wanderingTraderSpawnChance
		p	24		wanderingTraderId
		p	25		serverBrands
		p	26		scheduledEvents
		p	27		customBossEvents
		p	28		dragonFight
		p	29		levelInfo
		p	30		generatorOptions
		p	31		lifecycle
	m	()Ldap;	A	worldGenSettings
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Lpj;	C	endDragonFightData
	m	()Lcfo;	D	getDataPackConfig
	m	()Lpj;	E	getCustomBossEvents
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ldqy;	H	overworldData
	m	()Lcge;	I	getLevelSettings
	m	()V	J	updatePlayerTag
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lazj;)V	a	setDifficulty
		p	1		difficulty
	m	(Lcfo;)V	a	setDataPackConfig
		p	1		dataPackSettings
	m	(Lcfx;)V	a	setGameType
		p	1		gameMode
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	a	lambda$parse$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILpj;Lcge;Ldqv;Ldap;Lcom/mojang/serialization/Lifecycle;)Ldqx;	a	parse
		p	0		dynamic
		p	1		dataFixer
		p	2		dataVersion
		p	3		playerData
		p	4		levelInfo
		p	5		saveVersionInfo
		p	6		generatorOptions
		p	7		lifecycle
	m	(Lcwh$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Lgt;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Lhn;Lpj;)Lpj;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Lhn;Lpj;Lpj;)V	a	setTagData
		p	1		registryManager
		p	2		levelNbt
		p	3		playerNbt
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lpj;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	(Lpj;Lqc;)V	a	lambda$setTagData$3
	m	(Lr;Lcgc;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Lcom/mojang/serialization/Dynamic;)Lqc;	b	lambda$parse$0
	m	(Lpj;)V	b	setCustomBossEvents
		p	1		customBossEvents
	m	(Lpj;Lqc;)V	b	lambda$setTagData$2
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
		p	1		spawnZ
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcfx;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcfw;	q	getGameRules
	m	()Lcwh$c;	r	getWorldBorder
	m	()Lazj;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Ldvl;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Lpj;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	Lcwh$c;	A	worldBorder
	f	Lpj;	B	endDragonFightData
	f	Lpj;	C	customBossEvents
	f	I	D	wanderingTraderSpawnDelay
	f	I	E	wanderingTraderSpawnChance
	f	Ljava/util/UUID;	F	wanderingTraderId
	f	Ljava/util/Set;	G	knownServerBrands
	f	Z	H	wasModded
	f	Ldvl;	I	scheduledEvents
	f	Ljava/lang/String;	a	PLAYER
	f	Ljava/lang/String;	b	WORLD_GEN_SETTINGS
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcge;	f	settings
	f	Ldap;	g	worldGenSettings
	f	Lcom/mojang/serialization/Lifecycle;	h	worldGenSettingsLifecycle
	f	I	i	xSpawn
	f	I	j	ySpawn
	f	I	k	zSpawn
	f	F	l	spawnAngle
	f	J	m	gameTime
	f	J	n	dayTime
	f	Lcom/mojang/datafixers/DataFixer;	o	fixerUpper
	f	I	p	playerDataVersion
	f	Z	q	upgradedPlayerTag
	f	Lpj;	r	loadedPlayerTag
	f	I	s	version
	f	I	t	clearWeatherTime
	f	Z	u	raining
	f	I	v	rainTime
	f	Z	w	thundering
	f	I	x	thunderTime
	f	Z	y	initialized
	f	Z	z	difficultyLocked
c	dqy	net/minecraft/world/level/storage/ServerLevelData
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lcfx;)V	a	setGameType
		p	1		gameMode
	m	(Lcwh$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lr;Lcgc;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()I	j	getThunderTime
	m	()I	l	getRainTime
	m	()Lcfx;	m	getGameType
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcwh$c;	r	getWorldBorder
	m	()Ldvl;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Ljava/lang/String;	y	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	z	lambda$fillCrashReportCategory$0
c	dqz	net/minecraft/world/level/storage/WorldData
	m	()Ldap;	A	worldGenSettings
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Lpj;	C	endDragonFightData
	m	()Lcfo;	D	getDataPackConfig
	m	()Lpj;	E	getCustomBossEvents
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ldqy;	H	overworldData
	m	()Lcge;	I	getLevelSettings
	m	()Ljava/lang/String;	a	lambda$fillCrashReportCategory$2
	m	(Lazj;)V	a	setDifficulty
		p	1		difficulty
	m	(Lcfo;)V	a	setDataPackConfig
		p	1		dataPackSettings
	m	(Lcfx;)V	a	setGameType
		p	1		gameMode
	m	(Lhn;Lpj;)Lpj;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Lpj;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	(Lr;)V	a	fillCrashReportCategory
		p	1		section
	m	()Ljava/lang/String;	b	lambda$fillCrashReportCategory$1
	m	(Lpj;)V	b	setCustomBossEvents
		p	1		customBossEvents
	m	()Ljava/lang/String;	c	lambda$fillCrashReportCategory$0
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)Ljava/lang/String;	i	getStorageVersionName
		p	1		id
	m	()Lcfx;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Lcfw;	q	getGameRules
	m	()Lazj;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Lpj;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	I	c	ANVIL_VERSION_ID
	f	I	d	MCREGION_VERSION_ID
c	dra	net/minecraft/world/level/storage/WritableLevelData
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(Lgt;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(I)V	d	setZSpawn
		p	1		spawnZ
c	drb	net/minecraft/world/level/storage/loot/BuiltInLootTables
	m	()Ljava/util/Set;	a	all
	m	(Laaj;)Laaj;	a	register
		p	0		id
	m	(Ljava/lang/String;)Laaj;	a	register
		p	0		id
	f	Laaj;	A	JUNGLE_TEMPLE
	f	Laaj;	B	JUNGLE_TEMPLE_DISPENSER
	f	Laaj;	C	IGLOO_CHEST
	f	Laaj;	D	WOODLAND_MANSION
	f	Laaj;	E	UNDERWATER_RUIN_SMALL
	f	Laaj;	F	UNDERWATER_RUIN_BIG
	f	Laaj;	G	BURIED_TREASURE
	f	Laaj;	H	SHIPWRECK_MAP
	f	Laaj;	I	SHIPWRECK_SUPPLY
	f	Laaj;	J	SHIPWRECK_TREASURE
	f	Laaj;	K	PILLAGER_OUTPOST
	f	Laaj;	L	BASTION_TREASURE
	f	Laaj;	M	BASTION_OTHER
	f	Laaj;	N	BASTION_BRIDGE
	f	Laaj;	O	BASTION_HOGLIN_STABLE
	f	Laaj;	P	ANCIENT_CITY
	f	Laaj;	Q	ANCIENT_CITY_ICE_BOX
	f	Laaj;	R	RUINED_PORTAL
	f	Laaj;	S	SHEEP_WHITE
	f	Laaj;	T	SHEEP_ORANGE
	f	Laaj;	U	SHEEP_MAGENTA
	f	Laaj;	V	SHEEP_LIGHT_BLUE
	f	Laaj;	W	SHEEP_YELLOW
	f	Laaj;	X	SHEEP_LIME
	f	Laaj;	Y	SHEEP_PINK
	f	Laaj;	Z	SHEEP_GRAY
	f	Laaj;	aA	PIGLIN_BARTERING
	f	Ljava/util/Set;	aB	LOCATIONS
	f	Ljava/util/Set;	aC	IMMUTABLE_LOCATIONS
	f	Laaj;	a	EMPTY
	f	Laaj;	aa	SHEEP_LIGHT_GRAY
	f	Laaj;	ab	SHEEP_CYAN
	f	Laaj;	ac	SHEEP_PURPLE
	f	Laaj;	ad	SHEEP_BLUE
	f	Laaj;	ae	SHEEP_BROWN
	f	Laaj;	af	SHEEP_GREEN
	f	Laaj;	ag	SHEEP_RED
	f	Laaj;	ah	SHEEP_BLACK
	f	Laaj;	ai	FISHING
	f	Laaj;	aj	FISHING_JUNK
	f	Laaj;	ak	FISHING_TREASURE
	f	Laaj;	al	FISHING_FISH
	f	Laaj;	am	CAT_MORNING_GIFT
	f	Laaj;	an	ARMORER_GIFT
	f	Laaj;	ao	BUTCHER_GIFT
	f	Laaj;	ap	CARTOGRAPHER_GIFT
	f	Laaj;	aq	CLERIC_GIFT
	f	Laaj;	ar	FARMER_GIFT
	f	Laaj;	as	FISHERMAN_GIFT
	f	Laaj;	at	FLETCHER_GIFT
	f	Laaj;	au	LEATHERWORKER_GIFT
	f	Laaj;	av	LIBRARIAN_GIFT
	f	Laaj;	aw	MASON_GIFT
	f	Laaj;	ax	SHEPHERD_GIFT
	f	Laaj;	ay	TOOLSMITH_GIFT
	f	Laaj;	az	WEAPONSMITH_GIFT
	f	Laaj;	b	SPAWN_BONUS_CHEST
	f	Laaj;	c	END_CITY_TREASURE
	f	Laaj;	d	SIMPLE_DUNGEON
	f	Laaj;	e	VILLAGE_WEAPONSMITH
	f	Laaj;	f	VILLAGE_TOOLSMITH
	f	Laaj;	g	VILLAGE_ARMORER
	f	Laaj;	h	VILLAGE_CARTOGRAPHER
	f	Laaj;	i	VILLAGE_MASON
	f	Laaj;	j	VILLAGE_SHEPHERD
	f	Laaj;	k	VILLAGE_BUTCHER
	f	Laaj;	l	VILLAGE_FLETCHER
	f	Laaj;	m	VILLAGE_FISHER
	f	Laaj;	n	VILLAGE_TANNERY
	f	Laaj;	o	VILLAGE_TEMPLE
	f	Laaj;	p	VILLAGE_DESERT_HOUSE
	f	Laaj;	q	VILLAGE_PLAINS_HOUSE
	f	Laaj;	r	VILLAGE_TAIGA_HOUSE
	f	Laaj;	s	VILLAGE_SNOWY_HOUSE
	f	Laaj;	t	VILLAGE_SAVANNA_HOUSE
	f	Laaj;	u	ABANDONED_MINESHAFT
	f	Laaj;	v	NETHER_BRIDGE
	f	Laaj;	w	STRONGHOLD_LIBRARY
	f	Laaj;	x	STRONGHOLD_CROSSING
	f	Laaj;	y	STRONGHOLD_CORRIDOR
	f	Laaj;	z	DESERT_PYRAMID
c	drc	net/minecraft/world/level/storage/loot/Deserializers
	m	()Lcom/google/gson/GsonBuilder;	a	createConditionSerializer
	m	()Lcom/google/gson/GsonBuilder;	b	createFunctionSerializer
	m	()Lcom/google/gson/GsonBuilder;	c	createLootTableSerializer
c	drd	net/minecraft/world/level/storage/loot/GsonAdapterFactory
	m	(Lhm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Ldrd$a;	a	builder
		p	0		registry
		p	1		rootFieldName
		p	2		idFieldName
		p	3		typeGetter
c	drd$a	net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder
	m	(Lhm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		registry
		p	2		rootFieldName
		p	3		idFieldName
		p	4		typeIdentification
	m	()Ljava/lang/Object;	a	build
	m	(Ldrn;)Ldrd$a;	a	withDefaultType
		p	1		defaultType
	m	(Ldrn;Ldrd$b;)Ldrd$a;	a	withInlineSerializer
		p	1		type
		p	2		serializer
	f	Lhm;	a	registry
	f	Ljava/lang/String;	b	elementName
	f	Ljava/lang/String;	c	typeKey
	f	Ljava/util/function/Function;	d	typeGetter
	f	Lcom/mojang/datafixers/util/Pair;	e	inlineType
	f	Ldrn;	f	defaultType
c	drd$b	net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
c	drd$c	net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter
	m	(Lhm;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ldrn;Lcom/mojang/datafixers/util/Pair;)V	<init>	<init>
		p	1		registry
		p	2		rootFieldName
		p	3		idFieldName
		p	4		typeGetter
		p	5		defaultType
		p	6		elementSerializer
	f	Lhm;	a	registry
	f	Ljava/lang/String;	b	elementName
	f	Ljava/lang/String;	c	typeKey
	f	Ljava/util/function/Function;	d	typeGetter
	f	Ldrn;	e	defaultType
	f	Lcom/mojang/datafixers/util/Pair;	f	inlineType
c	dre	net/minecraft/world/level/storage/loot/IntRange
	m	(Lduv;Lduv;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(I)Ldre;	a	exact
		p	0		value
	m	(II)Ldre;	a	range
		p	0		min
		p	1		max
	m	(Ldrg;I)I	a	clamp
		p	1		context
		p	2		value
	m	(Lduv;Ldrg;I)Z	a	lambda$new$5
		p	1		context
		p	2		value
	m	(Lduv;Lduv;Ldrg;I)Z	a	lambda$new$7
		p	2		context
		p	3		value
	m	(I)Ldre;	b	lowerBound
		p	0		min
	m	(Ldrg;I)Z	b	test
		p	1		context
		p	2		value
	m	(Lduv;Ldrg;I)I	b	lambda$new$4
		p	1		context
		p	2		value
	m	(Lduv;Lduv;Ldrg;I)I	b	lambda$new$6
		p	2		context
		p	3		value
	m	(I)Ldre;	c	upperBound
		p	0		max
	m	(Ldrg;I)Z	c	lambda$new$1
		p	0		context
		p	1		value
	m	(Lduv;Ldrg;I)Z	c	lambda$new$3
		p	1		context
		p	2		value
	m	(Ldrg;I)I	d	lambda$new$0
		p	0		context
		p	1		value
	m	(Lduv;Ldrg;I)I	d	lambda$new$2
		p	1		context
		p	2		value
	f	Lduv;	a	min
	f	Lduv;	b	max
	f	Ldre$b;	c	limiter
	f	Ldre$a;	d	predicate
c	dre$a	net/minecraft/world/level/storage/loot/IntRange$IntChecker
	m	(Ldrg;I)Z	test	test
		p	1		context
		p	2		value
c	dre$b	net/minecraft/world/level/storage/loot/IntRange$IntLimiter
	m	(Ldrg;I)I	apply	apply
		p	1		context
		p	2		value
c	dre$c	net/minecraft/world/level/storage/loot/IntRange$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldre;	a	deserialize
	m	(Ldre;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	drf	net/minecraft/world/level/storage/loot/ItemModifierManager
	m	(Ldrl;Ldrk;)V	<init>	<init>
		p	1		lootConditionManager
		p	2		lootManager
	m	()Ljava/util/Set;	a	getKeys
	m	(Laaj;)Ldsr;	a	get
		p	1		id
	m	(Laaj;Ldsr;)Ldsr;	a	get
		p	1		id
		p	2		fallback
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laaj;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	1		id
		p	2		json
	m	(Ldro;Laaj;Ldsr;)V	a	lambda$apply$1
		p	1		id
	m	(Ljava/lang/Object;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$2
	m	(Ljava/util/Map;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ldrl;	c	predicateManager
	f	Ldrk;	d	lootTables
	f	Ljava/util/Map;	e	functions
c	drf$a	net/minecraft/world/level/storage/loot/ItemModifierManager$FunctionSequence
	m	([Ldsr;)V	<init>	<init>
		p	1		functions
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	apply
	f	[Ldsr;	a	functions
	f	Ljava/util/function/BiFunction;	b	compositeFunction
c	drg	net/minecraft/world/level/storage/loot/LootContext
	m	(Lalu;FLafo;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1		random
		p	2		luck
		p	3		world
		p	4		tableGetter
		p	5		conditionGetter
		p	6		parameters
		p	7		drops
	m	()Lalu;	a	getRandom
	m	(Laaj;)Ldrj;	a	getLootTable
		p	1		id
	m	(Laaj;Ljava/util/function/Consumer;)V	a	addDynamicDrops
		p	1		id
		p	2		lootConsumer
	m	(Ldrj;)Z	a	addVisitedTable
		p	1		table
	m	(Ldtl;)Z	a	hasParam
		p	1		parameter
	m	(Ldua;)Z	a	addVisitedCondition
		p	1		condition
	m	()F	b	getLuck
	m	(Laaj;)Ldua;	b	getCondition
		p	1		id
	m	(Ldrj;)V	b	removeVisitedTable
		p	1		table
	m	(Ldtl;)Ljava/lang/Object;	b	getParam
		p	1		parameter
	m	(Ldua;)V	b	removeVisitedCondition
		p	1		condition
	m	()Lafo;	c	getLevel
	m	(Ldtl;)Ljava/lang/Object;	c	getParamOrNull
		p	1		parameter
	f	Lalu;	a	random
	f	F	b	luck
	f	Lafo;	c	level
	f	Ljava/util/function/Function;	d	lootTables
	f	Ljava/util/Set;	e	visitedTables
	f	Ljava/util/function/Function;	f	conditions
	f	Ljava/util/Set;	g	visitedConditions
	f	Ljava/util/Map;	h	params
	f	Ljava/util/Map;	i	dynamicDrops
c	drg$a	net/minecraft/world/level/storage/loot/LootContext$Builder
	m	(Lafo;)V	<init>	<init>
		p	1		world
	m	()Lafo;	a	getLevel
	m	(F)Ldrg$a;	a	withLuck
		p	1		luck
	m	(J)Ldrg$a;	a	withOptionalRandomSeed
		p	1		seed
	m	(JLalu;)Ldrg$a;	a	withOptionalRandomSeed
		p	1		seed
		p	3		random
	m	(Laaj;Ldrg$b;)Ldrg$a;	a	withDynamicDrop
		p	1		id
		p	2		value
	m	(Lalu;)Ldrg$a;	a	withRandom
		p	1		random
	m	(Ldtl;)Ljava/lang/Object;	a	getParameter
		p	1		parameter
	m	(Ldtl;Ljava/lang/Object;)Ldrg$a;	a	withParameter
		p	1		key
		p	2		value
	m	(Ldtm;)Ldrg;	a	create
		p	1		type
	m	(Ldtl;)Ljava/lang/Object;	b	getOptionalParameter
		p	1		parameter
	m	(Ldtl;Ljava/lang/Object;)Ldrg$a;	b	withOptionalParameter
		p	1		key
		p	2		value
	f	Lafo;	a	level
	f	Ljava/util/Map;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	Lalu;	d	random
	f	F	e	luck
c	drg$b	net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
	m	(Ldrg;Ljava/util/function/Consumer;)V	add	add
		p	1		context
		p	2		consumer
c	drg$c	net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	m	(Ljava/lang/String;ILjava/lang/String;Ldtl;)V	<init>	<init>
		p	3		type
		p	4		parameter
	m	()Ldtl;	a	getParam
	m	(Ljava/lang/String;)Ldrg$c;	a	getByName
		p	0		type
	m	()[Ldrg$c;	b	$values
	f	Ldrg$c;	a	THIS
	f	Ldrg$c;	b	KILLER
	f	Ldrg$c;	c	DIRECT_KILLER
	f	Ldrg$c;	d	KILLER_PLAYER
	f	Ljava/lang/String;	e	name
	f	Ldtl;	f	param
	f	[Ldrg$c;	g	$VALUES
c	drg$c$a	net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	m	(Lcom/google/gson/stream/JsonReader;)Ldrg$c;	a	read
	m	(Lcom/google/gson/stream/JsonWriter;Ldrg$c;)V	a	write
c	drh	net/minecraft/world/level/storage/loot/LootContextUser
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dri	net/minecraft/world/level/storage/loot/LootPool
	m	([Ldry;[Ldua;[Ldsr;Lduv;Lduv;)V	<init>	<init>
		p	1		entries
		p	2		conditions
		p	3		functions
		p	4		rolls
		p	5		bonusRolls
	m	()Ldri$a;	a	lootPool
	m	(Ldrg;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Ldrx;)V	a	lambda$addRandomItem$0
		p	3		choice
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	addRandomItems
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Ldrg;)V	b	addRandomItem
		p	1		lootConsumer
		p	2		context
	f	[Ldry;	a	entries
	f	[Ldua;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositeCondition
	f	[Ldsr;	d	functions
	f	Ljava/util/function/BiFunction;	e	compositeFunction
	f	Lduv;	f	rolls
	f	Lduv;	g	bonusRolls
c	dri$a	net/minecraft/world/level/storage/loot/LootPool$Builder
	m	()Ldri$a;	a	unwrap
	m	(Ldry$a;)Ldri$a;	a	add
		p	1		entry
	m	(Ldsr$a;)Ldri$a;	a	apply
	m	(Ldua$a;)Ldri$a;	a	when
	m	(Lduv;)Ldri$a;	a	setRolls
		p	1		rolls
	m	()Ldri;	b	build
	m	(Ldsr$a;)Ldso;	b	apply
		p	1		function
	m	(Ldua$a;)Ldtt;	b	when
		p	1		condition
	m	(Lduv;)Ldri$a;	b	setBonusRolls
		p	1		bonusRolls
	m	()Ldso;	c	unwrap
	m	()Ldtt;	d	unwrap
	f	Ljava/util/List;	a	entries
	f	Ljava/util/List;	b	conditions
	f	Ljava/util/List;	c	functions
	f	Lduv;	d	rolls
	f	Lduv;	e	bonusRolls
c	dri$b	net/minecraft/world/level/storage/loot/LootPool$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldri;	a	deserialize
	m	(Ldri;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	drj	net/minecraft/world/level/storage/loot/LootTable
	m	(Ldtm;[Ldri;[Ldsr;)V	<init>	<init>
		p	1		type
		p	2		pools
		p	3		functions
	m	()Ldtm;	a	getParamSet
	m	(Lazf;Lalu;)Ljava/util/List;	a	getAvailableSlots
		p	1		inventory
		p	2		random
	m	(Lazf;Ldrg;)V	a	fill
		p	1		inventory
		p	2		context
	m	(Ldrg;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		context
	m	(Ldrg;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
		p	1		context
		p	2		lootConsumer
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILalu;)V	a	shuffleAndSplitItems
		p	1		drops
		p	2		freeSlots
		p	3		random
	m	(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	createStackSplitter
		p	0		lootConsumer
	m	(Ljava/util/function/Consumer;Lcaa;)V	a	lambda$createStackSplitter$0
		p	1		stack
	m	()Ldrj$a;	b	lootTable
	m	(Ldrg;Ljava/util/function/Consumer;)V	b	getRandomItems
		p	1		context
		p	2		lootConsumer
	f	Ldrj;	a	EMPTY
	f	Ldtm;	b	DEFAULT_PARAM_SET
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ldtm;	d	paramSet
	f	[Ldri;	e	pools
	f	[Ldsr;	f	functions
	f	Ljava/util/function/BiFunction;	g	compositeFunction
c	drj$a	net/minecraft/world/level/storage/loot/LootTable$Builder
	m	()Ldrj$a;	a	unwrap
	m	(Ldri$a;)Ldrj$a;	a	withPool
		p	1		poolBuilder
	m	(Ldsr$a;)Ldrj$a;	a	apply
	m	(Ldtm;)Ldrj$a;	a	setParamSet
		p	1		context
	m	()Ldrj;	b	build
	m	(Ldsr$a;)Ldso;	b	apply
		p	1		function
	m	()Ldso;	c	unwrap
	f	Ljava/util/List;	a	pools
	f	Ljava/util/List;	b	functions
	f	Ldtm;	c	paramSet
c	drj$b	net/minecraft/world/level/storage/loot/LootTable$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrj;	a	deserialize
	m	(Ldrj;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	drk	net/minecraft/world/level/storage/loot/LootTables
	m	(Ldrl;)V	<init>	<init>
		p	1		conditionManager
	m	()Ljava/util/Set;	a	getIds
	m	(Laaj;)Ldrj;	a	get
		p	1		id
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laaj;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	1		id
		p	2		json
	m	(Ldrj;)Lcom/google/gson/JsonElement;	a	serialize
		p	0		table
	m	(Ldro;Laaj;Ldrj;)V	a	validate
		p	0		reporter
		p	1		id
		p	2		table
	m	(Ljava/lang/Object;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$2
		p	0		key
		p	1		value
	m	(Ljava/util/Map;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ldro;Laaj;Ldrj;)V	b	lambda$apply$1
		p	1		id
		p	2		lootTable
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	tables
	f	Ldrl;	d	predicateManager
c	drl	net/minecraft/world/level/storage/loot/PredicateManager
	m	()Ljava/util/Set;	a	getKeys
	m	(Laaj;)Ldua;	a	get
		p	1		id
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laaj;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	1		id
		p	2		json
	m	(Ldro;Laaj;Ldua;)V	a	lambda$apply$2
		p	1		id
		p	2		condition
	m	(Ljava/lang/Object;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$3
	m	(Ljava/util/Map;Lahu;Lawc;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Laaj;)Ldrj;	b	lambda$apply$1
		p	0		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	conditions
c	drl$a	net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate
	m	([Ldua;)V	<init>	<init>
		p	1		terms
	m	()Ldub;	a	getType
	m	(Ldrg;)Z	a	test
	m	(Ldro;)V	a	validate
		p	1		reporter
	f	[Ldua;	a	terms
	f	Ljava/util/function/Predicate;	b	composedPredicate
c	drm	net/minecraft/world/level/storage/loot/Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
c	drn	net/minecraft/world/level/storage/loot/SerializerType
	m	(Ldrm;)V	<init>	<init>
		p	1		jsonSerializer
	m	()Ldrm;	a	getSerializer
	f	Ldrm;	a	serializer
c	dro	net/minecraft/world/level/storage/loot/ValidationContext
	m	(Lcom/google/common/collect/Multimap;Ljava/util/function/Supplier;Ldtm;Ljava/util/function/Function;Ljava/util/Set;Ljava/util/function/Function;Ljava/util/Set;)V	<init>	<init>
		p	1		messages
		p	2		nameFactory
		p	3		contextType
		p	4		conditionGetter
		p	5		conditions
		p	6		tableGetter
		p	7		tables
	m	(Ldtm;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		contextType
		p	2		conditionGetter
		p	3		tableFactory
	m	()Lcom/google/common/collect/Multimap;	a	getProblems
	m	(Laaj;)Z	a	hasVisitedTable
		p	1		id
	m	(Ldrh;)V	a	validateUser
		p	1		contextAware
	m	(Ldtm;)Ldro;	a	setParams
		p	1		contextType
	m	(Ljava/lang/String;)V	a	reportProblem
		p	1		message
	m	(Ljava/lang/String;Laaj;)Ldro;	a	enterTable
		p	1		name
		p	2		id
	m	()Ljava/lang/String;	b	getContext
	m	(Laaj;)Z	b	hasVisitedCondition
		p	1		id
	m	(Ljava/lang/String;)Ldro;	b	forChild
		p	1		name
	m	(Ljava/lang/String;Laaj;)Ldro;	b	enterCondition
		p	1		name
		p	2		id
	m	()Ljava/lang/String;	c	lambda$new$0
	m	(Laaj;)Ldrj;	c	resolveLootTable
		p	1		id
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$enterCondition$3
	m	(Laaj;)Ldua;	d	resolveCondition
		p	1		id
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$enterTable$2
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$forChild$1
	f	Lcom/google/common/collect/Multimap;	a	problems
	f	Ljava/util/function/Supplier;	b	context
	f	Ldtm;	c	params
	f	Ljava/util/function/Function;	d	conditionResolver
	f	Ljava/util/Set;	e	visitedConditions
	f	Ljava/util/function/Function;	f	tableResolver
	f	Ljava/util/Set;	g	visitedTables
	f	Ljava/lang/String;	h	contextCache
c	drp	net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	m	([Ldry;[Ldua;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	()Ldrz;	a	getType
	m	(I)[Ldry$a;	a	lambda$alternatives$1
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Ldrp$a;	a	alternatives
		p	0		children
		p	1		toBuilderFunction
	m	([Ldrq;)Ldrq;	a	compose
		p	1		children
	m	([Ldrq;Ldrg;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Ldry$a;)Ldrp$a;	a	alternatives
		p	0		children
c	drp$a	net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	m	([Ldry$a;)V	<init>	<init>
		p	1		children
	m	()Ldrp$a;	a	getThis
	m	(Ldry$a;)Ldrp$a;	a	otherwise
		p	1		builder
	m	()Ldry$a;	ae_	getThis
	m	()Ldry;	b	build
	f	Ljava/util/List;	a	entries
c	drq	net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	m	(Ldrg;Ljava/util/function/Consumer;)Z	a	lambda$static$1
	m	(Ldrq;Ldrg;Ljava/util/function/Consumer;)Z	a	lambda$or$3
		p	2		context
		p	3		lootChoiceExpander
	m	(Ldrq;)Ldrq;	and	and
		p	1		other
	m	(Ldrg;Ljava/util/function/Consumer;)Z	b	lambda$static$0
	m	(Ldrq;Ldrg;Ljava/util/function/Consumer;)Z	b	lambda$and$2
		p	2		context
		p	3		lootChoiceExpander
	m	(Ldrg;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	m	(Ldrq;)Ldrq;	or	or
		p	1		other
	f	Ldrq;	a	ALWAYS_FALSE
	f	Ldrq;	b	ALWAYS_TRUE
c	drr	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	m	([Ldry;[Ldua;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Ldrr$a;)Ldry$b;	a	createSerializer
		p	0		factory
	m	([Ldrq;)Ldrq;	a	compose
		p	1		children
	m	(Ldrg;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	[Ldry;	c	children
	f	Ldrq;	e	composedChildren
c	drr$1	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldrr;	a	deserializeCustom
	m	(Lcom/google/gson/JsonObject;Ldrr;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldry;	b	deserializeCustom
		p	1		json
		p	2		context
		p	3		conditions
	f	Ldrr$a;	a	val$constructor
c	drr$a	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
	m	([Ldry;[Ldua;)Ldrr;	create	create
		p	1		children
		p	2		conditions
c	drs	net/minecraft/world/level/storage/loot/entries/DynamicLoot
	m	(Laaj;II[Ldua;[Ldsr;)V	<init>	<init>
		p	1		name
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ldrz;	a	getType
	m	(Laaj;)Ldsa$a;	a	dynamicEntry
		p	0		name
	m	(Laaj;II[Ldua;[Ldsr;)Ldsa;	a	lambda$dynamicEntry$0
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Laaj;	i	name
c	drs$a	net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldrs;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldrs;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsa;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsa;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	drt	net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	m	(II[Ldua;[Ldsr;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	()Ldrz;	a	getType
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	()Ldsa$a;	b	emptyItem
c	drt$a	net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldrt;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsa;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dru	net/minecraft/world/level/storage/loot/entries/EntryGroup
	m	([Ldry;[Ldua;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	()Ldrz;	a	getType
	m	(Ldrq;Ldrq;Ldrg;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	2		context
	m	([Ldrq;)Ldrq;	a	compose
		p	1		children
	m	([Ldrq;Ldrg;Ljava/util/function/Consumer;)Z	a	lambda$compose$1
		p	1		context
		p	2		lootChoiceExpander
	m	([Ldry$a;)Ldru$a;	a	list
		p	0		entries
c	dru$a	net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	m	([Ldry$a;)V	<init>	<init>
		p	1		entries
	m	()Ldru$a;	a	getThis
	m	()Ldry$a;	ae_	getThis
	m	()Ldry;	b	build
	m	(Ldry$a;)Ldru$a;	b	append
		p	1		entry
	f	Ljava/util/List;	a	entries
c	drv	net/minecraft/world/level/storage/loot/entries/LootItem
	m	(Lbzw;II[Ldua;[Ldsr;)V	<init>	<init>
		p	1		item
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ldrz;	a	getType
	m	(Lcfz;)Ldsa$a;	a	lootTableItem
		p	0		drop
	m	(Lcfz;II[Ldua;[Ldsr;)Ldsa;	a	lambda$lootTableItem$0
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Lbzw;	i	item
c	drv$a	net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldrv;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldrv;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsa;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsa;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	drw	net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldrm;)Ldrz;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Ldrz;	a	EMPTY
	f	Ldrz;	b	ITEM
	f	Ldrz;	c	REFERENCE
	f	Ldrz;	d	DYNAMIC
	f	Ldrz;	e	TAG
	f	Ldrz;	f	ALTERNATIVES
	f	Ldrz;	g	SEQUENCE
	f	Ldrz;	h	GROUP
c	drx	net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	m	(F)I	a	getWeight
		p	1		luck
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
c	dry	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	m	([Ldua;)V	<init>	<init>
		p	1		conditions
	m	()Ldrz;	a	getType
	m	(Ldrg;)Z	a	canRun
		p	1		context
	m	(Ldro;)V	a	validate
		p	1		reporter
	f	Ljava/util/function/Predicate;	c	compositeCondition
	f	[Ldua;	d	conditions
c	dry$a	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	m	(Ldry$a;)Ldrp$a;	a	otherwise
		p	1		builder
	m	(Ldua$a;)Ldry$a;	a	when
	m	()Ldry$a;	ae_	getThis
	m	()Ldry;	b	build
	m	(Ldry$a;)Ldru$a;	b	append
		p	1		entry
	m	(Ldua$a;)Ldtt;	b	when
		p	1		condition
	m	(Ldry$a;)Ldsc$a;	c	then
		p	1		entry
	m	()Ldtt;	d	unwrap
	m	()Ldry$a;	e	unwrap
	m	()[Ldua;	f	getConditions
	f	Ljava/util/List;	a	conditions
c	dry$b	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldry;	b	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldry;	b	deserializeCustom
		p	1		json
		p	2		context
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	b	serialize
c	drz	net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
	m	(Ldrm;)V	<init>	<init>
		p	1		jsonSerializer
c	dsa	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	m	(II[Ldua;[Ldsr;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Ldsa$d;)Ldsa$a;	a	simpleBuilder
		p	0		factory
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Ldrg;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	I	c	DEFAULT_WEIGHT
	f	I	e	DEFAULT_QUALITY
	f	I	f	weight
	f	I	g	quality
	f	[Ldsr;	h	functions
	f	Ljava/util/function/BiFunction;	i	compositeFunction
	f	Ldrx;	j	entry
c	dsa$1	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Ldsa;	a	this$0
c	dsa$a	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	m	()[Ldsr;	a	getFunctions
	m	(I)Ldsa$a;	a	setWeight
		p	1		weight
	m	(Ldsr$a;)Ldsa$a;	a	apply
	m	(I)Ldsa$a;	b	setQuality
		p	1		quality
	m	(Ldsr$a;)Ldso;	b	apply
		p	1		function
	m	()Ldso;	c	unwrap
	f	I	a	weight
	f	I	b	quality
	f	Ljava/util/List;	c	functions
c	dsa$b	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	m	(Ldsa$d;)V	<init>	<init>
		p	1		factory
	m	()Ldry$a;	ae_	getThis
	m	()Ldry;	b	build
	m	()Ldsa$b;	g	getThis
	f	Ldsa$d;	c	constructor
c	dsa$c	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	m	(F)I	a	getWeight
		p	1		luck
	f	Ldsa;	b	this$0
c	dsa$d	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
	m	(II[Ldua;[Ldsr;)Ldsa;	build	build
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
c	dsa$e	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsa;	a	deserializeCustom
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsa;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsa;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldry;	b	deserializeCustom
		p	1		json
		p	2		context
		p	3		conditions
c	dsb	net/minecraft/world/level/storage/loot/entries/LootTableReference
	m	(Laaj;II[Ldua;[Ldsr;)V	<init>	<init>
		p	1		id
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ldrz;	a	getType
	m	(Laaj;)Ldsa$a;	a	lootTableReference
		p	0		id
	m	(Laaj;II[Ldua;[Ldsr;)Ldsa;	a	lambda$lootTableReference$0
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Laaj;	i	name
c	dsb$a	net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsb;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsa;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsb;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsa;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dsc	net/minecraft/world/level/storage/loot/entries/SequentialEntry
	m	([Ldry;[Ldua;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	()Ldrz;	a	getType
	m	([Ldrq;)Ldrq;	a	compose
		p	1		children
	m	([Ldrq;Ldrg;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Ldry$a;)Ldsc$a;	a	sequential
		p	0		entries
c	dsc$a	net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	m	([Ldry$a;)V	<init>	<init>
		p	1		entries
	m	()Ldsc$a;	a	getThis
	m	()Ldry$a;	ae_	getThis
	m	()Ldry;	b	build
	m	(Ldry$a;)Ldsc$a;	c	then
		p	1		entry
	f	Ljava/util/List;	a	entries
c	dsd	net/minecraft/world/level/storage/loot/entries/TagEntry
	m	(Lakh;ZII[Ldua;[Ldsr;)V	<init>	<init>
		p	1		name
		p	2		expand
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
	m	()Ldrz;	a	getType
	m	(Lakh;)Ldsa$a;	a	tagContents
		p	0		name
	m	(Lakh;II[Ldua;[Ldsr;)Ldsa;	a	lambda$expandTag$2
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldrg;Ljava/util/function/Consumer;)Z	a	expandTag
		p	1		context
		p	2		lootChoiceExpander
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Lhc;)V	a	lambda$createItemStack$0
		p	1		entry
	m	(Lakh;)Ldsa$a;	b	expandTag
		p	0		name
	m	(Lakh;II[Ldua;[Ldsr;)Ldsa;	b	lambda$tagContents$1
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldrg;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Lakh;	i	tag
	f	Z	j	expand
c	dsd$1	net/minecraft/world/level/storage/loot/entries/TagEntry$1
	m	(Ljava/util/function/Consumer;Ldrg;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Lhc;	a	val$item
	f	Ldsd;	c	this$0
c	dsd$a	net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsd;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldry;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsa;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsd;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Ldua;[Ldsr;)Ldsa;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dse	net/minecraft/world/level/storage/loot/entries/package-info
c	dsf	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	m	([Ldua;Lcdu;Ldsf$b;)V	<init>	<init>
		p	1		conditions
		p	2		enchantment
		p	3		formula
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lcdu;)Ldsq$a;	a	addOreBonusCount
		p	0		enchantment
	m	(Lcdu;FI)Ldsq$a;	a	addBonusBinomialDistributionCount
		p	0		enchantment
		p	1		probability
		p	2		extra
	m	(Lcdu;I)Ldsq$a;	a	addUniformBonusCount
		p	0		enchantment
		p	1		bonusMultiplier
	m	(Lcdu;IF[Ldua;)Ldsr;	a	lambda$addBonusBinomialDistributionCount$0
		p	3		conditions
	m	(Lcdu;I[Ldua;)Ldsr;	a	lambda$addUniformBonusCount$3
		p	2		conditions
	m	(Lcdu;[Ldua;)Ldsr;	a	lambda$addUniformBonusCount$2
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lcdu;)Ldsq$a;	b	addUniformBonusCount
		p	0		enchantment
	m	(Lcdu;[Ldua;)Ldsr;	b	lambda$addOreBonusCount$1
		p	1		conditions
	f	Ljava/util/Map;	a	FORMULAS
	f	Lcdu;	b	enchantment
	f	Ldsf$b;	c	formula
c	dsf$a	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	m	(IF)V	<init>	<init>
		p	1		extra
		p	2		probability
	m	()Laaj;	a	getType
	m	(Lalu;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldsf$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
	f	Laaj;	a	TYPE
	f	I	b	extraRounds
	f	F	c	probability
c	dsf$b	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	m	()Laaj;	a	getType
	m	(Lalu;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
c	dsf$c	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldsf$b;	deserialize	deserialize
		p	1		functionJson
		p	2		context
c	dsf$d	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	m	()Laaj;	a	getType
	m	(Lalu;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldsf$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
	f	Laaj;	a	TYPE
c	dsf$e	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	m	(Laaj;)Lcom/google/gson/JsonParseException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsf;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsf;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsf$f	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	m	(I)V	<init>	<init>
		p	1		bonusMultiplier
	m	()Laaj;	a	getType
	m	(Lalu;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldsf$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
	f	Laaj;	a	TYPE
	f	I	b	bonusMultiplier
c	dsg	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	m	([Ldua;)V	<init>	<init>
		p	1		conditions
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	()Ldsq$a;	c	explosionDecay
c	dsg$a	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsg;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsh	net/minecraft/world/level/storage/loot/functions/CopyBlockState
	m	([Ldua;Lciw;Ljava/util/Set;)V	<init>	<init>
		p	1		conditions
		p	2		block
		p	3		properties
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lciw;)Ldsh$a;	a	copyState
		p	0		block
	m	(Lcur;Lcvu;)Ljava/lang/String;	a	serialize
		p	0		state
		p	1		property
	m	(Lpj;Lcur;Lcvu;)V	a	lambda$run$0
		p	2		property
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lciw;	a	block
	f	Ljava/util/Set;	b	properties
c	dsh$a	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	m	(Lciw;)V	<init>	<init>
		p	1		block
	m	()Ldsh$a;	a	getThis
	m	(Lcvu;)Ldsh$a;	a	copy
		p	1		property
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Lciw;	a	block
	f	Ljava/util/Set;	b	properties
c	dsh$b	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	m	(Laaj;)Ljava/lang/IllegalArgumentException;	a	lambda$deserialize$1
	m	(Lcom/google/gson/JsonArray;Lcvu;)V	a	lambda$serialize$0
		p	1		property
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsh;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsh;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/util/Set;Lcus;Lcom/google/gson/JsonElement;)V	a	lambda$deserialize$2
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsi	net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	m	([Ldua;Ldsi$a;)V	<init>	<init>
		p	1		conditions
		p	2		source
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Ldsi$a;)Ldsq$a;	a	copyName
		p	0		source
	m	(Ldsi$a;[Ldua;)Ldsr;	a	lambda$copyName$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldsi$a;	a	source
c	dsi$a	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	m	(Ljava/lang/String;ILjava/lang/String;Ldtl;)V	<init>	<init>
		p	3		name
		p	4		parameter
	m	()[Ldsi$a;	a	$values
	m	(Ljava/lang/String;)Ldsi$a;	a	getByName
		p	0		name
	f	Ldsi$a;	a	THIS
	f	Ldsi$a;	b	KILLER
	f	Ldsi$a;	c	KILLER_PLAYER
	f	Ldsi$a;	d	BLOCK_ENTITY
	f	Ljava/lang/String;	e	name
	f	Ldtl;	f	param
	f	[Ldsi$a;	g	$VALUES
c	dsi$b	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsi;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsi;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsj	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	m	([Ldua;Lduo;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		source
		p	3		operations
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lcaa;Lqc;Ldsj$b;)V	a	lambda$run$0
		p	2		operation
	m	(Ldrg$c;)Ldsj$a;	a	copyData
		p	0		target
	m	(Lduo;)Ldsj$a;	a	copyData
		p	0		source
	m	(Ljava/lang/String;)Leh$g;	a	compileNbtPath
		p	0		nbtPath
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lduo;	a	source
	f	Ljava/util/List;	b	operations
c	dsj$a	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	m	(Lduo;)V	<init>	<init>
		p	1		source
	m	()Ldsj$a;	a	getThis
	m	(Ljava/lang/String;Ljava/lang/String;)Ldsj$a;	a	copy
		p	1		source
		p	2		target
	m	(Ljava/lang/String;Ljava/lang/String;Ldsj$c;)Ldsj$a;	a	copy
		p	1		source
		p	2		target
		p	3		operator
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Lduo;	a	source
	f	Ljava/util/List;	b	ops
c	dsj$b	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	m	(Ljava/lang/String;Ljava/lang/String;Ldsj$c;)V	<init>	<init>
		p	1		sourcePath
		p	2		targetPath
		p	3		operator
	m	()Lcom/google/gson/JsonObject;	a	toJson
	m	(Lcom/google/gson/JsonObject;)Ldsj$b;	a	fromJson
		p	0		json
	m	(Ljava/util/function/Supplier;Lqc;)V	a	apply
		p	1		itemNbtGetter
		p	2		sourceEntityNbt
	f	Ljava/lang/String;	a	sourcePathText
	f	Leh$g;	b	sourcePath
	f	Ljava/lang/String;	c	targetPathText
	f	Leh$g;	d	targetPath
	f	Ldsj$c;	e	op
c	dsj$c	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldsj$c;	a	$values
	m	(Ljava/lang/String;)Ldsj$c;	a	getByName
		p	0		name
	m	(Lqc;Leh$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	f	Ldsj$c;	a	REPLACE
	f	Ldsj$c;	b	APPEND
	f	Ldsj$c;	c	MERGE
	f	Ljava/lang/String;	d	name
	f	[Ldsj$c;	e	$VALUES
c	dsj$c$1	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lqc;Leh$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
c	dsj$c$2	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Lqc;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Lqc;Leh$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Lqc;Lqc;)V	a	lambda$merge$0
		p	1		sourceNbt
c	dsj$c$3	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Lqc;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Lqc;Leh$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Lqc;Lqc;)V	a	lambda$merge$0
		p	1		sourceNbt
c	dsj$d	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsj;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsj;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsk	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	m	([Ldua;Ljava/util/Collection;)V	<init>	<init>
		p	1		conditions
		p	2		enchantments
	m	()Ldss;	a	getType
	m	(Lcaa;Lcdu;Lalu;)Lcaa;	a	enchantItem
		p	0		stack
		p	1		enchantment
		p	2		random
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(ZLcaa;Lcdu;)Z	a	lambda$run$0
		p	2		enchantment
	m	([Ldua;)Ldsr;	a	lambda$randomApplicableEnchantment$1
		p	0		conditions
	m	()Ldsk$a;	c	randomEnchantment
	m	()Ldsq$a;	d	randomApplicableEnchantment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	enchantments
c	dsk$a	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	m	()Ldsk$a;	a	getThis
	m	(Lcdu;)Ldsk$a;	a	withEnchantment
		p	1		enchantment
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Ljava/util/Set;	a	enchantments
c	dsk$b	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsk;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsk;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsl	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	m	([Ldua;Lduv;Z)V	<init>	<init>
		p	1		conditions
		p	2		range
		p	3		treasureEnchantmentsAllowed
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lduv;)Ldsl$a;	a	enchantWithLevels
		p	0		range
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lduv;	a	levels
	f	Z	b	treasure
c	dsl$a	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	m	(Lduv;)V	<init>	<init>
		p	1		range
	m	()Ldsl$a;	a	getThis
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	m	()Ldsl$a;	e	allowTreasure
	f	Lduv;	a	levels
	f	Z	b	treasure
c	dsl$b	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsl;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsl;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsm	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	m	([Ldua;Lakh;Ldqg$a;BIZ)V	<init>	<init>
		p	1		conditions
		p	2		destination
		p	3		decoration
		p	4		zoom
		p	5		searchRadius
		p	6		skipExistingChunks
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldsm$a;	c	makeExplorationMap
	f	Lakh;	a	DEFAULT_DESTINATION
	f	Ljava/lang/String;	b	DEFAULT_DECORATION_NAME
	f	Ldqg$a;	c	DEFAULT_DECORATION
	f	B	d	DEFAULT_ZOOM
	f	I	e	DEFAULT_SEARCH_RADIUS
	f	Z	f	DEFAULT_SKIP_EXISTING
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	Lakh;	i	destination
	f	Ldqg$a;	j	mapDecoration
	f	B	k	zoom
	f	I	l	searchRadius
	f	Z	m	skipKnownStructures
c	dsm$a	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	m	()Ldsm$a;	a	getThis
	m	(B)Ldsm$a;	a	setZoom
		p	1		zoom
	m	(I)Ldsm$a;	a	setSearchRadius
		p	1		searchRadius
	m	(Lakh;)Ldsm$a;	a	setDestination
		p	1		destination
	m	(Ldqg$a;)Ldsm$a;	a	setMapDecoration
		p	1		decoration
	m	(Z)Ldsm$a;	a	setSkipKnownStructures
		p	1		skipExistingChunks
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Lakh;	a	destination
	f	Ldqg$a;	b	mapDecoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipKnownStructures
c	dsm$b	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	m	(Lcom/google/gson/JsonObject;)Lakh;	a	readStructure
		p	0		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsm;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsn	net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	m	([Ldua;Ldrg$c;)V	<init>	<init>
		p	1		conditions
		p	2		entity
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Ldrg$c;)Ldsq$a;	a	fillPlayerHead
		p	0		target
	m	(Ldrg$c;[Ldua;)Ldsr;	a	lambda$fillPlayerHead$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldrg$c;	a	entityTarget
c	dsn$a	net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsn;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsn;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dso	net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ldso;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	([Ljava/lang/Object;Ljava/util/function/Function;)Ldso;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	(Ldsr$a;)Ldso;	b	apply
		p	1		function
	m	()Ldso;	c	unwrap
c	dsp	net/minecraft/world/level/storage/loot/functions/LimitCount
	m	([Ldua;Ldre;)V	<init>	<init>
		p	1		conditions
		p	2		limit
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Ldre;)Ldsq$a;	a	limitCount
		p	0		limit
	m	(Ldre;[Ldua;)Ldsr;	a	lambda$limitCount$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldre;	a	limiter
c	dsp$a	net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsp;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsp;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsq	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	m	([Ldua;)V	<init>	<init>
		p	1		conditions
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Function;)Ldsq$a;	a	simpleBuilder
		p	0		joiner
	m	(Lcaa;Ldrg;)Lcaa;	b	apply
	f	Ljava/util/function/Predicate;	a	compositePredicates
	f	[Ldua;	g	predicates
c	dsq$a	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	m	(Ldua$a;)Ldsq$a;	a	when
	m	(Ldua$a;)Ldtt;	b	when
		p	1		condition
	m	()Ldsq$a;	c	getThis
	m	()Ldtt;	d	unwrap
	m	()Ldsq$a;	f	unwrap
	m	()[Ldua;	g	getConditions
	f	Ljava/util/List;	a	conditions
c	dsq$b	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		joiner
	m	()Ldsq$b;	a	getThis
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Ljava/util/function/Function;	a	constructor
c	dsq$c	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldsq;	b	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsr	net/minecraft/world/level/storage/loot/functions/LootItemFunction
	m	()Ldss;	a	getType
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Ldrg;)Ljava/util/function/Consumer;	a	decorate
		p	0		itemApplier
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Ldrg;Lcaa;)V	a	lambda$decorate$0
		p	3		stack
c	dsr$a	net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	m	()Ldsr;	b	build
c	dss	net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	m	(Ldrm;)V	<init>	<init>
		p	1		jsonSerializer
c	dst	net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Lcaa;Ldrg;)Lcaa;	a	lambda$static$0
		p	0		stack
		p	1		context
	m	(Ljava/lang/String;Ldrm;)Ldss;	a	register
		p	0		id
		p	1		jsonSerializer
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lcaa;Ldrg;)Lcaa;	a	lambda$compose$1
		p	2		stack
		p	3		context
	m	([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	compose
		p	0		lootFunctions
	m	([Ljava/util/function/BiFunction;Lcaa;Ldrg;)Lcaa;	a	lambda$compose$2
		p	1		stack
		p	2		context
	f	Ljava/util/function/BiFunction;	a	IDENTITY
	f	Ldss;	b	SET_COUNT
	f	Ldss;	c	ENCHANT_WITH_LEVELS
	f	Ldss;	d	ENCHANT_RANDOMLY
	f	Ldss;	e	SET_ENCHANTMENTS
	f	Ldss;	f	SET_NBT
	f	Ldss;	g	FURNACE_SMELT
	f	Ldss;	h	LOOTING_ENCHANT
	f	Ldss;	i	SET_DAMAGE
	f	Ldss;	j	SET_ATTRIBUTES
	f	Ldss;	k	SET_NAME
	f	Ldss;	l	EXPLORATION_MAP
	f	Ldss;	m	SET_STEW_EFFECT
	f	Ldss;	n	COPY_NAME
	f	Ldss;	o	SET_CONTENTS
	f	Ldss;	p	LIMIT_COUNT
	f	Ldss;	q	APPLY_BONUS
	f	Ldss;	r	SET_LOOT_TABLE
	f	Ldss;	s	EXPLOSION_DECAY
	f	Ldss;	t	SET_LORE
	f	Ldss;	u	FILL_PLAYER_HEAD
	f	Ldss;	v	COPY_NBT
	f	Ldss;	w	COPY_STATE
	f	Ldss;	x	SET_BANNER_PATTERN
	f	Ldss;	y	SET_POTION
	f	Ldss;	z	SET_INSTRUMENT
c	dsu	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	m	([Ldua;Lduv;I)V	<init>	<init>
		p	1		conditions
		p	2		countRange
		p	3		limit
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lduv;)Ldsu$a;	a	lootingMultiplier
		p	0		countRange
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Z	c	hasLimit
	f	I	a	NO_LIMIT
	f	Lduv;	b	value
	f	I	c	limit
c	dsu$a	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	m	(Lduv;)V	<init>	<init>
		p	1		countRange
	m	()Ldsu$a;	a	getThis
	m	(I)Ldsu$a;	a	setLimit
		p	1		limit
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Lduv;	a	count
	f	I	b	limit
c	dsu$b	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsu;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsu;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsv	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	m	([Ldua;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		attributes
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Ldsv$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
		p	0		attribute
	m	(Ljava/lang/String;Lbcb;Lbce$a;Lduv;)Ldsv$c;	a	modifier
		p	0		name
		p	1		attribute
		p	2		operation
		p	3		amountRange
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldsv$a;	c	setAttributes
	f	Ljava/util/List;	a	modifiers
c	dsv$1	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
c	dsv$a	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	m	()Ldsv$a;	a	getThis
	m	(Ldsv$c;)Ldsv$a;	a	withModifier
		p	1		attribute
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Ljava/util/List;	a	modifiers
c	dsv$b	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	m	(Ljava/lang/String;Lbcb;Lbce$a;Lduv;[Lbav;Ljava/util/UUID;)V	<init>	<init>
		p	1		name
		p	2		attribute
		p	3		operation
		p	4		amount
		p	5		slots
		p	6		id
	m	(Lbce$a;)Ljava/lang/String;	a	operationToString
		p	0		operation
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldsv$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject;	a	serialize
		p	1		context
	m	(Ljava/lang/String;)Lbce$a;	a	operationFromString
		p	0		name
	f	Ljava/lang/String;	a	name
	f	Lbcb;	b	attribute
	f	Lbce$a;	c	operation
	f	Lduv;	d	amount
	f	Ljava/util/UUID;	e	id
	f	[Lbav;	f	slots
c	dsv$c	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	m	(Ljava/lang/String;Lbcb;Lbce$a;Lduv;)V	<init>	<init>
		p	1		name
		p	2		attribute
		p	3		operation
		p	4		amount
	m	()Ldsv$b;	a	build
	m	(Lbav;)Ldsv$c;	a	forSlot
		p	1		slot
	m	(Ljava/util/UUID;)Ldsv$c;	a	withUuid
		p	1		uuid
	f	Ljava/lang/String;	a	name
	f	Lbcb;	b	attribute
	f	Lbce$a;	c	operation
	f	Lduv;	d	amount
	f	Ljava/util/UUID;	e	id
	f	Ljava/util/Set;	f	slots
c	dsv$d	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsv;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsv;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsw	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	m	([Ldua;Ljava/util/List;Z)V	<init>	<init>
		p	1		conditions
		p	2		patterns
		p	3		append
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Z)Ldsw$a;	a	setBannerPattern
		p	0		append
	f	Ljava/util/List;	a	patterns
	f	Z	b	append
c	dsw$a	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	m	(Z)V	<init>	<init>
		p	1		append
	m	()Ldsw$a;	a	getThis
	m	(Laai;Lbyt;)Ldsw$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	(Lhc;Lbyt;)Ldsw$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	patterns
	f	Z	b	append
c	dsw$b	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serialize$1
		p	1		pair
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsw;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsw;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/google/gson/JsonSyntaxException;	a	lambda$serialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsx	net/minecraft/world/level/storage/loot/functions/SetContainerContents
	m	([Ldua;Lcsn;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		type
		p	3		entries
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lcsn;)Ldsx$a;	a	setContents
		p	0		type
	m	(Ldrg;Lhi;Ldry;)V	a	lambda$run$1
		p	2		entry
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Lhi;Ldrg;Ldrx;)V	a	lambda$run$0
		p	2		choice
	f	Ljava/util/List;	a	entries
	f	Lcsn;	b	type
c	dsx$a	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	m	(Lcsn;)V	<init>	<init>
		p	1		type
	m	()Ldsx$a;	a	getThis
	m	(Ldry$a;)Ldsx$a;	a	withEntry
		p	1		entryBuilder
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Ljava/util/List;	a	entries
	f	Lcsn;	b	type
c	dsx$b	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsx;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsx;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsy	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	m	([Ldua;Laaj;JLcsn;)V	<init>	<init>
		p	1		conditions
		p	2		id
		p	3		seed
		p	5		type
	m	()Ldss;	a	getType
	m	(Laaj;JLcsn;[Ldua;)Ldsr;	a	lambda$withLootTable$1
		p	4		conditions
	m	(Laaj;Lcsn;[Ldua;)Ldsr;	a	lambda$withLootTable$0
		p	2		conditions
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lcsn;Laaj;)Ldsq$a;	a	withLootTable
		p	0		type
		p	1		id
	m	(Lcsn;Laaj;J)Ldsq$a;	a	withLootTable
		p	0		type
		p	1		id
		p	2		seed
	m	(Ldro;)V	a	validate
		p	1		reporter
	f	Laaj;	a	name
	f	J	b	seed
	f	Lcsn;	c	type
c	dsy$a	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	m	(Laaj;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsy;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsy;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dsz	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	m	([Ldua;Ljava/util/Map;Z)V	<init>	<init>
		p	1		conditions
		p	2		enchantments
		p	3		add
	m	()Ldss;	a	getType
	m	(Lcaa;Lcdu;Ljava/lang/Integer;)V	a	lambda$run$2
		p	1		enchantment
		p	2		level
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lduv;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
		p	0		numberProvider
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldrg;Lcdu;Lduv;)V	a	lambda$run$1
		p	2		enchantment
		p	3		numberProvider
	m	(Ljava/util/Map;Lcdu;I)V	a	updateEnchantment
		p	0		map
		p	1		enchantment
		p	2		level
	m	(Ljava/util/Map;Lcdu;Ljava/lang/Integer;)V	a	lambda$run$4
		p	1		enchantment
		p	2		level
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ljava/util/Map;Lcdu;Ljava/lang/Integer;)V	b	lambda$run$3
		p	1		enchantment
		p	2		level
	f	Ljava/util/Map;	a	enchantments
	f	Z	b	add
c	dsz$a	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	m	(Z)V	<init>	<init>
		p	1		add
	m	()Ldsz$a;	a	getThis
	m	(Lcdu;Lduv;)Ldsz$a;	a	withEnchantment
		p	1		enchantment
		p	2		level
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Ljava/util/Map;	a	enchantments
	f	Z	b	add
c	dsz$b	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsz;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Lcdu;Lduv;)V	a	lambda$serialize$0
		p	2		enchantment
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldsz;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dta	net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	m	([Ldua;Lakh;)V	<init>	<init>
		p	1		conditions
	m	()Ldss;	a	getType
	m	(Lakh;)Ldsq$a;	a	setInstrumentOptions
	m	(Lakh;[Ldua;)Ldsr;	a	lambda$setInstrumentOptions$0
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	f	Lakh;	a	options
c	dta$a	net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldta;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldta;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dtb	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	m	([Ldua;Lduv;Z)V	<init>	<init>
		p	1		conditions
		p	2		countRange
		p	3		add
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lduv;)Ldsq$a;	a	setCount
		p	0		countRange
	m	(Lduv;Z)Ldsq$a;	a	setCount
		p	0		countRange
		p	1		add
	m	(Lduv;Z[Ldua;)Ldsr;	a	lambda$setCount$1
		p	2		conditions
	m	(Lduv;[Ldua;)Ldsr;	a	lambda$setCount$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lduv;	a	value
	f	Z	b	add
c	dtb$a	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldtb;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldtb;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dtc	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	m	([Ldua;Lduv;Z)V	<init>	<init>
		p	1		conditions
		p	2		durabilityRange
		p	3		add
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lduv;)Ldsq$a;	a	setDamage
		p	0		durabilityRange
	m	(Lduv;Z)Ldsq$a;	a	setDamage
		p	0		durabilityRange
		p	1		add
	m	(Lduv;Z[Ldua;)Ldsr;	a	lambda$setDamage$1
		p	2		conditions
	m	(Lduv;[Ldua;)Ldsr;	a	lambda$setDamage$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lduv;	b	damage
	f	Z	c	add
c	dtc$a	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldtc;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldtc;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dtd	net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	m	([Ldua;ZLjava/util/List;Ldrg$c;)V	<init>	<init>
		p	1		conditions
		p	2		replace
		p	3		lore
		p	4		entity
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lcaa;Z)Lpp;	a	getLoreTag
		p	1		stack
		p	2		otherLoreExists
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldtd$a;	c	setLore
	f	Z	a	replace
	f	Ljava/util/List;	b	lore
	f	Ldrg$c;	c	resolutionContext
c	dtd$a	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	m	()Ldtd$a;	a	getThis
	m	(Ldrg$c;)Ldtd$a;	a	setResolutionContext
		p	1		target
	m	(Lrm;)Ldtd$a;	a	addLine
		p	1		lore
	m	(Z)Ldtd$a;	a	setReplace
		p	1		replace
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Z	a	replace
	f	Ldrg$c;	b	resolutionContext
	f	Ljava/util/List;	c	lore
c	dtd$b	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldtd;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldtd;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dte	net/minecraft/world/level/storage/loot/functions/SetNameFunction
	m	([Ldua;Lrm;Ldrg$c;)V	<init>	<init>
		p	1		conditions
		p	2		name
		p	3		entity
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Ldr;Lbaq;Lrm;)Lrm;	a	lambda$createResolver$0
		p	2		textComponent
	m	(Ldrg;Ldrg$c;)Ljava/util/function/UnaryOperator;	a	createResolver
		p	0		context
		p	1		sourceEntity
	m	(Lrm;)Ldsq$a;	a	setName
		p	0		name
	m	(Lrm;Ldrg$c;)Ldsq$a;	a	setName
		p	0		name
		p	1		target
	m	(Lrm;Ldrg$c;[Ldua;)Ldsr;	a	lambda$setName$3
		p	2		conditions
	m	(Lrm;[Ldua;)Ldsr;	a	lambda$setName$2
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lrm;)Lrm;	b	lambda$createResolver$1
		p	0		textComponent
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lrm;	b	name
	f	Ldrg$c;	c	resolutionContext
c	dte$a	net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldte;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldte;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dtf	net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	m	([Ldua;Lpj;)V	<init>	<init>
		p	1		conditions
		p	2		nbt
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lpj;)Ldsq$a;	a	setTag
		p	0		nbt
	m	(Lpj;[Ldua;)Ldsr;	a	lambda$setTag$0
		p	1		conditions
	f	Lpj;	a	tag
c	dtf$a	net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldtf;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldtf;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dtg	net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	m	([Ldua;Lcbv;)V	<init>	<init>
		p	1		conditions
		p	2		potion
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lcbv;)Ldsq$a;	a	setPotion
		p	0		potion
	m	(Lcbv;[Ldua;)Ldsr;	a	lambda$setPotion$0
		p	1		conditions
	f	Lcbv;	a	potion
c	dtg$a	net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldtg;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldtg;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dth	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	m	([Ldua;Ljava/util/Map;)V	<init>	<init>
		p	1		conditions
		p	2		effects
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	(Lduv;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
		p	0		numberProvider
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldth$a;	c	stewEffect
	f	Ljava/util/Map;	a	effectDurationMap
c	dth$a	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	m	()Ldth$a;	a	getThis
	m	(Lbah;Lduv;)Ldth$a;	a	withEffect
		p	1		effect
		p	2		durationRange
	m	()Ldsr;	b	build
	m	()Ldsq$a;	c	getThis
	f	Ljava/util/Map;	a	effectDurationMap
c	dth$b	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldth;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldsq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldth;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dti	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	m	([Ldua;)V	<init>	<init>
		p	1		conditions
	m	()Ldss;	a	getType
	m	(Lcaa;Ldrg;)Lcaa;	a	run
		p	1		stack
		p	2		context
	m	()Ldsq$a;	c	smelted
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dti$a	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldti;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Ldua;)Ldsq;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dtj	net/minecraft/world/level/storage/loot/functions/package-info
c	dtk	net/minecraft/world/level/storage/loot/package-info
c	dtl	net/minecraft/world/level/storage/loot/parameters/LootContextParam
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Laaj;	a	getName
	f	Laaj;	a	name
c	dtm	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		required
		p	2		allowed
	m	()Ljava/util/Set;	a	getRequired
	m	(Ldro;Ldrh;)V	a	validateUser
		p	1		reporter
		p	2		parameterConsumer
	m	(Ldtl;)Z	a	isAllowed
		p	1		parameter
	m	()Ljava/util/Set;	b	getAllowed
	m	(Ldtl;)Ljava/lang/String;	b	lambda$toString$0
		p	1		parameter
	m	()Ldtm$a;	c	builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	all
c	dtm$a	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	m	()Ldtm;	a	build
	m	(Ldtl;)Ldtm$a;	a	required
		p	1		parameter
	m	(Ldtl;)Ldtm$a;	b	optional
		p	1		parameter
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	optional
c	dtn	net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	m	(Laaj;)Ldtm;	a	get
		p	0		id
	m	(Ldtm$a;)V	a	lambda$static$11
		p	0		builder
	m	(Ldtm;)Laaj;	a	getKey
		p	0		type
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ldtm;	a	register
		p	0		name
		p	1		type
	m	(Ldtm$a;)V	b	lambda$static$10
		p	0		builder
	m	(Ldtm$a;)V	c	lambda$static$9
		p	0		builder
	m	(Ldtm$a;)V	d	lambda$static$8
		p	0		builder
	m	(Ldtm$a;)V	e	lambda$static$7
		p	0		builder
	m	(Ldtm$a;)V	f	lambda$static$6
		p	0		builder
	m	(Ldtm$a;)V	g	lambda$static$5
		p	0		builder
	m	(Ldtm$a;)V	h	lambda$static$4
		p	0		builder
	m	(Ldtm$a;)V	i	lambda$static$3
		p	0		builder
	m	(Ldtm$a;)V	j	lambda$static$2
		p	0		builder
	m	(Ldtm$a;)V	k	lambda$static$1
		p	0		builder
	m	(Ldtm$a;)V	l	lambda$static$0
		p	0		builder
	f	Ldtm;	a	EMPTY
	f	Ldtm;	b	CHEST
	f	Ldtm;	c	COMMAND
	f	Ldtm;	d	SELECTOR
	f	Ldtm;	e	FISHING
	f	Ldtm;	f	ENTITY
	f	Ldtm;	g	GIFT
	f	Ldtm;	h	PIGLIN_BARTER
	f	Ldtm;	i	ADVANCEMENT_REWARD
	f	Ldtm;	j	ADVANCEMENT_ENTITY
	f	Ldtm;	k	ALL_PARAMS
	f	Ldtm;	l	BLOCK
	f	Lcom/google/common/collect/BiMap;	m	REGISTRY
c	dto	net/minecraft/world/level/storage/loot/parameters/LootContextParams
	m	(Ljava/lang/String;)Ldtl;	a	create
		p	0		name
	f	Ldtl;	a	THIS_ENTITY
	f	Ldtl;	b	LAST_DAMAGE_PLAYER
	f	Ldtl;	c	DAMAGE_SOURCE
	f	Ldtl;	d	KILLER_ENTITY
	f	Ldtl;	e	DIRECT_KILLER_ENTITY
	f	Ldtl;	f	ORIGIN
	f	Ldtl;	g	BLOCK_STATE
	f	Ldtl;	h	BLOCK_ENTITY
	f	Ldtl;	i	TOOL
	f	Ldtl;	j	EXPLOSION_RADIUS
c	dtp	net/minecraft/world/level/storage/loot/parameters/package-info
c	dtq	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	m	([Ldua;)V	<init>	<init>
		p	1		terms
	m	()Ldub;	a	getType
	m	(Ldrg;)Z	a	test
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	([Ldua$a;)Ldtq$a;	a	alternative
		p	0		terms
	f	[Ldua;	a	terms
	f	Ljava/util/function/Predicate;	b	composedPredicate
c	dtq$a	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	m	([Ldua$a;)V	<init>	<init>
		p	1		terms
	m	(Ldua$a;)Ldtq$a;	or	or
		p	1		condition
	f	Ljava/util/List;	a	terms
c	dtq$b	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldtq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldtq;	b	deserialize
c	dtr	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	m	(Lcdu;[F)V	<init>	<init>
		p	1		enchantment
		p	2		chances
	m	()Ldub;	a	getType
	m	(Lcdu;[F)Ldua$a;	a	bonusLevelFlatChance
		p	0		enchantment
		p	1		chances
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lcdu;[F)Ldua;	b	lambda$bonusLevelFlatChance$0
	f	Lcdu;	a	enchantment
	f	[F	b	values
c	dtr$a	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	m	(Laaj;)Lcom/google/gson/JsonParseException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldtr;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldtr;	b	deserialize
c	dts	net/minecraft/world/level/storage/loot/predicates/ConditionReference
	m	(Laaj;)V	<init>	<init>
		p	1		id
	m	()Ldub;	a	getType
	m	(Laaj;)Ldua$a;	a	conditionReference
		p	0		id
	m	(Ldrg;)Z	a	test
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Laaj;)Ldua;	b	lambda$conditionReference$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laaj;	b	name
c	dts$a	net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldts;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldts;	b	deserialize
c	dtt	net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ldtt;	a_	when
		p	1		conditions
		p	2		toBuilderFunction
	m	(Ldua$a;)Ldtt;	b	when
		p	1		condition
	m	()Ldtt;	d	unwrap
c	dtu	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	m	(Lbd;)V	<init>	<init>
		p	1		predicate
	m	()Ldub;	a	getType
	m	(Lbd$a;)Ldua$a;	a	hasDamageSource
		p	0		builder
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lbd$a;)Ldua;	b	lambda$hasDamageSource$0
	f	Lbd;	a	predicate
c	dtu$a	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldtu;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldtu;	b	deserialize
c	dtv	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	m	(Ljava/util/Map;Ldrg$c;)V	<init>	<init>
		p	1		scores
		p	2		target
	m	()Ldub;	a	getType
	m	(Ldre;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
	m	(Ldrg$c;)Ldtv$a;	a	hasScores
		p	0		target
	m	(Ldrg;)Z	a	test
	m	(Ldrg;Lbaq;Ldwr;Ljava/lang/String;Ldre;)Z	a	hasScore
		p	1		context
		p	2		entity
		p	3		scoreboard
		p	4		objectiveName
		p	5		range
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ljava/util/Map;	a	scores
	f	Ldrg$c;	b	entityTarget
c	dtv$a	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	m	(Ldrg$c;)V	<init>	<init>
		p	1		target
	m	(Ljava/lang/String;Ldre;)Ldtv$a;	a	withScore
		p	1		name
		p	2		value
	f	Ljava/util/Map;	a	scores
	f	Ldrg$c;	b	entityTarget
c	dtv$b	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldtv;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldtv;	b	deserialize
c	dtw	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	m	()Ldub;	a	getType
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldua$a;	c	survivesExplosion
	m	()Ldua;	d	lambda$survivesExplosion$0
	f	Ldtw;	a	INSTANCE
c	dtw$a	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldtw;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldtw;	b	deserialize
c	dtx	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	m	(Ldua;)V	<init>	<init>
		p	1		term
	m	()Ldub;	a	getType
	m	(Ldrg;)Z	a	test
	m	(Ldro;)V	a	validate
		p	1		reporter
	m	(Ldtx;)Ldua;	a	lambda$invert$0
	m	(Ldua$a;)Ldua$a;	a	invert
		p	0		term
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldua;	a	term
c	dtx$a	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldtx;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldtx;	b	deserialize
c	dty	net/minecraft/world/level/storage/loot/predicates/LocationCheck
	m	(Lch;Lgt;)V	<init>	<init>
		p	1		predicate
		p	2		offset
	m	()Ldub;	a	getType
	m	(Lch$a;)Ldua$a;	a	checkLocation
		p	0		predicateBuilder
	m	(Lch$a;Lgt;)Ldua$a;	a	checkLocation
		p	0		predicateBuilder
		p	1		pos
	m	(Ldrg;)Z	a	test
	m	(Lch$a;)Ldua;	b	lambda$checkLocation$0
	m	(Lch$a;Lgt;)Ldua;	b	lambda$checkLocation$1
	f	Lch;	a	predicate
	f	Lgt;	b	offset
c	dty$a	net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldty;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldty;	b	deserialize
c	dtz	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	m	(Lciw;Lcz;)V	<init>	<init>
		p	1		block
		p	2		properties
	m	()Ldub;	a	getType
	m	(Lciw;)Ldtz$a;	a	hasBlockStateProperties
		p	0		block
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lciw;	a	block
	f	Lcz;	b	properties
c	dtz$a	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	m	(Lciw;)V	<init>	<init>
		p	1		block
	m	(Lcz$a;)Ldtz$a;	a	setProperties
		p	1		builder
	f	Lciw;	a	block
	f	Lcz;	b	properties
c	dtz$b	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	m	(Laaj;)Ljava/lang/IllegalArgumentException;	a	lambda$deserialize$0
	m	(Lciw;Ljava/lang/String;)V	a	lambda$deserialize$1
		p	1		propertyName
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldtz;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldtz;	b	deserialize
c	dua	net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	m	()Ldub;	a	getType
c	dua$a	net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	m	(Ldua$a;)Ldtq$a;	or	or
		p	1		condition
c	dub	net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	m	(Ldrm;)V	<init>	<init>
		p	1		jsonSerializer
c	duc	net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/Object;)Z	a	lambda$orConditions$2
		p	0		predicates
	m	(Ljava/lang/String;Ldrm;)Ldub;	a	register
		p	0		id
		p	1		serializer
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	andConditions
		p	0		predicates
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$orConditions$3
		p	1		operand
	m	(Ljava/lang/Object;)Z	b	lambda$andConditions$0
		p	0		predicates
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	orConditions
		p	0		predicates
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$andConditions$1
		p	1		operand
	f	Ldub;	a	INVERTED
	f	Ldub;	b	ALTERNATIVE
	f	Ldub;	c	RANDOM_CHANCE
	f	Ldub;	d	RANDOM_CHANCE_WITH_LOOTING
	f	Ldub;	e	ENTITY_PROPERTIES
	f	Ldub;	f	KILLED_BY_PLAYER
	f	Ldub;	g	ENTITY_SCORES
	f	Ldub;	h	BLOCK_STATE_PROPERTY
	f	Ldub;	i	MATCH_TOOL
	f	Ldub;	j	TABLE_BONUS
	f	Ldub;	k	SURVIVES_EXPLOSION
	f	Ldub;	l	DAMAGE_SOURCE_PROPERTIES
	f	Ldub;	m	LOCATION_CHECK
	f	Ldub;	n	WEATHER_CHECK
	f	Ldub;	o	REFERENCE
	f	Ldub;	p	TIME_CHECK
	f	Ldub;	q	VALUE_CHECK
c	dud	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	m	(Lbo;Ldrg$c;)V	<init>	<init>
		p	1		predicate
		p	2		entity
	m	()Ldub;	a	getType
	m	(Lbo$a;Ldrg$c;)Ldua;	a	lambda$hasProperties$0
	m	(Lbo;Ldrg$c;)Ldua;	a	lambda$hasProperties$1
	m	(Ldrg$c;)Ldua$a;	a	entityPresent
		p	0		entity
	m	(Ldrg$c;Lbo$a;)Ldua$a;	a	hasProperties
		p	0		entity
		p	1		predicateBuilder
	m	(Ldrg$c;Lbo;)Ldua$a;	a	hasProperties
		p	0		entity
		p	1		predicate
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lbo;	a	predicate
	f	Ldrg$c;	b	entityTarget
c	dud$a	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldud;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldud;	b	deserialize
c	due	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	m	()Ldub;	a	getType
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldua$a;	c	killedByPlayer
	m	()Ldua;	d	lambda$killedByPlayer$0
	f	Ldue;	a	INSTANCE
c	due$a	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldue;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldue;	b	deserialize
c	duf	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	m	(F)V	<init>	<init>
		p	1		chance
	m	()Ldub;	a	getType
	m	(F)Ldua$a;	a	randomChance
		p	0		chance
	m	(Ldrg;)Z	a	test
	m	(F)Ldua;	b	lambda$randomChance$0
	f	F	a	probability
c	duf$a	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lduf;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lduf;	b	deserialize
c	dug	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	m	(FF)V	<init>	<init>
		p	1		chance
		p	2		lootingMultiplier
	m	()Ldub;	a	getType
	m	(FF)Ldua$a;	a	randomChanceAndLootingBoost
		p	0		chance
		p	1		lootingMultiplier
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(FF)Ldua;	b	lambda$randomChanceAndLootingBoost$0
	f	F	a	percent
	f	F	b	lootingMultiplier
c	dug$a	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldug;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldug;	b	deserialize
c	duh	net/minecraft/world/level/storage/loot/predicates/MatchTool
	m	(Lca;)V	<init>	<init>
		p	1		predicate
	m	()Ldub;	a	getType
	m	(Lca$a;)Ldua$a;	a	toolMatches
		p	0		predicate
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lca$a;)Ldua;	b	lambda$toolMatches$0
	f	Lca;	a	predicate
c	duh$a	net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lduh;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lduh;	b	deserialize
c	dui	net/minecraft/world/level/storage/loot/predicates/TimeCheck
	m	(Ljava/lang/Long;Ldre;)V	<init>	<init>
		p	1		period
		p	2		value
	m	()Ldub;	a	getType
	m	(Ldre;)Ldui$a;	a	time
		p	0		value
	m	(Ldrg;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ljava/lang/Long;	a	period
	f	Ldre;	b	value
c	dui$a	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	m	(Ldre;)V	<init>	<init>
		p	1		value
	m	()Ldui;	a	build
	m	(J)Ldui$a;	a	setPeriod
		p	1		period
	f	Ljava/lang/Long;	a	period
	f	Ldre;	b	value
c	dui$b	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldui;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldui;	b	deserialize
c	duj	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	m	(Lduv;Ldre;)V	<init>	<init>
		p	1		value
		p	2		range
	m	()Ldub;	a	getType
	m	(Ldrg;)Z	a	test
	m	(Lduv;Ldre;)Ldua$a;	a	hasValue
		p	0		value
		p	1		range
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lduv;Ldre;)Ldua;	b	lambda$hasValue$0
	f	Lduv;	a	provider
	f	Ldre;	b	range
c	duj$a	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lduj;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lduj;	b	deserialize
c	duk	net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1		raining
		p	2		thundering
	m	()Ldub;	a	getType
	m	(Ldrg;)Z	a	test
	m	()Lduk$a;	c	weather
	f	Ljava/lang/Boolean;	a	isRaining
	f	Ljava/lang/Boolean;	b	isThundering
c	duk$a	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	m	()Lduk;	a	build
	m	(Ljava/lang/Boolean;)Lduk$a;	a	setRaining
		p	1		raining
	m	(Ljava/lang/Boolean;)Lduk$a;	b	setThundering
		p	1		thundering
	f	Ljava/lang/Boolean;	a	isRaining
	f	Ljava/lang/Boolean;	b	isThundering
c	duk$b	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lduk;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lduk;	b	deserialize
c	dul	net/minecraft/world/level/storage/loot/predicates/package-info
c	dum	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	m	(Ldum$a;)V	<init>	<init>
		p	1		target
	m	()Ldun;	a	getType
	m	(Ldrg$c;)Lduo;	a	forContextEntity
		p	0		target
	m	(Ldrg;)Lqc;	a	get
		p	1		context
	m	(Ljava/lang/String;)Ldum;	a	createFromContext
		p	0		target
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldrg$c;)Ldum$a;	b	forEntity
		p	0		entityTarget
	f	Ldum;	a	BLOCK_ENTITY
	f	Ljava/lang/String;	b	BLOCK_ENTITY_ID
	f	Ldum$a;	c	BLOCK_ENTITY_PROVIDER
	f	Ldum$a;	d	getter
c	dum$1	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$1
	m	()Ljava/lang/String;	a	getId
	m	(Ldrg;)Lqc;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dum$2	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$2
	m	()Ljava/lang/String;	a	getId
	m	(Ldrg;)Lqc;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldrg$c;	a	val$target
c	dum$a	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	m	()Ljava/lang/String;	a	getId
	m	(Ldrg;)Lqc;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dum$b	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Ldum;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ldum;	b	deserialize
c	dum$c	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldum;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldum;	b	deserialize
c	dun	net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
	m	(Ldrm;)V	<init>	<init>
		p	1		jsonSerializer
c	duo	net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	m	()Ldun;	a	getType
	m	(Ldrg;)Lqc;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dup	net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldrm;)Ldun;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Ldun;	a	STORAGE
	f	Ldun;	b	CONTEXT
c	duq	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	m	(Laaj;)V	<init>	<init>
		p	1		source
	m	()Ldun;	a	getType
	m	(Ldrg;)Lqc;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Laaj;	a	id
c	duq$a	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lduq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lduq;	b	deserialize
c	dur	net/minecraft/world/level/storage/loot/providers/nbt/package-info
c	dus	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	m	(Lduv;Lduv;)V	<init>	<init>
		p	1		n
		p	2		p
	m	()Lduu;	a	getType
	m	(IF)Ldus;	a	binomial
		p	0		n
		p	1		p
	m	(Ldrg;)I	a	getInt
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldrg;)F	b	getFloat
		p	1		context
	f	Lduv;	a	n
	f	Lduv;	b	p
c	dus$a	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldus;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldus;	b	deserialize
c	dut	net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	m	(F)V	<init>	<init>
		p	1		value
	m	()Lduu;	a	getType
	m	(F)Ldut;	a	exactly
		p	0		value
	m	(Ldrg;)F	b	getFloat
		p	1		context
	f	F	a	value
c	dut$a	net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Ldut;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ldut;	b	deserialize
c	dut$b	net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldut;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldut;	b	deserialize
c	duu	net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
	m	(Ldrm;)V	<init>	<init>
		p	1		jsonSerializer
c	duv	net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	m	()Lduu;	a	getType
	m	(Ldrg;)I	a	getInt
		p	1		context
	m	(Ldrg;)F	b	getFloat
		p	1		context
c	duw	net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldrm;)Lduu;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Lduu;	a	CONSTANT
	f	Lduu;	b	UNIFORM
	f	Lduu;	c	BINOMIAL
	f	Lduu;	d	SCORE
c	dux	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	m	(Ldvd;Ljava/lang/String;F)V	<init>	<init>
		p	1		target
		p	2		score
		p	3		scale
	m	()Lduu;	a	getType
	m	(Ldrg$c;Ljava/lang/String;)Ldux;	a	fromScoreboard
		p	0		target
		p	1		score
	m	(Ldrg$c;Ljava/lang/String;F)Ldux;	a	fromScoreboard
		p	0		target
		p	1		score
		p	2		scale
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldrg;)F	b	getFloat
		p	1		context
	f	Ldvd;	a	target
	f	Ljava/lang/String;	b	score
	f	F	c	scale
c	dux$a	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldux;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldux;	b	deserialize
c	duy	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	m	(Lduv;Lduv;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Lduu;	a	getType
	m	(FF)Lduy;	a	between
		p	0		min
		p	1		max
	m	(Ldrg;)I	a	getInt
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldrg;)F	b	getFloat
		p	1		context
	f	Lduv;	a	min
	f	Lduv;	b	max
c	duy$a	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lduy;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lduy;	b	deserialize
c	duz	net/minecraft/world/level/storage/loot/providers/number/package-info
c	dva	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	m	(Ldrg$c;)V	<init>	<init>
		p	1		target
	m	()Ldvc;	a	getType
	m	(Ldrg$c;)Ldvd;	a	forTarget
		p	0		target
	m	(Ldrg;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldrg$c;	a	target
c	dva$a	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Ldva;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ldva;	b	deserialize
c	dva$b	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldva;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldva;	b	deserialize
c	dvb	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ldvc;	a	getType
	m	(Ldrg;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	(Ljava/lang/String;)Ldvd;	a	forName
		p	0		name
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	c	getName
	f	Ljava/lang/String;	a	name
c	dvb$a	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldvb;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldvb;	b	deserialize
c	dvc	net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
	m	(Ldrm;)V	<init>	<init>
		p	1		jsonSerializer
c	dvd	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	m	()Ldvc;	a	getType
	m	(Ldrg;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dve	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldrm;)Ldvc;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Ldvc;	a	FIXED
	f	Ldvc;	b	CONTEXT
c	dvf	net/minecraft/world/level/storage/loot/providers/score/package-info
c	dvg	net/minecraft/world/level/storage/package-info
c	dvh	net/minecraft/world/level/timers/FunctionCallback
	m	(Laaj;)V	<init>	<init>
		p	1		name
	m	(Laaw;Ldm;)V	a	lambda$handle$0
		p	1		function
	m	(Lnet/minecraft/server/MinecraftServer;Ldvl;J)V	a	handle
	m	(Ljava/lang/Object;Ldvl;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Laaj;	a	functionId
c	dvh$a	net/minecraft/world/level/timers/FunctionCallback$Serializer
	m	(Lpj;)Ldvh;	a	deserialize
	m	(Lpj;Ldvh;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lpj;Ldvj;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lpj;)Ldvj;	b	deserialize
		p	1		nbt
c	dvi	net/minecraft/world/level/timers/FunctionTagCallback
	m	(Laaj;)V	<init>	<init>
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Ldvl;J)V	a	handle
	m	(Ljava/lang/Object;Ldvl;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Laaj;	a	tagId
c	dvi$a	net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	m	(Lpj;)Ldvi;	a	deserialize
	m	(Lpj;Ldvi;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lpj;Ldvj;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lpj;)Ldvj;	b	deserialize
		p	1		nbt
c	dvj	net/minecraft/world/level/timers/TimerCallback
	m	(Ljava/lang/Object;Ldvl;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
c	dvj$a	net/minecraft/world/level/timers/TimerCallback$Serializer
	m	(Laaj;Ljava/lang/Class;)V	<init>	<init>
		p	1		id
		p	2		callbackClass
	m	()Laaj;	a	getId
	m	(Lpj;Ldvj;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	()Ljava/lang/Class;	b	getCls
	m	(Lpj;)Ldvj;	b	deserialize
		p	1		nbt
	f	Laaj;	a	id
	f	Ljava/lang/Class;	b	cls
c	dvk	net/minecraft/world/level/timers/TimerCallbacks
	m	(Ldvj$a;)Ldvk;	a	register
		p	1		serializer
	m	(Ldvj;)Lpj;	a	serialize
		p	1		callback
	m	(Ljava/lang/Class;)Ldvj$a;	a	getSerializer
	m	(Lpj;)Ldvj;	a	deserialize
		p	1		nbt
	f	Ldvk;	a	SERVER_CALLBACKS
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	idToSerializer
	f	Ljava/util/Map;	d	classToSerializer
c	dvl	net/minecraft/world/level/timers/TimerQueue
	m	(Ldvk;)V	<init>	<init>
		p	1		timerCallbackSerializer
	m	(Ldvk;Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		timerCallbackSerializer
	m	()Ljava/util/Set;	a	getEventsIds
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
	m	(Ldvl$a;)Lpj;	a	storeEvent
		p	1		event
	m	(Ljava/lang/Object;J)V	a	tick
		p	1		server
		p	2		time
	m	(Ljava/lang/String;)I	a	remove
		p	1		name
	m	(Ljava/lang/String;JLdvj;)V	a	schedule
		p	1		name
		p	2		triggerTime
		p	4		callback
	m	(Lpj;)V	a	loadEvent
		p	1		nbt
	m	()Lpp;	b	store
	m	(Ldvl$a;)Lcom/google/common/primitives/UnsignedLong;	b	lambda$createComparator$1
		p	0		event
	m	()Ljava/util/Comparator;	c	createComparator
	m	(Ldvl$a;)J	c	lambda$createComparator$0
		p	0		event
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	CALLBACK_DATA_TAG
	f	Ljava/lang/String;	c	TIMER_NAME_TAG
	f	Ljava/lang/String;	d	TIMER_TRIGGER_TIME_TAG
	f	Ldvk;	e	callbacksRegistry
	f	Ljava/util/Queue;	f	queue
	f	Lcom/google/common/primitives/UnsignedLong;	g	sequentialId
	f	Lcom/google/common/collect/Table;	h	events
c	dvl$a	net/minecraft/world/level/timers/TimerQueue$Event
	m	(JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Ldvj;)V	<init>	<init>
		p	1		triggerTime
		p	3		id
		p	4		name
		p	5		callback
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	sequentialId
	f	Ljava/lang/String;	c	id
	f	Ldvj;	d	callback
c	dvm	net/minecraft/world/level/timers/package-info
c	dvn	net/minecraft/world/package-info
c	dvo	net/minecraft/world/phys/AABB
	m	(DDDDDD)V	<init>	<init>
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	(Ldvt;Ldvt;)V	<init>	<init>
		p	1		pos1
		p	2		pos2
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	(Lgt;Lgt;)V	<init>	<init>
		p	1		pos1
		p	2		pos2
	m	()D	a	getSize
	m	(D)Ldvo;	a	setMinX
		p	1		minX
	m	(DDD)Ldvo;	a	contract
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDD)Z	a	intersects
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	(Ldjw;)Ldvo;	a	of
		p	0		mutable
	m	(Ldvo;)Ldvo;	a	intersect
		p	1		box
	m	(Ldvo;Ldvt;[DLgy;DDD)Lgy;	a	getDirection
		p	0		box
		p	1		intersectingVector
		p	2		traceDistanceResult
		p	3		approachDirection
		p	4		deltaX
		p	6		deltaY
		p	8		deltaZ
	m	(Ldvt;)Ldvo;	a	unitCubeFromLowerCorner
		p	0		pos
	m	(Ldvt;DDD)Ldvo;	a	ofSize
		p	0		center
		p	1		dx
		p	3		dy
		p	5		dz
	m	(Ldvt;Ldvt;)Z	a	intersects
		p	1		pos1
		p	2		pos2
	m	(Lgt;)Ldvo;	a	move
		p	1		blockPos
	m	(Lgy$a;)D	a	min
		p	1		axis
	m	(Ljava/lang/Iterable;Ldvt;Ldvt;Lgt;)Ldvp;	a	clip
		p	0		boxes
		p	1		from
		p	2		to
		p	3		pos
	m	([DLgy;DDDDDDDDLgy;DDD)Lgy;	a	clipPoint
		p	0		traceDistanceResult
		p	1		approachDirection
		p	2		deltaX
		p	4		deltaY
		p	6		deltaZ
		p	8		begin
		p	10		minX
		p	12		maxX
		p	14		minZ
		p	16		maxZ
		p	18		resultDirection
		p	19		startX
		p	21		startY
		p	23		startZ
	m	()D	b	getXsize
	m	(D)Ldvo;	b	setMinY
		p	1		minY
	m	(DDD)Ldvo;	b	expandTowards
		p	1		x
		p	3		y
		p	5		z
	m	(Ldvo;)Ldvo;	b	minmax
		p	1		box
	m	(Ldvt;)Ldvo;	b	expandTowards
		p	1		scale
	m	(Ldvt;Ldvt;)Ljava/util/Optional;	b	clip
		p	1		min
		p	2		max
	m	(Lgy$a;)D	b	max
		p	1		axis
	m	()D	c	getYsize
	m	(D)Ldvo;	c	setMinZ
		p	1		minZ
	m	(DDD)Ldvo;	c	inflate
		p	1		x
		p	3		y
		p	5		z
	m	(Ldvo;)Z	c	intersects
		p	1		box
	m	(Ldvt;)Ldvo;	c	move
		p	1		vec
	m	()D	d	getZsize
	m	(D)Ldvo;	d	setMaxX
		p	1		maxX
	m	(DDD)Ldvo;	d	move
		p	1		x
		p	3		y
		p	5		z
	m	(Ldvt;)Z	d	contains
		p	1		pos
	m	()Z	e	hasNaN
	m	(D)Ldvo;	e	setMaxY
		p	1		maxY
	m	(DDD)Z	e	contains
		p	1		x
		p	3		y
		p	5		z
	m	()Ldvt;	f	getCenter
	m	(D)Ldvo;	f	setMaxZ
		p	1		maxZ
	m	(DDD)Ldvo;	f	deflate
		p	1		x
		p	3		y
		p	5		z
	m	(D)Ldvo;	g	inflate
		p	1		value
	m	(D)Ldvo;	h	deflate
		p	1		value
	f	D	a	minX
	f	D	b	minY
	f	D	c	minZ
	f	D	d	maxX
	f	D	e	maxY
	f	D	f	maxZ
	f	D	g	EPSILON
c	dvp	net/minecraft/world/phys/BlockHitResult
	m	(Ldvt;Lgy;Lgt;Z)V	<init>	<init>
		p	1		pos
		p	2		side
		p	3		blockPos
		p	4		insideBlock
	m	(ZLdvt;Lgy;Lgt;Z)V	<init>	<init>
		p	1		missed
		p	2		pos
		p	3		side
		p	4		blockPos
		p	5		insideBlock
	m	()Lgt;	a	getBlockPos
	m	(Ldvt;Lgy;Lgt;)Ldvp;	a	miss
		p	0		pos
		p	1		side
		p	2		blockPos
	m	(Lgt;)Ldvp;	a	withPosition
		p	1		blockPos
	m	(Lgy;)Ldvp;	a	withDirection
		p	1		side
	m	()Lgy;	b	getDirection
	m	()Ldvr$a;	c	getType
	m	()Z	d	isInside
	f	Lgy;	b	direction
	f	Lgt;	c	blockPos
	f	Z	d	miss
	f	Z	e	inside
c	dvq	net/minecraft/world/phys/EntityHitResult
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(Lbaq;Ldvt;)V	<init>	<init>
		p	1		entity
		p	2		pos
	m	()Lbaq;	a	getEntity
	m	()Ldvr$a;	c	getType
	f	Lbaq;	b	entity
c	dvr	net/minecraft/world/phys/HitResult
	m	(Ldvt;)V	<init>	<init>
		p	1		pos
	m	(Lbaq;)D	a	distanceTo
		p	1		entity
	m	()Ldvr$a;	c	getType
	m	()Ldvt;	e	getLocation
	f	Ldvt;	a	location
c	dvr$a	net/minecraft/world/phys/HitResult$Type
	m	()[Ldvr$a;	a	$values
	f	Ldvr$a;	a	MISS
	f	Ldvr$a;	b	BLOCK
	f	Ldvr$a;	c	ENTITY
	f	[Ldvr$a;	d	$VALUES
c	dvs	net/minecraft/world/phys/Vec2
	m	(FF)V	<init>	<init>
		p	1		x
		p	2		y
	m	()Ldvs;	a	normalized
	m	(F)Ldvs;	a	scale
		p	1		value
	m	(Ldvs;)F	a	dot
		p	1		vec
	m	()F	b	length
	m	(F)Ldvs;	b	add
		p	1		value
	m	(Ldvs;)Ldvs;	b	add
		p	1		vec
	m	()F	c	lengthSquared
	m	(Ldvs;)Z	c	equals
		p	1		other
	m	()Ldvs;	d	negated
	m	(Ldvs;)F	d	distanceToSqr
		p	1		vec
	f	Ldvs;	a	ZERO
	f	Ldvs;	b	ONE
	f	Ldvs;	c	UNIT_X
	f	Ldvs;	d	NEG_UNIT_X
	f	Ldvs;	e	UNIT_Y
	f	Ldvs;	f	NEG_UNIT_Y
	f	Ldvs;	g	MAX
	f	Ldvs;	h	MIN
	f	F	i	x
	f	F	j	y
c	dvt	net/minecraft/world/phys/Vec3
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(Lk;)V	<init>	<init>
		p	1		vec
	m	()D	a	x
	m	(D)Ldvt;	a	scale
		p	1		value
	m	(DDD)Ldvt;	a	subtract
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ldvt;	a	xRot
		p	1		angle
	m	(FF)Ldvt;	a	directionFromRotation
		p	0		pitch
		p	1		yaw
	m	(I)Ldvt;	a	fromRGB24
		p	0		rgb
	m	(Ldvs;)Ldvt;	a	directionFromRotation
		p	0		polar
	m	(Ldvt;)Ldvt;	a	vectorTo
		p	1		vec
	m	(Ldvt;D)Ldvt;	a	lerp
		p	1		to
		p	2		delta
	m	(Lgy$a;)D	a	get
		p	1		axis
	m	(Lgy$a;D)Ldvt;	a	with
		p	1		axis
		p	2		value
	m	(Lgy;D)Ldvt;	a	relative
		p	1		direction
		p	2		value
	m	(Lhj;D)Z	a	closerThan
		p	1		pos
		p	2		radius
	m	(Lhs;)Ldvt;	a	atCenterOf
		p	0		vec
	m	(Lhs;D)Ldvt;	a	upFromBottomCenterOf
		p	0		vec
		p	1		deltaY
	m	(Ljava/util/EnumSet;)Ldvt;	a	align
		p	1		axes
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	()D	b	y
	m	(DDD)Ldvt;	b	add
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ldvt;	b	yRot
		p	1		angle
	m	(Ldvt;)D	b	dot
		p	1		vec
	m	(Lhs;)Ldvt;	b	atLowerCornerOf
		p	0		vec
	m	(Ljava/util/List;)Ldvt;	b	lambda$static$0
	m	()D	c	z
	m	(DDD)D	c	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ldvt;	c	zRot
		p	1		angle
	m	(Ldvt;)Ldvt;	c	cross
		p	1		vec
	m	(Lhs;)Ldvt;	c	atBottomCenterOf
		p	0		vec
	m	()Ldvt;	d	normalize
	m	(DDD)Ldvt;	d	multiply
		p	1		x
		p	3		y
		p	5		z
	m	(Ldvt;)Ldvt;	d	subtract
		p	1		vec
	m	()Ldvt;	e	reverse
	m	(Ldvt;)Ldvt;	e	add
		p	1		vec
	m	()D	f	length
	m	(Ldvt;)D	f	distanceTo
		p	1		vec
	m	()D	g	lengthSqr
	m	(Ldvt;)D	g	distanceToSqr
		p	1		vec
	m	()D	h	horizontalDistance
	m	(Ldvt;)Ldvt;	h	multiply
		p	1		vec
	m	()D	i	horizontalDistanceSqr
	m	(Ldvt;)Ljava/util/List;	i	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldvt;	b	ZERO
	f	D	c	x
	f	D	d	y
	f	D	e	z
c	dvu	net/minecraft/world/phys/package-info
c	dvv	net/minecraft/world/phys/shapes/ArrayVoxelShape
	m	(Ldwc;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Ldwc;[D[D[D)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Lgy$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xs
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	ys
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zs
c	dvv$1	net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	dvw	net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	(Ldwc;)V	<init>	<init>
		p	1		other
	m	()Z	a	isEmpty
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)Z	a	isZStripFull
	m	(IIIII)Z	a	isXZRectangleFull
	m	(IIIIIIIII)Ldvw;	a	withFilledBounds
		p	0		sizeX
		p	1		sizeY
		p	2		sizeZ
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(IIIZ)V	a	fillUpdateBounds
		p	1		x
		p	2		y
		p	3		z
	m	(Ldvx;Ldwc;IILdwc;IILdvw;II[I[ZIII)Z	a	lambda$join$0
	m	(Ldwc;Ldwc$b;Z)V	a	forAllBoxes
	m	(Ldwc;Ldwc;Ldwf;Ldwf;Ldwf;Ldvx;)Ldvw;	a	join
		p	0		first
		p	1		second
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
		p	5		function
	m	(Ldwf;Ldvx;Ldwc;ILdwc;ILdvw;I[I[ZIII)Z	a	lambda$join$1
	m	(Ldwf;Ldwf;Ldvx;Ldwc;Ldwc;Ldvw;[IIII)Z	a	lambda$join$2
	m	(Lgy$a;)I	a	firstFull
		p	1		axis
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	b	clearZStrip
	m	(Lgy$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
c	dvx	net/minecraft/world/phys/shapes/BooleanOp
	m	(ZZ)Z	a	lambda$static$15
		p	0		a
		p	1		b
	m	(ZZ)Z	apply	apply
		p	1		a
		p	2		b
	m	(ZZ)Z	b	lambda$static$14
		p	0		a
		p	1		b
	m	(ZZ)Z	c	lambda$static$13
		p	0		a
		p	1		b
	m	(ZZ)Z	d	lambda$static$12
		p	0		a
		p	1		b
	m	(ZZ)Z	e	lambda$static$11
		p	0		a
		p	1		b
	m	(ZZ)Z	f	lambda$static$10
		p	0		a
		p	1		b
	m	(ZZ)Z	g	lambda$static$9
		p	0		a
		p	1		b
	m	(ZZ)Z	h	lambda$static$8
		p	0		a
		p	1		b
	m	(ZZ)Z	i	lambda$static$7
		p	0		a
		p	1		b
	m	(ZZ)Z	j	lambda$static$6
		p	0		a
		p	1		b
	m	(ZZ)Z	k	lambda$static$5
		p	0		a
		p	1		b
	m	(ZZ)Z	l	lambda$static$4
		p	0		a
		p	1		b
	m	(ZZ)Z	m	lambda$static$3
		p	0		a
		p	1		b
	m	(ZZ)Z	n	lambda$static$2
		p	0		a
		p	1		b
	m	(ZZ)Z	o	lambda$static$1
		p	0		a
		p	1		b
	m	(ZZ)Z	p	lambda$static$0
		p	0		a
		p	1		b
	f	Ldvx;	a	FALSE
	f	Ldvx;	b	NOT_OR
	f	Ldvx;	c	ONLY_SECOND
	f	Ldvx;	d	NOT_FIRST
	f	Ldvx;	e	ONLY_FIRST
	f	Ldvx;	f	NOT_SECOND
	f	Ldvx;	g	NOT_SAME
	f	Ldvx;	h	NOT_AND
	f	Ldvx;	i	AND
	f	Ldvx;	j	SAME
	f	Ldvx;	k	SECOND
	f	Ldvx;	l	CAUSES
	f	Ldvx;	m	FIRST
	f	Ldvx;	n	CAUSED_BY
	f	Ldvx;	o	OR
	f	Ldvx;	p	TRUE
c	dvy	net/minecraft/world/phys/shapes/CollisionContext
	m	()Ldvy;	a	empty
	m	(Lbaq;)Ldvy;	a	of
		p	0		entity
	m	(Lbzw;)Z	a	isHoldingItem
		p	1		item
	m	(Ldoy;Ldoy;)Z	a	canStandOnFluid
		p	1		state
	m	(Ldwm;Lgt;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
c	dvz	net/minecraft/world/phys/shapes/CubePointRange
	m	(I)V	<init>	<init>
		p	1		sectionCount
	f	I	a	parts
c	dwa	net/minecraft/world/phys/shapes/CubeVoxelShape
	m	(Ldwc;)V	<init>	<init>
		p	1		voxels
	m	(Lgy$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lgy$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
c	dwb	net/minecraft/world/phys/shapes/DiscreteCubeMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldwf$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Ldvz;	a	result
	f	I	b	firstDiv
	f	I	c	secondDiv
c	dwc	net/minecraft/world/phys/shapes/DiscreteVoxelShape
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	()Z	a	isEmpty
	m	(Ldwc$a;)V	a	forAllFaces
	m	(Ldwc$a;Lgr;)V	a	forAllAxisFaces
		p	2		direction
	m	(Ldwc$b;Lgr;Z)V	a	forAllAxisEdges
		p	2		direction
	m	(Ldwc$b;Z)V	a	forAllEdges
	m	(Lgr;III)Z	a	isFullWide
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lgy$a;)I	a	firstFull
		p	1		axis
	m	(Lgy$a;II)I	a	firstFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	b	getXSize
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Ldwc$b;Z)V	b	forAllBoxes
		p	1		consumer
		p	2		largest
	m	(Lgr;III)Z	b	isFull
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lgy$a;)I	b	lastFull
		p	1		axis
	m	(Lgy$a;II)I	b	lastFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	c	getYSize
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	m	(Lgy$a;)I	c	getSize
		p	1		axis
	m	()I	d	getZSize
	m	(III)Z	d	isFullWide
		p	1		x
		p	2		y
		p	3		z
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	f	[Lgy$a;	d	AXIS_VALUES
c	dwc$a	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
	m	(Lgy;III)V	consume	consume
		p	1		direction
		p	2		x
		p	3		y
		p	4		z
c	dwc$b	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
	m	(IIIIII)V	consume	consume
		p	1		x1
		p	2		y1
		p	3		z1
		p	4		x2
		p	5		y2
		p	6		z2
c	dwd	net/minecraft/world/phys/shapes/EntityCollisionContext
	m	(Lbaq;)V	<init>	<init>
		p	1		entity
	m	(ZDLcaa;Ljava/util/function/Predicate;Lbaq;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Lbzw;)Z	a	isHoldingItem
		p	1		item
	m	(Ldoy;)Z	a	lambda$new$1
	m	(Ldoy;Ldoy;)Z	a	canStandOnFluid
		p	1		state
	m	(Ldwm;Lgt;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
	m	(Ldoy;)Z	b	lambda$static$0
	m	()Lbaq;	c	getEntity
	f	Ldvy;	a	EMPTY
	f	Z	b	descending
	f	D	c	entityBottom
	f	Lcaa;	d	heldItem
	f	Ljava/util/function/Predicate;	e	canStandOnFluid
	f	Lbaq;	f	entity
c	dwd$1	net/minecraft/world/phys/shapes/EntityCollisionContext$1
	m	(ZDLcaa;Ljava/util/function/Predicate;Lbaq;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Ldwm;Lgt;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
c	dwe	net/minecraft/world/phys/shapes/IdenticalMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		values
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldwf$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	coords
c	dwf	net/minecraft/world/phys/shapes/IndexMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldwf$a;)Z	a	forMergedIndexes
		p	1		predicate
c	dwf$a	net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
	m	(III)Z	merge	merge
		p	1		x
		p	2		y
		p	3		index
c	dwg	net/minecraft/world/phys/shapes/IndirectMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		includeFirstOnly
		p	4		includeSecondOnly
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldwf$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	EMPTY
	f	[D	b	result
	f	[I	c	firstIndices
	f	[I	d	secondIndices
	f	I	e	resultLength
c	dwh	net/minecraft/world/phys/shapes/NonOverlappingMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		inverted
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ldwf$a;)Z	a	forMergedIndexes
		p	1		predicate
	m	(Ldwf$a;III)Z	a	lambda$forMergedIndexes$0
	m	(Ldwf$a;)Z	b	forNonSwappedIndexes
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	lower
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	upper
	f	Z	c	swap
c	dwi	net/minecraft/world/phys/shapes/OffsetDoubleList
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V	<init>	<init>
		p	1		oldList
		p	2		offset
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	delegate
	f	D	b	offset
c	dwj	net/minecraft/world/phys/shapes/Shapes
	m	()Ldwm;	a	empty
	m	(DD)I	a	findBits
		p	0		min
		p	2		max
	m	(DDDDDD)Ldwm;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(II)J	a	lcm
		p	0		a
		p	1		b
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Ldwf;	a	createIndexMerger
		p	0		size
		p	1		first
		p	2		second
		p	3		includeFirst
		p	4		includeSecond
	m	(Ldvo;)Ldwm;	a	create
		p	0		box
	m	(Ldvx;Ldwc;IILdwc;IIIII)Z	a	lambda$joinIsNotEmpty$1
		p	7		z1
		p	8		z2
		p	9		index3
	m	(Ldwf;Ldvx;Ldwc;ILdwc;IIII)Z	a	lambda$joinIsNotEmpty$2
		p	6		y1
		p	7		y2
		p	8		index2
	m	(Ldwf;Ldwf;Ldvx;Ldwc;Ldwc;III)Z	a	lambda$joinIsNotEmpty$3
		p	5		x1
		p	6		x2
		p	7		index1
	m	(Ldwf;Ldwf;Ldwf;Ldwc;Ldwc;Ldvx;)Z	a	joinIsNotEmpty
		p	0		mergedX
		p	1		mergedY
		p	2		mergedZ
		p	3		shape1
		p	4		shape2
		p	5		predicate
	m	(Ldwm;Ldwm;)Ldwm;	a	or
		p	0		first
		p	1		second
	m	(Ldwm;Ldwm;Ldvx;)Ldwm;	a	join
		p	0		first
		p	1		second
		p	2		function
	m	(Ldwm;Ldwm;Lgy;)Z	a	blockOccudes
		p	0		shape
		p	1		neighbor
		p	2		direction
	m	(Ldwm;Lgy;)Ldwm;	a	getFaceShape
		p	0		shape
		p	1		direction
	m	(Ldwm;[Ldwm;)Ldwm;	a	or
		p	0		first
		p	1		others
	m	(Lgy$a;Ldvo;Ljava/lang/Iterable;D)D	a	collide
		p	0		axis
		p	1		box
		p	2		shapes
		p	3		maxDist
	m	()Ldwm;	b	block
	m	(DDDDDD)Ldwm;	b	create
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(Ldwm;Ldwm;)Z	b	faceShapeOccludes
		p	0		one
		p	1		two
	m	(Ldwm;Ldwm;Ldvx;)Ldwm;	b	joinUnoptimized
		p	0		one
		p	1		two
		p	2		function
	m	(Ldwm;Ldwm;Lgy;)Z	b	mergedFaceOccludes
		p	0		one
		p	1		two
		p	2		direction
	m	()Ldwa;	c	lambda$static$0
	m	(Ldwm;Ldwm;Ldvx;)Z	c	joinIsNotEmpty
		p	0		shape1
		p	1		shape2
		p	2		predicate
	f	D	a	EPSILON
	f	D	b	BIG_EPSILON
	f	Ldwm;	c	INFINITY
	f	Ldwm;	d	BLOCK
	f	Ldwm;	e	EMPTY
c	dwj$a	net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
	m	(DDDDDD)V	consume	consume
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
c	dwk	net/minecraft/world/phys/shapes/SliceShape
	m	(Ldwm;Lgy$a;I)V	<init>	<init>
		p	1		shape
		p	2		axis
		p	3		sliceWidth
	m	(Ldwc;Lgy$a;I)Ldwc;	a	makeSlice
		p	0		voxelSet
		p	1		axis
		p	2		sliceWidth
	m	(Lgy$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Ldwm;	b	delegate
	f	Lgy$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	SLICE_COORDS
c	dwl	net/minecraft/world/phys/shapes/SubShape
	m	(Ldwc;IIIIII)V	<init>	<init>
		p	1		parent
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lgy$a;)I	a	firstFull
		p	1		axis
	m	(Lgy$a;I)I	a	clampToShape
		p	1		axis
		p	2		value
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Lgy$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	f	Ldwc;	d	parent
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	f	I	h	endX
	f	I	i	endY
	f	I	j	endZ
c	dwm	net/minecraft/world/phys/shapes/VoxelShape
	m	(Ldwc;)V	<init>	<init>
		p	1		voxels
	m	()Ldvo;	a	bounds
	m	(DDD)Ldwm;	a	move
		p	1		x
		p	3		y
		p	5		z
	m	(DLgy$a;I)Z	a	lambda$findIndex$4
	m	(Ldvt;)Ljava/util/Optional;	a	closestPointTo
		p	1		target
	m	(Ldvt;Ldvt;Lgt;)Ldvp;	a	clip
		p	1		start
		p	2		end
		p	3		pos
	m	(Ldvt;[Ldvt;DDDDDD)V	a	lambda$closestPointTo$5
		p	2		minX
		p	4		minY
		p	6		minZ
		p	8		maxX
		p	10		maxY
		p	12		maxZ
	m	(Ldwj$a;)V	a	forAllEdges
		p	1		consumer
	m	(Ldwj$a;IIIIII)V	a	lambda$forAllEdges$1
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Ldwj$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V	a	lambda$forAllBoxes$2
		p	4		minX
		p	5		minY
		p	6		minZ
		p	7		maxX
		p	8		maxY
		p	9		maxZ
	m	(Lgr;Ldvo;D)D	a	collideX
		p	1		axisCycle
		p	2		box
		p	3		maxDist
	m	(Lgy$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lgy$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
	m	(Lgy$a;DD)D	a	min
		p	1		axis
		p	2		from
		p	4		to
	m	(Lgy$a;I)D	a	get
		p	1		axis
		p	2		index
	m	(Lgy$a;Ldvo;D)D	a	collide
		p	1		axis
		p	2		box
		p	3		maxDist
	m	(Lgy;)Ldwm;	a	getFaceShape
		p	1		facing
	m	(Ljava/util/List;DDDDDD)V	a	lambda$toAabbs$3
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	([Ldwm;DDDDDD)V	a	lambda$optimize$0
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	()Z	b	isEmpty
	m	(Ldwj$a;)V	b	forAllBoxes
		p	1		consumer
	m	(Lgy$a;)D	b	min
		p	1		axis
	m	(Lgy$a;DD)D	b	max
		p	1		axis
		p	2		from
		p	4		to
	m	(Lgy;)Ldwm;	b	calculateFace
		p	1		direction
	m	()Ldwm;	c	optimize
	m	(Lgy$a;)D	c	max
		p	1		axis
	m	()Ljava/util/List;	d	toAabbs
	f	Ldwc;	a	shape
	f	[Ldwm;	b	faces
c	dwn	net/minecraft/world/phys/shapes/package-info
c	dwo	net/minecraft/world/scores/Objective
	m	(Ldwr;Ljava/lang/String;Ldwu;Lrm;Ldwu$a;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
		p	3		criterion
		p	4		displayName
		p	5		renderType
	m	()Ldwr;	a	getScoreboard
	m	(Ldwu$a;)V	a	setRenderType
		p	1		renderType
	m	(Lrm;)V	a	setDisplayName
		p	1		name
	m	(Lrv;)Lrv;	a	lambda$createFormattedDisplayName$0
		p	1		style
	m	()Ljava/lang/String;	b	getName
	m	()Ldwu;	c	getCriteria
	m	()Lrm;	d	getDisplayName
	m	()Lrm;	e	getFormattedDisplayName
	m	()Ldwu$a;	f	getRenderType
	m	()Lrm;	g	createFormattedDisplayName
	f	Ldwr;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Ldwu;	c	criteria
	f	Lrm;	d	displayName
	f	Lrm;	e	formattedDisplayName
	f	Ldwu$a;	f	renderType
c	dwp	net/minecraft/world/scores/PlayerTeam
	m	(Ldwr;Ljava/lang/String;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
	m	()Ldwr;	a	getScoreboard
	m	(I)V	a	unpackOptions
		p	1		flags
	m	(Ldwt$a;)V	a	setCollisionRule
		p	1		collisionRule
	m	(Ldwt$b;)V	a	setNameTagVisibility
		p	1		nameTagVisibilityRule
	m	(Ldwt;Lrm;)Lrt;	a	formatNameForTeam
		p	0		team
		p	1		name
	m	(Lp;)V	a	setColor
		p	1		color
	m	(Lrm;)V	a	setDisplayName
		p	1		displayName
	m	(Z)V	a	setAllowFriendlyFire
		p	1		friendlyFire
	m	()Ljava/lang/String;	b	getName
	m	(Ldwt$b;)V	b	setDeathMessageVisibility
		p	1		deathMessageVisibilityRule
	m	(Lrm;)V	b	setPlayerPrefix
		p	1		prefix
	m	(Z)V	b	setSeeFriendlyInvisibles
		p	1		showFriendlyInvisible
	m	()Lrm;	c	getDisplayName
	m	(Lrm;)V	c	setPlayerSuffix
		p	1		suffix
	m	()Lrt;	d	getFormattedDisplayName
	m	(Lrm;)Lrt;	d	getFormattedName
		p	1		name
	m	()Lrm;	e	getPlayerPrefix
	m	()Lrm;	f	getPlayerSuffix
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Ldwt$b;	j	getNameTagVisibility
	m	()Ldwt$b;	k	getDeathMessageVisibility
	m	()Ldwt$a;	l	getCollisionRule
	m	()I	m	packOptions
	m	()Lp;	n	getColor
	f	I	a	BIT_FRIENDLY_FIRE
	f	I	b	BIT_SEE_INVISIBLES
	f	Ldwr;	c	scoreboard
	f	Ljava/lang/String;	d	name
	f	Ljava/util/Set;	e	players
	f	Lrm;	f	displayName
	f	Lrm;	g	playerPrefix
	f	Lrm;	h	playerSuffix
	f	Z	i	allowFriendlyFire
	f	Z	j	seeFriendlyInvisibles
	f	Ldwt$b;	k	nameTagVisibility
	f	Ldwt$b;	l	deathMessageVisibility
	f	Lp;	m	color
	f	Ldwt$a;	n	collisionRule
	f	Lrv;	o	displayNameStyle
c	dwq	net/minecraft/world/scores/Score
	m	(Ldwr;Ldwo;Ljava/lang/String;)V	<init>	<init>
		p	1		scoreboard
		p	2		objective
		p	3		playerName
	m	()V	a	increment
	m	(I)V	a	add
		p	1		amount
	m	(Ldwq;Ldwq;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	(Z)V	a	setLocked
		p	1		locked
	m	()I	b	getScore
	m	(I)V	b	setScore
		p	1		score
	m	()V	c	reset
	m	()Ldwo;	d	getObjective
	m	()Ljava/lang/String;	e	getOwner
	m	()Ldwr;	f	getScoreboard
	m	()Z	g	isLocked
	f	Ljava/util/Comparator;	a	SCORE_COMPARATOR
	f	Ldwr;	b	scoreboard
	f	Ldwo;	c	objective
	f	Ljava/lang/String;	d	owner
	f	I	e	count
	f	Z	f	locked
	f	Z	g	forceUpdate
c	dwr	net/minecraft/world/scores/Scoreboard
	m	(I)Ldwo;	a	getDisplayObjective
		p	1		slot
	m	(ILdwo;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Lbaq;)V	a	entityRemoved
		p	1		entity
	m	(Ldwo;)V	a	onObjectiveAdded
		p	1		objective
	m	(Ldwp;)V	a	onTeamAdded
		p	1		team
	m	(Ldwq;)V	a	onScoreChanged
		p	1		score
	m	(Ldwu;)Ljava/util/List;	a	lambda$addObjective$0
		p	0		criterion
	m	(Ldwu;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	forAllObjectives
		p	1		criterion
		p	2		player
		p	3		action
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
		p	1		playerName
	m	(Ljava/lang/String;Ldwo;)V	a	onPlayerScoreRemoved
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Ldwp;)Z	a	addPlayerToTeam
		p	1		playerName
		p	2		team
	m	(Ljava/lang/String;Ldwu;Lrm;Ldwu$a;)Ldwo;	a	addObjective
		p	1		name
		p	2		criterion
		p	3		displayName
		p	4		renderType
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ldwo;)V	a	lambda$forAllObjectives$1
		p	3		objective
	m	(Lpp;)V	a	loadPlayerScores
		p	1		list
	m	(Lpp;Ldwq;)V	a	lambda$savePlayerScores$5
		p	1		score
	m	(Lpp;Ljava/util/Collection;)V	a	lambda$savePlayerScores$6
		p	1		scores
	m	(I)Ljava/lang/String;	b	getDisplaySlotName
		p	0		slotId
	m	(Ldwo;)V	b	onObjectiveChanged
		p	1		objective
	m	(Ldwp;)V	b	onTeamChanged
		p	1		team
	m	(Ldwq;)Z	b	lambda$savePlayerScores$4
		p	0		score
	m	(Ljava/lang/String;)Z	b	hasObjective
		p	1		name
	m	(Ljava/lang/String;Ldwo;)Z	b	hasPlayerScore
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Ldwp;)V	b	removePlayerFromTeam
		p	1		playerName
		p	2		team
	m	()Ljava/util/Collection;	c	getObjectives
	m	(Ldwo;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Ldwp;)V	c	onTeamRemoved
		p	1		team
	m	(Ljava/lang/String;)Ldwo;	c	getOrCreateObjective
		p	1		name
	m	(Ljava/lang/String;Ldwo;)Ldwq;	c	getOrCreatePlayerScore
		p	1		playerName
		p	2		objective
	m	()Ljava/util/Collection;	d	getObjectiveNames
	m	(Ldwp;)V	d	removePlayerTeam
		p	1		team
	m	(Ljava/lang/String;)Ldwo;	d	getObjective
		p	1		name
	m	(Ljava/lang/String;Ldwo;)V	d	resetPlayerScore
		p	1		playerName
		p	2		objective
	m	()Ljava/util/Collection;	e	getTrackedPlayers
	m	(Ljava/lang/String;)Ljava/util/Map;	e	getPlayerScores
		p	1		playerName
	m	(Ljava/lang/String;Ldwo;)Ldwq;	e	lambda$getOrCreatePlayerScore$3
		p	2		objective
	m	()Ljava/util/Collection;	f	getTeamNames
	m	(Ljava/lang/String;)Ldwp;	f	getPlayerTeam
		p	1		name
	m	()Ljava/util/Collection;	g	getPlayerTeams
	m	(Ljava/lang/String;)Ldwp;	g	addPlayerTeam
		p	1		name
	m	()[Ljava/lang/String;	h	getDisplaySlotNames
	m	(Ljava/lang/String;)Z	h	removePlayerFromTeam
		p	1		playerName
	m	()Lpp;	i	savePlayerScores
	m	(Ldwo;)Ljava/util/Collection;	i	getPlayerScores
		p	1		objective
	m	(Ljava/lang/String;)Ldwp;	i	getPlayersTeam
		p	1		playerName
	m	(Ldwo;)V	j	removeObjective
		p	1		objective
	m	(Ljava/lang/String;)I	j	getDisplaySlotByName
		p	0		slotName
	m	(Ljava/lang/String;)Ljava/util/Map;	k	lambda$getOrCreatePlayerScore$2
	f	I	a	DISPLAY_SLOT_LIST
	f	I	b	DISPLAY_SLOT_SIDEBAR
	f	I	c	DISPLAY_SLOT_BELOW_NAME
	f	I	d	DISPLAY_SLOT_TEAMS_SIDEBAR_START
	f	I	e	DISPLAY_SLOT_TEAMS_SIDEBAR_END
	f	I	f	DISPLAY_SLOTS
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ljava/util/Map;	h	objectivesByName
	f	Ljava/util/Map;	i	objectivesByCriteria
	f	Ljava/util/Map;	j	playerScores
	f	[Ldwo;	k	displayObjectives
	f	Ljava/util/Map;	l	teamsByName
	f	Ljava/util/Map;	m	teamsByPlayer
	f	[Ljava/lang/String;	n	displaySlotNames
c	dws	net/minecraft/world/scores/ScoreboardSaveData
	m	(Ldwr;)V	<init>	<init>
		p	1		scoreboard
	m	()Lpp;	a	saveTeams
	m	(Ldwp;Lpp;)V	a	loadTeamPlayers
		p	1		team
		p	2		nbt
	m	(Lpj;)Lpj;	a	save
		p	1		nbt
	m	(Lpj;Ldwu;)V	a	lambda$loadObjectives$0
		p	2		criterion
	m	(Lpp;)V	a	loadTeams
		p	1		nbt
	m	(Lpj;)Ldws;	b	load
		p	1		nbt
	m	(Lpp;)V	b	loadObjectives
		p	1		nbt
	m	(Lpj;)V	c	loadDisplaySlots
		p	1		nbt
	m	()Lpp;	d	saveObjectives
	m	(Lpj;)V	d	saveDisplaySlots
		p	1		nbt
	f	Ljava/lang/String;	a	FILE_ID
	f	Ldwr;	b	scoreboard
c	dwt	net/minecraft/world/scores/Team
	m	(Ldwt;)Z	a	isAlliedTo
		p	1		team
	m	()Ljava/lang/String;	b	getName
	m	(Lrm;)Lrt;	d	getFormattedName
		p	1		name
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Ldwt$b;	j	getNameTagVisibility
	m	()Ldwt$b;	k	getDeathMessageVisibility
	m	()Ldwt$a;	l	getCollisionRule
	m	()Lp;	n	getColor
c	dwt$a	net/minecraft/world/scores/Team$CollisionRule
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()Lrm;	a	getDisplayName
	m	(Ldwt$a;)Ldwt$a;	a	lambda$static$1
	m	(Ljava/lang/String;)Ldwt$a;	a	byName
		p	0		name
	m	()[Ldwt$a;	b	$values
	m	(Ldwt$a;)Ljava/lang/String;	b	lambda$static$0
		p	0		collisionRule
	f	Ldwt$a;	a	ALWAYS
	f	Ldwt$a;	b	NEVER
	f	Ldwt$a;	c	PUSH_OTHER_TEAMS
	f	Ldwt$a;	d	PUSH_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Ldwt$a;	h	$VALUES
c	dwt$b	net/minecraft/world/scores/Team$Visibility
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()[Ljava/lang/String;	a	getAllNames
	m	(Ldwt$b;)Ldwt$b;	a	lambda$static$1
	m	(Ljava/lang/String;)Ldwt$b;	a	byName
		p	0		name
	m	()Lrm;	b	getDisplayName
	m	(Ldwt$b;)Ljava/lang/String;	b	lambda$static$0
		p	0		visibilityRule
	m	()[Ldwt$b;	c	$values
	f	Ldwt$b;	a	ALWAYS
	f	Ldwt$b;	b	NEVER
	f	Ldwt$b;	c	HIDE_FOR_OTHER_TEAMS
	f	Ldwt$b;	d	HIDE_FOR_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Ldwt$b;	h	$VALUES
c	dwu	net/minecraft/world/scores/criteria/ObjectiveCriteria
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/String;ZLdwu$a;)V	<init>	<init>
		p	1		name
		p	2		readOnly
		p	3		defaultRenderType
	m	(Lajn;Laaj;)Ljava/util/Optional;	a	getStat
		p	0		statType
		p	1		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;ILajn;)Ljava/util/Optional;	a	lambda$byName$0
		p	2		type
	m	(Ljava/lang/String;ZLdwu$a;)Ldwu;	a	registerCustom
		p	0		name
		p	1		readOnly
		p	2		defaultRenderType
	m	(Ljava/lang/String;)Ldwu;	b	registerCustom
		p	0		name
	m	()Ljava/util/Set;	c	getCustomCriteriaNames
	m	()Ljava/lang/String;	d	getName
	m	()Z	e	isReadOnly
	m	()Ldwu$a;	f	getDefaultRenderType
	f	Ldwu;	a	DUMMY
	f	Ldwu;	b	TRIGGER
	f	Ldwu;	c	DEATH_COUNT
	f	Ldwu;	d	KILL_COUNT_PLAYERS
	f	Ldwu;	e	KILL_COUNT_ALL
	f	Ldwu;	f	HEALTH
	f	Ldwu;	g	FOOD
	f	Ldwu;	h	AIR
	f	Ldwu;	i	ARMOR
	f	Ldwu;	j	EXPERIENCE
	f	Ldwu;	k	LEVEL
	f	[Ldwu;	l	TEAM_KILL
	f	[Ldwu;	m	KILLED_BY_TEAM
	f	Ljava/util/Map;	n	CUSTOM_CRITERIA
	f	Ljava/util/Map;	o	CRITERIA_CACHE
	f	Ljava/lang/String;	p	name
	f	Z	q	readOnly
	f	Ldwu$a;	r	renderType
c	dwu$a	net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Ldwu$a;	a	byId
		p	0		name
	m	()[Ldwu$a;	b	$values
	f	Ldwu$a;	a	INTEGER
	f	Ldwu$a;	b	HEARTS
	f	Ljava/lang/String;	c	id
	f	Ljava/util/Map;	d	BY_ID
	f	[Ldwu$a;	e	$VALUES
c	dwv	net/minecraft/world/scores/criteria/package-info
c	dww	net/minecraft/world/scores/package-info
c	dwx	net/minecraft/world/ticks/BlackholeTickAccess
	m	()Ldxg;	a	emptyContainer
	m	()Ldwz;	b	emptyLevelList
	f	Ldxg;	a	CONTAINER_BLACKHOLE
	f	Ldwz;	b	LEVEL_BLACKHOLE
c	dwx$1	net/minecraft/world/ticks/BlackholeTickAccess$1
	m	()I	a	count
	m	(Ldxd;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	dwx$2	net/minecraft/world/ticks/BlackholeTickAccess$2
	m	()I	a	count
	m	(Ldxd;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	dwy	net/minecraft/world/ticks/LevelChunkTicks
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		ticks
	m	()I	a	count
	m	(J)V	a	unpack
		p	1		time
	m	(JLjava/util/function/Function;)Lpp;	a	save
	m	(Ldxd;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Ljava/util/function/BiConsumer;)V	a	setOnTickAdded
		p	1		tickConsumer
	m	(Ljava/util/function/Predicate;)V	a	removeIf
		p	1		predicate
	m	(Lpp;Ljava/util/function/Function;Lcfh;)Ldwy;	a	load
		p	0		tickQueue
		p	1		nameToTypeFunction
		p	2		pos
	m	()Ldxd;	b	peek
	m	(JLjava/util/function/Function;)Lqc;	b	save
		p	1		time
		p	3		typeToNameFunction
	m	(Ldxd;)V	b	scheduleUnchecked
		p	1		orderedTick
	m	()Ldxd;	c	poll
	m	()Ljava/util/stream/Stream;	d	getAll
	f	Ljava/util/Queue;	a	tickQueue
	f	Ljava/util/List;	b	pendingTicks
	f	Ljava/util/Set;	c	ticksPerPosition
	f	Ljava/util/function/BiConsumer;	d	onTickAdded
c	dwz	net/minecraft/world/ticks/LevelTickAccess
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	dxa	net/minecraft/world/ticks/LevelTicks
	m	(Ljava/util/function/LongPredicate;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		tickingFutureReadyPredicate
		p	2		profilerGetter
	m	()I	a	count
	m	(I)Z	a	canScheduleMoreTicks
		p	1		maxTicks
	m	(J)V	a	sortContainersToTick
		p	1		time
	m	(JI)V	a	drainContainers
		p	1		time
		p	3		maxTicks
	m	(JILawc;)V	a	collectTicks
		p	1		time
		p	3		maxTicks
		p	4		profiler
	m	(JILjava/util/function/BiConsumer;)V	a	tick
		p	1		time
		p	3		maxTicks
		p	4		ticker
	m	(Lcfh;)V	a	removeContainer
		p	1		pos
	m	(Lcfh;Ldwy;)V	a	addContainer
		p	1		pos
		p	2		scheduler
	m	(Ldjw;)V	a	clearArea
		p	1		box
	m	(Ldjw;Ldxa$a;)V	a	forContainersInArea
		p	1		box
		p	2		visitor
	m	(Ldjw;Ldxd;)Z	a	lambda$copyArea$5
		p	1		tick
	m	(Ldjw;Lhs;)V	a	copyArea
		p	1		box
		p	2		offset
	m	(Ldwy;Ldwy;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	(Ldwy;Ldxd;)V	a	lambda$new$2
		p	1		chunkTickScheduler
		p	2		tick
	m	(Ldxd;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lhs;JJLdxd;)V	a	lambda$copyArea$7
		p	6		tick
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;)V	a	lambda$new$1
		p	0		map
	m	(Ljava/util/Queue;Ldwy;JI)V	a	drainFromCurrentContainer
		p	1		tickableChunkTickSchedulers
		p	2		chunkTickScheduler
		p	3		tick
		p	5		maxTicks
	m	(Ljava/util/function/BiConsumer;)V	a	runCollectedTicks
		p	1		ticker
	m	(Ljava/util/function/Predicate;JLdwy;)V	a	lambda$clearArea$4
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	(Ljava/util/function/Predicate;Ljava/util/List;JLdwy;)V	a	lambda$copyArea$6
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	()V	b	rescheduleLeftoverContainers
	m	(Ldjw;Ldxd;)Z	b	lambda$clearArea$3
		p	1		tick
	m	(Ldxd;)V	b	updateContainerScheduling
		p	1		tick
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	m	()V	c	cleanupAfterTick
	m	(Ldxd;)V	c	scheduleForThisTick
		p	1		tick
	m	()V	d	calculateTickSetIfNeeded
	f	Ljava/util/Comparator;	a	CONTAINER_DRAIN_ORDER
	f	Ljava/util/function/LongPredicate;	b	tickCheck
	f	Ljava/util/function/Supplier;	c	profiler
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	allContainers
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	nextTickForContainer
	f	Ljava/util/Queue;	f	containersToTick
	f	Ljava/util/Queue;	g	toRunThisTick
	f	Ljava/util/List;	h	alreadyRunThisTick
	f	Ljava/util/Set;	i	toRunThisTickSet
	f	Ljava/util/function/BiConsumer;	j	chunkScheduleUpdater
c	dxa$a	net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
	m	(JLdwy;)V	accept	accept
		p	1		chunkPos
		p	3		chunkTickScheduler
c	dxb	net/minecraft/world/ticks/ProtoChunkTicks
	m	()I	a	count
	m	(Ldxc;)V	a	schedule
		p	1		tick
	m	(Ldxd;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lpp;Ljava/util/function/Function;Lcfh;)Ldxb;	a	load
		p	0		tickList
		p	1		typeToNameFunction
		p	2		pos
	m	()Ljava/util/List;	b	scheduledTicks
	m	(JLjava/util/function/Function;)Lqc;	b	save
		p	1		time
		p	3		typeToNameFunction
	f	Ljava/util/List;	a	ticks
	f	Ljava/util/Set;	b	ticksPerPosition
c	dxc	net/minecraft/world/ticks/SavedTick
	m	()Ljava/lang/Object;	a	type
	m	(JJ)Ldxd;	a	unpack
		p	1		time
		p	3		subTickOrder
	m	(JLjava/util/function/Consumer;Ldxc;)V	a	lambda$loadTickList$0
		p	3		tick
	m	(Ldxd;Ljava/util/function/Function;J)Lpj;	a	saveTick
		p	0		orderedTick
		p	1		typeToNameFunction
		p	2		delay
	m	(Ljava/lang/Object;Lgt;)Ldxc;	a	probe
		p	0		type
		p	1		pos
	m	(Ljava/lang/String;Lgt;ILdxh;)Lpj;	a	saveTick
		p	0		type
		p	1		pos
		p	2		delay
		p	3		priority
	m	(Ljava/util/function/Function;)Lpj;	a	save
		p	1		typeToNameFunction
	m	(Lpj;Ljava/lang/Object;)Ldxc;	a	lambda$loadTick$1
		p	1		type
	m	(Lpj;Ljava/util/function/Function;)Ljava/util/Optional;	a	loadTick
		p	0		nbt
		p	1		nameToType
	m	(Lpp;Ljava/util/function/Function;Lcfh;Ljava/util/function/Consumer;)V	a	loadTickList
		p	0		tickList
		p	1		nameToTypeFunction
		p	2		pos
		p	3		tickConsumer
	m	()Lgt;	b	pos
	m	()I	c	delay
	m	()Ldxh;	d	priority
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	b	type
	f	Lgt;	c	pos
	f	I	d	delay
	f	Ldxh;	e	priority
	f	Ljava/lang/String;	f	TAG_ID
	f	Ljava/lang/String;	g	TAG_X
	f	Ljava/lang/String;	h	TAG_Y
	f	Ljava/lang/String;	i	TAG_Z
	f	Ljava/lang/String;	j	TAG_DELAY
	f	Ljava/lang/String;	k	TAG_PRIORITY
c	dxc$1	net/minecraft/world/ticks/SavedTick$1
	m	(Ldxc;)I	a	hashCode
	m	(Ldxc;Ldxc;)Z	a	equals
c	dxd	net/minecraft/world/ticks/ScheduledTick
	m	(Ljava/lang/Object;Lgt;JJ)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		triggerTick
		p	5		subTickOrder
	m	()Ljava/lang/Object;	a	type
	m	(Ldxd;Ldxd;)I	a	lambda$static$1
		p	0		first
		p	1		second
	m	(Ljava/lang/Object;Lgt;)Ldxd;	a	probe
		p	0		type
		p	1		pos
	m	()Lgt;	b	pos
	m	(Ldxd;Ldxd;)I	b	lambda$static$0
		p	0		first
		p	1		second
	m	()J	c	triggerTick
	m	()Ldxh;	d	priority
	m	()J	e	subTickOrder
	f	Ljava/util/Comparator;	a	DRAIN_ORDER
	f	Ljava/util/Comparator;	b	INTRA_TICK_DRAIN_ORDER
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	c	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	d	type
	f	Lgt;	e	pos
	f	J	f	triggerTick
	f	Ldxh;	g	priority
	f	J	h	subTickOrder
c	dxd$1	net/minecraft/world/ticks/ScheduledTick$1
	m	(Ldxd;)I	a	hashCode
	m	(Ldxd;Ldxd;)Z	a	equals
c	dxe	net/minecraft/world/ticks/SerializableTickContainer
	m	(JLjava/util/function/Function;)Lqc;	b	save
		p	1		time
		p	3		typeToNameFunction
c	dxf	net/minecraft/world/ticks/TickAccess
	m	()I	a	count
	m	(Ldxd;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	dxg	net/minecraft/world/ticks/TickContainerAccess
c	dxh	net/minecraft/world/ticks/TickPriority
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	getValue
	m	(I)Ldxh;	a	byValue
		p	0		index
	m	()[Ldxh;	b	$values
	f	Ldxh;	a	EXTREMELY_HIGH
	f	Ldxh;	b	VERY_HIGH
	f	Ldxh;	c	HIGH
	f	Ldxh;	d	NORMAL
	f	Ldxh;	e	LOW
	f	Ldxh;	f	VERY_LOW
	f	Ldxh;	g	EXTREMELY_LOW
	f	I	h	value
	f	[Ldxh;	i	$VALUES
c	dxi	net/minecraft/world/ticks/WorldGenTickAccess
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		mapper
	m	()I	a	count
	m	(Ldxd;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	f	Ljava/util/function/Function;	a	containerGetter
c	dxj	net/minecraft/world/ticks/package-info
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	a	lambda$main$0
		p	0		input
	m	(Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLae;Z)Liy;	a	createStandardGenerator
		p	0		output
		p	1		inputs
		p	2		includeClient
		p	3		includeServer
		p	4		includeDev
		p	5		includeReports
		p	6		validate
		p	7		gameVersion
		p	8		ignoreCache
	m	([Ljava/lang/String;)V	main	main
		p	0		args
c	net/minecraft/server/Main	net/minecraft/server/Main
	m	()Z	a	lambda$main$2
	m	(Labb$a;Ldqt$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Laer;Ljoptsimple/OptionSpec;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$main$1
		p	6		applyExecutor
	m	(Ldqt$c;Lahg;Labc;Laer;Laaz;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Laep;	a	lambda$main$3
		p	12		thread
	m	(Ldqt$c;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Ldap;)V	a	forceUpgrade
		p	0		session
		p	1		dataFixer
		p	2		eraseCache
		p	3		continueCheck
		p	4		generatorOptions
	m	(Ldqt$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Laer;Ljoptsimple/OptionSpec;Lahu;Lcfo;)Lcom/mojang/datafixers/util/Pair;	a	lambda$main$0
		p	5		resourceManager
		p	6		dataPackSettings
	m	([Ljava/lang/String;)V	main	main
		p	0		args
	f	Lorg/slf4j/Logger;	a	LOGGER
c	net/minecraft/server/Main$1	net/minecraft/server/Main$1
	f	Laep;	a	val$dedicatedServer
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	m	(Ljava/lang/Thread;Ldqt$c;Lahg;Labc;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Laaz;Lafy;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		proxy
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()Z	A	isNetherEnabled
	m	()Z	B	isShutdown
	m	()Lafo;	C	overworld
	m	()Ljava/util/Set;	D	levelKeys
	m	()Ljava/lang/Iterable;	E	getAllLevels
	m	()Ljava/lang/String;	F	getServerVersion
	m	()I	G	getPlayerCount
	m	()Z	G_	shouldInformAdmins
	m	()I	H	getMaxPlayers
	m	()[Ljava/lang/String;	I	getPlayerNames
	m	()Lalo;	J	getModdedStatus
	m	()Ljava/security/KeyPair;	K	getKeyPair
	m	()I	L	getPort
	m	()Lcom/mojang/authlib/GameProfile;	M	getSingleplayerProfile
	m	()Z	N	isSingleplayer
	m	()V	O	initializeKeyPair
	m	()Z	P	isSpawningMonsters
	m	()Z	Q	isDemo
	m	()Ljava/util/Optional;	R	getServerResourcePack
	m	()Z	S	isResourcePackRequired
	m	()Z	T	usesAuthentication
	m	()Z	U	getPreventProxyConnections
	m	()Z	V	isSpawningAnimals
	m	()Z	W	areNpcsEnabled
	m	()Z	X	isPvpAllowed
	m	()Z	Y	isFlightAllowed
	m	()Ljava/lang/String;	Z	getMotd
	m	(I)V	a	setPort
		p	1		serverPort
	m	(Laai;)Lafo;	a	getLevel
		p	1		key
	m	(Laba;)Z	a	shouldRun
	m	(Lac;)Lac;	a	fillServerSystemReport
		p	1		details
	m	(Lafo;)I	a	getSpawnRadius
		p	1		world
	m	(Lafo;Ldqy;ZZ)V	a	setInitialSpawn
		p	0		world
		p	1		worldProperties
		p	2		bonusChest
		p	3		debugWorld
	m	(Lafo;Lgt;Lbtf;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Lafp;)Lagm;	a	createTextFilterForPlayer
		p	1		player
	m	(Lafx;)V	a	createLevels
		p	1		worldGenerationProgressListener
	m	(Lahg;)Lcfo;	a	getSelectedPacks
		p	0		dataPackManager
	m	(Lahg;Lcfo;Z)Lcfo;	a	configurePackRepository
		p	0		resourcePackManager
		p	1		dataPackSettings
		p	2		safeMode
	m	(Lahl;Laas;)Lnet/minecraft/server/MinecraftServer$a;	a	lambda$reloadResources$16
		p	1		dataPackContents
	m	(Lahl;Laas;Ljava/lang/Throwable;)V	a	lambda$reloadResources$15
		p	1		dataPackContents
		p	2		throwable
	m	(Laih;)V	a	setPlayerList
		p	1		playerManager
	m	(Lalq$a;)Ljava/lang/String;	a	lambda$dumpNativeModules$20
		p	0		module
	m	(Lawb;)V	a	lambda$new$0
		p	1		profileResult
	m	(Lazj;Z)V	a	setDifficulty
		p	1		difficulty
		p	2		forceUpdate
	m	(Lcfx;)V	a	setDefaultGameType
		p	1		gameMode
	m	(Lcfx;ZI)Z	a	publishServer
		p	1		gameMode
		p	2		cheatsAllowed
		p	3		port
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ldqp;)V	a	readScoreboard
		p	1		persistentStateManager
	m	(Ldqr;)Ljava/nio/file/Path;	a	getWorldPath
		p	1		worldSavePath
	m	(Ldqz;)V	a	setupDebugLevel
		p	1		properties
	m	(Ldr;)V	a	kickUnlistedPlayers
		p	1		source
	m	(Lhn$a;Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage;	a	lambda$reloadResources$17
		p	2		resourcePacks
	m	(Ljava/lang/Runnable;)Laba;	a	wrapRunnable
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$spin$3
		p	0		thread
		p	1		throwable
	m	(Ljava/lang/Throwable;)Lq;	a	constructOrExtractCrashReport
		p	0		throwable
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	reloadResources
		p	1		dataPacks
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$getSelectedPacks$19
		p	1		name
	m	(Ljava/util/Collection;Lnet/minecraft/server/MinecraftServer$a;)V	a	lambda$reloadResources$18
		p	2		resourceManagerHolder
	m	(Ljava/util/concurrent/atomic/AtomicReference;)V	a	lambda$spin$2
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Consumer;Lawb;)V	a	lambda$startRecordingMetrics$23
		p	2		result
	m	(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	startRecordingMetrics
		p	1		resultConsumer
		p	2		dumpConsumer
	m	(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;	a	spin
		p	0		serverFactory
	m	(Lq;)V	a	onServerCrash
		p	1		report
	m	(Lri;Lrm;)V	a	logMessageFrom
		p	1		sender
		p	2		message
	m	(Lrm;)V	a	sendSystemMessage
		p	1		message
	m	(Lzm;)V	a	updateStatusIcon
		p	1		metadata
	m	(Lzm;Ljava/io/File;)V	a	lambda$updateStatusIcon$7
		p	1		file
	m	(Z)V	a	halt
	m	(ZZZ)Z	a	saveAllChunks
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()Laaw;	aA	getFunctions
	m	()Lahg;	aB	getPackRepository
	m	()Lds;	aC	getCommands
	m	()Ldr;	aD	createCommandSourceStack
	m	()Lcct;	aE	getRecipeManager
	m	()Laay;	aF	getScoreboard
	m	()Ldqm;	aG	getCommandStorage
	m	()Ldrk;	aH	getLootTables
	m	()Ldrl;	aI	getPredicateManager
	m	()Ldrf;	aJ	getItemModifierManager
	m	()Lcfw;	aK	getGameRules
	m	()Labe;	aL	getCustomBossEvents
	m	()Z	aM	isEnforceWhitelist
	m	()F	aN	getAverageTickTime
	m	()Lale;	aO	getFrameTimer
	m	()Lawc;	aP	getProfiler
	m	()Z	aQ	isRecordingMetrics
	m	()V	aR	stopRecordingMetrics
	m	()V	aS	finishRecordingMetrics
	m	()V	aT	cancelRecordingMetrics
	m	()Z	aU	forceSynchronousWrites
	m	()Ldnx;	aV	getStructureManager
	m	()Ldqz;	aW	getWorldData
	m	()Lhn$a;	aX	registryAccess
	m	()Lcfx;	aY	getForcedGameType
	m	()Lahu;	aZ	getResourceManager
	m	(Ljava/lang/String;)V	a_	setLocalIp
		p	1		serverIp
	m	()Z	aa	previewsChat
	m	()Z	ab	isStopped
	m	()Laih;	ac	getPlayerList
	m	()Lagg;	ad	getConnection
	m	()Z	ae	isReady
	m	()Z	af	hasGui
	m	()I	ag	getTickCount
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()Ljava/net/Proxy;	ak	getProxy
	m	()I	al	getPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	am	getSessionService
	m	()Lalw;	an	getServiceSignatureValidator
	m	()Lcom/mojang/authlib/GameProfileRepository;	ao	getProfileRepository
	m	()Laid;	ap	getProfileCache
	m	()Lzm;	aq	getStatus
	m	()V	ar	invalidateStatus
	m	()I	as	getAbsoluteMaxWorldSize
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	()I	av	getCompressionThreshold
	m	()Z	aw	enforceSecureProfile
	m	()J	ax	getNextTickTime
	m	()Lcom/mojang/datafixers/DataFixer;	ay	getFixerUpper
	m	()Laau;	az	getAdvancements
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	(Laba;)V	b	doRunTask
	m	(Lac;)Lac;	b	fillSystemReport
		p	1		details
	m	(Lafo;)Ljava/lang/String;	b	lambda$tickChildren$8
	m	(Lafp;)Lafq;	b	createGameModeForPlayer
		p	1		player
	m	(Lafx;)V	b	prepareLevels
		p	1		worldGenerationProgressListener
	m	(Lcom/mojang/authlib/GameProfile;)V	b	setSingleplayerProfile
		p	1		hostProfile
	m	(Ljava/lang/Runnable;)V	b	addTickable
		p	1		tickable
	m	(Ljava/lang/String;)V	b	setId
		p	1		serverId
	m	(Ljava/nio/file/Path;)V	b	saveDebugReport
		p	1		path
	m	(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;	b	lambda$reloadResources$14
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
		p	1		shouldKeepTicking
	m	(Z)V	b	setDifficultyLocked
		p	1		locked
	m	(ZZZ)Z	b	saveEverything
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()Z	ba	isCurrentlySaving
	m	()Z	bb	isTimeProfilerRunning
	m	()V	bc	startTimeProfiler
	m	()Lawb;	bd	stopTimeProfiler
	m	()I	be	getMaxChainedNeighborUpdates
	m	()Lrg;	bf	getChatDecorator
	m	()Z	bg	haveTime
	m	()Z	bh	pollTaskInternal
	m	()V	bi	updateMobSpawningFlags
	m	()V	bj	startMetricsRecordingTick
	m	()V	bk	endMetricsRecordingTick
	m	()Ljava/lang/String;	bt	lambda$fillSystemReport$13
	m	()Ljava/lang/String;	bu	lambda$fillSystemReport$12
	m	()Ljava/lang/String;	bv	lambda$fillSystemReport$11
	m	()Ljava/lang/String;	bw	lambda$fillSystemReport$10
	m	()Ljava/lang/String;	bx	lambda$fillSystemReport$9
	m	()Z	by	lambda$waitUntilNextTick$6
	m	()Z	bz	lambda$stopServer$5
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	(Lafo;)Z	c	lambda$stopServer$4
		p	0		world
	m	(Lafp;)V	c	sendDifficultyUpdate
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)I	c	getProfilePermissions
		p	1		profile
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/lang/String;)Ljava/io/File;	c	getFile
		p	1		path
	m	(Ljava/nio/file/Path;)V	c	dumpMiscStats
		p	1		path
	m	(Z)V	c	setDemo
		p	1		demo
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/String;)V	d	setMotd
		p	1		motd
	m	(Ljava/nio/file/Path;)V	d	dumpGameRules
		p	1		path
	m	(Z)V	d	setUsesAuthentication
		p	1		onlineMode
	m	()Z	e	initServer
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
		p	1		path
	m	(Z)V	e	setPreventProxyConnections
		p	1		preventProxyConnections
	m	()V	f	onServerExit
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
		p	1		path
	m	(Z)V	f	setPvpAllowed
		p	1		pvpEnabled
	m	()V	f_	loadLevel
	m	()Z	g	isHardcore
	m	(Ljava/nio/file/Path;)V	g	dumpNativeModules
		p	1		path
	m	(Z)V	g	setFlightAllowed
		p	1		flightEnabled
	m	()Lcfx;	g_	getDefaultGameType
	m	()I	h	getOperatorUserPermissionLevel
	m	(Ljava/nio/file/Path;)V	h	lambda$startMetricsRecordingTick$22
		p	1		path
	m	(Z)V	h	setEnforceWhitelist
		p	1		enforceWhitelist
	m	()Ljava/lang/String;	h_	getLocalIp
	m	()I	i	getFunctionCompilationLevel
	m	(Ljava/nio/file/Path;)V	i	lambda$startMetricsRecordingTick$21
	m	()Z	i_	acceptsSuccess
	m	()Z	j	shouldRconBroadcast
	m	(Ljava/nio/file/Path;)V	j	lambda$new$1
		p	0		path
	m	()Z	j_	acceptsFailure
	m	()Z	k	isDedicatedServer
	m	()I	l	getRateLimitPacketsPerSecond
	m	()Z	m	isEpollEnabled
	m	()Z	n	isCommandBlockEnabled
	m	()Z	o	isPublished
	m	()V	q	forceDifficulty
	m	()V	s	stopServer
	m	()Z	u	isRunning
	m	()V	v	runServer
	m	()V	w	waitUntilNextTick
	m	()Z	x	pollTask
	m	()Ljava/util/Optional;	y	getWorldScreenshotFile
	m	()Ljava/io/File;	z	getServerDirectory
	f	Lawc;	A	profiler
	f	Ljava/util/function/Consumer;	B	onMetricsRecordingStopped
	f	Ljava/util/function/Consumer;	C	onMetricsRecordingFinished
	f	Z	D	willStartRecordingMetrics
	f	Lnet/minecraft/server/MinecraftServer$c;	E	debugCommandProfiler
	f	Z	F	debugCommandProfilerDelayStart
	f	Lagg;	G	connection
	f	Lafy;	H	progressListenerFactory
	f	Lzm;	I	status
	f	Lalu;	J	random
	f	Lcom/mojang/datafixers/DataFixer;	K	fixerUpper
	f	Ljava/lang/String;	L	localIp
	f	I	M	port
	f	Lhn$a;	N	registryHolder
	f	Ljava/util/Map;	O	levels
	f	Laih;	P	playerList
	f	Z	Q	running
	f	Z	R	stopped
	f	I	S	tickCount
	f	Z	T	onlineMode
	f	Z	U	preventProxyConnections
	f	Z	V	pvp
	f	Z	W	allowFlight
	f	Ljava/lang/String;	X	motd
	f	I	Y	playerIdleTimeout
	f	Ljava/security/KeyPair;	Z	keyPair
	f	Lcom/mojang/authlib/GameProfile;	aa	singleplayerProfile
	f	Z	ab	isDemo
	f	Z	ac	isReady
	f	J	ad	lastOverloadWarning
	f	J	ae	lastServerStatus
	f	Ljava/lang/Thread;	af	serverThread
	f	J	ag	nextTickTime
	f	J	ah	delayedTasksMaxNextTickTime
	f	Z	ai	mayHaveDelayedTasks
	f	Lahg;	aj	packRepository
	f	Laay;	ak	scoreboard
	f	Ldqm;	al	commandStorage
	f	Labe;	am	customBossEvents
	f	Laaw;	an	functionManager
	f	Lale;	ao	frameTimer
	f	Z	ap	enforceWhitelist
	f	F	aq	averageTickTime
	f	Ljava/util/concurrent/Executor;	ar	executor
	f	Ljava/lang/String;	as	serverId
	f	Lnet/minecraft/server/MinecraftServer$a;	at	resources
	f	Ldnx;	au	structureTemplateManager
	f	Z	av	isSaving
	f	Ljava/lang/String;	b	VANILLA_BRAND
	f	I	c	MS_PER_TICK
	f	I	d	START_CHUNK_RADIUS
	f	I	e	ABSOLUTE_MAX_WORLD_SIZE
	f	Lcge;	f	DEMO_SETTINGS
	f	Lcom/mojang/authlib/GameProfile;	g	ANONYMOUS_PLAYER_PROFILE
	f	Ldqt$c;	h	storageSource
	f	Ldqw;	i	playerDataStorage
	f	Ljava/net/Proxy;	j	proxy
	f	[J	k	tickTimes
	f	Laaz;	l	services
	f	Ldqz;	m	worldData
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	F	o	AVERAGE_TICK_TIME_SMOOTHING
	f	I	p	TICK_STATS_SPAN
	f	I	q	OVERLOADED_THRESHOLD
	f	I	r	OVERLOADED_WARNING_INTERVAL
	f	J	s	STATUS_EXPIRE_TIME_NS
	f	I	t	MAX_STATUS_PLAYER_SAMPLE
	f	I	u	START_TICKING_CHUNK_COUNT
	f	I	v	AUTOSAVE_INTERVAL
	f	I	w	MAX_TICK_LATENCY
	f	J	x	DELAYED_TASKS_TICK_EXTENSION
	f	Ljava/util/List;	y	tickables
	f	Laxo;	z	metricsRecorder
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	m	(Lcfw$e;Lcfw$f;)V	a	visit
		p	1		key
		p	2		type
	f	Ljava/util/List;	a	val$entries
	f	Lcfw;	b	val$gameRules
	f	Lnet/minecraft/server/MinecraftServer;	c	this$0
c	net/minecraft/server/MinecraftServer$a	net/minecraft/server/MinecraftServer$ReloadableResources
	m	()Lahl;	a	resourceManager
	m	()Laas;	b	managers
	f	Lahl;	a	resourceManager
	f	Laas;	b	managers
c	net/minecraft/server/MinecraftServer$b	net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	m	()Ljava/lang/String;	a	url
	m	()Ljava/lang/String;	b	hash
	m	()Z	c	isRequired
	m	()Lrm;	d	prompt
	f	Ljava/lang/String;	a	url
	f	Ljava/lang/String;	b	hash
	f	Z	c	isRequired
	f	Lrm;	d	prompt
c	net/minecraft/server/MinecraftServer$c	net/minecraft/server/MinecraftServer$TimeProfiler
	m	(JI)V	<init>	<init>
		p	1		time
		p	3		tick
	m	(JI)Lawb;	a	stop
		p	1		endTime
		p	3		endTick
	f	J	a	startNanos
	f	I	b	startTick
c	net/minecraft/server/MinecraftServer$c$1	net/minecraft/server/MinecraftServer$TimeProfiler$1
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	J	a	val$stopNanos
	f	I	b	val$stopTick
	f	Lnet/minecraft/server/MinecraftServer$c;	c	this$0
c	net/minecraft/util/profiling/jfr/event/PacketSentEvent	net/minecraft/util/profiling/jfr/event/PacketSentEvent
	m	(IILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	SENT_BYTES
	f	Ljava/lang/String;	c	RECEIVED_BYTES
	f	Ljava/lang/String;	d	SENT_PACKETS
	f	Ljava/lang/String;	e	RECEIVED_PACKETS
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
	m	()V	a	commitEvent
	m	(I)V	a	trackSentPacket
		p	1		bytes
	m	(I)V	b	trackReceivedPacket
		p	1		bytes
	f	Ljava/util/concurrent/atomic/AtomicLong;	a	sentBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	sentPackets
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	receivedBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	receivedPackets
	f	Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent;	e	event
c	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent
	m	(IILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
	m	(F)V	<init>	<init>
		p	1		averageTickMilliseconds
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	f	Ljava/lang/String;	a	AVERAGE_TICK_DURATION
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent
	m	(Lcfh;Laai;Ljava/lang/String;)V	<init>	<init>
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	f	Ljava/lang/String;	a	WORLD_POS_X
	f	Ljava/lang/String;	b	WORLD_POS_Z
	f	Ljava/lang/String;	c	CHUNK_POS_X
	f	Ljava/lang/String;	d	CHUNK_POS_Z
	f	Ljava/lang/String;	e	STATUS
	f	Ljava/lang/String;	f	LEVEL
